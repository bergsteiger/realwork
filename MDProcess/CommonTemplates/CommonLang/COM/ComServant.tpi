////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/COM/ComServant.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::COM::ComServant
//
// COM-сервант
// ---
// Реализация COM-интерфейса
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: ComServant::Class
? COM-сервант
? Реализация COM-интерфейса
= Servant::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p Is ActiveX:b=false ? флаг определяет является ли COM-объект ActiveX контролом

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP

%f _wiki_up_print
	%S#[inherited][{"%S{Is ActiveX}"!="%S{!Is ActiveX}"}%f_up_prefix(%S) *Is ActiveX* = *%S{Is ActiveX}* - флаг определяет является ли COM-объект ActiveX контролом
	]


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Servant::Class
// выводит список наследования
%f _base_class_decl
//#UC START# *47145120007Dfor471740DE003E*
	public ATL::CComObjectRootEx\<<{}{%RS=ComInterface}%R%t_thread_model()>\>
		, public ATL::CComCoClass\<%SN, &CLSID_Co%RN\>
		, public ISupportErrorInfo
		, public ATL::IDispatchImpl\<%RN, &IID_%RN, &LIBID_%R%PNLib\>[{%S{Is ActiveX}=true}
		, public ATL::CComControl\<%SN\>		
		, public ATL::ISpecifyPropertyPagesImpl\<%SN\>
		, public ATL::IPersistStreamInitImpl\<%SN\>
		, public ATL::IOleControlImpl\<%SN\>
		, public ATL::IOleObjectImpl\<%SN\>
		, public ATL::IOleInPlaceActiveObjectImpl\<%SN\>
		, public ATL::IViewObjectExImpl\<%SN\>
		, public ATL::IOleInPlaceObjectWindowlessImpl\<%SN\>
		, public ATL::IProvideClassInfo2Impl\<&CLSID_Co%RN, NULL\>		
		, public ATL::IObjectSafetyImpl\<%SN, INTERFACESAFE_FOR_UNTRUSTED_CALLER\>][{"<{}{}{%GC}>"!="0"}\n\t, ]

//#UC END# *47145120007Dfor471740DE003E*

// перекрытие базового стереотипа Servant::Class
// генерация списка включений в заколовочный файл серванта
%f _h_includes
//#UC START# *471451A001B5for471740DE003E*
	\#include "shared/Core/fix/win_afx.h"	
	<\#include %f_dump_include_path(%wL,%w)
	>%U[{_PRE_CUSTOM_INCLUDES}
	]
	%f_set_var(ODL_PATH,"%f_with_gen_id(odl,%R%PL)")\
	[{"%{ODL_PATH}N"!=""}\#include %f_dump_include_path(%f_delsubstr_from_end(%{ODL_PATH}N,4)_i.h,%R%P)
	]%P%P<{}{%aM=ComTarget::Category}{Sp}\#include %f_dump_include_path(%f_with_gen_id(h,%aL),%a)>
//#UC END# *471451A001B5for471740DE003E*

// перекрытие базового стереотипа Servant::Class
// выводит forward-определение
%f _self_forward
//#UC START# *4714514F00DAfor471740DE003E*
//#UC END# *4714514F00DAfor471740DE003E*

// перекрытие базового стереотипа Servant::Class
// генерация дополнительного кода
%f _servant_content
//#UC START# *4714518703A9for471740DE003E*
	//////////////////////////////////////////////////////////////////////////////////////////
	// ComServant declaration
	public:
		%U[{REGISTRY_RESOURCEID}
		DECLARE_REGISTRY_RESOURCEID("%SU")
		]
		DECLARE_PROTECT_FINAL_CONSTRUCT()
		
		BEGIN_COM_MAP(%SN)
			COM_INTERFACE_ENTRY(%RN)
			COM_INTERFACE_ENTRY(IDispatch)
			COM_INTERFACE_ENTRY(ISupportErrorInfo)[{%S{Is ActiveX}=true}
			COM_INTERFACE_ENTRY(IViewObject)
			COM_INTERFACE_ENTRY(IViewObject2)
			COM_INTERFACE_ENTRY(IViewObjectEx)
			COM_INTERFACE_ENTRY(ISpecifyPropertyPages)
			COM_INTERFACE_ENTRY2(IOleWindow, IOleInPlaceObjectWindowless)
			COM_INTERFACE_ENTRY(IOleInPlaceObject)
			COM_INTERFACE_ENTRY(IOleInPlaceObjectWindowless)
			COM_INTERFACE_ENTRY(IOleInPlaceActiveObject)
			COM_INTERFACE_ENTRY(IOleControl)
			COM_INTERFACE_ENTRY(IOleObject)
			COM_INTERFACE_ENTRY(IPersistStreamInit)
			COM_INTERFACE_ENTRY2(IPersist, IPersistStreamInit)
			COM_INTERFACE_ENTRY(IProvideClassInfo)
			COM_INTERFACE_ENTRY(IProvideClassInfo2)
			COM_INTERFACE_ENTRY(IObjectSafety)
			]
		END_COM_MAP()
		[{%S{Is ActiveX}=true}
		BEGIN_PROP_MAP(%SN)
			PROP_DATA_ENTRY("_cx", m_sizeExtent.cx, VT_UI4)
			PROP_DATA_ENTRY("_cy", m_sizeExtent.cy, VT_UI4)
		END_PROP_MAP()
		
		BEGIN_MSG_MAP(%SN)
			%U[{MSG_MAP}
			]
		END_MSG_MAP()
		]
		// ISupportsErrorInfo
		STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid) {
			return S_FALSE;
		}
//#UC END# *4714518703A9for471740DE003E*

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471740DE003E*
c                                                      {}
r "%rx"="false":                                       {%SS must implement at least one ComInterface}
r {<{}{"%RM"!="ComInterface::Class"}{C}>!=0}:          {%SS can implement ComInterfaces only (need to use generalization)}
r {"<{}{"%GM"="ComInterface::Class"}{C}>"!="0"}:       {%SS can't be inherited from ComInterface (need to use realization)}
r <{}{}{%RC}>!=0&<{}{}{%RC}>!=1:                       {%SS can't directly implement more then one ComInterface}
//#UC END# *4704C0E30186for471740DE003E*

// перекрытие базового стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for471740DE003E*
//#UC END# *470484D50138for471740DE003E*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

