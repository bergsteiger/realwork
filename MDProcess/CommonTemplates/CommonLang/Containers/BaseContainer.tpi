////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/Containers/BaseContainer.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::Containers::BaseContainer
//
// базовых стереотип для контейнеров
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: BaseContainer::Class
? базовых стереотип для контейнеров
> Const Iterator::Class
> Iterator::Class

= ContainerGenerator::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +#-
/ - типы видимости
// Параметры визуализации
$ C 210,230,240
$ l 35,75,100
$ f 35,75,100

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p force usage:b=false ? явно определяет, что элемент будет кем-то использован (нужно для проверки)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP

%f _wiki_up_print
	%S#[inherited][{"%S{force usage}"!="%S{!force usage}"}%f_up_prefix(%S) *force usage* = *%S{force usage}* - явно определяет, что элемент будет кем-то использован (нужно для проверки)
	]

// сгенерить определение контэйнера для C++
%f _dump_container_def_h
//#UC START# *49015EE401E1for470F07F9004E*
//#UC END# *49015EE401E1for470F07F9004E*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for470F07F9004E*
c                                                                       {}
r {%ax=false&<{}{%P{Full MDP}=true}{C}>!=0&%S{force usage}=false}:      {%SS ни кем не используется}
r {<{}{%CC=Attribute&%CS!=static}{%CC}>=0}:                             {%SS должен определять тип данных}
//#UC END# *4704C0E30186for470F07F9004E*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor470F07F9004E*
F %S%f_dump_container_def_h()
	[{%f_need_container_def(%S)=true}[#%S%f_open_ifdef()
	]%SF[
	#%S%f_close_ifdef()]]
//#UC END# *47022C88029Ffor470F07F9004E*

// реализация абстрактного стереотипа CORBA IDL::MDAGenerator
// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for470F07F9004E*
	%f_error("<{}{}{r}%PN::>%SN - Cant't use %BM in IDL, need to write specific implementation")
//#UC END# *47022BBE0261for470F07F9004E*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor470F07F9004E*
//#UC END# *470F1571031Cfor470F07F9004E*

// реализация абстрактного стереотипа Java::MDAGenerator
// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for470F07F9004E*
/	%f_error("<{}{}{r}%PN::>%SN - Cant't use %BM in JAVA, need to write specific implementation")
//#UC END# *470321950119for470F07F9004E*

// реализация абстрактного стереотипа Дельфи-DLL Адаптер::MDAGenerator
// С++ TIE-обвязка для DLL (_tie.cpp)
+ dll.cpp
//#UC START# *47032ED002DEfor470F07F9004E*
//#UC END# *47032ED002DEfor470F07F9004E*

// реализация абстрактного стереотипа Дельфи-DLL Адаптер::MDAGenerator
// С++ TIE-обвязка для DLL (_tie.h)
+ dll.h
//#UC START# *47032EC4032Cfor470F07F9004E*
//#UC END# *47032EC4032Cfor470F07F9004E*

// реализация абстрактного стереотипа Дельфи-DLL Адаптер::MDAGenerator
// Delphi интерфейсы для адаптера (.pas)
+ pas
//#UC START# *470F152700FAfor470F07F9004E*
	%f_error("<{}{}{r}%PN::>%SN - Cant't use %BM directly in pascal/Delphi, need to write TIE-wrapper")
//#UC END# *470F152700FAfor470F07F9004E*

// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for470F07F9004E*
G %PU
//#UC END# *46E6D4BB0339for470F07F9004E*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: BaseContainer::Class::Attribute
? определяет тип данных контейнера
= Delphi интерфейсы и реализация::MDAGenerator

// Параметры стереотипа
Y code_attr.gif
L code_attr
A const
/ - стереотипы "цели" (типа/результата)

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for470F0883001F*
//#UC END# *46E6D4BB0339for470F0883001F*

// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for470F0883001F*
//#UC END# *47022BBE0261for470F0883001F*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor470F0883001F*
//#UC END# *47022C88029Ffor470F0883001F*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for470F0883001F*
//#UC END# *470321950119for470F0883001F*

// С++ TIE-обвязка для DLL (_tie.h)
+ dll.h
//#UC START# *47032EC4032Cfor470F0883001F*
//#UC END# *47032EC4032Cfor470F0883001F*

// С++ TIE-обвязка для DLL (_tie.cpp)
+ dll.cpp
//#UC START# *47032ED002DEfor470F0883001F*
//#UC END# *47032ED002DEfor470F0883001F*

// Delphi интерфейсы для адаптера (.pas)
+ pas
//#UC START# *470F152700FAfor470F0883001F*
//#UC END# *470F152700FAfor470F0883001F*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor470F0883001F*
//#UC END# *470F1571031Cfor470F0883001F*

// Функции стереотипа
%f _st_space_key
	MDP



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

