////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/Containers/FixedArray.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::Containers::FixedArray
//
// Массив фиксированной длинны
// ---
// Тип данных задается атрибутом без стереотипа, размер массива задаётся с помощью значания по-
// умолчанию для ключа этого атрибута.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: FixedArray::Class
? Массив фиксированной длинны
? Тип данных задается атрибутом без стереотипа, размер массива задаётся с помощью значания по-умолчанию для ключа этого атрибута.
= BaseContainer::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа BaseContainer::Class
// сгенерить определение контэйнера для C++
%f _dump_container_def_h
//#UC START# *49015EE401E1for4A10F31901C6*
	%f_dump_container_fwds_h(%S)\
	%f_docs(%S)\
	#typedef boost::array \< %f_data_dump(%S), <{}{"%CS"=""}%C<%f_init(%C)>> \> %SN;
//#UC END# *49015EE401E1for4A10F31901C6*

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4A10F31901C6*
c                                                       {}
r {"%Cx"="false"}:                                      {%SS не задан тип данных}
r {"%C%Cx"="false"|%C<{}{"%CI"!=""}{%CC}>=0}:            {%SS не задан размер массива}
r {""=""}:                      {}
//#UC END# *4704C0E30186for4A10F31901C6*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: FixedArray::Class::Attribute
? Тип данных контэйнера, значение по-умолчанию для ключа атрибута определяет размер контэйнера
= BaseContainer::Class::Attribute

// Параметры стереотипа
l arl
/ - возможные типы связи атрибута

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for4A10F404034B*
//#UC END# *46E6D4BB0339for4A10F404034B*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor4A10F404034B*
//#UC END# *470F1571031Cfor4A10F404034B*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor4A10F404034B*
//#UC END# *470F15B800CBfor4A10F404034B*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for4A10F404034B*
//#UC END# *477398E501C0for4A10F404034B*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for4A10F404034B*
//#UC END# *4774D2A20372for4A10F404034B*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor4A10F404034B*
//#UC END# *49F5795900ECfor4A10F404034B*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for4A10F404034B*
//#UC END# *55B8D28B0157for4A10F404034B*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for4A10F404034B*
//#UC END# *55B8D2F80145for4A10F404034B*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for4A10F404034B*
//#UC END# *55B8DD9C0301for4A10F404034B*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4A10F404034B*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for4A10F404034B*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor4A10F404034B*
//#UC END# *4705CBD6003Efor4A10F404034B*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for4A10F404034B*
//#UC END# *470484D50138for4A10F404034B*

// Вложенные стереотипы
: FixedArray::Class::Attribute::Attribute
? Размер массива
// Параметры стереотипа
Y code_key_attr.gif
L code_key_attr
T 
/ - может не иметь "цели" (типа/результата)
l a
/ - возможные типы связи атрибута

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for4A10FE01039E*
//#UC END# *46E6D4BB0339for4A10FE01039E*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor4A10FE01039E*
//#UC END# *470F1571031Cfor4A10FE01039E*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor4A10FE01039E*
//#UC END# *470F15B800CBfor4A10FE01039E*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for4A10FE01039E*
//#UC END# *477398E501C0for4A10FE01039E*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for4A10FE01039E*
//#UC END# *4774D2A20372for4A10FE01039E*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor4A10FE01039E*
//#UC END# *49F5795900ECfor4A10FE01039E*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for4A10FE01039E*
//#UC END# *55B8D28B0157for4A10FE01039E*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for4A10FE01039E*
//#UC END# *55B8D2F80145for4A10FE01039E*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for4A10FE01039E*
//#UC END# *55B8DD9C0301for4A10FE01039E*

// Функции стереотипа
%f _st_space_key
	MDP




////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

