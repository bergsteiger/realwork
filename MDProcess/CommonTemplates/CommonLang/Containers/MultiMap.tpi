////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/Containers/MultiMap.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::Containers::MultiMap
//
// Мульти-Карта
// ---
// Сортированный индексный контейнер с заданным ключем .
// Абстракция уровня реализации. Тип данных определяется атрибутом без стереотипа. Тип ключа
// определяется ключем связи со этим атрибутом.
// Дополнительно могут быть указанны тип аллокатора данных и тип функтора-сравнения, как атрибуты
// со стереотипами <<allocator>> и <<compare>> соотвественно.
// Используется для хранения коллекций данных, где каждая коллекция связана с собственным ключем
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: MultiMap::Class
? Мульти-Карта
? Сортированный индексный контейнер с заданным ключем .
? Абстракция уровня реализации. Тип данных определяется атрибутом без стереотипа. Тип ключа определяется ключем связи со этим атрибутом.
? Дополнительно могут быть указанны тип аллокатора данных и тип функтора-сравнения, как атрибуты со стереотипами <<allocator>> и <<compare>> соотвественно.
? Используется для хранения коллекций данных, где каждая коллекция связана с собственным ключем
= Map::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа BaseContainer::Class
// сгенерить определение контэйнера для C++
%f _dump_container_def_h
//#UC START# *49015EE401E1for470F0379030D*
	%f_dump_container_fwds_h(%S)\
	%f_docs(%S)\
	[#%S%f_open_ifdef()
	]#typedef std::multimap \< %f_key_dump(%S), %f_data_dump(%S)%f_comp_dump(%S)<{}{"%CS"="allocator"}, %f_type(%C%T)> \> %SN;[
	#%S%f_close_ifdef()]
//#UC END# *49015EE401E1for470F0379030D*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

