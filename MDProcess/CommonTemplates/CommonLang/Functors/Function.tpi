////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/Functors/Function.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::Functors::Function
//
// Функция
// ---
// Обобщённый указатель на функцию, сигнатура функции определяется единственным методом
// определённым на элементе
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: Function::Class
? Функция
? Обобщённый указатель на функцию, сигнатура функции определяется единственным методом определённым на элементе
< *::Class,*::Category

= C++ интерфейсы и реализация::MDAGenerator
= Delphi интерфейсы и реализация::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +#-
/ - типы видимости
Y code_function.gif
L code_function
D
/ - запрещена форвард-декларация
// Параметры визуализации
$ C 240,205,240
$ l 120,40,120
$ f 120,40,120

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p of object:b=false ? Определяет привязана ли функция к объекту или нет (специфично для Delphi).

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP

%f _wiki_up_print
	%S%[Delphi интерфейсы и реализация::MDAGenerator]f_wiki_up_print()[{"%S{of object}"!="%S{!of object}"}%f_up_prefix(%S) *of object* = *%S{of object}* - Определяет привязана ли функция к объекту или нет (специфично для Delphi).
	]


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for47679DF1032E*
c	{}
r {""=""}: {}
//#UC END# *4704C0E30186for47679DF1032E*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor47679DF1032E*
//#UC END# *4705CBD6003Efor47679DF1032E*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for47679DF1032E*
//#UC END# *470484D50138for47679DF1032E*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor47679DF1032E*
//#UC END# *47022CB8034Bfor47679DF1032E*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor47679DF1032E*
	[#%S%f_open_ifdef()
	]<#%FF
	>%f_docs(%S)\
	#typedef boost::function\<%CX\> %SN;[
	#%S%f_close_ifdef()]
//#UC END# *47022C88029Ffor47679DF1032E*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor47679DF1032E*
//#UC END# *47022CCF00EAfor47679DF1032E*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor47679DF1032E*
R  
	[{%SV!=PublicAccess}[%f_with_gen_id(intf.pas,%SX)\n]]
//#UC END# *470F15B800CBfor47679DF1032E*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor47679DF1032E*
R  
	%f_pas_OpenType(%S)\
	[%S%f_open_ifdef()\n]\
	#%f_pas_TypeName(%S) = %C%f_pas_MethodInterface()\
	[\n%S%f_close_ifdef()]
//#UC END# *470F1571031Cfor47679DF1032E*

// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for47679DF1032E*
//#UC END# *46E6D4BB0339for47679DF1032E*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: Function::Class::Operation
? Метод
? Определяет сигнатуру функции, т.е набор параметров и тип возращаемого результата. У элемента-функции может быть только один (!) метод
= Delphi интерфейсы и реализация::MDAGenerator

// Параметры стереотипа
v +
/ - типы видимости
a f
/ - тип абстракции
Y code_method.gif
L code_method
T 
/ - может не иметь "цели" (типа/результата)
A const|cached|const,cached
/ - стереотипы "цели" (типа/результата)

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for47679E8A0154*
//#UC END# *46E6D4BB0339for47679E8A0154*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor47679E8A0154*
	%f_ret(%S) (<{, }%f_arg(%C)>)
//#UC END# *47022C88029Ffor47679E8A0154*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor47679E8A0154*
//#UC END# *47022CB8034Bfor47679E8A0154*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor47679E8A0154*
//#UC END# *47022CCF00EAfor47679E8A0154*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor47679E8A0154*
//#UC END# *470F1571031Cfor47679E8A0154*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor47679E8A0154*
//#UC END# *470F15B800CBfor47679E8A0154*

// Функции стереотипа
%f _st_space_key
	MDP


// Вложенные стереотипы
: Function::Class::Operation::Parameter
= Delphi интерфейсы и реализация::MDAGenerator

// Параметры стереотипа
Y code_param.gif
L code_param

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for566B0D8302CB*
//#UC END# *46E6D4BB0339for566B0D8302CB*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor566B0D8302CB*
//#UC END# *47022C88029Ffor566B0D8302CB*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor566B0D8302CB*
//#UC END# *47022CB8034Bfor566B0D8302CB*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor566B0D8302CB*
//#UC END# *47022CCF00EAfor566B0D8302CB*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor566B0D8302CB*
//#UC END# *470F1571031Cfor566B0D8302CB*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor566B0D8302CB*
//#UC END# *470F15B800CBfor566B0D8302CB*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for566B0D8302CB*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for566B0D8302CB*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor566B0D8302CB*
//#UC END# *4705CBD6003Efor566B0D8302CB*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for566B0D8302CB*
//#UC END# *470484D50138for566B0D8302CB*



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

