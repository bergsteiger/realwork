////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/Functors/FunctorBase.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::Functors::FunctorBase
//
// Базовый стереотип функтора
// ---
// Определяет функтор (нуль-функтор) без параметров и заданным типом результата
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: FunctorBase::Class
? Базовый стереотип функтора
? Определяет функтор (нуль-функтор) без параметров и заданным типом результата
< *::Class,*::Category

= C++ интерфейсы и реализация::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +#-
/ - типы видимости
a r
/ - тип абстракции
Y code_functor.gif
L code_functor
// Параметры визуализации
$ C 240,205,240
$ l 120,40,120
$ f 120,40,120

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p const functor:b=true ? указывает что метод функтора будет сгенерирован как константный
p force usage:b=false ? явно определяет, что элемент будет кем-то использован (нужно для проверки)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP

%f _wiki_up_print
	%S#[inherited][{"%S{const functor}"!="%S{!const functor}"}%f_up_prefix(%S) *const functor* = *%S{const functor}* - указывает что метод функтора будет сгенерирован как константный
	][{"%S{force usage}"!="%S{!force usage}"}%f_up_prefix(%S) *force usage* = *%S{force usage}* - явно определяет, что элемент будет кем-то использован (нужно для проверки)
	]

// дампит базовый класс функтора
%f _base_decl_h
//#UC START# *486345750387for4713197703A9*
//#UC END# *486345750387for4713197703A9*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4713197703A9*
c                                      {}
r {%S{force usage}=false&%ax=false}:   {%SS ни кем не используется}
r {"%f_check_ctor_unique(%S)"!=""}:    {Дублирование конструкторов (конструкторы с такой сигнатурой сгенерятся по атрибутам функтора): %f_check_ctor_unique(%S)}

f _check_ctor_unique
	%f_clear_list(ATTRS_CTOR)\
	%f_add_to_list(ATTRS_CTOR,"<{, }{%CC=Attribute&"%CS"=""}%C%TU>")\
	%f_remove_from_list(ATTRS_CTOR,"")\
	<{, }{%CC=Operation&%CS=ctor}[{%f_exists_in_list(ATTRS_CTOR,"%C<{, }{}%C%TU>")=true}%CN (%C<{, }%CN: %C%TN>)]>\
	%f_clear_list(ATTRS_CTOR)
//#UC END# *4704C0E30186for4713197703A9*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor4713197703A9*
//#UC END# *4705CBD6003Efor4713197703A9*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for4713197703A9*
//#UC END# *470484D50138for4713197703A9*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor4713197703A9*
P
	%f_set_var(SERV,S)\
	[%S%f_open_ifdef()
	][%f_functor_impl_body(%S)[{%P#f_IsInterfaces()=true}\n\n]]][
	%S%f_close_ifdef()]
//#UC END# *47022CB8034Bfor4713197703A9*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor4713197703A9*
F struct %SN;
	%f_set_var(SERV,S)\
	[#%S%f_open_ifdef()
	][<#%FF
	>]%f_docs(%S)\
	#struct %SN [%S%f_base_decl_h() ]{
	#	%t_functor_ret(%S) operator () %t_functor_functor(%S);
	%f_h_dump_def_init_ctor(%S)[{<{}{%CC=Attribute&"%CS"=""}{C}>!=0}
	#	%SN (<{, }{%CC=Attribute&"%CS"=""}%t_arg(%C%T,"%f_get_arg_specifier(%C)") %CN_>);
	]<{}{%CC=Operation&%CS=ctor}
	%CX
	><{}{%CC=Attribute&"%CS"=""&%CV=PublicAccess}
	%f_docs(%C)\
	#	%f_attr(%C) [{}{%f_to_omg(%C%TN)}%CN];
	>[
	private:
	<{}{%CC=Attribute&"%CS"=""&%CV=PrivateAccess}%f_docs(%C)\
	#	%f_attr(%C) [{}{%f_to_omg(%C%TN)}%CN];
	>]#};[
	#%S%f_close_ifdef()]

f _get_arg_specifier
	[{%Sl=lnk}{in}%t_get_arg_specifier(%S)]

t _get_arg_specifier
c                                                                                                                           {}
r {"%f_prefix(%t_arg(%T,"in"),const)"="const"&"%f_suffix(%t_arg(%T,"in"),%f_dump_apersand(%S))"="%f_dump_apersand(%S)"}:    {[{%Ss=const}{inout}in]}
r {"%f_prefix(%t_arg(%T,"in"),const)"="const"&"%f_suffix(%t_arg(%T,"in"),*)"="*"}:                                          {[{%Ss=const}{inout}in]}
r {""=""}:                                                                                                                  {in}

f _dump_apersand
	&
//#UC END# *47022C88029Ffor4713197703A9*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor4713197703A9*
P
	[%f_functor_impl_body(%S)]
//#UC END# *47022CCF00EAfor4713197703A9*

// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for4713197703A9*
G %PU
//#UC END# *46E6D4BB0339for4713197703A9*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: FunctorBase::Class::Attribute
? Атрибут данных
// Параметры стереотипа
v -+
/ - типы видимости
Y code_attr.gif
L code_attr
A const
/ - стереотипы "цели" (типа/результата)
l alr
/ - возможные типы связи атрибута

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for4713261D0109*
//#UC END# *46E6D4BB0339for4713261D0109*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor4713261D0109*
//#UC END# *47022C88029Ffor4713261D0109*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor4713261D0109*
//#UC END# *47022CB8034Bfor4713261D0109*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor4713261D0109*
//#UC END# *47022CCF00EAfor4713261D0109*

// Функции стереотипа
%f _st_space_key
	MDP


: FunctorBase::Class::uses::ClassDependency
? Использование
? Определяет что источник использует указанный объект (цель) каким-либо образом.
? На основе данной связи будет сгенерированы пути включения файлов используемого объекта.
// Параметры стереотипа
Y code_dep_uses.gif
L code_dep_uses

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for471326540280*
//#UC END# *46E6D4BB0339for471326540280*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor471326540280*
//#UC END# *47022C88029Ffor471326540280*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor471326540280*
//#UC END# *47022CB8034Bfor471326540280*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor471326540280*
//#UC END# *47022CCF00EAfor471326540280*

// Функции стереотипа
%f _st_space_key
	MDP


: FunctorBase::Class::ctor::Operation
? Конструктор
= ClassBase::Class::ctor::Operation

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for482BD31C000D*
//#UC END# *46E6D4BB0339for482BD31C000D*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor482BD31C000D*
//#UC END# *470321C1038Afor482BD31C000D*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for482BD31C000D*
//#UC END# *470484D50138for482BD31C000D*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

