////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/ImplementationTypes/Deallocator.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::ImplementationTypes::Deallocator
//
// Авто-деаллокатор
// ---
// Авто-деаллокатор с независимым счетчиком ссылок. Работает аналогично Box но для объектов с
// собственным счетчиком ссылок. Может использоваться для локального подсчета сслок с последующим
// вызовом специфическоого деаллокатора. Например для инстанцирования контейнеров интерфейсов или
// эмуляции агригации интерфейсов. Тип Deallocator'а определяется связью наследования.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: Deallocator::Class
? Авто-деаллокатор
? Авто-деаллокатор с независимым счетчиком ссылок. Работает аналогично Box но для объектов с собственным счетчиком ссылок. Может использоваться для локального подсчета сслок с последующим вызовом специфическоого деаллокатора. Например для инстанцирования контейнеров интерфейсов или эмуляции агригации интерфейсов. Тип Deallocator'а определяется связью наследования.
< *::Class,*::Category

= WikiImplClass::Class
= C++ интерфейсы и реализация::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +#-
/ - типы видимости
Y code_deallocator.gif
L code_deallocator
// Параметры визуализации
$ C 255,210,255
$ l 155,5,155
$ f 155,5,155

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471DE4B30222*
c                              {}
r "%t_refcounted(%G)"="false": {%SS can used only for RefCounted objects (like Interfaces,  Servants, or SimplClass with RefCount)}
r "%Cx"="true":                {%SS cant have any operations or attributes}
r %Rx=true:                    {%SS cant realize any other objects}
r {%S{force usage}=false&%ax=false}: {%SS ни кем не используется}
//#UC END# *4704C0E30186for471DE4B30222*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor471DE4B30222*
	%f_docs(%S)\
	[#%S%f_open_ifdef()
	]#struct %SNDeallocator {
	#	static void destroy (%t_arg(%G,"inout") content) {
	#	%U[
	#		throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION); 
	#	]
	#	}
	#};
	#typedef ::Core::Box\<%f_type(%G), %SNDeallocator, true\> %SN;[
	#%S%f_close_ifdef()]
//#UC END# *47022C88029Ffor471DE4B30222*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

