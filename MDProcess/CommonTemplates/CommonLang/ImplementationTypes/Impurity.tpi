////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/ImplementationTypes/Impurity.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::ImplementationTypes::Impurity
//
// Класс-примесь
// ---
// Используется  для шаблонной реализации функциональности наряду с основными предками.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: Impurity::Class
? Класс-примесь
? Используется  для шаблонной реализации функциональности наряду с основными предками.
> ImpurityParamType::Class

= SimpleClass::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
Y code_impurity.gif
L code_impurity
// Параметры визуализации
$ C 152,251,152
$ l 56,142,142
$ f 56,142,142
W false
/ - не может быть параметризован

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет, что элемент может реализовываться классом
%f _ClassImplementable
//#UC START# *49551CA202CFfor479136C103CF*
	false
//#UC END# *49551CA202CFfor479136C103CF*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли примесью
%f _IsMixIn
//#UC START# *4947E5D40127for479136C103CF*
	true
//#UC END# *4947E5D40127for479136C103CF*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли простым классом реализации
%f _IsSimpleClass
//#UC START# *4947E4DA0227for479136C103CF*
	false
//#UC END# *4947E4DA0227for479136C103CF*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит спец-метку класса
%f _pas_OutClassMark
//#UC START# *494B74D7016Bfor479136C103CF*
	mixin
//#UC END# *494B74D7016Bfor479136C103CF*

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for479136C103CF*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for479136C103CF*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: Impurity::Class::impurity param::Attribute
? Параметр класса примеси.
= ClassBaseGenerator::MDAGenerator

// Параметры стереотипа
Y code_impurity_param.gif
L code_impurity_param
l a
/ - возможные типы связи атрибута

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for47A1AE090224*
//#UC END# *46E6D4BB0339for47A1AE090224*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor47A1AE090224*
//#UC END# *47022C88029Ffor47A1AE090224*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor47A1AE090224*
//#UC END# *47022CB8034Bfor47A1AE090224*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor47A1AE090224*
//#UC END# *47022CCF00EAfor47A1AE090224*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for47A1AE090224*
//#UC END# *470321950119for47A1AE090224*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor47A1AE090224*
//#UC END# *470321C1038Afor47A1AE090224*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor47A1AE090224*
//#UC END# *470F1571031Cfor47A1AE090224*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor47A1AE090224*
//#UC END# *470F15B800CBfor47A1AE090224*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for47A1AE090224*
//#UC END# *477398E501C0for47A1AE090224*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for47A1AE090224*
//#UC END# *4774D2A20372for47A1AE090224*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor47A1AE090224*
//#UC END# *49F5795900ECfor47A1AE090224*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for47A1AE090224*
//#UC END# *55B8D28B0157for47A1AE090224*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for47A1AE090224*
//#UC END# *55B8D2F80145for47A1AE090224*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for47A1AE090224*
//#UC END# *55B8DD9C0301for47A1AE090224*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for47A1AE090224*
c	{}
r {""=""}: {}
//#UC END# *4704C0E30186for47A1AE090224*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor47A1AE090224*
	inst_arg
//#UC END# *4705CBD6003Efor47A1AE090224*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for47A1AE090224*
//#UC END# *470484D50138for47A1AE090224*

: Impurity::Class::inline::Operation
? Подстановка
? Определяемая реализацией класса, включающей в себя примесь.
= ClassBase::Class::Operation

// Параметры стереотипа
v #
/ - типы видимости
a a
/ - тип абстракции
m t
/ - может быть реализован/иметь перекрытую реализацию

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for47B078C20056*
//#UC END# *46E6D4BB0339for47B078C20056*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor47B078C20056*
//#UC END# *470321C1038Afor47B078C20056*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for47B078C20056*
//#UC END# *477398E501C0for47B078C20056*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for47B078C20056*
//#UC END# *4774D2A20372for47B078C20056*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor47B078C20056*
//#UC END# *49F5795900ECfor47B078C20056*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for47B078C20056*
//#UC END# *55B8D28B0157for47B078C20056*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for47B078C20056*
//#UC END# *55B8D2F80145for47B078C20056*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for47B078C20056*
//#UC END# *55B8DD9C0301for47B078C20056*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor47B078C20056*
//#UC END# *470F1571031Cfor47B078C20056*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor47B078C20056*
//#UC END# *470F15B800CBfor47B078C20056*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for47B078C20056*
//#UC END# *470484D50138for47B078C20056*

// Вложенные стереотипы
: Impurity::Class::inline::Operation::Parameter
= ClassBase::Class::Operation::Parameter

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for4B87A1F3007F*
//#UC END# *46E6D4BB0339for4B87A1F3007F*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor4B87A1F3007F*
//#UC END# *470F1571031Cfor4B87A1F3007F*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor4B87A1F3007F*
//#UC END# *470F15B800CBfor4B87A1F3007F*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for4B87A1F3007F*
//#UC END# *477398E501C0for4B87A1F3007F*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for4B87A1F3007F*
//#UC END# *4774D2A20372for4B87A1F3007F*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor4B87A1F3007F*
//#UC END# *49F5795900ECfor4B87A1F3007F*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for4B87A1F3007F*
//#UC END# *55B8D28B0157for4B87A1F3007F*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for4B87A1F3007F*
//#UC END# *55B8D2F80145for4B87A1F3007F*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for4B87A1F3007F*
//#UC END# *55B8DD9C0301for4B87A1F3007F*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4B87A1F3007F*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for4B87A1F3007F*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor4B87A1F3007F*
//#UC END# *4705CBD6003Efor4B87A1F3007F*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for4B87A1F3007F*
//#UC END# *470484D50138for4B87A1F3007F*


: Impurity::Class::override::Operation
? видимо операцию, которую можно переопределить
= ClassBase::Class::Operation

// Параметры стереотипа
v #+-
/ - типы видимости
a r
/ - тип абстракции
m t
/ - может быть реализован/иметь перекрытую реализацию

// Пользовательские свойства
p is static:b=false ? Определяет, что метод принадлежит мета-классу

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for47B09B8D034D*
//#UC END# *46E6D4BB0339for47B09B8D034D*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor47B09B8D034D*
//#UC END# *470321C1038Afor47B09B8D034D*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for47B09B8D034D*
//#UC END# *477398E501C0for47B09B8D034D*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for47B09B8D034D*
//#UC END# *4774D2A20372for47B09B8D034D*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor47B09B8D034D*
//#UC END# *49F5795900ECfor47B09B8D034D*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for47B09B8D034D*
//#UC END# *55B8D28B0157for47B09B8D034D*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for47B09B8D034D*
//#UC END# *55B8D2F80145for47B09B8D034D*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for47B09B8D034D*
//#UC END# *55B8DD9C0301for47B09B8D034D*

// Функции стереотипа
%f _st_space_key
	MDP

%f _wiki_up_print
	%S#[inherited][{"%S{is static}"!="%S{!is static}"}%f_up_prefix(%S) *is static* = *%S{is static}* - Определяет, что метод принадлежит мета-классу
	]


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for47B09B8D034D*
//#UC END# *470484D50138for47B09B8D034D*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

