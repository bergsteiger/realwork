////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/ImplementationTypes/TemplateFunctions.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::ImplementationTypes::TemplateFunctions
//
// Контейнер шаблонных функций
// ---
// Класс с этим стекреотипом служит виртуальным контейнером для шаблонных функций. Т.е. сам класс
// не определяет никаких артефактов генерации.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: TemplateFunctions::Class
? Контейнер шаблонных функций
? Класс с этим стекреотипом служит виртуальным контейнером для шаблонных функций. Т.е. сам класс не определяет никаких артефактов генерации.
< *::Class,*::Category

= ClassBaseGenerator::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +-
/ - типы видимости
Y code_template_functions.gif
L code_template_functions
// Параметры визуализации
$ C 245,245,245
$ l 100,100,100
$ f 100,100,100
W true
/ - может быть параметризован

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP

// генерация операций с учетом видимости
%f _dump_with_visible_spec
//#UC START# *4714941C01D4for47148FF9033C*
	[public:<{}{%CC=Operation&%CV=PublicAccess}
	%CX
	>
	][protected:<{}{%CC=Operation&%CV=ProtectedAccess}
	%CX
	>
	][private:<{}{%CC=Operation&%CV=PrivateAccess}
	%CX
	>
	]
//#UC END# *4714941C01D4for47148FF9033C*

// генерация определения операций для UtilityPack
%f _dump_for_utility_pack_h
//#UC START# *471494330271for47148FF9033C*
	[<{}{%CC=Operation&%CV=PublicAccess}
	%CX
	>
	]
//#UC END# *471494330271for47148FF9033C*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for47148FF9033C*
c                                                               {}
r {%SK!=ParameterizedClass}:                                    {%SS must be parametrized}
//#UC END# *4704C0E30186for47148FF9033C*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor47148FF9033C*
//#UC END# *4705CBD6003Efor47148FF9033C*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for47148FF9033C*
//#UC END# *470484D50138for47148FF9033C*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor47148FF9033C*
P
	<{}{%CC=Operation}
	%CX
	>
//#UC END# *47022CB8034Bfor47148FF9033C*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor47148FF9033C*
	%f_shift_intend(-1)\
	[{%P#f_IsUtilityPack()=true}{%S%f_dump_with_visible_spec()}%S%f_dump_for_utility_pack_h()]%f_shift_intend(1)

//#UC END# *47022C88029Ffor47148FF9033C*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor47148FF9033C*
= cpp
//#UC END# *47022CCF00EAfor47148FF9033C*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor47148FF9033C*
//#UC END# *470F15B800CBfor47148FF9033C*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor47148FF9033C*
//#UC END# *470F1571031Cfor47148FF9033C*

// реализация абстрактного стереотипа Java::MDAGenerator
// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor47148FF9033C*
//#UC END# *470321C1038Afor47148FF9033C*

// реализация абстрактного стереотипа Java::MDAGenerator
// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for47148FF9033C*
//#UC END# *470321950119for47148FF9033C*

// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for47148FF9033C*
//#UC END# *46E6D4BB0339for47148FF9033C*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: TemplateFunctions::Class::Operation
? Константный метод
? По умолчанию все методы константные. Дл того что бы разрешить методу изменять свой объект, необходимо присвуоить ему стереотип <<chg>>
= ClassBase::Class::Operation

// Параметры стереотипа
v -#+
/ - типы видимости
e g
/ - возможность использовать исключения
a raf
/ - тип абстракции
Y code_const_method.gif
L code_const_method
T 
/ - может не иметь "цели" (типа/результата)
m t
/ - может быть реализован/иметь перекрытую реализацию
A const|cached|const,cached
/ - стереотипы "цели" (типа/результата)

// Генераторы
// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor471490940138*
= cpp
//#UC END# *47022CCF00EAfor471490940138*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471490940138*
c                                        {}
r "%P%PM"="UtilityPack::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityPack}
r "%P%PM"="UtilityClass::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityClass}
//#UC END# *4704C0E30186for471490940138*

// Вложенные стереотипы
: TemplateFunctions::Class::Operation::Parameter
? параметр операции
= ClassBase::Class::Operation::Parameter

// Параметры стереотипа
Y code_param.gif
L code_param

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for471490A60261*
//#UC END# *46E6D4BB0339for471490A60261*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor471490A60261*
//#UC END# *470F1571031Cfor471490A60261*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor471490A60261*
//#UC END# *470F15B800CBfor471490A60261*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471490A60261*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for471490A60261*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor471490A60261*
//#UC END# *4705CBD6003Efor471490A60261*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for471490A60261*
//#UC END# *470484D50138for471490A60261*


: TemplateFunctions::Class::chg::Operation
? Неконстантный метод
? Метод который может изменить состояние объекта своего класса.
= ClassBase::Class::chg::Operation

// Параметры стереотипа
Y code_method.gif
L code_method

// Генераторы
// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor4714912A00FA*
= cpp
//#UC END# *47022CCF00EAfor4714912A00FA*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4714912A00FA*
c                                        {}
r "%P%PM"="UtilityPack::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityPack}
r "%P%PM"="UtilityClass::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityClass}
//#UC END# *4704C0E30186for4714912A00FA*

: TemplateFunctions::Class::oneway::Operation
? Асинхронная операция
? Вызов операции будет выполнен асинхронна. Т.е вызавающая сторона получит управление сразу, не дожидаясь ответа. Асинхронная опреация не может иметь возвращаемых результатов и ли возбуждать исключения.
= ClassBase::Class::oneway::Operation

// Параметры стереотипа
a arf
/ - тип абстракции
Y code_const_method.gif
L code_const_method

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4714913A003E*
c                                        {}
r "%P%PM"="UtilityPack::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityPack}
r "%P%PM"="UtilityClass::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityClass}
//#UC END# *4704C0E30186for4714913A003E*

: TemplateFunctions::Class::oneway,chg::Operation
? Асинхронная неконстантная операция
? Вызов операции будет выполнен асинхронно. Т.е вызавающая сторона получит управление сразу, не дожидаясь ответа. Асинхронная опреация не может иметь возвращаемых результатов и ли возбуждать исключения.
? Неконстантная операция может изменять состояние своего объекта
= ClassBase::Class::oneway,chg::Operation

// Параметры стереотипа
Y code_method.gif
L code_method

// Генераторы
// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor471491410186*
= cpp
//#UC END# *47022CCF00EAfor471491410186*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471491410186*
r "%P%PM"="UtilityPack::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityPack}
r "%P%PM"="UtilityClass::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityClass}
//#UC END# *4704C0E30186for471491410186*

: TemplateFunctions::Class::static::Operation
? Статический метод
? Статический метод является методом класса а не объекта. Статический метод может иметь доступ только к статическим данным класса, и может быть вызван на самом классе, а не на его экземпляре.
= ClassBase::Class::static::Operation

// Генераторы
// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor471491500261*
	%f_docs(%S)\
	#%f_templ_header(%P)\
	#[{%P%P#f_IsUtilityPack()!=true}static ]%f_ret(%S) %SN (<{, }%f_arg_full_decl(%C)>)[
	#	/*throw (<{, }%E<%NN::>%EN>)*/];
//#UC END# *47022C88029Ffor471491500261*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor471491500261*
	%f_docs(%S)\
	%f_templ_header(%{SERV})\
	%f_templ_header(%P)\
	%f_ret(%S) %f_function_scope(%{SERV})%SN (<{, }%f_arg_full_decl(%C)>) [
		/*throw (<{, }%E<%NN::>%EN>)*/
	]{%f_start_func_cpp(%S,"%{SERV}N::%SN")
		%f_s_c_op_c_uc(%S)
	%f_end_func_cpp(%S)}
//#UC END# *47022CB8034Bfor471491500261*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor471491500261*
= cpp
//#UC END# *47022CCF00EAfor471491500261*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471491500261*
c                                        {}
r "%P%PM"="UtilityPack::Class":          {It is illegal to use \<\<%SS\>\> Operation in UtilityPack}
//#UC END# *4704C0E30186for471491500261*

: TemplateFunctions::Class::Parameter
? шаблонный параметр
= ClassBase::Class::Parameter

// Параметры стереотипа
Y code_param.gif
L code_param

// Генераторы
// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor4714915E0232*
= cpp
//#UC END# *47022CCF00EAfor4714915E0232*

// Функции стереотипа
%f _st_space_key
	MDP



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

