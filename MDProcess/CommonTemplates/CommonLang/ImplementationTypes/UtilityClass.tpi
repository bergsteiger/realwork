////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/ImplementationTypes/UtilityClass.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::ImplementationTypes::UtilityClass
//
// Утилитный класс
// ---
// Набор статических методов. По сути класс не имеющий состояния.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: UtilityClass::Class
? Утилитный класс
? Набор статических методов. По сути класс не имеющий состояния.
= AbstractClass::Class
= Генерация JavaScript::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +#-
/ - типы видимости
Y code_utility_class.gif
L code_utility_class
// Параметры визуализации
$ C 255,215,215
$ l 255,10,10
$ f 255,10,10

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP

// Метод для определения дополнительных условий генерации определения методов на серванте.
// Перекрывается в серванте сущности
%f _additional_condition
//#UC START# *49B8FE48031Afor471352960232*
	true
//#UC END# *49B8FE48031Afor471352960232*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471352960232*
c                              {}
r {"%Rx"="true"}: {%SS cant realize any other class or interfaces}
r {"<{}{"%GM"!="UtilityClass::Class"}{C%G}>"!="0"}: {%SS can generalize only other %SS}
r {"%S{singleton}"="true"}: {%SS can't have any instances (cant't be Singleton)}
/r {"%Sa"="inline"&"%Gx"="true"}: {inline Class can't have base class}
/r {"%Sa"="inline"&"%Zx"="true"}: {inline Class can't be used as base class}
r {%ax=false&<{}{%P{Full MDP}=true}{C}>!=0&<{}{%a#f_IsUseCase()=true}{C}>=0}: {%SS ни кем (включая прецеденты) не используется}
//#UC END# *4704C0E30186for471352960232*

// перекрытие базового стереотипа AbstractClass::Class
// выводит список наследования
%f _base_class_decl
//#UC START# *471728C103A9for471352960232*
	[:
		<{\n#	, }[{%S{non virtual base}!=true}virtual ]public %f_type(%R)>[{"%Rx"="true"}\n\t, ]<{\n	, }[{%S{non virtual base}!=true}virtual ]public %f_type(%G)>
	]
//#UC END# *471728C103A9for471352960232*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor471352960232*
//#UC END# *49F5795900ECfor471352960232*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor471352960232*
//#UC END# *470F15B800CBfor471352960232*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor471352960232*
//#UC END# *470F1571031Cfor471352960232*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for471352960232*
//#UC END# *477398E501C0for471352960232*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for471352960232*
//#UC END# *4774D2A20372for471352960232*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for471352960232*
//#UC END# *55B8D28B0157for471352960232*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for471352960232*
//#UC END# *55B8D2F80145for471352960232*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for471352960232*
//#UC END# *55B8DD9C0301for471352960232*

// реализация абстрактного стереотипа Генерация JavaScript::MDAGenerator
// генератор JavaScript
+ js
//#UC START# *477395290327for471352960232*
//#UC END# *477395290327for471352960232*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: UtilityClass::Class::Attribute
? Статический атрибут
= ClassBase::Class::static::Attribute

// Параметры стереотипа
v -+#
/ - типы видимости
A const|ref|const,ref
/ - стереотипы "цели" (типа/результата)
l arl
/ - возможные типы связи атрибута

// Функции стереотипа
%f _st_space_key
	MDP


: UtilityClass::Class::Operation
? Операция
= ClassBase::Class::static::Operation

// Функции стереотипа
%f _st_space_key
	MDP


// Вложенные стереотипы
: UtilityClass::Class::Operation::Parameter
? параметр
= ClassBase::Class::Operation::Parameter

// Параметры стереотипа
Y code_param.gif
L code_param

// Функции стереотипа
%f _st_space_key
	MDP



: UtilityClass::Class::Parameter
? Шаблонный параметр
= ClassBase::Class::Parameter

// Параметры стереотипа
Y code_param.gif
L code_param

// Функции стереотипа
%f _st_space_key
	MDP


: UtilityClass::Class::uses::ClassDependency
? Использование
? Определяет что реализация утилитного набора (источник) использует указанный объект (цель) каким-либо образом. НА основе данной связи будет сгенерированы пути включения файлов используемого объекта.
= UsesContainer::Class::uses::ClassDependency

// Параметры стереотипа
Y code_dep_uses.gif
L code_dep_uses

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for478328E60019*
//#UC END# *46E6D4BB0339for478328E60019*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor478328E60019*
//#UC END# *47022C88029Ffor478328E60019*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor478328E60019*
//#UC END# *47022CB8034Bfor478328E60019*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor478328E60019*
//#UC END# *47022CCF00EAfor478328E60019*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for478328E60019*
//#UC END# *470321950119for478328E60019*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor478328E60019*
//#UC END# *470321C1038Afor478328E60019*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor478328E60019*
//#UC END# *470F1571031Cfor478328E60019*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor478328E60019*
//#UC END# *470F15B800CBfor478328E60019*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for478328E60019*
//#UC END# *477398E501C0for478328E60019*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for478328E60019*
//#UC END# *4774D2A20372for478328E60019*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor478328E60019*
//#UC END# *49F5795900ECfor478328E60019*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for478328E60019*
//#UC END# *55B8D28B0157for478328E60019*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for478328E60019*
//#UC END# *55B8D2F80145for478328E60019*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for478328E60019*
//#UC END# *55B8DD9C0301for478328E60019*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for478328E60019*
c	{}
r {""=""}: {}
//#UC END# *4704C0E30186for478328E60019*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for478328E60019*
//#UC END# *470484D50138for478328E60019*

: UtilityClass::Class::friend::ClassDependency
? Зависимость
? Определяет что интерфейсная часть утилитного набора (источник) зависит от указанного объект (цель) каким-либо образом. НА основе данной связи будет сгенерированы пути включения файлов используемого объекта.
= ClassBase::Class::friend::ClassDependency

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for478328E8015D*
//#UC END# *46E6D4BB0339for478328E8015D*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor478328E8015D*
//#UC END# *47022C88029Ffor478328E8015D*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor478328E8015D*
//#UC END# *47022CB8034Bfor478328E8015D*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor478328E8015D*
//#UC END# *47022CCF00EAfor478328E8015D*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for478328E8015D*
//#UC END# *470321950119for478328E8015D*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor478328E8015D*
//#UC END# *470321C1038Afor478328E8015D*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor478328E8015D*
//#UC END# *470F1571031Cfor478328E8015D*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor478328E8015D*
//#UC END# *470F15B800CBfor478328E8015D*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for478328E8015D*
//#UC END# *477398E501C0for478328E8015D*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for478328E8015D*
//#UC END# *4774D2A20372for478328E8015D*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor478328E8015D*
//#UC END# *49F5795900ECfor478328E8015D*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for478328E8015D*
//#UC END# *55B8D28B0157for478328E8015D*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for478328E8015D*
//#UC END# *55B8D2F80145for478328E8015D*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for478328E8015D*
//#UC END# *55B8DD9C0301for478328E8015D*

// Функции стереотипа
%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for478328E8015D*
c	{}
r {""=""}: {}
//#UC END# *4704C0E30186for478328E8015D*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for478328E8015D*
//#UC END# *470484D50138for478328E8015D*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

