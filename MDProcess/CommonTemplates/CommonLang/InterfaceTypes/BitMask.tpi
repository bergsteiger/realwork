////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/InterfaceTypes/BitMask.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::InterfaceTypes::BitMask
//
// Битовая маска
// ---
// определяет битовую маску указанной разрядности (связь наследования от примитивного
// целочисленного типа).
// дополнительно может определять группы битов, и расширять имеющиеся битовые маски
// различные BitMask имеют разный тип с т.з. компилятора
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: BitMask::Class
? Битовая маска
? определяет битовую маску указанной разрядности (связь наследования от примитивного целочисленного типа).
? дополнительно может определять группы битов, и расширять имеющиеся битовые маски
? различные BitMask имеют разный тип с т.з. компилятора
< *::Class,*::Category

= InterfaceGeneratorWithJava::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +#-
/ - типы видимости
Y code_bitmask.gif
L code_bitmask
// Параметры визуализации
$ C 240,205,240
$ l 120,40,120
$ f 120,40,120

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for470F39A900EA*
c                              {}
r {<{}{}{%GC}>!=1}: {%SS должен наследоваться от одного типа}
r {%GS!=UMLPrimitive&%GS!=Enum}: {%SS должен наследоваться от Перечисления или примитивного целочисленного типа}
r {<{}{%PS=ServerLibrary}{C}>!=0&%f_to_lower(%PN)=%f_to_lower(%SN)}: {имя %SS, используемого в качестве серверного типа, не должно совпадать с именем родителя}
r {%ax=false}: {%SS ни кем не используется}
//#UC END# *4704C0E30186for470F39A900EA*

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor470F39A900EA*
	[{%GS=Enum}%f_error("Генерация БитМаски на основе Перечисления - не реализована, сообщите разработчикам")
	]%f_docs(%S)\
	[#%S%f_open_ifdef()
	]#class %SN : public Core::BitMaskType\<%f_type(%G), %SN\> {
	#	friend class Core::BitMaskType\<%f_type(%G), %SN\>;
	#	%SN (%t_arg(%G,"in") val) : Core::BitMaskType\<%f_type(%G), %SN\> (val) {
	#	}
	#public:
	#	%SN () : Core::BitMaskType\<%f_type(%G), %SN\> (0) {
	#	}
	<{}{}{%C}
	#	static const %SN %CN () {
	#		return 1 \<\< %Cn;
	#	}>
	#};[
	#%S%f_close_ifdef()]
//#UC END# *47022C88029Ffor470F39A900EA*

// реализация абстрактного стереотипа CORBA IDL::MDAGenerator
// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for470F39A900EA*
	%f_docs(%S)\
	????
//#UC END# *47022BBE0261for470F39A900EA*

// реализация абстрактного стереотипа Java::MDAGenerator
// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for470F39A900EA*
O [{"%PO"=""&%f_is_server_type(%S)=false}%SN.java]
	%f_output_constraint(%S)\
	[{%f_is_server_type(%S)=false}[{"%PO"=""}\
	%f_header(%S)
	package %f_dump_java_package(%S);
	
	]#%t_visibility(%S,"%XU")[{"%PO"!=""}static ]class %SN extends java.util.BitSet {
	%f_docs(%S)\
	<{}{}{%C}#	private static %SN s%CN = null;
	>%f_set_var(BIT_COUNT,"[{}{0}<{}{}{%CC}>]")\
	
	#	public %SN () {
	#		super (%{BIT_COUNT}N);
	#	}
	<{}{}{%C}
	#	public static %SN %CN () {
	#		if (s%CN == null) {
	#			s%CN = new %SN ();
	#			s%CN.set (%f_evaluate(%Cn-1));
	#		}
	#		return s%CN;
	#	}
	>
	#};
	[{"%PO"=""}
	%f_footer(%S)
	]]
//#UC END# *470321950119for470F39A900EA*

// реализация абстрактного стереотипа Дельфи-DLL Адаптер::MDAGenerator
// Delphi интерфейсы для адаптера (.pas)
+ pas
//#UC START# *470F152700FAfor470F39A900EA*
	%f_docs(%S)\
	????
//#UC END# *470F152700FAfor470F39A900EA*

// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for470F39A900EA*
G %PU
//#UC END# *46E6D4BB0339for470F39A900EA*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: BitMask::Class::Attribute
? Атрибут
// Параметры стереотипа
v +
/ - типы видимости
Y code_attr.gif
L code_attr
T 
/ - может не иметь "цели" (типа/результата)
l a
/ - возможные типы связи атрибута

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for470F3A1C038A*
//#UC END# *46E6D4BB0339for470F3A1C038A*

// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for470F3A1C038A*
//#UC END# *47022BBE0261for470F3A1C038A*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor470F3A1C038A*
//#UC END# *47022C88029Ffor470F3A1C038A*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for470F3A1C038A*
//#UC END# *470321950119for470F3A1C038A*

// Delphi интерфейсы для адаптера (.pas)
+ pas
//#UC START# *470F152700FAfor470F3A1C038A*
//#UC END# *470F152700FAfor470F3A1C038A*

// Функции стереотипа
%f _st_space_key
	MDP



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

