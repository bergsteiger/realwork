////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/InterfaceTypes/ServerFacet.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess::CommonTemplates::CommonLang::InterfaceTypes::ServerFacet
//
// Серверный фасет --- Серверный фасетный интерфейс, тоже, что и
// Facet, только используется в серверных компонентах
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: ServerFacet::Class
? Серверный фасет
? Серверный фасетный интерфейс, тоже, что и Facet, только используется в серверных компонентах
< *::Class,*::Category

= WikiImplClass::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
Y code_server_facet.gif
L code_server_facet
// Параметры визуализации
$ C 215,215,255
$ l 10,10,255
$ f 10,10,255

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for470F7348002E*
c          {}
r {"<{}{%GS!=ServerFacet}{%GC}>"!="0"}:                      {%SS can inherit only from ServerFacet}
r {"%Rx"="true"}:                                            {%SS can't realize something}
/r {<{}{%CC=Attribute&%Cl=ref}{C}>!=0}:                       {%SS не может иметь ref связи}
r {<{}{%PS=ServerLibrary}{C}>!=0&%f_to_lower(%PN)=%f_to_lower(%SN)}: {имя %SS, используемого в качестве серверного типа, не должно совпадать с именем родителя}
r {<{}{%P{Full MDP}=true}{C}>!=0&<{}{%DS=UseCase}{C}>=0}:    {%SS не используется ни одним прецедентом}

//#UC END# *4704C0E30186for470F7348002E*

// реализация абстрактного стереотипа C++ Фабрики::MDAGenerator
// генератор файлов реализации для фабрик интерфейсов (.cpp)
+ fctr.cpp
//#UC START# *4705C54B01F4for470F7348002E*
//#UC END# *4705C54B01F4for470F7348002E*

// реализация абстрактного стереотипа C++ Фабрики::MDAGenerator
// генератор заголовочных файлов для фабрик интерфейсов (.h)
+ fctr.h
//#UC START# *4705C5490109for470F7348002E*
//#UC END# *4705C5490109for470F7348002E*

// реализация абстрактного стереотипа CORBA IDL::MDAGenerator
// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for470F7348002E*
F [{"%Sa"="abstract"}abstract ]interface %SN;
	<#%FF
	>%f_docs(%S)\
	#[{"%Sa"="abstract"}abstract ]interface %SN[: <{, }%f_type(%G)>] {<{}{%f_is_factory(%C)=false}[
	%CX]>
	#};
//#UC END# *47022BBE0261for470F7348002E*

// реализация абстрактного стереотипа Java::MDAGenerator
// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor470F7348002E*
O []
//#UC END# *470321C1038Afor470F7348002E*

// реализация абстрактного стереотипа Java::MDAGenerator
// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for470F7348002E*
O []
//#UC END# *470321950119for470F7348002E*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: ServerFacet::Class::Attribute
? Атрибут интерфейса
? для данного атрибута будут сгенерированы методы получения и установки его значения.
// Параметры стереотипа
v +
/ - типы видимости
e a
/ - возможность использовать исключения
a a
/ - тип абстракции
Y code_property.gif
L code_property
m t
/ - может быть реализован/иметь перекрытую реализацию
A const
/ - стереотипы "цели" (типа/результата)
l l
/ - возможные типы связи атрибута

// Генераторы
// генератор файлов реализации для фабрик интерфейсов (.cpp)
+ fctr.cpp
//#UC START# *4705C54B01F4for471F1A6501A5*
//#UC END# *4705C54B01F4for471F1A6501A5*

// генератор заголовочных файлов для фабрик интерфейсов (.h)
+ fctr.h
//#UC START# *4705C5490109for471F1A6501A5*
//#UC END# *4705C5490109for471F1A6501A5*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor471F1A6501A5*
//#UC END# *470321C1038Afor471F1A6501A5*

// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for471F1A6501A5*
	%f_docs(%S)\
/	[{"%Ex"="false"&"%ex"="false"}#%f_attr(%S) %SN;
/	][{"%Ex"="true"|"%ex"="true"}\
	[{"%SS"!="writeonly"}#%f_iget_attr(%S) get_%SN ()[
	#	raises (<{, }%f_type(%E)>)];
	][{"%SS"!="readonly"}#void set_%SN (%f_iset_attr(%S) %SN)[
	#	raises (<{, }%f_type(%e)>)];
	]
//#UC END# *47022BBE0261for471F1A6501A5*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for471F1A6501A5*
//#UC END# *470321950119for471F1A6501A5*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor471F1A6501A5*
	property
//#UC END# *4705CBD6003Efor471F1A6501A5*

// Вложенные стереотипы
: ServerFacet::Class::Attribute::Attribute
? ключ
// Параметры стереотипа
Y code_attr_key.gif
L code_attr_key
T 
/ - может не иметь "цели" (типа/результата)
A const
/ - стереотипы "цели" (типа/результата)
l arl
/ - возможные типы связи атрибута

// Генераторы
// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for471F1C250167*
//#UC END# *47022BBE0261for471F1C250167*

// генератор файлов реализации для фабрик интерфейсов (.cpp)
+ fctr.cpp
//#UC START# *4705C54B01F4for471F1C250167*
//#UC END# *4705C54B01F4for471F1C250167*

// генератор заголовочных файлов для фабрик интерфейсов (.h)
+ fctr.h
//#UC START# *4705C5490109for471F1C250167*
//#UC END# *4705C5490109for471F1C250167*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor471F1C250167*
//#UC END# *470321C1038Afor471F1C250167*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for471F1C250167*
//#UC END# *470321950119for471F1C250167*


: ServerFacet::Class::readonly::Attribute
? Атрибут только для чтения
? для данного атрибута будет сгенерирован только метод получения его значения. Если тип атрибута интерфейс - то он будет возвращаться как константный.
= ServerFacet::Class::Attribute

// Параметры стереотипа
e g
/ - возможность использовать исключения

: ServerFacet::Class::writeonly::Attribute
? Атрибут только для записи
? для данного атрибута будут сгенерирован только метод установки его значения.
= ServerFacet::Class::Attribute

// Параметры стереотипа
e s
/ - возможность использовать исключения

: ServerFacet::Class::Operation
? Метод интерфейса
? Согласно спецификации CORBA и мапингу в C++ все удаленные методы не константные.
// Параметры стереотипа
v +
/ - типы видимости
e g
/ - возможность использовать исключения
a a
/ - тип абстракции
Y code_method.gif
L code_method
T 
/ - может не иметь "цели" (типа/результата)
m t
/ - может быть реализован/иметь перекрытую реализацию
A const|cached|const,cached
/ - стереотипы "цели" (типа/результата)

// Генераторы
// генератор файлов реализации для фабрик интерфейсов (.cpp)
+ fctr.cpp
//#UC START# *4705C54B01F4for471F1CC2035B*
//#UC END# *4705C54B01F4for471F1CC2035B*

// генератор заголовочных файлов для фабрик интерфейсов (.h)
+ fctr.h
//#UC START# *4705C5490109for471F1CC2035B*
//#UC END# *4705C5490109for471F1CC2035B*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor471F1CC2035B*
//#UC END# *470321C1038Afor471F1CC2035B*

// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for471F1CC2035B*
P
	%f_docs(%S)\
	#[{"%SS"="oneway"}{%f_ret(%S)}oneway void] %SN (<{, }%CX>)[
	#	raises (<{, }%f_type(%E)>)];
//#UC END# *47022BBE0261for471F1CC2035B*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for471F1CC2035B*
//#UC END# *470321950119for471F1CC2035B*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471F1CC2035B*
c                              {}
r {<{}{%PS=ServerLibrary}{C}>!=0&%f_to_lower(%PN)=%f_to_lower(%SN)}: {имя %SS не должно совпадать с именем %P%SS}
//#UC END# *4704C0E30186for471F1CC2035B*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor471F1CC2035B*
	method
//#UC END# *4705CBD6003Efor471F1CC2035B*

// Вложенные стереотипы
: ServerFacet::Class::Operation::Parameter
? Параметр операции
// Параметры стереотипа
Y code_param.gif
L code_param

// Генераторы
// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for471F1D56006D*
P
	%f_arg_full_decl(%S)
//#UC END# *47022BBE0261for471F1D56006D*

// генератор файлов реализации для фабрик интерфейсов (.cpp)
+ fctr.cpp
//#UC START# *4705C54B01F4for471F1D56006D*
= idl
//#UC END# *4705C54B01F4for471F1D56006D*

// генератор заголовочных файлов для фабрик интерфейсов (.h)
+ fctr.h
//#UC START# *4705C5490109for471F1D56006D*
= idl
//#UC END# *4705C5490109for471F1D56006D*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor471F1D56006D*
//#UC END# *470321C1038Afor471F1D56006D*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for471F1D56006D*
//#UC END# *470321950119for471F1D56006D*

// генератор файлов реализации C++ (.cpp)
+ cpp
//#UC START# *47022CB8034Bfor471F1D56006D*
= idl
//#UC END# *47022CB8034Bfor471F1D56006D*

// генератор заголовочных файлов C++ (.h)
+ h
//#UC START# *47022C88029Ffor471F1D56006D*
= idl
//#UC END# *47022C88029Ffor471F1D56006D*


: ServerFacet::Class::friend::ClassDependency
? Друг
? Определяет что интерфейс (источник) использует указанный объект (цель) как друг. Т.е. ЦЕЛЬ открывает свои свои скрытые данные и методы ИСТОЧНИКУ. ВНИМАНИЕ!!! ИМЕННО ИСТОЧНИК БУДЕТ ДРУГОМ ЦЕЛИ А НЕ НАООБОРОТ!
// Параметры стереотипа
Y code_dep_friend.gif
L code_dep_friend

// Генераторы
// генератор файлов реализации для фабрик интерфейсов (.cpp)
+ fctr.cpp
//#UC START# *4705C54B01F4for471F1FEC0109*
//#UC END# *4705C54B01F4for471F1FEC0109*

// генератор заголовочных файлов для фабрик интерфейсов (.h)
+ fctr.h
//#UC START# *4705C5490109for471F1FEC0109*
//#UC END# *4705C5490109for471F1FEC0109*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor471F1FEC0109*
//#UC END# *470321C1038Afor471F1FEC0109*

// генератор idl спецификаций (.idl)
+ idl
//#UC START# *47022BBE0261for471F1FEC0109*
//#UC END# *47022BBE0261for471F1FEC0109*

// генератор классов, интерфейсов на java (.java)
+ java
//#UC START# *470321950119for471F1FEC0109*
//#UC END# *470321950119for471F1FEC0109*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor471F1FEC0109*
	friend
//#UC END# *4705CBD6003Efor471F1FEC0109*

: ServerFacet::Class::oneway::Operation
? Асинхронная операция
? Вызов операции будет выполнен асинхронна. Т.е вызавающая сторона получит управление сразу, не дожидаясь ответа. Асинхронная опреация не может иметь возвращаемых результатов и ли возбуждать исключения. По умолчанию все методы константные. Для того что бы разрешить методу изменять свой объект, необходимо присвуоить ему стереотип <<oneway,chg>>. Если используется константный интерфейс, то на нем могут быть вызванны только константные методы.
= ServerFacet::Class::Operation

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for471F202802EE*
c             {}
r	{<{}{%CS=out|%CS=inout&%t_class_type(%C%T)=false}{C}>!=0|%TN!=void}: {%SM can't contain inout/out parameters or return result}
//#UC END# *4704C0E30186for471F202802EE*

// Вложенные стереотипы
: ServerFacet::Class::oneway::Operation::Parameter
? Параметр операции
= ServerFacet::Class::Operation::Parameter

// Параметры стереотипа
Y code_param.gif
L code_param


: ServerFacet::Class::oneway,chg::Operation
? Асинхронная неконстантная операция
? Вызов операции будет выполнен асинхронно. Т.е вызавающая сторона получит управление сразу, не дожидаясь ответа. Асинхронная опреация не может иметь возвращаемых результатов и ли возбуждать исключения. Неконстантная операция может изменять состояние своего объекта.
= ServerFacet::Class::oneway::Operation

// Параметры стереотипа
Y code_method.gif
L code_method


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

