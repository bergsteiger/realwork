////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/SpecPackages/ComInterfaces.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDACategory::Class>> MDProcess$Templates::CommonTemplates::CommonLang::SpecPackages::ComInterfaces
//
// Интерфейсный COM-пакет
// ---
// Содержит экспортируемые наружу COM-компоненты типы и интерфейсы. Может зависить только от других
// интерфейсных пакетов (своей компоненты или чужой)
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: ComInterfaces::Category
? Интерфейсный COM-пакет
? Содержит экспортируемые наружу COM-компоненты типы и интерфейсы. Может зависить только от других интерфейсных пакетов (своей компоненты или чужой)
> ComInterface::Class

= InterfacePackageBase::Category
= COM::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
Y code_com_interfaces.gif
L code_com_interfaces
D
/ - запрещена форвард-декларация

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p is namespace:b=false ? определяет является ли модуль неймспейсом

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP

%f _wiki_up_print
	%S%[InterfacePackageBase::Category]f_wiki_up_print()[{"%S{is namespace}"!="%S{!is namespace}"}%f_up_prefix(%S) *is namespace* = *%S{is namespace}* - определяет является ли модуль неймспейсом
	][{"%S{ifdef}"!="%S{!ifdef}"}%f_up_prefix(%S) *ifdef* = *%S{ifdef}* - Oпределяет условный признак компиляции, который должен быть определён. Для указания нескольких флагов условной компиляций нужно указать их через запятую.
	][{"%S{ifndef}"!="%S{!ifndef}"}%f_up_prefix(%S) *ifndef* = *%S{ifndef}* - Oпределяет условный признак компиляции, который не должен быть определён. Для указания нескольких флагов условной компиляций нужно указать их через запятую.
	]


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа WikiPackageImpl::Category
// Определяет, что пакет должен генериться в документации в секцию "Интерфейсные пакеты"
%f _wiki_interface_package
//#UC START# *48578600008Dfor470488F50280*
	true
//#UC END# *48578600008Dfor470488F50280*

// реализация абстрактного стереотипа COM::MDAGenerator
// генерация файла опрделений для регистрации COM DLL (.rgs)
+ com.rgs
//#UC START# *470320E002CEfor470488F50280*
C /%SN
O %SN.rgs
	%f_output_constraint(%S)\
	HKCR
	{<{\n}{%CM=ComInterface::Class}{%C}
		%SN.%CN.1 = s '%CN Class'
		{
			CLSID = s '{%f_str_conv("%CG","%8s-%4s-%4s-%2s%2s-%2s%2s%2s%2s%2s%2s","%8s-%4s-%4s-%2s%2s-%2s%2s%2s%2s%2s")99}'
		}
		%SN.%CN = s '%CN Class'
		{
			CLSID = s '{%f_str_conv("%CG","%8s-%4s-%4s-%2s%2s-%2s%2s%2s%2s%2s%2s","%8s-%4s-%4s-%2s%2s-%2s%2s%2s%2s%2s")99}'
			CurVer = s '%SN.%CN.1'
		}
		NoRemove CLSID
		{
			ForceRemove {%f_str_conv("%CG","%8s-%4s-%4s-%2s%2s-%2s%2s%2s%2s%2s%2s","%8s-%4s-%4s-%2s%2s-%2s%2s%2s%2s%2s")99} = s '%CN Class'
			{
				ProgID = s '%SN.%CN.1'
				VersionIndependentProgID = s '%SN.%CN'
				ForceRemove 'Programmable'
				InprocServer32 = s '\%MODULE\%'
				{
					val ThreadingModel = s '%C{ThreadingModel}'
				}
				'TypeLib' = s '{%SG}'
			}
		}>
	}
//#UC END# *470320E002CEfor470488F50280*

// реализация абстрактного стереотипа COM::MDAGenerator
// генератор ODL-файла спецификации COM-интерфейса (.odl)
+ odl
//#UC START# *47032097038Afor470488F50280*
C /%SN
O %SN.odl
	%f_output_constraint(%S)\
	%f_header(%S)
	import "oaidl.idl";
	\[
		uuid (%SG)
		, version (1.0)
		, helpstring ("%SNLib 1.0 Type Library")
	\]
	
	library %SNLib {
		importlib ("stdole32.tlb");
		importlib ("stdole2.tlb");
		%U[{_CUSTOM_TLB}
		]
	<%CX>
	};
	%f_footer(%S)
//#UC END# *47032097038Afor470488F50280*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

