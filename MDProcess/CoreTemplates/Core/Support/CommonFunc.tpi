////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CoreTemplates/Core/Support/CommonFunc.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAUtilityPack::Class>> MDProcess$CoreTemplates::CoreTemplates::Core::Support::CommonFunc
//
// Общие функции пакета
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// форматирует и выводит документацию
f _docs
//#UC START# *46E6D0A70210*
	[{%XU!=cpp&%XU!=fctr.cpp&%XU!=mda&%XU!=p.cpp}{[%f_str_split(%SD,[{}{// }%1N])
	][{%SK=ParameterizedClass}[<{}{%CC=Parameter}[{"%CD"!=""}%f_str_split(%CN - %CD,[{}{// }%1N])
	]>]]}[%f_str_split(%SD,[{}{#// }%1N])
	][{%SK=ParameterizedClass}[<{}{%CC=Parameter}[{"%CD"!=""}%f_str_split(%CN - %CD,[{}{#// }%1N])
	]>]]]

f _k_common_elem_docs
	[{%Sa!=regular}
	abstraction type: %Sa][
	target stereotype: %Ss][
	link type: %Sl][
	%f_k_up_dump(%S)]

f _k_up_dump
	%f_set_var(UP_PRINT,"%S#f_wiki_up_print()")[{"%{UP_PRINT}N"!=""}\
	%f_up_open(%S)Дополнительные свойства:
	%f_cut_postfix(%{UP_PRINT}N,\n)[
	%f_up_close(%S)]]

f _up_open
	[{%SC=Class|%SC=Category}{(!) }\n\{note\}]

f _up_close
	[{%SC=Class|%SC=Category}\{note\}]

f _up_prefix
	[{%SC=Class|%SC=Category}{\#*}*]
//#UC END# *46E6D0A70210*

// генерирует ссылку на элемент для представления в wiki (с расширением выидимости родителя,
// иконками и т.д.)
f _k_link
//#UC START# *46E83157007A*
//%1N - true, если нужно поставить якорь
	[{%1N=true&"%SN"!=""}[{"%SO"!=""&%Se=false}{\{anchor:%SU\}}]][\{IconForLabel:%Sb\} ][{"%SO"!=""&%Se=false}{[{}{\<\<[{}{default}%SS]\>\>}[{%1N=true&"%SN"!=""}{%SN}\[%SN|\#%SU\]]]}\{LinkByGUID:%SU\}]
//#UC END# *46E83157007A*

// генерация ссылки для wiki (аналогично k_link но с вместе префиксом сслыкой на родителя)
f _k_link_wp
//#UC START# *46E832A1003B*
//%2N - true, если нужно поставить якорь
	%f_k_link(%S,"%2N")[{%PW!=[{%SC!=Operation&%SC!=Attribute}{%1W}%1%PW]&%SS!=UMLPrimitive} _(из %f_k_link_ex(%P))_]
//это старая реализация - в таком виде могли не генерить ссылку на родителя операции
/	%f_k_link(%S)[{%PU!=%1%PU&%SS!=UMLPrimitive} _(из %f_k_link_ex(%P))_]
f _get_output
	%f_set_var(OUTPUT,S)[{"%So"=""}<{}{"%Po"!=""}{%Pr}%f_set_var(OUTPUT,P)>]%{OUTPUT}o
f _k_link_ex
	[{%SS!=Project&%SS!=UMLPrimitive}<%f_k_link(%N)::>]%f_k_link(%S)
//#UC END# *46E832A1003B*

// выводит ссылку и краткое описание метода для wiki
f _k_method_dump
//#UC START# *46E93AEF00B8*
	\# *%f_k_link(%S,"true")*[{%TN!=void} : %f_k_link_wp(%T,%S)][ (%SU)][
	_%S?_[, %f_str_replace(%SD,\n\n,\n\\\\)]]<
	\#* [\<\<%CS\>\> ]%CN : %f_k_link_wp(%C%T,%S)[ = %f_k_text_convert(%CI)]]>[
	Генерирует исключения:<
	\#* %f_k_link_wp(%E,%S)[ - %f_str_replace(%ED,\n\n,\n\\\\)]>][\
	%f_k_common_elem_docs(%S)]
//#UC END# *46E93AEF00B8*

// выводит ссылку и краткое описание атрибута для wiki
f _k_attr_dump
//#UC START# *46E93B3500C8*
	\# *%f_k_link(%S,"true")*\
	[{%TN!=void} : %f_k_link_wp(%T,%S)][ = %f_k_text_convert(%SI)]\
	[ (%SU)][
	[_%S?_][, %f_str_replace(%SD,\n\n,\n\\\\)]][
	Генерирует исключения:<
	\#* \<\<get\>\> %f_k_link_wp(%E,%S)[ - %f_str_replace(%ED,\n\n,\n\\\\)]><
	\#* \<\<set\>\> %f_k_link_wp(%e,%S)[ - %f_str_replace(%eD,\n\n,\n\\\\)]>][\
	%f_k_common_elem_docs(%S)]
//#UC END# *46E93B3500C8*

// выводит ссылку и краткое описание вложенного типа для wiki
f _k_type_dump
//#UC START# *46E93B460200*
	\# *%f_k_link(%S,"true")*[{%SS!=Servant&%SS!=SimpleClass&%SS!=Facet}\
	[{%Rx=true}: %f_k_link_wp(%R,%S)]\
	[{%Gx=true}: %f_k_link_wp(%G,%S)]\
	[{%t_is_container(%S)=true}: <{}{"%CS"=""}%f_k_link_wp(%C%T,%S)>]][ (%SU)]\

	[{%SS!=ScriptKeywordDocumentation}{\
	[
	_%S?_\
	[, %SD]\
	]\
	}\
	[
	_%S?_\
	[, %f_str_replace(%SD,\n\n,\n\\\\)]\
	]\
	]\

	[{%SS=Enum|%SS=Constants|%SS=Union}<
	\#* [\<\<%CS\>\> ]%CN[{%C%TN!=void} : %f_k_link_wp(%C%T,%S)][ - %f_str_replace(%CD,\n\n,\n\\\\)]>]
//#UC END# *46E93B460200*

// определяет нужно ли генерить список исходников в шапке wiki страницы (результат выичлсяется на
// основании того, генерится ли с элемента хоть один исходник всеми возвожмными генераторами (кроме
// wiki))
f _need_source_list
//#UC START# *471F0A37033C*
	%f_all_generators(%S)[{"<{}{%f_is_empty(ALL_GENERATORS_ID)=false}{W}%f_pop_first_to_var(ALL_GENERATORS_ID,GEN_ID)[{%{GEN_ID}N!=wiki&%{GEN_ID}N!=spell&%f_has_non_empty_gen(S,%{GEN_ID}N)=true}%f_with_gen_id(%{GEN_ID}N,%SW)]>"!=""}{false}true]
//#UC END# *471F0A37033C*

// генерит ссылку на страницу с описанием стереотипа
f _k_st_def_link
//#UC START# *4725D77C00EA*
	[{%SN!=MDAClass} \<\<\[%f_k_st_def_link_impl(%S)\]\>\>]


f _dump_st_space_key
	[{"%SU"!=""}[{}{%f_dump_st_space_key(%P)}%S#f_st_space_key()]]

f _k_st_def_link_impl
	%f_set_var(ST_SPACE_KEY,"%f_dump_st_space_key(%S)")\
	%f_set_var(EL_SPACE_KEY,"%S{space key}")\
	<{}{"%P{space key}"!=""&"%{EL_SPACE_KEY}N"=""}{%Pr}%f_set_var(EL_SPACE_KEY,"%P{space key}")>\
	[{%{ST_SPACE_KEY}N!=%{EL_SPACE_KEY}N}[%{ST_SPACE_KEY}N:]]%SS
//#UC END# *4725D77C00EA*

// генерит ссылку на файл-исходник, генерируемый элементом текущим генератором (если  сам элемент
// не создаёт файла, то генерится ссылка на файл родителя)
f _k_source_link
//#UC START# *4728392D032C*
	%f_clear_list(PATH_LIST)\
	%f_split_to_list(PATH_LIST,%SR/%SW,:)\
	[{%f_number_cmp("%f_size_list(PATH_LIST)","1","\>")=1}\
	%f_pop_first_to_var(PATH_LIST,SOURCE_PATH)\
	]\
	[{%f_is_empty(PATH_LIST)=true}\
	%f_error("_k_source_link: Wrong source path (%SR/%SW)")\
	]\
	%f_pop_first_to_var(PATH_LIST,SOURCE_PATH)\
	%f_set_var(SOURCE_PATH,"%f_str_replace(%{SOURCE_PATH}N,NotFinished/)")\
	%f_set_var(SOURCE_PATH,"%f_cut_prefix(%f_str_replace(%{SOURCE_PATH}N,NOT_FINISHED_),/)")\
	\# \{sourcelink:%{SOURCE_PATH}N\}[{"%SO"=""}\
	 (from %f_k_link_nearest_parent_with_output(%S))]\
	[{"%SO"=""}{%f_add_metadatas(S,SourceFile,%{SOURCE_PATH}N)}\
	[%f_set_var(OUTPUT_PARENT,S)\
	<{}{"%PO"!=""}{%Pr}%f_set_var(OUTPUT_PARENT,P)>[{%{OUTPUT_PARENT}U!=SU}\
	%f_add_metadatas(S,SourceFileOwnerGUID,%{OUTPUT_PARENT}U)]]]
//#UC END# *4728392D032C*

// генерит ссылку на ближайшего родителя имеющего собственный файл
f _k_link_nearest_parent_with_output
//#UC START# *472839800196*
	[%f_set_var(OUTPUT_PARENT,S)\
	<{}{"%PO"!=""}{%Pr}%f_set_var(OUTPUT_PARENT,P)>[{%{OUTPUT_PARENT}U!=SU}]%f_k_link(%{OUTPUT_PARENT})]
//#UC END# *472839800196*

// Стандартный шаблон-заголовок
f _header
//#UC START# *47382E3203B9*
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	[{%X{lid}=delphi}[// Библиотека "%f_pas_LibName(%S)"\n]]\
	[{%X{lid}=delphi}[// Автор: %f_pas_Author(%S)\n]]\
	// Модуль: "[{%f_IsSandBox(%S)!=true}{%SO}%So]"
	[{%X{lid}=delphi}[// Начат: %f_pas_Started(%S)\n]]\
	// %XN
	// Generated from UML model, root element: \
	[{%f_IsSandBox(%S)!=true}{\
	%SM\
	}\
	\<\<%SM\>\>\
	]\
	 <{}{%P#f_IsProjectGroup()!=true}{r}%PN::>%SN
	[// %S+
	]//
	[%f_str_split(%SD,// )
	//
	]\
	[{%f_IsSandBox(%S)!=true}\
	//\
	\n// Все права принадлежат ООО НПП "Гарант-Сервис".
	//\n\
	]\
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\
	%f_start_new_file(%S)
/	[{%f_start_ifdef(%S,"")}]

f _PrjName
	[{%S#f_IsProject()=true}{\
	%f_PrjName(%P)\
	}\
	%SN\
	]

f _IsSandBox
	[{%f_string_find(%SN,SandBox)=-1&%f_substr_from_begin(%f_pas_LibName(%S),7)!=SandBox&%f_substr_from_begin(%f_pas_LibName(%S),8)!=L3$Basic&%f_substr_from_begin(%f_pas_LibName(%S),12)!=ScriptEngine}{\
	true\
	}\
	[{%f_string_find(%f_PrjName(%S),Sand Box)=-1}{\
	true\
	}\
	[{%f_string_find(%f_PrjName(%S),Scripting)=-1}{\
	true\
	}\
	false\
	]\
	]\
	]
//#UC END# *47382E3203B9*

// стандартный финальный шаблон
f _footer
//#UC START# *47382E3D0186*
	[{%1N!=false&%X{lid}=cpp}[%S%f_close_ifdef()
	]]////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	%f_end_new_file(%S)\
/ empty line
	
//#UC END# *47382E3D0186*

// Стандартный шаблон-заголовок (для генерации в wiki)
f _wiki_header
//#UC START# *47382E4B0280*
	{composition-setup}
	cloak.toggle.zone=true
	cloak.memory.duration=10
	{composition-setup}
	{tip:title=%S?%f_k_st_def_link(%S)}%SN[[{%S#f_is_virtual()!=true} (\{ViewElemInRose:guid=%SU|title=открыть на модели\})] - %SD][
	
	_Идентификатор элемента:_ %SU[
	_Диаграмма элемента находится в пакете:_ <{}{%PM=UseCases::Category|%PM=Features::Category|%PM=Problems::Category|%PM=ComInterfaces::Category|%P#f_IsInterfaces()=true|%PM=Impl::Category|%PM=LibSupport::Category|%PM=ServerInterfaces::Category|%PM=Unit::Category|%PM=Views::Category|%P#f_IsVCMUnit()=true|%PM=ControllerInterfaces::Category|%P#f_IsUnit()=true}%f_k_link(%P)>]]
	{tip}[{"%S{TODO}"!=""}
	
	{warning:title=TODO}%S{TODO}
	{warning}][{%S{need UC}=true&"%S{no hands}"!="true"}
	
	{warning}Не полностью определен на модели (есть дополнительные юзер-секции кода)
	{warning}]\
	[{"%S{no hands}"="true"&"%S{finished}"!="false"}
	
	{warning:title=Предупреждение}Полностью генерируется с модели, править руками - нельзя.
	{warning}]\
	[{"%S{finished}"="false"}
	
	{warning:title=Предупреждение}Не полностью определен на модели. Генерируемые файлы могут не компилироваться.
	{warning}]\
	[{%f_need_source_list(%S)=true}
	\{toggle-cloak:id=GenSources\} \{_\}Исходники\{_\}
	\{cloak:id=GenSources\}
	%f_all_generators(%S)[<{}{%f_is_empty(ALL_GENERATORS_ID)=false}{W}%f_pop_first_to_var(ALL_GENERATORS_ID,GEN_ID)[{%{GEN_ID}N!=wiki&%{GEN_ID}N!=spell&%f_has_non_empty_gen(S,%{GEN_ID}N)=true}[{"%f_with_gen_id(%{GEN_ID}N,%SW)"!=""}\
	%f_with_gen_id(%{GEN_ID}N,%f_k_source_link(%S))
	]]>]
	\{cloak\}]

//#UC END# *47382E4B0280*

// стандартный финальный шаблон (для генерации в wiki)
f _wiki_footer
//#UC START# *47382E66008C*
	\n\n
//#UC END# *47382E66008C*

// Конвертирует переданную строку, заменяя спец. символы wiki-разметки
f _k_text_convert
//#UC START# *48CE54FE0156*
	%f_str_replace(%f_str_replace(%f_str_replace(%f_str_replace(%f_str_replace(%SN,%f_lbracket(%S),\\%f_lbracket(%S)),%f_rbracket(%S),\\%f_rbracket(%S)),%f_lbrace(%S),\\%f_lbrace(%S)),%f_rbrace(%S),\\%f_rbrace(%S)),\\\\,%f_back_slash(%S))

f _space
	 
f _quote
	"
f _empty
	
f _comma
	,
f _lbracket
	\[

f _rbracket
	\]

f _lbrace
	{

f _rbrace
	}

f _logic_and
	&

f _back_slash
	/

f _equal
	=

f _less
	\<

f _greater
	\>
//#UC END# *48CE54FE0156*

// Имя без суффикса с $
f _N
//#UC START# *4B20FF510325*
@ %SU
	%f_set_var(POS,"%f_string_find(%SN,$)")[{%{POS}N!=-1}{%SN}%f_substr_from_begin(%SN,%{POS}N)]

f _dump_list
	[{"%1N"=""}%f_error("_dump_list: не задан идентификатор списка")]\
	%f_clear_list(_DUMP_LIST_TEMP_)\
	%f_copy_list(%1N,_DUMP_LIST_TEMP_)\
	%1N:<{[{}{, }%2N]}{%f_is_empty(_DUMP_LIST_TEMP_)=false}{W}[%f_pop_first_to_var(_DUMP_LIST_TEMP_,_DUMP_LIST_TEMP_EL)%{_DUMP_LIST_TEMP_EL}N]>

//"добивает" слева число, записанное в виде строки префиксом (%2N - или 0, если не задан), чтобы длина получившейся строки была равна %1N
f _extends_number_with_prefix
	%f_set_var(KEY_LEN,"%f_string_length(%SN)")\
	%f_set_var(INDEX,"%f_evaluate(%1N - %{KEY_LEN}N)")\
	<{}{%f_number_cmp("%{INDEX}N","0","\>")=1}{W}[{}{0}%2N]%f_set_var(INDEX,"%f_evaluate(%{INDEX}N - 1)")>%SN

f _dump_0
	0
//#UC END# *4B20FF510325*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
