////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CoreTemplates/Integrated/Root/Project.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDACategory::Class>> MDProcess$CoreTemplates::CoreTemplates::Integrated::Root::Project
//
// Проект
// ---
// Рутовый элемент модели. Определяет основные проекты. Одна модель может определять несколько
// проектов, определяя связи между ними.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: Project::Category
? Проект
? Рутовый элемент модели. Определяет основные проекты. Одна модель может определять несколько проектов, определяя связи между ними.
> Requirements::Category

= Документация::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
Y code_project.gif
L code_project
// Параметры визуализации
$ C 195,245,195
$ l 80,245,90
$ f 80,245,90
M
/ - может быть основным элементом модели

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p Full MDP:b=true ? поддержка полного контроля используемости определяемого MDP
p full constraint:b=true ? Включает полный контроль за правильностью использования элементов (например при включенной опции серванты не могут нигде использоваться, кроме своих вложенных типов)
p is namespace:b=false ? определяет является ли проект неймспейсом
p root path suffix:s ? определяет префикс пути вставляемый между рутовой дирректорией и всем компонентам входящими в проект
p space key:s ? идентификатор родительского спейса для генерации в MDKnow
p space name:s ? Название родительского спейса - при генерации будет выставленно в заданное (т.е. изменено при необходимости)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	MDP

%f _wiki_up_print
	[{"%S{Full MDP}"!="%S{!Full MDP}"}%f_up_prefix(%S) *Full MDP* = *%S{Full MDP}* - поддержка полного контроля используемости определяемого MDP
	][{"%S{full constraint}"!="%S{!full constraint}"}%f_up_prefix(%S) *full constraint* = *%S{full constraint}* - Включает полный контроль за правильностью использования элементов (например при включенной опции серванты не могут нигде использоваться, кроме своих вложенных типов)
	][{"%S{is namespace}"!="%S{!is namespace}"}%f_up_prefix(%S) *is namespace* = *%S{is namespace}* - определяет является ли проект неймспейсом
	][{"%S{root path suffix}"!="%S{!root path suffix}"}%f_up_prefix(%S) *root path suffix* = *%S{root path suffix}* - определяет префикс пути вставляемый между рутовой дирректорией и всем компонентам входящими в проект
	][{"%S{space key}"!="%S{!space key}"}%f_up_prefix(%S) *space key* = *%S{space key}* - идентификатор родительского спейса для генерации в MDKnow
	][{"%S{space name}"!="%S{!space name}"}%f_up_prefix(%S) *space name* = *%S{space name}* - Название родительского спейса - при генерации будет выставленно в заданное (т.е. изменено при необходимости)
	]

%f _wiki_ProjectPageName
// возвращаемый результат: a-string
//#UC START# *4E7C7B0B0192for49F99EB100B2*
	[{%SN=Nemesis|%f_substr_from_begin(%SN,2)=F1}{\
	[{%f_substr_from_begin(%SN,13)=Shared Delphi}{\
	Модель проекта "%f_str_replace(%SN,$, )"\
	}\
	[{%SN=Shared Delphi}{\
	%f_str_replace(%f_cut_prefix(%SN,Shared Delphi ),$, )\
	}\
	%f_str_replace(%SN,$, )\
	]\
	]\
	}\
	[{%SN=F1}{\
	%f_str_replace(%f_cut_prefix(%SN,F1 ),$, )\
	}\
	%f_str_replace(%SN,$, )\
	]\
	]
//#UC END# *4E7C7B0B0192for49F99EB100B2*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for49F99EB100B2*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for49F99EB100B2*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor49F99EB100B2*
//#UC END# *4705CBD6003Efor49F99EB100B2*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for49F99EB100B2*
//#UC END# *470484D50138for49F99EB100B2*

// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for49F99EB100B2*
C conf:/[{"%S{space name}"!=""}{%SN}%S{space name}],key:%S{space key},guid:%SU/Home/%S%f_wiki_ProjectPageName():%SU
O %S%f_wiki_ProjectPageName()
	%f_wiki_header(%S)
	[h2. Модель[
	
	{info}Используемые другие проекты:
	<{}{%D#f_IsProject()=true}* \
	[{"%D{space key}"!=""}{\

	[{"%D{space name}"!=""}{\
	%DN\
	}\
	%D{space name}\
	]\

	}\[\
	[{"%D{space name}"!=""}{\
	%DN\
	}\
	%D{space name}\
	]\
	|%D{space key}:Home\
	\]\
	] %f_k_link(%D)
	>\
	{info}]\

	[
	
	{note}Дополнительные свойства:
	%S#f_wiki_up_print(){note}][{%mx=true&%Cx=true}
	
	<{----\n}_[{%mN!=Main}{Основная}%mN] диаграмма проекта:_
	%f_dump_diagram(m){ShowDiagram:%mU.jpg}
	>]][
	
	h2. Состав проекта[
	
	_Требования:_<{}{%CS=Requirements}
	\# *%f_k_link(%C)*
	_%C?_[, %f_str_replace(%CD,\n\n,\n\\\\)]>][
	
	_Модули:_<{}{%CS!=Requirements&%CS!=MDATemplates&%t_target_ex(%C)=false}
	\# *%f_k_link(%C)*
	_%C?_[, %f_str_replace(%CD,\n\n,\n\\\\)]>][
	
	_Компилируемые цели и инсталляторы:_<{}{%t_target_ex(%C)=true}
	\# *%f_k_link(%C)*
	_%C?_[, %f_str_replace(%CD,\n\n,\n\\\\)]>][
	
	_Модель шаблонов:_<{}{%CS=MDATemplates}
	\# *%f_k_link(%C)*
	_%C?_[, %f_str_replace(%CD,\n\n,\n\\\\)]>]]<%CX>
	%f_wiki_footer(%S)
//#UC END# *46E6D4BB0339for49F99EB100B2*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

