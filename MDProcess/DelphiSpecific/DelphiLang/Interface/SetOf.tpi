////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/DelphiSpecific/DelphiLang/Interface/SetOf.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::DelphiSpecific::DelphiLang::Interface::SetOf
//
// Множество
// ---
// Декларация типа определяет производный тип - множество значений исходного. Исходный задаются как
// базовый класс (связь наследования).
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: SetOf::Class
? Множество
? Декларация типа определяет производный тип - множество значений исходного. Исходный задаются как базовый класс (связь наследования).
< *::Class,*::Category

= Delphi интерфейсы и реализация::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +#-
/ - типы видимости
Y code_setof.gif
L code_setof
D
/ - запрещена форвард-декларация
// Параметры визуализации
$ C 240,205,240
$ l 120,40,120
$ f 120,40,120

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p force usage:b=false ? явно определяет, что элемент будет кем-то использован (нужно для проверки)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD

%f _wiki_up_print
	%S#[inherited][{"%S{force usage}"!="%S{!force usage}"}%f_up_prefix(%S) *force usage* = *%S{force usage}* - явно определяет, что элемент будет кем-то использован (нужно для проверки)
	]


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4721B1C60157*
c                               {}
r {<{}{}{%GC}>!=1}:             {%SS должен наследоваться точно от одного типа}
r {%f_is_used(%S)=false}:       {%SS ни кем не используется}
//#UC END# *4704C0E30186for4721B1C60157*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет префикс элемента
%f _pas_ElementPrefix
// параметры: anElement: void = %1
//#UC START# *493D246701FEfor4721B1C60157*
//#UC END# *493D246701FEfor4721B1C60157*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor4721B1C60157*
//#UC END# *470F15B800CBfor4721B1C60157*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor4721B1C60157*
R  
	[{%f_exists_in_list(GENERATED_INTF,"%f_pas_TypeName(%S)")!=true}\
	%f_add_to_list(GENERATED_INTF,"%f_pas_TypeName(%S)")\
	<{}{%f_exists_in_list(GENERATED_INTF,"%f_pas_TypeName(%G)")!=true&%f_pas_IsSameUnit(%S%P,%G%P)=true}[%GX\n]>\
	%f_pas_OpenType(%S)\
	#%f_pas_TypeName(%S) = set of %f_pas_TypeName(%G);\
	[\n# \{* %SD \}]]
//#UC END# *470F1571031Cfor4721B1C60157*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for4721B1C60157*
//#UC END# *477398E501C0for4721B1C60157*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for4721B1C60157*
//#UC END# *4774D2A20372for4721B1C60157*

// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for4721B1C60157*
G %PU
//#UC END# *46E6D4BB0339for4721B1C60157*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

