////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/Containers/UnsortedSet.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::Containers::UnsortedSet
//
// Несортированный контэйнер уникальных элементов
// ---
// Абстракция уровня реализации. Тип данных определяется атрибутом без стереотипа.
// В отличии от сортированного контейнера, использует умолчательный оператор сравнения,
// гарантирующий только уникальность, но не порядок.
// Дополнительно могут быть указанны тип аллокатора данных, как атрибут со стереотипами
// <<allocator>>.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: UnsortedSet::Class
implementation @ <<UnsortedSet>>
//? Несортированный контэйнер уникальных элементов
//? Абстракция уровня реализации. Тип данных определяется атрибутом без стереотипа.
//? В отличии от сортированного контейнера, использует умолчательный оператор сравнения, гарантирующий только уникальность, но не порядок.
//? Дополнительно могут быть указанны тип аллокатора данных, как атрибут со стереотипами <<allocator>>.
//= BaseContainer::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//Y code_unsorted_set.gif
//L code_unsorted_set

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа BaseContainer::Class
// сгенерить определение контэйнера для C++
//%f _dump_container_def_h
; // st_space_key

: dump_container_def_h OBJECT IN %S
//#UC START# *49015EE401E1for470F0922033C*
//	%f_dump_container_fwds_h(%S)\
 [%f] dump_container_fwds_h %( %S )% 
//	%f_docs(%S)\
 [%f] docs %( %S )% //	#typedef [{%C%TM!=ServerInterface::Class&%C%TM!=ServerFacet::Class}{std::set}Core::UnsortedSet] \< %f_data_dump(%S)<{}{"%CS"="allocator"}, %f_type(%C%T)> \> %SN;

//	%f_set_var(TYPEDEF,"#typedef boost::unordered_set \<%f_data_dump(%S)[\n#\t, %f_hasher_dump(%S)][\n#\t, %f_equalto_dump(%S)][\n#\t, %f_allocator_dump(%S)]\> %SN;")\
 [%f] set_var %( 'TYPEDEF' %, out_indent 'typedef boost::unordered_set <'
 [%f] data_dump %( %S )% if NOT-EMPTY
 begin
  #13#10
  out_indent #9', '
  [%f] hasher_dump %( %S )% 
 end // if
 NOP
 if NOT-EMPTY
 begin
  #13#10
  out_indent #9', '
  [%f] equalto_dump %( %S )% 
 end // if
 NOP
 if NOT-EMPTY
 begin
  #13#10
  out_indent #9', '
  [%f] allocator_dump %( %S )% 
 end // if
 NOP
 '> '
 %S |N ';' )% 
//	%f_str_replace(%f_str_replace(%{TYPEDEF}N,\>\>,\> \>),\>\>,\> \>)
 [%f] str_replace %( [%f] str_replace %( ( get_global_var ( 'TYPEDEF' ) |N ) %, '>>' %, '> >' )% %, '>>' %, '> >' )% 
//#UC END# *49015EE401E1for470F0922033C*
; // dump_container_def_h


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

//: UnsortedSet::Class::allocator::Attribute
end. // <<UnsortedSet>>

implementation @ :: <<UnsortedSet>> <<allocator>> ;
//? аллокатор
//= BaseMap::Class::allocator::Attribute

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'


//: UnsortedSet::Class::compare::Attribute
; // st_space_key

end. // :: <<UnsortedSet>> <<allocator>> ;

implementation @ :: <<UnsortedSet>> <<compare>> ;
//? Функтор сравнения элементов контейнера
//= Map::Class::compare::Attribute

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'


//: UnsortedSet::Class::hasher::Attribute
; // st_space_key

end. // :: <<UnsortedSet>> <<compare>> ;

implementation @ :: <<UnsortedSet>> <<hasher>> ;
//? Функтор ХЭШ функции контейнера
//= HashMap::Class::hasher::Attribute

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

; // st_space_key

end. // :: <<UnsortedSet>> <<hasher>> ;

