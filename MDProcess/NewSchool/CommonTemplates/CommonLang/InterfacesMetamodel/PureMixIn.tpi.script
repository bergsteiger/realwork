////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/InterfacesMetamodel/PureMixIn.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::InterfacesMetamodel::PureMixIn
//
// Абстрактная примесь.
// ---
// Отличается от Impurity тем, что определяет только интерфейс, а не реализацию.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: PureMixIn::Class
implementation @ <<PureMixIn>>
//? Абстрактная примесь.
//? Отличается от Impurity тем, что определяет только интерфейс, а не реализацию.
//> ImpurityParamType::Class

//= Facet::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//Y code_pure_mixin.gif
//L code_pure_mixin
// Параметры визуализации
//$ C 192,255,255
//$ L 0,0,0
//$ l 0,128,192
//$ F 0,0,0
//$ f 0,128,192

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет, что элемент может реализовываться классом
//%f _ClassImplementable
; // st_space_key

: ClassImplementable OBJECT IN %S
//#UC START# *49551CA202CFfor47D8087B0111*
//	false
 false
//#UC END# *49551CA202CFfor47D8087B0111*
; // ClassImplementable


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет, что элемент является интерфейсом
//%f _IsInterface
: IsInterface OBJECT IN %S
//#UC START# *49809333028Cfor47D8087B0111*
//	false
 false
//#UC END# *49809333028Cfor47D8087B0111*
; // IsInterface


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет, что элемент является чистой примесью
//%f _IsPureMixIn
: IsPureMixIn OBJECT IN %S
//#UC START# *4977065602B3for47D8087B0111*
//	true
 true
//#UC END# *4977065602B3for47D8087B0111*
; // IsPureMixIn


// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор inline файлов реализации C++ (.i.h)
//+ i.h
<<generator>> i.h OBJECT IN %S
//#UC START# *47022CCF00EAfor47D8087B0111*
//#UC END# *47022CCF00EAfor47D8087B0111*
; // i.h


// реализация абстрактного стереотипа CORBA IDL::MDAGenerator
// генератор idl спецификаций (.idl)
//+ idl
<<generator>> idl OBJECT IN %S
//#UC START# *47022BBE0261for47D8087B0111*
//#UC END# *47022BBE0261for47D8087B0111*
; // idl


// реализация абстрактного стереотипа CORBA IDL::MDAGenerator
// генератор idl спецификаций для AMI (.idl)
//+ idl_ami
<<generator>> idl_ami OBJECT IN %S
//#UC START# *47022C0F01E4for47D8087B0111*
//#UC END# *47022C0F01E4for47D8087B0111*
; // idl_ami


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor47D8087B0111*
//	<%FF>\
 INTEGER VAR l_Counter l_Counter := 0
 for %S%F
 begin
  OBJECT IN %F
  if true then
  begin
   %F |F 
   ++! l_Counter
  end // if
 end // for F
//	<{}{%CS=impurity value}%f_set_var(%CN,"%f_pas_TypeName(%C%T)")>\
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if ( ( %C |S ) %== 'impurity value' ) then
  begin
   [%f] set_var %( %C |N %, [%f] pas_TypeName %( %C ->T  )% )% 
   ++! l_Counter
  end // if
 end // for C
//	[<{}{%CC=Class&%C%f_IsClassInner()!=true}%CX\n>]\
 if NOT-EMPTY
 begin
  INTEGER VAR l_Counter l_Counter := 0
  for %S%C
  begin
   OBJECT IN %C
   if ( ( %C |C ) %== 'Class' AND 
    ( ( %C %f IsClassInner %( )% ) %!=  true  ) ) then
   begin
    %C |X #13#10 
    ++! l_Counter
   end // if
  end // for C
 end // if
 NOP
//	<{}{%CS=impurity value}%f_set_var(%CN,"")>\
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if ( ( %C |S ) %== 'impurity value' ) then
  begin
   [%f] set_var %( %C |N %, '' )% 
   ++! l_Counter
  end // if
 end // for C
//	\n(*
 #13#10'(*'
//	 %f_pas_TypeName(%S) = PureMixIn[(%f_pas_TypeName(%G))]\
 ' '
 [%f] pas_TypeName %( %S )% ' = PureMixIn'
 if NOT-EMPTY
 begin
  '('
  [%f] pas_TypeName %( %G )% ')' 
 end // if
 NOP
//	[\n  \{* %f_Doc(%S) \}]\
 if NOT-EMPTY
 begin
  #13#10'  {* '
  [%f] Doc %( %S )% ' }' 
 end // if
 NOP
//	[\n  Params : <{, }{%CS=impurity param}%f_pas_TypeName(%C%T)>]
 if NOT-EMPTY
 begin
  #13#10'  Params : '
  INTEGER VAR l_Counter l_Counter := 0
  for %S%C
  begin
   OBJECT IN %C
   if ( ( %C |S ) %== 'impurity param' ) then
   begin
    if ( l_Counter >0 ) then ( ', ' )
    [%f] pas_TypeName %( %C ->T  )% 
    ++! l_Counter
   end // if
  end // for C
 end // if
 NOP
//	%f_pas_OutFacetBody(%S)\
 [%f] pas_OutFacetBody %( %S )% 
//	 end;//%f_pas_TypeName(%S)
 ' end;//'
 [%f] pas_TypeName %( %S )% 
//	*)
 '*)'
//#UC END# *470F1571031Cfor47D8087B0111*
; // intf.pas


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

//: PureMixIn::Class::impurity param::Attribute
end. // <<PureMixIn>>

implementation @ :: <<PureMixIn>> <<"impurity param">> ;
//? Параметр класса примеси.
//= ClassBaseGenerator::MDAGenerator

// Параметры стереотипа
//Y code_impurity_param.gif
//L code_impurity_param
//l a
// - возможные типы связи атрибута

// Генераторы
// генератор idl спецификаций (.idl)
//+ idl
<<generator>> idl OBJECT IN %S
//#UC START# *47022BBE0261for47D809DF007B*
//#UC END# *47022BBE0261for47D809DF007B*
; // idl


// генератор idl спецификаций для AMI (.idl)
//+ idl_ami
<<generator>> idl_ami OBJECT IN %S
//#UC START# *47022C0F01E4for47D809DF007B*
//#UC END# *47022C0F01E4for47D809DF007B*
; // idl_ami


// генератор inline файлов реализации C++ (.i.h)
//+ i.h
<<generator>> i.h OBJECT IN %S
//#UC START# *47022CCF00EAfor47D809DF007B*
//#UC END# *47022CCF00EAfor47D809DF007B*
; // i.h


// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor47D809DF007B*
//#UC END# *470F1571031Cfor47D809DF007B*
; // intf.pas


// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for47D809DF007B*
//#UC END# *46E6D4BB0339for47D809DF007B*
; // wiki


// генератор заголовочных файлов C++ (.h)
//+ h
<<generator>> h OBJECT IN %S
//#UC START# *47022C88029Ffor47D809DF007B*
//#UC END# *47022C88029Ffor47D809DF007B*
; // h


// генератор файлов реализации C++ (.cpp)
//+ cpp
<<generator>> cpp OBJECT IN %S
//#UC START# *47022CB8034Bfor47D809DF007B*
//#UC END# *47022CB8034Bfor47D809DF007B*
; // cpp


// генератор классов, интерфейсов на java (.java)
//+ java
<<generator>> java OBJECT IN %S
//#UC START# *470321950119for47D809DF007B*
//#UC END# *470321950119for47D809DF007B*
; // java


// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor47D809DF007B*
//#UC END# *470321C1038Afor47D809DF007B*
; // fctr.java


// Реализация на Delphi(.pas)
//+ impl.pas
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor47D809DF007B*
//#UC END# *470F15B800CBfor47D809DF007B*
; // impl.pas


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
; // st_space_key

<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for47D809DF007B*
//c	{}
//r {""=""}: {}
//#UC END# *4704C0E30186for47D809DF007B*
; // constraint


// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
//%f _wiki_child_kind
: wiki_child_kind OBJECT IN %S
//#UC START# *4705CBD6003Efor47D809DF007B*
//#UC END# *4705CBD6003Efor47D809DF007B*
; // wiki_child_kind


// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for47D809DF007B*
//#UC END# *470484D50138for47D809DF007B*
; // wiki_up_add_gen



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // :: <<PureMixIn>> <<"impurity param">> ;

