////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/Target/ExeTarget.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDACategory::Class>> MDProcess$Templates::CommonTemplates::CommonLang::Target::ExeTarget
//
// Исполнимый модуль
// ---
// Определяет исполнимый файл - агрегацию серверных компонент (и других модулей компиляции).
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: ExeTarget::Category
implementation @ <<ExeTarget>>
//? Исполнимый модуль
//? Определяет исполнимый файл - агрегацию серверных компонент (и других модулей компиляции).
//= AbstractTarget::Category
//= C++ интерфейсы и реализация::MDAGenerator
//= Проектные файлы Java::MDAGenerator
//= Delphi интерфейсы и реализация::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//Y code_exe_target.gif
//L code_exe_target
//D
// - запрещена форвард-декларация
// Параметры визуализации
//$ C 195,245,195
//$ l 80,245,80
//$ f 80,245,90

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p thread pool size:s ? определяет кол-во потоков в Пуле Потоков приложения
//p external name:s ? внешнее имя изсполнимого модуля

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S%[Delphi интерфейсы и реализация::MDAGenerator]f_wiki_up_print()[{"%S{thread pool size}"!="%S{!thread pool size}"}%f_up_prefix(%S) *thread pool size* = *%S{thread pool size}* - определяет кол-во потоков в Пуле Потоков приложения
 call-inherited:: 'Delphi интерфейсы и реализация' wiki_up_print %( )%
 if ( ( %S get_up ( 'thread pool size' ) ) %!= ( %S get_up_def ( 'thread pool size' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *thread pool size* = *'
  %S get_up ( 'thread pool size' ) '* - определяет кол-во потоков в Пуле Потоков приложения'
//	][{"%S{external name}"!="%S{!external name}"}%f_up_prefix(%S) *external name* = *%S{external name}* - внешнее имя изсполнимого модуля
 end // if
 if ( ( %S get_up ( 'external name' ) ) %!= ( %S get_up_def ( 'external name' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *external name* = *'
  %S get_up ( 'external name' ) '* - внешнее имя изсполнимого модуля'
//	][{"%S{old format}"!="%S{!old format}"}%f_up_prefix(%S) *old format* = *%S{old format}* - включает генерацию дополнительного кода для совместимости со старым сервером
 end // if
 if ( ( %S get_up ( 'old format' ) ) %!= ( %S get_up_def ( 'old format' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *old format* = *'
  %S get_up ( 'old format' ) '* - включает генерацию дополнительного кода для совместимости со старым сервером'
//	][{"%S{CONFIG_UC}"!="%S{!CONFIG_UC}"}%f_up_prefix(%S) *CONFIG_UC* = *%S{CONFIG_UC}* - Генерить юзер-секции в конфигурационный файл
 end // if
 if ( ( %S get_up ( 'CONFIG_UC' ) ) %!= ( %S get_up_def ( 'CONFIG_UC' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *CONFIG_UC* = *'
  %S get_up ( 'CONFIG_UC' ) '* - Генерить юзер-секции в конфигурационный файл'
//	]
 end // if

// специфичные данные, необходимые для включения в classpath
//%f _specific_classpath_entries
; // wiki_up_print

: specific_classpath_entries OBJECT IN %S
//#UC START# *4AA8997F0292for470382290251*
//		\<classpathentry kind="con" path="ru.garant.shared.support.DIR_CONTAINER/JAVA_EXTERNAL/current_lib/jar,zip"/\>
 '	<classpathentry kind="con" path="ru.garant.shared.support.DIR_CONTAINER/JAVA_EXTERNAL/current_lib/jar,zip"/>'
//		\<classpathentry kind="con" path="ru.garant.shared.support.DIR_CONTAINER/JAVA_EXTERNAL/current_lib/common_lib/jar,zip"/\>
 '	<classpathentry kind="con" path="ru.garant.shared.support.DIR_CONTAINER/JAVA_EXTERNAL/current_lib/common_lib/jar,zip"/>'
//#UC END# *4AA8997F0292for470382290251*
; // specific_classpath_entries


// дополнительные исходники, подключаемые к проекту
//%f _specific_project_linked_source
: specific_project_linked_source OBJECT IN %S
//#UC START# *4AA89A2E01CEfor470382290251*
//#UC END# *4AA89A2E01CEfor470382290251*
; // specific_project_linked_source


// список задач через запятую, которые нужно запускать после выполнения команды "Clean"
//%f _attr_ant_after_clean_targets
: attr_ant_after_clean_targets OBJECT IN %S
//#UC START# *4AA89C080397for470382290251*
//	idlcomp,gcomp,
 'idlcomp,gcomp,'
//#UC END# *4AA89C080397for470382290251*
; // attr_ant_after_clean_targets


// Определяет является ли приложение тестом
//%f _IsTest
: IsTest OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *4B2A46060306for470382290251*
//	false
 false
//#UC END# *4B2A46060306for470382290251*
; // IsTest


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
//%f _DoSpell
: DoSpell OBJECT IN %S
//#UC START# *4B2A19E3038Bfor470382290251*
//	%S%[inherited]\
 inherited
//	[{%S%f_IsTest()=true}\
 if ( ( %S %f IsTest %( )% ) %==  true ) then
 begin


//	[{%SS=VCMTestTarget}{\
  if ( ( %S |S ) %== 'VCMTestTarget' ) then
  begin
//	[{<{}{%D#f_IsVCMGUI()=true&%D{F1Like}=false}{C}>=0}{\
   if ( 
    INTEGER VAR l_Counter l_Counter := 0
    for %S%D
    begin
     OBJECT IN %D
     if ( ( %D %?f IsVCMGUI %( )% ) %==  true AND 
      ( ( %D get_up ( 'F1Like' ) ) %==  false  ) ) then
     begin

      ++! l_Counter
     end // if
    end // for D
    l_Counter
    %== 0 ) then
   begin
//	[{"%{TF1AutoTestSuite}N"=""}%f_find_element(TF1AutoTestSuite,TF1AutoTestSuite)]\
    if ( ( ( get_global_var ( 'TF1AutoTestSuite' ) |N ) ) %== '' ) then
    begin
     [%f] find_element %( 'TF1AutoTestSuite' %, 'TF1AutoTestSuite' )% 
    end // if
//	%S%f_make_accessable(%{TF1AutoTestSuite}U)\
    %S %f make_accessable %( ( get_global_var ( 'TF1AutoTestSuite' ) |U ) )% 
//	%f_addCDep(%S,%{TF1AutoTestSuite})\
    [%f] addCDep %( %S %, ( get_global_var ( 'TF1AutoTestSuite' ) ) )% 
//	]\
   end // if
   else
   begin
//	[{"%{TAutoTestsSuite}N"=""}%f_find_element(TAutoTestsSuite,TAutoTestsSuite)]\
    if ( ( ( get_global_var ( 'TAutoTestsSuite' ) |N ) ) %== '' ) then
    begin
     [%f] find_element %( 'TAutoTestsSuite' %, 'TAutoTestsSuite' )% 
    end // if
//	%S%f_make_accessable(%{TAutoTestsSuite}U)\
    %S %f make_accessable %( ( get_global_var ( 'TAutoTestsSuite' ) |U ) )% 
//	%f_addCDep(%S,%{TAutoTestsSuite})\
    [%f] addCDep %( %S %, ( get_global_var ( 'TAutoTestsSuite' ) ) )% 
//	}\
   end // else
//	]\
  end // if
  else
  begin
//	[{%S{is insider test}!=true}\
   if ( ( %S get_up ( 'is insider test' ) ) %!=  true ) then
   begin
//	[{%S{no scripts}!=true}\
    if ( ( %S get_up ( 'no scripts' ) ) %!=  true ) then
    begin
//	[{"%{TAutoTestsSuite}N"=""}%f_find_element(TAutoTestsSuite,TAutoTestsSuite)]\
     if ( ( ( get_global_var ( 'TAutoTestsSuite' ) |N ) ) %== '' ) then
     begin
      [%f] find_element %( 'TAutoTestsSuite' %, 'TAutoTestsSuite' )% 
     end // if
//	%S%f_make_accessable(%{TAutoTestsSuite}U)\
     %S %f make_accessable %( ( get_global_var ( 'TAutoTestsSuite' ) |U ) )% 
//	%f_addCDep(%S,%{TAutoTestsSuite})\
     [%f] addCDep %( %S %, ( get_global_var ( 'TAutoTestsSuite' ) ) )% 
//	[{"%{TtfwScriptEngineEX}N"=""}%f_find_element(TtfwScriptEngineEX,TtfwScriptEngineEX)]\
     if ( ( ( get_global_var ( 'TtfwScriptEngineEX' ) |N ) ) %== '' ) then
     begin
      [%f] find_element %( 'TtfwScriptEngineEX' %, 'TtfwScriptEngineEX' )% 
     end // if
//	%S%f_make_accessable(%{TtfwScriptEngineEX}U)\
     %S %f make_accessable %( ( get_global_var ( 'TtfwScriptEngineEX' ) |U ) )% 
//	%f_addCDep(%S,%{TtfwScriptEngineEX})\
     [%f] addCDep %( %S %, ( get_global_var ( 'TtfwScriptEngineEX' ) ) )% 
//	]\
    end // if
//	]\
   end // if
//	}\
  end // else


//	[{"%{Exception}N"=""}%f_find_element(4787A405013D,Exception)]\
  if ( ( ( get_global_var ( 'Exception' ) |N ) ) %== '' ) then
  begin
   [%f] find_element %( '4787A405013D' %, 'Exception' )% 
  end // if
//	%S%f_make_accessable(%{Exception}U)\
  %S %f make_accessable %( ( get_global_var ( 'Exception' ) |U ) )% 
//	%f_addCDep(%S,%{Exception})\
  [%f] addCDep %( %S %, ( get_global_var ( 'Exception' ) ) )% 

//	[{"%{l3Base}N"=""}%f_find_element(4773D64E036C,l3Base)]\
  if ( ( ( get_global_var ( 'l3Base' ) |N ) ) %== '' ) then
  begin
   [%f] find_element %( '4773D64E036C' %, 'l3Base' )% 
  end // if
//	%S%f_make_accessable(%{l3Base}U)\
  %S %f make_accessable %( ( get_global_var ( 'l3Base' ) |U ) )% 
//	%f_addCDep(%S,%{l3Base})\
  [%f] addCDep %( %S %, ( get_global_var ( 'l3Base' ) ) )% 

//	[{"%{TKBridge}N"=""}%f_find_element(TKBridge,TKBridge)]\
  if ( ( ( get_global_var ( 'TKBridge' ) |N ) ) %== '' ) then
  begin
   [%f] find_element %( 'TKBridge' %, 'TKBridge' )% 
  end // if
//	%S%f_make_accessable(%{TKBridge}U)\
  %S %f make_accessable %( ( get_global_var ( 'TKBridge' ) |U ) )% 
//	%f_addCDep(%S,%{TKBridge})\
  [%f] addCDep %( %S %, ( get_global_var ( 'TKBridge' ) ) )% 

//	[{"%{KTestRunner}N"=""}%f_find_element(KTestRunner,KTestRunner)]\
  if ( ( ( get_global_var ( 'KTestRunner' ) |N ) ) %== '' ) then
  begin
   [%f] find_element %( 'KTestRunner' %, 'KTestRunner' )% 
  end // if
//	%S%f_make_accessable(%{KTestRunner}U)\
  %S %f make_accessable %( ( get_global_var ( 'KTestRunner' ) |U ) )% 
//	%f_addCDep(%S,%{KTestRunner})\
  [%f] addCDep %( %S %, ( get_global_var ( 'KTestRunner' ) ) )% 

//	[{"%{TextTestRunner}N"=""}%f_find_element(TextTestRunner,TextTestRunner)]\
  if ( ( ( get_global_var ( 'TextTestRunner' ) |N ) ) %== '' ) then
  begin
   [%f] find_element %( 'TextTestRunner' %, 'TextTestRunner' )% 
  end // if
//	%S%f_make_accessable(%{TextTestRunner}U)\
  %S %f make_accessable %( ( get_global_var ( 'TextTestRunner' ) |U ) )% 
//	%f_addCDep(%S,%{TextTestRunner})\
  [%f] addCDep %( %S %, ( get_global_var ( 'TextTestRunner' ) ) )% 

//	[{"%{GUITestRunner}N"=""}%f_find_element(GUITestRunner,GUITestRunner)]\
  if ( ( ( get_global_var ( 'GUITestRunner' ) |N ) ) %== '' ) then
  begin
   [%f] find_element %( 'GUITestRunner' %, 'GUITestRunner' )% 
  end // if
//	%S%f_make_accessable(%{GUITestRunner}U)\
  %S %f make_accessable %( ( get_global_var ( 'GUITestRunner' ) |U ) )% 
//	%f_addCDep(%S,%{GUITestRunner})\
  [%f] addCDep %( %S %, ( get_global_var ( 'GUITestRunner' ) ) )% 

//	[{%S{no scripts}!=true}\
  if ( ( %S get_up ( 'no scripts' ) ) %!=  true ) then
  begin
//	[{"%{TvcmInsiderTest}N"=""}%f_find_element(TvcmInsiderTest,TvcmInsiderTest)]\
   if ( ( ( get_global_var ( 'TvcmInsiderTest' ) |N ) ) %== '' ) then
   begin
    [%f] find_element %( 'TvcmInsiderTest' %, 'TvcmInsiderTest' )% 
   end // if
//	%S%f_make_accessable(%{TvcmInsiderTest}U)\
   %S %f make_accessable %( ( get_global_var ( 'TvcmInsiderTest' ) |U ) )% 
//	%f_addCDep(%S,%{TvcmInsiderTest})\
   [%f] addCDep %( %S %, ( get_global_var ( 'TvcmInsiderTest' ) ) )% 
//	]\
  end // if
//	]
 end // if
//#UC END# *4B2A19E3038Bfor470382290251*
; // DoSpell


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
//%f _IsExeTarget
: IsExeTarget OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *4B2A4565034Dfor470382290251*
//	true
 true
//#UC END# *4B2A4565034Dfor470382290251*
; // IsExeTarget


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя модуля в котором содержится элемент
//%f _pas_UnitName
: pas_UnitName OBJECT IN %S
//#UC START# *4948065C01DFfor470382290251*
//	%f_N(%S)[{%S%f_IsTest()=true}[{%SS=VCMTestTarget}App]Test]
 [%f] N %( %S )% if ( ( %S %f IsTest %( )% ) %==  true ) then
 begin
  if ( ( %S |S ) %== 'VCMTestTarget' ) then
  begin
   'App' 
  end // if
  'Test' 
 end // if
//#UC END# *4948065C01DFfor470382290251*
; // pas_UnitName


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Путь к модулю
//%f _pas_UnitPath
: pas_UnitPath OBJECT IN %S
//#UC START# *4948C3290020for470382290251*
//	%S%[inherited]\
 inherited
//	[{%S%f_IsTest()=true}{\
 if ( ( %S %f IsTest %( )% ) %==  true ) then
 begin
//	[{%SS=VCMTestTarget|%S{need UC in project}=true}{\
  if ( ( %S |S ) %== 'VCMTestTarget' OR 
    ( ( %S get_up ( 'need UC in project' ) ) %==  true  ) ) then
  begin

//	/Test\
//	]\
  end // if
  else
  begin
//	/%f_cut_prefix(%f_N(%S),Release)Test\
   '/'
   [%f] cut_prefix %( [%f] N %( %S )% %, 'Release' )% 'Test'
//	}\
  end // else
//	]%S{path suffix}
 end // if
 else
 begin
//	[{%S{need UC in project}=true}{\
  if ( ( %S get_up ( 'need UC in project' ) ) %==  true ) then
  begin
//	]\
  end // if
  else
  begin
//	/%f_N(%S)\
   '/'
   [%f] N %( %S )% 
//	}\
  end // else
//	}\
 end // else
 %S get_up ( 'path suffix' ) 
//#UC END# *4948C3290020for470382290251*
; // pas_UnitPath


// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for470382290251*
//c                  {}
//r {"%ax"="true"}:  {%SS cant be used as target of dependence}
//r {"%f_check_duplicate_params(%S,"LIB")"!=""}:     {Duplicate Attribute in diffrent Setting container:%f_check_duplicate_params(%S,"LIB")}
//r {"%f_check_duplicate_params(%S,"TARGET")"!=""}:     {Duplicate Attribute in diffrent Setting container in one Target:%f_check_duplicate_params(%S,"TARGET")}
//r {"%f_check_non_overload_member(%S)"!=""}:           {Non overided members found:%f_check_non_overload_member(%S)}
//#UC END# *4704C0E30186for470382290251*
; // constraint


// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор файлов реализации C++ (.cpp)
//+ cpp
<<generator>> cpp OBJECT IN %S
//#UC START# *47022CB8034Bfor470382290251*
//S [{"%S{is namespace}"="true"}namespace %SN {\n]
//s [{"%S{is namespace}"="true"}} // namespace %SN\n]
//C /%SN
//O %SN_main.cpp
//	%f_output_constraint(%S)\
 [%f] output_constraint %( %S )% 
//	%f_header(%S)
 [%f] header %( %S )% 
//	\#include "shared/Core/sys/AutoInit.h"
 '#include "shared/Core/sys/AutoInit.h"'
//	%f_std_inc(%S)
 [%f] std_inc %( %S )% 
//	\#include "shared/Core/GDS/MemoryWatcher.h"
 '#include "shared/Core/GDS/MemoryWatcher.h"'
//	\#include "shared/Core/GDS/ObjectWatcher.h"	
 '#include "shared/Core/GDS/ObjectWatcher.h"	'
//	[{"%f_use_mem_pool(%S)"="true"}\#include "shared/Core/mng/PoolMemoryManager.h"
 if ( ( [%f] use_mem_pool %( %S )% ) %== true ) then
 begin
  '#include "shared/Core/mng/PoolMemoryManager.h"'
//	][{"%f_use_obj_pool(%S)"="true"}\#include "shared/Core/mng/PoolObjectManager.h"
 end // if
 if ( ( [%f] use_obj_pool %( %S )% ) %== true ) then
 begin
  '#include "shared/Core/mng/PoolObjectManager.h"'
//	]\#include [{%f_use_server(%S)=true&"%S{old format}"="false"}{"shared/Core/impl/Root_i/StdLibHomeManager_factory.h"}"shared/CoreSrv/impl/Root_i/CorbaLibHomeManager_factory.h"]
 end // if
 '#include '
 if ( ( [%f] use_server %( %S )% ) %==  true AND 
   ( ( %S get_up ( 'old format' ) ) %== false  ) ) then
 begin
  'shared/CoreSrv/impl/Root_i/CorbaLibHomeManager_factory.h' 
 end // if
 else
 begin
  'shared/Core/impl/Root_i/StdLibHomeManager_factory.h' 
 end // else
//	\#include "shared/Core/impl/ParamsImpl/ParamManagerImpl_factory.h"
 '#include "shared/Core/impl/ParamsImpl/ParamManagerImpl_factory.h"'
//	[%f_inc_all_dep(%S)
 if NOT-EMPTY
 begin
  [%f] inc_all_dep %( %S )% 
//	][{"%S{old format}"="true"}%U[{_CUSTOM_INCLUDE}
 end // if
 NOP
 if ( ( %S get_up ( 'old format' ) ) %== true ) then
 begin
  %Usersection (
   '_CUSTOM_INCLUDE' 
  )
  (
   #13#10

//	]

  ) // Usersection
 //	][{%f_use_event_service(%S)}\#include "orbsvcs/orbsvcs/Event/EC_Default_Factory.h"
 end // if
 if ( ( [%f] use_event_service %( %S )% ) ) then
 begin
  '#include "orbsvcs/orbsvcs/Event/EC_Default_Factory.h"'
//	\#include "orbsvcs/Event/EC_Dispatching_Task.h"
  '#include "orbsvcs/Event/EC_Dispatching_Task.h"'
//	
  #13#10

//	\#if !defined (ACE_WIN32) || (defined (ACE_WIN32) && defined (ACE_AS_STATIC_LIBS))
  '#if !defined (ACE_WIN32) || (defined (ACE_WIN32) && defined (ACE_AS_STATIC_LIBS))'
//	ACE_STATIC_SVC_REQUIRE (TAO_EC_Default_Factory);
  'ACE_STATIC_SVC_REQUIRE (TAO_EC_Default_Factory);'
//	ACE_STATIC_SVC_REQUIRE (TAO_EC_Simple_Queue_Full_Action);
  'ACE_STATIC_SVC_REQUIRE (TAO_EC_Simple_Queue_Full_Action);'
//	\#endif][
  '#endif' 
 end // if
 if NOT-EMPTY
 begin
  #13#10

//	%S%f_open_ifdef()]
  %S %f open_ifdef %( )% 
 end // if
 NOP
//	
//	void print_usage (const Core::Root::LibHomeManager& lhm) {
 'void print_usage (const Core::Root::LibHomeManager& lhm) {'
//	%f_str_split(%SN[{"%SD"!=""} - %f_str_replace(%f_str_replace(%SD,\\,\\\\),%f_dump_q(%S),%f_dump_escq(%S))]\\n%f_dump_q(%S);,	std::cout \<\< %f_dump_q(%S),\\n%f_dump_q(%S);\n,90)
 [%f] str_split %( %S |N if ( ( %S |D ) %!= '' ) then
 begin
  ' - '
  [%f] str_replace %( [%f] str_replace %( %S |D %, '\' %, '\\' )% %, [%f] dump_q %( %S )% %, [%f] dump_escq %( %S )% )% 
 end // if
 '\n'
 [%f] dump_q %( %S )% ';' %, '	std::cout << '
 [%f] dump_q %( %S )% %, '\n'
 [%f] dump_q %( %S )% ';'#13#10 %, 90 )% 
//		std::cout \<\< std::endl;
 '	std::cout << std::endl;'
//		lhm.print_usage ();
 '	lhm.print_usage ();'
//		std::cout \<\< "\\nВсе права принадлежат ООО НПП \\"Гарант-Сервис\\"\\n";
 '	std::cout << "\nВсе права принадлежат ООО НПП \"Гарант-Сервис\"\n";'
//	}
 '}'
//	
//	/// main-function wrapper
 '/// main-function wrapper'
//	class MainFunction {
 'class MainFunction {'
//	public:
 'public:'
//		static int execute (int argc, char** argv) {
 '	static int execute (int argc, char** argv) {'
//			int ret_code = 0;
 '		int ret_code = 0;'
//			Core::AutoInit auto_init;
 '		Core::AutoInit auto_init;'
//	
//			Core::select_log_format_set (Core::LFI_FULL);
 '		Core::select_log_format_set (Core::LFI_FULL);'
//	
//			{
 '		{'
//				[{%f_use_server(%S)=true&"%S{old format}"="false"}{Core::Root_i::Std}CoreSrv::Root_i::Corba]LibHomeManager_factory_var f = new [{%f_use_server(%S)=true&"%S{old format}"="false"}{Core::Root_i::Std}CoreSrv::Root_i::Corba]LibHomeManager_factory ();
 '			'
 if ( ( [%f] use_server %( %S )% ) %==  true AND 
   ( ( %S get_up ( 'old format' ) ) %== false  ) ) then
 begin
  'CoreSrv::Root_i::Corba' 
 end // if
 else
 begin
  'Core::Root_i::Std' 
 end // else
 'LibHomeManager_factory_var f = new '
 if ( ( [%f] use_server %( %S )% ) %==  true AND 
   ( ( %S get_up ( 'old format' ) ) %== false  ) ) then
 begin
  'CoreSrv::Root_i::Corba' 
 end // if
 else
 begin
  'Core::Root_i::Std' 
 end // else
 'LibHomeManager_factory ();'
//				f-\>registrate_me(0);
 '			f->registrate_me(0);'
//			}
 '		}'
//			{
 '		{'
//				Core::ParamsImpl::ParamManagerImpl_factory_var f = new Core::ParamsImpl::ParamManagerImpl_factory ();
 '			Core::ParamsImpl::ParamManagerImpl_factory_var f = new Core::ParamsImpl::ParamManagerImpl_factory ();'
//				f-\>registrate_me(0);
 '			f->registrate_me(0);'
//			}
 '		}'
//			try {
 '		try {'
//	[{"%S{old format}"="true"}{%f_dump_default_param_manager_init(%S)}			%U[{_PARAM_MANAGER_INIT}
 if ( ( %S get_up ( 'old format' ) ) %== true ) then
 begin
  '			'
  %Usersection (
   '_PARAM_MANAGER_INIT' 
  )
  (
   #13#10

//	%f_dump_default_param_manager_init(%S)
   [%f] dump_default_param_manager_init %( %S )% 
//				]]
   '			' 
  ) // Usersection
  end // if
 else
 begin
  [%f] dump_default_param_manager_init %( %S )% 
 end // else
//			} CATCH_AND_LOG ("while init ParamManager executed")
 '		} CATCH_AND_LOG ("while init ParamManager executed")'
//			
 '		'
//			Core::Root::LibHomeManager& lhm = Core::Root::LibHomeManagerFactory::get();
 '		Core::Root::LibHomeManager& lhm = Core::Root::LibHomeManagerFactory::get();'
//	[%f_reg_all_dep(%S)
 if NOT-EMPTY
 begin
  [%f] reg_all_dep %( %S )% 
//	]		if (
 end // if
 NOP
 '		if ('
//				Core::ParamManagerFactory::get ().is_exist ("-help")
 '			Core::ParamManagerFactory::get ().is_exist ("-help")'
//				|| Core::ParamManagerFactory::get ().is_exist ("-h")
 '			|| Core::ParamManagerFactory::get ().is_exist ("-h")'
//				|| Core::ParamManagerFactory::get ().is_exist ("-?")
 '			|| Core::ParamManagerFactory::get ().is_exist ("-?")'
//			) {
 '		) {'
//				print_usage(lhm);
 '			print_usage(lhm);'
//				return ret_code;
 '			return ret_code;'
//			}
 '		}'
//			if (!lhm.check_params ()) {
 '		if (!lhm.check_params ()) {'
//				print_usage (lhm);
 '			print_usage (lhm);'
//				return 1;
 '			return 1;'
//			}
 '		}'
//			
 '		'
//			try {
 '		try {'
//				lhm.execute ();
 '			lhm.execute ();'
//				ret_code = lhm.wait_all () == 0 ? 0 : 2;
 '			ret_code = lhm.wait_all () == 0 ? 0 : 2;'
//			} CATCH_LOG_AND_DO ("while HomeManager processed", ret_code = 3;)
 '		} CATCH_LOG_AND_DO ("while HomeManager processed", ret_code = 3;)'
//		
 '	'
//			lhm.finalize ();
 '		lhm.finalize ();'
//			
 '		'
//			return ret_code;
 '		return ret_code;'
//		}
 '	}'
//	};
 '};'
//	
//	int main (int argc, char** argv) {
 'int main (int argc, char** argv) {'
//		return MainFunction::execute (argc, argv);
 '	return MainFunction::execute (argc, argv);'
//	}<{}{"%CM"!="Settings::Class"}{%C}%CX>
 '}'
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if ( ( %C |M ) %!= 'Settings::Class' ) then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//	%f_footer(%S)
 [%f] footer %( %S )% 

//f _dump_default_param_manager_init
; // cpp

end. // <<ExeTarget>>

: dump_default_param_manager_init OBJECT IN %S
//				Core::ParamManagerInitData init = {"%SN", "Core::RegistryHelper::KEY_LOCAL_MACHINE\\\\Software\\\\Garant\\\\%PN\\\\%SN"};
 '			Core::ParamManagerInitData init = {"'
 %S |N '", "Core::RegistryHelper::KEY_LOCAL_MACHINE\\Software\\Garant\\'
 %P |N '\\'
 %S |N '"};'
//				Core::ParamManagerFactory::get ().init (Core::ParamConvert::make_arg_list (argc, argv), init);
 '			Core::ParamManagerFactory::get ().init (Core::ParamConvert::make_arg_list (argc, argv), init);'
//#UC END# *47022CB8034Bfor470382290251*
; // dump_default_param_manager_init


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
//+ impl.pas
implementation @ <<ExeTarget>>
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor470382290251*
//#UC END# *470F15B800CBfor470382290251*
; // impl.pas


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor470382290251*
//O [{"%f_pas_UnitFileName(%S)"!=""}[{%S{finished}!=true}NOT_FINISHED_]%f_pas_UnitFileName(%S)]
//C %S%f_pas_UnitPath()
//	%f_clear_list(TOTAL_USES)\
 [%f] clear_list %( 'TOTAL_USES' )% 
//	%f_pas_OpenUnitInterface(%S)\
 [%f] pas_OpenUnitInterface %( %S )% 

//	[{%S{console}=true}\
 if ( ( %S get_up ( 'console' ) ) %==  true ) then
 begin
//	
  #13#10

//	\{$APPTYPE CONSOLE\}
  '{$APPTYPE CONSOLE}'
//	]\
 end // if

//	[{%S{console}!=true}\
 if ( ( %S get_up ( 'console' ) ) %!=  true ) then
 begin
//	%f_pas_PutToUses("ControlResizeBugFix")\
  [%f] pas_PutToUses %( 'ControlResizeBugFix' )% 
//	]\
 end // if

//	[{%SS=VCMTestTarget}\
 if ( ( %S |S ) %== 'VCMTestTarget' ) then
 begin
//	<{}{%D#f_IsVCMGUI()=true}\
  INTEGER VAR l_Counter l_Counter := 0
  for %S%D
  begin
   OBJECT IN %D
   if ( ( %D %?f IsVCMGUI %( )% ) %==  true ) then
   begin
//	%D%f_OutExtIntfUses()\
    %D %f OutExtIntfUses %( )% 
//	%f_cycle_break(%S)\
    [%f] cycle_break %( %S )% 
//	>\

    ++! l_Counter
   end // if
  end // for D
//	]\
 end // if

//	%S%f_pas_TotalUses()\
 %S %f pas_TotalUses %( )% 
//	[{%S{need UC in project}=true}\
 if ( ( %S get_up ( 'need UC in project' ) ) %==  true ) then
 begin
//	\n%U[{manualuses}\n]\
  #13#10
  %Usersection (
   'manualuses' 
  )
  (
   #13#10 
  ) // Usersection
 //	]\
 end // if
//	%f_pas_CloseUses(%S)\
 [%f] pas_CloseUses %( %S )% 
//	%f_clear_TotalUses(%S)\
 [%f] clear_TotalUses %( %S )% 
//	
//	[{%S{console}!=true}\
 if ( ( %S get_up ( 'console' ) ) %!=  true ) then
 begin
//	\{$R [{%S{finished}!=true}NOT_FINISHED_]%f_pas_UnitName(%S).res\}\
  '{$R '
  if ( ( %S get_up ( 'finished' ) ) %!=  true ) then
  begin
   'NOT_FINISHED_' 
  end // if
  [%f] pas_UnitName %( %S )% '.res}'
//	[{%S{needs second icon}=true}\n\{$R main_icon2.res\} // вторая иконка приложения]
  if ( ( %S get_up ( 'needs second icon' ) ) %==  true ) then
  begin
   #13#10'{$R main_icon2.res} // вторая иконка приложения' 
  end // if
//	
  #13#10

//	]\
 end // if
//	[{%S{need UC in project}=true}\
 if ( ( %S get_up ( 'need UC in project' ) ) %==  true ) then
 begin
//	%U[{manualres}\n]\n
  %Usersection (
   'manualres' 
  )
  (
   #13#10 
  ) // Usersection
   #13#10
//	]\
 end // if

//	begin
 'begin'
//	[{%S%f_IsTest()=true}{\
 if ( ( %S %f IsTest %( )% ) %==  true ) then
 begin
//	 \{$IfDef nsTest\}
  ' {$IfDef nsTest}'
//	 g_CVSPath := '%f_str_replace(%SR%Sd,/,\\)';
  ' g_CVSPath := '''
  [%f] str_replace %( %S |R %S |d %, '/' %, '\' )% '';'
//	 \{$EndIf nsTest\}
  ' {$EndIf nsTest}'
//	 %U[{CVSPath}\n ]
  ' '
  %Usersection (
   'CVSPath' 
  )
  (
   #13#10' ' 
  ) // Usersection
 //	[{%S{need UC in project}=true}{\
  if ( ( %S get_up ( 'need UC in project' ) ) %==  true ) then
  begin
//	 %U[{manualcode}\n ]\
   ' '
   %Usersection (
    'manualcode' 
   )
   (
    #13#10' ' 
   ) // Usersection
 //	]\
  end // if
  else
  begin
//	[{%SS=VCMTestTarget}{\
   if ( ( %S |S ) %== 'VCMTestTarget' ) then
   begin
//	[{<{}{%D#f_IsVCMGUI()=true&%D{F1Like}=false}{C}>=0}{\
    if ( 
     INTEGER VAR l_Counter l_Counter := 0
     for %S%D
     begin
      OBJECT IN %D
      if ( ( %D %?f IsVCMGUI %( )% ) %==  true AND 
       ( ( %D get_up ( 'F1Like' ) ) %==  false  ) ) then
      begin

       ++! l_Counter
      end // if
     end // for D
     l_Counter
     %== 0 ) then
    begin
//	 TF1AutoTestSuite.Register;
     ' TF1AutoTestSuite.Register;'
//	]\
    end // if
    else
    begin
//	 TAutoTestsSuite.Register;
     ' TAutoTestsSuite.Register;'
//	}\
    end // else
//	<{}{%D#f_IsVCMGUI()=true}\
    INTEGER VAR l_Counter l_Counter := 0
    for %S%D
    begin
     OBJECT IN %D
     if ( ( %D %?f IsVCMGUI %( )% ) %==  true ) then
     begin
//	%D%f_OutApplicationBody()\
      %D %f OutApplicationBody %( )% 
//	%f_cycle_break(%S)\
      [%f] cycle_break %( %S )% 
//	>\

      ++! l_Counter
     end // if
    end // for D
//	]\
   end // if
   else
   begin
//	[{%S{no scripts}!=true}\
    if ( ( %S get_up ( 'no scripts' ) ) %!=  true ) then
    begin
//	 TAutoTestsSuite.Register;\n\
     ' TAutoTestsSuite.Register;'#13#10
//	]\
    end // if
//	 try
    ' try'
//	  if KTestRunner.NeedKTestRunner\
    '  if KTestRunner.NeedKTestRunner'
//	(\[<{, }{%C#f_IsTestResults()=true}%f_pas_TypeName(%C)>\])\
    '(['
    INTEGER VAR l_Counter l_Counter := 0
    for %S%C
    begin
     OBJECT IN %C
     if ( ( %C %?f IsTestResults %( )% ) %==  true ) then
     begin
      if ( l_Counter >0 ) then ( ', ' )
      [%f] pas_TypeName %( %C )% 
      ++! l_Counter
     end // if
    end // for C
    '])'
//	 then
    ' then'
//	   KTestRunner.RunRegisteredTests
    '   KTestRunner.RunRegisteredTests'
//	  else
    '  else'
//	  if System.IsConsole then
    '  if System.IsConsole then'
//	   TextTestRunner.RunRegisteredTests
    '   TextTestRunner.RunRegisteredTests'
//	  else
    '  else'
//	   GUITestRunner.RunRegisteredTests;
    '   GUITestRunner.RunRegisteredTests;'
//	 except
    ' except'
//	  on E: Exception do
    '  on E: Exception do'
//	  begin
    '  begin'
//	   \{$If defined(MTDORB) AND defined(NoKPageTool)\}
    '   {$If defined(MTDORB) AND defined(NoKPageTool)}'
//	   if TKBridge.Exists then
    '   if TKBridge.Exists then'
//	    TKBridge.Instance.Logout;
    '    TKBridge.Instance.Logout;'
//	   \{$IfEnd\}
    '   {$IfEnd}'
//	   l3System.Exception2Log(E);
    '   l3System.Exception2Log(E);'
//	   Halt(2);
    '   Halt(2);'
//	  end;//Exception
    '  end;//Exception'
//	 end;//try..except
    ' end;//try..except'
//	 if (TestsExitCode \<\> 0) then
    ' if (TestsExitCode <> 0) then'
//	  Halt(TestsExitCode);\
    '  Halt(TestsExitCode);'
//	}\
   end // else
//	}\
  end // else
//	]\
 end // if
 else
 begin
//	 %U[{manualcode}\n ]\
  ' '
  %Usersection (
   'manualcode' 
  )
  (
   #13#10' ' 
  ) // Usersection
 //	}\
 end // else
//	%f_pas_CloseUnit(%S)\
 [%f] pas_CloseUnit %( %S )% 
//	<{}{%CV!=PrivateAccess&%C#f_IsClassInner()!=true&"%CO"!=""}%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if ( ( %C |V ) %!= 'PrivateAccess' AND 
   ( ( %C %?f IsClassInner %( )% ) %!=  true  ) AND 
   ( ( %C |O ) %!= ''  ) ) then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *470F1571031Cfor470382290251*
; // intf.pas


// реализация абстрактного стереотипа Java::MDAGenerator
// генератор классов, интерфейсов на java (.java)
//+ java
<<generator>> java OBJECT IN %S
//#UC START# *470321950119for470382290251*
//P
//C /%SN
//O %SNMain.java
//	%f_output_constraint(%S)\
 [%f] output_constraint %( %S )% 
//	%f_header(%S)
 [%f] header %( %S )% 
//	package %f_dump_java_package(%S).%SN;
 'package '
 [%f] dump_java_package %( %S )% '.'
 %S |N ';'
//	
//	%f_dump_std_java_imports(%S)
 [%f] dump_std_java_imports %( %S )% 
//	
//	public class %SNMain {
 'public class '
 %S |N 'Main {'
//	
//		public static void main (String Args\[\]) throws Exception {
 '	public static void main (String Args[]) throws Exception {'
//			[{%f_use_server(%S)=true}{ru.garant.shared.Core.Root_i.Std}ru.garant.shared.CoreSrv.Root_i.Corba]LibHomeManagerFactoryImpl libHomeFactory = new [{%f_use_server(%S)=true}{ru.garant.shared.Core.Root_i.Std}ru.garant.shared.CoreSrv.Root_i.Corba]LibHomeManagerFactoryImpl ();
 '		'
 if ( ( [%f] use_server %( %S )% ) %==  true ) then
 begin
  'ru.garant.shared.CoreSrv.Root_i.Corba' 
 end // if
 else
 begin
  'ru.garant.shared.Core.Root_i.Std' 
 end // else
 'LibHomeManagerFactoryImpl libHomeFactory = new '
 if ( ( [%f] use_server %( %S )% ) %==  true ) then
 begin
  'ru.garant.shared.CoreSrv.Root_i.Corba' 
 end // if
 else
 begin
  'ru.garant.shared.Core.Root_i.Std' 
 end // else
 'LibHomeManagerFactoryImpl ();'
//			libHomeFactory.registrateMe((short)0);
 '		libHomeFactory.registrateMe((short)0);'
//			
 '		'
//			ru.garant.shared.Core.ParamsImpl.ParamManagerImplFactoryImpl paramManagerFactory = new ru.garant.shared.Core.ParamsImpl.ParamManagerImplFactoryImpl ();
 '		ru.garant.shared.Core.ParamsImpl.ParamManagerImplFactoryImpl paramManagerFactory = new ru.garant.shared.Core.ParamsImpl.ParamManagerImplFactoryImpl ();'
//			paramManagerFactory.registrateMe((short)0);
 '		paramManagerFactory.registrateMe((short)0);'
//			
 '		'
//			try {
 '		try {'
//				ru.garant.shared.Core.ParamManagerInitData initData = new ru.garant.shared.Core.ParamManagerInitData ();
 '			ru.garant.shared.Core.ParamManagerInitData initData = new ru.garant.shared.Core.ParamManagerInitData ();'
//				initData.setApplicationName("%SN");
 '			initData.setApplicationName("'
 %S |N '");'
//				initData.setRegistrySubkey("Core::RegistryHelper::KEY_LOCAL_MACHINE\\\\Software\\\\Garant\\\\%PN\\\\%SN");
 '			initData.setRegistrySubkey("Core::RegistryHelper::KEY_LOCAL_MACHINE\\Software\\Garant\\'
 %P |N '\\'
 %S |N '");'
//				
 '			'
//				ru.garant.shared.Core.ParamManager.Factory.get ().init (java.util.Arrays.asList(Args), initData);
 '			ru.garant.shared.Core.ParamManager.Factory.get ().init (java.util.Arrays.asList(Args), initData);'
//			} catch (Throwable e) {
 '		} catch (Throwable e) {'
//				Logs.LOG_SEX (e);
 '			Logs.LOG_SEX (e);'
//			}
 '		}'
//			
 '		'
//			ru.garant.shared.Core.Root.LibHomeManager lhm = ru.garant.shared.Core.Root.LibHomeManager.Factory.get();
 '		ru.garant.shared.Core.Root.LibHomeManager lhm = ru.garant.shared.Core.Root.LibHomeManager.Factory.get();'
//	
//	[%f_reg_all_dep_java(%S)
 if NOT-EMPTY
 begin
  [%f] reg_all_dep_java %( %S )% 
//	]
 end // if
 NOP
//			try {
 '		try {'
//				lhm.execute();
 '			lhm.execute();'
//				lhm.waitAll ();
 '			lhm.waitAll ();'
//			} catch (java.lang.Throwable ex) {
 '		} catch (java.lang.Throwable ex) {'
//				Logs.LOG_SEX (ex);
 '			Logs.LOG_SEX (ex);'
//			}
 '		}'
//			
 '		'
//			lhm.finalize ();
 '		lhm.finalize ();'
//		}
 '	}'

//	} // %SNMain
 '} // '
 %S |N 'Main'
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//	%f_footer(%S)
 [%f] footer %( %S )% 
//#UC END# *470321950119for470382290251*
; // java


// реализация абстрактного стереотипа Проектные файлы C++::MDAGenerator
// mpc/mwc файлы проектов (mpc/mwc)
//+ mpc
<<generator>> mpc OBJECT IN %S
//#UC START# *47031E41002Efor470382290251*
//P
//O T_%SN.mpc
//X W:/shared/support/mpc/scripts/mpc_comp.bat %SR%Sd T_%SN utility
//	%f_output_constraint(%S)\
 [%f] output_constraint %( %S )% 
//	%f_header(%S)
 [%f] header %( %S )% 
//	project (T_%SN) : project_generic_core[{%f_use_server(%S)=true}_corba], project_subsystem_console[{%f_mpc_need_antrl_proj(%S)=true}, project_antlr] {
 'project (T_'
 %S |N ') : project_generic_core'
 if ( ( [%f] use_server %( %S )% ) %==  true ) then
 begin
  '_corba' 
 end // if
 ', project_subsystem_console'
 if ( ( [%f] mpc_need_antrl_proj %( %S )% ) %==  true ) then
 begin
  ', project_antlr' 
 end // if
 ' {'
//		exename = %SN
 '	exename = '
 %S |N 
//		
 '	'
//		includes += %f_root_relative_path(%S)
 '	includes += '
 [%f] root_relative_path %( %S )% 
//		[
 '	'
 if NOT-EMPTY
 begin
  #13#10

//	%f_mpc_all_includes(%S)][
  [%f] mpc_all_includes %( %S )% 
 end // if
 NOP
 if NOT-EMPTY
 begin
  #13#10

//	%f_mpc_all_libpaths(%S)]
  [%f] mpc_all_libpaths %( %S )% 
 end // if
 NOP
//		after += Core
 '	after += Core'
//		libs  += Core
 '	libs  += Core'
//		[{%f_use_server(%S)=true}after += CoreSrv_cs
 '	'
 if ( ( [%f] use_server %( %S )% ) %==  true ) then
 begin
  'after += CoreSrv_cs'
//		libs  += CoreSrv_cs
  '	libs  += CoreSrv_cs'
//		after += CoreSrv
  '	after += CoreSrv'
//		libs  += CoreSrv][{%f_use_db_lib(%S)=true}
  '	libs  += CoreSrv' 
 end // if
 if ( ( [%f] use_db_lib %( %S )% ) %==  true ) then
 begin
  #13#10

//		after += CoreUSF
  '	after += CoreUSF'
//		libs  += CoreUSF
  '	libs  += CoreUSF'
//		after += SEA
  '	after += SEA'
//		libs  += SEA][
  '	libs  += SEA' 
 end // if
 if NOT-EMPTY
 begin
  #13#10

//	
  #13#10

//	%f_mpc_all_dep(%S)]
  [%f] mpc_all_dep %( %S )% 
 end // if
 NOP
//		
 '	'
//		Header_Files {
 '	Header_Files {'
//			Std_Headers {
 '		Std_Headers {'
//				%f_normolized_path(h,S)
 '			'
 [%f] normolized_path %( 'h' %, 'S' )% 
//			}
 '		}'
//		}
 '	}'
//		
 '	'
//		Inline_Files {
 '	Inline_Files {'
//			Std_Inlines {
 '		Std_Inlines {'
//				%f_normolized_path(i.h,S)
 '			'
 [%f] normolized_path %( 'i.h' %, 'S' )% 
//			}
 '		}'
//		}
 '	}'
//	
//		Source_Files {
 '	Source_Files {'
//			Std_Sources {
 '		Std_Sources {'
//				%f_normolized_path(cpp,S)
 '			'
 [%f] normolized_path %( 'cpp' %, 'S' )% 
//			}
 '		}'
//		}
 '	}'
//		
 '	'
//		Resource_Files {
 '	Resource_Files {'
//			%f_normolized_path(vi.rc,S)
 '		'
 [%f] normolized_path %( 'vi.rc' %, 'S' )% 
//			%f_normolized_path(vi.rch,S)
 '		'
 [%f] normolized_path %( 'vi.rch' %, 'S' )% 
//		}
 '	}'
//	}
 '}'
//	%f_footer(%S)
 [%f] footer %( %S )% 
//#UC END# *47031E41002Efor470382290251*
; // mpc


// реализация абстрактного стереотипа Проектные файлы Java::MDAGenerator
// Генерация файлов для конфигурации и запуска сборки
//+ Makejar.launch
<<generator>> Makejar.launch OBJECT IN %S
//#UC START# *470322DF03A9for470382290251*
//C /%SN
//I <!--UC_BEGIN
//i -->
//J <!--UC_END
//j -->
//O Makejar.launch
//	%f_output_constraint(%S)\
 [%f] output_constraint %( %S )% 
//	\<?xml version="1.0" encoding="windows-1251"?\>
 '<?xml version="1.0" encoding="windows-1251"?>'
//	\<launchConfiguration type="org.eclipse.ant.AntBuilderLaunchConfigurationType"\>
 '<launchConfiguration type="org.eclipse.ant.AntBuilderLaunchConfigurationType">'
//		\<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/\>
 '	<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>'
//		\<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/\>
 '	<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>'
//		\<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="true"/\>
 '	<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="true"/>'
//		\<stringAttribute key="org.eclipse.ant.ui.ATTR_ANT_AFTER_CLEAN_TARGETS" value="%S%f_attr_ant_after_clean_targets()"/\>
 '	<stringAttribute key="org.eclipse.ant.ui.ATTR_ANT_AFTER_CLEAN_TARGETS" value="'
 %S %f attr_ant_after_clean_targets %( )% '"/>'
//		\<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"\>
 '	<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">'
//			\<listEntry value="1"/\>
 '		<listEntry value="1"/>'
//		\</listAttribute\>
 '	</listAttribute>'
//		\<stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,"/\>
 '	<stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,"/>'
//		\<booleanAttribute key="org.eclipse.ant.ui.ATTR_TARGETS_UPDATED" value="true"/\>
 '	<booleanAttribute key="org.eclipse.ant.ui.ATTR_TARGETS_UPDATED" value="true"/>'
//		\<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/\>
 '	<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>'
//		\<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/\>
 '	<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>'
//		\<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/\>
 '	<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>'
//		\<stringAttribute key="org.eclipse.ant.ui.ATTR_ANT_MANUAL_TARGETS" value="makejar,"/\>
 '	<stringAttribute key="org.eclipse.ant.ui.ATTR_ANT_MANUAL_TARGETS" value="makejar,"/>'
//		\<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="%SN"/\>
 '	<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="'
 %S |N '"/>'
//		\<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${workspace}"/\>
 '	<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${workspace}"/>'
//		\<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"\>
 '	<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">'
//			\<listEntry value="/%SN/build.xml"/\>
 '		<listEntry value="/'
 %S |N '/build.xml"/>'
//		\</listAttribute\>
 '	</listAttribute>'
//		\<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/%SN/build.xml}"/\>
 '	<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/'
 %S |N '/build.xml}"/>'
//	\</launchConfiguration\>
 '</launchConfiguration>'
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *470322DF03A9for470382290251*
; // Makejar.launch


// реализация абстрактного стереотипа Проектные файлы Java::MDAGenerator
// генерация файлов для сборки в Ecllipse
//+ build.xml
<<generator>> build.xml OBJECT IN %S
//#UC START# *47032262037Afor470382290251*
//C /%SN
//I <!--UC_BEGIN
//i -->
//J <!--UC_END
//j -->
//O build.xml
//	%f_output_constraint(%S)\
 [%f] output_constraint %( %S )% 
//	\<?xml version="1.0" encoding="windows-1251"?\>
 '<?xml version="1.0" encoding="windows-1251"?>'
//	\<project name="%SN" basedir="."\>
 '<project name="'
 %S |N '" basedir=".">'
//		\<property environment="env"/\>
 '	<property environment="env"/>'
//		\<property name="build.dir" value="${env.JAVA_SOURCE_ROOT}/build/target"/\>
 '	<property name="build.dir" value="${env.JAVA_SOURCE_ROOT}/build/target"/>'
//	[{<{}{%D<{}{%f_need_mpc_idl(%C)=true}{C}>!=0}.>>!=""}
 if ( 
  INTEGER VAR l_Counter l_Counter := 0
  for %S%D
  begin
   OBJECT IN %D
   if ( ( %D
   bind ( 
    OBJECT VAR %S
    INTEGER VAR l_Counter l_Counter := 0
    for %S%C
    begin
     OBJECT IN %C
     if ( ( [%f] need_mpc_idl %( %C )% ) %==  true ) then
     begin

      ++! l_Counter
     end // if
    end // for C
    l_Counter

   ) // bind
 )    %!= 0 ) then
   begin
    '.' 
    ++! l_Counter
   end // if
  end // for D
  '>' %!= '' ) then
 begin
  #13#10

//		\<target name="idlcomp"\>[{<{}{%dS=ServerLibrary}{C}>!=0}
  '	<target name="idlcomp">'
  if ( 
   INTEGER VAR l_Counter l_Counter := 0
   for %S%d
   begin
    OBJECT IN %d
    if ( ( %d |S ) %== 'ServerLibrary' ) then
    begin

     ++! l_Counter
    end // if
   end // for d
   l_Counter
   %!= 0 ) then
  begin
   #13#10

//			\<ant antfile="$\{env.JAVA_SOURCE_ROOT}/shared/java/project/CoreSrv/build.xml" target="idlcomp" inheritAll="false"/\>][
   '		<ant antfile="${env.JAVA_SOURCE_ROOT}/shared/java/project/CoreSrv/build.xml" target="idlcomp" inheritAll=false />' 
  end // if
  if NOT-EMPTY
  begin
   #13#10

//	%f_dump_dep_for_idlcomp(%S)]
   [%f] dump_dep_for_idlcomp %( %S )% 
  end // if
  NOP
//		\</target\>]
  '	</target>' 
 end // if
//	[{<{}{%D<{}{%AM=Grammar::Class}{C}>!=0}.>>!=""}
 if ( 
  INTEGER VAR l_Counter l_Counter := 0
  for %S%D
  begin
   OBJECT IN %D
   if ( ( %D
   bind ( 
    OBJECT VAR %S
    INTEGER VAR l_Counter l_Counter := 0
    for %S%A
    begin
     OBJECT IN %A
     if ( ( %A |M ) %== 'Grammar::Class' ) then
     begin

      ++! l_Counter
     end // if
    end // for A
    l_Counter

   ) // bind
 )    %!= 0 ) then
   begin
    '.' 
    ++! l_Counter
   end // if
  end // for D
  '>' %!= '' ) then
 begin
  #13#10

//		\<target name="gcomp"\>
  '	<target name="gcomp">'
//	%f_dump_dep_for_gcomp(%S)]
  [%f] dump_dep_for_gcomp %( %S )% 
 end // if
//		\</target\>]
 '	</target>]'
//		\<target name="cleanJar"\>
 '	<target name="cleanJar">'
//			\<delete dir="${build.dir}/jar" /\>
 '		<delete dir="${build.dir}/jar" />'
//		\</target\>
 '	</target>'
//		\<target name="makejar"\>[{<{}{%dS=ServerLibrary}{C}>!=0}
 '	<target name="makejar">'
 if ( 
  INTEGER VAR l_Counter l_Counter := 0
  for %S%d
  begin
   OBJECT IN %d
   if ( ( %d |S ) %== 'ServerLibrary' ) then
   begin

    ++! l_Counter
   end // if
  end // for d
  l_Counter
  %!= 0 ) then
 begin
  #13#10

//			\<ant antfile="$\{env.JAVA_SOURCE_ROOT}/shared/java/project/Core/build.xml" target="makejar" inheritAll="false"/\>
  '		<ant antfile="${env.JAVA_SOURCE_ROOT}/shared/java/project/Core/build.xml" target="makejar" inheritAll=false />'
//			\<ant antfile="$\{env.JAVA_SOURCE_ROOT}/shared/java/project/FSM/build.xml" target="makejar" inheritAll="false"/\>[{<{}{%dS=ServerLibrary}{C}>!=0}
  '		<ant antfile="${env.JAVA_SOURCE_ROOT}/shared/java/project/FSM/build.xml" target="makejar" inheritAll=false />'
  if ( 
   INTEGER VAR l_Counter l_Counter := 0
   for %S%d
   begin
    OBJECT IN %d
    if ( ( %d |S ) %== 'ServerLibrary' ) then
    begin

     ++! l_Counter
    end // if
   end // for d
   l_Counter
   %!= 0 ) then
  begin
   #13#10

//			\<ant antfile="$\{env.JAVA_SOURCE_ROOT}/shared/java/project/CoreSrv/build.xml" target="makejar" inheritAll="false"/\>]][
   '		<ant antfile="${env.JAVA_SOURCE_ROOT}/shared/java/project/CoreSrv/build.xml" target="makejar" inheritAll=false />' 
  end // if
 end // if
 if NOT-EMPTY
 begin
  #13#10

//	%f_dump_dep_for_makejar(%S)]
  [%f] dump_dep_for_makejar %( %S )% 
 end // if
 NOP
//			\<jar destfile="${build.dir}/jar/%SN.jar"\>
 '		<jar destfile="${build.dir}/jar/'
 %S |N '.jar">'
//				\<fileset dir ="${build.dir}/classes"\>
 '			<fileset dir ="${build.dir}/classes">'
//					\<include name="%f_str_replace(%f_dump_java_package(%S),.,/)/%SN/"/\>
 '				<include name="'
 [%f] str_replace %( [%f] dump_java_package %( %S )% %, '.' %, '/' )% '/'
 %S |N '/"/>'
//				\</fileset\>
 '			</fileset>'
//				\<fileset dir ="%f_with_gen_id(output.xml,$\{env.JAVA_SOURCE_ROOT}%Sd)"/\>
 '			<fileset dir ="'
 [%f] with_gen_id %( 'output.xml' %, '${env.JAVA_SOURCE_ROOT}'
 %S |d )% '"/>'
//			\</jar\>
 '		</jar>'
//		\</target\><%CX>
 '	</target>'
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//	\</project\>
 '</project>'
//#UC END# *47032262037Afor470382290251*
; // build.xml


// реализация абстрактного стереотипа Проектные файлы Java::MDAGenerator
// генерация файла с описанием путей поиска библиотек (CLASSPATH для java)
//+ output.classpath
<<generator>> output.classpath OBJECT IN %S
//#UC START# *470322910119for470382290251*
//C /%SN
//I <!--UC_BEGIN
//i -->
//J <!--UC_END
//j -->
//O .classpath
//	%f_output_constraint(%S)\
 [%f] output_constraint %( %S )% 
//	%f_dump_classpath(%S)
 [%f] dump_classpath %( %S )% 

//f _dump_classpath
; // output.classpath

end. // <<ExeTarget>>

: dump_classpath OBJECT IN %S
//	\<?xml version="1.0" encoding="windows-1251"?\>
 '<?xml version="1.0" encoding="windows-1251"?>'
//	\<classpath\>
 '<classpath>'
//		\<classpathentry kind="src" path="%PN"/\>
 '	<classpathentry kind="src" path="'
 %P |N '"/>'
//		\<classpathentry kind="src" path="shared"/\>
 '	<classpathentry kind="src" path="shared"/>'
//		\<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/\>
 '	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>'
//	[%S%f_specific_classpath_entries()
 if NOT-EMPTY
 begin
  %S %f specific_classpath_entries %( )% 
//	]	\<classpathentry kind="output" path="target"/\>
 end // if
 NOP
 '	<classpathentry kind="output" path="target"/>'
//	\</classpath\>
 '</classpath>'
//#UC END# *470322910119for470382290251*
; // dump_classpath


// реализация абстрактного стереотипа Проектные файлы Java::MDAGenerator
// генерация файлов проекта для Ecllipse
//+ output.project
implementation @ <<ExeTarget>>
<<generator>> output.project OBJECT IN %S
//#UC START# *47032220003Efor470382290251*
//C /%SN
//I <!--UC_BEGIN
//i -->
//J <!--UC_END
//j -->
//O .project
//	%f_output_constraint(%S)\
 [%f] output_constraint %( %S )% 
//	\<?xml version="1.0" encoding="windows-1251"?\>
 '<?xml version="1.0" encoding="windows-1251"?>'
//	\<projectDescription\>
 '<projectDescription>'
//		\<name\>%SN\</name\>
 '	<name>'
 %S |N '</name>'
//		\<comment\>%SD\</comment\>
 '	<comment>'
 %S |D '</comment>'
//		\<projects\>
 '	<projects>'
//		\</projects\>
 '	</projects>'
//		\<buildSpec\>
 '	<buildSpec>'
//			\<buildCommand\>
 '		<buildCommand>'
//				\<name\>org.eclipse.jdt.core.javabuilder\</name\>
 '			<name>org.eclipse.jdt.core.javabuilder</name>'
//				\<arguments\>
 '			<arguments>'
//				\</arguments\>
 '			</arguments>'
//			\</buildCommand\>
 '		</buildCommand>'
//			\<buildCommand\>
 '		<buildCommand>'
//				\<name\>org.eclipse.ui.externaltools.ExternalToolBuilder\</name\>
 '			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>'
//				\<triggers\>full,incremental,\</triggers\>
 '			<triggers>full,incremental,</triggers>'
//				\<arguments\>
 '			<arguments>'
//					\<dictionary\>
 '				<dictionary>'
//						\<key\>LaunchConfigHandle\</key\>
 '					<key>LaunchConfigHandle</key>'
//						\<value\>&lt;project&gt;/Makejar.launch\</value\>
 '					<value>&lt;project&gt;/Makejar.launch</value>'
//					\</dictionary\>
 '				</dictionary>'
//				\</arguments\>
 '			</arguments>'
//			\</buildCommand\>
 '		</buildCommand>'
//		\</buildSpec\>
 '	</buildSpec>'
//		\<natures\>
 '	<natures>'
//			\<nature\>org.eclipse.jdt.core.javanature\</nature\>
 '		<nature>org.eclipse.jdt.core.javanature</nature>'
//		\</natures\>
 '	</natures>'
//		\<linkedResources\>
 '	<linkedResources>'
//			\<link\>
 '		<link>'
//				\<name\>%PN\</name\>
 '			<name>'
 %P |N '</name>'
//				\<type\>2\</type\>
 '			<type>2</type>'
//				\<locationURI\>%f_str_replace(%f_java_root(%S),%SR,JAVA_SOURCE_ROOT)\</locationURI\>
 '			<locationURI>'
 [%f] str_replace %( [%f] java_root %( %S )% %, %S |R %, 'JAVA_SOURCE_ROOT' )% '</locationURI>'
//			\</link\>
 '		</link>'
//			\<link\>
 '		<link>'
//				\<name\>shared\</name\>
 '			<name>shared</name>'
//				\<type\>2\</type\>
 '			<type>2</type>'
//				\<locationURI\>JAVA_SOURCE_ROOT/shared/java/src/java\</locationURI\>
 '			<locationURI>JAVA_SOURCE_ROOT/shared/java/src/java</locationURI>'
//			\</link\>
 '		</link>'
//			\<link\>
 '		<link>'
//				\<name\>target\</name\>
 '			<name>target</name>'
//				\<type\>2\</type\>
 '			<type>2</type>'
//				\<locationURI\>JAVA_SOURCE_ROOT/build/target/classes\</locationURI\>
 '			<locationURI>JAVA_SOURCE_ROOT/build/target/classes</locationURI>'
//			\</link\>
 '		</link>'
//			\<link\>
 '		<link>'
//				\<name\>etc\</name\>
 '			<name>etc</name>'
//				\<type\>2\</type\>
 '			<type>2</type>'
//				\<locationURI\>%f_with_gen_id(java,JAVA_SOURCE_ROOT/%PN)/java/src/etc\</locationURI\>
 '			<locationURI>'
 [%f] with_gen_id %( 'java' %, 'JAVA_SOURCE_ROOT/'
 %P |N )% '/java/src/etc</locationURI>'
//			\</link\>
 '		</link>'
//	[%S%f_specific_project_linked_source()
 if NOT-EMPTY
 begin
  %S %f specific_project_linked_source %( )% 
//	]	\</linkedResources\>
 end // if
 NOP
 '	</linkedResources>'
//		%U[{_CUSTOM_PROJECT_ENTRY}
 '	'
 %Usersection (
  '_CUSTOM_PROJECT_ENTRY' 
 )
 (
  #13#10

//		]<%CX>
  '	' 
 ) // Usersection
  INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//	\</projectDescription\>
 '</projectDescription>'
//#UC END# *47032220003Efor470382290251*
; // output.project


// перекрытие базового стереотипа ModelBuilding::MDAGenerator
// генератор построения виртуальных элементов модели - запускается до генерации конкретных
// артефактов
//+ spell
<<generator>> spell OBJECT IN %S
//#UC START# *4A41A13D03D5for470382290251*
//	<%CX>\
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//	%S%f_DoSpell()
 %S %f DoSpell %( )% 
//#UC END# *4A41A13D03D5for470382290251*
; // spell



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // <<ExeTarget>>

