////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/ViewsItems/Resource.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::ViewsItems::Resource
//
// Ресурс
// ---
// определяет набор дефайнов и описание русорсов библиотеки
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: Resource::Class
implementation @ <<Resource>>
//? Ресурс
//? определяет набор дефайнов и описание русорсов библиотеки
//< *::Class,*::Category

//= C++ интерфейсы и реализация::MDAGenerator
//= Проектные файлы C++::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//Y code_resource.gif
//L code_resource
// Параметры визуализации
//$ C 240,225,255
//$ l 160,100,220
//$ f 160,100,220

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
//+ h
; // st_space_key

<<generator>> h OBJECT IN %S
//#UC START# *47022C88029Ffor4714425A0109*
//O %SN.h
//	%f_h_header(%S)[
 [%f] h_header %( %S )% if NOT-EMPTY
 begin
  #13#10

//	%S%f_open_ifdef()]
  %S %f open_ifdef %( )% 
 end // if
 NOP
//	<{\n}{}{%C}#define %CN %f_init(%C);[ // %f_str_replace(%CD,\n,%f_space(%C))]>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   if ( l_Counter >0 ) then ( #13#10 )
   out_indent 'define '
   %C |N ' '
   [%f] init %( %C )% ';'
   if NOT-EMPTY
   begin
    ' // '
    [%f] str_replace %( %C |D %, #13#10 %, [%f] space %( %C )% )% 
   end // if
   NOP

   ++! l_Counter
  end // if
 end // for C
//	%U[
 %Usersection (

 )
 (
  #13#10

//	]

 ) // Usersection
 //	%f_h_footer(%S)
 [%f] h_footer %( %S )% 
//#UC END# *47022C88029Ffor4714425A0109*
; // h


// реализация абстрактного стереотипа Проектные файлы C++::MDAGenerator
// Файлы ресурсов (rc)
//+ rc
<<generator>> rc OBJECT IN %S
//#UC START# *471442BE033Cfor4714425A0109*
//O %SN.rc
//	%f_header(%S)
 [%f] header %( %S )% 
//	\#include %f_dump_include_path(%f_with_gen_id(h,%SL),%S)[
 '#include '
 [%f] dump_include_path %( [%f] with_gen_id %( 'h' %, %S |L )% %, %S )% if NOT-EMPTY
 begin
  #13#10

//	%S%f_open_ifdef()]
  %S %f open_ifdef %( )% 
 end // if
 NOP
//	%U[
 %Usersection (

 )
 (
  #13#10

//	]

 ) // Usersection
 //	%f_footer(%S)
 [%f] footer %( %S )% 
//#UC END# *471442BE033Cfor4714425A0109*
; // rc


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

//: Resource::Class::define::Attribute
end. // <<Resource>>

implementation @ :: <<Resource>> <<define>> ;
//? определения идентификаторов контролов, сообщений и т.д. Пример использования:
//? {code}
//? class <<Resource>> A {
//?    attr <<define>> ID = 1;
//? }
//? 
//? //A.h
//? #define ID 1;
//? {code}
// Параметры стереотипа
//Y code_static_attr.gif
//L code_static_attr

// Генераторы
// генератор заголовочных файлов C++ (.h)
//+ h
<<generator>> h OBJECT IN %S
//#UC START# *47022C88029Ffor4714430C004E*
//#UC END# *47022C88029Ffor4714430C004E*
; // h


// Файлы ресурсов (rc)
//+ rc
<<generator>> rc OBJECT IN %S
//#UC START# *471442BE033Cfor4714430C004E*
//#UC END# *471442BE033Cfor4714430C004E*
; // rc


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

; // st_space_key

end. // :: <<Resource>> <<define>> ;

