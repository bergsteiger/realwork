////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CoreTemplates/RequirementsLib/Requirements/Requirements.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDACategory::Class>> MDProcess$CoreTemplates::CoreTemplates::RequirementsLib::Requirements::Requirements
//
// Пакет требований
// ---
// Пакет с моделью требований
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: Requirements::Category
implementation @ <<Requirements>>
//? Пакет требований
//? Пакет с моделью требований
//> Problems::Category
//> UseCases::Category
//> Features::Category

//= Документация::MDAGenerator
//= ModelSerialize::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//Y requirements.gif
//L requirements
// Параметры визуализации
//$ C 245,175,195
//$ l 200,50,100
//$ f 200,50,100

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа ModelSerialize::MDAGenerator
// генератор структуры модели в описание на языке FORTH
//+ forth_structure
; // st_space_key

<<generator>> forth_structure OBJECT IN %S
//R  
//#UC START# *4F368B80039Efor47047244009C*
//R  
//P
//C /%SN
//O %SN.model.script
//	%f_dump_to_FORTH(%S)\
 [%f] dump_to_FORTH %( %S )% 
//	<{}{"%CO"!=""}%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if ( ( %C |O ) %!= '' ) then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *4F368B80039Efor47047244009C*
; // forth_structure


// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for47047244009C*
//C /%SN:%SU
//O %SN
//S %SN
//	%f_wiki_header(%S)
 [%f] wiki_header %( %S )% 
//	[h2. Модель[
 if NOT-EMPTY
 begin
  'h2. Модель'
  if NOT-EMPTY
  begin
   #13#10

//	
   #13#10

//	{info}Зависит от требоваий:
   '{info}Зависит от требоваий:'
//	<{}{%DS=Requirements}* %f_k_link(%D)
   INTEGER VAR l_Counter l_Counter := 0
   for %S%D
   begin
    OBJECT IN %D
    if ( ( %D |S ) %== 'Requirements' ) then
    begin
     '* '
     [%f] k_link %( %D )% 
//	>{info}][

     ++! l_Counter
    end // if
   end // for D
   '{info}' 
  end // if
  NOP
  if NOT-EMPTY
  begin
   #13#10

//	
   #13#10

//	{info}Реализован в модуле:
   '{info}Реализован в модуле:'
//	<{}{%DS!=Requirements&%t_target_ex(%D)!=true}{Sp}* %f_k_link(%D)
   INTEGER VAR l_Counter l_Counter := 0
   for %S%Dp
   begin
    OBJECT IN %D
    if ( ( %D |S ) %!= 'Requirements' AND 
     ( ( [%t] target_ex %( %D )% ) %!=  true  ) ) then
    begin
     '* '
     [%f] k_link %( %D )% 
//	>{info}][{%mx=true&%Cx=true}

     ++! l_Counter
    end // if
   end // for D
   '{info}' 
  end // if
  NOP
  if ( ( %m |x ) %==  true AND 
    ( ( %C |x ) %==  true  ) ) then
  begin
   #13#10

//	
   #13#10

//	_Диаграмма пакета:_
   '_Диаграмма пакета:_'
//	%f_dump_diagram(m){ShowDiagram:%mU.jpg}]][
   [%f] dump_diagram %( 'm' )% '{ShowDiagram:'
   %m |U '.jpg}' 
  end // if
 end // if
 NOP
 if NOT-EMPTY
 begin
  #13#10

//	
  #13#10

//	h2. Состав требований[
  'h2. Состав требований'
  if NOT-EMPTY
  begin
   #13#10

//	
   #13#10

//	_Проблемы пользователя:_<{}{%CS=Problems}
   '_Проблемы пользователя:_'
   INTEGER VAR l_Counter l_Counter := 0
   for %S%C
   begin
    OBJECT IN %C
    if ( ( %C |S ) %== 'Problems' ) then
    begin
     #13#10

//	\# *%f_k_link(%C)*
     '# *'
     [%f] k_link %( %C )% '*'
//	_%C?_[, %f_str_replace(%CD,\n\n,\n\\\\)]>][
     '_'
     %C |? '_'
     if NOT-EMPTY
     begin
      ', '
      [%f] str_replace %( %C |D %, #13#10#13#10 %, #13#10'\\' )% 
     end // if
     NOP

     ++! l_Counter
    end // if
   end // for C
  end // if
  NOP
  if NOT-EMPTY
  begin
   #13#10

//	
   #13#10

//	_Возможности:_<{}{%CS=Features}
   '_Возможности:_'
   INTEGER VAR l_Counter l_Counter := 0
   for %S%C
   begin
    OBJECT IN %C
    if ( ( %C |S ) %== 'Features' ) then
    begin
     #13#10

//	\# *%f_k_link(%C)*
     '# *'
     [%f] k_link %( %C )% '*'
//	_%C?_[, %f_str_replace(%CD,\n\n,\n\\\\)]>][
     '_'
     %C |? '_'
     if NOT-EMPTY
     begin
      ', '
      [%f] str_replace %( %C |D %, #13#10#13#10 %, #13#10'\\' )% 
     end // if
     NOP

     ++! l_Counter
    end // if
   end // for C
  end // if
  NOP
  if NOT-EMPTY
  begin
   #13#10

//	
   #13#10

//	_Прецеденты:_<{}{%CS=UseCases}
   '_Прецеденты:_'
   INTEGER VAR l_Counter l_Counter := 0
   for %S%C
   begin
    OBJECT IN %C
    if ( ( %C |S ) %== 'UseCases' ) then
    begin
     #13#10

//	\# *%f_k_link(%C)*
     '# *'
     [%f] k_link %( %C )% '*'
//	_%C?_[, %f_str_replace(%CD,\n\n,\n\\\\)]>]]
     '_'
     %C |? '_'
     if NOT-EMPTY
     begin
      ', '
      [%f] str_replace %( %C |D %, #13#10#13#10 %, #13#10'\\' )% 
     end // if
     NOP

     ++! l_Counter
    end // if
   end // for C
  end // if
  NOP
 end // if
 NOP
//	
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//	%f_wiki_footer(%S)
 [%f] wiki_footer %( %S )% 
//#UC END# *46E6D4BB0339for47047244009C*
; // wiki


// перекрытие базового стереотипа ModelBuilding::MDAGenerator
// генератор построения виртуальных элементов модели - запускается до генерации конкретных
// артефактов
//+ spell
<<generator>> spell OBJECT IN %S
//#UC START# *4A41A13D03D5for47047244009C*
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *4A41A13D03D5for47047244009C*
; // spell



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // <<Requirements>>

