////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/DelphiSpecific/DelphiLang/Implementation/GuiControl.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::DelphiSpecific::DelphiLang::Implementation::GuiControl
//
// нет дополнительной документации
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: GuiControl::Class (redefinition)
implementation @ <<GuiControl>>
//? нет дополнительной документации
//> SetConst::Class
//> SetOf::Class
//> Range::Class
//> method::Class
//> Constructor::Class
//> LocalConst::Class
//> GuiControl::Class

//= StandardClassInclude::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

//: GuiControl::Class::message::Operation
; // st_space_key

end. // <<GuiControl>>

implementation @ :: <<GuiControl>> <<message>> ;
//? нет дополнительной документации
//= ClassBase::Class::Operation

// Параметры стереотипа
//v -
// - типы видимости
//a f
// - тип абстракции
//T 
// - может не иметь "цели" (типа/результата)
//m f
// - не может быть реализован/иметь перекрытую реализацию

// Пользовательские свойства
//p Message ID:s ? 

// Генераторы
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for482C3F24029C*
//#UC END# *46E6D4BB0339for482C3F24029C*
; // wiki


// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor482C3F24029C*
//#UC END# *470321C1038Afor482C3F24029C*
; // fctr.java


// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
//+ intf2.pas
<<generator>> intf2.pas OBJECT IN %S
//R  
//#UC START# *477398E501C0for482C3F24029C*
//#UC END# *477398E501C0for482C3F24029C*
; // intf2.pas


// Ресурсы (.rc)
//+ rc.pas
<<generator>> rc.pas OBJECT IN %S
//R  
//#UC START# *55B8D28B0157for482C3F24029C*
//#UC END# *55B8D28B0157for482C3F24029C*
; // rc.pas


// Скрипты в ресурсах (.rc.script)
//+ rc.script.pas
<<generator>> rc.script.pas OBJECT IN %S
//R  
//#UC START# *55B8D2F80145for482C3F24029C*
//#UC END# *55B8D2F80145for482C3F24029C*
; // rc.script.pas


// Компилятор ресурса (.res.cmd)
//+ res.cmd.pas
<<generator>> res.cmd.pas OBJECT IN %S
//R  
//#UC START# *55B8DD9C0301for482C3F24029C*
//#UC END# *55B8DD9C0301for482C3F24029C*
; // res.cmd.pas


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{Message ID}"!="%S{!Message ID}"}%f_up_prefix(%S) *Message ID* = *%S{Message ID}*
 ?inherited
 if ( ( %S get_up ( 'Message ID' ) ) %!= ( %S get_up_def ( 'Message ID' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *Message ID* = *'
  %S get_up ( 'Message ID' ) '*'
//	]
 end // if


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
; // wiki_up_print

: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for482C3F24029C*
//#UC END# *470484D50138for482C3F24029C*
; // wiki_up_add_gen


//: GuiControl::Class::factory::Operation
end. // :: <<GuiControl>> <<message>> ;

implementation @ :: <<GuiControl>> <<factory>> ;
//= SimpleClass::Class::factory::Operation

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'


//: GuiControl::Class::vctor::Operation
; // st_space_key

end. // :: <<GuiControl>> <<factory>> ;

implementation @ :: <<GuiControl>> <<vctor>> ;
//= SimpleClass::Class::vctor::Operation

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

; // st_space_key

end. // :: <<GuiControl>> <<vctor>> ;

