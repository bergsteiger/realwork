////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/DelphiSpecific/DelphiLang/Implementation/ScriptKeywordsPack.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::DelphiSpecific::DelphiLang::Implementation::ScriptKeywordsPack
//
// Набор слов скрипта
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: ScriptKeywordsPack::Class
implementation @ <<ScriptKeywordsPack>>
//? Набор слов скрипта
//> ScriptKeyword::Class

//= UtilityPack::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
// Параметры визуализации
//$ C 147,168,174

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p no_pop:tribool=undefined ? 
//p no class name:tribool=undefined ? 
//p needs script:tribool=undefined ? Нужна скриптовая обвязка
//p ifndef:s=NoScripts ? 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{no_pop}"!="%S{!no_pop}"}%f_up_prefix(%S) *no_pop* = *%S{no_pop}*
 ?inherited
 if ( ( %S get_up ( 'no_pop' ) ) %!= ( %S get_up_def ( 'no_pop' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *no_pop* = *'
  %S get_up ( 'no_pop' ) '*'
//	][{"%S{no class name}"!="%S{!no class name}"}%f_up_prefix(%S) *no class name* = *%S{no class name}*
 end // if
 if ( ( %S get_up ( 'no class name' ) ) %!= ( %S get_up_def ( 'no class name' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *no class name* = *'
  %S get_up ( 'no class name' ) '*'
//	][{"%S{needs script}"!="%S{!needs script}"}%f_up_prefix(%S) *needs script* = *%S{needs script}* - Нужна скриптовая обвязка
 end // if
 if ( ( %S get_up ( 'needs script' ) ) %!= ( %S get_up_def ( 'needs script' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *needs script* = *'
  %S get_up ( 'needs script' ) '* - Нужна скриптовая обвязка'
//	][{"%S{ifndef}"!="%S{!ifndef}"}%f_up_prefix(%S) *ifndef* = *%S{ifndef}*
 end // if
 if ( ( %S get_up ( 'ifndef' ) ) %!= ( %S get_up_def ( 'ifndef' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *ifndef* = *'
  %S get_up ( 'ifndef' ) '*'
//	]
 end // if


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Java::MDAGenerator
// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
; // wiki_up_print

<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor4F2C15C90252*
//#UC END# *470321C1038Afor4F2C15C90252*
; // fctr.java


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

//: ScriptKeywordsPack::Class::injects::ClassDependency
end. // <<ScriptKeywordsPack>>

implementation @ :: <<ScriptKeywordsPack>> <<injects>> ;
//? Внедрение зависимости
//= Delphi интерфейсы и реализация::MDAGenerator

// Генераторы
// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor54D4A61F00BA*
//#UC END# *470321C1038Afor54D4A61F00BA*
; // fctr.java


// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for54D4A61F00BA*
//#UC END# *46E6D4BB0339for54D4A61F00BA*
; // wiki


// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor54D4A61F00BA*
//#UC END# *470F1571031Cfor54D4A61F00BA*
; // intf.pas


// Реализация на Delphi(.pas)
//+ impl.pas
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor54D4A61F00BA*
//#UC END# *470F15B800CBfor54D4A61F00BA*
; // impl.pas


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
; // st_space_key

<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for54D4A61F00BA*
//c          {}
//r {""=""}: {}
//#UC END# *4704C0E30186for54D4A61F00BA*
; // constraint


// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
//%f _wiki_child_kind
: wiki_child_kind OBJECT IN %S
//#UC START# *4705CBD6003Efor54D4A61F00BA*
//#UC END# *4705CBD6003Efor54D4A61F00BA*
; // wiki_child_kind


// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for54D4A61F00BA*
//#UC END# *470484D50138for54D4A61F00BA*
; // wiki_up_add_gen


//: ScriptKeywordsPack::Class::keyword::Operation
end. // :: <<ScriptKeywordsPack>> <<injects>> ;

implementation @ :: <<ScriptKeywordsPack>> <<keyword>> ;
//? Слово скрипта
//= UtilityPack::Class::Operation

// Параметры стереотипа
//v -
// - типы видимости
//a f
// - тип абстракции
//T 
// - может не иметь "цели" (типа/результата)

// Пользовательские свойства
//p NameForScript:s ? 
//p bind params:tribool=undefined ? 
//p is immediate:tribool=undefined ? 
//p lvalue:tribool=undefined ? 
//p mapped:tribool=undefined ? 

// Генераторы
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for54F734BC0087*
//#UC END# *46E6D4BB0339for54F734BC0087*
; // wiki


// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor54F734BC0087*
//#UC END# *470321C1038Afor54F734BC0087*
; // fctr.java


// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor54F734BC0087*
//#UC END# *470F1571031Cfor54F734BC0087*
; // intf.pas


// Реализация на Delphi(.pas)
//+ impl.pas
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor54F734BC0087*
//#UC END# *470F15B800CBfor54F734BC0087*
; // impl.pas


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{mapped}"!="%S{!mapped}"}%f_up_prefix(%S) *mapped* = *%S{mapped}*
 ?inherited
 if ( ( %S get_up ( 'mapped' ) ) %!= ( %S get_up_def ( 'mapped' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *mapped* = *'
  %S get_up ( 'mapped' ) '*'
//	][{"%S{NameForScript}"!="%S{!NameForScript}"}%f_up_prefix(%S) *NameForScript* = *%S{NameForScript}*
 end // if
 if ( ( %S get_up ( 'NameForScript' ) ) %!= ( %S get_up_def ( 'NameForScript' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *NameForScript* = *'
  %S get_up ( 'NameForScript' ) '*'
//	][{"%S{is immediate}"!="%S{!is immediate}"}%f_up_prefix(%S) *is immediate* = *%S{is immediate}*
 end // if
 if ( ( %S get_up ( 'is immediate' ) ) %!= ( %S get_up_def ( 'is immediate' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *is immediate* = *'
  %S get_up ( 'is immediate' ) '*'
//	][{"%S{bind params}"!="%S{!bind params}"}%f_up_prefix(%S) *bind params* = *%S{bind params}*
 end // if
 if ( ( %S get_up ( 'bind params' ) ) %!= ( %S get_up_def ( 'bind params' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *bind params* = *'
  %S get_up ( 'bind params' ) '*'
//	][{"%S{lvalue}"!="%S{!lvalue}"}%f_up_prefix(%S) *lvalue* = *%S{lvalue}*
 end // if
 if ( ( %S get_up ( 'lvalue' ) ) %!= ( %S get_up_def ( 'lvalue' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *lvalue* = *'
  %S get_up ( 'lvalue' ) '*'
//	]
 end // if

//%f _IsKeyword
; // wiki_up_print

: IsKeyword OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *5510356E00AEfor54F734BC0087*
//	true
 true
//#UC END# *5510356E00AEfor54F734BC0087*
; // IsKeyword


//%f _NoForward
: NoForward OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *55115A470301for54F734BC0087*
//	true
 true
//#UC END# *55115A470301for54F734BC0087*
; // NoForward


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for54F734BC0087*
//#UC END# *470484D50138for54F734BC0087*
; // wiki_up_add_gen


//: ScriptKeywordsPack::Class::property::Attribute
end. // :: <<ScriptKeywordsPack>> <<keyword>> ;

implementation @ :: <<ScriptKeywordsPack>> <<property>> ;
//= UtilityPack::Class::Attribute

// Параметры стереотипа
//v -
// - типы видимости
//a f
// - тип абстракции

// Пользовательские свойства
//p NameForScript:s ? 
//p mapped:tribool=undefined ? 

// Генераторы
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for54F861670034*
//#UC END# *46E6D4BB0339for54F861670034*
; // wiki


// генератор inline файлов реализации C++ (.i.h)
//+ i.h
<<generator>> i.h OBJECT IN %S
//#UC START# *47022CCF00EAfor54F861670034*
//#UC END# *47022CCF00EAfor54F861670034*
; // i.h


// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor54F861670034*
//#UC END# *470321C1038Afor54F861670034*
; // fctr.java


// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor54F861670034*
//#UC END# *470F1571031Cfor54F861670034*
; // intf.pas


// Реализация на Delphi(.pas)
//+ impl.pas
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor54F861670034*
//#UC END# *470F15B800CBfor54F861670034*
; // impl.pas


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{mapped}"!="%S{!mapped}"}%f_up_prefix(%S) *mapped* = *%S{mapped}*
 ?inherited
 if ( ( %S get_up ( 'mapped' ) ) %!= ( %S get_up_def ( 'mapped' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *mapped* = *'
  %S get_up ( 'mapped' ) '*'
//	][{"%S{NameForScript}"!="%S{!NameForScript}"}%f_up_prefix(%S) *NameForScript* = *%S{NameForScript}*
 end // if
 if ( ( %S get_up ( 'NameForScript' ) ) %!= ( %S get_up_def ( 'NameForScript' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *NameForScript* = *'
  %S get_up ( 'NameForScript' ) '*'
//	]
 end // if


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
; // wiki_up_print

<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for54F861670034*
//c          {}
//r {""=""}: {}
//#UC END# *4704C0E30186for54F861670034*
; // constraint


// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for54F861670034*
//#UC END# *470484D50138for54F861670034*
; // wiki_up_add_gen


//: ScriptKeywordsPack::Class::readonly::Attribute
end. // :: <<ScriptKeywordsPack>> <<property>> ;

implementation @ :: <<ScriptKeywordsPack>> <<readonly>> ;
//= ScriptKeywordsPack::Class::property::Attribute

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'


//: ScriptKeywordsPack::Class::friend::ClassDependency
; // st_space_key

end. // :: <<ScriptKeywordsPack>> <<readonly>> ;

implementation @ :: <<ScriptKeywordsPack>> <<friend>> ;
//= ClassBase::Class::friend::ClassDependency

// Генераторы
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for54FECA940175*
//#UC END# *46E6D4BB0339for54FECA940175*
; // wiki


// генератор заголовочных файлов C++ (.h)
//+ h
<<generator>> h OBJECT IN %S
//#UC START# *47022C88029Ffor54FECA940175*
//#UC END# *47022C88029Ffor54FECA940175*
; // h


// генератор файлов реализации C++ (.cpp)
//+ cpp
<<generator>> cpp OBJECT IN %S
//#UC START# *47022CB8034Bfor54FECA940175*
//#UC END# *47022CB8034Bfor54FECA940175*
; // cpp


// генератор inline файлов реализации C++ (.i.h)
//+ i.h
<<generator>> i.h OBJECT IN %S
//#UC START# *47022CCF00EAfor54FECA940175*
//#UC END# *47022CCF00EAfor54FECA940175*
; // i.h


// генератор классов, интерфейсов на java (.java)
//+ java
<<generator>> java OBJECT IN %S
//#UC START# *470321950119for54FECA940175*
//#UC END# *470321950119for54FECA940175*
; // java


// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor54FECA940175*
//#UC END# *470321C1038Afor54FECA940175*
; // fctr.java


// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor54FECA940175*
//#UC END# *470F1571031Cfor54FECA940175*
; // intf.pas


// Реализация на Delphi(.pas)
//+ impl.pas
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor54FECA940175*
//#UC END# *470F15B800CBfor54FECA940175*
; // impl.pas


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
; // st_space_key

<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for54FECA940175*
//c          {}
//r {""=""}: {}
//#UC END# *4704C0E30186for54FECA940175*
; // constraint


// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for54FECA940175*
//#UC END# *470484D50138for54FECA940175*
; // wiki_up_add_gen


//: ScriptKeywordsPack::Class::creator::Operation
end. // :: <<ScriptKeywordsPack>> <<friend>> ;

implementation @ :: <<ScriptKeywordsPack>> <<creator>> ;
//= ScriptKeywordsPack::Class::keyword::Operation

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _IsCreator
; // st_space_key

: IsCreator OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *5510359500FCfor5510358803BD*
//	true
 true
//#UC END# *5510359500FCfor5510358803BD*
; // IsCreator


//: ScriptKeywordsPack::Class::globalkeyword::Operation
end. // :: <<ScriptKeywordsPack>> <<creator>> ;

implementation @ :: <<ScriptKeywordsPack>> <<globalkeyword>> ;
//? Глобальное слово скрипта
//= UtilityPack::Class::Operation

// Пользовательские свойства
//p NameForScript:s ? 
//p is immediate:tribool=undefined ? 

// Генераторы
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for55115A7D0330*
//#UC END# *46E6D4BB0339for55115A7D0330*
; // wiki


// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor55115A7D0330*
//#UC END# *470321C1038Afor55115A7D0330*
; // fctr.java


// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor55115A7D0330*
//#UC END# *470F1571031Cfor55115A7D0330*
; // intf.pas


// Реализация на Delphi(.pas)
//+ impl.pas
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor55115A7D0330*
//#UC END# *470F15B800CBfor55115A7D0330*
; // impl.pas


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{NameForScript}"!="%S{!NameForScript}"}%f_up_prefix(%S) *NameForScript* = *%S{NameForScript}*
 ?inherited
 if ( ( %S get_up ( 'NameForScript' ) ) %!= ( %S get_up_def ( 'NameForScript' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *NameForScript* = *'
  %S get_up ( 'NameForScript' ) '*'
//	][{"%S{is immediate}"!="%S{!is immediate}"}%f_up_prefix(%S) *is immediate* = *%S{is immediate}*
 end // if
 if ( ( %S get_up ( 'is immediate' ) ) %!= ( %S get_up_def ( 'is immediate' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *is immediate* = *'
  %S get_up ( 'is immediate' ) '*'
//	]
 end // if

//%f _IsGlobalKeyword
; // wiki_up_print

: IsGlobalKeyword OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *55115AD200D8for55115A7D0330*
//	true
 true
//#UC END# *55115AD200D8for55115A7D0330*
; // IsGlobalKeyword


//%f _NoForward
: NoForward OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *55115FF8009Efor55115A7D0330*
//	true
 true
//#UC END# *55115FF8009Efor55115A7D0330*
; // NoForward


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for55115A7D0330*
//#UC END# *470484D50138for55115A7D0330*
; // wiki_up_add_gen


//: ScriptKeywordsPack::Class::varworker::Operation
end. // :: <<ScriptKeywordsPack>> <<globalkeyword>> ;

implementation @ :: <<ScriptKeywordsPack>> <<varworker>> ;
//= ScriptKeywordsPack::Class::keyword::Operation

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _IsVarWorker
; // st_space_key

: IsVarWorker OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *55128EF4009Cfor55128EAF022E*
//	true
 true
//#UC END# *55128EF4009Cfor55128EAF022E*
; // IsVarWorker


//: ScriptKeywordsPack::Class::globalvarworker::Operation
end. // :: <<ScriptKeywordsPack>> <<varworker>> ;

implementation @ :: <<ScriptKeywordsPack>> <<globalvarworker>> ;
//= ScriptKeywordsPack::Class::globalkeyword::Operation

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _IsVarWorker
; // st_space_key

: IsVarWorker OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *55128F060331for55128EDC028D*
//	true
 true
//#UC END# *55128F060331for55128EDC028D*
; // IsVarWorker


//: ScriptKeywordsPack::Class::wordworker::Operation
end. // :: <<ScriptKeywordsPack>> <<globalvarworker>> ;

implementation @ :: <<ScriptKeywordsPack>> <<wordworker>> ;
//= ScriptKeywordsPack::Class::varworker::Operation
//= SupressNextImmediateHolder::Class

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S%[ScriptKeywordsPack::Class::varworker::Operation]f_wiki_up_print()[{"%S{SupressNextImmediate}"!="%S{!SupressNextImmediate}"}%f_up_prefix(%S) *SupressNextImmediate* = *%S{SupressNextImmediate}*
 call-inherited:: 'ScriptKeywordsPack::varworker::Operation' wiki_up_print %( )%
 if ( ( %S get_up ( 'SupressNextImmediate' ) ) %!= ( %S get_up_def ( 'SupressNextImmediate' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *SupressNextImmediate* = *'
  %S get_up ( 'SupressNextImmediate' ) '*'
//	]
 end // if

//%f _IsWordWorker
; // wiki_up_print

: IsWordWorker OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *5513DB4402E0for5513DB34012F*
//	true
 true
//#UC END# *5513DB4402E0for5513DB34012F*
; // IsWordWorker


//: ScriptKeywordsPack::Class::globalwordworker::Operation
end. // :: <<ScriptKeywordsPack>> <<wordworker>> ;

implementation @ :: <<ScriptKeywordsPack>> <<globalwordworker>> ;
//= ScriptKeywordsPack::Class::globalvarworker::Operation
//= SupressNextImmediateHolder::Class

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S%[ScriptKeywordsPack::Class::globalvarworker::Operation]f_wiki_up_print()[{"%S{SupressNextImmediate}"!="%S{!SupressNextImmediate}"}%f_up_prefix(%S) *SupressNextImmediate* = *%S{SupressNextImmediate}*
 call-inherited:: 'ScriptKeywordsPack::globalvarworker::Operation' wiki_up_print %( )%
 if ( ( %S get_up ( 'SupressNextImmediate' ) ) %!= ( %S get_up_def ( 'SupressNextImmediate' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *SupressNextImmediate* = *'
  %S get_up ( 'SupressNextImmediate' ) '*'
//	]
 end // if

//%f _IsWordWorker
; // wiki_up_print

: IsWordWorker OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *5513DB6C026Ffor5513DB5502C7*
//	true
 true
//#UC END# *5513DB6C026Ffor5513DB5502C7*
; // IsWordWorker



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // :: <<ScriptKeywordsPack>> <<globalwordworker>> ;

