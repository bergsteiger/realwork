////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/DelphiSpecific/DelphiLang/Interface/facetmethod.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::DelphiSpecific::DelphiLang::Interface::facetmethod
//
// Метод интерфейса
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: facetmethod::Class
implementation @ <<facetmethod>>
//? Метод интерфейса
//> !
//< *::Class,*::Category

//= method::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//v +#
// - типы видимости
//a a
// - тип абстракции
//Y code_method.gif
//L code_method
//m t
// - может быть реализован/иметь перекрытую реализацию

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p OriginalStereotype:s ? 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{OriginalStereotype}"!="%S{!OriginalStereotype}"}%f_up_prefix(%S) *OriginalStereotype* = *%S{OriginalStereotype}*
 ?inherited
 if ( ( %S get_up ( 'OriginalStereotype' ) ) %!= ( %S get_up_def ( 'OriginalStereotype' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *OriginalStereotype* = *'
  %S get_up ( 'OriginalStereotype' ) '*'
//	]
 end // if


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

//: facetmethod::Class::Operation
; // wiki_up_print

end. // <<facetmethod>>

implementation @ :: <<facetmethod>> <<Operation>> ;
//? Сигнатура метода
//= method::Class::Operation

// Параметры стереотипа
//v -
// - типы видимости
//e g
// - возможность использовать исключения
//a f
// - тип абстракции
//Y code_method.gif
//L code_method
//T 
// - может не иметь "цели" (типа/результата)
//m f
// - не может быть реализован/иметь перекрытую реализацию

// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

; // st_space_key

end. // :: <<facetmethod>> <<Operation>> ;

