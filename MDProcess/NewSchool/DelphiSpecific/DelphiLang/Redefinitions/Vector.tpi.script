////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/DelphiSpecific/DelphiLang/Redefinitions/Vector.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::DelphiSpecific::DelphiLang::Redefinitions::Vector
//
// переопределение стандартного стереотипа Vector
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: Vector::Class (redefinition)
implementation @ <<Vector>>
//? переопределение стандартного стереотипа Vector
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p array type=dynamic|open ? Тип массива: open - открытый массив - массив с заданной длинной, причём длина - Compiler Magic dynamic - динамический массив - массив с изменяемой длинной.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	[{"%S{array type}"!="%S{!array type}"}%f_up_prefix(%S) *array type* = *%S{array type}* - Тип массива: open - открытый массив - массив с заданной длинной, причём длина - Compiler Magic dynamic - динамический массив - массив с изменяемой длинной.
 if ( ( %S get_up ( 'array type' ) ) %!= ( %S get_up_def ( 'array type' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *array type* = *'
  %S get_up ( 'array type' ) '* - Тип массива: open - открытый массив - массив с заданной длинной, причём длина - Compiler Magic dynamic - динамический массив - массив с изменяемой длинной.'
//	]
 end // if



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

; // wiki_up_print

end. // <<Vector>>

