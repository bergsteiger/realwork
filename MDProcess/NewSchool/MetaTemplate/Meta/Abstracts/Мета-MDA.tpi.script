////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/MetaTemplate/Meta/Abstracts/Мета-MDA.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAGenerator::Class>> MDProcess$Templates::MetaTemplate::Meta::Abstracts::Мета-MDA
//
// генераторы мета-шаблонов
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: Мета-MDA::MDAGenerator
implementation @ Мета-MDA
//? генераторы мета-шаблонов
//= Документация::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Генераторы

// Генерация списка включения мета-шаблонов (mda.inc)
//+ mda.inc
<<generator>> mda.inc OBJECT IN %S
//#UC START# *4A09484300C6for46E28D3A01E4*
//P
//C /%SN%S{root path suffix}
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *4A09484300C6for46E28D3A01E4*
; // mda.inc


//+ tpi.script
<<generator>> tpi.script OBJECT IN %S
//R  
//#UC START# *5655E2B600CAfor46E28D3A01E4*
//P true
//C %f_tpi_script_Path(%S)
//O %S%f_tpi_script_FileName()
//F %S%f_tpi_script_GenerateForward()
//	[{"%SO"!=""}\
 if ( ( %S |O ) %!= '' ) then
 begin
//	%f_clear_list(GENERATED_STEREOS)\
  [%f] clear_list %( 'GENERATED_STEREOS' )% 
//	INCLUDE 'ME.ms.dict'\n\n\
  'INCLUDE ''ME.ms.dict'''#13#10#13#10


//	<{}{"%D#f_tpi_script_FileName()"!=""}\
  INTEGER VAR l_Counter l_Counter := 0
  for %S%D
  begin
   OBJECT IN %D
   if ( ( %D %?f tpi_script_FileName %( )% ) %!= '' ) then
   begin
//	INCLUDE '%D#f_tpi_script_FileName()'\n\
    'INCLUDE '''
    %D %?f tpi_script_FileName %( )% ''''#13#10
//	EXPORTS %D#f_tpi_script_FileName()\n\
    'EXPORTS '
    %D %?f tpi_script_FileName %( )% #13#10
//	\n\
    #13#10
//	>\

    ++! l_Counter
   end // if
  end // for D


//	]\
 end // if

//	[{"%S%f_tpi_script_Name()"!=""}\
 if ( ( %S %f tpi_script_Name %( )% ) %!= '' ) then
 begin


//	[{%f_exists_in_list(GENERATED_STEREOS,"%S%f_tpi_script_Name()")=true}{\
  if ( ( [%f] exists_in_list %( 'GENERATED_STEREOS' %, %S %f tpi_script_Name %( )% )% ) %==  true ) then
  begin
//	REDEFINITION \
   'REDEFINITION '
//	]\
  end // if
  else
  begin
//	%f_add_to_list(GENERATED_STEREOS,"%S%f_tpi_script_Name()")\
   [%f] add_to_list %( 'GENERATED_STEREOS' %, %S %f tpi_script_Name %( )% )% 
//	}\
  end // else


//	<%FF>\
  INTEGER VAR l_Counter l_Counter := 0
  for %S%F
  begin
   OBJECT IN %F
   if true then
   begin
    %F |F 
    ++! l_Counter
   end // if
  end // for F


//	MESTUB %S%f_tpi_script_Name()\
  'MESTUB '
  %S %f tpi_script_Name %( )% 
//	[ Inherits ( <%G#f_tpi_script_Name() ><%R#f_tpi_script_Name() >)]
  if NOT-EMPTY
  begin
   ' Inherits ( '
   INTEGER VAR l_Counter l_Counter := 0
   for %S%G
   begin
    OBJECT IN %G
    if true then
    begin
     %G %?f tpi_script_Name %( )% ' ' 
     ++! l_Counter
    end // if
   end // for G
   INTEGER VAR l_Counter l_Counter := 0
   for %S%R
   begin
    OBJECT IN %R
    if true then
    begin
     %R %?f tpi_script_Name %( )% ' ' 
     ++! l_Counter
    end // if
   end // for R
   ')' 
  end // if
  NOP
//	 MEPROP UID '%SU'
  ' MEPROP UID '''
  %S |U '''
//	[{"%SN"!=""}\
  if ( ( %S |N ) %!= '' ) then
  begin
//	 MEPROP Name '%S%f_tpi_script_NamePrim()'
   ' MEPROP Name '''
   %S %f tpi_script_NamePrim %( )% '''
//	]\
  end // if
//	[{"%SS"!=""}\
  if ( ( %S |S ) %!= '' ) then
  begin
//	 MEPROP Stereotype '%f_str_replace(%SS,','')'
   ' MEPROP Stereotype '''
   [%f] str_replace %( %S |S %, '''' %, '''''' )% '''
//	]\
  end // if
//	%f_with_gen_id(pas.script,%f_StereotypeInModelRef(%S))\
  [%f] with_gen_id %( 'pas.script' %, [%f] StereotypeInModelRef %( %S )% )% 
//	%S#f_pas_script_GenerateUserProperties()\
  %S %?f pas_script_GenerateUserProperties %( )% 
//	
  #13#10

//	ENDMESTUB // %S%f_tpi_script_Name()\n\n\
  'ENDMESTUB // '
  %S %f tpi_script_Name %( )% #13#10#13#10
//	]\
 end // if

//	[{%SS=MDAGenerator}%f_warning(%SN %SS)]\

//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C

//f _StereotypeInModelRef
; // tpi.script

end. // Мета-MDA

: StereotypeInModelRef OBJECT IN %S
//	[\
 if NOT-EMPTY
 begin
//	 MELINK StereotypeInModel %S#f_pas_script_Reference() ;
  ' MELINK StereotypeInModel '
  %S %?f pas_script_Reference %( )% ' ;'
//	]
 end // if
 NOP

//f _tpi_script_Path
; // StereotypeInModelRef

: tpi_script_Path OBJECT IN %S
//	%S#f_pas_script_Path()/Stereotypes
 %S %?f pas_script_Path %( )% '/Stereotypes'
//#UC END# *5655E2B600CAfor46E28D3A01E4*
; // tpi_script_Path


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
implementation @ Мета-MDA
: st_space_key OBJECT IN %S
//	MDP
 'MDP'

//%f _tpi_script_FileName
; // st_space_key

: tpi_script_FileName OBJECT IN %S
// возвращаемый результат: a-string
//#UC START# *5655ED7D0175for46E28D3A01E4*
//	[{%SS=Project}%f_str_replace(%f_str_replace(%SN,$,_), ,_).tpi.script]
 if ( ( %S |S ) %== 'Project' ) then
 begin
  [%f] str_replace %( [%f] str_replace %( %S |N %, '$' %, '_' )% %, ' ' %, '_' )% '.tpi.script' 
 end // if
//#UC END# *5655ED7D0175for46E28D3A01E4*
; // tpi_script_FileName


//%f _tpi_script_Name
: tpi_script_Name OBJECT IN %S
// возвращаемый результат: a-string
//#UC START# *5655EDAD01E3for46E28D3A01E4*
//	[{"%S%f_tpi_script_NamePrim()"!=""}\
 if ( ( %S %f tpi_script_NamePrim %( )% ) %!= '' ) then
 begin
//	[{%SS=generator}{st}gen]\
  if ( ( %S |S ) %== 'generator' ) then
  begin
   'gen' 
  end // if
  else
  begin
   'st' 
  end // else
//	_%S%f_tpi_script_NamePrim()\
  '_'
  %S %f tpi_script_NamePrim %( )% 
//	]
 end // if
//#UC END# *5655EDAD01E3for46E28D3A01E4*
; // tpi_script_Name


//%f _tpi_script_GenerateForward
: tpi_script_GenerateForward OBJECT IN %S
//#UC START# *5655F14C01C2for46E28D3A01E4*
//	[FORWARD %S#f_tpi_script_Name()\n]
 if NOT-EMPTY
 begin
  'FORWARD '
  %S %?f tpi_script_Name %( )% #13#10 
 end // if
 NOP
//#UC END# *5655F14C01C2for46E28D3A01E4*
; // tpi_script_GenerateForward


//%f _tpi_script_NamePrim
: tpi_script_NamePrim OBJECT IN %S
// возвращаемый результат: a-string
//#UC START# *565872E001A9for46E28D3A01E4*
//	[{%SS=MDAClass|%SS=MDACategory|%SS=MDAAbstractClass|%SS=generator}{\
 if ( ( %S |S ) %== 'MDAClass' OR 
   ( ( %S |S ) %== 'MDACategory'  ) OR 
   ( ( %S |S ) %== 'MDAAbstractClass'  ) OR 
   ( ( %S |S ) %== 'generator'  ) ) then
 begin
//	%f_str_replace(%SN, ,_)\
  [%f] str_replace %( %S |N %, ' ' %, '_' )% 
//	]
 end // if
 else
 begin

//	[{%S{unstereotyped}!=true}\
//	[{%SS=MDAOperation}{\
  if ( ( %S |S ) %== 'MDAOperation' ) then
  begin
//	%f_str_replace(%f_N(%S), ,_)::Operation\
   [%f] str_replace %( [%f] N %( %S )% %, ' ' %, '_' )% '::Operation'
//	]\
  end // if
  else
  begin
//	[{%SS=MDAAttribute}{\
   if ( ( %S |S ) %== 'MDAAttribute' ) then
   begin
//	%f_str_replace(%f_N(%S), ,_)::Attribute\
    [%f] str_replace %( [%f] N %( %S )% %, ' ' %, '_' )% '::Attribute'
//	]\
   end // if
   else
   begin
//	[{%SS=MDADependency}\
    if ( ( %S |S ) %== 'MDADependency' ) then
    begin
//	%f_str_replace(%f_N(%S), ,_)::Dependency\
     [%f] str_replace %( [%f] N %( %S )% %, ' ' %, '_' )% '::Dependency'
//	]\
    end // if
//	}\
   end // else
//	}\
  end // else

//	]\
//	}\
 end // else
//#UC END# *565872E001A9for46E28D3A01E4*
; // tpi_script_NamePrim



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // Мета-MDA

