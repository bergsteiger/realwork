////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/SimpleTemplates/SimpleTemplatesLibrary/Elements/CategoryLike.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAAbstractClass::Class>> MDProcess$ForDelphi::SimpleTemplates::SimpleTemplatesLibrary::Elements::CategoryLike
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: CategoryLike::Class
implementation @ <<CategoryLike>>
//> ElementProxy::Class
//> ClassProxy::Class
//> InterfaceProxy::Class
//> InterfaceFactoryProxy::Class

//= WikiPackageImpl::Category
//= PascalGenerator::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p path prefix:s ? 
//p defines:s ? определяет файл с условиями компиляции

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{path prefix}"!="%S{!path prefix}"}%f_up_prefix(%S) *path prefix* = *%S{path prefix}*
 ?inherited
 if ( ( %S get_up ( 'path prefix' ) ) %!= ( %S get_up_def ( 'path prefix' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *path prefix* = *'
  %S get_up ( 'path prefix' ) '*'
//	][{"%S{defines}"!="%S{!defines}"}%f_up_prefix(%S) *defines* = *%S{defines}* - определяет файл с условиями компиляции
 end // if
 if ( ( %S get_up ( 'defines' ) ) %!= ( %S get_up_def ( 'defines' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *defines* = *'
  %S get_up ( 'defines' ) '* - определяет файл с условиями компиляции'
//	]
 end // if

//%f _nameForPath
; // wiki_up_print

: nameForPath OBJECT IN %S
// возвращаемый результат: a-string
//#UC START# *561E58EE0167for561D3BE5006A*
//	%f_N(%S)
 [%f] N %( %S )% 
//#UC END# *561E58EE0167for561D3BE5006A*
; // nameForPath


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi ST::Class
//%f _path
: path OBJECT IN %S
// возвращаемый результат: a-string
//#UC START# *561D436002B8for561D3BE5006A*
//	[{"%S{path prefix}"!=""}/%S{path prefix}][{"%S%f_nameForPath()"!=""}/%S%f_nameForPath()]
 if ( ( %S get_up ( 'path prefix' ) ) %!= '' ) then
 begin
  '/'
  %S get_up ( 'path prefix' ) 
 end // if
 if ( ( %S %f nameForPath %( )% ) %!= '' ) then
 begin
  '/'
  %S %f nameForPath %( )% 
 end // if
//#UC END# *561D436002B8for561D3BE5006A*
; // path



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // <<CategoryLike>>

