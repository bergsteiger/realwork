////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/SimpleTemplates/SimpleTemplatesLibrary/RootStereotypes/ProjectGroup.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDACategory::Class>> MDProcess$ForDelphi::SimpleTemplates::SimpleTemplatesLibrary::RootStereotypes::ProjectGroup
//
// Группа проектов
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: ProjectGroup::Category
implementation @ <<ProjectGroup>>
//? Группа проектов
//> LibraryGroup::Category
//> Project::Category
//> ProjectGroup::Category

//= Мета-MDA::MDAGenerator
//= C++ интерфейсы и реализация::MDAGenerator
//= ModelSerialize::MDAGenerator
//= Delphi ST::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//Y code_project.gif
//L code_project
// Параметры визуализации
//$ C 195,245,195
//M
// - может быть основным элементом модели

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S%[Delphi ST::MDAGenerator]f_wiki_up_print()
 call-inherited:: 'Delphi ST' wiki_up_print %( )%


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
; // wiki_up_print

<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for561FCB1E032C*
//c          {}
//r {""=""}: {}
//#UC END# *4704C0E30186for561FCB1E032C*
; // constraint


// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
//%f _wiki_child_kind
: wiki_child_kind OBJECT IN %S
//#UC START# *4705CBD6003Efor561FCB1E032C*
//#UC END# *4705CBD6003Efor561FCB1E032C*
; // wiki_child_kind


// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for561FCB1E032C*
//#UC END# *470484D50138for561FCB1E032C*
; // wiki_up_add_gen


// перекрытие базового стереотипа Delphi ST::MDAGenerator
//%f _IsProjectGroup
: IsProjectGroup OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *56239DF403C0for561FCB1E032C*
//	true
 true
//#UC END# *56239DF403C0for561FCB1E032C*
; // IsProjectGroup


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
//%f _pas_script_Path
: pas_script_Path OBJECT IN %S
// возвращаемый результат: a-string
//#UC START# *563245390156for561FCB1E032C*
//	/shared/models/NewSchool/Scripts
 '/shared/models/NewSchool/Scripts'
//#UC END# *563245390156for561FCB1E032C*
; // pas_script_Path


// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор файлов реализации C++ (.cpp)
//+ cpp
<<generator>> cpp OBJECT IN %S
//#UC START# *47022CB8034Bfor561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *47022CB8034Bfor561FCB1E032C*
; // cpp


// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
//+ h
<<generator>> h OBJECT IN %S
//#UC START# *47022C88029Ffor561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *47022C88029Ffor561FCB1E032C*
; // h


// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор inline файлов реализации C++ (.i.h)
//+ i.h
<<generator>> i.h OBJECT IN %S
//#UC START# *47022CCF00EAfor561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *47022CCF00EAfor561FCB1E032C*
; // i.h


// реализация абстрактного стереотипа Delphi ST::MDAGenerator
//+ pascal
<<generator>> pascal OBJECT IN %S
//R  
//#UC START# *561D336E0099for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *561D336E0099for561FCB1E032C*
; // pascal


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
//+ impl.pas
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *470F15B800CBfor561FCB1E032C*
; // impl.pas


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *470F1571031Cfor561FCB1E032C*
; // intf.pas


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
//+ intf2.pas
<<generator>> intf2.pas OBJECT IN %S
//R  
//#UC START# *477398E501C0for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *477398E501C0for561FCB1E032C*
; // intf2.pas


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Ресурсы (.rc)
//+ rc.pas
<<generator>> rc.pas OBJECT IN %S
//R  
//#UC START# *55B8D28B0157for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *55B8D28B0157for561FCB1E032C*
; // rc.pas


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Скрипты в ресурсах (.rc.script)
//+ rc.script.pas
<<generator>> rc.script.pas OBJECT IN %S
//R  
//#UC START# *55B8D2F80145for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *55B8D2F80145for561FCB1E032C*
; // rc.script.pas


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Компилятор ресурса (.res.cmd)
//+ res.cmd.pas
<<generator>> res.cmd.pas OBJECT IN %S
//R  
//#UC START# *55B8DD9C0301for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *55B8DD9C0301for561FCB1E032C*
; // res.cmd.pas


// реализация абстрактного стереотипа ModelSerialize::MDAGenerator
// генератор структуры модели в описание на языке FORTH
//+ forth_structure
<<generator>> forth_structure OBJECT IN %S
//R  
//#UC START# *4F368B80039Efor561FCB1E032C*
//P true
//C /shared/models/NewSchool
//O %SN.root.model.script
//	\%DISABLE_CASCADE_DICT
 '%DISABLE_CASCADE_DICT'
//	
//	USES
 'USES'
//	 'W:\\shared\\models\\NewSchool\\Templates\\TemplatesCore.tpl.script'
 ' ''W:\shared\models\NewSchool\Templates\TemplatesCore.tpl.script''
//	;
 ';'
//	
//	[USES
 if NOT-EMPTY
 begin
  'USES'
//	 <{\n }{"%DO"!=""&%D#f_IsProjectGroup()=true}'%f_str_replace(%DR%Dd,/,\\)\\%DO'>
  ' '
  INTEGER VAR l_Counter l_Counter := 0
  for %S%D
  begin
   OBJECT IN %D
   if ( ( %D |O ) %!= '' AND 
    ( ( %D %?f IsProjectGroup %( )% ) %==  true  ) ) then
   begin
    if ( l_Counter >0 ) then ( #13#10' ' )
    ''''
    [%f] str_replace %( %D |R %D |d %, '/' %, '\' )% '\'
    %D |O '''' 
    ++! l_Counter
   end // if
  end // for D
//	;\n\n]\
  ';'#13#10#13#10 
 end // if
 NOP
//	[USES
 if NOT-EMPTY
 begin
  'USES'
//	 <{\n }{"%CO"!=""&%C#f_IsProject()=true}'%f_str_replace(%CR%Cd,/,\\)\\%CO'>
  ' '
  INTEGER VAR l_Counter l_Counter := 0
  for %S%C
  begin
   OBJECT IN %C
   if ( ( %C |O ) %!= '' AND 
    ( ( %C %?f IsProject %( )% ) %==  true  ) ) then
   begin
    if ( l_Counter >0 ) then ( #13#10' ' )
    ''''
    [%f] str_replace %( %C |R %C |d %, '/' %, '\' )% '\'
    %C |O '''' 
    ++! l_Counter
   end // if
  end // for C
//	;\n\n]\
  ';'#13#10#13#10 
 end // if
 NOP
//	%f_dump_to_FORTH(%S)\
 [%f] dump_to_FORTH %( %S )% 
//	<{}{"%CO"!=""}%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if ( ( %C |O ) %!= '' ) then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//	<%CX>
//#UC END# *4F368B80039Efor561FCB1E032C*
; // forth_structure


// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *46E6D4BB0339for561FCB1E032C*
; // wiki


// реализация абстрактного стереотипа Мета-MDA::MDAGenerator
// Генерация мета-шаблонов
//+ mda
<<generator>> mda OBJECT IN %S
//#UC START# *46E28D830109for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *46E28D830109for561FCB1E032C*
; // mda


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Генератор файлов форм (.dfm)
//+ dfm
<<generator>> dfm OBJECT IN %S
//R  
//#UC START# *49F5795900ECfor561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *49F5795900ECfor561FCB1E032C*
; // dfm


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// 3-я секция интерфейса. Например поле для свойства.
//+ intf3.pas
<<generator>> intf3.pas OBJECT IN %S
//R  
//#UC START# *4774D2A20372for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *4774D2A20372for561FCB1E032C*
; // intf3.pas


// перекрытие базового стереотипа ModelBuilding::MDAGenerator
// генератор построения виртуальных элементов модели - запускается до генерации конкретных
// артефактов
//+ spell
<<generator>> spell OBJECT IN %S
//#UC START# *4A41A13D03D5for561FCB1E032C*
//P true
//	%f_warning(%SN)\
 [%f] warning %( %S |N )% 
//	%f_warning(%BN)\
 [%f] warning %( %B |N )% 
//	%f_warning(%MN)\
//	<\
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
//	%f_warning(%CN start)\
   [%f] warning %( %C |N ' start' )% 
//	%CX\
   %C |X 
//	%f_warning(%CN finish)\
   [%f] warning %( %C |N ' finish' )% 
//	>

   ++! l_Counter
  end // if
 end // for C
//#UC END# *4A41A13D03D5for561FCB1E032C*
; // spell


// перекрытие базового стереотипа Мета-MDA::MDAGenerator
// Генерация списка включения мета-шаблонов (mda.inc)
//+ mda.inc
<<generator>> mda.inc OBJECT IN %S
//#UC START# *4A09484300C6for561FCB1E032C*
//P true
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *4A09484300C6for561FCB1E032C*
; // mda.inc



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // <<ProjectGroup>>

