////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMControllersLayer/ControllersImplementation/ViewAreaControllerImp.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMControllersLayer::ControllersImplementation::ViewAreaControllerImp
//
// Реализация контроллера области ввода
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: ViewAreaControllerImp::Class
implementation @ <<ViewAreaControllerImp>>
//? Реализация контроллера области ввода
//= SimpleClass::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//Y code_vcm_viewarea_controller_i.gif
//L code_vcm_viewarea_controller_i
// Параметры визуализации
//$ C 191,255,191
//$ l 20,170,120
//$ f 20,170,120

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли примесью
//%f _IsMixIn
; // st_space_key

: IsMixIn OBJECT IN %S
//#UC START# *4947E5D40127for492EC6CB020F*
//	[{%Sa=abstract}{false}true]
 if ( ( %S |a ) %== 'abstract' ) then
 begin
   true 
 end // if
 else
 begin
   false 
 end // else
//#UC END# *4947E5D40127for492EC6CB020F*
; // IsMixIn


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли простым классом реализации
//%f _IsSimpleClass
: IsSimpleClass OBJECT IN %S
//#UC START# *4947E4DA0227for492EC6CB020F*
//	[{%Sa=abstract}{true}false]
 if ( ( %S |a ) %== 'abstract' ) then
 begin
   false 
 end // if
 else
 begin
   true 
 end // else
//#UC END# *4947E4DA0227for492EC6CB020F*
; // IsSimpleClass


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит спец-метку класса
//%f _pas_OutClassMark
: pas_OutClassMark OBJECT IN %S
//#UC START# *494B74D7016Bfor492EC6CB020F*
//	vac
 'vac'
//#UC END# *494B74D7016Bfor492EC6CB020F*
; // pas_OutClassMark


// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for492EC6CB020F*
//c	{}
//r {""=""}: {}
//#UC END# *4704C0E30186for492EC6CB020F*
; // constraint


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

//: ViewAreaControllerImp::Class::UseCase::Attribute
end. // <<ViewAreaControllerImp>>

implementation @ :: <<ViewAreaControllerImp>> <<UseCase>> ;
//? Контроллер прецедента, в который входит данная область ввода
//= ClassBase::Class::Attribute

// Параметры стереотипа
//v #-
// - типы видимости
//a f
// - тип абстракции
//l l
// - возможные типы связи атрибута

// Генераторы
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for4978621501D1*
//#UC END# *46E6D4BB0339for4978621501D1*
; // wiki


// генератор inline файлов реализации C++ (.i.h)
//+ i.h
<<generator>> i.h OBJECT IN %S
//#UC START# *47022CCF00EAfor4978621501D1*
//#UC END# *47022CCF00EAfor4978621501D1*
; // i.h


// генератор реализации фабрик интерфейсов на java (.java)
//+ fctr.java
<<generator>> fctr.java OBJECT IN %S
//#UC START# *470321C1038Afor4978621501D1*
//#UC END# *470321C1038Afor4978621501D1*
; // fctr.java


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

// Элемент является VCM-контроллером
//%f _IsVCMController
; // st_space_key

: IsVCMController OBJECT IN %S
//#UC START# *4978632500D7for4978621501D1*
//	true
 true
//#UC END# *4978632500D7for4978621501D1*
; // IsVCMController


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for4978621501D1*
//c          {}
//r {""=""}: {}
//#UC END# *4704C0E30186for4978621501D1*
; // constraint


// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
//%f _wiki_up_add_gen
: wiki_up_add_gen OBJECT IN %S
//#UC START# *470484D50138for4978621501D1*
//#UC END# *470484D50138for4978621501D1*
; // wiki_up_add_gen


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет является ли элемент контроллером прецедента
//%f _IsUseCaseController
: IsUseCaseController OBJECT IN %S
//#UC START# *494B7E8B02B1for4978621501D1*
//	true
 true
//#UC END# *494B7E8B02B1for4978621501D1*
; // IsUseCaseController


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя атрибута
//%f _pas_AttrName
: pas_AttrName OBJECT IN %S
//#UC START# *494B9868000Afor4978621501D1*
//@ %SU
//	[{"%SN"!=""}{[{%S%T#f_IsUseCaseController()=true}{ucp_}ucc_]%f_pas_TypeName(%S%T)}[{%SN=SDS}{[{%S%T#f_IsUseCaseController()=true}ucc_]%SN}%SN]]
 if ( ( %S |N ) %!= '' ) then
 begin
  if ( ( %S |N ) %== 'SDS' ) then
  begin
   %S |N 
  end // if
  else
  begin
   if ( ( %S ->T %?f IsUseCaseController %( )%  ) %==  true ) then
   begin
    'ucc_' 
   end // if
   %S |N 
  end // else
 end // if
 else
 begin
  if ( ( %S ->T %?f IsUseCaseController %( )%  ) %==  true ) then
  begin
   'ucc_' 
  end // if
  else
  begin
   'ucp_' 
  end // else
  [%f] pas_TypeName %( %S ->T  )% 
 end // else
//#UC END# *494B9868000Afor4978621501D1*
; // pas_AttrName



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // :: <<ViewAreaControllerImp>> <<UseCase>> ;

