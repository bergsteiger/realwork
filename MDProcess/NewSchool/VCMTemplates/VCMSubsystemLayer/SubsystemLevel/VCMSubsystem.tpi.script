////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMSubsystemLayer/SubsystemLevel/VCMSubsystem.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDACategory::Class>> MDProcess$ForDelphi::VCMTemplates::VCMSubsystemLayer::SubsystemLevel::VCMSubsystem
//
// Подсистема
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: VCMSubsystem::Category
implementation @ <<VCMSubsystem>>
//? Подсистема
//> VCMControllers::Category
//> VCMViews::Category
//> Library::Category
//> VCMFormsPack::Class

//= WikiPackageImpl::Category
//= Delphi интерфейсы и реализация::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//a af
// - тип абстракции
//Y code_vcm_subsystem.gif
//L code_vcm_subsystem
// Параметры визуализации
//$ C 152,251,152
//$ l 50,205,50
//$ f 50,205,50

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p defines:s ? определяет файл с условиями компиляции
//p vendor:s ? определяет префикс разработчика

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{defines}"!="%S{!defines}"}%f_up_prefix(%S) *defines* = *%S{defines}* - определяет файл с условиями компиляции
 ?inherited
 if ( ( %S get_up ( 'defines' ) ) %!= ( %S get_up_def ( 'defines' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *defines* = *'
  %S get_up ( 'defines' ) '* - определяет файл с условиями компиляции'
//	][{"%S{vendor}"!="%S{!vendor}"}%f_up_prefix(%S) *vendor* = *%S{vendor}* - определяет префикс разработчика
 end // if
 if ( ( %S get_up ( 'vendor' ) ) %!= ( %S get_up_def ( 'vendor' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *vendor* = *'
  %S get_up ( 'vendor' ) '* - определяет префикс разработчика'
//	]
 end // if

//%f _IsVCMSubsystem
; // wiki_up_print

: IsVCMSubsystem OBJECT IN %S
// возвращаемый результат: boolean
//#UC START# *4A9699C803A3for4953E0360081*
//	true
 true
//#UC END# *4A9699C803A3for4953E0360081*
; // IsVCMSubsystem


//%f _pas_OutUnitFile
: pas_OutUnitFile OBJECT IN %S
//#UC START# *4AA8B17E0178for4953E0360081*
//#UC END# *4AA8B17E0178for4953E0360081*
; // pas_OutUnitFile


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя модуля в котором содержится элемент
//%f _pas_UnitName
: pas_UnitName OBJECT IN %S
//#UC START# *4948065C01DFfor4953E0360081*
//	_none_
 '_none_'
//#UC END# *4948065C01DFfor4953E0360081*
; // pas_UnitName


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
//+ impl.pas
<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor4953E0360081*
//#UC END# *470F15B800CBfor4953E0360081*
; // impl.pas


// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
//+ intf.pas
<<generator>> intf.pas OBJECT IN %S
//R  
//#UC START# *470F1571031Cfor4953E0360081*
//R  
//P
//O [{%S{finished}!=true}NOT_FINISHED_]%f_pas_UnitFileName(%S)
//C [{%S{vendor}!=none}[{}{/GbaNemesis}%S{vendor}]]
//	[{"%SO"!=""}%S%f_pas_OutUnitFile()]\
 if ( ( %S |O ) %!= '' ) then
 begin
  %S %f pas_OutUnitFile %( )% 
 end // if
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//#UC END# *470F1571031Cfor4953E0360081*
; // intf.pas


// перекрытие базового стереотипа ModelBuilding::MDAGenerator
// генератор построения виртуальных элементов модели - запускается до генерации конкретных
// артефактов
//+ spell
<<generator>> spell OBJECT IN %S
//#UC START# *4A41A13D03D5for4953E0360081*
//	<%CX>
 INTEGER VAR l_Counter l_Counter := 0
 for %S%C
 begin
  OBJECT IN %C
  if true then
  begin
   %C |X 
   ++! l_Counter
  end // if
 end // for C
//	%S%f_DoSpell()
 %S %f DoSpell %( )% 
//#UC END# *4A41A13D03D5for4953E0360081*
; // spell



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // <<VCMSubsystem>>

