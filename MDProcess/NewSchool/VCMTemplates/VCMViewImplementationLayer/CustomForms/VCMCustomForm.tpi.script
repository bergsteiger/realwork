////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMViewImplementationLayer/CustomForms/VCMCustomForm.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMViewImplementationLayer::CustomForms::VCMCustomForm
//
// Форма VCM
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: VCMCustomForm::Class
implementation @ <<VCMCustomForm>>
//? Форма VCM
//> Component::Class
//> ScriptKeyword::Class

//= Dialog::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//Y code_vcm_form.gif
//L code_vcm_form

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p finished dfm:b=true ? Определяет, что dfm формы полностью определён на модели
//p NeedsHackRef:b=true ? Нужно ли генерировать ссылку на класс данной формы для Design-time

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{finished dfm}"!="%S{!finished dfm}"}%f_up_prefix(%S) *finished dfm* = *%S{finished dfm}* - Определяет, что dfm формы полностью определён на модели
 ?inherited
 if ( ( %S get_up ( 'finished dfm' ) ) %!= ( %S get_up_def ( 'finished dfm' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *finished dfm* = *'
  %S get_up ( 'finished dfm' ) '* - Определяет, что dfm формы полностью определён на модели'
//	][{"%S{NeedsHackRef}"!="%S{!NeedsHackRef}"}%f_up_prefix(%S) *NeedsHackRef* = *%S{NeedsHackRef}* - Нужно ли генерировать ссылку на класс данной формы для Design-time
 end // if
 if ( ( %S get_up ( 'NeedsHackRef' ) ) %!= ( %S get_up_def ( 'NeedsHackRef' ) ) ) then
 begin
  [%f] up_prefix %( %S )% ' *NeedsHackRef* = *'
  %S get_up ( 'NeedsHackRef' ) '* - Нужно ли генерировать ссылку на класс данной формы для Design-time'
//	]
 end // if

// нет документации
//%f _IsVCMForm
; // wiki_up_print

: IsVCMForm OBJECT IN %S
//#UC START# *4947EB1D002Bfor4947E2F10338*
//	true
 true
//#UC END# *4947EB1D002Bfor4947E2F10338*
; // IsVCMForm


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли примесью
//%f _IsMixIn
: IsMixIn OBJECT IN %S
//#UC START# *4947E5D40127for4947E2F10338*
//@ %SU
//	[{%Sa=abstract}{false}[{%Gx!=true}{[{%G#f_IsMixIn()=true}{false}true]}true]]
 if ( ( %S |a ) %== 'abstract' ) then
 begin
  if ( ( %G |x ) %!=  true ) then
  begin
    true 
  end // if
  else
  begin
   if ( ( %G %?f IsMixIn %( )% ) %==  true ) then
   begin
     true 
   end // if
   else
   begin
     false 
   end // else
  end // else
 end // if
 else
 begin
   false 
 end // else
//#UC END# *4947E5D40127for4947E2F10338*
; // IsMixIn


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли простым классом реализации
//%f _IsSimpleClass
: IsSimpleClass OBJECT IN %S
//#UC START# *4947E4DA0227for4947E2F10338*
//	true
 true
//#UC END# *4947E4DA0227for4947E2F10338*
; // IsSimpleClass


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя типа
//%f _pas_TypeName
: pas_TypeName OBJECT IN %S
//#UC START# *4947F8AD02A1for4947E2F10338*
//	[{%S%f_IsMixIn()=true}{\
 if ( ( %S %f IsMixIn %( )% ) %==  true ) then
 begin
//	%S%[inherited]\
  inherited
//	]
 end // if
 else
 begin
//	T%S{form name prefix}%f_N(%S)\
  'T'
  %S get_up ( 'form name prefix' ) [%f] N %( %S )% 
//	[{"%S{form name prefix}"=""}Form]}\
  if ( ( %S get_up ( 'form name prefix' ) ) %== '' ) then
  begin
   'Form' 
  end // if
 end // else
//#UC END# *4947F8AD02A1for4947E2F10338*
; // pas_TypeName


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя модуля в котором содержится элемент
//%f _pas_UnitName
: pas_UnitName OBJECT IN %S
//#UC START# *4948065C01DFfor4947E2F10338*
//	[{%S%f_IsMixIn()=true}{%f_cut_postfix(%f_N(%S),Form)_Form}%S%[inherited]]
 if ( ( %S %f IsMixIn %( )% ) %==  true ) then
 begin
  inherited
 end // if
 else
 begin
  [%f] cut_postfix %( [%f] N %( %S )% %, 'Form' )% '_Form' 
 end // else
//#UC END# *4948065C01DFfor4947E2F10338*
; // pas_UnitName


// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Путь к модулю
//%f _pas_UnitPath
: pas_UnitPath OBJECT IN %S
//#UC START# *4948C3290020for4947E2F10338*
//	[{%P#f_IsVCMApplication()!=true&%PS!=VCMForms}/Forms]
 if ( ( %P %?f IsVCMApplication %( )% ) %!=  true AND 
   ( ( %P |S ) %!= 'VCMForms'  ) ) then
 begin
  '/Forms' 
 end // if
//#UC END# *4948C3290020for4947E2F10338*
; // pas_UnitPath



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // <<VCMCustomForm>>

