////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMControllersLayer/ControllersImplementation/ViewAreaControllerImp.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMControllersLayer::ControllersImplementation::ViewAreaControllerImp
//
// Реализация контроллера области ввода
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: ViewAreaControllerImp::Class
? Реализация контроллера области ввода
= SimpleClass::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
Y code_vcm_viewarea_controller_i.gif
L code_vcm_viewarea_controller_i
// Параметры визуализации
$ C 191,255,191
$ l 20,170,120
$ f 20,170,120

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет, что стереотип содержит хотя бы один именованный VCM-контроллер среди своих детей
%f _HasAnyNamedVCMController
//#UC START# *4978770402B4for492EC6CB020F*
@ %SU
	[{<{}{%C#f_IsVCMController()=true&"%CN"!=""&%CN!=SDS}{C}>!=0}{false}true]
//#UC END# *4978770402B4for492EC6CB020F*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли примесью
%f _IsMixIn
//#UC START# *4947E5D40127for492EC6CB020F*
	[{%Sa=abstract}{false}true]
//#UC END# *4947E5D40127for492EC6CB020F*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли простым классом реализации
%f _IsSimpleClass
//#UC START# *4947E4DA0227for492EC6CB020F*
	[{%Sa=abstract}{true}false]
//#UC END# *4947E4DA0227for492EC6CB020F*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Добавляет файлы необходимые элементу с точки зрения метамодели
%f _pas_ImplUses
//#UC START# *4948EB2601FAfor492EC6CB020F*
	%S%[inherited]\
	[{%S%f_HasAnyNamedVCMController()=true}%f_pas_PutToUses("SysUtils")]
//#UC END# *4948EB2601FAfor492EC6CB020F*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит дополнительные модули необходимые элементу в интерфейсной секции
%f _pas_IntfUses
//#UC START# *4948F2EE0334for492EC6CB020F*
	%S%[inherited]\
	[{%S%f_HasAnyVCMController()=true}%f_pas_PutToUses("vcmInterfaces")\
	%f_pas_PutToUses("vcmControllers")]
//#UC END# *4948F2EE0334for492EC6CB020F*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит спец-метку класса
%f _pas_OutClassMark
//#UC START# *494B74D7016Bfor492EC6CB020F*
	vac
//#UC END# *494B74D7016Bfor492EC6CB020F*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит значения параметров примесей
%f _pas_OutMixInValues
//#UC START# *494B7E6D0125for492EC6CB020F*
	%S%[inherited]\
	[{%Sa=final}\
	[{<{}{%G#f_IsMixIn()!=true}{C}>=0}{\
// - странная проверка на то, что кто-то из предков не примесь
//   А если все примесь, то что? Надо наверное ругаться?
	%f_error("%SN : %SS не может быть финальным контроллером, т.к. все его предки - примеси")\
//	[#_FormDataSourceType_ = <%G<{}{%R#f_IsViewAreaController()=true}%f_pas_TypeName(%R)>>;\n]\
// - берём тип контроллера от предка
	}\
	[{<{}{%R#f_IsViewAreaController()=true&%Ra!=abstract}{C}>!=0}{\
//	[#_FormDataSourceType_ = <%G<{}{%R#f_IsViewAreaController()=true}%f_pas_TypeName(%R)%f_cycle_break(%R)>>;\n]\
	#_FormDataSourceType_ = <%G<{}{%R#f_IsViewAreaController()=true&%Ra!=abstract}%f_pas_TypeName(%R)%f_cycle_break(%R)>>;\n\
// - берём тип контроллера от предка
	}\
//	[#_FormDataSourceType_ = <{}{%R#f_IsViewAreaController()=true}%f_pas_TypeName(%R)%f_cycle_break(%R)>;\n]\
	#_FormDataSourceType_ = <{}{%R#f_IsViewAreaController()=true&%Ra!=abstract}%f_pas_TypeName(%R)%f_cycle_break(%R)>;\n\
	]\
	]\
	]
//#UC END# *494B7E6D0125for492EC6CB020F*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит реализацию переопределённых методов
%f _pas_OutOverridesImpl
//#UC START# *494B86B5014Bfor492EC6CB020F*
	%S%[inherited]\
	[{%S%f_HasAnyVCMController()=true}\
	%f_pas_OpenMethodImplementation("InitRefs",%S)\
	procedure %f_pas_TypeName(%S).InitRefs(const aDS: IvcmUseCaseController);
	begin
	 inherited;
	 <{\n }{%C#f_IsVCMController()=true}[{"%CN"=""|%CN=SDS}{\
	Supports(aDS, %f_pas_TypeName(%C%T), %C%f_pas_AttrName())\
	}\
	%C%f_pas_AttrName() := aDS As %f_pas_TypeName(%C%T)];>
	end;\
	%f_pas_OpenMethodImplementation("ClearRefs",%S)\
	procedure %f_pas_TypeName(%S).ClearRefs;
	begin
	 inherited;
	 <{\n }{%C#f_IsVCMController()=true}%C%f_pas_AttrName() := nil;>
	end;\
	]
//#UC END# *494B86B5014Bfor492EC6CB020F*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит интерфейс переопределённых методов
%f _pas_OutOverridesIntf
//#UC START# *494B856502ECfor492EC6CB020F*
	%S%[inherited]\
	[{%S%f_HasAnyVCMController()=true}\
	%f_pas_OpenMethodInterface("InitRefs",%S)\
	# procedure InitRefs(const aDS: IvcmUseCaseController); override;
	%f_pas_OpenMethodInterface("ClearRefs",%S)\
	# procedure ClearRefs; override;
	]
//#UC END# *494B856502ECfor492EC6CB020F*

// перекрытие базового стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for492EC6CB020F*
c	{}
r {""=""}: {}
//#UC END# *4704C0E30186for492EC6CB020F*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: ViewAreaControllerImp::Class::UseCase::Attribute
? Контроллер прецедента, в который входит данная область ввода
= ClassBase::Class::Attribute

// Параметры стереотипа
v #-
/ - типы видимости
a f
/ - тип абстракции
l l
/ - возможные типы связи атрибута

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for4978621501D1*
//#UC END# *46E6D4BB0339for4978621501D1*

// генератор inline файлов реализации C++ (.i.h)
+ i.h
//#UC START# *47022CCF00EAfor4978621501D1*
//#UC END# *47022CCF00EAfor4978621501D1*

// генератор реализации фабрик интерфейсов на java (.java)
+ fctr.java
//#UC START# *470321C1038Afor4978621501D1*
//#UC END# *470321C1038Afor4978621501D1*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for4978621501D1*
//#UC END# *477398E501C0for4978621501D1*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for4978621501D1*
//#UC END# *4774D2A20372for4978621501D1*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor4978621501D1*
//#UC END# *49F5795900ECfor4978621501D1*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for4978621501D1*
//#UC END# *55B8D28B0157for4978621501D1*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for4978621501D1*
//#UC END# *55B8D2F80145for4978621501D1*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for4978621501D1*
//#UC END# *55B8DD9C0301for4978621501D1*

// Функции стереотипа
%f _st_space_key
	SHD

// Элемент является VCM-контроллером
%f _IsVCMController
//#UC START# *4978632500D7for4978621501D1*
	true
//#UC END# *4978632500D7for4978621501D1*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4978621501D1*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for4978621501D1*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for4978621501D1*
//#UC END# *470484D50138for4978621501D1*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет является ли элемент контроллером прецедента
%f _IsUseCaseController
//#UC START# *494B7E8B02B1for4978621501D1*
	true
//#UC END# *494B7E8B02B1for4978621501D1*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя атрибута
%f _pas_AttrName
//#UC START# *494B9868000Afor4978621501D1*
@ %SU
	[{"%SN"!=""}{[{%S%T#f_IsUseCaseController()=true}{ucp_}ucc_]%f_pas_TypeName(%S%T)}[{%SN=SDS}{[{%S%T#f_IsUseCaseController()=true}ucc_]%SN}%SN]]
//#UC END# *494B9868000Afor4978621501D1*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

