////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMViewImplementationLayer/CustomForms/VCMCustomForm.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMViewImplementationLayer::CustomForms::VCMCustomForm
//
// Форма VCM
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: VCMCustomForm::Class
? Форма VCM
> Component::Class
> ScriptKeyword::Class

= Dialog::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
Y code_vcm_form.gif
L code_vcm_form

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p finished dfm:b=true ? Определяет, что dfm формы полностью определён на модели
p NeedsHackRef:b=true ? Нужно ли генерировать ссылку на класс данной формы для Design-time

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD

%f _wiki_up_print
	%S#[inherited][{"%S{finished dfm}"!="%S{!finished dfm}"}%f_up_prefix(%S) *finished dfm* = *%S{finished dfm}* - Определяет, что dfm формы полностью определён на модели
	][{"%S{NeedsHackRef}"!="%S{!NeedsHackRef}"}%f_up_prefix(%S) *NeedsHackRef* = *%S{NeedsHackRef}* - Нужно ли генерировать ссылку на класс данной формы для Design-time
	]

// нет документации
%f _IsVCMForm
//#UC START# *4947EB1D002Bfor4947E2F10338*
	true
//#UC END# *4947EB1D002Bfor4947E2F10338*

// Вы водит переопределение стандартного типа, для того, чтобы в Delphi не развалился Design-time
// при наследовании от сгенерированной формы
%f _pas_OutHackRef
//#UC START# *494B733D0159for4947E2F10338*
	[{%S{NeedsHackRef}=true}\
	\n
	#%S%f_pas_HackRef() = %f_pas_TypeName(%S);\
	]
//#UC END# *494B733D0159for4947E2F10338*

// Выводит конролы формы в DFM
%f _ToDFM
//#UC START# *4ACB7806017Bfor4947E2F10338*
	<%C#f_ToDFM()>\
	<%G#f_ToDFM()>\
	<%R#f_ToDFM()>
//#UC END# *4ACB7806017Bfor4947E2F10338*

%f _pas_BeforeDFMControls
//#UC START# *4B5DDD5A02ACfor4947E2F10338*
//#UC END# *4B5DDD5A02ACfor4947E2F10338*

%f _pas_OutEntities
//#UC START# *4B5DE28502D6for4947E2F10338*
//#UC END# *4B5DE28502D6for4947E2F10338*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли примесью
%f _IsMixIn
//#UC START# *4947E5D40127for4947E2F10338*
@ %SU
	[{%Sa=abstract}{false}[{%Gx!=true}{[{%G#f_IsMixIn()=true}{false}true]}true]]
//#UC END# *4947E5D40127for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Является ли простым классом реализации
%f _IsSimpleClass
//#UC START# *4947E4DA0227for4947E2F10338*
	true
//#UC END# *4947E4DA0227for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
%f _NeedRegisterInScripts
// возвращаемый результат: boolean
//#UC START# *55278EA5036Afor4947E2F10338*
	true
//#UC END# *55278EA5036Afor4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
%f _pas_AfterClassEnd
//#UC START# *4B17BC05001Efor4947E2F10338*
	%S%[inherited]\
	[{%S%f_IsMixIn()!=true}\
	[{%Sa!=final}{\
	[{"%S{form name prefix}"!=""}\
	\n
	  T%f_cut_postfix(%f_N(%S),Form)Form = %f_pas_TypeName(%S);\
	]\
	}\
	%S%f_pas_OutHackRef()\
	]\
	]
//#UC END# *4B17BC05001Efor4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// нет документации
%f _pas_DefaultAncestor
//#UC START# *4948E5B60391for4947E2F10338*
	TvcmEntityForm
//#UC END# *4948E5B60391for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Добавляет файлы необходимые элементу с точки зрения метамодели
%f _pas_ImplUses
//#UC START# *4948EB2601FAfor4947E2F10338*
	%S%[inherited]
//#UC END# *4948EB2601FAfor4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит дополнительные модули необходимые элементу в интерфейсной секции
%f _pas_IntfUses
//#UC START# *4948F2EE0334for4947E2F10338*
	%S%[inherited]\
	[{%Sa=final}\
	<%g<{}{%C#f_IsControl()=true}%C#f_ToIntfUses()>>\
	<%r<{}{%C#f_IsControl()=true}%C#f_ToIntfUses()>>\
	]
//#UC END# *4948F2EE0334for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит код после секции implementation
%f _pas_OutAfterUnitImplementation
//#UC START# *498B059101B3for4947E2F10338*
	%S%[inherited]\
	[{%Sa=final}\n\{$R *.DFM\}\n]]
//#UC END# *498B059101B3for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит родительский класс
%f _pas_OutAncestor
//#UC START# *4989EB520196for4947E2F10338*
	%S%[inherited]
//	[{%Sa!=final}{[{}{%S%f_pas_DefaultAncestor()}%G#f_pas_HackRef()]}%S%[inherited]]
//#UC END# *4989EB520196for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит код перед поляпи класса. Для переопределения в потомках
%f _pas_OutBeforeFields
//#UC START# *498B054F03A1for4947E2F10338*
	%S%[inherited]\
	[{%Sa=final}\
	%S%f_pas_OutEntities()\
	<%g<{}{%C#f_IsControl()=true}%C#f_ToFields()>>\
	<%r<{}{%C#f_IsControl()=true}%C#f_ToFields()>>\
	]
//#UC END# *498B054F03A1for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит объявление класса
%f _pas_OutClassInterface
//#UC START# *494B7197025Afor4947E2F10338*
	%S%[inherited]
//#UC END# *494B7197025Afor4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит спец-метку класса
%f _pas_OutClassMark
//#UC START# *494B74D7016Bfor4947E2F10338*
	form
//#UC END# *494B74D7016Bfor4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит реализацию переопределённых методов
%f _pas_OutOverridesImpl
//#UC START# *494B86B5014Bfor4947E2F10338*
	%S%[inherited]
//#UC END# *494B86B5014Bfor4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит интерфейс переопределённых методов
%f _pas_OutOverridesIntf
//#UC START# *494B856502ECfor4947E2F10338*
	%S%[inherited]
//#UC END# *494B856502ECfor4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя типа
%f _pas_TypeName
//#UC START# *4947F8AD02A1for4947E2F10338*
	[{%S%f_IsMixIn()=true}{\
	T%S{form name prefix}%f_N(%S)\
	[{"%S{form name prefix}"=""}Form]}\
	%S%[inherited]\
	]
//#UC END# *4947F8AD02A1for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя модуля в котором содержится элемент
%f _pas_UnitName
//#UC START# *4948065C01DFfor4947E2F10338*
	[{%S%f_IsMixIn()=true}{%f_cut_postfix(%f_N(%S),Form)_Form}%S%[inherited]]
//#UC END# *4948065C01DFfor4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Путь к модулю
%f _pas_UnitPath
//#UC START# *4948C3290020for4947E2F10338*
	[{%P#f_IsVCMApplication()!=true&%PS!=VCMForms}/Forms]
//#UC END# *4948C3290020for4947E2F10338*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor4947E2F10338*
O [{%Sa=final}[{%S{finished}!=true|%S{finished dfm}!=true}NOT_FINISHED_]%S%f_pas_UnitName().dfm]
C %S%f_pas_UnitPath()
	[{"%SO"!=""}\
	object %f_cut_prefix(%S%f_pas_TypeName(),T): %S%f_pas_TypeName()
	  Left = 204
	  Top = 118
	  Width = 320
	  Height = 240\

	%S%f_pas_BeforeDFMControls()\

	%f_clear_list(FORM_CONTROLS)\
	%S%f_ToDFM()
	end\
	]
//#UC END# *49F5795900ECfor4947E2F10338*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

