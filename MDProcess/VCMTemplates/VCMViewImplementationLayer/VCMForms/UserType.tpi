////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMViewImplementationLayer/VCMForms/UserType.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMViewImplementationLayer::VCMForms::UserType
//
// Пользовательский тип формы
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: UserType::Class
? Пользовательский тип формы
> Constants::Class
> SimpleClass::Class
> ScriptKeyword::Class

= UserTypeIDHolder::Class
= CanCloseHolder::Class
= Delphi интерфейсы и реализация::MDAGenerator
= WikiImplClass::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
v +
/ - типы видимости
a f
/ - тип абстракции
Y code_vcm_usertype.gif
L code_vcm_usertype
// Параметры визуализации
$ C 152,251,152
$ l 0,147,0
$ f 0,147,0

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

p VisibleToUser:b=true ? Видим пользователю
p ImageIndex:s=-1 ? 
p SettingsCaption:s ? 
p Weight:s=-1 ? 
p NeedOnQueryMaximized:b=false ? Нужен ли обработчик OnQueryMaximized
p NeedOnQueryOpen:b=false ? Нужен ли обработчик OnQueryOpen
p NeedOnQueryClose:b=false ? Нужен ли обработчик OnQueryClose
p CanHaveToolbars:tribool=undefined ? 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD

%f _wiki_up_print
	%S%[Delphi интерфейсы и реализация::MDAGenerator]f_wiki_up_print()[{"%S{VisibleToUser}"!="%S{!VisibleToUser}"}%f_up_prefix(%S) *VisibleToUser* = *%S{VisibleToUser}* - Видим пользователю
	][{"%S{ImageIndex}"!="%S{!ImageIndex}"}%f_up_prefix(%S) *ImageIndex* = *%S{ImageIndex}*
	][{"%S{SettingsCaption}"!="%S{!SettingsCaption}"}%f_up_prefix(%S) *SettingsCaption* = *%S{SettingsCaption}*
	][{"%S{Weight}"!="%S{!Weight}"}%f_up_prefix(%S) *Weight* = *%S{Weight}*
	][{"%S{NeedOnQueryMaximized}"!="%S{!NeedOnQueryMaximized}"}%f_up_prefix(%S) *NeedOnQueryMaximized* = *%S{NeedOnQueryMaximized}* - Нужен ли обработчик OnQueryMaximized
	][{"%S{NeedOnQueryOpen}"!="%S{!NeedOnQueryOpen}"}%f_up_prefix(%S) *NeedOnQueryOpen* = *%S{NeedOnQueryOpen}* - Нужен ли обработчик OnQueryOpen
	][{"%S{NeedOnQueryClose}"!="%S{!NeedOnQueryClose}"}%f_up_prefix(%S) *NeedOnQueryClose* = *%S{NeedOnQueryClose}* - Нужен ли обработчик OnQueryClose
	][{"%S{CanClose}"!="%S{!CanClose}"}%f_up_prefix(%S) *CanClose* = *%S{CanClose}* - Можно ли закрывать формы данного типа
	][{"%S{CanHaveToolbars}"!="%S{!CanHaveToolbars}"}%f_up_prefix(%S) *CanHaveToolbars* = *%S{CanHaveToolbars}*
	]

// Является ли UserType'ом
%f _IsUserType
// возвращаемый результат: boolean
//#UC START# *4B0421B502D4for4B0402290215*
	true
//#UC END# *4B0421B502D4for4B0402290215*

%f _PutToMakeControls
//#UC START# *4B0423CE01F3for4B0402290215*
	\n with AddUsertype(%SNName,
	  str_%SNCaption,
	  [{"%S{SettingsCaption}"!=""}{str_%SNCaption}str_%SNSettingsCaption],
	  %S{VisibleToUser},
	  %S{ImageIndex},
	  %S{Weight},
	  [{}{''}<{}{%CN=UseToolbarOfUserTypeName}%C%TNName>],
	  [{%S{NeedOnQueryMaximized}=true}{nil}%f_to_borland(%SNQueryMaximized)],
	  [{%S{NeedOnQueryOpen}=true}{nil}%f_to_borland(%SNQueryOpen)],
	  [{%S{NeedOnQueryClose}=true}{nil}%f_to_borland(%SNQueryClose)],
	  \
	[{%S{CanClose}=undefined}{\
	[{%S{CanClose}=true}{\
	vcm_ccDisable\
	}\
	vcm_ccEnable\
	]\
	}\
	vcm_ccNone\
	]\
	) do
	 begin
	[{%S{CanHaveToolbars}=false}  CanHaveToolbars := false;\n]\
	 end;//with AddUsertype(%SNName
//#UC END# *4B0423CE01F3for4B0402290215*

%f _NeedPutToMakeControls
// возвращаемый результат: boolean
//#UC START# *4B0423E502D2for4B0402290215*
	true
//#UC END# *4B0423E502D2for4B0402290215*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа UserTypeIDHolder::Class
// Идентификатор пользовательского типа
%f _UserTypeID
// возвращаемый результат: long
//#UC START# *4BD70B950302for4B0402290215*
@ %SU
//	[{%Gx=true}{0}%f_evaluate(%G%f_UserTypeID()+1)]
	%f_N(%S)
//#UC END# *4BD70B950302for4B0402290215*

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4B0402290215*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for4B0402290215*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
%f _DoSpell
//#UC START# *4B2A19E3038Bfor4B0402290215*
	%S%[inherited]\
	%S%f_add_class(%SU_Constants,Constants,%SNConstants,Constants_Inst)\
	%{Constants_Inst}%f_set_documentation(Константы для типа формы %SN)\

	[{"%{TvcmUserType}N"=""}%f_find_element(TvcmUserType,TvcmUserType)]\
	%S%f_make_accessable(%{TvcmUserType}U)\

	%{Constants_Inst}%f_add_attribute(%SU_NAME_ID,,\
	%SNName = '%SN',\
	Attr_Inst)\
	%{Attr_Inst}%f_set_documentation(Строковый идентификатор пользовательского типа "%SD")\

	%{Constants_Inst}%f_add_attribute(%SU_ID,,\
	%SN : %{TvcmUserType}U = [{%Gx=true}{0}%GN],\
	Attr_Inst)\
	[{%Gx=true}\
	%{Attr_Inst}%f_set_up(suffix expr,+ 1)\
	]\
	%{Attr_Inst}%f_set_up(is define,true)\
	%{Attr_Inst}%f_set_up(no unit prefix,true)\
	%{Attr_Inst}%f_set_documentation(%SD)\

	%P%f_add_class(%SU_Local_Constants,LocalConst,%SNLocalConstants,LocalConstants_Inst)\
	%{LocalConstants_Inst}%f_set_visibility_type(PrivateAccess)\
	%{LocalConstants_Inst}%f_set_documentation(Локализуемые константы для типа формы %SN)\
	%{LocalConstants_Inst}%f_add_attribute(%SU_CAPTION_ID,,\
	%SNCaption = '%SD',\
	Attr_Inst)\
	%{Attr_Inst}%f_set_documentation(Заголовок пользовательского типа "%SD")
	[{"%S{SettingsCaption}"!=""}\
	%{LocalConstants_Inst}%f_add_attribute(%SU_SETTINGS_CAPTION_ID,,\
	%SNSettingsCaption = '%S{SettingsCaption}',\
	Attr_Inst)\
	%{Attr_Inst}%f_set_documentation(Заголовок пользовательского типа "%SD" для настройки панелей инструментов)\
	]\

	%S%f_add_class(%SU_Word,ScriptKeyword,Tkw_FormUserType_%f_N(%S),Word_Inst)\
	%{Word_Inst}%f_set_up(NotStripUnderline,true)\
	%{Word_Inst}%f_set_up(ifndef,NoScripts)\
	%{Word_Inst}%f_set_visibility_type(PrivateAccess)\
	[{"%{TtfwInteger}N"=""}%f_find_element(TtfwInteger,TtfwInteger)]\
	%{Word_Inst}%f_make_accessable(%{TtfwInteger}U)\
	%f_addG(%{Word_Inst},%{TtfwInteger})\
	%{Word_Inst}%f_set_documentation(Слово словаря для типа формы %SN\
//	----
//	*Пример использования*:
//	\{code\}
//	'aControl' форма::%f_str_replace(%f_N(%S), ,_) TryFocus ASSERT
//	\{code\}\
	)\
//	%{Word_Inst}%f_set_up(ifdef,InsiderTest)\

	[{"%{TtfwInteger.GetInteger}N"=""}%f_find_element(4EE1DC8903BB,TtfwInteger.GetInteger)]\
	%{Word_Inst}%f_add_override(4EE1DC8903BB)\
	%{TtfwInteger.GetInteger}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{TtfwInteger.GetInteger},%{Word_Inst})_var,\
	 {-}\
	)\
	%{TtfwInteger.GetInteger}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{TtfwInteger.GetInteger},%{Word_Inst})_impl,\
	 Result := %f_N(%S);\
	)

	%{Word_Inst}%f_set_up(NameForScript,тип_формы::%f_str_replace(%f_N(%S), ,_))\
	%{Word_Inst}%f_set_abstraction_type(final)\

//	%{Word_Inst}%f_add_operation(%{Word_Inst}U_Ini,ini,Ini (),Op_Instance)\
//	%{Op_Instance}%f_set_documentation(Регистрация %{Word_Inst}N)\
//	%{Op_Instance}%f_set_abstraction_type(final)\
//	%{Op_Instance}%f_set_visibility_type(PrivateAccess)\
//	%{Op_Instance}%f_set_uc_content(intf.pas,,\
//	 %{Word_Inst}N.Register('%f_loc_GetNameForScript(%{Word_Inst})');\
//	)\
	%{Word_Inst}%f_set_up(NeedsKeywordDoc,true)
//#UC END# *4B2A19E3038Bfor4B0402290215*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет, что элемент производит файл (Unit)
%f _IsUnitFileProducer
//#UC START# *4947EC0F0380for4B0402290215*
	true
//#UC END# *4947EC0F0380for4B0402290215*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя модуля в котором содержится элемент
%f _pas_UnitName
//#UC START# *4948065C01DFfor4B0402290215*
	%PN_%SN_UserType
//#UC END# *4948065C01DFfor4B0402290215*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor4B0402290215*
//#UC END# *49F5795900ECfor4B0402290215*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor4B0402290215*
	<{}{%CV!=PublicAccess&%CC=Class}%CX>\
	[{<{}{%CV!=PublicAccess&%CS!=ini&%CS!=fini&%CC=Operation}{+}%CX>!=0}\
	<{}{%CV!=PublicAccess&%CS!=ini&%CS!=fini&%CC=Operation}{+}\
	%f_pas_MethodSigImplementation(%C,%S) forward;>\
	]\
	<{}{%CV!=PublicAccess&%CS!=ini&%CS!=fini&%CC!=Class}%CX>\
	<{}{%CV=PublicAccess}%CX>\
//	<{}{%CS=ini}%CX>\
//	<{}{%CS=fini}%CX>
	
//#UC END# *470F15B800CBfor4B0402290215*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor4B0402290215*
O [{%S{finished}!=true}NOT_FINISHED_]%f_pas_UnitFileName(%S)
P
	[{"%SO"!=""}\
	%S%f_pas_OutLikeUtilityPack()\
	]
//#UC END# *470F1571031Cfor4B0402290215*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for4B0402290215*
//#UC END# *477398E501C0for4B0402290215*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for4B0402290215*
//#UC END# *4774D2A20372for4B0402290215*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for4B0402290215*
//#UC END# *55B8D28B0157for4B0402290215*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for4B0402290215*
//#UC END# *55B8D2F80145for4B0402290215*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for4B0402290215*
//#UC END# *55B8DD9C0301for4B0402290215*

// перекрытие базового стереотипа ModelBuilding::MDAGenerator
// генератор построения виртуальных элементов модели - запускается до генерации конкретных
// артефактов
+ spell
//#UC START# *4A41A13D03D5for4B0402290215*
	[{%S{NeedOnQueryMaximized}=true}\
	%P%f_add_operation(%SU_QueryMaximized,,%SNQueryMaximized (aSender : 4807745602C8),Op_Instance)\
	%{Op_Instance}%f_set_documentation(Обработчик события %SN.OnQueryMaximized)\
	[{%P#f_IsMixIn()!=true}{\
	%{Op_Instance}%f_set_abstraction_type(abstract)\
	}\
	%{Op_Instance}%f_set_abstraction_type(final)\
	]\
	%{Op_Instance}%f_set_visibility_type(ProtectedAccess)\
	]\
	[{%S{NeedOnQueryOpen}=true}\
	%P%f_add_operation(%SU_QueryOpen,,%SNQueryOpen (aSender : 4807745602C8),Op_Instance)\
	%{Op_Instance}%f_set_documentation(Обработчик события %SN.OnQueryOpen)\
	[{%P#f_IsMixIn()!=true}{\
	%{Op_Instance}%f_set_abstraction_type(abstract)\
	}\
	%{Op_Instance}%f_set_abstraction_type(final)\
	]\
	%{Op_Instance}%f_set_visibility_type(ProtectedAccess)\
	]\
	[{%S{NeedOnQueryClose}=true}\
	%P%f_add_operation(%SU_QueryClose,,%SNQueryClose (aSender : 4807745602C8),Op_Instance)\
	%{Op_Instance}%f_set_documentation(Обработчик события %SN.OnQueryClose)\
	[{%P#f_IsMixIn()!=true}{\
	%{Op_Instance}%f_set_abstraction_type(abstract)\
	}\
	%{Op_Instance}%f_set_abstraction_type(final)\
	]\
	%{Op_Instance}%f_set_visibility_type(ProtectedAccess)\
	]\
	%S%f_DoSpell()
//#UC END# *4A41A13D03D5for4B0402290215*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: UserType::Class::link::Attribute
= Документация::MDAGenerator
= Delphi интерфейсы и реализация::MDAGenerator

// Параметры стереотипа
v #
/ - типы видимости
a f
/ - тип абстракции
Y code_property.gif
L code_property
l l
/ - возможные типы связи атрибута

// Генераторы
// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor4B040B8B0071*
//#UC END# *470F1571031Cfor4B040B8B0071*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor4B040B8B0071*
//#UC END# *470F15B800CBfor4B040B8B0071*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for4B040B8B0071*
//#UC END# *477398E501C0for4B040B8B0071*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for4B040B8B0071*
//#UC END# *4774D2A20372for4B040B8B0071*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor4B040B8B0071*
//#UC END# *49F5795900ECfor4B040B8B0071*

// Ресурсы (.rc)
+ rc.pas
R  
//#UC START# *55B8D28B0157for4B040B8B0071*
//#UC END# *55B8D28B0157for4B040B8B0071*

// Скрипты в ресурсах (.rc.script)
+ rc.script.pas
R  
//#UC START# *55B8D2F80145for4B040B8B0071*
//#UC END# *55B8D2F80145for4B040B8B0071*

// Компилятор ресурса (.res.cmd)
+ res.cmd.pas
R  
//#UC START# *55B8DD9C0301for4B040B8B0071*
//#UC END# *55B8DD9C0301for4B040B8B0071*

// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for4B040B8B0071*
//#UC END# *46E6D4BB0339for4B040B8B0071*

// Функции стереотипа
%f _st_space_key
	SHD


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for4B040B8B0071*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for4B040B8B0071*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor4B040B8B0071*
	attr
//#UC END# *4705CBD6003Efor4B040B8B0071*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for4B040B8B0071*
//#UC END# *470484D50138for4B040B8B0071*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

