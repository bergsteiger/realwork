////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMViewInterfacesLayer/FormOperations/VCMFacet.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMViewInterfacesLayer::FormOperations::VCMFacet
//
// VCM "Facet"
// ---
// Набор операций, который надо заменить на Facet
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: VCMFacet::Class
? VCM "Facet"
? Набор операций, который надо заменить на Facet
= VCMOperations::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
// Параметры визуализации
$ C 64,171,236
$ l 48,5,192
$ f 48,5,192

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: VCMFacet::Class::InternalOperation::Operation
? Внутренняя операция
= VCMOperationPrim::Class

// Параметры стереотипа
T 
/ - может не иметь "цели" (типа/результата)

// Пользовательские свойства
p Needs Broadcast:b=false ? Нужен ли метод Broadcast
p is query:b=true ? Определает, что операция является запросом к агрегации о возможности сделать что-то

// Функции стереотипа
%f _st_space_key
	SHD

%f _wiki_up_print
	%S#[inherited][{"%S{is query}"!="%S{!is query}"}%f_up_prefix(%S) *is query* = *%S{is query}* - Определает, что операция является запросом к агрегации о возможности сделать что-то
	][{"%S{Needs Broadcast}"!="%S{!Needs Broadcast}"}%f_up_prefix(%S) *Needs Broadcast* = *%S{Needs Broadcast}* - Нужен ли метод Broadcast
	]


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Добавляет файлы необходимые элементу с точки зрения метамодели
%f _pas_ImplUses
//#UC START# *4948EB2601FAfor4A9801640116*
	%S%[inherited]\
	%f_pas_PutToUses("l3Base")\
	%f_pas_PutToUses("vcmBase")\
	%f_pas_PutToUses("StdRes")
//#UC END# *4948EB2601FAfor4A9801640116*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит дополнительные модули необходимые элементу в интерфейсной секции
%f _pas_IntfUses
//#UC START# *4948F2EE0334for4A9801640116*
	%S%[inherited]
//#UC END# *4948F2EE0334for4A9801640116*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит тело метода
// 
// Modification = get|set|area|areareaf|o|r|f
%f _pas_MethodBodyPrim
// параметры: Implementator: void = %1, Modification: void = %2, RealizeType: a-string = %3, aOverrider: MDAClass = %4
//#UC START# *494BB3A201A2for4A9801640116*
	[{%2N=callgate}{\
	%S%[inherited]f_pas_MethodBodyPrim(%1,%2)\
	}\
	\nbegin
	[{%Cx=true|%TN!=void} with (aParams.Data As I%f_N(%P)_%f_N(%S)_Params) do\n ]\
	 [{%TN!=void}ResultValue := ]%S%f_pas_MethodName("exec")[(<{, }%f_cut_prefix(%f_N(%C),a)>)];
	end;\
	]
//#UC END# *494BB3A201A2for4A9801640116*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// выводит реализацию метода
// 
// RealizeType = o|r|f
%f _pas_MethodImplementation
// параметры: Implementator: void = %1, RealizeType: void = %2, Modification: void = %3, aOverrider: MDAClass = %4
//#UC START# *494BEC7C03E5for4A9801640116*
	%S%[inherited]f_pas_MethodImplementation(%1,%2,%3)\
	[{%2N!=o}\
	%S%f_pas_DoMethodImplementation(%1,%2,"callgate")\
	]
//#UC END# *494BEC7C03E5for4A9801640116*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// выводит интерфейс метода
// 
// RealizeType = o|r|f
%f _pas_MethodInterface
// параметры: Implementator: void = %1, RealizeType: void = %2, Modification: void = %3, aOverrider: MDAClass = %4
//#UC START# *494BEC6A038Afor4A9801640116*
	%S%[inherited]f_pas_MethodInterface(%1,%2,%3)\
	[{%2N!=o}\
	\n%S%f_pas_DoMethodInterface(%1,%2,"callgate")\
	]
//#UC END# *494BEC6A038Afor4A9801640116*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит имя метода
%f _pas_MethodName
// параметры: Modification: a-string = %1
//#UC START# *494BD6C80075for4A9801640116*
	%S%[inherited]f_pas_MethodName(%1)
//#UC END# *494BD6C80075for4A9801640116*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Параметры операции
%f _pas_Params
// параметры: Modification: void = %1
//#UC START# *494BDCF3030Efor4A9801640116*
	[{%1N=callgate}{\
	[{%1N=exec}{\
	%S%[inherited]f_pas_Params(%1)\
	}\
	%S%[inherited]f_pas_Params("")\
	]\
	}\
	const aParams: IvcmExecuteParams\
	]
//#UC END# *494BDCF3030Efor4A9801640116*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Имя типа результата функции
%f _pas_ResultTypeName
// параметры: Modification: void = %1
//#UC START# *494BDD190361for4A9801640116*
	[{%1N=exec}{\
	%S%[inherited]f_pas_ResultTypeName(%1)\
	}\
	%S%[inherited]f_pas_ResultTypeName("")\
	]
//#UC END# *494BDD190361for4A9801640116*

// перекрытие базового стереотипа VCMOperationPrim::Class
%f _IsInternalVCMOperation
// возвращаемый результат: boolean
//#UC START# *4A96B425021Afor4A9801640116*
	true
//#UC END# *4A96B425021Afor4A9801640116*

// перекрытие базового стереотипа VCMOperationPrim::Class
// Нужен ли код операции
%f _NeedsOpCode
// возвращаемый результат: boolean
//#UC START# *4C80E64501B5for4A9801640116*
	true
//#UC END# *4C80E64501B5for4A9801640116*

// Вложенные стереотипы
: VCMFacet::Class::InternalOperation::Operation::Parameter
= Ifdef::MDAGenerator
= Delphi интерфейсы и реализация::MDAGenerator

// Параметры стереотипа
Y code_param.gif
L code_param

// Функции стереотипа
%f _st_space_key
	SHD

%f _wiki_up_print
	%S%[Delphi интерфейсы и реализация::MDAGenerator]f_wiki_up_print()




////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

