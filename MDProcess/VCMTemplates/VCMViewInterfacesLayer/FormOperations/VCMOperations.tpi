////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMViewInterfacesLayer/FormOperations/VCMOperations.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMViewInterfacesLayer::FormOperations::VCMOperations
//
// Набор операций
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: VCMOperations::Class
? Набор операций
> VCMOperation::Class

= WikiImplClass::Class
= Delphi интерфейсы и реализация::MDAGenerator
= OperationsPublisher::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
Y code_vcm_operations.gif
L code_vcm_operations
// Параметры визуализации
$ C 192,255,255
$ l 0,128,255
$ f 0,128,255

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD

// нет документации
%f _IsVCMOperations
//#UC START# *494FCCEC019Ffor494F808C01DB*
	true
//#UC END# *494FCCEC019Ffor494F808C01DB*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа OperationsPublisher::Class
%f _OperationsToFuncImpl
// параметры: aCaller: MDAClass = %1
//#UC START# *4A8E9F9502BBfor494F808C01DB*
	<%C#f_OperationsToFuncImpl(%1)>\
	<%G#f_OperationsToFuncImpl(%1)>
//#UC END# *4A8E9F9502BBfor494F808C01DB*

// реализация абстрактного стереотипа OperationsPublisher::Class
// Операции в функции
%f _OperationsToFuncIntf
// параметры: aCaller: MDAClass = %1
//#UC START# *4A8E9D5E0038for494F808C01DB*
	<%C#f_OperationsToFuncIntf(%1)>\
	<%G#f_OperationsToFuncIntf(%1)>
//#UC END# *4A8E9D5E0038for494F808C01DB*

// реализация абстрактного стереотипа OperationsPublisher::Class
// Определяет необходимые uses для операций
%f _OperationsToUses
//#UC START# *4A82DDA6016Afor494F808C01DB*
	<%C#f_OperationsToUses()>\
	<%G#f_OperationsToUses()>
//#UC END# *4A82DDA6016Afor494F808C01DB*

// реализация абстрактного стереотипа OperationsPublisher::Class
// Операции в секцию Var
%f _OperationsToVar
//#UC START# *4A8E9D3A01FEfor494F808C01DB*
	<%C#f_OperationsToVar()>\
	<%G#f_OperationsToVar()>
//#UC END# *4A8E9D3A01FEfor494F808C01DB*

// реализация абстрактного стереотипа OperationsPublisher::Class
// Публикует операции
%f _PublishOperations
//#UC START# *4A770F770199for494F808C01DB*
	<%C#f_PublishOperations()>\
	<%G#f_PublishOperations()>
//#UC END# *4A770F770199for494F808C01DB*

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for494F808C01DB*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for494F808C01DB*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет, что элемент может реализовываться классом
%f _ClassImplementable
//#UC START# *49551CA202CFfor494F808C01DB*
	false
//#UC END# *49551CA202CFfor494F808C01DB*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor494F808C01DB*
//#UC END# *470F15B800CBfor494F808C01DB*

// реализация абстрактного стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor494F808C01DB*
R  
F %f_pas_OutInterfaceForward(%S)
	[\{$IfDef %S{ifdef}\}\n]\
	[<{}{%CC=Class&%C#f_IsVCMOperation()!=true}%CX>\n]
//	%f_pas_OpenType(%S)\
	[{%t_impl_class(%P)=true|%P#f_IsInterface()=true}[{<{}{%CC=Attribute&%C%TU=%PU}{C}>!=0}{\
	[{<{}{%CC=Operation&%C%TU=%PU}{C}>!=0}{\
	[{<{}{%CC=Operation&%C<{}{%C%TU=%1%PU}{C}>!=0}{C}>!=0}%PF]\
	}%PF]\
	}\
	%PF]]\
	<{}{%CS=impurity value}%f_set_var(%CN,"%f_pas_TypeName(%C%T)")>\
	(* %f_pas_TypeName(%S) = operations[(%f_pas_InterfaceAncestor(%S)[\{, <{, }{%R#f_IsPureMixIn()!=true}%f_pas_TypeName(%R)>\}])]\
	[\n  \{* %SD \}]
	   \['{%SG}'\]
	%f_pas_OutFacetBody(%S)\
	<{}{%R#f_IsPureMixIn()=true}[  // %RN\n\
	%f_pas_OutFacetBody(%R)]\
	%R<{}{%g#f_IsPureMixIn()=true}[  // %gN\n\
	%f_pas_OutFacetBody(%g)]>\
	>\
	 end;//%f_pas_TypeName(%S)*)\
	[\n\{$EndIf %S{ifdef}\}\n]\
	<{}{%CS=impurity value}%f_set_var(%CN,"")>
//#UC END# *470F1571031Cfor494F808C01DB*

// перекрытие базового стереотипа ModelBuilding::MDAGenerator
// генератор построения виртуальных элементов модели - запускается до генерации конкретных
// артефактов
+ spell
//#UC START# *4A41A13D03D5for494F808C01DB*
	<%CX>
//#UC END# *4A41A13D03D5for494F808C01DB*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: VCMOperations::Class::Operation
? Операция
= VCMOperationBase::Class

// Параметры стереотипа
T 
/ - может не иметь "цели" (типа/результата)

// Функции стереотипа
%f _st_space_key
	SHD



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

