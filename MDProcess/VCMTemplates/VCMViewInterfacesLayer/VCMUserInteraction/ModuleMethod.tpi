////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMViewInterfacesLayer/VCMUserInteraction/ModuleMethod.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMViewInterfacesLayer::VCMUserInteraction::ModuleMethod
//
// Метод модуля
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: ModuleMethod::Class
? Метод модуля
= method::Class
= ModuleOperationPrim::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Основная ветка наследования
! ModuleOperationPrim::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD

%f _wiki_up_print
	%S%[ModuleOperationPrim::Class]f_wiki_up_print()[{"%S{is static}"!="%S{!is static}"}%f_up_prefix(%S) *is static* = *%S{is static}* - Определяет, что метод принадлежит мета-классу
	][{"%S{force overload}"!="%S{!force overload}"}%f_up_prefix(%S) *force overload* = *%S{force overload}* - Определяет, что метод перегружен
	]


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
%f _DoSpell
//#UC START# *4B2A19E3038Bfor4A9D2BC80274*
	%S%[method::Class]
//#UC END# *4B2A19E3038Bfor4A9D2BC80274*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Определяет, что элемент является "внутренностью" класса, атрибутом или операцией
%f _IsClassInner
//#UC START# *49CB3EE70382for4A9D2BC80274*
	true
//#UC END# *49CB3EE70382for4A9D2BC80274*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
%f _IsMethod
// возвращаемый результат: boolean
//#UC START# *4B2A29440092for4A9D2BC80274*
	true
//#UC END# *4B2A29440092for4A9D2BC80274*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
%f _pas_CallingConventionsDirective
// возвращаемый результат: a-string
//#UC START# *4CBD7CFE025Bfor4A9D2BC80274*
	%S%[method::Class]
//#UC END# *4CBD7CFE025Bfor4A9D2BC80274*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит секцию определений метода
%f _pas_MethodDeclarations
//#UC START# *49CB54AA033Afor4A9D2BC80274*
	%S%[method::Class]
//#UC END# *49CB54AA033Afor4A9D2BC80274*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// выводит реализацию метода
// 
// RealizeType = o|r|f
%f _pas_MethodImplementation
// параметры: Implementator: void = %1, RealizeType: void = %2, Modification: void = %3, aOverrider: MDAClass = %4
//#UC START# *494BEC7C03E5for4A9D2BC80274*
	%S%[ModuleOperationPrim::Class]f_pas_MethodImplementation(%1,%2,%3)
//#UC END# *494BEC7C03E5for4A9D2BC80274*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// выводит интерфейс метода
// 
// RealizeType = o|r|f
%f _pas_MethodInterface
// параметры: Implementator: void = %1, RealizeType: void = %2, Modification: void = %3, aOverrider: MDAClass = %4
//#UC START# *494BEC6A038Afor4A9D2BC80274*
	%S%[ModuleOperationPrim::Class]f_pas_MethodInterface(%1,%2,%3)
//#UC END# *494BEC6A038Afor4A9D2BC80274*

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Выводит имя владельца метода
%f _pas_MethodOwnerName
//#UC START# *49CB3C99034Bfor4A9D2BC80274*
	%S%[method::Class]
//#UC END# *49CB3C99034Bfor4A9D2BC80274*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

