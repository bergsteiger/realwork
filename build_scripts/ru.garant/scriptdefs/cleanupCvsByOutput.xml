<?xml encoding = "ISO-8859-1"?>

<!--
	uses:
		none
-->

<scriptdef
	name = "ru.garant.extensions.scriptdefs.cleanupCvsByOutput"
	language = "javascript"
>
	<attribute name = "cvs.dir"/>
	<attribute name = "cvs.output.file"/>

	<![CDATA[
		{
			importClass (
				Packages.java.io.BufferedReader
			);

			importClass (
				Packages.java.io.File
			);

			importClass (
				Packages.java.io.FileReader
			);

			importPackage (
				Packages.org.apache.tools.ant
			);

			importPackage (
				Packages.org.apache.tools.ant.types
			);
		} {
			var a_cvsDirectory = (
				attributes.get ("cvs.dir")
			);

			if (a_cvsDirectory != null) {
				var l_cvsDirectoryFile = new File (a_cvsDirectory);
				var l_cvsDirectoryPath = l_cvsDirectoryFile.getPath ();

				a_cvsDirectory = l_cvsDirectoryPath;
			}

			var a_cvsOutputFile = (
				attributes.get ("cvs.output.file")
			);

			if (a_cvsOutputFile != null) {
				var l_cvsOutputFileFile = new File (a_cvsOutputFile);
				var l_cvsOutputFilePath = l_cvsOutputFileFile.getPath ();

				a_cvsOutputFile = l_cvsOutputFilePath;
			}

			var l_cvsOutputReader = new BufferedReader (new FileReader (new File (a_cvsOutputFile))); {
				var l_cvsLine = null;

				while (
					(l_cvsLine = l_cvsOutputReader.readLine ()) != null
				) {
					var l_cvsLineStrings = l_cvsLine.split (" ", 2);

					if ((l_cvsLineStrings.length == 2) && ((l_cvsLineStrings [0] == "?") || (l_cvsLineStrings [0] == "C") || (l_cvsLineStrings [0] == "M"))) {
						var l_deleteTask = project.createTask ("delete"); {
							var l_unknown = new File (a_cvsDirectory, l_cvsLineStrings [1]);

							if (l_unknown.isFile ()) {
								l_deleteTask.setFile (l_unknown);
							} else {
								if (l_unknown.isDirectory ()) {
									l_deleteTask.setDir (l_unknown);
								} else {
									var l_failTask = project.createTask ("fail"); {
										l_failTask.setMessage ("Unknown dir/file type for `"+ l_unknown.getPath ()+ "` path");

										l_failTask.reconfigure ();
									}

									l_failTask.execute ();
								}
							}

							l_deleteTask.reconfigure ();
						}

						l_deleteTask.execute ();
					} else {
						if ((l_cvsLineStrings.length == 2) && ((l_cvsLineStrings [0] == "P") || (l_cvsLineStrings [0] == "T") || (l_cvsLineStrings [0] == "U"))) {
							project.log (
								(
									"\t\t"
									+ l_cvsLine
								)
								, project.MSG_INFO
							);
						} else {
							project.log (
								(
									"\t"
									+ "Cannot split cvs line: `"+ l_cvsLine+ "`"
								)
								, project.MSG_INFO
							);
						}
					}
				}
			}

			l_cvsOutputReader.close ();
		}
	]]>
</scriptdef>
