<?xml version = "1.0" encoding = "ISO-8859-1"?>

<!DOCTYPE ru.garant.extensions SYSTEM "../../ru.garant/extensions.dtd">

<project
	name = "scriptset.garantF1"
	basedir = "."
	default = "default"
>

	<!--
		apache `ant` script [http://ant.apache.org]

		required third party jars {
			bsf.jar:               [http://jakarta.apache.org/bsf]
			commons-logging-*.jar: [http://jakarta.apache.org/commons/logging]

			js.jar:                [http://www.mozilla.org/rhino]
		}
	-->

<!-- external uses { -->
	<!-- properties { -->
		&ru.garant.extensions.properties.cppBuildMaxCyclesCount;

		&ru.garant.extensions.properties.cvsRoot;
		&ru.garant.extensions.properties.cvsUpdateMaxCyclesCount;

		&ru.garant.extensions.properties.externalMountPath;
		&ru.garant.extensions.properties.externalMountRoot;

		&ru.garant.extensions.properties.signDescription;
		&ru.garant.extensions.properties.signDescriptionURL;
		&ru.garant.extensions.properties.signSHA1;
		&ru.garant.extensions.properties.signTargetMaxCyclesCount;
		&ru.garant.extensions.properties.signTimestampServer;

		&ru.garant.extensions.properties.svnRoot;
		&ru.garant.extensions.properties.svnUpdateMaxCyclesCount;

		&ru.garant.extensions.properties.wixLibRoot;

		&ru.garant.extensions.properties.workRootDir;
	<!-- } properties -->

	<!-- scriptdefs { -->
		&ru.garant.extensions.scriptdefs.buildCppTarget;
		&ru.garant.extensions.scriptdefs.buildPasTarget;

		&ru.garant.extensions.scriptdefs.buildWixTarget;

		&ru.garant.extensions.scriptdefs.cleanupAllFiles;

		&ru.garant.extensions.scriptdefs.cleanupCppBuilds;
		&ru.garant.extensions.scriptdefs.cleanupPasBuilds;

		&ru.garant.extensions.scriptdefs.cleanupCvsByOutput;

		&ru.garant.extensions.scriptdefs.cleanupSvnByPath;

		&ru.garant.extensions.scriptdefs.copyDirToDir;

		&ru.garant.extensions.scriptdefs.copyFile;
		&ru.garant.extensions.scriptdefs.copyFileToDir;

		&ru.garant.extensions.scriptdefs.copyCppTarget;

		&ru.garant.extensions.scriptdefs.createFile;
		&ru.garant.extensions.scriptdefs.removeFile;

		&ru.garant.extensions.scriptdefs.replaceStringInFile;

		&ru.garant.extensions.scriptdefs.manifestTarget;

		&ru.garant.extensions.scriptdefs.mountResource;
		&ru.garant.extensions.scriptdefs.unmountResource;

		&ru.garant.extensions.scriptdefs.setCvsTagByList;
		&ru.garant.extensions.scriptdefs.updateCvsByList;

		&ru.garant.extensions.scriptdefs.setSvnTagByList;
		&ru.garant.extensions.scriptdefs.updateSvnByList;

		&ru.garant.extensions.scriptdefs.signTarget;
	<!-- } scriptdefs -->
<!-- } external uses -->

<!-- properties { -->
	<property
		name = "properties.buildOutputMountPath"
		value = "\\10.14.3.205\garant-nemesis"
	/>

	<property
		name = "properties.buildOutputMountRoot"
		value = "N:"
	/>

	<property
		name = "properties.buildOutputMountRoot.deploymentCatalog"
		value = "${properties.buildOutputMountRoot}/deployment"
	/>

	<property
		name = "properties.buildRoot"
		value = "${ru.garant.extensions.properties.workRootDir}/build"
	/>

	<property
		name = "properties.buildSuccessName"
		value = "!success"
	/>

	<property
		name = "properties.buildSuccessFile"
		value = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/${properties.buildSuccessName}"
	/>

	<property
		name = "properties.cppTargetDefaultConfig32"
		value = "Release|Win32"
	/>

	<property
		name = "properties.cppTargetDefaultConfig64"
		value = "Release|x64"
	/>

	<property
		name = "properties.cppTargetDefaultFolder"
		value = "bin/Release_Static"
	/>

	<property
		name = "properties.cppTargetReleaseConfig32"
		value = "Final|Win32"
	/>

	<property
		name = "properties.cppTargetReleaseConfig64"
		value = "Final|x64"
	/>

	<property
		name = "properties.cppTargetReleaseFolder"
		value = "bin/Final_Static"
	/>

	<property
		name = "properties.cppTargetRootDir"
		value = "${ru.garant.extensions.properties.workRootDir}"
	/>

	<property
		name = "properties.cvsDirsetListForTagging"
		value = "build_scripts,common,garant6x,garantPIL,garantServer,garsock,quality,shared"
	/>

	<property
		name = "properties.cvsDirsetListForUpdate"
		value = "common,garant6x,garantPIL,garantServer,garsock,quality,shared"
	/>

	<property
		name = "properties.cvsRootDir"
		value = "${ru.garant.extensions.properties.workRootDir}"
	/>

	<property
		name = "properties.cvsTagName"
		value = "!cvs_tag"
	/>

	<property
		name = "properties.cvsTagFile"
		value = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/${properties.cvsTagName}"
	/>

	<property
		name = "properties.externalMountPath"
		value = "${ru.garant.extensions.properties.externalMountPath}"
	/>

	<property
		name = "properties.externalMountPathRevision"
		value = "msvc090only-current"
	/>

	<property
		name = "properties.externalMountPath.win64"
		value = "${properties.externalMountPath}/${properties.externalMountPathRevision}/win64"
	/>

	<property
		name = "properties.externalMountPath.winNT-garsock"
		value = "${properties.externalMountPath}/${properties.externalMountPathRevision}/winNT+stlport"
	/>

	<property
		name = "properties.externalMountPath.winNT+garsock"
		value = "${properties.externalMountPath}/${properties.externalMountPathRevision}/winNT+stlport+garsock"
	/>

	<property
		name = "properties.externalMountPath.winXX-shared"
		value = "${properties.externalMountPath}/${properties.externalMountPathRevision}/winXX-shared"
	/>

	<property
		name = "properties.externalMountRoot"
		value = "${ru.garant.extensions.properties.externalMountRoot}"
	/>

	<property
		name = "properties.flashRevision"
		value = "9d"
	/>

	<property
		name = "properties.guRevision"
		value = "711"
	/>

	<property
		name = "properties.buildOutputMountRoot.currentCatalog"
		value = "${properties.buildOutputMountRoot}/.current"
	/>

	<property
		name = "properties.buildOutputMountRoot.supportCatalog"
		value = "${properties.buildOutputMountRoot}/.support"
	/>

	<property
		name = "properties.pasTargetConfigsPath"
		value = "${basedir}/delphi.configs-${properties.delphi.suffix}"
	/>

	<property
		name = "properties.pasTargetRootDir"
		value = "${ru.garant.extensions.properties.workRootDir}"
	/>

	<property
		name = "properties.wixTargetRootDir"
		value = "${ru.garant.extensions.properties.workRootDir}"
	/>
<!-- } properties -->

<!-- conditions { -->
	<condition property = "disable-buildCppTargets.win64">
		<isset property = "disable-buildCppTargets"/>
	</condition>

	<condition property = "disable-buildCppTargets.winNT">
		<isset property = "disable-buildCppTargets"/>
	</condition>

	<condition property = "disable-buildCppTargets.winNT-garsock">
		<isset property = "disable-buildCppTargets.winNT"/>
	</condition>

	<condition property = "disable-buildCppTargets.winNT+garsock">
		<isset property = "disable-buildCppTargets.winNT"/>
	</condition>

	<condition property = "disable-buildPasTargets.winXX-console">
		<isset property = "disable-buildPasTargets"/>
	</condition>

	<condition property = "disable-buildPasTargets.winXX+console">
		<isset property = "disable-buildPasTargets"/>
	</condition>

	<condition property = "disable-copyCppHelpFilesToDeploymentCatalog">
		<isset property = "disable-buildCppTargets"/>
	</condition>

	<condition property = "disable-copyCppI18nFilesToDeploymentCatalog">
		<isset property = "disable-buildCppTargets"/>
	</condition>

	<condition property = "disable-copyCppOtherFilesToDeploymentCatalog">
		<isset property = "disable-buildCppTargets"/>
	</condition>

	<condition property = "disable-copyCppTargetsToCurrentCatalog">
		<isset property = "disable-buildCppTargets"/>
	</condition>

	<condition property = "disable-copyCppTargetsToSupportCatalog">
		<isset property = "disable-buildCppTargets"/>
	</condition>

	<condition property = "disable-copyCppTargetsToDeploymentCatalog.win64">
		<isset property = "disable-buildCppTargets.win64"/>
	</condition>

	<condition property = "disable-copyCppTargetsToDeploymentCatalog.winNT-garsock">
		<isset property = "disable-buildCppTargets.winNT-garsock"/>
	</condition>

	<condition property = "disable-copyCppTargetsToDeploymentCatalog.winNT+garsock">
		<isset property = "disable-buildCppTargets.winNT+garsock"/>
	</condition>

	<condition property = "disable-copyPasHelpFilesToDeploymentCatalog">
		<isset property = "disable-buildPasTargets"/>
	</condition>

	<condition property = "disable-copyPasI18nFilesToDeploymentCatalog">
		<isset property = "disable-buildPasTargets"/>
	</condition>

	<condition property = "disable-copyPasOtherFilesToDeploymentCatalog">
		<isset property = "disable-buildPasTargets"/>
	</condition>

	<condition property = "disable-copyPasTargetsToCurrentCatalog">
		<isset property = "disable-buildPasTargets"/>
	</condition>

	<condition property = "disable-copyPasTargetsToSupportCatalog">
		<isset property = "disable-buildPasTargets"/>
	</condition>

	<condition property = "disable-copyPasTargetsToDeploymentCatalog.winXX-console">
		<isset property = "disable-buildPasTargets.winXX-console"/>
	</condition>

	<condition property = "disable-copyPasTargetsToDeploymentCatalog.winXX+console">
		<isset property = "disable-buildPasTargets.winXX+console"/>
	</condition>

	<condition property = "disable-copyWixTargetsToDeploymentCatalog">
		<isset property = "disable-buildWixTargets"/>
	</condition>

	<condition property = "disable-copyWixTargets">
		<isset property = "disable-buildWixTargets"/>
	</condition>

	<condition property = "disable-updatePasTargetsBuildVersion">
		<isset property = "disable-buildPasTargets"/>
	</condition>
<!-- } conditions -->

<!-- targets { -->
	<target
		name = "buildCppTargets"
		depends = "copyCppTargetsToDeploymentCatalog.win64,buildCppTargets.winNT,copyCppHelpFilesToDeploymentCatalog,copyCppI18nFilesToDeploymentCatalog,copyCppOtherFilesToDeploymentCatalog"
		unless = "disable-buildCppTargets"
	>

<!--
		// do nothing
-->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildCppTargets -->

	<target
		name = "buildCppTargets.win64"
		depends = "updateCvs"
		unless = "disable-buildCppTargets.win64"
	>
		<ru.garant.extensions.scriptdefs.cleanupCppBuilds
		/>

		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.externalMountRoot}"
			mount.path = "${properties.externalMountPath.win64}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_ActiveDirectoryIntegration"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig64}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig64}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_CSAdapter"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig64}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig64}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_garantServer"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig64}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig64}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GLDll"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig64}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig64}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GUDll"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig64}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig64}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GUDll7tr"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig64}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig64}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_WithoutActiveDirectoryIntegration"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig64}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig64}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_XMLSave"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig64}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig64}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.externalMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildCppTargets.win64 -->

	<target
		name = "buildCppTargets.winNT"
		depends = "copyCppTargetsToDeploymentCatalog.winNT-garsock,copyCppTargetsToDeploymentCatalog.winNT+garsock"
		unless = "disable-buildCppTargets.winNT"
	>

<!--
		// do nothing
-->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildCppTargets.winNT -->

	<target
		name = "buildCppTargets.winNT-garsock"
		depends = "updateCvs"
		unless = "disable-buildCppTargets.winNT-garsock"
	>
		<ru.garant.extensions.scriptdefs.cleanupCppBuilds
		/>

		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.externalMountRoot}"
			mount.path = "${properties.externalMountPath.winNT-garsock}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "garsock_redirector"
			cpp.target.project.path = "garsock/garsock.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_ActiveDirectoryIntegration"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Breeder_corba_client"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Breeder_res_eng"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_BaseUpdate"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_ConsultingChecker"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_CreateAdmDB"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_CSAdapter"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Downloader_corba_client"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Downloader_res_eng"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GblAdapterClient"
			cpp.target.project.path = "garant6x/implementation/Garant/project/garant6x.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_ConsultingServer"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_ExternalSearchManager"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_garantServer"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_SearchMachine"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GLDll"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GUDll"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GUDll7tr"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_HCAdapter"
			cpp.target.project.path = "garant6x/implementation/Garant/project/garant6x.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_PilotLicence_corba"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_RenderEVD"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_ServerManager"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_ServerStopper"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_SetLicence"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Updater_corba_client"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Updater_res_eng"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_UsersImport"
			cpp.target.project.path = "garant6x/implementation/Garant/project/garant6x.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_WithoutActiveDirectoryIntegration"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_XMLIniConverter"
			cpp.target.project.path = "garant6x/implementation/Garant/project/garant6x.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.externalMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildCppTargets.winNT-garsock -->

	<target
		name = "buildCppTargets.winNT+garsock"
		depends = "updateCvs"
		unless = "disable-buildCppTargets.winNT+garsock"
	>
		<ru.garant.extensions.scriptdefs.cleanupCppBuilds
		/>

		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.externalMountRoot}"
			mount.path = "${properties.externalMountPath.winNT+garsock}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "garsock"
			cpp.target.project.path = "garsock/garsock.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Breeder_corba_client"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Breeder_res_eng"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_CSAdapter"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Downloader_corba_client"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Downloader_res_eng"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GblAdapterServer"
			cpp.target.project.path = "garant6x/implementation/Garant/project/garant6x.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GLDll"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GUDll"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_GUDll7tr"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Updater_corba_client"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_Updater_res_eng"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_UpdaterStart_corba_client"
			cpp.target.project.path = "garantPIL/implementation/Projects/garant_main.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>

		<ru.garant.extensions.scriptdefs.buildCppTarget
			cpp.target = "T_XMLSave"
			cpp.target.project.path = "garantServer/projects/garantServer.sln"

			cpp.target.default.config = "${properties.cppTargetDefaultConfig32}"
			cpp.target.release.config = "${properties.cppTargetReleaseConfig32}"

			cpp.target.root.dir = "${properties.cppTargetRootDir}"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.externalMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildCppTargets.winNT+garsock -->

	<target
		name = "buildPasTargets"
		depends = "copyPasTargetsToDeploymentCatalog.winXX-console,copyPasTargetsToDeploymentCatalog.winXX+console,copyPasHelpFilesToDeploymentCatalog,copyPasI18nFilesToDeploymentCatalog,copyPasOtherFilesToDeploymentCatalog"
		unless = "disable-buildPasTargets"
	>

<!--
		// do nothing
-->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildPasTargets -->

	<target
		name = "buildPasTargets.winXX-console"
		depends = "updatePasTargetsBuildVersion"
		unless = "disable-buildPasTargets.winXX-console"
	>
		<ru.garant.extensions.scriptdefs.cleanupPasBuilds
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "admin.dpr"
			pas.target.compile.name = "GbaAdmin.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/_cfg/GbaAdmin.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "datasetup.dpr"
			pas.target.compile.name = "datasetup.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/_cfg/datasetup.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "dataupd.dpr"
			pas.target.compile.name = "dataupd.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/_cfg/dataupd.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "download.dpr"
			pas.target.compile.name = "download.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/_cfg/download.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "EasyUpdate.dpr"
			pas.target.compile.name = "F1EasyUpdate.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/EasyUpdate/_cfg/F1EasyUpdate.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/EasyUpdate"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "F1CacheHelper.dpr"
			pas.target.compile.name = "F1CacheHelper.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/_cfg/F1CacheHelper.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "F1ConsultingChecker.dpr"
			pas.target.compile.name = "F1ConsultingChecker.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/_cfg/F1ConsultingChecker.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "F1Prime.dpr"
			pas.target.compile.name = "F1Prime.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/_cfg/F1Prime.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "F1Setup.dpr"
			pas.target.compile.name = "F1Setup.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/deployment/support/_cfg/F1Setup.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/deployment/support"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "F1ShellDriver.dpr"
			pas.target.compile.name = "F1ShellDriver.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/integration/implementation/_cfg/F1ShellDriver.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/integration/implementation"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "F1SplashScreen.dpr"
			pas.target.compile.name = "F1SplashScreen.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/_cfg/F1SplashScreen.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/Splash"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "garant.dpr"
			pas.target.compile.name = "garant.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/_cfg/garant.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "garant_miv.dpr"
			pas.target.compile.name = "garant_miv.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/miv_launcher/_cfg/garant_miv.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/miv_launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "gclean.dpr"
			pas.target.compile.name = "gclean.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/_cfg/gclean.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "monitoring.dpr"
			pas.target.compile.name = "GbaMonitoring.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/_cfg/GbaMonitoring.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "nemesis.dpr"
			pas.target.compile.name = "GbaNemesis.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/_cfg/GbaNemesis.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "RenderEVD.dpr"
			pas.target.compile.name = "RenderEVD.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/common/components/RenderEVD/_cfg/RenderEVD.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/common/components/RenderEVD"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "SendMail.dpr"
			pas.target.compile.name = "F1SendMail.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/EasyUpdate/support/_cfg/F1SendMail.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/EasyUpdate/support"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "Sleep.dpr"
			pas.target.compile.name = "F1Sleep.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/EasyUpdate/support/_cfg/F1Sleep.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/EasyUpdate/support"
		/>
<!-- -->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildPasTargets.winXX-console -->

	<target
		name = "buildPasTargets.winXX+console"
		depends = "updatePasTargetsBuildVersion"
		unless = "disable-buildPasTargets.winXX+console"
	>
		<ru.garant.extensions.scriptdefs.cleanupPasBuilds
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "admin.dpr"
			pas.target.compile.name = "GbaAdmin+console.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/_cfg/GbaAdmin+console.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "monitoring.dpr"
			pas.target.compile.name = "GbaMonitoring+console.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/_cfg/GbaMonitoring+console.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis"
		/>

		<ru.garant.extensions.scriptdefs.buildPasTarget
			pas.target.project.name = "nemesis.dpr"
			pas.target.compile.name = "GbaNemesis+console.dpr"

			pas.target.config.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/_cfg/GbaNemesis+console.cfg"

			pas.target.root.dir = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis"
		/>
<!-- -->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildPasTargets.winXX+console -->

	<target
		name = "buildWixTargets"
		depends = "signCppTargets,signPasTargets,updateHotFixes,createVersionInfo"
		unless = "disable-buildWixTargets"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.externalMountRoot}"
			mount.path = "${properties.externalMountPath.winXX-shared}"
		/>

		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1252"
			wix.target.language = "en-us"
			wix.target.project.name = "F1ClientSetupRus"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1251"
			wix.target.language = "ru-ru"
			wix.target.project.name = "F1ClientSetupRus"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1252"
			wix.target.language = "en-us"
			wix.target.project.name = "F1ClientSetupEng"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1251"
			wix.target.language = "ru-ru"
			wix.target.project.name = "F1ClientSetupEng"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1252"
			wix.target.language = "en-us"
			wix.target.project.name = "F1FileServerSetupRus"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1251"
			wix.target.language = "ru-ru"
			wix.target.project.name = "F1FileServerSetupRus"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1252"
			wix.target.language = "en-us"
			wix.target.project.name = "F1FileServerSetupEng"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1251"
			wix.target.language = "ru-ru"
			wix.target.project.name = "F1FileServerSetupEng"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1252"
			wix.target.language = "en-us"
			wix.target.project.name = "F1LocalSetupRus"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1251"
			wix.target.language = "ru-ru"
			wix.target.project.name = "F1LocalSetupRus"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1252"
			wix.target.language = "en-us"
			wix.target.project.name = "F1LocalSetupEng"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1251"
			wix.target.language = "ru-ru"
			wix.target.project.name = "F1LocalSetupEng"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1252"
			wix.target.language = "en-us"
			wix.target.project.name = "F1ServerSetupRus"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1251"
			wix.target.language = "ru-ru"
			wix.target.project.name = "F1ServerSetupRus"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1252"
			wix.target.language = "en-us"
			wix.target.project.name = "F1ServerSetupEng"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>

		<ru.garant.extensions.scriptdefs.buildWixTarget
			wix.target.codepage = "1251"
			wix.target.language = "ru-ru"
			wix.target.project.name = "F1ServerSetupEng"
			wix.target.root.dir = "${properties.wixTargetRootDir}/garant6x/deployment"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.externalMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // buildWixTargets -->

	<target
		name = "createSuccessFile"
		depends = "setCvsTag"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.createFile
			file.name = "${properties.buildSuccessFile}"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // createSuccessFile -->

	<target
		name = "copyCppHelpFilesToDeploymentCatalog"
		depends = "updateCvs"
		unless = "disable-copyCppHelpFilesToDeploymentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantPIL/implementation/component/cpp/tools/help/datatools.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/F1DataTools.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantPIL/implementation/component/cpp/tools/help/datatools.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/F1DataTools.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantPIL/implementation/component/cpp/tools/help/datatools.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1DataTools.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Application/GalServicesManager/help/GalServicesManager.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1ServerMng.chm"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyCppHelpFilesToDeploymentCatalog -->

	<target
		name = "copyCppI18nFilesToDeploymentCatalog"
		depends = "updateCvs"
		unless = "disable-copyCppI18nFilesToDeploymentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GblAdapter/i18n/messages/en/adapter.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/messages/en/adapter.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GblAdapter/i18n/messages/en/adapter.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/messages/en/adapter.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GblAdapter/i18n/messages/en/adapter.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/messages/en/adapter.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GblAdapter/i18n/messages/en/adapter.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/messages/en/adapter.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GblAdapter/i18n/messages/en/adapter.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/messages/en/adapter.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/win64/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT/messages/en/server.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/i18n/messages/en/server.mo"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/messages/en/server.mo"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyCppI18nFilesToDeploymentCatalog -->

	<target
		name = "copyCppOtherFilesToDeploymentCatalog"
		depends = "updateCvs"
		unless = "disable-copyCppOtherFilesToDeploymentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/deployment/documentation/version/data.vrs"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/data/data.vrs"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/support/SendMail.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1SendMail.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/support/SendMail.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1SendMail.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/support/SendMail.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1SendMail.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/F1ConsultingServer.exe.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/consulting/apps/winNT/F1ConsultingServer.exe.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-client"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/ini/client.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-desktop"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/ini/desktop.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-netware"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/ini/fileserver.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-server"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/ini/server.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/logs/MultiFileEncoder.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/MultiFileEncoder.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/logs/MultiFileEncoder.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/MultiFileEncoder.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/logs/MultiFileEncoder.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/MultiFileEncoder.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/XMLIniConverter/xml/client.xml"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/xml/client.xml"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/XMLIniConverter/xml/desktop.xml"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/xml/desktop.xml"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/XMLIniConverter/xml/fileserver.xml"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/xml/fileserver.xml"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/XMLIniConverter/xml/server.xml"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/xml/server.xml"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblConsultingClient/Xml/WelcomeConsultation.xml"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/WelcomeConsultation.xml"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblConsultingClient/Xml/WelcomeConsultation_eng.xml"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/WelcomeConsultation_eng.xml"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/win64/rules/prime.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garantServer/src/Business/GblPrime/prime.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT/rules/prime.ini"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyCppOtherFilesToDeploymentCatalog -->

	<target
		name = "copyCppTargetsToCurrentCatalog"
		depends = "setCvsTag"
		unless = "disable-copyCppTargetsToCurrentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/winNT/GblAdapter.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/adapter/client/GblAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/CSAdapter.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/adapter/desktop/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GblAdapter.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/adapter/desktop/GblAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GSOCK32.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/other/GSOCK32.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GSOCK32.dll.redirector"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/other/GSOCK32.dll.redirector"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/CSAdapter.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/server/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/GL.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/other/GL.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/GU7tr.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/other/GU7tr.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/GU${properties.guRevision}.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/other/GU${properties.guRevision}.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/consulting/apps/winNT/F1ConsultingServer.exe"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/server/GblConsultingServer.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1Server.exe"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/server/garantServer.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/F1ConsultingChecker.exe"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/checker/ConsultingChecker.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/HCAdapter.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/adapter/client/HCAdapter.dll"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyCppTargetsToCurrentCatalog -->

	<target
		name = "copyCppTargetsToDeploymentCatalog.win64"
		depends = "buildCppTargets.win64"
		unless = "disable-copyCppTargetsToDeploymentCatalog.win64"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/win64/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/F1Server.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/F1Server.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server-ad.support/apps/win64/F1Server.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/F1Server_fake.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/F1Server_fake.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/F1Server.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/garantServer.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/garantServer.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/F1Server.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GL.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GL.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/GL.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GU.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GU.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/GU${properties.guRevision}.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GU7tr.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GU7tr.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/GU7tr.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/XMLSave.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/XMLSave.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/win64/F1UsersSave.exe"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<ru.garant.extensions.scriptdefs.cleanupCppBuilds
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyCppTargetsToDeploymentCatalog.win64 -->

	<target
		name = "copyCppTargetsToDeploymentCatalog.winNT-garsock"
		depends = "buildCppTargets.winNT-garsock"
		unless = "disable-copyCppTargetsToDeploymentCatalog.winNT-garsock"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Breeder.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Breeder.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1DataSetup.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Breeder_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Breeder_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1DataSetup_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/BaseUpdate.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/BaseUpdate.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1BU.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/ConsultingChecker.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/ConsultingChecker.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT/F1ConsultingChecker.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/ConsultingChecker.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/ConsultingChecker.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/F1ConsultingChecker.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/ConsultingChecker.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/ConsultingChecker.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/F1ConsultingChecker.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/ConsultingChecker.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/ConsultingChecker.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1ConsultingChecker.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/ConsultingChecker.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/ConsultingChecker.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/F1ConsultingChecker.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CreateAdmDB.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CreateAdmDB.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/F1UsersMake.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Downloader.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Downloader.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1Download.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Downloader_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Downloader_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1Download_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32_redirector.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32_redirector.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT/GSOCK32.dll.redirector"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32_redirector.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32_redirector.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT/GSOCK32.dll.redirector"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32_redirector.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32_redirector.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GSOCK32.dll.redirector"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32_redirector.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32_redirector.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT/GSOCK32.dll.redirector"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32_redirector.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32_redirector.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/GSOCK32.dll.redirector"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32_redirector.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32_redirector.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT/GSOCK32.dll.redirector"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32_redirector.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32_redirector.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT/GSOCK32.dll.redirector"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GblAdapterClient/GblAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GblAdapterClient/GblAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/winNT/GblAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GblAdapterClient/GblAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GblAdapterClient/GblAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/GblAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GblConsultingServer.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GblConsultingServer.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/consulting/apps/winNT/F1ConsultingServer.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/ExternalSearchManager.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/ExternalSearchManager.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/F1ExternalSearchManagerServer.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/F1Server.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/F1Server.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server-ad.support/apps/winNT/F1Server.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/F1Server_fake.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/F1Server_fake.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1Server.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/garantServer.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/garantServer.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1Server.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/SearchMachine.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/SearchMachine.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/F1SearchMachineServer.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GL.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GL.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/GL.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GU.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GU.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/GU${properties.guRevision}.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GU7tr.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GU7tr.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/GU7tr.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/HCAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/HCAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/HCAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/PilotLicence.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/PilotLicence.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/PilotLicence.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/F1RenderEVD.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/F1RenderEVD.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/F1RenderEVD.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/ServerManager.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/ServerManager.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1ServerMng.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/ServerStopper.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/ServerStopper.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1ServerStopper.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/SetLicence.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/SetLicence.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/F1SetLicence.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Updater.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Updater.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1DataUpd.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Updater_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Updater_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1DataUpd_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/UsersImport.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/UsersImport.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/F1UsersImport.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/XMLIniConverter.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/XMLIniConverter.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/F1IniConverter.exe"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<ru.garant.extensions.scriptdefs.cleanupCppBuilds
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyCppTargetsToDeploymentCatalog.winNT-garsock -->

	<target
		name = "copyCppTargetsToDeploymentCatalog.winNT+garsock"
		depends = "buildCppTargets.winNT+garsock"
		unless = "disable-copyCppTargetsToDeploymentCatalog.winNT+garsock"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Breeder.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Breeder.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/F1DataSetup.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Breeder_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Breeder_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/F1DataSetup_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Breeder.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Breeder.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/F1DataSetup.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Breeder_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Breeder_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/F1DataSetup_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/CSAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/CSAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT/CSAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Downloader.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Downloader.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/F1Download.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Downloader_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Downloader_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/F1Download_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Downloader.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Downloader.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/F1Download.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Downloader_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Downloader_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/F1Download_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GblAdapterServer/GblAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GblAdapterServer/GblAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT/GblAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GblAdapterServer/GblAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GblAdapterServer/GblAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GblAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GblAdapterServer/GblAdapter.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GblAdapterServer/GblAdapter.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/GblAdapter.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GL.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GL.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GL.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GL.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GL.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/GL.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT/GSOCK32.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT/GSOCK32.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GSOCK32.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT/GSOCK32.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/GSOCK32.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT/GSOCK32.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/gsock32.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/gsock32.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT/GSOCK32.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GU.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GU.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GU${properties.guRevision}.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GU.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GU.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/GU${properties.guRevision}.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GU7tr.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GU7tr.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/GU7tr.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/GU7tr.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/GU7tr.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/GU7tr.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Updater.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Updater.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/F1DataUpd.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Updater_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Updater_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT/F1DataUpd_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Updater.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Updater.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/F1DataUpd.run"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/Updater_eng.dll"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/Updater_eng.dll"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT/F1DataUpd_eng.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/XMLSave.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/XMLSave.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT/F1UsersSave.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/XMLSave.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/XMLSave.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT/F1UsersSave.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/XMLSave.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/XMLSave.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT/F1UsersSave.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyCppTarget
			cpp.target.default.file = "${properties.buildRoot}/${properties.cppTargetDefaultFolder}/XMLSave.exe"
			cpp.target.release.file = "${properties.buildRoot}/${properties.cppTargetReleaseFolder}/XMLSave.exe"

			cpp.target.to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT/F1UsersSave.exe"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<ru.garant.extensions.scriptdefs.cleanupCppBuilds
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyCppTargetsToDeploymentCatalog.winNT+garsock -->

	<target
		name = "copyCppTargetsToSupportCatalog"
		depends = "setCvsTag"
		unless = "disable-copyCppTargetsToSupportCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/F1SetLicence.exe"
			to.file = "${properties.buildOutputMountRoot.supportCatalog}/SetLicence.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT/PilotLicence.dll"
			to.file = "${properties.buildOutputMountRoot.supportCatalog}/PilotLicence.dll"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyCppTargetsToSupportCatalog -->

	<target
		name = "copyPasHelpFilesToDeploymentCatalog"
		depends = "updateCvs"
		unless = "disable-copyPasHelpFilesToDeploymentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/deployment/documentation/readme.rtf"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/help/readme.rtf"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/deployment/documentation/readme.rtf"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/help/readme.rtf"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/deployment/documentation/readme.rtf"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/readme.rtf"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/deployment/documentation/readme.rtf"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/readme.rtf"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/deployment/documentation/readme.rtf"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/readme.rtf"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/help/EasyUpdate.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/help/F1EasyUpdate.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/help/EasyUpdate.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/help/F1EasyUpdate.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/help/EasyUpdate.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/help/F1EasyUpdate.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/help/F1Admin.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/help/F1Admin-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/help/F1Admin.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/help/F1Admin-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/F1Admin.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/F1Admin-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/F1Admin.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/F1Admin-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1Admin.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1admin-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1Admin-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1prime.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/help/F1Prime.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1prime.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/F1Prime.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1prime.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/F1Prime.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1prime.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1Prime.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/help/F1WhatsNew.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/help/F1WhatsNew-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/help/F1WhatsNew.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/help/F1WhatsNew-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/F1WhatsNew.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/F1WhatsNew-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/F1WhatsNew.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/F1WhatsNew-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1WhatsNew.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/f1whatsnew-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1WhatsNew-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/help/F1Shell.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/help/F1Shell-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/help/F1Shell.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/help/F1Shell-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/F1Shell.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/help/F1Shell-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/F1Shell.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/help/F1Shell-english.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1Shell.chm"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/nemesis-english.chm"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/help/F1Shell-english.chm"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyPasHelpFilesToDeploymentCatalog -->

	<target
		name = "copyPasI18nFilesToDeploymentCatalog"
		depends = "updateCvs"
		unless = "disable-copyPasI18nFilesToDeploymentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/shell.mo.en"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/messages/en/shell.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/shell.mo.en"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/messages/en/shell.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/shell.mo.en"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/messages/en/shell.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/shell.mo.en"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/messages/en/shell.mo"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/shell.mo.en"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/messages/en/shell.mo"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyPasI18nFilesToDeploymentCatalog -->

	<target
		name = "copyPasOtherFilesToDeploymentCatalog"
		depends = "updateCvs"
		unless = "disable-copyPasOtherFilesToDeploymentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/common/components/rtl/External/flash/Flash${properties.flashRevision}.ocx"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/FLASH.ocx"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/common/components/rtl/External/flash/Flash${properties.flashRevision}.ocx"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/FLASH.ocx"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/common/components/rtl/External/flash/Flash${properties.flashRevision}.ocx"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/FLASH.ocx"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/common/components/rtl/External/flash/Flash${properties.flashRevision}.ocx"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/FLASH.ocx"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/common/components/rtl/External/flash/Flash${properties.flashRevision}.ocx"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/FLASH.ocx"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/EasyUpdate.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1EasyUpdate.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/EasyUpdate.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1EasyUpdate.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/EasyUpdate.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1EasyUpdate.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdate.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/tools/schedule/F1EasyUpdateJob.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdate.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/schedule/F1EasyUpdate.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdate.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/tools/schedule/F1EasyUpdateJob.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdate.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/schedule/F1EasyUpdate.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdate.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/tools/schedule/F1EasyUpdateJob.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdate.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/schedule/F1EasyUpdate.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdateSet.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/tools/schedule/F1EasyUpdateSet.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdateSet.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/tools/schedule/F1EasyUpdateSet.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/EasyUpdate/F1EasyUpdateSet.bat"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/tools/schedule/F1EasyUpdateSet.bat"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Consulting/answer_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Consulting_Answer.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Consulting/preanswer_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Consulting_PreAnswer.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Consulting/query_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Consulting_Query.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Prime/prime_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Prime.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Search/Consult_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Consult.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Search/Inpharm_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Inpharm.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Search/F1Prime_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Prime.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Search/LawSupport_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_LawSupport.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Search/MainSearch_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Main.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/Search/Review_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Review.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/English/Consulting/answer_eng_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Consulting_Answer_eng.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/English/Consulting/preanswer_eng_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Consulting_PreAnswer_eng.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/English/Consulting/query_eng_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Consulting_Query_eng.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/English/Search/Consult_eng_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Consult_eng.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/English/Search/F1Prime_eng_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Prime_eng.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/English/Search/LawSupport_eng_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_LawSupport_eng.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/English/Search/MainSearch_eng_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Main_eng.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/EVD_Templates/English/Search/Review_eng_bin.evd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/Search_Review_eng.evd"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/integration/F1Shell.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Shell.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/integration/F1Shell.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1Shell.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/integration/F1Shell.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Shell.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/integration/F1Shell.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Shell.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/integration/F1Shell.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Shell.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/deployment/support/F1Setup.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1Setup.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/datasetup.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/datasetup.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/datasetup.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/datasetup.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/datasetup.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/datasetup.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/F1UsersSave.exe.ini-cd_or_dvd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/F1UsersSave.exe.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/F1UsersSave.exe.ini-desktop"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/F1UsersSave.exe.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/F1UsersSave.exe.ini-netware"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/F1UsersSave.exe.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/F1UsersSave.exe.ini-server"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/F1UsersSave.exe.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.cache-client"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/garant.cache"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.cache-netware"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/garant.cache"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-cd_or_dvd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-cd_or_dvd-english"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/garant.ini-english"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-client"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-desktop"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-miv"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/miv/garant/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-mobile"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/mobile/garant/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-mobile-english"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/mobile/garant/garant.ini-english"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-mobile-super"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/mobile/garant/garant.ini-super"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-netware"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-server"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-transport_config"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-transport_config"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-transport_config"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/garant.ini-transport_config"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/garant.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/gclean.ini-cd_or_dvd"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/gclean.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/gclean.ini-cd_or_dvd-english"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings-english/gclean.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/gclean.ini-client"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/settings/gclean.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/gclean.ini-client"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/gclean.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/gclean.ini-desktop"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/gclean.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/launcher/ini_templates/gclean.ini-netware"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/gclean.ini"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/TestSet/Dictionary/System.nsr"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/System.nsr"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/implementation/Garant/GbaNemesis/TestSet/Dictionary/System.script"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/templates/System.script"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyPasOtherFilesToDeploymentCatalog -->

	<target
		name = "copyPasTargetsToCurrentCatalog"
		depends = "setCvsTag"
		unless = "disable-copyPasTargetsToCurrentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Admin.run"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/admin.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Admin+console.exe"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/admin+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Admin+console.map"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/admin+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Prime.run"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/monitoring.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Prime+console.exe"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/monitoring+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Prime+console.map"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/monitoring+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Shell.run"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/nemesis.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Shell+console.exe"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/nemesis+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Shell+console.map"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/nemesis+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1SplashScreen.run"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/shell/F1SplashScreen.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/RenderEVD.dll"
			to.file = "${properties.buildOutputMountRoot.currentCatalog}/server/RenderEVD.dll"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyPasTargetsToCurrentCatalog -->

	<target
		name = "copyPasTargetsToDeploymentCatalog.winXX-console"
		depends = "buildPasTargets.winXX-console"
		unless = "disable-copyPasTargetsToDeploymentCatalog.winXX-console"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/datasetup.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/datasetup.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/datasetup.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/datasetup.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/datasetup.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/datasetup.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/dataupd.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/dataupd.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/dataupd.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/dataupd.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/dataupd.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/dataupd.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/download.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/download.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/download.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/download.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/download.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/download.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1CacheHelper.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1CacheHelper.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1CacheHelper.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1CacheHelper.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ConsultingChecker.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1ConsultingChecker.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ConsultingChecker.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1ConsultingChecker.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ConsultingChecker.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1ConsultingChecker.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ConsultingChecker.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1ConsultingChecker.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1EasyUpdate.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1EasyUpdate.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1EasyUpdate.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1EasyUpdate.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1EasyUpdate.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1EasyUpdate.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1Prime.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Prime.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1Prime.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Prime.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1Prime.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Prime.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1Prime.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Prime.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1SendMail.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1SendMail.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1SendMail.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1SendMail.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1SendMail.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1SendMail.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1Setup.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1Setup.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ShellDriver.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Shell.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ShellDriver.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1Shell.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ShellDriver.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Shell.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ShellDriver.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Shell.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1ShellDriver.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Shell.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1Sleep.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Sleep.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1Sleep.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Sleep.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1Sleep.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Sleep.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1SplashScreen.run"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1SplashScreen.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1SplashScreen.run"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1SplashScreen.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1SplashScreen.run"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1SplashScreen.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1SplashScreen.run"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1SplashScreen.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/F1SplashScreen.run"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1SplashScreen.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/garant.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/garant.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/garant.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/garant.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/garant.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/garant.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/garant.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/miv/garant/garant.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/garant_miv.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/miv/garant/garant.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/garant.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/garant.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/garant.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/garant.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/gclean.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/gclean.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/gclean.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/settings/gclean.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/gclean.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/gclean.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/gclean.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/gclean.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/gclean.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/gclean.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Admin.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1Admin.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Admin.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Admin.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Admin.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Prime.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Prime.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Prime.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Prime.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Shell.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1Shell.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Shell.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Shell.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Shell.run"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/RenderEVD.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64/RenderEVD.dll"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/RenderEVD.dll"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT/RenderEVD.dll"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<ru.garant.extensions.scriptdefs.cleanupPasBuilds
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyPasTargetsToDeploymentCatalog.winXX-console -->

	<target
		name = "copyPasTargetsToDeploymentCatalog.winXX+console"
		depends = "buildPasTargets.winXX+console"
		unless = "disable-copyPasTargetsToDeploymentCatalog.winXX+console"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Admin+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Admin+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1Admin+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1Admin+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Admin+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Admin+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Admin+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Admin+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Admin+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaAdmin+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Admin+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Prime+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Prime+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Prime+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Prime+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Prime+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Prime+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Prime+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaMonitoring+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Prime+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Shell+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/F1Shell+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1Shell+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/F1Shell+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Shell+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/F1Shell+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Shell+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/F1Shell+console.map"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Shell+console.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildRoot}/exe/GbaNemesis+console.map"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/F1Shell+console.map"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<ru.garant.extensions.scriptdefs.cleanupPasBuilds
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyPasTargetsToDeploymentCatalog.winXX+console -->

	<target
		name = "copyPasTargetsToSupportCatalog"
		depends = "setCvsTag"
		unless = "disable-copyPasTargetsToSupportCatalog"
	>

<!--
		// do nothing
-->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyPasTargetsToSupportCatalog -->

	<target
		name = "copyWixTargetsToDeploymentCatalog"
		depends = "buildWixTargets"
		unless = "disable-copyWixTargetsToDeploymentCatalog"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ClientSetupEng_en-us.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupEng_en-us.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ClientSetupEng_ru-ru.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupEng_ru-ru.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ClientSetupRus_en-us.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupRus_en-us.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ClientSetupRus_ru-ru.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupRus_ru-ru.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ClientSetupUniShared.cab"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupUniShared.cab"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1FileServerSetupEng_en-us.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupEng_en-us.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1FileServerSetupEng_ru-ru.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupEng_ru-ru.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1FileServerSetupRus_en-us.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupRus_en-us.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1FileServerSetupRus_ru-ru.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupRus_ru-ru.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1FileServerSetupUniShared.cab"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupUniShared.cab"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1LocalSetupEng_en-us.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupEng_en-us.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1LocalSetupEng_ru-ru.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupEng_ru-ru.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1LocalSetupRus_en-us.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupRus_en-us.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1LocalSetupRus_ru-ru.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupRus_ru-ru.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1LocalSetupUniShared.cab"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupUniShared.cab"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ServerSetupEng_en-us.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupEng_en-us.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ServerSetupEng_ru-ru.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupEng_ru-ru.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ServerSetupRus_en-us.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupRus_en-us.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ServerSetupRus_ru-ru.msi"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupRus_ru-ru.msi"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.wixTargetRootDir}/garant6x/deployment/F1ServerSetupUniShared.cab"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupUniShared.cab"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.cvsRootDir}/garant6x/deployment/documentation/readme.rtf"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/readme.rtf"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyWixTargetsToDeploymentCatalog -->

	<target
		name = "createVersionInfo"
		unless = "disable-createVersionInfo"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.createFile
			file.name = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/version.txt"
			file.data = "${ru.garant.extensions.properties.full.version}"
		/>

		<ru.garant.extensions.scriptdefs.createFile
			file.name = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/version.txt"
			file.data = "${ru.garant.extensions.properties.full.version}"
		/>

		<ru.garant.extensions.scriptdefs.createFile
			file.name = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/version.txt"
			file.data = "${ru.garant.extensions.properties.full.version}"
		/>

		<ru.garant.extensions.scriptdefs.createFile
			file.name = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/version.txt"
			file.data = "${ru.garant.extensions.properties.full.version}"
		/>

		<ru.garant.extensions.scriptdefs.createFile
			file.name = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/version.txt"
			file.data = "${ru.garant.extensions.properties.full.version}"
		/>

		<ru.garant.extensions.scriptdefs.createFile
			file.name = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/version.txt"
			file.data = "${ru.garant.extensions.properties.full.version}"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // createVersionInfo -->

	<target
		name = "default"
		depends = "createSuccessFile,copyCppTargetsToCurrentCatalog,copyPasTargetsToCurrentCatalog,copyCppTargetsToSupportCatalog,copyPasTargetsToSupportCatalog"
	>

<!--
		// do nothing
-->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // default -->

	<target
		name = "manifestCppTargets"
		depends = "buildCppTargets"
		unless = "disable-manifestCppTargets"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1BU.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingServer.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/consulting/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1DataSetup.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1DataSetup.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1DataSetup.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1DataUpd.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1DataUpd.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1DataUpd.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Download.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Download.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Download.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ExternalSearchManagerServer.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1IniConverter.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1RenderEVD.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SearchMachineServer.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Server.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Server.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ServerMng.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ServerStopper.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SetLicence.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1UsersImport.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1UsersMake.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1UsersSave.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1UsersSave.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1UsersSave.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1UsersSave.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/win64"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1UsersSave.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll.redirector"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll.redirector"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll.redirector"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll.redirector"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll.redirector"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll.redirector"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "GSOCK32.dll.redirector"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // manifestCppTargets -->

	<target
		name = "manifestPasTargets"
		depends = "buildPasTargets"
		unless = "disable-manifestPasTargets"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "datasetup.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "datasetup.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "datasetup.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "dataupd.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "dataupd.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "dataupd.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "download.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "download.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "download.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Admin+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1CacheHelper.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1CacheHelper.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ConsultingChecker.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1EasyUpdate.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1EasyUpdate.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1EasyUpdate.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>





		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Prime+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SendMail.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SendMail.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SendMail.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Shell+console.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Sleep.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Sleep.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Sleep.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SplashScreen.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SplashScreen.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SplashScreen.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SplashScreen.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1SplashScreen.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "garant.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "garant.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "garant.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "garant.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/miv/garant"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "garant.run"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/miv/garant"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "garant.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "garant.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "gclean.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "gclean.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/settings"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "gclean.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "gclean.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "gclean.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // manifestPasTargets -->

	<target
		name = "manifestWixTargets"
		depends = "copyWixTargetsToDeploymentCatalog"
		unless = "disable-manifestWixTargets"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ClientSetupEng_en-us.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ClientSetupEng_ru-ru.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ClientSetupRus_en-us.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ClientSetupRus_ru-ru.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1FileServerSetupEng_en-us.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1FileServerSetupEng_ru-ru.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1FileServerSetupRus_en-us.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1FileServerSetupRus_ru-ru.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1LocalSetupEng_en-us.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1LocalSetupEng_ru-ru.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1LocalSetupRus_en-us.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1LocalSetupRus_ru-ru.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ServerSetupEng_en-us.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ServerSetupEng_ru-ru.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ServerSetupRus_en-us.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1ServerSetupRus_ru-ru.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>

		<ru.garant.extensions.scriptdefs.manifestTarget
			manifest.target = "F1Setup.exe"

			manifest.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // manifestWixTargets -->

	<target
		name = "copyWixTargets"
		depends = "manifestWixTargets"
		unless = "disable-copyWixTargets"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1ClientSetupEng_en-us.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupEng_en-us.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1ClientSetupEng_ru-ru.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupEng_ru-ru.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1ClientSetupRus_en-us.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupRus_en-us.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1ClientSetupRus_ru-ru.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ClientSetupRus_ru-ru.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1FileServerSetupEng_en-us.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupEng_en-us.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1FileServerSetupEng_ru-ru.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupEng_ru-ru.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1FileServerSetupRus_en-us.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupRus_en-us.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1FileServerSetupRus_ru-ru.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1FileServerSetupRus_ru-ru.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1LocalSetupEng_en-us.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupEng_en-us.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1LocalSetupEng_ru-ru.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupEng_ru-ru.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1LocalSetupRus_en-us.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupRus_en-us.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1LocalSetupRus_ru-ru.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1LocalSetupRus_ru-ru.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1ServerSetupEng_en-us.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupEng_en-us.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1ServerSetupEng_ru-ru.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupEng_ru-ru.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1ServerSetupRus_en-us.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupRus_en-us.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1ServerSetupRus_ru-ru.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup/F1ServerSetupRus_ru-ru.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1Setup.exe"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/F1Setup.exe"
		/>

		<ru.garant.extensions.scriptdefs.copyFile
			file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support-setup/F1Setup.ini"
			to.file = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/F1Setup.ini"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // copyWixTargets -->

	<target
		name = "removeSuccessFile"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.removeFile
			file.name = "${properties.buildSuccessFile}"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // removeSuccessFile -->

	<target
		name = "setCvsTag"
		depends = "removeSuccessFile,signWixTargets"
		unless = "disable-setCvsTag"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.setCvsTagByList
			cvs.dirset.list = "${properties.cvsDirsetListForTagging}"
			cvs.root.dir = "${properties.cvsRootDir}"

			cvs.tag.file = "${properties.cvsTagFile}"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // setCvsTag -->

	<target
		name = "signCppTargets"
		depends = "manifestCppTargets"
		unless = "disable-signCppTargets"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "CSAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1BU.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingServer.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/consulting/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataSetup.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataSetup_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataSetup.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataSetup_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataSetup.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataSetup_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataUpd.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataUpd_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataUpd.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataUpd_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataUpd.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1DataUpd_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Download.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Download_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Download.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Download_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Download.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Download_eng.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ExternalSearchManagerServer.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1IniConverter.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1RenderEVD.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SearchMachineServer.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SendMail.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SendMail.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SendMail.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Server.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Server.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Server.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server-ad.support/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Server.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server-ad.support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Server.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Server.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerMng.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerStopper.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SetLicence.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1UsersImport.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1UsersMake.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/support/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1UsersSave.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1UsersSave.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1UsersSave.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1UsersSave.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1UsersSave.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GblAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GblAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GblAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GblAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GblAdapter.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GL.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GL.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GL.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GL.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GU7tr.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GU7tr.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GU7tr.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GU7tr.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GU${properties.guRevision}.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GU${properties.guRevision}.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GU${properties.guRevision}.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GU${properties.guRevision}.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "MultiFileEncoder.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "MultiFileEncoder.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "MultiFileEncoder.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll.redirector"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll.redirector"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll.redirector"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll.redirector"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll.redirector"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll.redirector"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "GSOCK32.dll.redirector"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings/xmltools/winNT"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // signCppTargets -->

	<target
		name = "signPasTargets"
		depends = "manifestPasTargets"
		unless = "disable-signPasTargets"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "datasetup.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "datasetup.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "datasetup.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "dataupd.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "dataupd.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "dataupd.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "download.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "download.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "download.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ConsultingChecker.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1EasyUpdate.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1EasyUpdate.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1EasyUpdate.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SendMail.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SendMail.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SendMail.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Sleep.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Sleep.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Sleep.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "garant.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "garant.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "garant.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "garant.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/miv/garant"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "garant.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/miv/garant"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "garant.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "garant.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "gclean.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/settings"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "gclean.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/settings"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "gclean.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/settings"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "gclean.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/settings"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "gclean.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/settings"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Admin+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1CacheHelper.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1CacheHelper.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Prime+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell+console.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Shell.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SplashScreen.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/cd_or_dvd/garant/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SplashScreen.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/client/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SplashScreen.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/desktop/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SplashScreen.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/netware/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1SplashScreen.run"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "RenderEVD.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/win64"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "RenderEVD.dll"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily/server/apps/winNT"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // signPasTargets -->

	<target
		name = "signWixTargets"
		depends = "copyWixTargets"
		unless = "disable-signWixTargets"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!-- -->
		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupEng_en-us.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupEng_en-us.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupRus_en-us.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupRus_en-us.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupEng_ru-ru.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupEng_ru-ru.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupRus_ru-ru.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupRus_ru-ru.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ClientSetupUniShared.cab"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupEng_en-us.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupEng_en-us.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupRus_en-us.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupRus_en-us.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupEng_ru-ru.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupEng_ru-ru.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupRus_ru-ru.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupRus_ru-ru.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1FileServerSetupUniShared.cab"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupEng_en-us.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupEng_en-us.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupRus_en-us.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupRus_en-us.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupEng_ru-ru.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupEng_ru-ru.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupRus_ru-ru.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupRus_ru-ru.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1LocalSetupUniShared.cab"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupEng_en-us.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupEng_en-us.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupRus_en-us.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupRus_en-us.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupEng_ru-ru.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupEng_ru-ru.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupRus_ru-ru.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupRus_ru-ru.msi"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1ServerSetupUniShared.cab"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer/setup"
		/>

		<ru.garant.extensions.scriptdefs.signTarget
			sign.target = "F1Setup.exe"

			sign.target.root.dir = "${properties.buildOutputMountRoot.deploymentCatalog}/!daily-installer"
		/>
<!-- -->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // signWixTargets -->

	<target
		name = "updateCvs"
		unless = "disable-updateCvs"
	>
<!-- -->
		<ru.garant.extensions.scriptdefs.updateCvsByList
			cvs.dirset.list = "${properties.cvsDirsetListForUpdate}"
			cvs.root.dir = "${properties.cvsRootDir}"
		/>
<!-- -->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // updateCvs -->

	<target
		name = "updateHotFixes"
		depends = "signCppTargets"
		unless = "disable-updateHotFixes"
	>
		<ru.garant.extensions.scriptdefs.mountResource
			mount.root = "${properties.buildOutputMountRoot}"
			mount.path = "${properties.buildOutputMountPath}"
		/>

<!--
		// do nothing
-->

		<ru.garant.extensions.scriptdefs.unmountResource
			mount.root = "${properties.buildOutputMountRoot}"
		/>

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // updateHotFixes -->

	<target
		name = "updatePasTargetsBuildVersion"
		depends = "updateCvs"
		unless = "disable-updatePasTargetsBuildVersion"
	>
<!-- -->
		<ru.garant.extensions.scriptdefs.replaceStringInFile
			input.file = "${properties.pasTargetRootDir}/garant6x/implementation/Garant/GbaNemesis/nsBuildVersion.inc"
			regex.patern = "X\.XX\.X\.XXX"
			replace.string = "${ru.garant.extensions.properties.full.version}"
		/>
<!-- -->

		<echo
			message = "TARGET PASSED"
		/>
	</target> <!-- // updatePasTargetsBuildVersion -->
<!-- } targets -->

</project> <!-- // scriptset.garantF1 -->
