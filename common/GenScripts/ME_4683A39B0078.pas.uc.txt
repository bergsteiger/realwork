//#UC START# *4683A39B0078_ext:ParentFileName
w:\garant6x\implementation\Garant\GbaNemesis\Search\nsQueryAttribute.pas
//#UC END# *4683A39B0078_ext:ParentFileName
//#UC START# *47A042E100E2_4683A39B0078_impl*
 inherited;
 if not Get_EditorReq.Para.AsObject.HasSubAtom(k2_tiDefaultText) then
 //Обновление масок текста (могут не соотвествовать региональным настройкам).
 begin
  l_CT := Tl3PCharLen(nsWStr(evMakeDateMaskText));
  l_Field := Get_EditorReq.FirstField;
  if (l_Field <> nil) then
  begin
   lp_Init(l_Field);
   if Supports(l_Field, IevEditorCalendarField, l_Cal) then
    lp_Init(l_Cal.GetOtherField);
  end;//l_Field <> nil
  Get_EditorReq.Para.AsObject.PCharLenA[k2_tiDefaultText] := l_CT;
 end;//not Get_EditorReq.Para.HasSubAtom(k2_tiDefaultText)
//#UC END# *47A042E100E2_4683A39B0078_impl*
//#UC START# *47A042E100E2_4683A39B0078_var*
var
 l_Field: IevEditorControlField;
 l_CT: Tl3PCharLen;
 l_Cal: IevEditorCalendarField;

 procedure lp_Init(const aField: IevEditorControlField);
 begin
  if (aField <> nil) then
   if l3IsNil(aField.Para.AsObject.PCharLenA[k2_tiText]) then
    aField.Para.AsObject.PCharLenA[k2_tiText] := l_CT
   else
   if not l3IsNil(l_CT) then
    aField.Para.AsObject.PCharLenA[k2_tiText] := l_CT;
 end;
//#UC END# *47A042E100E2_4683A39B0078_var*
//#UC START# *5232EB600109_4683A39B0078get_impl*
 if Supports(Get_EditorReq, IevDatesReq, l_CalReq) then
 try
  Result := l_CalReq.StartDate;
 finally
  l_CalReq := nil;
 end
 else
  Result := NullDate;
//#UC END# *5232EB600109_4683A39B0078get_impl*
//#UC START# *5232EB600109_4683A39B0078get_var*
var
 l_CalReq: IevDatesReq;
//#UC END# *5232EB600109_4683A39B0078get_var*
//#UC START# *5232EB600109_4683A39B0078set_impl*
 if Supports(Get_EditorReq, IevDatesReq, l_CalReq) then
 try
  l_CalReq.StartDate := aValue;
 finally
  l_CalReq := nil;
 end;
//#UC END# *5232EB600109_4683A39B0078set_impl*
//#UC START# *5232EB600109_4683A39B0078set_var*
var
 l_CalReq: IevDatesReq;
//#UC END# *5232EB600109_4683A39B0078set_var*
//#UC START# *5232EB690203_4683A39B0078get_impl*
 if Supports(Get_EditorReq, IevDatesReq, l_CalReq) then
 try
  Result := l_CalReq.EndDate;
 finally
  l_CalReq := nil;
 end
 else
  Result := NullDate;
//#UC END# *5232EB690203_4683A39B0078get_impl*
//#UC START# *5232EB690203_4683A39B0078get_var*
var
 l_CalReq: IevDatesReq;
//#UC END# *5232EB690203_4683A39B0078get_var*
//#UC START# *5232EB690203_4683A39B0078set_impl*
 if Supports(Get_EditorReq, IevDatesReq, l_CalReq) then
 try
  l_CalReq.EndDate := aValue;
 finally
  l_CalReq := nil;
 end;
//#UC END# *5232EB690203_4683A39B0078set_impl*
//#UC START# *5232EB690203_4683A39B0078set_var*
var
 l_CalReq: IevDatesReq;
//#UC END# *5232EB690203_4683A39B0078set_var*
//#UC START# *54E5C23D016C_4683A39B0078get_impl*
 Result := True;
//#UC END# *54E5C23D016C_4683A39B0078get_impl*
//#UC START# *54E5C23D016C_4683A39B0078get_var*
//#UC END# *54E5C23D016C_4683A39B0078get_var*
//#UC START# *54E5C2C801EC_4683A39B0078_impl*
 Result := False;
//#UC END# *54E5C2C801EC_4683A39B0078_impl*
//#UC START# *54E5C2C801EC_4683A39B0078_var*
//#UC END# *54E5C2C801EC_4683A39B0078_var*
//#UC START# *54E5C6B2036C_4683A39B0078_impl*
 {$If not defined(Admin)}
 LoadDateNew(f_MgrSearch.Query, Get_TagName, l_StartDate, l_EndDate);
 {$Else}
 Assert(false);
 {$IfEnd}
 if (l_StartDate <> NullDate) or (l_EndDate <> NullDate) then
 begin
  Get_EditorReq.Group.Expanded := True;
  EndDate := l_EndDate;
  StartDate := l_StartDate;
 end;
 inherited;
//#UC END# *54E5C6B2036C_4683A39B0078_impl*
//#UC START# *54E5C6B2036C_4683A39B0078_var*
var
 l_StartDate: System.TDateTime;
 l_EndDate: System.TDateTime;
//#UC END# *54E5C6B2036C_4683A39B0078_var*
//#UC START# *54E5C719014A_4683A39B0078_impl*
 HyperLinkClick;
//#UC END# *54E5C719014A_4683A39B0078_impl*
//#UC START# *54E5C719014A_4683A39B0078_var*
//#UC END# *54E5C719014A_4683A39B0078_var*
//#UC START# *54E5C744010C_4683A39B0078_impl*
 inherited;
 if not CheckFromControl(l_Exception, l_Message, l_Control) then
 begin
  (l_Control as IevEditorCalendarField).ClearField;
  raise l_Exception.Create(l_Control, l_Message);
 end;
 if Supports(Get_EditorReq.FirstField, IevEditorCalendarField, l_DateField) then
 begin
 // Удалим если введена не верная дата
  if not l_DateField.IsFieldEmpty and not l_DateField.GetOtherField.IsFieldEmpty then
   if Floor(l_DateField.aDate) > Floor(l_DateField.GetOtherField.aDate) then
    raise EqaInvalidValue.CreateFmt(l_DateField, vcmConstString(str_StartDateMoreEnd),
                                    [DateToStr(l_DateField.aDate), DateToStr(l_DateField.GetOtherField.aDate)]);
 end;
//#UC END# *54E5C744010C_4683A39B0078_impl*
//#UC START# *54E5C744010C_4683A39B0078_var*
var
 l_DateField: IevEditorCalendarField;
 l_Exception: EaqExceptionClass;
 l_Message: AnsiString;
 l_Control: IevEditorControlField;
//#UC END# *54E5C744010C_4683A39B0078_var*
//#UC START# *54E5C772012F_4683A39B0078_impl*
 Get_EditorReq.FirstField.ClearText;
//#UC END# *54E5C772012F_4683A39B0078_impl*
//#UC START# *54E5C772012F_4683A39B0078_var*
//#UC END# *54E5C772012F_4683A39B0078_var*
//#UC START# *54E5C8690080_4683A39B0078_impl*
 Result := IsAttrValid;
//#UC END# *54E5C8690080_4683A39B0078_impl*
//#UC START# *54E5C8690080_4683A39B0078_var*
//#UC END# *54E5C8690080_4683A39B0078_var*
//#UC START# *54E5C884028F_4683A39B0078_impl*
 {$If not defined(Admin)}
 Assert(Get_EditorReq.FirstField.Enabled = Get_EditorReq.LastField.Enabled);
 if Get_EditorReq.FirstField.Enabled AND Get_EditorReq.LastField.Enabled then
  SaveDateNewEx(f_MgrSearch.Query, Get_TagName, StartDate, EndDate);
 {$Else}
 Assert(false);
 {$IfEnd}
//#UC END# *54E5C884028F_4683A39B0078_impl*
//#UC START# *54E5C884028F_4683A39B0078_var*
//#UC END# *54E5C884028F_4683A39B0078_var*
//#UC START# *54E5D1D5002A_4683A39B0078_impl*
 Result := inherited CheckFromControl(aExceptionClass, aMessage, aControl);
 if Result and Supports(Get_EditorReq.FirstField, IevEditorCalendarField, l_DateField) then
 begin
  CheckDate(l_DateField);
  if Result then
   CheckDate(l_DateField.GetOtherField);
 end;
//#UC END# *54E5D1D5002A_4683A39B0078_impl*
//#UC START# *54E5D1D5002A_4683A39B0078_var*
 procedure CheckDate(const aDateField: IevEditorCalendarField);
 {* - проверяет правильность даты и выводит сообщение. }
 begin
  if not aDateField.IsBlank and not aDateField.Valid then
  begin
   Result := False;
   aExceptionClass := EqaInvalidValue;
   aMessage := Format(vcmConstString(str_InvalidDate), [nsEStr(aDateField.text)]);
   aControl := aDateField;
  end;
 end;

var
 l_DateField: IevEditorCalendarField;
//#UC END# *54E5D1D5002A_4683A39B0078_var*
//#UC START# *54F3482A0186_4683A39B0078_impl*
 Result := inherited GetHint4Button(aValue);
 if (aValue.GetButtonType = ev_btDelete) then
  Result := vcmCStr(str_HintBtnDeleteDate);
//#UC END# *54F3482A0186_4683A39B0078_impl*
//#UC START# *54F3482A0186_4683A39B0078_var*
//#UC END# *54F3482A0186_4683A39B0078_var*
//#UC START# *54F348660219_4683A39B0078_impl*
 HyperLinkClick;
//#UC END# *54F348660219_4683A39B0078_impl*
//#UC START# *54F348660219_4683A39B0078_var*
//#UC END# *54F348660219_4683A39B0078_var*
//#UC START# *54F348D700E2_4683A39B0078_impl*
 f_MgrSearch.DateQuery(Self);
//#UC END# *54F348D700E2_4683A39B0078_impl*
//#UC START# *54F348D700E2_4683A39B0078_var*
//#UC END# *54F348D700E2_4683A39B0078_var*
