//#UC START# *479731C50290_482ACC330173_impl*
 f_CEmptyHintAdding := nil;
 f_CEmptyHint := nil;
 inherited;
//#UC END# *479731C50290_482ACC330173_impl*
//#UC START# *479731C50290_482ACC330173_var*
//#UC END# *479731C50290_482ACC330173_var*
//#UC START# *47A042E100E2_482ACC330173_impl*
 inherited;
 f_HyperlinkStart := -1;
 f_HyperlinkFinish := -1;
 Wrap := false;
 BorderStyle := bsSingle;
 NeedDefaultPopupMenu := true; 
 Ctl3D := false;
 ParentCtl3D := false;
 //AutoHeightByText := true;
 ControlStyle := ControlStyle + [csFixedHeight];
//#UC END# *47A042E100E2_482ACC330173_impl*
//#UC START# *47A042E100E2_482ACC330173_var*
//#UC END# *47A042E100E2_482ACC330173_var*
//#UC START# *482ACC330173ci*
//#UC END# *482ACC330173ci*
//#UC START# *482ACC330173cit*
//#UC END# *482ACC330173cit*
//#UC START# *482ACC330173impl*
//#UC END# *482ACC330173impl*
//#UC START# *482ACC330173publ*
 protected
   property Wrap
     default false;
   property NeedDefaultPopupMenu
     default true;
   property Ctl3D
     default false;    
   property ParentCtl3D
     default false;    
{   property AutoHeightByText
     default true;
     {-}
//#UC END# *482ACC330173publ*
//#UC START# *482ADD2E035D_482ACC330173get_impl*
 Result := l3DStr(f_CEmptyHint);
//#UC END# *482ADD2E035D_482ACC330173get_impl*
//#UC START# *482ADD2E035D_482ACC330173get_var*
//#UC END# *482ADD2E035D_482ACC330173get_var*
//#UC START# *482ADD2E035D_482ACC330173set_impl*
 f_CEmptyHint := l3CStr(aValue);
//#UC END# *482ADD2E035D_482ACC330173set_impl*
//#UC START# *482ADD2E035D_482ACC330173set_var*
//#UC END# *482ADD2E035D_482ACC330173set_var*
//#UC START# *482AE42802AE_482ACC330173_impl*
 DoChange;
//#UC END# *482AE42802AE_482ACC330173_impl*
//#UC START# *482AE42802AE_482ACC330173_var*
//#UC END# *482AE42802AE_482ACC330173_var*
//#UC START# *482AE6AB00EA_482ACC330173get_impl*
 Result := l3CStr(Buffer);
//#UC END# *482AE6AB00EA_482ACC330173get_impl*
//#UC START# *482AE6AB00EA_482ACC330173get_var*
//#UC END# *482AE6AB00EA_482ACC330173get_var*
//#UC START# *482AE6AB00EA_482ACC330173set_impl*
 Buffer := l3PCharLen(aValue);
//#UC END# *482AE6AB00EA_482ACC330173set_impl*
//#UC START# *482AE6AB00EA_482ACC330173set_var*
//#UC END# *482AE6AB00EA_482ACC330173set_var*
//#UC START# *482AECDA021C_482ACC330173set_impl*
 Assert(anIndex = 0);
 l_Op := StartOp;
 try
  l_Op.DisableReadOnly;
  try
   l_X := CaretX;
   try
    if (aValue = nil) then
    begin
     Document.Range.Text.Modify.InsertString(View, l3CStr(''), l_Op, true, [misfDirect]);
     InevSelection(Selection).Unselect;
    end//aValue = nil
    else
    begin
     Document.Range.Text.Modify.InsertString(View, aValue, l_Op, true, [misfDirect]);
     if (MaxLength <= 0) then
      Assert(Text = l3Str(aValue));
//     if (Text <> l3Str(aValue)) then
//      Document.Range.Text.Modify.InsertString(View, aValue, l_Op, true, [misfDirect]);
    end;//aValue = nil
   finally
    CaretX := l_X;
   end;//try..finally
  finally
   l_Op.EnableReadOnly;
  end;//try..finally
 finally
  l_Op := nil; 
 end;//try..finally
//#UC END# *482AECDA021C_482ACC330173set_impl*
//#UC START# *482AECDA021C_482ACC330173set_var*
var
 l_Op : InevOp;
 l_X  : Integer;
//#UC END# *482AECDA021C_482ACC330173set_var*
//#UC START# *482AF0C30294_482ACC330173get_impl*
 Result := Self;
//#UC END# *482AF0C30294_482ACC330173get_impl*
//#UC START# *482AF0C30294_482ACC330173get_var*
//#UC END# *482AF0C30294_482ACC330173get_var*
//#UC START# *482AF57500EE_482ACC330173_impl*
 if Assigned(f_OnChange) then
  f_OnChange(Self);
//#UC END# *482AF57500EE_482ACC330173_impl*
//#UC START# *482AF57500EE_482ACC330173_var*
//#UC END# *482AF57500EE_482ACC330173_var*
//#UC START# *482AF615038E_482ACC330173get_impl*
 Result := 0;
 Assert(false);
//#UC END# *482AF615038E_482ACC330173get_impl*
//#UC START# *482AF615038E_482ACC330173get_var*
//#UC END# *482AF615038E_482ACC330173get_var*
//#UC START# *482AF615038E_482ACC330173set_impl*
 CheckDoc;
 if (Selection <> nil) then
 // - это может случится, когда комбо сохраняет себя в историю при выборе из дерева
  Selection.Start.MostInner.PositionW := aValue;
//#UC END# *482AF615038E_482ACC330173set_impl*
//#UC START# *482AF615038E_482ACC330173set_var*
//#UC END# *482AF615038E_482ACC330173set_var*
//#UC START# *482AF71E02F5_482ACC330173get_impl*
 CheckDoc;
 Result := Selection.Finish.MostInner.Position - Selection.Start.MostInner.Position;
//#UC END# *482AF71E02F5_482ACC330173get_impl*
//#UC START# *482AF71E02F5_482ACC330173get_var*
//#UC END# *482AF71E02F5_482ACC330173get_var*
//#UC START# *482AF71E02F5_482ACC330173set_impl*
 CheckDoc;
 if (aValue <= 0) then
  InevSelection(Selection).Unselect
 else
  Selection.Finish.MostInner.PositionW := Selection.Start.MostInner.Position + aValue;
//#UC END# *482AF71E02F5_482ACC330173set_impl*
//#UC START# *482AF71E02F5_482ACC330173set_var*
//#UC END# *482AF71E02F5_482ACC330173set_var*
//#UC START# *482AF7FA00E9_482ACC330173get_impl*
 CheckDoc;
 Result := Selection.Cursor.MostInner.Position;
//#UC END# *482AF7FA00E9_482ACC330173get_impl*
//#UC START# *482AF7FA00E9_482ACC330173get_var*
//#UC END# *482AF7FA00E9_482ACC330173get_var*
//#UC START# *482AF7FA00E9_482ACC330173set_impl*
 CheckDoc;
 Selection.Cursor.MostInner.PositionW := aValue;
//#UC END# *482AF7FA00E9_482ACC330173set_impl*
//#UC START# *482AF7FA00E9_482ACC330173set_var*
//#UC END# *482AF7FA00E9_482ACC330173set_var*
//#UC START# *482AF9ED0091_482ACC330173_impl*
 Result := nil;
 Assert(false);
//#UC END# *482AF9ED0091_482ACC330173_impl*
//#UC START# *482AF9ED0091_482ACC330173_var*
//#UC END# *482AF9ED0091_482ACC330173_var*
//#UC START# *482B015700A6_482ACC330173set_impl*
 if Selection <> nil then
  with Selection do
  begin
   Caret.Visible := not aValue;
   NoCaret := aValue;
  end;//with Selection
//#UC END# *482B015700A6_482ACC330173set_impl*
//#UC START# *482B015700A6_482ACC330173set_var*
//#UC END# *482B015700A6_482ACC330173set_var*
//#UC START# *482B05B9011C_482ACC330173get_impl*
 Result := NeedDefaultPopupMenu;
//#UC END# *482B05B9011C_482ACC330173get_impl*
//#UC START# *482B05B9011C_482ACC330173get_var*
//#UC END# *482B05B9011C_482ACC330173get_var*
//#UC START# *482B05B9011C_482ACC330173set_impl*
 NeedDefaultPopupMenu := aValue;
//#UC END# *482B05B9011C_482ACC330173set_impl*
//#UC START# *482B05B9011C_482ACC330173set_var*
//#UC END# *482B05B9011C_482ACC330173set_var*
//#UC START# *482B0717028A_482ACC330173_impl*
 Allow := true;
//#UC END# *482B0717028A_482ACC330173_impl*
//#UC START# *482B0717028A_482ACC330173_var*
//#UC END# *482B0717028A_482ACC330173_var*
//#UC START# *482B085701B9_482ACC330173_impl*
 Assert(false);
//#UC END# *482B085701B9_482ACC330173_impl*
//#UC START# *482B085701B9_482ACC330173_var*
//#UC END# *482B085701B9_482ACC330173_var*
//#UC START# *482B086F037D_482ACC330173_impl*
 Select(ev_stDocument);
//#UC END# *482B086F037D_482ACC330173_impl*
//#UC START# *482B086F037D_482ACC330173_var*
//#UC END# *482B086F037D_482ACC330173_var*
//#UC START# *482B089803E1_482ACC330173_impl*
 Assert(false);
//#UC END# *482B089803E1_482ACC330173_impl*
//#UC START# *482B089803E1_482ACC330173_var*
//#UC END# *482B089803E1_482ACC330173_var*
//#UC START# *482B099502B9_482ACC330173_impl*
 Processor.UndoBuffer.Clear;
//#UC END# *482B099502B9_482ACC330173_impl*
//#UC START# *482B099502B9_482ACC330173_var*
//#UC END# *482B099502B9_482ACC330173_var*
//#UC START# *482B0F1103D7_482ACC330173_impl*
 TextSource.DocumentContainer; // - создаём документ, если его не было
 {$IfNDef DesignTimeLibrary}
 Assert(TextSource.DocumentContainer.DocumentInfo.TextParaCount <= 1);
 {$EndIf  DesignTimeLibrary}
//#UC END# *482B0F1103D7_482ACC330173_impl*
//#UC START# *482B0F1103D7_482ACC330173_var*
//#UC END# *482B0F1103D7_482ACC330173_var*
//#UC START# *482B1CF0026A_482ACC330173get_impl*
 Result := TextSource.DocumentContainer.DocumentLimits.BruttoCharLimit - f_MaxLengthDelta;
//#UC END# *482B1CF0026A_482ACC330173get_impl*
//#UC START# *482B1CF0026A_482ACC330173get_var*
//#UC END# *482B1CF0026A_482ACC330173get_var*
//#UC START# *482B1CF0026A_482ACC330173set_impl*
 f_MaxLengthDelta := TextSource.DocumentContainer.DocumentInfo.BruttoCharCount - TextLen;
 TextSource.DocumentContainer.DocumentLimits.BruttoCharLimit := aValue + f_MaxLengthDelta;
//#UC END# *482B1CF0026A_482ACC330173set_impl*
//#UC START# *482B1CF0026A_482ACC330173set_var*
//#UC END# *482B1CF0026A_482ACC330173set_var*
//#UC START# *482BFA340236_482ACC330173_impl*
 NotifyPosChange;
 inherited;
//#UC END# *482BFA340236_482ACC330173_impl*
//#UC START# *482BFA340236_482ACC330173_var*
//#UC END# *482BFA340236_482ACC330173_var*
//#UC START# *482C0BBD01CF_482ACC330173_impl*
 Allow := true;
//#UC END# *482C0BBD01CF_482ACC330173_impl*
//#UC START# *482C0BBD01CF_482ACC330173_var*
//#UC END# *482C0BBD01CF_482ACC330173_var*
//#UC START# *482C0DBB00B8_482ACC330173_impl*
 l_X := CaretX;
 l_A := true;
 TriggerCaretXChangedEvent(l_X, l_A);
//#UC END# *482C0DBB00B8_482ACC330173_impl*
//#UC START# *482C0DBB00B8_482ACC330173_var*
var
 l_X : Integer;
 l_A : Boolean;
//#UC END# *482C0DBB00B8_482ACC330173_var*
//#UC START# *482C26D6006A_482ACC330173_impl*
 if (FRestrictOnTextChange = 0) then
  Change;
 inherited;
//#UC END# *482C26D6006A_482ACC330173_impl*
//#UC START# *482C26D6006A_482ACC330173_var*
//#UC END# *482C26D6006A_482ACC330173_var*
//#UC START# *482C706503AF_482ACC330173_impl*
 Result := {ETAOIN_SHRDLU_l3CrtIC.DP2LP(PointX(RMargin)).X + }l3Epsilon * 6;
//#UC END# *482C706503AF_482ACC330173_impl*
//#UC START# *482C706503AF_482ACC330173_var*
//#UC END# *482C706503AF_482ACC330173_var*
//#UC START# *483445F4032B_482ACC330173_impl*
 CheckDoc;
 //PlainText := false;
 // - не надо это, иначе шрифт увеличивается - http://mdp.garant.ru/pages/viewpage.action?pageId=119474414
 with Document.AsObject.Child[0].Attr[k2_tiSegments] do
  if IsValid then
  begin
   if rAtomEx([k2_tiChildren, k2_tiHandle, Ord(ev_slMistakes)], @l_Layer).IsValid then
    DeleteChild(l_Layer);
  end;//IsValid
// Временная заточка по насильному переформатированию - как излечиться автоматический вызов Invalidate при удалении
// сегмента надо будет убрать. К-105578765
 Document.Para[0].Invalidate([nev_spSegments]);
 if (aWords <> nil) then
  for l_Index := 0 to Pred(aWords.Count) do
   Find(TevStrictWordSearcher.Make(l3Str(aWords[l_Index])), TevStyleReplacer.MakeForStyleID(ev_saMistake), [ev_soGlobal, ev_soUseInternalCursor, ev_soReplaceAll, ev_soNoProgress]);
 Find(TevStyleSearcher.Make(ev_saMistake, Ord(ev_slMistakes), ev_spSegments), nil, [ev_soGlobal, ev_soNoException, ev_soNoSelection, ev_soNoProgress]);
 // - встаём на первую опечатку  
//#UC END# *483445F4032B_482ACC330173_impl*
//#UC START# *483445F4032B_482ACC330173_var*
var
 l_Index : Integer;
 l_Layer : Integer;
//#UC END# *483445F4032B_482ACC330173_var*
//#UC START# *483D718E0143_482ACC330173_impl*
 Result := inherited GetTopMargin;
(* l_DocHeight := DocumentFullHeight;
 Result := ((Height - l_DocHeight) div 2) - 1;
 if (Result < 0) then
  Result := 0;*)
//#UC END# *483D718E0143_482ACC330173_impl*
//#UC START# *483D718E0143_482ACC330173_var*
(*var
 l_DocHeight : Integer;*)
//#UC END# *483D718E0143_482ACC330173_var*
//#UC START# *48735C4A03C3_482ACC330173_impl*
 Result := inherited DefineProvideOperations - [potPrint];
//#UC END# *48735C4A03C3_482ACC330173_impl*
//#UC START# *48735C4A03C3_482ACC330173_var*
//#UC END# *48735C4A03C3_482ACC330173_var*
//#UC START# *4875FDAD037A_482ACC330173_impl*
 Result := false;
//#UC END# *4875FDAD037A_482ACC330173_impl*
//#UC START# *4875FDAD037A_482ACC330173_var*
//#UC END# *4875FDAD037A_482ACC330173_var*
//#UC START# *489845790346_482ACC330173_impl*
 Result := inherited GetInfoCanvas;
 if (Result <> nil) then
  Result.PasswordChar := PasswordChar;
//#UC END# *489845790346_482ACC330173_impl*
//#UC START# *489845790346_482ACC330173_var*
//#UC END# *489845790346_482ACC330173_var*
//#UC START# *48998C510192_482ACC330173_impl*
 inherited;
 if (BorderStyle = bsSingle) then
 begin
  GetWindowRect(Handle, l_Rect);
  OffsetRect(l_Rect, -l_Rect.Left, -l_Rect.Top);
  l_DC := GetWindowDC(Handle);
  try
   l_Brush := CreateSolidBrush(ColorToRGB(clBtnShadow));
   try
    FrameRect(l_DC, l_Rect, l_Brush);
   finally
    DeleteObject(l_Brush)
   end;//try..finally
  finally
   ReleaseDC(Handle, l_DC);
  end;//try..finally
 end;//BorderStyle = bsSingle
 Message.Result := 0;
//#UC END# *48998C510192_482ACC330173_impl*
//#UC START# *48998C510192_482ACC330173_var*
var
 l_DC: HDC;
 l_Rect: TRect;
 l_Brush: HBrush;
//#UC END# *48998C510192_482ACC330173_var*
//#UC START# *48C6C044025E_482ACC330173_impl*
(* l_Delta := GetTopMargin;
 if (l_Delta > 0) then
  CN.MoveWindowOrg(l3SPoint(0, -l_Delta));*)
 // - это уже делается в TevCustomEdit.Paint
 CN.PasswordChar := PasswordChar;
 inherited;
 f_HyperlinkStart := -1;
 f_HyperlinkFinish := -1;
 l_H := CEmptyHint;
 if not l3IsNil(l_H) AND
    (TextSource.DocumentContainer.DocumentInfo.NettoCharCount <= 0) then
 begin
  if (Selection <> nil) then
   l_State := Selection.Caret.Hidden
  else
   l_State := False;
  try
   if (Selection <> nil) then
    Selection.Caret.Hidden := true;

   CN.DrawEnabled := true;
   CN.Font.ForeColor := EmptyHintColor;
   l_Delta := (Height - CN.LP2DP(CN.TextExtent(l_H.AsWStr)).Y) div 2;
   with Document do
    if (AsObject.ChildrenCount > 0) then
     l_X := CN.LP2DP(l3PointX(AsObject.Child[0].IntA[k2_tiFirstIndent])).X
    else
     l_X := 0;
   CN.WindowOrg := l3Point0;
   l_E := CN.LP2DP(CN.StringOut(CN.DP2LP(l3SPoint(l_X, l_Delta)), l_H.AsWStr));
   if not l3IsNil(f_CEmptyHintAdding) then
   begin
    l_E.X := l_E.X + CN.LP2DP(CN.StringOut(CN.DP2LP(l3SPoint(l_E.X + l_X, l_Delta)), str_CEmptiHintAddingSeparator.AsWStr)).X;
    CN.Font.Underline := true;
    f_HyperlinkStart := l_E.X + l_X;
    l_Rect := Rect(l_E.X + l_X, l_Delta, Width - l_Delta, Height - l_Delta);

    CN.DrawText(Tl3PCharLenPrim(f_CEmptyHintAdding.AsWStr),
                l_Rect,
                DT_CALCRECT);

    l_NeedEllipsis := l_Rect.Right > Width - l_Delta;
    if l_NeedEllipsis then
    begin
     l_Rect.Right := Width - l_Delta;

     CN.DrawText(Tl3PCharLenPrim(f_CEmptyHintAdding.AsWStr),
                 l_Rect,
                 DT_END_ELLIPSIS);
    end else
     CN.DrawText(Tl3PCharLenPrim(f_CEmptyHintAdding.AsWStr),
                 l_Rect,
                 0);

    f_HyperlinkFinish := l_Rect.Right;
   end;//not l3IsNil(f_CEmptyHintAdding)
  finally
   if (Selection <> nil) then
    Selection.Caret.Hidden := l_State;
  end;
 end;//not l3IsNil(l_H)
//#UC END# *48C6C044025E_482ACC330173_impl*
//#UC START# *48C6C044025E_482ACC330173_var*
var
 l_H : Il3CString;
 l_Delta : Integer;
 l_X     : Integer;
 l_E     : Tl3SPoint;
 l_Rect  : TRect;
 l_State,
 l_NeedEllipsis : Boolean;
//#UC END# *48C6C044025E_482ACC330173_var*
//#UC START# *48E1F1B1033C_482ACC330173_impl*
 NotifyPosChange;
 inherited;
//#UC END# *48E1F1B1033C_482ACC330173_impl*
//#UC START# *48E1F1B1033C_482ACC330173_var*
//#UC END# *48E1F1B1033C_482ACC330173_var*
//#UC START# *48E22AD302CE_482ACC330173_impl*
 Result := false;
//#UC END# *48E22AD302CE_482ACC330173_impl*
//#UC START# *48E22AD302CE_482ACC330173_var*
//#UC END# *48E22AD302CE_482ACC330173_var*
//#UC START# *4E7880C30037_482ACC330173set_impl*
 f_CEmptyHintAdding := aValue;
 Invalidate;
//#UC END# *4E7880C30037_482ACC330173set_impl*
//#UC START# *4E7880C30037_482ACC330173set_var*
//#UC END# *4E7880C30037_482ACC330173set_var*
//#UC START# *4E788DB902F9_482ACC330173_impl*
 inherited;
 if not l3IsNil(f_CEmptyHintAdding) then
  if (aPoint.X >= f_HyperlinkStart) AND
     (aPoint.X <= f_HyperlinkFinish) then
   theCursor := crHandPoint;
//#UC END# *4E788DB902F9_482ACC330173_impl*
//#UC START# *4E788DB902F9_482ACC330173_var*
//#UC END# *4E788DB902F9_482ACC330173_var*
//#UC START# *4E7896270076_482ACC330173_impl*
 if (Button = mbLeft) then
  if Assigned(f_OnEmptyAddingClick) then
   if not l3IsNil(f_CEmptyHintAdding) then
    if (X >= f_HyperlinkStart) AND
       (X <= f_HyperlinkFinish) then
     f_OnEmptyAddingClick(Self);
 inherited;
//#UC END# *4E7896270076_482ACC330173_impl*
//#UC START# *4E7896270076_482ACC330173_var*
//#UC END# *4E7896270076_482ACC330173_var*
