//#UC START# *484CD009023D_48492FC0029Dimpl_uses*
//#UC END# *484CD009023D_48492FC0029Dimpl_uses*
//#UC START# *484CD009023D_48492FC0029Dintf_uses*
//#UC END# *484CD009023D_48492FC0029Dintf_uses*
//#UC START# *484CD009023D_ext:FileName
W:\common\GenScripts\ME_484CD009023D.pas
//#UC END# *484CD009023D_ext:FileName
//#UC START# *484CD009023Dtt*

procedure CreateStandardTextStyles(StyleType: Tk2Type);
var
 SI : TevStyleInterfaceEx;
 S  : TStream;
begin
 SI := TevStyleInterfaceEx.Create;
 try
  SI.TagType := StyleType;
  S := Tl3ResourceStream.Create(hInstance,
   {$IfDef evMyEditor}
   'MYSTANDARDTEXTSTYLETABLE'
   {$Else  evMyEditor}
   'EVSTANDARDTEXTSTYLETABLE'
   {$EndIf evMyEditor}
  );
  try
   g_InCreateDocumentSchema := true;
   try
    SI.Load(S);
   finally
    g_InCreateDocumentSchema := false;
   end;//try..finally
  finally
   FreeAndNil(S);
  end;//try..finally
 finally
  FreeAndNil(SI);
 end;//try..finally
end;

procedure BlockHeaderUpdate(const V       : Tk2Values;
                            const aProp   : Tk2Prop;
                            const Context : Ik2Op);
var
 l_NShape : InevObject;
begin
 if V.rTag.IsValid then
 begin
  if (Context = nil) then
  begin
   if V.rTag.QT(InevObject, l_NShape, nil) then
    try
     l_NShape.Invalidate([]);
    finally
     l_NShape := nil;
    end;//try..finally
  end//Context = nil
  else
  begin
   if not Context.InIOProcess then
    if V.rTag.QT(InevObject, l_NShape, Context.Processor) then
     try
      l_NShape.Invalidate([]);
     finally
      l_NShape := nil;
     end;//try..finally
  end;//Context = nil
 end;//V.rTag.IsValid
end;

procedure SubLayerChildType(aParent : Tl3Variant;
                            var theType   : Tk2Type);
begin
 Case aParent.IntA[k2_tiHandle] of
  Ord(ev_sbtBookmark):
   theType := k2_typBookmark;
  Ord(ev_sbtMark):
   theType := k2_typMark;
 end;//Case aParent.IntA[k2_tiHandle]
end;

procedure SBSRowValidateChild(aParent : Tl3Variant;
                              var aChild    : Tl3Variant;
                              var aValid    : Boolean);
var
 l_C : Tl3Variant;
begin
 if not aValid then
 begin
  aValid := aChild.IsKindOf(k2_typTableCell);
  if aValid then
  begin
   l_C := k2_typSBSCell.MakeTag.AsObject;
   l_C.AsObject.AssignTag(aChild);
   l_C.SetRef(aChild);
  end;//aValid
 end;//not aValid
end;

procedure SBSValidateChild(aParent : Tl3Variant;
                           var aChild    : Tl3Variant;
                           var aValid    : Bool);
var
 l_C : Tl3Variant;
begin
 if not aValid then
 begin
  aValid := aChild.IsKindOf(k2_typTableRow);
  if aValid then
  begin
   l_C := k2_typSBSRow.MakeTag.AsObject;
   l_C.AsObject.AssignTag(aChild);
   l_C.SetRef(aChild);
  end;//aValid
 end;//not aValid
end;

//#UC END# *484CD009023Dtt*
//#UC START# *484CD009023Dttimpl*
//#UC END# *484CD009023Dttimpl*
//#UC START# *484CD009023Dttimpl1*
 CreateStandardTextStyles(t_TextStyle);
 t_SubLayer.ArrayProp[k2_tiChildren].OnGetChildTypeForParent := SubLayerChildType;
 // - специально перенесено сюда, чтобы Ak2DocumentSubsLayer не "зацепил".
//#UC END# *484CD009023Dttimpl1*
//#UC START# *484CD009023Dttintf*
{$IfDef DesignTimeLibrary}
 {$R evttStd.Unicode.res evttStd.Unicode.rc}
{$Else DesignTimeLibrary}
 {$IfDef evMyEditor}
  {$R evttStd.My.res evttStd.My.rc}
 {$Else}
  {$IfDef nsTest}
   {$R NemesisStyles.res NemesisStyles.rc}
   //{$R evttStd.Unicode.res evttStd.Unicode.rc}
  {$Else  nsTest}
   {$IfDef Nemesis}
    {$R NemesisStyles.res NemesisStyles.rc}
   {$Else}
    {$R evttStd.Unicode.res evttStd.Unicode.rc}
   {$EndIf}
  {$EndIf nsTest}
 {$EndIf evMyEditor}
{$EndIf DesignTimeLibrary}
//#UC END# *484CD009023Dttintf*
//#UC START# *48567D1900F6atom*
  DefineChildrenPath(t_Sub, [k2_tiSubs, k2_tiChildren,
                             k2_tiHandle, Ord(ev_sbtSub)]);
  DefineChildrenPath(t_Bookmark, [k2_tiSubs, k2_tiChildren,
                                  k2_tiHandle, Ord(ev_sbtBookmark)]);
  DefineChildrenPath(t_Mark, [k2_tiSubs, k2_tiChildren,
                              k2_tiHandle, Ord(ev_sbtMark)]);
//#UC END# *48567D1900F6atom*
//#UC START# *48567D1900F6atom1*
//#UC END# *48567D1900F6atom1*
//#UC START# *48567D5F0064AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.QT(InevObject, l_Para, aContext.Processor) then
  begin
   if not l_Para.IsKindOf(k2_typFormula) then
    l_Para.BoolW[k2_attrCollapsed, aContext] := False;
   l_Para.Invalidate([nev_spExtent]);
  end;
//#UC END# *48567D5F0064AfterChange*
//#UC START# *48567D5F0064var_AfterChange*
var
 l_Para : InevObject;
//#UC END# *48567D5F0064var_AfterChange*
//#UC START# *485680D50229AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.QT(InevObject, l_Para, aContext.Processor) then
   l_Para.Invalidate([]);
//#UC END# *485680D50229AfterChange*
//#UC START# *485680D50229var_AfterChange*
var
 l_Para : InevObject;
//#UC END# *485680D50229var_AfterChange*
//#UC START# *48568328038FAfterChange*
 StyledLeafParaJustificationAfterChange(V, aProp, aContext);
//#UC END# *48568328038FAfterChange*
//#UC START# *48568328038Fvar_AfterChange*
//#UC END# *48568328038Fvar_AfterChange*
//#UC START# *4856834700B0AfterChange*
 StyledLeafParaJustificationAfterChange(V, aProp, aContext);
//#UC END# *4856834700B0AfterChange*
//#UC START# *4856834700B0var_AfterChange*
//#UC END# *4856834700B0var_AfterChange*
//#UC START# *4856835E0282AfterChange*
 StyledLeafParaJustificationAfterChange(V, aProp, aContext);
//#UC END# *4856835E0282AfterChange*
//#UC START# *4856835E0282var_AfterChange*
//#UC END# *4856835E0282var_AfterChange*
//#UC START# *485683750360atom*
  ParamsForClone := l3LongArray([k2_tiStyle,
                                 k2_tiFont,
                                 k2_tiFirstIndent,
                                 k2_tiFirstLineIndent,
                                 k2_tiLeftIndent,
                                 k2_tiRightIndent,
                                 k2_tiSpaceBefore,
                                 k2_tiSpaceAfter,
                                 k2_tiJustification,
                                 k2_tiVisible,
                                 k2_tiFrame,
                                 k2_tiBullet,
                                 k2_tiTabStops,
                                 k2_tiPrintFontSize]);

  t_TextPara_Segments.DefineChildrenPath(t_Hyperlink,
                     [k2_tiChildren,
                      k2_tiHandle, Ord(ev_slHyperlinks)]);
  t_TextPara_Segments.DefineChildrenPath(t_ObjectSegment,
                     [k2_tiChildren,
                      k2_tiHandle, Ord(ev_slObjects)]);
  t_TextPara_Segments.DefineChildrenPath(t_TextSegment,
                     [k2_tiChildren,
                      k2_tiHandle, Ord(ev_slView)]);

  DefineChildrenPath(t_Hyperlink,
                     [k2_tiSegments, k2_tiChildren,
                      k2_tiHandle, Ord(ev_slHyperlinks)]);
  DefineChildrenPath(t_ObjectSegment,
                     [k2_tiSegments, k2_tiChildren,
                      k2_tiHandle, Ord(ev_slObjects)]);
  DefineChildrenPath(t_TextSegment,
                     [k2_tiSegments, k2_tiChildren,
                      k2_tiHandle, Ord(ev_slView)]);
  SetNeedMarkModified([k2_tiLeftIndent,
                       k2_tiRightIndent,
                       k2_tiFirstIndent,
                       k2_tiFirstLineIndent]);
  t_TextPara.Recalc;                     
//#UC END# *485683750360atom*
//#UC START# *485683750360atom1*
//#UC END# *485683750360atom1*
//#UC START# *485784AF0369AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.IsKindOf(k2_typFont) then
   begin
    if g_Para <> nil then
     g_Para.Invalidate([nev_spExtent])
    else
     g_WasSize := True;
    g_Para := nil;
   end
   else
    if V.rTag.QT(InevObject, l_Para, aContext.Processor) then
     if g_WasSize then
     begin
      l_Para.Invalidate([nev_spExtent]);
      g_WasSize := False;
     end
     else
      g_Para := l_Para;
//#UC END# *485784AF0369AfterChange*
//#UC START# *485784AF0369attr*
   Tk2Prop(Tk2TypePrim(AtomType).Prop[k2_tiSize]).AfterChange := TextParaFontAfterChange;
//#UC END# *485784AF0369attr*
//#UC START# *485784AF0369var_AfterChange*
{$WriteableConst On}
const
 g_WasSize : Boolean = false;
 g_Para    : InevObject = nil;
{$WriteableConst Off}
var
 l_Para : InevObject;
//#UC END# *485784AF0369var_AfterChange*
//#UC START# *485787650374childstored*
 if (aChild.ChildrenCount > 0) then
 begin
  H := aChild.IntA[k2_tiHandle];
  Result := (H > Ord(ev_slSuperposition)) AND (H <> Ord(ev_slFound)) AND
            (H <> Ord(ev_slFoundWords)) AND (H <> Ord(ev_slMistakes));
 end//aChild.ChildrenCount > 0
 else
  Result := false; 
//#UC END# *485787650374childstored*
//#UC START# *485787650374var_childstored*
var
 H : Integer;
//#UC END# *485787650374var_childstored*
//#UC START# *4857923F0186atom*
  UndefineProperties([k2_tiPrintFontSize]);
  Recalc;
  ParamsForClone := l3CatLongArray(ParamsForClone, [k2_tiType, k2_tiChecked, k2_tiUpper]);
//#UC END# *4857923F0186atom*
//#UC START# *4857923F0186atom1*
//#UC END# *4857923F0186atom1*
//#UC START# *4857926501CBatom*
  UndefineProperties([k2_tiHeight, k2_tiWidth]);
  Recalc;
//#UC END# *4857926501CBatom*
//#UC START# *4857926501CBatom1*
//#UC END# *4857926501CBatom1*
//#UC START# *4857964E013CAfterChange*
 if (aContext = nil) OR not aContext.InIOProcess then
 begin
  if (aContext <> nil) then
   aContext.MarkModified(V.rTag);
  if not V.rTag.QT(InevObject, l_P) then
   Assert(false);
  l_P.Invalidate([nev_spExtent]);
 end;//Context = nil..
//#UC END# *4857964E013CAfterChange*
//#UC START# *4857964E013Cvar_AfterChange*
var
 l_P : InevObject;
//#UC END# *4857964E013Cvar_AfterChange*
//#UC START# *48579FA203ADstored*
 Result := aTag.BoolA[k2_tiFixedWidth];
//#UC END# *48579FA203ADstored*
//#UC START# *48579FA203ADvar_stored*
//#UC END# *48579FA203ADvar_stored*
//#UC START# *4857B0230374AfterChange*
 if (aContext = nil) OR not aContext.InIOProcess then
 begin
  if (aContext = nil) then
  begin
   if V.rTag.QT(InevPara, l_Para, nil) then
    try
     l_Para.Invalidate([nev_spExtent]);
    finally
     l_Para := nil;
    end;//try..finally
  end//aContext = nil
  else
  begin
   if V.rTag.QT(InevPara, l_Para, aContext.Processor) then
    try
     l_Para.Invalidate([nev_spExtent]);
    finally
     l_Para := nil;
    end;//try..finally
  end;//aContext = nil
  if Supports(aContext, IevSubCache, l_SubCache) then
   try
    l_SubCache.ClearSubs;
   finally
    l_SubCache := nil;
   end;//try..finally
 end;{aContext <> nil..}
//#UC END# *4857B0230374AfterChange*
//#UC START# *4857B0230374stored*
 Result := aTag.Attr[k2_tiStyle].BoolA[k2_attrCollapsable];
//#UC END# *4857B0230374stored*
//#UC START# *4857B0230374var_AfterChange*
var
 l_SubCache : IevSubCache;
 l_Para     : InevPara;
//#UC END# *4857B0230374var_AfterChange*
//#UC START# *4857B0230374var_stored*
//#UC END# *4857B0230374var_stored*
//#UC START# *4857B5260267atom*
  {$IfDef Nemesis}
  Tk2Prop(Prop[k2_tiSpaceBefore]).DefaultValue := l3Inch div 16;
  {$EndIf Nemesis}
  SetNeedMarkModified([k2_tiExternalHandle,
                       k2_tiInternalHandle,
                       k2_tiRelExternalHandle,
                       k2_tiRelInternalHandle,
                       k2_tiInternalVerLink,
                       k2_tiExternalVerLink,

                       k2_tiName,
                       k2_tiShortName,

                       k2_tiPriceLevel,
                       k2_tiPriority,
                       k2_tiType,
                       k2_tiUserType]);

  { устанавливаем порядок }
  SetTagOrder([k2_tiHandle,
               k2_tiInternalHandle,
               k2_tiExternalHandle,
               k2_tiEditableParts,
               k2_tiLanguage,
               k2_tiType,
               k2_tiUserType,
               k2_tiShortName,
               k2_tiName,
               k2_tiNameComment,
               k2_tiComment,
               k2_tiAccGroups,
               k2_tiGroups]);
//#UC END# *4857B5260267atom*
//#UC START# *4857B5260267atom1*
  UndefineProperties([k2_tiSubs, k2_tiType]);
//#UC END# *4857B5260267atom1*
//#UC START# *4857B957011Dattr*
   {$IfNDef evStoreSubsIndex}
   Stored := false;
   {$EndIf  evStoreSubsIndex}
//#UC END# *4857B957011Dattr*
//#UC START# *4857B957011Dchildstored*
 if (aChild.ChildrenCount > 0) then
 begin
  H := aChild.IntA[k2_tiHandle];
  Result := (H = Ord(ev_sbtSub))
            {$IfDef Nemesis}
            OR (H = Ord(ev_sbtBookmark))
            OR (H = Ord(ev_sbtMark))
            {$EndIf Nemesis}
            ;
 end else
  Result := false;
//#UC END# *4857B957011Dchildstored*
//#UC START# *4857B957011Dvar_childstored*
var
 H : Integer;
//#UC END# *4857B957011Dvar_childstored*
//#UC START# *4857BB4B00D0AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess then
 begin
  if aContext.SaveUndo then
   aContext.MarkModified(V.rTag);
 end;//Context <> nil..
//#UC END# *4857BB4B00D0AfterChange*
//#UC START# *4857BB4B00D0var_AfterChange*
//#UC END# *4857BB4B00D0var_AfterChange*
//#UC START# *4857BC220259AfterChange*
 DocumentSpaceAfterAfterChange(V, aProp, aContext);
//#UC END# *4857BC220259AfterChange*
//#UC START# *4857BC220259attr*
   {$IfDef Nemesis}
   DefaultValue := l3NilLong;
   {$Else  Nemesis}
   DefaultValue := def_inchPaperLeft;
   {$EndIf Nemesis}
//#UC END# *4857BC220259attr*
//#UC START# *4857BC220259var_AfterChange*
//#UC END# *4857BC220259var_AfterChange*
//#UC START# *4857BCC3024AAfterChange*
 DocumentSpaceAfterAfterChange(V, aProp, aContext);
//#UC END# *4857BCC3024AAfterChange*
//#UC START# *4857BCC3024Aattr*
   {$IfDef Nemesis}
   DefaultValue := l3NilLong;
   {$Else  Nemesis}
   DefaultValue := def_inchPaperRight;
   {$EndIf Nemesis}
//#UC END# *4857BCC3024Aattr*
//#UC START# *4857BCC3024Avar_AfterChange*
//#UC END# *4857BCC3024Avar_AfterChange*
//#UC START# *4857BDF9035AAfterChange*
 DocumentSpaceAfterAfterChange(V, aProp, aContext);
//#UC END# *4857BDF9035AAfterChange*
//#UC START# *4857BDF9035Avar_AfterChange*
//#UC END# *4857BDF9035Avar_AfterChange*
//#UC START# *4857CB7D0340atom*
  Tk2Prop(Prop[k2_tiShortName]).OrderKey := Tk2Prop(Prop[k2_tiUserType]).OrderKey.Succ;
//#UC END# *4857CB7D0340atom*
//#UC START# *4857CB7D0340atom1*
  UndefineProperties([k2_tiShortName]);
//#UC END# *4857CB7D0340atom1*
//#UC START# *4857CE0D022EAfterChange*
 DocumentSpaceAfterAfterChange(V, aProp, aContext);
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.QT(InevObject, l_Para, aContext.Processor) then
   l_Para.Invalidate([nev_spExtent]);
//#UC END# *4857CE0D022EAfterChange*
//#UC START# *4857CE0D022Evar_AfterChange*
var
 l_Para : InevObject;
//#UC END# *4857CE0D022Evar_AfterChange*
//#UC START# *4857CEC601BBAfterChange*
 DocumentSpaceAfterAfterChange(V, aProp, aContext);
//#UC END# *4857CEC601BBAfterChange*
//#UC START# *4857CEC601BBvar_AfterChange*
//#UC END# *4857CEC601BBvar_AfterChange*
//#UC START# *4857CEED02A3AfterChange*
 DocumentSpaceAfterAfterChange(V, aProp, aContext);
//#UC END# *4857CEED02A3AfterChange*
//#UC START# *4857CEED02A3var_AfterChange*
//#UC END# *4857CEED02A3var_AfterChange*
//#UC START# *4857CF8C0050AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.QT(InevParaList, l_ParaList, aContext.Processor) then
   l_ParaList.Invalidate([nev_spCellExtent]);
//#UC END# *4857CF8C0050AfterChange*
//#UC START# *4857CF8C0050var_AfterChange*
var
 l_ParaList : InevParaList;
//#UC END# *4857CF8C0050var_AfterChange*
//#UC START# *4857D0750068AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.QT(InevParaList, l_ParaList, aContext.Processor) then
   l_ParaList.Invalidate([]);
//#UC END# *4857D0750068AfterChange*
//#UC START# *4857D0750068var_AfterChange*
var
 l_ParaList : InevParaList;
//#UC END# *4857D0750068var_AfterChange*
//#UC START# *4857D48E00F4atom*
  SetTagOrder([k2_tiOldNSRC, k2_tiZoom]);
//#UC END# *4857D48E00F4atom*
//#UC START# *4857D48E00F4atom1*
//#UC END# *4857D48E00F4atom1*
//#UC START# *4857DF07030Dattr*
   OnValidateChild := SBSRowValidateChild;
//#UC END# *4857DF07030Dattr*
//#UC START# *4857E2C00005attr*
   OnValidateChild := SBSValidateChild;
//#UC END# *4857E2C00005attr*
//#UC START# *4857EA97011Datom*
  ParamsForClone := l3CatLongArray(ParamsForClone, [k2_tiDefaultText, k2_tiOperations]);
//#UC END# *4857EA97011Datom*
//#UC START# *4857EA97011Datom1*
//#UC END# *4857EA97011Datom1*
//#UC START# *4858022A024DAfterChange*
 if (aContext = nil) OR not aContext.InIOProcess then
 begin
  if not V.rTag.QT(InevObject, l_P) then
   Assert(false);
  l_P.Invalidate([nev_spExtent, nev_spSegments]);
 end;//aContext = nil..
//#UC END# *4858022A024DAfterChange*
//#UC START# *4858022A024Dvar_AfterChange*
var
 l_P : InevObject;
//#UC END# *4858022A024Dvar_AfterChange*
//#UC START# *485803DA0295AfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *485803DA0295AfterChange*
//#UC START# *485803DA0295var_AfterChange*
//#UC END# *485803DA0295var_AfterChange*
//#UC START# *4858041B00D6AfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *4858041B00D6AfterChange*
//#UC START# *4858041B00D6var_AfterChange*
//#UC END# *4858041B00D6var_AfterChange*
//#UC START# *4858042A01B7AfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *4858042A01B7AfterChange*
//#UC START# *4858042A01B7var_AfterChange*
//#UC END# *4858042A01B7var_AfterChange*
//#UC START# *4858047602E3AfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *4858047602E3AfterChange*
//#UC START# *4858047602E3var_AfterChange*
//#UC END# *4858047602E3var_AfterChange*
//#UC START# *485804B3009EAfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *485804B3009EAfterChange*
//#UC START# *485804B3009Estored*
 if evInPara(aTag, k2_typReqGroup, l_ReqGroup) then
  Result := l_ReqGroup.BoolA[k2_tiChecked]
 else
  Result := true; 
//#UC END# *485804B3009Estored*
//#UC START# *485804B3009Evar_AfterChange*
//#UC END# *485804B3009Evar_AfterChange*
//#UC START# *485804B3009Evar_stored*
var
 l_ReqGroup : Tl3Variant;
//#UC END# *485804B3009Evar_stored*
//#UC START# *485804D403A4AfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *485804D403A4AfterChange*
//#UC START# *485804D403A4var_AfterChange*
//#UC END# *485804D403A4var_AfterChange*
//#UC START# *485804F501E9AfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *485804F501E9AfterChange*
//#UC START# *485804F501E9var_AfterChange*
//#UC END# *485804F501E9var_AfterChange*
//#UC START# *485810AE033CAfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *485810AE033CAfterChange*
//#UC START# *485810AE033Cvar_AfterChange*
//#UC END# *485810AE033Cvar_AfterChange*
//#UC START# *485810C80074AfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *485810C80074AfterChange*
//#UC START# *485810C80074var_AfterChange*
//#UC END# *485810C80074var_AfterChange*
//#UC START# *485811030276AfterChange*
 BlockHeaderUpdate(V, aProp, aContext);
//#UC END# *485811030276AfterChange*
//#UC START# *485811030276var_AfterChange*
//#UC END# *485811030276var_AfterChange*
//#UC START# *4858116B0355atom*
  t_BitmapPara.Recalc;
//#UC END# *4858116B0355atom*
//#UC START# *4858116B0355atom1*
//#UC END# *4858116B0355atom1*
//#UC START# *4858158D0254AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.QT(InevObject, l_Para, aContext.Processor) then
   l_Para.Invalidate([]);
//#UC END# *4858158D0254AfterChange*
//#UC START# *4858158D0254var_AfterChange*
var
 l_Para : InevObject;
//#UC END# *4858158D0254var_AfterChange*
//#UC START# *486D23B00263AfterChange*
 StyledLeafParaJustificationAfterChange(V, aProp, aContext);
//#UC END# *486D23B00263AfterChange*
//#UC START# *486D23B00263var_AfterChange*
//#UC END# *486D23B00263var_AfterChange*
//#UC START# *49A403F203B7AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess then
  UnformatDocument(V.rTag.Owner, aContext);
//#UC END# *49A403F203B7AfterChange*
//#UC START# *49A403F203B7var_AfterChange*

 procedure UnformatDocument(const aTagFromDocument: Tl3Variant;
   const anOpPack: InevOp);
 var
  l_TagOwner : Tl3Variant;
  l_Para     : InevPara;
 begin//UnformatDocument
  anOpPack.MarkModified(aTagFromDocument.AsObject);
  l_TagOwner := aTagFromDocument;
  while l_TagOwner.IsValid do
  begin
   if l_TagOwner.IsKindOf(k2_typDocument) then
   begin
    if l_TagOwner.QT(InevPara, l_Para) then 
     l_Para.Invalidate([nev_spExtent]);
    Break;
   end//l_TagOwner.IsKindOf(k2_typDocument)
   else
    l_TagOwner := l_TagOwner.Owner;
  end;//l_TagOwner.IsValid
 end;//UnformatDocument

//#UC END# *49A403F203B7var_AfterChange*
//#UC START# *49A4040D0395AfterChange*
 PagePropertiesOrientationAfterChange(V, aProp, aContext);
//#UC END# *49A4040D0395AfterChange*
//#UC START# *49A4040D0395var_AfterChange*
//#UC END# *49A4040D0395var_AfterChange*
//#UC START# *4CD0018201EBAfterChange*
 if V.rTag.IsValid then
  if V.rTag.QT(IevReq, l_Req) then
   try
    l_Button := l_Req.FirstField.FindButton(ev_btLogical);
    if Supports(l_Button, IevEditorStateButton, l_StateBtn) then
     l_StateBtn.CurrentIndex := l_StateBtn.ImageIndex + V.rNew.AsLong;
   finally
    l_Req := nil;
   end;//try..finally
//#UC END# *4CD0018201EBAfterChange*
//#UC START# *4CD0018201EBvar_AfterChange*
var
 l_Req      : IevReq;
 l_Button   : IevEditorControlButton;
 l_StateBtn : IevEditorStateButton;
//#UC END# *4CD0018201EBvar_AfterChange*
//#UC START# *4FBB8CF301A4AfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.QT(InevObject, l_Para, aContext.Processor) then
   l_Para.Invalidate([nev_spExtent]);
//#UC END# *4FBB8CF301A4AfterChange*
//#UC START# *4FBB8CF301A4var_AfterChange*
var
 l_Para : InevObject;
//#UC END# *4FBB8CF301A4var_AfterChange*
//#UC START# *52B12C2D003DAfterChange*
 if (aContext <> nil) AND not aContext.InIOProcess AND V.rTag.IsValid then
  if V.rTag.QT(InevObject, l_Para, aContext.Processor) then
   l_Para.Invalidate([]);
//#UC END# *52B12C2D003DAfterChange*
//#UC START# *52B12C2D003Dvar_AfterChange*
var
 l_Para : InevObject;
//#UC END# *52B12C2D003Dvar_AfterChange*
