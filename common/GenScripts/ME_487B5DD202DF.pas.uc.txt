//#UC START# *479731C50290_487B5DD202DF_impl*
 FoundBlock := nil;
 inherited;
//#UC END# *479731C50290_487B5DD202DF_impl*
//#UC START# *479731C50290_487B5DD202DF_var*
//#UC END# *479731C50290_487B5DD202DF_var*
//#UC START# *487B5DD202DF_ext:FileName
w:\common\components\gui\Garant\Everest\nevSelection.pas
//#UC END# *487B5DD202DF_ext:FileName
//#UC START# *48E252D40298_487B5DD202DF_impl*
 Result := FoundBlock;
 if (Result = nil) then
  Result := inherited DoGetBlock(aDocument);
//#UC END# *48E252D40298_487B5DD202DF_impl*
//#UC START# *48E252D40298_487B5DD202DF_var*
//#UC END# *48E252D40298_487B5DD202DF_var*
//#UC START# *48E271FC0130_487B5DD202DF_impl*
 if (FoundBlock <> nil) then
  Result := FoundBlock.Contains(View, C)
 else
  Result := inherited GetContains(C);
//#UC END# *48E271FC0130_487B5DD202DF_impl*
//#UC START# *48E271FC0130_487B5DD202DF_var*
//#UC END# *48E271FC0130_487B5DD202DF_var*
//#UC START# *48E276B10286_487B5DD202DF_impl*
 FreeCursor(f_Mouse);
 FoundBlock := nil;
 inherited;
//#UC END# *48E276B10286_487B5DD202DF_impl*
//#UC START# *48E276B10286_487B5DD202DF_var*
//#UC END# *48E276B10286_487B5DD202DF_var*
//#UC START# *48E3723E0107_487B5DD202DFget_impl*
 Result := (FoundBlock = nil);
 if Result then
  Result := inherited pm_GetCollapsed;
//#UC END# *48E3723E0107_487B5DD202DFget_impl*
//#UC START# *48E3723E0107_487B5DD202DFget_var*
//#UC END# *48E3723E0107_487B5DD202DFget_var*
//#UC START# *48E38E83007A_487B5DD202DF_impl*
 inherited AfterProcessCommand;
 FoundBlock := nil;
//#UC END# *48E38E83007A_487B5DD202DF_impl*
//#UC START# *48E38E83007A_487B5DD202DF_var*
//#UC END# *48E38E83007A_487B5DD202DF_var*
//#UC START# *48E3A5C203E1_487B5DD202DF_impl*
 f_FoundBlock := nil;
//#UC END# *48E3A5C203E1_487B5DD202DF_impl*
//#UC START# *48E3A5C203E1_487B5DD202DF_var*
//#UC END# *48E3A5C203E1_487B5DD202DF_var*
//#UC START# *48E3A5E503CD_487B5DD202DFget_impl*
 if (View = nil) then
  Result := nil
 else
 begin
  Result := CheckCursor(f_Mouse);
  Result.AssignPoint(View, View.PointByPt(View.MousePos));
 end;//View = nil
//#UC END# *48E3A5E503CD_487B5DD202DFget_impl*
//#UC START# *48E3A5E503CD_487B5DD202DFget_var*
//#UC END# *48E3A5E503CD_487B5DD202DFget_var*
//#UC START# *48E3A614017E_487B5DD202DFset_impl*
 if not l3IEQ(f_FoundBlock, aValue) then
 begin
 f_FoundBlock := aValue;
  if Assigned(View) and Assigned(View.Control) then
  begin
   if (f_FoundBlock = nil) then
   // - этой проверкой чиним CQ 26553
    View.Control.ViewArea.Invalidate
   else
    View.Control.UpdateCaretAndInvalidate;
  end;//Assigned(View)..
 end;//not l3IEQ(f_FoundBlock, aBlock)
//#UC END# *48E3A614017E_487B5DD202DFset_impl*
//#UC START# *48E3A614017E_487B5DD202DFset_var*
//#UC END# *48E3A614017E_487B5DD202DFset_var*
//#UC START# *48E3A6260063_487B5DD202DF_impl*
 if (StartMark <> nil) AND (FinishMark <> nil) then
 begin
  if (aCursor = nil) then
   l_Cursor := Cursor
  else
   l_Cursor := aCursor;
  l_Pack := Processor.StartOp(ev_msgMove);
  try
   if Start then
   begin
    (*case aTarget of
     ev_stChar : StartMark.Assign(l_Cursor);
     else *)
     begin
      StartMark.AssignPoint(View, l_Cursor);
      if (evSelectBrackets[aTarget].Open <> -1) then
       StartMark.Move(View, evSelectBrackets[aTarget].Open, l_Pack);
      FinishMark.AssignPoint(View, l_Cursor);
      if (evSelectBrackets[aTarget].Close <> -1) then
       FinishMark.Move(View, evSelectBrackets[aTarget].Close, l_Pack);
      AddBlock(StartMark, FinishMark);
     end;//else
    (*end;//case aTarget*)
    {Start}
   end
   else
   begin
    (*case aTarget of
     ev_stChar : AddBlock(StartMark, aCursor);
     else *)
     begin
      C1 := aCursor.ClonePoint(View);
      try
       if (C1.Compare(StartMark) < 0) then
       begin
        C1.Move(View, evSelectBrackets[aTarget].Open, l_Pack);
        AddBlock(C1, FinishMark);
       end//C1.Compare(StartMark) < 0
       else
       begin
        C1.Move(View, evSelectBrackets[aTarget].Close, l_Pack);
        AddBlock(StartMark, C1);
       end;//C1.Compare(StartMark) < 0
      finally
       FreeCursor(C1);
      end;//try..finally
     end;//else
    (*end;//case aTarget*)
   end;//Start
  finally
   l_Pack := nil;
  end;//try..finally
 end;//(StartMark <> nil) AND (FinishMark <> nil)
//#UC END# *48E3A6260063_487B5DD202DF_impl*
//#UC START# *48E3A6260063_487B5DD202DF_var*
var
 C1       : InevBasePoint;
 l_Pack   : InevOp;
 l_Cursor : InevBasePoint;
//#UC END# *48E3A6260063_487B5DD202DF_var*
