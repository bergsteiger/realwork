//#UC START# *479731C50290_48E229CC03DF_impl*
 fl_ForeignHotSpotMove := ev_fhsmNone;
 f_ClickCursor := nil;
 f_ForeignHotSpot := nil;
 inherited;
//#UC END# *479731C50290_48E229CC03DF_impl*
//#UC START# *479731C50290_48E229CC03DF_var*
//#UC END# *479731C50290_48E229CC03DF_var*
//#UC START# *48E229CC03DF_ext:FileName
w:\common\components\gui\Garant\Everest\evEditorWindowHotSpot.pas
//#UC END# *48E229CC03DF_ext:FileName
//#UC START# *48E2622A03C4_48E229CC03DF_impl*
 if (f_ForeignHotSpot <> nil) then
  f_ForeignHotSpot.HitTest(aView, aState, theInfo);
 with (Owner As TevCustomEditorWindow) do
  if (f_ForeignHotSpot = nil) then
   DoHitTest(Self, aState, theInfo)
  else
   DoHitTest(f_ForeignHotSpot, aState, theInfo);
//#UC END# *48E2622A03C4_48E229CC03DF_impl*
//#UC START# *48E2622A03C4_48E229CC03DF_var*
//#UC END# *48E2622A03C4_48E229CC03DF_var*
//#UC START# *48E263CD01BD_48E229CC03DF_impl*
 Case aButton of
  l3_mbLeft:
  begin
   Case anAction of
    l3_maDown:
     Result := LButtonDown(aView, Keys, Effect);
    l3_maUp:
     Result := LButtonUp(aView, Keys);
    l3_maDouble:
     Result := LButtonDoubleClick(aView, Keys, Effect);
    else
     Result := false;
   end;//Case anAction
  end;//l3_mbLeft
  l3_mbRight:
  begin
   Case anAction of
    l3_maDown:
     Result := RButtonDown(aView, Keys);
    l3_maUp:
     Result := RButtonUp(aView, Keys);
    l3_maDouble:
     Result := false;
    else
     Result := false;
   end;//Case anAction
  end;//l3_mbRight
  l3_mbMiddle:
  begin
   Case anAction of
    l3_maDown:
     Result := MButtonDown(aView, Keys);
    l3_maUp:
     Result := MButtonUp(aView, Keys);
    l3_maDouble:
     Result := false;
    else
     Result := false;
   end;//Case anAction
  end;//l3_mbMiddle
  else
   Result := false;
 end;//Case aButton
//#UC END# *48E263CD01BD_48E229CC03DF_impl*
//#UC START# *48E263CD01BD_48E229CC03DF_var*
//#UC END# *48E263CD01BD_48E229CC03DF_var*
//#UC START# *48E266730188_48E229CC03DF_impl*
 if (fl_ForeignHotSpotMove = ev_fhsmEnabled) then
  Result := f_ForeignHotSpot.MouseMove(aView, Keys)
 else
 begin 
  Result := DoMouseMove(aView, Keys);
  aView.Control.ViewArea.Update;
 end;//fl_ForeignHotSpotMove
//#UC END# *48E266730188_48E229CC03DF_impl*
//#UC START# *48E266730188_48E229CC03DF_var*
//#UC END# *48E266730188_48E229CC03DF_var*
//#UC START# *48E266AA00A4_48E229CC03DF_impl*
 if (f_ForeignHotSpot = nil) or f_ForeignHotSpot.CanDrag then
  if TryDragDrop(Keys) then
  begin
   Result := false;
   Exit;
  end;//TryDragDrop(aKeys)
 Result := true;
 if (f_ForeignHotSpot = nil) then
  l_HS := Self
 else
  l_HS := f_ForeignHotSpot;
 with (Owner As TevCustomEditorWindow) do
  if Assigned(OnMouseAction) then
   if OnMouseAction(l_HS, l3_mbLeft, l3_maDown, Keys.rKeys, Effect.rNeedAsyncLoop) then
    Exit;
 if (f_ForeignHotSpot <> nil) AND
    f_ForeignHotSpot.LButtonDown(aView, Keys, Effect) then
  fl_ForeignHotSpotMove := ev_fhsmEnabled
 else
 begin
  fl_ForeignHotSpotMove := ev_fhsmDisabled;
  with (Owner As TevCustomEditorWindow).Selection do
   if Collapsed then
    l_CursorBefore := Cursor.ClonePoint(aView)
   else
    l_CursorBefore := StartMark.ClonePoint(aView);
  try
   Effect.rExtendingSelection := ([ssCtrl, ssShift, ssAlt] * Keys.rKeys) = [ssShift];
   Result := DoLButtonDown(aView, Keys, Effect);
   if Effect.rExtendingSelection then
    ClickCursor.AssignPoint(aView, l_CursorBefore);
  finally
   l_CursorBefore := nil;
  end;//try..finally 
 end;//f_ForeignHotSpot <> nil..
//#UC END# *48E266AA00A4_48E229CC03DF_impl*
//#UC START# *48E266AA00A4_48E229CC03DF_var*
var
 l_CursorBefore : InevBasePoint;
 l_HS           : IevHotSpot;
//#UC END# *48E266AA00A4_48E229CC03DF_var*
//#UC START# *48E266C70128_48E229CC03DF_impl*
 Result := true;
 if (fl_ForeignHotSpotMove <> ev_fhsmDisabled) AND
    (f_ForeignHotSpot <> nil) then
  try
   Result := f_ForeignHotSpot.LButtonUp(aView, Keys);
  except
   on EevReadOnly do;
  end//try..except
 else
 begin
  l_Unselect := true;
  if not Keys.rInMove then
  begin
   if (StartMark <> nil) then   
   begin
    if CheckCursorPos(aView) then
    begin
(*     l_Editor := Owner As TevCustomEditorWindow;
     if (l_Editor.Selection <> nil) AND
        not l_Editor.Selection.Persistent then*)
     // http://mdp.garant.ru/pages/viewpage.action?pageId=227478574
     // - закомментировано, ибо - http://mdp.garant.ru/pages/viewpage.action?pageId=296631959   
      StartMark.AssignPoint(aView, FinishMark);
    end//CheckCursorPos(aView)
    else
     l_Unselect := false;
   end;//StartMark <> nil
  end//not Keys.rInMove
  else
   CheckCursorPos(aView);   
  if not Keys.rInMove then
   if (Owner As TevCustomEditorWindow).CheckMouseUp(Self, Keys) then
    Exit;
  Result := DoLButtonUp(aView, Keys, l_Unselect);
  if not Keys.rInMove then
   with (Owner As TevCustomEditorWindow) do
    if (ev_uwfBlock in UpdateFlags) then
     Invalidate;
 end;//fl_ForeignHotSpotMove
//#UC END# *48E266C70128_48E229CC03DF_impl*
//#UC START# *48E266C70128_48E229CC03DF_var*
var
 l_Unselect : Boolean;  
 l_Editor : TevCustomEditorWindow;
//#UC END# *48E266C70128_48E229CC03DF_var*
//#UC START# *48E266DE026B_48E229CC03DF_impl*
 if (f_ForeignHotSpot = nil) then
  l_HS := Self
 else
  l_HS := f_ForeignHotSpot;
 with (Owner As TevCustomEditorWindow) do
  if Assigned(OnMouseAction) then
   if OnMouseAction(l_HS, l3_mbLeft, l3_maDouble, Keys.rKeys, Effect.rNeedAsyncLoop) then
   begin
    Result := true; 
    Exit;
   end;//OnMouseAction..
 Result := DoLButtonDoubleClick(aView, Keys, Effect);
//#UC END# *48E266DE026B_48E229CC03DF_impl*
//#UC START# *48E266DE026B_48E229CC03DF_var*
var
 l_HS : IevHotSpot;
//#UC END# *48E266DE026B_48E229CC03DF_var*
//#UC START# *48E266FB01FC_48E229CC03DF_impl*
 Result := (f_ForeignHotSpot <> nil) AND
           f_ForeignHotSpot.RButtonDown(aView, Keys);
//#UC END# *48E266FB01FC_48E229CC03DF_impl*
//#UC START# *48E266FB01FC_48E229CC03DF_var*
//#UC END# *48E266FB01FC_48E229CC03DF_var*
//#UC START# *48E267150266_48E229CC03DF_impl*
 Result := (f_ForeignHotSpot <> nil) AND
           f_ForeignHotSpot.RButtonUp(aView, Keys);
//#UC END# *48E267150266_48E229CC03DF_impl*
//#UC START# *48E267150266_48E229CC03DF_var*
//#UC END# *48E267150266_48E229CC03DF_var*
//#UC START# *48E4A900029B_48E229CC03DF_impl*

//#UC END# *48E4A900029B_48E229CC03DF_impl*
//#UC START# *48E4A900029B_48E229CC03DF_var*
//#UC END# *48E4A900029B_48E229CC03DF_var*
//#UC START# *48E4A93300A9_48E229CC03DF_impl*
 InevSelection((Owner As TevCustomEditorWindow).Selection).SelectPt(aPt, false);  
 Result := true;
//#UC END# *48E4A93300A9_48E229CC03DF_impl*
//#UC START# *48E4A93300A9_48E229CC03DF_var*
//#UC END# *48E4A93300A9_48E229CC03DF_var*
//#UC START# *48E4A96000D4_48E229CC03DF_impl*
 Result := True; //Для обычного редактора это не нужно!
//#UC END# *48E4A96000D4_48E229CC03DF_impl*
//#UC START# *48E4A96000D4_48E229CC03DF_var*
//#UC END# *48E4A96000D4_48E229CC03DF_var*
//#UC START# *48E4A976007D_48E229CC03DF_impl*
 Result := true;
 if (f_ForeignHotSpot = nil) OR
    ((ssShift in Keys.rKeys)) OR
    not f_ForeignHotSpot.LButtonDoubleClick(aView, Keys, Effect) then
  if Effect.rAllowAutoSelect then
  (Owner As TevCustomEditorWindow).Select(ev_stWord);
//#UC END# *48E4A976007D_48E229CC03DF_impl*
//#UC START# *48E4A976007D_48E229CC03DF_var*
//#UC END# *48E4A976007D_48E229CC03DF_var*
//#UC START# *48E4A99D02A2_48E229CC03DF_impl*
 Result := true;
 with (Owner As TevCustomEditorWindow) do
 begin
  l_Pack := StartOp(ev_msgMove);
  try
   if (Selection <> nil) then
    with Selection do
    begin
     DoBeforeSelection(aView);
     InevSelection(Selection).SelectPt(aKeys.rPoint, false);
     if (f_ClickCursor = nil) then
      f_ClickCursor := Cursor.ClonePoint(aView)
     else
      ClickCursor.AssignPoint(aView, Cursor);
     {if not !Double then StartMark.Assign(Cursor);}
    end;//with Selection
  finally
   l_Pack := nil;
  end;//try..finally
 end;//with (Owner As TevCustomEditorWindow)
//#UC END# *48E4A99D02A2_48E229CC03DF_impl*
//#UC START# *48E4A99D02A2_48E229CC03DF_var*
var
 l_Pack : InevOp;
//#UC END# *48E4A99D02A2_48E229CC03DF_var*
//#UC START# *48EF2DAB031D_48E229CC03DF_impl*
 inherited Create(anOwner);
 f_ForeignHotSpot := aForeignHotSpot;
//#UC END# *48EF2DAB031D_48E229CC03DF_impl*
//#UC START# *48EF2DAB031D_48E229CC03DF_var*
//#UC END# *48EF2DAB031D_48E229CC03DF_var*
//#UC START# *48EF2EB0009F_48E229CC03DFget_impl*
 Result := (Owner As TevCustomEditorWindow).Selection.StartMark;
//#UC END# *48EF2EB0009F_48E229CC03DFget_impl*
//#UC START# *48EF2EB0009F_48E229CC03DFget_var*
//#UC END# *48EF2EB0009F_48E229CC03DFget_var*
//#UC START# *48EF2EE00254_48E229CC03DFget_impl*
 Result := (Owner As TevCustomEditorWindow).Selection.FinishMark;
//#UC END# *48EF2EE00254_48E229CC03DFget_impl*
//#UC START# *48EF2EE00254_48E229CC03DFget_var*
//#UC END# *48EF2EE00254_48E229CC03DFget_var*
//#UC START# *48EF36A30277_48E229CC03DF_impl*
 Result := true;
 TranslatePt(aView, aKeys);
 AlignMarks(aView, aKeys);
 ExtendBlock(aView);
//#UC END# *48EF36A30277_48E229CC03DF_impl*
//#UC START# *48EF36A30277_48E229CC03DF_var*
//#UC END# *48EF36A30277_48E229CC03DF_var*
//#UC START# *48EF36CC0039_48E229CC03DF_impl*
 Result := false;
 if (aKeys.rInitialClick = afw_ckSingle) then
  with (Owner As TevCustomEditorWindow) do
  begin
   l_Pack := StartOp(ev_msgMove);
   try
    with Selection do
    begin
     // http://mdp.garant.ru/pages/viewpage.action?pageId=297714497
     if (ssCtrl in aKeys.rKeys) and (not DisableDragAndDropSupport) then
     begin
      if Supports(SaveBlock(Mouse), InevRange,  l_Block) then
       try
        if GetAvaliableFormats(l_Formats) then
         try
          l_DataObject := TevDataObject.Create(l_Block.Data, l_Formats, MakeExportFilters(false, false));
          try
           if (DoDragDrop(l_DataObject,
                          DROPEFFECT_Copy or DROPEFFECT_Move,
                          l_OutEffect) = DRAGDROP_S_DROP) then
           begin
           end;//DoDragDrop
           Result := true;
           Exit;
          finally
           l3Free(l_DataObject);
          end;//try..finally
         finally
          l_Formats := nil;
         end;//try..finally
       finally
        l_Block := nil;
       end;//try..finally
     end;//ssCtrl in aKeys.rKeys
    end;//with Selection
   finally
    l_Pack := nil;
   end;//try..finally
  end;//with (Owner As TevCustomEditorWindow)
//#UC END# *48EF36CC0039_48E229CC03DF_impl*
//#UC START# *48EF36CC0039_48E229CC03DF_var*
var
 l_Pack       : InevOp;
 l_DataObject : TevDataObject;
 l_Block      : InevRange;
 l_OutEffect  : Integer;
 l_Formats    : Tl3ClipboardFormats;
//#UC END# *48EF36CC0039_48E229CC03DF_var*
//#UC START# *48EF37DF00C3_48E229CC03DF_impl*
 with (Owner As TevCustomEditorWindow).Selection do
 begin
  if NeedSelectCursor(aView, aKeys.rPoint) then
  begin
   if aKeys.rInMove then
   begin
    if (ClickCursor = nil) then          
    begin
     {$IFDEF Archi}
     f_ClickCursor := Cursor.ClonePoint(aView);
     {$ELSE}
     f_ClickCursor := Start.ClonePoint(aView);
     {$ENDIF Archi}
     FinishMark.AssignPoint(aView, Finish);
    end//ClickCursor = nil
    else
     FinishMark.AssignPoint(aView, Cursor);
    StartMark.AssignPoint(aView, ClickCursor);
   end//aKeys.rInMove
   else
   begin
    if (ClickCursor = nil) then
     f_ClickCursor := Cursor.ClonePoint(aView)
    else
     ClickCursor.AssignPoint(aView, Cursor);
   end;//aKeys.rInMove
  end;//NeedSelectCursor(aPt) 
 end;//with (Owner As TevCustomEditorWindow)
//#UC END# *48EF37DF00C3_48E229CC03DF_impl*
//#UC START# *48EF37DF00C3_48E229CC03DF_var*
//#UC END# *48EF37DF00C3_48E229CC03DF_var*
//#UC START# *48EF380C026E_48E229CC03DF_impl*
 Case aKeys.rInitialClick of
  afw_ckSingle:
  begin
   if not (Owner As TevCustomEditorWindow).NeedAlignMarksOnSingleClick then
    Exit;
   l_S := ev_ocWordStart;
   l_F := ev_ocWordFinish;
  end;//afw_ckSingle, afw_ckDouble
  afw_ckDouble:
  begin
   l_S := ev_ocWordStart;
   l_F := ev_ocWordFinish;
  end;//afw_ckSingle, afw_ckDouble
  afw_ckTriple:
  begin
   l_S := ev_ocParaHome;
   l_F := ev_ocParaEnd;
  end;//afw_ckTriple
  else
   Exit;
 end;//Case aKeys.rInitialClick
 if (StartMark.Compare(FinishMark) < 0) then
 begin
  StartMark.Move(aView, l_S);
  FinishMark.Move(aView, l_F);
 end
 else
 begin
  StartMark.Move(aView, l_F);
  FinishMark.Move(aView, l_S);
 end;//StartMark.Compare(FinishMark) < 0
//#UC END# *48EF380C026E_48E229CC03DF_impl*
//#UC START# *48EF380C026E_48E229CC03DF_var*
var
 l_S, l_F : Integer;  
//#UC END# *48EF380C026E_48E229CC03DF_var*
//#UC START# *48EF385503A8_48E229CC03DF_impl*
 DoExtendBlock(aView, (Owner As TevCustomEditorWindow).Selection);
//#UC END# *48EF385503A8_48E229CC03DF_impl*
//#UC START# *48EF385503A8_48E229CC03DF_var*
//#UC END# *48EF385503A8_48E229CC03DF_var*
//#UC START# *48EF3A860139_48E229CC03DF_impl*
 aSelection.AddBlock(StartMark, FinishMark);
//#UC END# *48EF3A860139_48E229CC03DF_impl*
//#UC START# *48EF3A860139_48E229CC03DF_var*
//#UC END# *48EF3A860139_48E229CC03DF_var*
//#UC START# *48EF3C6E0276_48E229CC03DF_impl*
 Result := true;
 l_Editor := Owner As TevCustomEditorWindow;
 with l_Editor do
 begin
  if not aKeys.rInMove AND
     aNeedUnselect AND (aKeys.rInitialClick = afw_ckSingle) AND
     (Selection <> nil) AND not Selection.Persistent then
   InevSelection(Selection).Unselect;
  DoUpdateBlock;
  DoParaChange;
 end;//with l_Editor
//#UC END# *48EF3C6E0276_48E229CC03DF_impl*
//#UC START# *48EF3C6E0276_48E229CC03DF_var*
var
 l_Editor : TevCustomEditorWindow;
//#UC END# *48EF3C6E0276_48E229CC03DF_var*
//#UC START# *48EF3D680254_48E229CC03DF_impl*
 with (Owner As TevCustomEditorWindow) do
 begin
  Result := StartOp(ev_msgMove);
  theSelection := Selection.Use;
 end;//with (Owner As TevCustomEditorWindow)
//#UC END# *48EF3D680254_48E229CC03DF_impl*
//#UC START# *48EF3D680254_48E229CC03DF_var*
//#UC END# *48EF3D680254_48E229CC03DF_var*
//#UC START# *49DB4675025E_48E229CC03DF_impl*
 Result := (f_ForeignHotSpot <> nil) AND
           f_ForeignHotSpot.MButtonDown(aView, Keys);
//#UC END# *49DB4675025E_48E229CC03DF_impl*
//#UC START# *49DB4675025E_48E229CC03DF_var*
//#UC END# *49DB4675025E_48E229CC03DF_var*
//#UC START# *49DB468302A5_48E229CC03DF_impl*
 Result := (f_ForeignHotSpot <> nil) AND
           f_ForeignHotSpot.MButtonUp(aView, Keys);
//#UC END# *49DB468302A5_48E229CC03DF_impl*
//#UC START# *49DB468302A5_48E229CC03DF_var*
//#UC END# *49DB468302A5_48E229CC03DF_var*
//#UC START# *4A60B23E00C3_48E229CC03DF_impl*
 if IID.EQ(Il3TagRef) then
  Result.SetNoInterface
 else
  Result := inherited COMQueryInterface(IID, Obj);
 if Result.Fail AND (f_ForeignHotSpot <> nil) then
  Result := Tl3HResult_C(f_ForeignHotSpot.QueryInterface(IID.IID, Obj));
//#UC END# *4A60B23E00C3_48E229CC03DF_impl*
//#UC START# *4A60B23E00C3_48E229CC03DF_var*
//#UC END# *4A60B23E00C3_48E229CC03DF_var*
//#UC START# *4DD28E040057_48E229CC03DFget_impl*
 if (f_Owner = nil) then
  Result := nil
 else
  Result := ((Il3Tool(f_Owner) As Il3ObjectWrap).GetObject As TPersistent);
//#UC END# *4DD28E040057_48E229CC03DFget_impl*
//#UC START# *4DD28E040057_48E229CC03DFget_var*
//#UC END# *4DD28E040057_48E229CC03DFget_var*
//#UC START# *4ECCD6840014_48E229CC03DF_impl*
 Result := True;
//#UC END# *4ECCD6840014_48E229CC03DF_impl*
//#UC START# *4ECCD6840014_48E229CC03DF_var*
//#UC END# *4ECCD6840014_48E229CC03DF_var*
