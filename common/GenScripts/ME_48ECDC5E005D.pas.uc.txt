//#UC START# *47C68E0C02E2_48ECDC5E005D_impl*
 Ass := false;
 pNF := @Result;
 IterateF(evL2TSA(@AddChildFont));
//#UC END# *47C68E0C02E2_48ECDC5E005D_impl*
//#UC START# *47C68E0C02E2_48ECDC5E005D_var*
var
 NF1 : InevFontPrim;
 pNF : ^InevFontPrim;
 Ass : Boolean;
 NF  : InevFontPrim absolute Result;

 function AddChildFont(const aChild: InevRange; Index: Integer): Boolean;
 begin//AddChildFont
  Result := false;
  try
   if (Stop <> nil) AND (Stop^ > 1) then Exit;
   pNF^ := aChild.Formatting.GetFont(aView, aMap.InfoForChild(aChild.Obj^), Stop);
   if (Stop <> nil) AND (Stop^ > 1) then Exit;
   if (NF <> nil) then
   begin
    if not Ass then
     pNF := @NF1
    else
    if NF.SubFont(pNF^) then
     Exit;
   end;//(NF <> nil)
   if not afw.InOp then
    afw.ProcessMessages;
  finally
   if Ass then
    NF1 := nil
   else
   if (NF <> nil) then
    Ass := true;
  end;//try..finally
  Result := true;
 end;//AddChildFont

//#UC END# *47C68E0C02E2_48ECDC5E005D_var*
//#UC START# *47C68E3402A5_48ECDC5E005D_impl*
 Result := k2NullTag;
 Ass := false;
 IterateF(evL2TSA(@AddChildStyle));
//#UC END# *47C68E3402A5_48ECDC5E005D_impl*
//#UC START# *47C68E3402A5_48ECDC5E005D_var*
var
 ResultStyle : Tl3Variant absolute Result;
 Ass         : Boolean;

 function AddChildStyle(const aChild: InevRange; anIndex: Integer): Boolean;
 var
  St : Tl3Variant;
 begin//AddChildStyle
  Result := false;
  if (Stop <> nil) AND (Stop^ > 1) then Exit;
  St := aChild.Formatting.GetStyle(Stop);
  if (Stop <> nil) AND (Stop^ > 1) then Exit;
  if (St = nil) OR St.IsNull then
  begin
   ResultStyle := k2NullTag;
   Exit;
  end//St = nil
  else
  if Ass then
  begin
   if not St.IsSame(ResultStyle) then
   begin
    ResultStyle := k2NullTag;
    Exit;
   end;//not St.IsSame(ResultStyle)
  end//Ass
  else
  begin
   ResultStyle := St;
   Ass := true;
  end;//Ass
  if not afw.InOp then
   afw.ProcessMessages;
  Result := true;
 end;//AddChildStyle

//#UC END# *47C68E3402A5_48ECDC5E005D_var*
//#UC START# *47C68E3D0279_48ECDC5E005D_impl*
 Result := Self;
//#UC END# *47C68E3D0279_48ECDC5E005D_impl*
//#UC START# *47C68E3D0279_48ECDC5E005D_var*
//#UC END# *47C68E3D0279_48ECDC5E005D_var*
//#UC START# *47C690130239_48ECDC5E005D_impl*
 Result := false;
 IterateF(evL2TSA(@_DoChild));
//#UC END# *47C690130239_48ECDC5E005D_impl*
//#UC START# *47C690130239_48ECDC5E005D_var*

 function _DoChild(const aBlock: InevRange; aBlockIndex: Integer): Boolean;
 var
  l_F : InevDataFormattingModify;
 begin//_DoChild
  Result := true;
  l_F := aBlock.Formatting.Modify(aView);
  if (l_F <> nil) AND l_F.SetAtom(aView, anIndex, aValue, anOp) then
   SetAtom := true;
 end;//_DoChild

//#UC END# *47C690130239_48ECDC5E005D_var*
//#UC START# *47C6902A0263_48ECDC5E005D_impl*
 Result := false;
 IterateF(evL2TSA(@_DoChild));
//#UC END# *47C6902A0263_48ECDC5E005D_impl*
//#UC START# *47C6902A0263_48ECDC5E005D_var*

 function _DoChild(const aBlock: InevRange; aBlockIndex: Integer): Boolean;
 var
  l_F : InevDataFormattingModify;
 begin//_DoChild
  Result := true;
  l_F := aBlock.Formatting.Modify(aView);
  if (l_F <> nil) AND l_F.ChangeParam(aView, aMarker, aValue, anOp) then
   ChangeParam := true;
 end;//_DoChild

//#UC END# *47C6902A0263_48ECDC5E005D_var*
//#UC START# *47C690400067_48ECDC5E005D_impl*
 Result := false;
 IterateF(evL2TSA(@_DoChild));
//#UC END# *47C690400067_48ECDC5E005D_impl*
//#UC START# *47C690400067_48ECDC5E005D_var*

 function _DoChild(const aBlock: InevRange; aBlockIndex: Integer): Boolean;
 var
  l_F : InevDataFormattingModify;
 begin//_DoChild
  Result := true;
  l_F := aBlock.Formatting.Modify(nil);
  if (l_F <> nil) AND l_F.DeleteHyperlink(anOp) then
   DeleteHyperlink := true;
 end;//_DoChild

//#UC END# *47C690400067_48ECDC5E005D_var*
//#UC START# *47C6904C01B8_48ECDC5E005D_impl*
 Result := false;
 IterateF(evL2TSA(@_DoChild));
//#UC END# *47C6904C01B8_48ECDC5E005D_impl*
//#UC START# *47C6904C01B8_48ECDC5E005D_var*

 function _DoChild(const aBlock: InevRange; aBlockIndex: Integer): Boolean;
 var
  l_F : InevDataFormattingModify;
 begin//_DoChild
  Result := true;
  l_F := aBlock.Formatting.Modify(nil);
  if (l_F <> nil) AND l_F.DeleteSegments(anOp) then
   DeleteSegments := true;
 end;//_DoChild

//#UC END# *47C6904C01B8_48ECDC5E005D_var*
//#UC START# *48DCAFCF0379_48ECDC5E005D_impl*
 Result := false;
 IterateF(evL2TSA(@_DoChild));
//#UC END# *48DCAFCF0379_48ECDC5E005D_impl*
//#UC START# *48DCAFCF0379_48ECDC5E005D_var*

 function _DoChild(const aBlock: InevRange; aBlockIndex: Integer): Boolean;
 var
  l_F : InevDataFormattingModify;
 begin//_DoChild
  Result := true;
  l_F := aBlock.Formatting.Modify(aView);
  if (l_F <> nil) AND l_F.AddIndentMarker(aView, aValue, anOpPack) then
   AddIndentMarker := true;
 end;//_DoChild

//#UC END# *48DCAFCF0379_48ECDC5E005D_var*
//#UC START# *48DCB01401C8_48ECDC5E005D_impl*
 Result := false;
 IterateF(evL2TSA(@_DoChild));
//#UC END# *48DCB01401C8_48ECDC5E005D_impl*
//#UC START# *48DCB01401C8_48ECDC5E005D_var*
  
 function _DoChild(const aBlock: InevRange; aBlockIndex: Integer): Boolean;
 var
  l_F : InevDataFormattingModify;
 begin//_DoChild
  Result := true;
  l_F := aBlock.Formatting.Modify(aView);
  if (l_F <> nil) AND l_F.DeleteIndentMarker(aView, anOpPack) then
   DeleteIndentMarker := true;
 end;//_DoChild

//#UC END# *48DCB01401C8_48ECDC5E005D_var*
//#UC START# *48ECD26D01EC_48ECDC5E005D_impl*
 Result := Self;
//#UC END# *48ECD26D01EC_48ECDC5E005D_impl*
//#UC START# *48ECD26D01EC_48ECDC5E005D_var*
//#UC END# *48ECD26D01EC_48ECDC5E005D_var*
