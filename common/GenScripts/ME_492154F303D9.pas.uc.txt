//#UC START# *479731C50290_492154F303D9_impl*
  FreeAndNil(f_SynchroPoint);
  inherited;
//#UC END# *479731C50290_492154F303D9_impl*
//#UC START# *479731C50290_492154F303D9_var*
//#UC END# *479731C50290_492154F303D9_var*
//#UC START# *48089F3701B4_492154F303D9_impl*
  inherited;
  with f_ParamList do
  begin
    Add( ParamType.Create('point_name', 'Имя точки синхронизации') );
    Add( ParamType.Create('timeout', 'Время в течение которого ждем достижения синхроинзации') );
  end;
//#UC END# *48089F3701B4_492154F303D9_impl*
//#UC START# *48089F3701B4_492154F303D9_var*
//#UC END# *48089F3701B4_492154F303D9_var*
//#UC START# *48089F460352_492154F303D9_impl*
  if f_ParamList.ParamByName['timeout'].AsInt = -1 then
    l_TimeOut := $FFFFFFFF // бесконечно
  else
    l_TimeOut := f_ParamList.ParamByName['timeout'].AsInt;
  //
  Logger.Info('Начинаем синхронизацию на точке "%s"', [f_ParamList.ParamByName['point_name'].AsStr]);
  if f_SynchroPoint.Synchronize(l_TimeOut) then
    Logger.Info('Синхронизация прошла успешно')
  else
    Logger.Warning('Не удалось синхронизироваться за отведенное время (%u)', [l_TimeOut]);
//#UC END# *48089F460352_492154F303D9_impl*
//#UC START# *48089F460352_492154F303D9_var*
  var
    l_TimeOut : LongWord;
//#UC END# *48089F460352_492154F303D9_var*
//#UC START# *492154F303D9_ext:FileName
w:\quality\test\garant6x\AdapterTest\Operations\atSynchroPointOperation.pas
//#UC END# *492154F303D9_ext:FileName
//#UC START# *492154F303D9impl_uses*
//#UC END# *492154F303D9impl_uses*
//#UC START# *492188F70140_492154F303D9_impl*
  inherited;
  f_SynchroPoint := TatSynchroPoint.Create( f_ParamList.ParamByName['point_name'].AsStr );
//#UC END# *492188F70140_492154F303D9_impl*
//#UC START# *492188F70140_492154F303D9_var*
//#UC END# *492188F70140_492154F303D9_var*
