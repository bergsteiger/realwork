//#UC START# *477252760154_492182D60225_impl*
 if f_Sleep then
 begin
  f_Sleep := false;
  LoadEditionTree(self, f_Document);
  Result := true;
 end//f_Sleep
 else
  Result := false;
//#UC END# *477252760154_492182D60225_impl*
//#UC START# *477252760154_492182D60225_var*

 procedure LoadEditionTree(const aRoot: Il3Node; const aDocument: IDocument);
 var
  l_RedactionsList : IRedactionInfoList;
  I                : LongInt;
  l_Child          : Il3Node;
  l_Info           : TRedactionInfo;
  l_State          : IDocumentState;
 begin
  if (aDocument <> nil) then
  begin
   aRoot.Changing;
   try
    Case f_OnlyPrevEditions of
     ns_etkPrev:
     begin
      aDocument.GetCurrentState(l_State);
      l_State.GetPrevRedactionsList(l_RedactionsList);
     end;//ns_etkPrev
     ns_etkNext:
     begin
      aDocument.GetCurrentState(l_State);
      l_State.GetCurAndNextRedactionsList(l_RedactionsList);
     end;//ns_etkNext
     else
      aDocument.GetRedactionsList(l_RedactionsList);
    end;//Case f_OnlyPrevEditions
    if (l_RedactionsList <> nil) then
    // - такого вроде быть не должно, но на всякий случай - проверим
     try
      for I := 0 to Pred(l_RedactionsList.Count) do
      begin
       l_RedactionsList.pm_GetItem(I, l_Info);
       l_Child := aRoot.InsertChild(TnsEditionNode.Make(l_Info.rId, l_Info.rActualType));
       l_Child.Text := nsWStr(l_Info.rName);
      end;//for I
     finally
      l_RedactionsList := nil;
     end;//try..finally
   finally
    aRoot.Changed;
   end;
  end;//aDocument <> nil
 end;

//#UC END# *477252760154_492182D60225_var*
//#UC START# *4772528102DF_492182D60225get_impl*
 Result := f_Sleep;
//#UC END# *4772528102DF_492182D60225get_impl*
//#UC START# *4772528102DF_492182D60225get_var*
//#UC END# *4772528102DF_492182D60225get_var*
//#UC START# *479731C50290_492182D60225_impl*
 f_Document := nil;
 f_Sleep := true;
 inherited;
//#UC END# *479731C50290_492182D60225_impl*
//#UC START# *479731C50290_492182D60225_var*
//#UC END# *479731C50290_492182D60225_var*
//#UC START# *47A869D10074_492182D60225_impl*
 l3Set(f_Caption, Value);
//#UC END# *47A869D10074_492182D60225_impl*
//#UC START# *47A869D10074_492182D60225_var*
//#UC END# *47A869D10074_492182D60225_var*
//#UC START# *492182D60225_ext:ParentFileName
w:\garant6x\implementation\Garant\GbaNemesis\Common\nsEditionNodes.pas
//#UC END# *492182D60225_ext:ParentFileName
//#UC START# *4A60B23E00C3_492182D60225_impl*
 if IID.EQ(IDocument) then
 begin
  if (f_Document = nil) then
   Result.SetNoInterface
  else
  begin
   Result.SetOk;
   IDocument(Obj) := f_Document;
  end;//f_Document = nil
 end//IID.EQ(IDocument)
 else
  Result := inherited COMQueryInterface(IID, Obj);
//#UC END# *4A60B23E00C3_492182D60225_impl*
//#UC START# *4A60B23E00C3_492182D60225_var*
//#UC END# *4A60B23E00C3_492182D60225_var*
//#UC START# *4B1CE65700FD_492182D60225set_impl*
 if (aValue <> nil) then
 begin
  if aValue.IsSameDocument(f_Document) then
   f_Document := aValue
  else
   Assert(false,
          'А когда такое может быть? ' +
          'http://mdp.garant.ru/pages/viewpage.action?pageId=316113759&focusedCommentId=321990712#comment-321990712');
 end//aValue <> nil
 else
  Assert(false,
         'А когда такое может быть? ' +
         'http://mdp.garant.ru/pages/viewpage.action?pageId=316113759&focusedCommentId=321990716&#comment-321990716');
//#UC END# *4B1CE65700FD_492182D60225set_impl*
//#UC START# *4B1CE65700FD_492182D60225set_var*
//#UC END# *4B1CE65700FD_492182D60225set_var*
//#UC START# *4B1CE7F6012A_492182D60225_impl*
 Result := TnsEditionNode;
//#UC END# *4B1CE7F6012A_492182D60225_impl*
//#UC START# *4B1CE7F6012A_492182D60225_var*
//#UC END# *4B1CE7F6012A_492182D60225_var*
//#UC START# *4B1CEA1701AC_492182D60225_impl*
 inherited Create(nil, -1, -1);
 f_Document := aDocument;
 f_Sleep := true;
 f_OnlyPrevEditions := aOnlyPrevEditions;
//#UC END# *4B1CEA1701AC_492182D60225_impl*
//#UC START# *4B1CEA1701AC_492182D60225_var*
//#UC END# *4B1CEA1701AC_492182D60225_var*
//#UC START# *4B1CEAD7018E_492182D60225_impl*
 Result := Make(aDocument, ns_etkPrev);
//#UC END# *4B1CEAD7018E_492182D60225_impl*
//#UC START# *4B1CEAD7018E_492182D60225_var*
//#UC END# *4B1CEAD7018E_492182D60225_var*
//#UC START# *4B55B38301EE_492182D60225_impl*
 Result := Make(aDocument, ns_etkNext);
//#UC END# *4B55B38301EE_492182D60225_impl*
//#UC START# *4B55B38301EE_492182D60225_var*
//#UC END# *4B55B38301EE_492182D60225_var*
//#UC START# *4EC3ED650369_492182D60225_impl*
 Create(aDocument, ns_etkAll);
//#UC END# *4EC3ED650369_492182D60225_impl*
//#UC START# *4EC3ED650369_492182D60225_var*
//#UC END# *4EC3ED650369_492182D60225_var*
