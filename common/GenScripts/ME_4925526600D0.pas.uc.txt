//#UC START# *479731C50290_4925526600D0_impl*
 f_ContextMap := nil;
 inherited;
//#UC END# *479731C50290_4925526600D0_impl*
//#UC START# *479731C50290_4925526600D0_var*
//#UC END# *479731C50290_4925526600D0_var*
//#UC START# *47F4C2B9014A_4925526600D0_impl*
 Result := nil;
 // Читаем http://mdp.garant.ru/pages/viewpage.action?pageId=135605187
//#UC END# *47F4C2B9014A_4925526600D0_impl*
//#UC START# *47F4C2B9014A_4925526600D0_var*
//#UC END# *47F4C2B9014A_4925526600D0_var*
//#UC START# *491482DC0216_4925526600D0_impl*
 inherited;
 lp_NotifyCurrentChanged;
//#UC END# *491482DC0216_4925526600D0_impl*
//#UC START# *491482DC0216_4925526600D0_var*

  procedure lp_NotifyCurrentChanged;
  var
   l_Index    : Integer;
   l_Listener : IbsDictionListener;
   l_Item     : IUnknown;
  begin
   if (NotifiedObjList <> nil) and (NotifiedObjList.Count > 0) then
    for l_Index := 0 to Pred(NotifiedObjList.Count) do
    begin
     l_Item := NotifiedObjList.Items[l_Index];
     if Supports(l_Item, IbsDictionListener, l_Listener) and
       (l_Item = l_Listener) then
      with l_Listener do
      begin
       UpdateLanguage((dDiction.DocInfo as IdeDiction).DictLanguage);
       DictionNotify(l_Listener);
      end;//with l_Listener do
    end;//if (NotifiedObjList <> nil)
  end;//lp_NotifyCurrentChanged

//#UC END# *491482DC0216_4925526600D0_var*
//#UC START# *49254515003C_4925526600D0_impl*
 Result := TdeDiction.Make(aDoc, Language, pm_GetContextMap);
//#UC END# *49254515003C_4925526600D0_impl*
//#UC START# *49254515003C_4925526600D0_var*
//#UC END# *49254515003C_4925526600D0_var*
//#UC START# *492546330316_4925526600D0_impl*
 with dDiction do
 begin
  (DocInfo as IdeDiction).DictLanguage := Language;
  // http://mdp.garant.ru/pages/viewpage.action?pageId=382410166
  (DocInfo as IdeDiction).ContextMap := f_ContextMap;
 end;
 inherited;
//#UC END# *492546330316_4925526600D0_impl*
//#UC START# *492546330316_4925526600D0_var*
//#UC END# *492546330316_4925526600D0_var*
//#UC START# *49254FF103A4_4925526600D0get_impl*
 Result := f_Language;
//#UC END# *49254FF103A4_4925526600D0get_impl*
//#UC START# *49254FF103A4_4925526600D0get_var*
//#UC END# *49254FF103A4_4925526600D0get_var*
//#UC START# *49254FF103A4_4925526600D0set_impl*
 f_Language := aValue;
//#UC END# *49254FF103A4_4925526600D0set_impl*
//#UC START# *49254FF103A4_4925526600D0set_var*
//#UC END# *49254FF103A4_4925526600D0set_var*
//#UC START# *492ACF630072_4925526600D0_impl*
 inherited;
 Language := PartData.DictLanguage;
 f_ContextMap := PartData.ContextMap;
//#UC END# *492ACF630072_4925526600D0_impl*
//#UC START# *492ACF630072_4925526600D0_var*
//#UC END# *492ACF630072_4925526600D0_var*
//#UC START# *4A9E6599035A_4925526600D0_impl*
 Result := (ucc_Diction <> nil) and ucc_Diction.IsShowLiteratureList;
//#UC END# *4A9E6599035A_4925526600D0_impl*
//#UC START# *4A9E6599035A_4925526600D0_var*
//#UC END# *4A9E6599035A_4925526600D0_var*
//#UC START# *52D3BECC00A6_4925526600D0get_impl*
 if (f_ContextMap = nil) then
  f_ContextMap := TnsLangToContextMap.Make(nil);
 Result := f_ContextMap;
//#UC END# *52D3BECC00A6_4925526600D0get_impl*
//#UC START# *52D3BECC00A6_4925526600D0get_var*
//#UC END# *52D3BECC00A6_4925526600D0get_var*
//#UC START# *52D3BECC00A6_4925526600D0set_impl*
 f_ContextMap := aValue;
//#UC END# *52D3BECC00A6_4925526600D0set_impl*
//#UC START# *52D3BECC00A6_4925526600D0set_var*
//#UC END# *52D3BECC00A6_4925526600D0set_var*
//#UC START# *55097FF5008E_4925526600D0_impl*
 Result := DefDataAdapter.IsExplanatoryExists;
//#UC END# *55097FF5008E_4925526600D0_impl*
//#UC START# *55097FF5008E_4925526600D0_var*
//#UC END# *55097FF5008E_4925526600D0_var*
//#UC START# *5571EB84007F_4925526600D0get_impl*
 Result := ns_dkDiction; 
//#UC END# *5571EB84007F_4925526600D0get_impl*
//#UC START# *5571EB84007F_4925526600D0get_var*
//#UC END# *5571EB84007F_4925526600D0get_var*
