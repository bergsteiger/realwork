//#UC START# *47F37DF001FE_4939633A025D_impl*
 ChangeDocument(InitialUseCaseData);
//#UC END# *47F37DF001FE_4939633A025D_impl*
//#UC START# *47F37DF001FE_4939633A025D_var*
//#UC END# *47F37DF001FE_4939633A025D_var*
//#UC START# *4925B1EC0100_4939633A025D_impl*
 Result := TdsMedicFirmDocument.Make(Self, DocumentData);
//#UC END# *4925B1EC0100_4939633A025D_impl*
//#UC START# *4925B1EC0100_4939633A025D_var*
//#UC END# *4925B1EC0100_4939633A025D_var*
//#UC START# *4925B7F00156_4939633A025D_impl*
 inherited;
 pm_GetdsDrugListRef.Referred := nil;
//#UC END# *4925B7F00156_4939633A025D_impl*
//#UC START# *4925B7F00156_4939633A025D_var*
//#UC END# *4925B7F00156_4939633A025D_var*
//#UC START# *4925B9370022_4939633A025D_impl*
 if not (pm_GetDocInfo <> nil) or not Assigned(aDoc) or
   (not aDoc.Doc.IsSameView(pm_GetDocInfo.Doc) or
   not aDoc.Pos.EQ(pm_GetDocInfo.Pos)) then
 begin
  SetData.DocInfo := aDoc;
  Result := True;
  ClearAllDS;
  Refresh;
 end
 else
  Result := False;
//#UC END# *4925B9370022_4939633A025D_impl*
//#UC START# *4925B9370022_4939633A025D_var*
//#UC END# *4925B9370022_4939633A025D_var*
//#UC START# *49352CEF0222_4939633A025D_impl*
 if afw.Application.IsInternal then
  Result := inherited GetHasAttributes
 else
  Result := False;
//#UC END# *49352CEF0222_4939633A025D_impl*
//#UC START# *49352CEF0222_4939633A025D_var*
//#UC END# *49352CEF0222_4939633A025D_var*
//#UC START# *4937AC23020B_4939633A025D_impl*
 with pm_GetdsDrugListRef do
  if IsEmpty then
  begin
   SetIfNeedMakeNo(vcm_nmForce);
   Refresh;
  end;//IsEmpty
//#UC END# *4937AC23020B_4939633A025D_impl*
//#UC START# *4937AC23020B_4939633A025D_var*
//#UC END# *4937AC23020B_4939633A025D_var*
//#UC START# *493964C6039A_4939633A025D_impl*
 Result := true;
//#UC END# *493964C6039A_4939633A025D_impl*
//#UC START# *493964C6039A_4939633A025D_var*
//#UC END# *493964C6039A_4939633A025D_var*
//#UC START# *500D3D150007_4939633A025Darea_impl*
 Result := TdsDrugList.Make(Self, TdeList.Make(lp_DrugList));
//#UC END# *500D3D150007_4939633A025Darea_impl*
//#UC START# *500D3D150007_4939633A025Darea_var*

 function lp_DrugList: IDynList;
 var
  l_DrugList: ICatalogBase;
 begin
  if (pm_GetDocInfo <> nil) and Assigned(pm_GetDocInfo.Doc) then
   try
    pm_GetDocInfo.Doc.GetDrugList(l_DrugList);
   except
    on ECanNotFindData do
     l_DrugList := nil;
   end//try..except
  else
   l_DrugList := nil;
  try
   Supports(l_DrugList, IDynList, Result);
  finally
   l_DrugList := nil;
  end;{try..finally}
 end;//lp_SimilarDocsList

//#UC END# *500D3D150007_4939633A025Darea_var*
//#UC START# *500D3D150007_4939633A025Dget_need*
     AND (NeedMake <> vcm_nmNo)
     AND NeedMakeDrugList   
   // - условие создания ViewArea
//#UC END# *500D3D150007_4939633A025Dget_need*
//#UC START# *500D3D150007_4939633A025Dget_var*
//#UC END# *500D3D150007_4939633A025Dget_var*
