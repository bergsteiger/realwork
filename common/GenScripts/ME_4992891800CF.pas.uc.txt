//#UC START# *479731C50290_4992891800CF_impl*
 f_TipsTree := nil;
 f_CurrentNode := nil;
 if f_DontShow <> afw.Settings.LoadBoolean(pi_DayTips_DontShowAtStart,
                                           dv_DayTips_DontShowAtStart) then
  afw.Settings.SaveBoolean(pi_DayTips_DontShowAtStart, f_DontShow, dv_DayTips_DontShowAtStart);
 inherited;
//#UC END# *479731C50290_4992891800CF_impl*
//#UC START# *479731C50290_4992891800CF_var*
//#UC END# *479731C50290_4992891800CF_var*
//#UC START# *47EA4E9002C6_4992891800CF_impl*
 f_CurrentNode := nil;
 inherited;
//#UC END# *47EA4E9002C6_4992891800CF_impl*
//#UC START# *47EA4E9002C6_4992891800CF_var*
//#UC END# *47EA4E9002C6_4992891800CF_var*
//#UC START# *4991C74701F8_4992891800CFget_impl*
 if Assigned(f_CurrentNode) then
  Result := nsCStr(f_CurrentNode.Text)
 else
  Result := nil;
//#UC END# *4991C74701F8_4992891800CFget_impl*
//#UC START# *4991C74701F8_4992891800CFget_var*
//#UC END# *4991C74701F8_4992891800CFget_var*
//#UC START# *4991C75C00D5_4992891800CFget_impl*
 Result := f_DontShow;
//#UC END# *4991C75C00D5_4992891800CFget_impl*
//#UC START# *4991C75C00D5_4992891800CFget_var*
//#UC END# *4991C75C00D5_4992891800CFget_var*
//#UC START# *4991C75C00D5_4992891800CFset_impl*
 f_DontShow := aValue;
//#UC END# *4991C75C00D5_4992891800CFset_impl*
//#UC START# *4991C75C00D5_4992891800CFset_var*
//#UC END# *4991C75C00D5_4992891800CFset_var*
//#UC START# *4991C7680235_4992891800CF_impl*
 if Assigned(f_CurrentNode) then
 begin
  if f_CurrentNode.IsLast then
   f_CurrentNode := f_TipsTree.RootNode.Child
  else
   f_CurrentNode := f_CurrentNode.Next;
 end;
//#UC END# *4991C7680235_4992891800CF_impl*
//#UC START# *4991C7680235_4992891800CF_var*
//#UC END# *4991C7680235_4992891800CF_var*
//#UC START# *4991C76E02ED_4992891800CF_impl*
 if Assigned(f_CurrentNode) then
 begin
  if f_CurrentNode.IsFirst then
   while not f_CurrentNode.IsLast do
    f_CurrentNode := f_CurrentNode.Next
  else
   f_CurrentNode := f_CurrentNode.Prev;
 end;
//#UC END# *4991C76E02ED_4992891800CF_impl*
//#UC START# *4991C76E02ED_4992891800CF_var*
//#UC END# *4991C76E02ED_4992891800CF_var*
//#UC START# *4991C77601E9_4992891800CF_impl*
 if Supports(f_CurrentNode, INodeBase, l_Node) then
 Begin
  l_Node.GetEntity(l_Entity);
  if Supports(l_Entity, IDocument, l_Doc) then
   TvcmModulesFactories.OpenDocument(TdeTips.Make(l_Doc), nil);
 end;
//#UC END# *4991C77601E9_4992891800CF_impl*
//#UC START# *4991C77601E9_4992891800CF_var*
var
 l_Node   : INodeBase;
 l_Entity : IEntityBase;
 l_Doc    : IDocument;
//#UC END# *4991C77601E9_4992891800CF_var*
//#UC START# *4991C78200E7_4992891800CF_impl*
 nsDoShellExecute(nsCStr(ciitAdviceOfDay));
//#UC END# *4991C78200E7_4992891800CF_impl*
//#UC START# *4991C78200E7_4992891800CF_var*
//#UC END# *4991C78200E7_4992891800CF_var*
//#UC START# *49928A97027C_4992891800CF_impl*
 inherited Create;
 with defDataAdapter.NativeAdapter.MakeTipsManager do
 begin
  GetTipsTreeRoot(l_Root);
  GetCurrentTip(l_Path);
  Assert(Assigned(l_Path),'Undefined tips path');
 end;
 f_TipsTree := TnsTreeStruct.Make(l_Root, False);
 l_Root.GetNodeByPath(l_Path, l_Temp);
 if Assigned(l_Temp) then
  f_CurrentNode := TnsINodeWrap.Make(l_Temp);
 f_DontShow := afw.Settings.LoadBoolean(pi_DayTips_DontShowAtStart,
                                        dv_DayTips_DontShowAtStart);
//#UC END# *49928A97027C_4992891800CF_impl*
//#UC START# *49928A97027C_4992891800CF_var*
var
 l_Root: INodeBase;
 l_Path: INodeIndexPath;
 l_Temp: INodeBase;
//#UC END# *49928A97027C_4992891800CF_var*
//#UC START# *4993F1F80032_4992891800CF_impl*
 if defDataAdapter.NativeAdapter.MakeTipsManager.IsExist then
  Result := MakePrim
 else
  Result := nil; 
//#UC END# *4993F1F80032_4992891800CF_impl*
//#UC START# *4993F1F80032_4992891800CF_var*
//#UC END# *4993F1F80032_4992891800CF_var*
