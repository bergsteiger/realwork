//#UC START# *499C264700BD_ext:FileName
w:\garant6x\implementation\Garant\GbaNemesis\nsDocumentsList_p.pas
//#UC END# *499C264700BD_ext:FileName
//#UC START# *499C2F7C0251_499C264700BDget_impl*
  Result := High(Result);
  l_ListEntry := GetLEIFromTTV(Self);
  if (l_ListEntry <> nil) then
   Result := l_ListEntry.GetPosition;
//#UC END# *499C2F7C0251_499C264700BDget_impl*
//#UC START# *499C2F7C0251_499C264700BDget_var*
var
 l_ListEntry : IListEntryInfo;
//#UC END# *499C2F7C0251_499C264700BDget_var*
//#UC START# *499C32550095_499C264700BDget_impl*
  Result := '';
  l_ListEntry := GetLEIFromTTV(Self);
  if (l_ListEntry <> nil) then
   case l_ListEntry.GetType of
    PT_SUB      : Result := 'PT_SUB';
    PT_PARA     : Result := 'PT_PARA';
    PT_BOOKMARK : Result := 'PT_BOOKMARK';
   end;//case l_ListEntry.GetType
//#UC END# *499C32550095_499C264700BDget_impl*
//#UC START# *499C32550095_499C264700BDget_var*
var
 l_ListEntry : IListEntryInfo;
//#UC END# *499C32550095_499C264700BDget_var*
//#UC START# *499C34860092_499C264700BDget_impl*
  Result := High(Result);
  l_ListEntry := GetLEIFromTTV(Self);
  if (l_ListEntry <> nil) then
   Result := l_ListEntry.GetRelevance;
//#UC END# *499C34860092_499C264700BDget_impl*
//#UC START# *499C34860092_499C264700BDget_var*
var
 l_ListEntry : IListEntryInfo;
//#UC END# *499C34860092_499C264700BDget_var*
//#UC START# *499C369D02F6_499C264700BDget_impl*
  Result := High(Result);
  l_ListEntry := GetLEIFromTTV(Self);
  if (l_ListEntry <> nil) then
  begin
   l_ListEntry.GetDoc(l_Document);
   Result := l_Document.GetInternalId;
  end;//l_ListEntry <> nil
//#UC END# *499C369D02F6_499C264700BDget_impl*
//#UC START# *499C369D02F6_499C264700BDget_var*
var
 l_ListEntry : IListEntryInfo;
 l_Document : IDocument;
//#UC END# *499C369D02F6_499C264700BDget_var*
//#UC START# *499C444C01B8_499C264700BD_impl*
  Result := -1;
  l_ListEntry := GetLEIFromTTV(Self);
  if (l_ListEntry <> nil) then
  begin
   l_ListEntry.GetDoc(l_Document);
   if (l_Document <> nil) then
   begin
    // получаем номер саба
    if (l_ListEntry.GetType = PT_PARA) then
     Result := GetSubIDByParaID( l_Document, l_ListEntry.GetPosition )
    else
    if (l_ListEntry.GetType = PT_SUB) then
     Result := l_ListEntry.GetPosition;
   end; // if
  end; // if
//#UC END# *499C444C01B8_499C264700BD_impl*
//#UC START# *499C444C01B8_499C264700BD_var*
var
 l_ListEntry : IListEntryInfo;
 l_Document : IDocument;
//#UC END# *499C444C01B8_499C264700BD_var*
//#UC START# *499C49B50383_499C264700BD_impl*
  try
    Result := '';
    if (DocNumbers = '') then Exit;
    // разбиваем в список строк
    inStrList := TStringList.Create;
    Split(';', DocNumbers, inStrList);
    // конвертируем массив строк в массив номеров документов
    j := 0;
    for i := 0 to inStrList.Count-1 do
      if (inStrList[i] <> '') then // а то мало ли какая фигня попадется...
      begin
        SetLength(l_docNumbers, j+1);
        l_docNumbers[j] := StrToInt64(inStrList[i]);
        Inc(j);
      end;
    FreeAndNil(inStrList);
    // готовимся к переборке списка
    nodesProcessed := 0;
    startTime := GetTickCount;
    msgOnDesktop := TMessageOnDesktop.Create;
    lowDocNumbers := Low(l_docNumbers);
    highDocNumbers := High(l_docNumbers);
    //
    l_CurrNode := GetNode(0);
    // перебираем, если есть что
    if (l_CurrNode <> nil) then
      while (true) do
      begin
        // получаем IListEntryInfo
        l_ListEntry := GetLEIFromNode(l_CurrNode);
        if NOT (l_ListEntry <> nil) then
          break; // ошибка
        // получаем номер документа
        l_ListEntry.GetDoc(l_Document);
        currDocNumber := l_Document.GetInternalId;

        // проверяем, а не является ли номер документа нужным нам
        for i := lowDocNumbers to highDocNumbers do
          if (currDocNumber = l_docNumbers[i]) then
          begin // является
            // добавляем в ответ в формате номер_документа:индекс_ноды
            Result := Result + IntToStr(currDocNumber) + ':' + IntToStr(l_CurrNode.IndexInParent) + ';';
            // урезаем массив, чтобы быстрее искалось
            for j := i to highDocNumbers-1 do
              l_docNumbers[j] := l_docNumbers[j+1];
            SetLength(l_docNumbers, Length(l_docNumbers)-1);
            //
            lowDocNumbers := Low(l_docNumbers);
            highDocNumbers := High(l_docNumbers);
            break;
          end;
        if (highDocNumbers = -1) then
          break; // массив с номерами документов кончился, искать больше нечего

        isLastNode := l_CurrNode.IsLast;

        // рисуем информацию о ходе поиска
        Inc(nodesProcessed);
        if (isDrawDbgInfo AND ( ( (nodesProcessed mod 64) = 0) OR isLastNode)) then
          msgOnDesktop.DrawMessage('Обработано нод: ' + IntToStr(nodesProcessed) + '; скорость: ' + IntToStr(1000*nodesProcessed div (GetTickCount - startTime + 1)) + ' нод/сек.');

        if (NOT isLastNode) AND (nodesProcessed < maxDocsToCheck) then
          l_CurrNode := l_CurrNode.Next
        else
          break; // список документов закончился
      end;
  finally
    FreeAndNil(msgOnDesktop);
    FreeAndNil(inStrList);
  end;
//#UC END# *499C49B50383_499C264700BD_impl*
//#UC START# *499C49B50383_499C264700BD_var*
var
  l_CurrNode : Il3SimpleNode;
  l_ListEntry : IListEntryInfo;
  l_Document : IDocument;

  currDocNumber, nodesProcessed : Cardinal;
  msgOnDesktop : TMessageOnDesktop;
  startTime: Cardinal;
  inStrList : TStringList;
  l_docNumbers : array of Cardinal;
  i, j, lowDocNumbers, highDocNumbers : Integer;
  isLastNode : Boolean;
//#UC END# *499C49B50383_499C264700BD_var*
//#UC START# *499C5013009E_499C264700BD_impl*
  GotoOnNode(GetNode(NodeIndex));
//#UC END# *499C5013009E_499C264700BD_impl*
//#UC START# *499C5013009E_499C264700BD_var*
//#UC END# *499C5013009E_499C264700BD_var*
//#UC START# *56E71A2400F9_499C264700BDget_impl*
  if Supports(GetCurrentNode, IDynListNode, l_DynListNode) then
  begin
    l_DynListNode.GetSnippetText(l_RawStr);
    if l_RawStr <> nil then
      l_SnippetText := l_RawStr.GetData;
  end;
  Result := l3Str(GetCurrentNode.Text);
  if l_SnippetText <> '' then
    Result := Result + '\' + l_SnippetText;
//#UC END# *56E71A2400F9_499C264700BDget_impl*
//#UC START# *56E71A2400F9_499C264700BDget_var*
  var
    l_DynListNode : IDynListNode;
    l_SnippetText : String;
    l_RawStr : IString;
//#UC END# *56E71A2400F9_499C264700BDget_var*
