//#UC START# *49B92E2D02CD_49B141B8022F_impl*
 l_Stream := m3GetBaseSummary(aBase, m3_saRead);
 try
  Result := (l_Stream <> nil) AND
            (l_Stream.Read(@theSumm, SizeOf(theSumm), @l_Read) = S_Ok) AND
            (l_Read = SizeOf(theSumm));
 finally
  l_Stream := nil;
 end;//try..finally
 if not Result then
 begin
  l3FillChar(theSumm, SizeOf(theSumm), 0);
  theSumm.rMin := High(theSumm.rMin);
 end;//not Result
//#UC END# *49B92E2D02CD_49B141B8022F_impl*
//#UC START# *49B92E2D02CD_49B141B8022F_var*
var
 l_Stream : IStream;
 l_Read   : Integer;
//#UC END# *49B92E2D02CD_49B141B8022F_var*
//#UC START# *49B92E450104_49B141B8022F_impl*
 m3COMSafeOpenStream(aBase, l3PCharLen(AnsiString(m3_cSummary)), aMode, aMode <> m3_saRead, Result, false);
//#UC END# *49B92E450104_49B141B8022F_impl*
//#UC START# *49B92E450104_49B141B8022F_var*
//#UC END# *49B92E450104_49B141B8022F_var*
