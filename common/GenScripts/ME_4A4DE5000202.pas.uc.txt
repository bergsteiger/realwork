//#UC START# *479731C50290_4A4DE5000202_impl*
 f_IsOrd := l3_bUnknown;
 inherited; 
//#UC END# *479731C50290_4A4DE5000202_impl*
//#UC START# *479731C50290_4A4DE5000202_var*
//#UC END# *479731C50290_4A4DE5000202_var*
//#UC START# *47A042E100E2_4A4DE5000202_impl*
 inherited;
(* f_LastProperty.rID := -1;
 f_LastProperty.rProp := nil;*)
//#UC END# *47A042E100E2_4A4DE5000202_impl*
//#UC START# *47A042E100E2_4A4DE5000202_var*
//#UC END# *47A042E100E2_4A4DE5000202_var*
//#UC START# *47A869BB02DE_4A4DE5000202_impl*
 l3AssignNil(Result);
 Assert(false, 'Метод ' + ClassName + '.GetAsPCharLen должен быть переопределён в потомке');
//#UC END# *47A869BB02DE_4A4DE5000202_impl*
//#UC START# *47A869BB02DE_4A4DE5000202_var*
//#UC END# *47A869BB02DE_4A4DE5000202_var*
//#UC START# *4A4DE5000202_ext:ParentFileName
w:\common\components\rtl\Garant\K2\k2Prim.pas
//#UC END# *4A4DE5000202_ext:ParentFileName
//#UC START# *4A4DEAE0006B_4A4DE5000202get_impl*
(* if (f_LastProperty.rID = TagIndex) then
 begin
  Result := f_LastProperty.rProp;
 end
 else*)
 begin
(*  if (TagIndex > k2_tiLast) then
   Result := nil
  else*)
  begin
   Assert(Self <> nil);
   Assert(f_Tags <> nil);
   Result := Tk2CustomPropertyPrim(f_Tags.Items[TagIndex]);
(*   if (Result <> nil) then
   begin
    //Result := Pk2CustomPropertyPrim(Result)^;
    f_LastProperty.rID := TagIndex;
    f_LastProperty.rProp := Result;
   end;//Result <> nil*)
  end;//TagIndex > k2_tiLast
 end;//f_LastProperty.rID <> -1
//#UC END# *4A4DEAE0006B_4A4DE5000202get_impl*
//#UC START# *4A4DEAE0006B_4A4DE5000202get_var*
//#UC END# *4A4DEAE0006B_4A4DE5000202get_var*
//#UC START# *5331A12D0103_4A4DE5000202set_impl*
 f_ID := aValue;
//#UC END# *5331A12D0103_4A4DE5000202set_impl*
//#UC START# *5331A12D0103_4A4DE5000202set_var*
//#UC END# *5331A12D0103_4A4DE5000202set_var*
