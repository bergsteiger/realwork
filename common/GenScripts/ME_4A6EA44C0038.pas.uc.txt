//#UC START# *4A6D71700008_4A6EA44C0038_impl*
 ProcessMessages(TdmStdRes.MakeChatDispatcher.GetMessages(UserID, -1));
 if not ContainsControl(FindControl(GetForegroundWindow)) then
 begin
  l3FillChar(l_Info, SizeOf(l_Info), 0); 
  l_Info.cbSize :=SizeOf(l_Info);
  l_Info.hwnd := Handle;
  l_Info.dwFlags := FLASHW_ALL or FLASHW_TIMER;
  FlashWindowEx(l_Info);
 end;
//#UC END# *4A6D71700008_4A6EA44C0038_impl*
//#UC START# *4A6D71700008_4A6EA44C0038_var*
var
 l_Info: TFlashWInfo;
//#UC END# *4A6D71700008_4A6EA44C0038_var*
//#UC START# *4A6EA44C0038_ext:FileName
w:\garant6x\implementation\Garant\GbaNemesis\View\Chat\Forms\BaseChatWindow_Form.pas
//#UC END# *4A6EA44C0038_ext:FileName
//#UC START# *4A6EA44C0038impl_uses*
//#UC END# *4A6EA44C0038impl_uses*
//#UC START# *4A6EA5EA00CD_4A6EA44C0038_impl*
 TdmStdRes.MakeChatDispatcher.RegisterChatWindow(Self);
//#UC END# *4A6EA5EA00CD_4A6EA44C0038_impl*
//#UC START# *4A6EA5EA00CD_4A6EA44C0038_var*
//#UC END# *4A6EA5EA00CD_4A6EA44C0038_var*
//#UC START# *4A6EA6000339_4A6EA44C0038_impl*
 TdmStdRes.MakeChatDispatcher.UnRegisterChatWindow(Self);
//#UC END# *4A6EA6000339_4A6EA44C0038_impl*
//#UC START# *4A6EA6000339_4A6EA44C0038_var*
//#UC END# *4A6EA6000339_4A6EA44C0038_var*
//#UC START# *4A7C023702A5_4A6EA44C0038_impl*
 HistoryEditor.TextSource.New;
//#UC END# *4A7C023702A5_4A6EA44C0038_impl*
//#UC START# *4A7C023702A5_4A6EA44C0038_var*
//#UC END# *4A7C023702A5_4A6EA44C0038_var*
//#UC START# *4A8AD47D0357_4A6EA44C0038exec_impl*
 l_Memory := Tl3MemoryStream.Make;
 try
   BottomEditor.TextSource.DocumentContainer.TagReader.ReadTag(CF_EverestBin,
                                                               l_Memory,
                                                               TevdAllDocumentSubsEliminator.Make);
  l_Memory.Position := 0;
  if l_Memory.Size > cMaxSize then
  begin
   Say(war_ChatLimitReached);
   Exit;
  end;
  try
   l_Message := TdmStdRes.MakeChatDispatcher.SendMessage(UserID, l_Memory);
  except
   on EnsUnknownChatUser do
    SafeClose;
  end;
  BottomEditor.TextSource.New;
  AddToHistory(l_Message);
 finally
  FreeAndNil(l_Memory);
 end;
//#UC END# *4A8AD47D0357_4A6EA44C0038exec_impl*
//#UC START# *4A8AD47D0357_4A6EA44C0038exec_var*
var
 l_Memory: Tl3MemoryStream;
 l_Message: InsChatMessage;
const
 cMaxSize = 1024*10;
//#UC END# *4A8AD47D0357_4A6EA44C0038exec_var*
//#UC START# *4A8AD47D0357_4A6EA44C0038getstate_impl*
 State := st_user_Result_OkExt_Chat;
//#UC END# *4A8AD47D0357_4A6EA44C0038getstate_impl*
//#UC START# *4A8AD47D0357_4A6EA44C0038getstate_var*
//#UC END# *4A8AD47D0357_4A6EA44C0038getstate_var*
//#UC START# *4A8AD47D0357_4A6EA44C0038test_impl*
 aParams.Op.Flag[vcm_ofEnabled] := BottomEditor.TextSource.HasDocument AND
  not BottomEditor.IsEmpty;
//#UC END# *4A8AD47D0357_4A6EA44C0038test_impl*
//#UC START# *4A8AD47D0357_4A6EA44C0038test_var*
//#UC END# *4A8AD47D0357_4A6EA44C0038test_var*
//#UC START# *4A8E8F2E0195_4A6EA44C0038_impl*
 inherited;
 with BackgroundPanel do
 begin
  Align := alClient;
  BevelOuter := bvNone;
 end;
 with BottomPanel do
 begin
  Align := alBottom;
  SizeableSides := [szTop];
  SplitterBevel := bvRaised;
  Height := Parent.ClientHeight div 2;
 end;
 with TopPanel do
 begin
  Align := alClient;
 end;
 with HistoryEditor do
 begin
  Align := alClient;
 end;

 with BottomEditor do
 begin
  Align := alClient;
  OnJumpTo := Self.JumpTo;
  OnGetHotSpotInfo := Self.GetHotSpotInfo;
  TextSource.OnGetControlItemImg := Self.TextSourceGetControlItemImg;
  {$IfOpt D+}
  ShowDocumentParts := true;
  DrawSpecial := true;
  {$EndIf}
 end;//with BottomEditor
//#UC END# *4A8E8F2E0195_4A6EA44C0038_impl*
//#UC START# *4A8E8F2E0195_4A6EA44C0038_var*
//#UC END# *4A8E8F2E0195_4A6EA44C0038_var*
//#UC START# *4AC5CD4402E7_4A6EA44C0038_impl*
 inherited;
 BottomEditor.TextSource.New;
//#UC END# *4AC5CD4402E7_4A6EA44C0038_impl*
//#UC START# *4AC5CD4402E7_4A6EA44C0038_var*
//#UC END# *4AC5CD4402E7_4A6EA44C0038_var*
//#UC START# *4AC5CD9C02FA_4A6EA44C0038_impl*
 Result := 10;
//#UC END# *4AC5CD9C02FA_4A6EA44C0038_impl*
//#UC START# *4AC5CD9C02FA_4A6EA44C0038_var*
//#UC END# *4AC5CD9C02FA_4A6EA44C0038_var*
//#UC START# *4B1633CF01C2_4A6EA44C0038_impl*
 Result := False;
//#UC END# *4B1633CF01C2_4A6EA44C0038_impl*
//#UC START# *4B1633CF01C2_4A6EA44C0038_var*
//#UC END# *4B1633CF01C2_4A6EA44C0038_var*
//#UC START# *4B34C0B801B1_4A6EA44C0038_impl*
 inherited;
 If Message.Active <> WA_INACTIVE then
 begin
  l3FillChar(l_Info, SizeOf(l_Info), 0);
  l_Info.cbSize :=SizeOf(l_Info);
  l_Info.hwnd := Handle;
  l_Info.dwFlags := FLASHW_STOP;
  FlashWindowEx(l_Info);
 end; 
//#UC END# *4B34C0B801B1_4A6EA44C0038_impl*
//#UC START# *4B34C0B801B1_4A6EA44C0038_var*
var
 l_Info: TFlashWInfo;
//#UC END# *4B34C0B801B1_4A6EA44C0038_var*
