//#UC START# *497469C90140_4A6EC0D0020C_impl*
 inherited;
 if (anOld <> nil) then
 begin
  anOld.Unsubscribe(InsVScrollListener(Self));
 end;//anOld <> nil
 if (aNew <> nil) then
 begin
  aNew.Subscribe(InsVScrollListener(Self));
 end;//aNew <> nil
 UpdateCaptionFromDS;
//#UC END# *497469C90140_4A6EC0D0020C_impl*
//#UC START# *497469C90140_4A6EC0D0020C_var*
//#UC END# *497469C90140_4A6EC0D0020C_var*
//#UC START# *49803F5503AA_4A6EC0D0020C_impl*
 inherited;
 UpdateCaptionFromDS;
//#UC END# *49803F5503AA_4A6EC0D0020C_impl*
//#UC START# *49803F5503AA_4A6EC0D0020C_var*
//#UC END# *49803F5503AA_4A6EC0D0020C_var*
//#UC START# *4A6EC0D0020Cimpl_uses*
//#UC END# *4A6EC0D0020Cimpl_uses*
//#UC START# *4A79AB290196_4A6EC0D0020C_impl*
 // - ничего не делаем, т.к. эта нотификация нам неинтересна
//#UC END# *4A79AB290196_4A6EC0D0020C_impl*
//#UC START# *4A79AB290196_4A6EC0D0020C_var*
//#UC END# *4A79AB290196_4A6EC0D0020C_var*
//#UC START# *4A80256B02A5_4A6EC0D0020C_impl*
 if (EditionsContainerData <> nil) then
 begin
  l3Split(CCaption, ':', l_P, l_S);
  CCaption := MakePrefixedCaption(l_P, False);
  // - http://mdp.garant.ru/pages/viewpage.action?pageId=571653443
  UpdateTabCaption(MakePrefixedCaption(l_P, False));
 end;//EditionsContainerData <> nil
//#UC END# *4A80256B02A5_4A6EC0D0020C_impl*
//#UC START# *4A80256B02A5_4A6EC0D0020C_var*
//#UC END# *4A80256B02A5_4A6EC0D0020C_var*
//#UC START# *4A8996E000FF_4A6EC0D0020Cexec_impl*
 FindChangedText(true);
//#UC END# *4A8996E000FF_4A6EC0D0020Cexec_impl*
//#UC START# *4A8996E000FF_4A6EC0D0020Cexec_var*
//#UC END# *4A8996E000FF_4A6EC0D0020Cexec_var*
//#UC START# *4A8996E000FF_4A6EC0D0020Ctest_impl*
 aParams.Op.Flag[vcm_ofEnabled] := CanFindChangedText(true);
//#UC END# *4A8996E000FF_4A6EC0D0020Ctest_impl*
//#UC START# *4A8996E000FF_4A6EC0D0020Ctest_var*
//#UC END# *4A8996E000FF_4A6EC0D0020Ctest_var*
//#UC START# *4A8996FA03B8_4A6EC0D0020Cexec_impl*
 FindChangedText(false);
//#UC END# *4A8996FA03B8_4A6EC0D0020Cexec_impl*
//#UC START# *4A8996FA03B8_4A6EC0D0020Cexec_var*
//#UC END# *4A8996FA03B8_4A6EC0D0020Cexec_var*
//#UC START# *4A8996FA03B8_4A6EC0D0020Ctest_impl*
 aParams.Op.Flag[vcm_ofEnabled] := CanFindChangedText(false);
//#UC END# *4A8996FA03B8_4A6EC0D0020Ctest_impl*
//#UC START# *4A8996FA03B8_4A6EC0D0020Ctest_var*
//#UC END# *4A8996FA03B8_4A6EC0D0020Ctest_var*
//#UC START# *4A8E5E4702C6_4A6EC0D0020C_impl*
 with aList do
 begin
  Add(TnscStatusBarOperationDef.MakeSDefaultCaption(TdmStdRes.opcode_Edition_PrevChange, true, false, 2000, nsc_ttkNone));
  Add(TnscStatusBarOperationDef.MakeSDefaultCaption(TdmStdRes.opcode_Edition_NextChange, true, false, 2000, nsc_ttkNone));
  Add(TnscStatusBarOperationDef.MakeSDefaultCaption(TdmStdRes.opcode_Redactions_OpenRedactionListFrmAct, true, false, 2000, nsc_ttkNone));
  Add(TnscStatusBarOperationDef.MakeSDefaultCaption(TdmStdRes.opcode_Edition_ReturnToDocument, true, false, 2000, nsc_ttkNone));
 end;//with aList
//#UC END# *4A8E5E4702C6_4A6EC0D0020C_impl*
//#UC START# *4A8E5E4702C6_4A6EC0D0020C_var*
//#UC END# *4A8E5E4702C6_4A6EC0D0020C_var*
//#UC START# *4A8E8F2E0195_4A6EC0D0020C_impl*
 with pnLeft do
 begin
  Width := Self.ClientWidth div 2;
  SizeableSides := [szRight];
  TabOrder := 0;
  Align := alLeft;
 end;//with pnLeft
 with pnRight do
 begin
  Width := Self.ClientWidth div 2;
  TabOrder := 1;
  Align := alClient;
 end;//with pnRight
 Self.ActiveControl := pnRight;
 inherited;
//#UC END# *4A8E8F2E0195_4A6EC0D0020C_impl*
//#UC START# *4A8E8F2E0195_4A6EC0D0020C_var*
//#UC END# *4A8E8F2E0195_4A6EC0D0020C_var*
//#UC START# *4ADC8D5C0182_4A6EC0D0020C_impl*
 l_Para := 0;
 Result := gtprFail;
 l_CP := EditionsContainerData.ChangedParas;
 if (l_CP <> nil) then
 begin
  Assert(not f_InFindChanged);
  f_InFindChanged := true;
  try
   while (Result <> gtprOk) do
   begin
    if aBack then
    begin
     if l_CP.HasPrev then
      l_Para := l_CP.Prev
     else
      Exit;
    end//aBack
    else
    //if not aBack then
    begin
     if l_CP.HasNext then
      l_Para := l_CP.Next
     else
      Exit;
    end;//not aBack
    f_PrevPara := l_Para;
    if HasForm(vcm_ztMain, false, @l_Form) then
    begin
     Result := Op_Finder_GotoPara.Call(l_Form, l_Para);
     if (Result = gtprAlready) then
      continue;
    end//HasForm(vcm_ztMain, false, @l_Form)
    else
     Assert(false);
    if HasForm(vcm_ztChild, false, @l_Form) then
    begin
     if (Result = gtprFail) then
     begin
      Result := Op_Finder_GotoPara.Call(l_Form, l_Para);
      if (Result = gtprAlready) then
       continue;
     end//Result = gtprFail
     else
      Op_Finder_DisableForceDrawFocusRect.Call(l_Form);
    end//HasForm(vcm_ztChild, false, @l_Form)
    else
     Assert(false);
    Assert(Result = gtprOk, 'Изменённый параграф не найден');
   end;//while (Result <> gtprOk)
   f_ForceDrawFocusRectMoment := GetTickCount;
  finally
   f_InFindChanged := false;
  end;//try..finally
 end;//l_CP <> nil
//#UC END# *4ADC8D5C0182_4A6EC0D0020C_impl*
//#UC START# *4ADC8D5C0182_4A6EC0D0020C_var*
var
 l_Para : TParaNum;
//#UC END# *4ADC8D5C0182_4A6EC0D0020C_var*
//#UC START# *4AE046D4038D_4A6EC0D0020C_impl*
 Result := false;
 l_CP := EditionsContainerData.ChangedParas;
 if (l_CP <> nil) then
 begin
  if aBack then
  begin
   Result := l_CP.HasPrev;
   if Result then
   begin
    if Op_RightEdition_IsCurrentPara.Call(Aggregate, l_CP.AcquirePrev) then
    begin
     l_CP.Prev;
     Result := l_CP.HasPrev;
     l_CP.Next;
    end;//Op_RightEdition_IsCurrentPara.Call(Aggregate, l_CP.AcquirePrev)
   end;//Result
  end//aBack
  else
  begin
   Result := l_CP.HasNext;
   if Result then
   begin
    if Op_RightEdition_IsCurrentPara.Call(Aggregate, l_CP.AcquireNext) then
    begin
     f_PrevPara := l_CP.Next;
     Result := l_CP.HasNext;
    end;//Op_RightEdition_IsCurrentPara.Call(Aggregate, l_CP.AcquireNext)
   end;//Result
  end;//aBack
 end;//l_CP <> nil
//#UC END# *4AE046D4038D_4A6EC0D0020C_impl*
//#UC START# *4AE046D4038D_4A6EC0D0020C_var*
//#UC END# *4AE046D4038D_4A6EC0D0020C_var*
//#UC START# *4B1E37CE00C1_4A6EC0D0020Cexec_impl*
 Op_RightEdition_ReturnToDocument.Call(Aggregate);
//#UC END# *4B1E37CE00C1_4A6EC0D0020Cexec_impl*
//#UC START# *4B1E37CE00C1_4A6EC0D0020Cexec_var*
//#UC END# *4B1E37CE00C1_4A6EC0D0020Cexec_var*
//#UC START# *4B1E37CE00C1_4A6EC0D0020Ctest_impl*
 // - ничего не делаем
//#UC END# *4B1E37CE00C1_4A6EC0D0020Ctest_impl*
//#UC START# *4B1E37CE00C1_4A6EC0D0020Ctest_var*
//#UC END# *4B1E37CE00C1_4A6EC0D0020Ctest_var*
//#UC START# *4B54676B0132_4A6EC0D0020C_impl*
 if (f_PrevPara <> aParaID) then
 begin
  f_PrevPara := aParaID;
  // - два условия специально расположенны именно в таком порядке
  //   т.к. по любому - раз мы находимся ВНУТРИ позиционирования
  //   на интересующий нас параграф, то состояние итератора будет
  //   указывать за aParaID, т.е. как будто MoveTo таки сделали
  if not f_InFindChanged then
  begin
   if (GetTickCount - f_ForceDrawFocusRectMoment >= 300) then
   begin
    l_CP := EditionsContainerData.ChangedParas;
    if (l_CP <> nil) then
     l_CP.MoveTo(aParaID);
   end;//GetTickCount - f_ForceDrawFocusRectMoment >= 300
  end;//not f_InFindChanged
 end;//f_PrevPara <> aParaID
//#UC END# *4B54676B0132_4A6EC0D0020C_impl*
//#UC START# *4B54676B0132_4A6EC0D0020C_var*
var
 l_CP : IDiffIterator;
//#UC END# *4B54676B0132_4A6EC0D0020C_var*
//#UC START# *4DDCBABC03B7_4A6EC0D0020Cexec_impl*
 TdmStdRes.ViewChangedFragments(EditionsContainerData.Left.Document,
                                EditionsContainerData.Right.Document);
//#UC END# *4DDCBABC03B7_4A6EC0D0020Cexec_impl*
//#UC START# *4DDCBABC03B7_4A6EC0D0020Cexec_var*
//#UC END# *4DDCBABC03B7_4A6EC0D0020Cexec_var*
//#UC START# *4DDCBABC03B7_4A6EC0D0020Ctest_impl*
 // - ничего не делаем
//#UC END# *4DDCBABC03B7_4A6EC0D0020Ctest_impl*
//#UC START# *4DDCBABC03B7_4A6EC0D0020Ctest_var*
//#UC END# *4DDCBABC03B7_4A6EC0D0020Ctest_var*
//#UC START# *4F7C65380244_4A6EC0D0020C_impl*
 inherited;
//#UC END# *4F7C65380244_4A6EC0D0020C_impl*
//#UC START# *4F7C65380244_4A6EC0D0020C_var*
//#UC END# *4F7C65380244_4A6EC0D0020C_var*
//#UC START# *54630D2702E1_4A6EC0D0020C_impl*
 if (EditionsContainerData <> nil) then
 begin
  if aShort then
   l_DocName := EditionsContainerData.DocumentNameForCaption
  else
   l_DocName := EditionsContainerData.DocumentFullNameForCaption;
  Result := l3Cat([aPrefixStr, l3CStr(' : '), l_DocName])
 end
 else
  Result := nil;
//#UC END# *54630D2702E1_4A6EC0D0020C_impl*
//#UC START# *54630D2702E1_4A6EC0D0020C_var*
var
 l_DocName: Il3CString;
//#UC END# *54630D2702E1_4A6EC0D0020C_var*
