//#UC START# *4A7687C702C8_4A815C200111_impl*
 if IsFloating then
  Result := vcmDispatcher.FormDispatcher.CurrentMainForm.AsContainer
 else
  Result := NativeMainForm;
//#UC END# *4A7687C702C8_4A815C200111_impl*
//#UC START# *4A7687C702C8_4A815C200111_var*
//#UC END# *4A7687C702C8_4A815C200111_var*
//#UC START# *4A7687F0016D_4A815C200111_impl*
 if TvcmTabbedContainerFormDispatcher.Instance.NeedUseTabs then
  Result := nsOpenNewWindowTabbed(MakeContainer, vcm_okInNewWindow)
 else
 if IsFloating then
  Result := nsOpenNewWindowParams(vcmDispatcher.FormDispatcher.CurrentMainForm.AsContainer)
 else
  Result := nsOpenNewWindowParams(NativeMainForm);
//#UC END# *4A7687F0016D_4A815C200111_impl*
//#UC START# *4A7687F0016D_4A815C200111_var*
//#UC END# *4A7687F0016D_4A815C200111_var*
//#UC START# *4A76CDFA014B_4A815C200111_impl*
 Result := DoProcessExternalOperation(anOperation);
//#UC END# *4A76CDFA014B_4A815C200111_impl*
//#UC START# *4A76CDFA014B_4A815C200111_var*
//#UC END# *4A76CDFA014B_4A815C200111_var*
//#UC START# *4A780EBF00CD_4A815C200111_impl*
 DoCheckLinkInfo(aLink);
//#UC END# *4A780EBF00CD_4A815C200111_impl*
//#UC START# *4A780EBF00CD_4A815C200111_var*
//#UC END# *4A780EBF00CD_4A815C200111_var*
//#UC START# *4A79216102C6_4A815C200111_impl*
 Result := DoMakeLinkDocInfo(aDocument, aPointType, aSub);
//#UC END# *4A79216102C6_4A815C200111_impl*
//#UC START# *4A79216102C6_4A815C200111_var*
//#UC END# *4A79216102C6_4A815C200111_var*
//#UC START# *4A7928E80375_4A815C200111_impl*
 Result := DoProcessLocalLink(aDocument, aPointType, aSub, aBehaviour);
//#UC END# *4A7928E80375_4A815C200111_impl*
//#UC START# *4A7928E80375_4A815C200111_var*
//#UC END# *4A7928E80375_4A815C200111_var*
//#UC START# *4A815C200111_ext:FileName
w:\garant6x\implementation\Garant\GbaNemesis\View\HyperlinkProcessor.imp.pas
//#UC END# *4A815C200111_ext:FileName
//#UC START# *4A815FB3005D_4A815C200111_impl*
 Result := TdeDocInfo.Make(aDocument, TbsDocPos_C(aPointType, aSub));
//#UC END# *4A815FB3005D_4A815C200111_impl*
//#UC START# *4A815FB3005D_4A815C200111_var*
//#UC END# *4A815FB3005D_4A815C200111_var*
//#UC START# *4A8160720125_4A815C200111_impl*
 Result := true;
 if aDocument.IsSameRedaction(HyperlinkDocument) then
 begin
  // Переход по локальной ссылке в текущей редакции документа
  if (aBehaviour = phbInSameContainer) then
  // - http://mdp.garant.ru/pages/viewpage.action?pageId=569213206
  begin
   Dispatcher.History.SaveState(Self.As_IvcmEntityForm, vcm_stPosition);
   GoToPoint(aSub);
  end
  else
   Result := False;
 end//aDocument.IsSameRedaction(HyperlinkDocument) 
 else
  // Переход по локальной ссылке на другую редакцию документа
  OpenRedactionLocalLink(aDocument, aSub, aBehaviour);
//#UC END# *4A8160720125_4A815C200111_impl*
//#UC START# *4A8160720125_4A815C200111_var*
//#UC END# *4A8160720125_4A815C200111_var*
//#UC START# *4A8199EE00F2_4A815C200111_impl*
 Result := False;
 if Supports(aMoniker, IevHyperlink, l_HyperLink) then
 try
  BeforeJumpTo(l_HyperLink);
  HyperlinkText.SetFocus;

  // http://mdp.garant.ru/pages/viewpage.action?pageId=460286108
  if not NeedJumpTo(l_Hyperlink) then
  begin
   Result := True;
   Exit;
  end;

  // http://mdp.garant.ru/pages/viewpage.action?pageId=352452629
  DoSetHyperlinkCallStatus(True);

  Result := nsProcessHyperLink(l_HyperLink, GetBehaviourFromEffects(anEffects),
   Self, Aggregate, HyperlinkDocument);
  // - http://mdp.garant.ru/pages/viewpage.action?pageId=340174500

 (* Result := nsProcessHyperLink(l_HyperLink, (afw_jteRequestNewWindow in anEffects) or
                              afw.Settings.LoadBoolean(pi_Document_OpenInNewWindow,
                                         dv_Document_OpenInNewWindow), Self, Aggregate, HyperlinkDocument);
 *)
  if not Result then
   DoSetHyperlinkCallStatus(False);
 finally
  l_HyperLink := nil;
 end;//try..finally
//#UC END# *4A8199EE00F2_4A815C200111_impl*
//#UC START# *4A8199EE00F2_4A815C200111_var*
//#UC END# *4A8199EE00F2_4A815C200111_var*
//#UC START# *4A82C02701E4_4A815C200111_impl*
 if Supports(aHotSpot, IevHyperlink, l_Hyperlink) then
  nsCheckHyperLinkInfo(l_Hyperlink, Self, theInfo, HyperlinkDocument)
 else
  GetNonHyperlinkInfo(Sender, aHotSpot, aKeys, theInfo); 
//#UC END# *4A82C02701E4_4A815C200111_impl*
//#UC START# *4A82C02701E4_4A815C200111_var*
//#UC END# *4A82C02701E4_4A815C200111_var*
//#UC START# *4A890E81030B_4A815C200111_impl*
 // - ничего не делаем
//#UC END# *4A890E81030B_4A815C200111_impl*
//#UC START# *4A890E81030B_4A815C200111_var*
//#UC END# *4A890E81030B_4A815C200111_var*
//#UC START# *4A8A9E2A004F_4A815C200111_impl*
 // - ничего не делаем
//#UC END# *4A8A9E2A004F_4A815C200111_impl*
//#UC START# *4A8A9E2A004F_4A815C200111_var*
//#UC END# *4A8A9E2A004F_4A815C200111_var*
//#UC START# *4A8E8F2E0195_4A815C200111_impl*
 inherited;
 with HyperlinkText do
 begin
  OnJumpTo := Self.JumpTo;
  OnGetHotSpotInfo := Self.GetHotSpotInfo;
 end;//with HyperlinkText
//#UC END# *4A8E8F2E0195_4A815C200111_impl*
//#UC START# *4A8E8F2E0195_4A815C200111_var*
//#UC END# *4A8E8F2E0195_4A815C200111_var*
//#UC START# *4F382E2D01C1_4A815C200111_impl*
 // - ничего, не делаем, пусть потомки перекрывают, если хотят
//#UC END# *4F382E2D01C1_4A815C200111_impl*
//#UC START# *4F382E2D01C1_4A815C200111_var*
//#UC END# *4F382E2D01C1_4A815C200111_var*
//#UC START# *520234BD015B_4A815C200111_impl*
 Result := True;
//#UC END# *520234BD015B_4A815C200111_impl*
//#UC START# *520234BD015B_4A815C200111_var*
//#UC END# *520234BD015B_4A815C200111_var*
//#UC START# *53A2EF1B036C_4A815C200111_impl*
 Result := DoProcessGlobalLink(aDocument, aPointType, aSub, aBehaviour);
//#UC END# *53A2EF1B036C_4A815C200111_impl*
//#UC START# *53A2EF1B036C_4A815C200111_var*
//#UC END# *53A2EF1B036C_4A815C200111_var*
//#UC START# *53A2F4B30119_4A815C200111_impl*
 Result := //(aBehaviour = phbInNewWindow) and // это сделано для открытия СР в новом окне
           aDocument.IsSameDocument(HyperlinkDocument) and
           not aDocument.IsSameRedaction(HyperlinkDocument);
 if Result then
  OpenRedactionGlobalLink(aDocument, aSub, aBehaviour);
//#UC END# *53A2F4B30119_4A815C200111_impl*
//#UC START# *53A2F4B30119_4A815C200111_var*
//#UC END# *53A2F4B30119_4A815C200111_var*
//#UC START# *53A812BE013E_4A815C200111_impl*
 Result := nsOpenNewWindowTabbed(MakeContainer, vcm_okInNewTab, aNeedActivate);
//#UC END# *53A812BE013E_4A815C200111_impl*
//#UC START# *53A812BE013E_4A815C200111_var*
//#UC END# *53A812BE013E_4A815C200111_var*
//#UC START# *53A95A1A0073_4A815C200111_impl*
 l_BehaviourFromEffects := phbInSameContainer;
 for l_Index := Low(TnsProcessHyperLinkBehaviour) to High(TnsProcessHyperLinkBehaviour) do
  if (cBehaviourToEffectsArr[l_Index] = anEffects) then
  begin
   l_BehaviourFromEffects := l_Index;
   Break;
  end;
 Result := lp_CorrectBehaviour(l_BehaviourFromEffects);
//#UC END# *53A95A1A0073_4A815C200111_impl*
//#UC START# *53A95A1A0073_4A815C200111_var*

 function lp_CorrectBehaviour(aBehaviour: TnsProcessHyperLinkBehaviour): TnsProcessHyperLinkBehaviour;
 var
  l_OpenKind: TvcmMainFormOpenKind;
 begin
  Result := aBehaviour;
  l_OpenKind := nsLinksFromDocumentOpenKind;
  if (aBehaviour = phbInSameContainer) then
  begin
   case l_OpenKind of
    vcm_okInCurrentTab:
     Result := phbInSameContainer;
    vcm_okInNewTab:
     if (anEffects = []) then
      Result := phbInNewTabActivate
     else
     if (anEffects = [afw_jteRequestNewTab]) then
      Result := phbInNewTabNoActivate;
    vcm_okInNewWindow:
     Result := phbInNewWindow;
   end;
  end
  else
  if (aBehaviour = phbInNewTabNoActivate) then
   Result := aBehaviour;
 end;//lp_CorrectBehaviour

const
 cBehaviourToEffectsArr: array[TnsProcessHyperLinkBehaviour] of TafwJumpToEffects =
  ([], //phbInSameContainer
   [afw_jteRequestNewTab, afw_jteRequestNoActivate], //phbInNewTabNoActivate
   [afw_jteRequestNewTab], //phbInNewTabActivate
   [afw_jteRequestNewWindow]);//phpInNewWindow
var
 l_Index: TnsProcessHyperLinkBehaviour;
 l_BehaviourFromEffects: TnsProcessHyperLinkBehaviour;
//#UC END# *53A95A1A0073_4A815C200111_var*
//#UC START# *54D3144F0227_4A815C200111_impl*
 case aBehaviour of
  phbInSameContainer:
   Result := nil;
  phbInNewTabNoActivate:
   Result := MakeTabbedContainer(False);
  phbInNewTabActivate:
   Result := MakeTabbedContainer(True);
  phbInNewWindow:
   Result := MakeNewMainWindow;
 else
  Assert(False);
 end;//case aBehaviour
//#UC END# *54D3144F0227_4A815C200111_impl*
//#UC START# *54D3144F0227_4A815C200111_var*
//#UC END# *54D3144F0227_4A815C200111_var*
//#UC START# *5767DF4D033E_4A815C200111_impl*
 // для перекрытия в потомках 
//#UC END# *5767DF4D033E_4A815C200111_impl*
//#UC START# *5767DF4D033E_4A815C200111_var*
//#UC END# *5767DF4D033E_4A815C200111_var*
