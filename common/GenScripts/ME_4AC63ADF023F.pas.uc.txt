//#UC START# *479731C50290_4AC63ADF023F_impl*
 if (f_ManagerConf <> nil) then
  f_ManagerConf.DoneEditing;
 f_Filled := False;
 f_ManagerConf := nil;
 inherited;
//#UC END# *479731C50290_4AC63ADF023F_impl*
//#UC START# *479731C50290_4AC63ADF023F_var*
//#UC END# *479731C50290_4AC63ADF023F_var*
//#UC START# *47A042E100E2_4AC63ADF023F_impl*
 inherited;
 Position := poScreenCenter;
//#UC END# *47A042E100E2_4AC63ADF023F_impl*
//#UC START# *47A042E100E2_4AC63ADF023F_var*
//#UC END# *47A042E100E2_4AC63ADF023F_var*
//#UC START# *4980403E021E_4AC63ADF023F_impl*
 if (f_ManagerConf <> nil) then
  f_ManagerConf.DoneEditing;
 f_Filled := False;
 Result := inherited CloseQuery;
//#UC END# *4980403E021E_4AC63ADF023F_impl*
//#UC START# *4980403E021E_4AC63ADF023F_var*
//#UC END# *4980403E021E_4AC63ADF023F_var*
//#UC START# *4A8AD46D0226_4AC63ADF023Fexec_impl*
 f_ManagerConf.Load(False);
 ModalResult := mrCancel;
//#UC END# *4A8AD46D0226_4AC63ADF023Fexec_impl*
//#UC START# *4A8AD46D0226_4AC63ADF023Fexec_var*
//#UC END# *4A8AD46D0226_4AC63ADF023Fexec_var*
//#UC START# *4A8E8F2E0195_4AC63ADF023F_impl*
 inherited;
 ClientHeight := 232;
 ClientWidth := 446;
 BorderIcons := [biSystemMenu];
 BorderStyle := bsSingle;
 OnKeyDown := vcmContainerFormKeyDown;
//#UC END# *4A8E8F2E0195_4AC63ADF023F_impl*
//#UC START# *4A8E8F2E0195_4AC63ADF023F_var*
//#UC END# *4A8E8F2E0195_4AC63ADF023F_var*
//#UC START# *4A97EBE702F8_4AC63ADF023Fexec_impl*
 try
  f_ManagerConf.Save(False);
  ModalResult := mrOk;
 except
  on E : EDuplicateConfName do
   Say(err_DublicateConfName, [E.ConfName]);
  on E : ECRSettingsAreEqual do
   Say(inf_SettingsAreEqual);
  on E : EConfigNotSaved do ;
 end;
//#UC END# *4A97EBE702F8_4AC63ADF023Fexec_impl*
//#UC START# *4A97EBE702F8_4AC63ADF023Fexec_var*
//#UC END# *4A97EBE702F8_4AC63ADF023Fexec_var*
//#UC START# *4A97EBE702F8_4AC63ADF023Ftest_impl*
 aParams.Op.Flag[vcm_ofEnabled] := f_ManagerConf.IsOverallModified;
//#UC END# *4A97EBE702F8_4AC63ADF023Ftest_impl*
//#UC START# *4A97EBE702F8_4AC63ADF023Ftest_var*
//#UC END# *4A97EBE702F8_4AC63ADF023Ftest_var*
//#UC START# *4AC63BB001DA_4AC63ADF023F_impl*
 if f_ManagerConf.IsActive and
  (Supports(afw.Application.Settings, InsSettings, l_Settings)) then
 try
  l_Settings.StartEdit;
 finally
  l_Settings := nil;
 end;// try..finally
 // Создадим структуру:
 f_ManagerConf.Load(False);
//#UC END# *4AC63BB001DA_4AC63ADF023F_impl*
//#UC START# *4AC63BB001DA_4AC63ADF023F_var*
//#UC END# *4AC63BB001DA_4AC63ADF023F_var*
//#UC START# *4AE069110160_4AC63ADF023F_impl*
   f_ManagerConf := aData;
   if (f_ManagerConf = nil) then
    f_ManagerConf := ConfigurationList.ActiveConfig;
   StartEdit; 
//#UC END# *4AE069110160_4AC63ADF023F_impl*
//#UC START# *4B321D1301DD_4AC63ADF023F_impl*
 // Делаем это здесь, т.к. необходимо чтобы toolbar-ы были созданы и мы могли
 // бы сообщить DocksHeight
 if not f_Filled then
 begin
  l_Swap := Screen.Cursor;
  Screen.Cursor := crHourGlass;
  try
   f_ManagerConf.FillDialog(self.as_IvcmEntityForm, DocksHeight);
  finally
   Screen.Cursor := l_Swap;
  end;
  f_Filled := True;
 end;
 inherited;
//#UC END# *4B321D1301DD_4AC63ADF023F_impl*
//#UC START# *4B321D1301DD_4AC63ADF023F_var*
var
 l_Swap: TCursor;
//#UC END# *4B321D1301DD_4AC63ADF023F_var*
//#UC START# *4C4084490250_4AC63ADF023Fexec_impl*
 if Ask(qr_RestoreDefaultValuesConf) then
  f_ManagerConf.Load(True);
//#UC END# *4C4084490250_4AC63ADF023Fexec_impl*
//#UC START# *4C4084490250_4AC63ADF023Fexec_var*
//#UC END# *4C4084490250_4AC63ADF023Fexec_var*
//#UC START# *4C4084490250_4AC63ADF023Ftest_impl*
 aParams.Op.Flag[vcm_ofEnabled] := f_ManagerConf.Modified or f_ManagerConf.IsDifferFromDefault;
//#UC END# *4C4084490250_4AC63ADF023Ftest_impl*
//#UC START# *4C4084490250_4AC63ADF023Ftest_var*
//#UC END# *4C4084490250_4AC63ADF023Ftest_var*
//#UC START# *4C40845C0212_4AC63ADF023Fexec_impl*
 if Ask(qr_SaveAsDefaultValuesConf) then
  f_ManagerConf.Save(True);
//#UC END# *4C40845C0212_4AC63ADF023Fexec_impl*
//#UC START# *4C40845C0212_4AC63ADF023Fexec_var*
//#UC END# *4C40845C0212_4AC63ADF023Fexec_var*
//#UC START# *4C40845C0212_4AC63ADF023Ftest_impl*
 aParams.Op.Flag[vcm_ofEnabled] := not f_ManagerConf.IsPredefined
  and (f_ManagerConf.Modified or f_ManagerConf.IsDifferFromDefault);
//#UC END# *4C40845C0212_4AC63ADF023Ftest_impl*
//#UC START# *4C40845C0212_4AC63ADF023Ftest_var*
//#UC END# *4C40845C0212_4AC63ADF023Ftest_var*
//#UC START# *4C4084670039_4AC63ADF023Fexec_impl*
 if Ask(qr_RestoreAllSettings) then
  f_ManagerConf.RestoreAllSettings;
//#UC END# *4C4084670039_4AC63ADF023Fexec_impl*
//#UC START# *4C4084670039_4AC63ADF023Fexec_var*
//#UC END# *4C4084670039_4AC63ADF023Fexec_var*
//#UC START# *5264FF0A0241_4AC63ADF023F_impl*
 l_Controller := GetDefController;
 if l_Controller <> nil then
  with l_Controller.EntryCommands do
  begin
   l_Msg.CharCode := Key;
   l_Msg.KeyData := 0;
   if Supports(Self, Il3CommandTarget, l_Target) and
      (l_Controller.EntryCommands.TranslateUsing([OvcCmd.scDefaultTableName],
                                                 TMessage(l_Msg), GetTickCount,
                                                 l_Target) = ccShortCut) then
    Key := 0;
  end;
//#UC END# *5264FF0A0241_4AC63ADF023F_impl*
//#UC START# *5264FF0A0241_4AC63ADF023F_var*
var
 l_Controller : TOvcController;
 l_Msg: TWMKeyDown;
 l_Target: Il3CommandTarget;
//#UC END# *5264FF0A0241_4AC63ADF023F_var*
//#UC START# *5445EA440078_4AC63ADF023F_impl*
 inherited;
 if HandleAllocated and
  TvcmTabbedContainerFormDispatcher.Instance.NeedUseTabs then
   SetWindowPos(Handle, HWND_TOP, 0, 0, 0, 0,
    SWP_NOMOVE or SWP_NOSIZE or SWP_NOACTIVATE);
 //http://mdp.garant.ru/pages/viewpage.action?pageId=567555348
//#UC END# *5445EA440078_4AC63ADF023F_impl*
//#UC START# *5445EA440078_4AC63ADF023F_var*
var
 l_WndForeground: HWND;
//#UC END# *5445EA440078_4AC63ADF023F_var*
