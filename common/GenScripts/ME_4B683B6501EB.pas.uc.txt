//#UC START# *479731C50290_4B683B6501EB_impl*
  FreeAndNil(f_NewMessageCS);
  //
  inherited;
//#UC END# *479731C50290_4B683B6501EB_impl*
//#UC START# *479731C50290_4B683B6501EB_var*
//#UC END# *479731C50290_4B683B6501EB_var*
//#UC START# *4B683B6501EB_ext:ParentFileName
w:\quality\test\garant6x\AdapterTest\AdapterHelpers\atChatWorker.pas
//#UC END# *4B683B6501EB_ext:ParentFileName
//#UC START# *4B683C2B037C_4B683B6501EB_impl*
  {$IFDEF DEBUG}
  Logger.Info('Вызываем TatChatMessage.Make');
  {$ENDIF}
  l_ChatMessage := TatChatMessage.Make;
  {$IFDEF DEBUG}
  Logger.Info('Вызвали TatChatMessage.Make');
  {$ENDIF}

  {$IFDEF DEBUG}
  Logger.Info('Вызываем l_ChatMessage.ChatMessage = %s', [aMessage]);
  {$ENDIF}
  l_ChatMessage.ChatMessage := aMessage;
  {$IFDEF DEBUG}
  Logger.Info('Вызвали l_ChatMessage.ChatMessage =');
  {$ENDIF}
  //
  f_ReadSendCS.Enter;
  try
    {$IFDEF DEBUG}
    Logger.Info('Вызываем MessagesManager.SendMessage. f_UserID = %d', [f_UserID]);
    {$ENDIF}
    (l_ChatMessage as IStream).Seek(0, 0, l_NewPos);
    MessagesManager.SendMessage(l_ChatMessage as IStream, f_UserID);
    l_ChatMessage := nil;
    {$IFDEF DEBUG}
    Logger.Info('Вызвали MessagesManager.SendMessage');
    {$ENDIF}
  finally
    f_ReadSendCS.Leave;
  end;
  //
  Logger.Info('Послали сообщение пользователю с uid %d', [f_UserID]);
  Inc(f_MessagesSent);
//#UC END# *4B683C2B037C_4B683B6501EB_impl*
//#UC START# *4B683C2B037C_4B683B6501EB_var*
  var
    l_ChatMessage : IatChatMessage;
    l_NewPos : Int64;
//#UC END# *4B683C2B037C_4B683B6501EB_var*
//#UC START# *4B683C7A01FC_4B683B6501EB_impl*
  Logger.Info('Пришло новое сообщение от пользователя uid %d', [f_UserID]);
  f_HasNewMessages := true;
//#UC END# *4B683C7A01FC_4B683B6501EB_impl*
//#UC START# *4B683C7A01FC_4B683B6501EB_var*
//#UC END# *4B683C7A01FC_4B683B6501EB_var*
//#UC START# *4B6942E5032E_4B683B6501EB_impl*
  inherited Create();
  //
  f_NewMessageCS := TCriticalSection.Create;
  f_HasNewMessages := false;
  f_UserID := anUserID;
  f_MessagesManager := TatGblAdapterWorker.Instance.GblAdapterDll.MakeMessagesManager;
  Assert(f_MessagesManager <> nil, 'f_MessagesManager <> nil');
  //
  f_ReadSendCS.Enter;
  try
    MessagesManager.GetHistoryForUser(20, true, f_UserID, l_Messages);
    Logger.Info('Получаем историю сообщений для разговора с пользователем с uid %d', [f_UserID]);
    ReadMessages(l_Messages);
    l_Messages := nil;
  finally
    f_ReadSendCS.Leave;
  end;
  //
  f_MessagesReceived := 0;
  f_MessagesSent := 0;
//#UC END# *4B6942E5032E_4B683B6501EB_impl*
//#UC START# *4B6942E5032E_4B683B6501EB_var*
  var
    l_Messages : IMessages;
//#UC END# *4B6942E5032E_4B683B6501EB_var*
//#UC START# *4B697BBC006C_4B683B6501EB_impl*
  repeat
    aMessage.rText.Read(@l_Buf[0], BUF_SIZE, @l_ReadBytes);
  until l_ReadBytes < BUF_SIZE;
//#UC END# *4B697BBC006C_4B683B6501EB_impl*
//#UC START# *4B697BBC006C_4B683B6501EB_var*
  const
    BUF_SIZE = 4096;
  var
    l_Buf : array [0..BUF_SIZE-1] of Char;
    l_ReadBytes : Longint;
//#UC END# *4B697BBC006C_4B683B6501EB_var*
//#UC START# *4B69814903D2_4B683B6501EB_impl*
  if ((aMessages <> nil) AND (aMessages.Count > 0)) then
  begin
    for i := 0 to aMessages.Count-1 do
    begin
      {$IFDEF DEBUG}
      Logger.Info('Вызываем aMessages.pm_GetItem');
      {$ENDIF}
      aMessages.pm_GetItem(i, l_Message);
      {$IFDEF DEBUG}
      Logger.Info('Вызвали aMessages.pm_GetItem');
      {$ENDIF}
      ReadMessage(l_Message);
    end;
    Inc(f_MessagesReceived, aMessages.Count);
    Logger.Info('Прочитано %d сообщений от пользователя с uid %d', [aMessages.Count, f_UserID]);
  end;
//#UC END# *4B69814903D2_4B683B6501EB_impl*
//#UC START# *4B69814903D2_4B683B6501EB_var*
  var
    i : Integer;
    l_Message : TMessage;
//#UC END# *4B69814903D2_4B683B6501EB_var*
//#UC START# *4B755B9800FD_4B683B6501EB_impl*
  if f_HasNewMessages then
  begin
    f_ReadSendCS.Enter;
    try
      {$IFDEF DEBUG}
      Logger.Info('Вызываем MessagesManager.GetUnreadedMessages. f_UserID = %d', [f_UserID]);
      {$ENDIF}
      MessagesManager.GetUnreadedMessages(f_UserID, l_Messages);
      {$IFDEF DEBUG}
      Logger.Info('Вызвали MessagesManager.GetUnreadedMessages');
      {$ENDIF}
      //Assert(l_Messages <> nil, 'l_Messages <> nil');
      if (l_Messages <> nil) then
      begin
        Logger.Info('Читаем новые сообщения от пользователя с uid %d', [f_UserID]);
        ReadMessages(l_Messages);
        l_Messages := nil;
      end;
      f_HasNewMessages := false;
    finally
      f_ReadSendCS.Leave;
    end;
  end;
//#UC END# *4B755B9800FD_4B683B6501EB_impl*
//#UC START# *4B755B9800FD_4B683B6501EB_var*
  var
    l_Messages : IMessages;
//#UC END# *4B755B9800FD_4B683B6501EB_var*
