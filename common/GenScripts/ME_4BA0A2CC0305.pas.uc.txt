//#UC START# *479731C50290_4BA0A2CC0305_impl*
 CheckControllableState([dcsAfterReview]);
 inherited;
//#UC END# *479731C50290_4BA0A2CC0305_impl*
//#UC START# *479731C50290_4BA0A2CC0305_var*
//#UC END# *479731C50290_4BA0A2CC0305_var*
//#UC START# *497469C90140_4BA0A2CC0305_impl*
 inherited;
 if Assigned(aNew) then
  CheckControllableState([dcsAfterReview])
 else
  CheckControllableState([dcsExitFromSystem]);
//#UC END# *497469C90140_4BA0A2CC0305_impl*
//#UC START# *497469C90140_4BA0A2CC0305_var*
//#UC END# *497469C90140_4BA0A2CC0305_var*
//#UC START# *49806ED503D5_4BA0A2CC0305_impl*
 Result := inherited DoSaveState(theState, aStateType, aForClone);
// if (aStateType = vcm_stContent) then
//  CheckControllableState([dcsAfterReview]);
//#UC END# *49806ED503D5_4BA0A2CC0305_impl*
//#UC START# *49806ED503D5_4BA0A2CC0305_var*
//#UC END# *49806ED503D5_4BA0A2CC0305_var*
//#UC START# *49807428008C_4BA0A2CC0305_impl*
 Result := inherited DoLoadState(aState, aStateType);
 __bp;
 if (aStateType = vcm_stContent) then
  CheckControllableState([dcsAfterReview]);
//#UC END# *49807428008C_4BA0A2CC0305_impl*
//#UC START# *49807428008C_4BA0A2CC0305_var*
//#UC END# *49807428008C_4BA0A2CC0305_var*
//#UC START# *4BA0A2CC0305_ext:FileName
w:\garant6x\implementation\Garant\GbaNemesis\View\UnderControlResetter.imp.pas
//#UC END# *4BA0A2CC0305_ext:FileName
//#UC START# *4BA0A3BC028F_4BA0A2CC0305_impl*
 // Сбрасываем только если документ открыли в основной области
 if Assigned(ucpUnderControl) and CanUnControl and ucpUnderControl.HasControlStatus then
 begin
  l_Action := afw.Settings.LoadString(pi_DropChangeStatus, dv_DropChangeStatus);
  if (dcsAfterReview in aInspect) and
   // - cбрасывать автоматически при открытии
   l3Same(l_Action, li_DropChangeStatus_OnOpen) then
  begin
   ucpUnderControl.ClearControlStatus;
   UpdateUnderControlList;
   // - обновим список документов на контроле (CQ: 00019007)
  end//if l3Same(l_Action, li_DropChangeStatus1) then
  else
  if (dcsExitFromSystem in aInspect) and
     l3Same(l_Action, li_DropChangeStatus_OnClose) then
   // - сбрасывать для всех просмотренных при выходе из системы
   TUnderControlService.Instance.MarkControlledAsOpen(ucpUnderControl.Controllable);
 end;//Assigned(ucpUnderControl) and CanUnControl and ucpUnderControl.HasControlStatus
//#UC END# *4BA0A3BC028F_4BA0A2CC0305_impl*
//#UC START# *4BA0A3BC028F_4BA0A2CC0305_var*
var
 l_Action : Il3CString;
//#UC END# *4BA0A3BC028F_4BA0A2CC0305_var*
//#UC START# *4BA0B0F4001D_4BA0A2CC0305_impl*
 NativeMainForm.HasForm(fm_enUnderControl.rFormID, vcm_ztAny, True, @l_Form);
 if Assigned(l_Form) then
 try
  op_ControlCenter_Refresh.Call(l_Form);
 finally
  l_Form := nil;
 end;{try..finally}
//#UC END# *4BA0B0F4001D_4BA0A2CC0305_impl*
//#UC START# *4BA0B0F4001D_4BA0A2CC0305_var*
var
 l_Form: IvcmEntityForm;
//#UC END# *4BA0B0F4001D_4BA0A2CC0305_var*
