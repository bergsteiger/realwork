//#UC START# *494F89C30197_4BD7279101C5exec_impl*
 if Assigned(tvConfs.TreeView.CurrentNode) and
  Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, l_ConfNode) then
 try
  if Ask(qr_ConfigurationDelete, [l_ConfNode.Config.ConfigName]) then
  try
   ConfigurationList.DeleteConfig(l_ConfNode);
   { Закроем форму если она была открыта }
   Aggregate.Operation(opcode_Result_Cancel);
  except
   on EConfigurationIsActiveNow do
    Say(err_ActiveConfigurationCannotDelete);
  end;
 finally
  l_ConfNode := nil;
 end;
//#UC END# *494F89C30197_4BD7279101C5exec_impl*
//#UC START# *494F89C30197_4BD7279101C5exec_var*
var
 l_ConfNode : InsConfigNode;
//#UC END# *494F89C30197_4BD7279101C5exec_var*
//#UC START# *494F89C30197_4BD7279101C5getstate_impl*
 inherited;
//#UC END# *494F89C30197_4BD7279101C5getstate_impl*
//#UC START# *494F89C30197_4BD7279101C5getstate_var*
//#UC END# *494F89C30197_4BD7279101C5getstate_var*
//#UC START# *494F89C30197_4BD7279101C5test_impl*
 if Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, l_Conf) then
 try
  with aParams do
  begin
   Op.Hint := vcmFmt(str_DeleteConfigConfirmHint, [l_Conf.Config.ConfigName]);
   Op.Flag[vcm_ofEnabled] := not l_Conf.Config.IsActive and
    not l_Conf.Config.IsPredefined;
  end;//with aParams
 finally
  l_Conf := nil;
 end;//try..finally
//#UC END# *494F89C30197_4BD7279101C5test_impl*
//#UC START# *494F89C30197_4BD7279101C5test_var*
var
 l_Conf : InsConfigNode;
//#UC END# *494F89C30197_4BD7279101C5test_var*
//#UC START# *4A8E8F2E0195_4BD7279101C5_impl*
 inherited;

 Scaled := False;

 tvConfs.Align := alClient;
 tvConfs.BorderStyle := bsNone;
 tvConfs.MultiStrokeItem := True;
 tvConfs.ActionElementMode := l3_amSecondSingleClick;
 tvConfs.ViewOptions := [voShowInterRowSpace, voShowIcons, voShowExpandable];
 tvConfs.OnGetItemIconHint := tvConfsGetItemIconHint;
 tvConfs.OnGetItemImage := tvConfsGetItemImage;
 tvConfs.OnActionElement := tvConfsActionElement;
 tvConfs.OnGetItemFont := tvConfsGetItemFont;
 tvConfs.SettingId := 'stidtvConfs';

 tvConfs.Images := dmConfigurationList.ilConfs;
 tvConfs.ViewOptions := tvConfs.ViewOptions - [voShowLines];
 tvConfs.TreeView.Tree.Root := ConfigurationList.ConfigTree;
//#UC END# *4A8E8F2E0195_4BD7279101C5_impl*
//#UC START# *4A8E8F2E0195_4BD7279101C5_var*
//#UC END# *4A8E8F2E0195_4BD7279101C5_var*
//#UC START# *4A9807F801F9_4BD7279101C5exec_impl*
 SetActiveInParent;
//#UC END# *4A9807F801F9_4BD7279101C5exec_impl*
//#UC START# *4A9807F801F9_4BD7279101C5exec_var*
//#UC END# *4A9807F801F9_4BD7279101C5exec_var*
//#UC START# *4BD7279101C5impl_uses*
 , l3ControlsTypes
 , OfficeLike_Result_Controls
//#UC END# *4BD7279101C5impl_uses*
//#UC START# *4BDAF7880236_4BD7279101C5exec_impl*
 inherited;
//#UC END# *4BDAF7880236_4BD7279101C5exec_impl*
//#UC START# *4BDAF7880236_4BD7279101C5exec_var*
//#UC END# *4BDAF7880236_4BD7279101C5exec_var*
//#UC START# *4BDAF7880236_4BD7279101C5test_impl*
 aParams.Op.Flag[vcm_ofEnabled] := False;
//#UC END# *4BDAF7880236_4BD7279101C5test_impl*
//#UC START# *4BDAF7880236_4BD7279101C5test_var*
//#UC END# *4BDAF7880236_4BD7279101C5test_var*
//#UC START# *4BDAF7A2005C_4BD7279101C5exec_impl*
 inherited;
//#UC END# *4BDAF7A2005C_4BD7279101C5exec_impl*
//#UC START# *4BDAF7A2005C_4BD7279101C5exec_var*
//#UC END# *4BDAF7A2005C_4BD7279101C5exec_var*
//#UC START# *4BDAF7A2005C_4BD7279101C5test_impl*
 aParams.Op.Flag[vcm_ofEnabled] := False;
//#UC END# *4BDAF7A2005C_4BD7279101C5test_impl*
//#UC START# *4BDAF7A2005C_4BD7279101C5test_var*
//#UC END# *4BDAF7A2005C_4BD7279101C5test_var*
//#UC START# *4C4088D301A1_4BD7279101C5exec_impl*
 SetActiveConf;
//#UC END# *4C4088D301A1_4BD7279101C5exec_impl*
//#UC START# *4C4088D301A1_4BD7279101C5exec_var*
//#UC END# *4C4088D301A1_4BD7279101C5exec_var*
//#UC START# *4C4088D301A1_4BD7279101C5test_impl*
 aParams.Op.Flag[vcm_ofEnabled] := Assigned(tvConfs.TreeView.CurrentNode);
 if Assigned(tvConfs.TreeView.CurrentNode) and
   Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, lConf) then
 try
  aParams.Op.Flag[vcm_ofEnabled] := not lConf.Config.IsActive;
 finally
  lConf := nil;
 end;
//#UC END# *4C4088D301A1_4BD7279101C5test_impl*
//#UC START# *4C4088D301A1_4BD7279101C5test_var*
var
 lConf : InsConfigNode;
//#UC END# *4C4088D301A1_4BD7279101C5test_var*
//#UC START# *4C4088E801E0_4BD7279101C5exec_impl*
 OpenConf;
//#UC END# *4C4088E801E0_4BD7279101C5exec_impl*
//#UC START# *4C4088E801E0_4BD7279101C5exec_var*
//#UC END# *4C4088E801E0_4BD7279101C5exec_var*
//#UC START# *4C4088E801E0_4BD7279101C5test_impl*
 aParams.Op.Flag[vcm_ofEnabled] := Assigned(tvConfs.TreeView.CurrentNode);
//#UC END# *4C4088E801E0_4BD7279101C5test_impl*
//#UC START# *4C4088E801E0_4BD7279101C5test_var*
//#UC END# *4C4088E801E0_4BD7279101C5test_var*
//#UC START# *4C4088F60021_4BD7279101C5exec_impl*
 { Получим текущую конфигурацию }
 if Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, lConfNode) then
 try
  l_eeNode := ConfigurationList.CopyConfig(lConfNode,
                                          vcmCStr(str_CopyConfSingle),
                                          vcmCStr(str_CopyConfDuplicate)) as IeeNode;
  try
   tvConfs.TreeView.GotoNode(l_eeNode);
   OpenConf(l_eeNode);
  finally
   l_eeNode := nil;
  end;//try..finally
 finally
  lConfNode := nil;
 end;//try..finally
//#UC END# *4C4088F60021_4BD7279101C5exec_impl*
//#UC START# *4C4088F60021_4BD7279101C5exec_var*
var
 l_eeNode   : IeeNode;
 lConfNode : InsConfigNode;
//#UC END# *4C4088F60021_4BD7279101C5exec_var*
//#UC START# *4C4088F60021_4BD7279101C5test_impl*
 aParams.Op.Flag[vcm_ofEnabled] := Assigned(tvConfs.TreeView.CurrentNode);
//#UC END# *4C4088F60021_4BD7279101C5test_impl*
//#UC START# *4C4088F60021_4BD7279101C5test_var*
//#UC END# *4C4088F60021_4BD7279101C5test_var*
//#UC START# *4C40890403A9_4BD7279101C5exec_impl*
 if Assigned(tvConfs.TreeView.CurrentNode) and
   Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, lConfNode) then
 try
  Say(inf_AnyInformation, [lConfNode.Config.ConfigHint]);
 finally
  lConfNode := nil;
 end;
//#UC END# *4C40890403A9_4BD7279101C5exec_impl*
//#UC START# *4C40890403A9_4BD7279101C5exec_var*
var
 lConfNode : InsConfigNode;
//#UC END# *4C40890403A9_4BD7279101C5exec_var*
//#UC START# *4C408917021D_4BD7279101C5exec_impl*
 if Assigned(tvConfs.TreeView.CurrentNode) and
  Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, l_ConfChild) then
 try
  if Ask(qr_RestoreAllSettings) then
  begin
   l_ConfChild.Config.RestoreAllSettings;
   l_ConfChild.Config.DoneEditing;
   tvConfs.Invalidate;
  end;
 finally
  l_ConfChild := nil;
 end;
//#UC END# *4C408917021D_4BD7279101C5exec_impl*
//#UC START# *4C408917021D_4BD7279101C5exec_var*
var
 l_ConfChild : InsConfigNode;
//#UC END# *4C408917021D_4BD7279101C5exec_var*
//#UC START# *4C40892F0293_4BD7279101C5exec_impl*
 if Assigned(tvConfs.TreeView.CurrentNode) and
  Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, l_ConfChild) then
 try
  if Ask(qr_RestoreDefaultValuesConf) then
  begin
   l_ConfChild.Config.Load(True);
   l_ConfChild.Config.DoneEditing;
   tvConfs.Invalidate;
  end;
 finally
  l_ConfChild := nil;
 end;
//#UC END# *4C40892F0293_4BD7279101C5exec_impl*
//#UC START# *4C40892F0293_4BD7279101C5exec_var*
var
 l_ConfChild : InsConfigNode;
//#UC END# *4C40892F0293_4BD7279101C5exec_var*
//#UC START# *4C40892F0293_4BD7279101C5test_impl*
 aParams.Op.Flag[vcm_ofEnabled] := IsCurrentConfChanged;
//#UC END# *4C40892F0293_4BD7279101C5test_impl*
//#UC START# *4C40892F0293_4BD7279101C5test_var*
//#UC END# *4C40892F0293_4BD7279101C5test_var*
//#UC START# *4C408C950385_4BD7279101C5exec_impl*
 if Assigned(tvConfs.TreeView.CurrentNode) and
  Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, l_ConfChild) then
 try
  if Ask(qr_SaveAsDefaultValuesConf) then
  begin
   l_ConfChild.Config.Load;
   l_ConfChild.Config.Save(True);
   l_ConfChild.Config.DoneEditing;
   tvConfs.Invalidate;
  end;
 finally
  l_ConfChild := nil;
 end;
//#UC END# *4C408C950385_4BD7279101C5exec_impl*
//#UC START# *4C408C950385_4BD7279101C5exec_var*
var
 l_ConfChild : InsConfigNode;
//#UC END# *4C408C950385_4BD7279101C5exec_var*
//#UC START# *4C408C950385_4BD7279101C5test_impl*
 aParams.Op.Flag[vcm_ofEnabled] := IsCurrentConfChanged and not IsCurrentReadOnly;
//#UC END# *4C408C950385_4BD7279101C5test_impl*
//#UC START# *4C408C950385_4BD7279101C5test_var*
//#UC END# *4C408C950385_4BD7279101C5test_var*
//#UC START# *4C408D790107_4BD7279101C5_impl*
 l_Node := aConf;
 try
  if not Assigned(l_Node) then
   l_Node := tvConfs.TreeView.CurrentNode;
  if Assigned(l_Node) and Supports(l_Node, InsConfigNode, lConfNode) then
  try
   TvcmModulesFactories.LoadSettings(Aggregate, lConfNode.Config);
   tvConfs.Invalidate;
  finally
   lConfNode := nil;
  end;
 finally
  l_Node := nil;
 end;
//#UC END# *4C408D790107_4BD7279101C5_impl*
//#UC START# *4C408D790107_4BD7279101C5_var*
var
 l_Node     : IeeNode;
 lConfNode : InsConfigNode;
//#UC END# *4C408D790107_4BD7279101C5_var*
//#UC START# *4C408D970189_4BD7279101C5_impl*
 if Assigned(tvConfs.TreeView.CurrentNode) then
 begin
  { Получим текущую выбранную конфигурацию }
  if Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, lConfChildNode) then
  try
   ConfigurationList.ActivateConfig(lConfChildNode);
  finally
   lConfChildNode := nil;
  end;
 end;
//#UC END# *4C408D970189_4BD7279101C5_impl*
//#UC START# *4C408D970189_4BD7279101C5_var*
var
 lConfChildNode: InsConfigNode;
//#UC END# *4C408D970189_4BD7279101C5_var*
//#UC START# *4C408DAB0071_4BD7279101C5_impl*
 Result := False;
 { Получим текущую конфигурацию }
 if Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, lConfNode) then
 try
  Result := lConfNode.Config.IsDifferFromDefault;
 finally
  lConfNode := nil;
 end;
//#UC END# *4C408DAB0071_4BD7279101C5_impl*
//#UC START# *4C408DAB0071_4BD7279101C5_var*
var
 lConfNode : InsConfigNode;
//#UC END# *4C408DAB0071_4BD7279101C5_var*
//#UC START# *4C408DC602F1_4BD7279101C5_impl*
 Result := False;
 if Assigned(tvConfs.TreeView.CurrentNode) and
   Supports(tvConfs.TreeView.CurrentNode, InsConfigNode, l_ConfChild) then
 try
  Result := l_ConfChild.Config.IsPredefined;
 finally
  l_ConfChild := nil;
 end;
//#UC END# *4C408DC602F1_4BD7279101C5_impl*
//#UC START# *4C408DC602F1_4BD7279101C5_var*
var
 l_ConfChild : InsConfigNode;
//#UC END# *4C408DC602F1_4BD7279101C5_var*
//#UC START# *51715EE202AC_4BD7279101C5_impl*
 l_eeNode := tvConfs.TreeView.GetNode(Index);
 try
  if Supports(l_eeNode, InsConfigNode, l_Node) then
  try
   Result := GetConfImage(l_Node.Config.Configuration.GetType,
    l_Node.COnfig.IsActive, l_Node.Config.IsDifferFromDefault);
  finally
   l_Node := nil;
  end
  else
   Result := -1;
 finally
  l_eeNode := nil;
 end;
//#UC END# *51715EE202AC_4BD7279101C5_impl*
//#UC START# *51715EE202AC_4BD7279101C5_var*
var
 l_Node : InsConfigNode;
 l_eeNode : IeeNode;
//#UC END# *51715EE202AC_4BD7279101C5_var*
//#UC START# *51715F4A00F1_4BD7279101C5_impl*
 l_Node := tvConfs.TreeView.GetNode(Index);
 try
  if Assigned(l_Node) and Supports(l_Node, InsConfigNode, l_Conf) then
  try
   { Шрифт для текущей конфигурации }
   if l_Conf.Config.IsActive then
    with aFont do
     Style := Style + [fsBold];
  finally
   l_Conf := nil;
  end;
 finally
  l_Node := nil;
 end;
//#UC END# *51715F4A00F1_4BD7279101C5_impl*
//#UC START# *51715F4A00F1_4BD7279101C5_var*
var
 l_Node : IeeNode;
 l_Conf : InsConfigNode;
//#UC END# *51715F4A00F1_4BD7279101C5_var*
//#UC START# *51715F570116_4BD7279101C5_impl*
 SetActiveConf;
//#UC END# *51715F570116_4BD7279101C5_impl*
//#UC START# *51715F570116_4BD7279101C5_var*
//#UC END# *51715F570116_4BD7279101C5_var*
//#UC START# *51715F680175_4BD7279101C5_impl*
 Result := nil;
 with TeeTreeView(Sender) do
  l_Node := tvConfs.TreeView.GetNode(Index);
  try
   if Supports(l_Node, InsConfigNode, l_Conf) then
   try
    Result := l_Conf.Config.ConfigHint;
   finally
    l_Conf := nil;
   end;//try..finally
  finally
   l_Node := nil;
  end;//try..finally
//#UC END# *51715F680175_4BD7279101C5_impl*
//#UC START# *51715F680175_4BD7279101C5_var*
var
 l_Node : IeeNode;
 l_Conf : InsConfigNode;
//#UC END# *51715F680175_4BD7279101C5_var*
//#UC START# *517176BE0397_4BD7279101C5_impl*
 case aConfType of
  CT_STANDARD:
   Result := IfThen(aChange,
    IfThen(aActive, cimgStandartChangeActive, cimgStandartChange),
    IfThen(aActive, cimgStandartActive,       cimgStandart));
  CT_GARANT5X:
   Result := IfThen(aChange,
    IfThen(aActive, cimgGarant5xChangeActive, cimgGarant5xChange),
    IfThen(aActive, cimgGarant5xActive,       cimgGarant5x));
 else
  Result := IfThen(aChange,
   IfThen(aActive, cimgUserChangeActive, cimgUserChange),
   IfThen(aActive, cimgUserActive,       cimgUser));
 end;
//#UC END# *517176BE0397_4BD7279101C5_impl*
//#UC START# *517176BE0397_4BD7279101C5_var*
//#UC END# *517176BE0397_4BD7279101C5_var*
