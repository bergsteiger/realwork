//#UC START# *4DA44B2C01BB_ext:FileName
w:\garant6x\implementation\Garant\GbaNemesis\View\DocumentListFromFile\PrimDocumentListFromFile_Module.pas
//#UC END# *4DA44B2C01BB_ext:FileName
//#UC START# *4DA44B2C01BBimpl_uses*
 , StdRes
//#UC END# *4DA44B2C01BBimpl_uses*
//#UC START# *4DA44BDB01D9_4DA44B2C01BBexec_impl*
 l_D := TnsOpenDialog.Create(Self);
 try
  l_D.InnerNumbersEnabled := True;
  l_D.Filter := vcmConstString(str_AllFileFilter);
  if l_D.Execute then
  begin
   try
    DefDataAdapter.NativeAdapter.MakeDocListFactory.MakeList(nsAStr(l_D.FileName), l_D.InnerNumbersChecked, l_L);
   except
    on EAccessDenied do
    begin
     vcmSay(str_AccessDenied);
     Exit;
    end;//on EAccessDenied
    on EInvalidType do
    begin
     vcmSay(str_InvalidType);
     Exit;
    end;//on EInvalidType
   end;//try..except
   l_deL := TdeListSet.Make(l_L);
   if IsEmptyList(l_deL) then
    vcmSay(inf_ListMissing, [str_ImportDocuments.AsStr])
   else
    TdmStdRes.OpenList(l_deL, nil);
  end;//l_D.Execute
 finally
  FreeAndNil(l_D);
 end;//try..finally
//#UC END# *4DA44BDB01D9_4DA44B2C01BBexec_impl*
//#UC START# *4DA44BDB01D9_4DA44B2C01BBexec_var*
 function IsEmptyList(const aL: IdeList): Boolean;
 var l_Info : TbsOpenListInfo;
 begin
  l_Info := TbsOpenListInfo.Create(aL);
  try
    Result := (l_Info.Data = nil);
  finally
    FreeAndNil(l_Info);
  end;//try..finally
 end;
var
 l_D : TnsOpenDialog;
 l_L : IDynList;
 l_deL: IdeList;
//#UC END# *4DA44BDB01D9_4DA44B2C01BBexec_var*
//#UC START# *4DA44BDB01D9_4DA44B2C01BBtest_impl*
 aParams.Op.Flag[vcm_ofEnabled] := afw.Application.IsInternal;
//#UC END# *4DA44BDB01D9_4DA44B2C01BBtest_impl*
//#UC START# *4DA44BDB01D9_4DA44B2C01BBtest_var*
//#UC END# *4DA44BDB01D9_4DA44B2C01BBtest_var*
