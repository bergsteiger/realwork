//#UC START# *479731C50290_4DAEF23D00EE_impl*
 if (f_Word <> nil) then
  if (f_Word.f_Key = Self) then
   f_Word.f_Key := nil;
 FreeAndNil(f_Word);
 inherited;
//#UC END# *479731C50290_4DAEF23D00EE_impl*
//#UC START# *479731C50290_4DAEF23D00EE_var*
//#UC END# *479731C50290_4DAEF23D00EE_var*
//#UC START# *47A869BB02DE_4DAEF23D00EE_impl*
 Result := l3PCharLen(AsCStr);
//#UC END# *47A869BB02DE_4DAEF23D00EE_impl*
//#UC START# *47A869BB02DE_4DAEF23D00EE_var*
//#UC END# *47A869BB02DE_4DAEF23D00EE_var*
//#UC START# *47A869D10074_4DAEF23D00EE_impl*
 EtfwCheck.Fail('Нельзя править значение ключевого слова');
//#UC END# *47A869D10074_4DAEF23D00EE_impl*
//#UC START# *47A869D10074_4DAEF23D00EE_var*
//#UC END# *47A869D10074_4DAEF23D00EE_var*
//#UC START# *4DAEF23D00EE_ext:ParentFileName
w:\common\components\rtl\Garant\ScriptEngine\tfwScriptingInterfaces.pas
//#UC END# *4DAEF23D00EE_ext:ParentFileName
//#UC START# *4DB578450319_4DAEF23D00EE_impl*
 Create(aDictionary, TtfwCStringFactory.C(aKeyword));
 EtfwCheck.IsTrue(f_Word = nil, 'Слово уже присвоено');
 f_Word := aWord.Use;
 if (f_Word <> nil) then
  f_Word.f_Key := Self;
//#UC END# *4DB578450319_4DAEF23D00EE_impl*
//#UC START# *4DB578450319_4DAEF23D00EE_var*
//#UC END# *4DB578450319_4DAEF23D00EE_var*
//#UC START# *4F46550C03E5_4DAEF23D00EE_impl*
 Create(aDictionary, TtfwCStringFactory.C(aKeyword));
//#UC END# *4F46550C03E5_4DAEF23D00EE_impl*
//#UC START# *4F46550C03E5_4DAEF23D00EE_var*
//#UC END# *4F46550C03E5_4DAEF23D00EE_var*
//#UC START# *4F4658D00140_4DAEF23D00EE_impl*
 inherited Create(aKeyword);
 f_Dictionary := aDictionary;
//#UC END# *4F4658D00140_4DAEF23D00EE_impl*
//#UC START# *4F4658D00140_4DAEF23D00EE_var*
//#UC END# *4F4658D00140_4DAEF23D00EE_var*
//#UC START# *55B1FDAD0118_4DAEF23D00EE_impl*
 f_Dictionary := aValue;
//#UC END# *55B1FDAD0118_4DAEF23D00EE_impl*
//#UC START# *55B1FDAD0118_4DAEF23D00EE_var*
//#UC END# *55B1FDAD0118_4DAEF23D00EE_var*
//#UC START# *55B794CC0388_4DAEF23D00EE_impl*
 if (aWord <> f_Word) then
 begin
  if (aWord <> nil) AND (f_Word <> nil) AND f_Word.IsForwardDeclaration then
  begin
   aWord.CompilerAssert(f_Word <> aWord, 'Присваиваем самому себе', aCtx);
   aWord.CompilerAssert(TkwForwardDeclaration(f_Word).RealWord = nil,
          Format('Предварительное определение слова %s уже было завершено',
                 [Self.AsString]), aCtx
          );
   TkwForwardDeclaration(f_Word).RealWord := aWord;
  end//(f_Word <> nil) AND f_Word.IsForwardDeclaration
  else
  begin
   if (f_Word <> nil) then
    if (f_Word.f_Key = Self) then
    begin
     if (aWord <> nil) AND aWord.ResultTypeInfo[aCtx].Has(tfw_wmRedefinition) then
      aWord.Redefines := f_Word
     else
      f_Word.f_Key := nil;
    end;//f_Word.f_Key = Self
   aWord.SetRefTo(f_Word);
   if (f_Word <> nil) then
    f_Word.f_Key := Self;
  end//(f_Word <> nil) AND f_Word.IsForwardDeclaration
 end;//aWord <> f_Word
//#UC END# *55B794CC0388_4DAEF23D00EE_impl*
//#UC START# *55B794CC0388_4DAEF23D00EE_var*
//#UC END# *55B794CC0388_4DAEF23D00EE_var*
