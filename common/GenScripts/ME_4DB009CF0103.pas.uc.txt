//#UC START# *4DB008F503BE_4DB009CF0103_impl*
 with GrowByOne^ do
 begin
  rType := tfw_vtInt;
  rInteger := aValue;
 end;//with GrowByOne^
 //Add(TtfwStackValue_C(aValue));
//#UC END# *4DB008F503BE_4DB009CF0103_impl*
//#UC START# *4DB008F503BE_4DB009CF0103_var*
//#UC END# *4DB008F503BE_4DB009CF0103_var*
//#UC START# *4DB0090A0000_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 l_V := pLast;
 EtfwCheck.IsTrue(l_V.rType = tfw_vtInt, 'Должно быть целое');
 Result := l_V.rInteger;
 DeleteLast;
//#UC END# *4DB0090A0000_4DB009CF0103_impl*
//#UC START# *4DB0090A0000_4DB009CF0103_var*
var
 l_V : PtfwStackValue;
//#UC END# *4DB0090A0000_4DB009CF0103_var*
//#UC START# *4DB013A10166_4DB009CF0103_impl*
 with GrowByOne^ do
 begin
  rType := tfw_vtBool;
  if aValue then
   rInteger := 1
  else
   rInteger := 0;
 end;//with GrowByOne^
 //Add(TtfwStackValue_C(aValue));
//#UC END# *4DB013A10166_4DB009CF0103_impl*
//#UC START# *4DB013A10166_4DB009CF0103_var*
//#UC END# *4DB013A10166_4DB009CF0103_var*
//#UC START# *4DB013AF01C9_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 Result := pLast.AsBoolean;
 DeleteLast;
//#UC END# *4DB013AF01C9_4DB009CF0103_impl*
//#UC START# *4DB013AF01C9_4DB009CF0103_var*
//#UC END# *4DB013AF01C9_4DB009CF0103_var*
//#UC START# *4DB04213007C_4DB009CF0103_impl*
 if Empty then
  Result := false
 else
  Result := (pLast.rType = tfw_vtBool); 
//#UC END# *4DB04213007C_4DB009CF0103_impl*
//#UC START# *4DB04213007C_4DB009CF0103_var*
//#UC END# *4DB04213007C_4DB009CF0103_var*
//#UC START# *4DB047EF0005_4DB009CF0103_impl*
 PushString(TtfwCStringFactory.C(aString));
//#UC END# *4DB047EF0005_4DB009CF0103_impl*
//#UC START# *4DB047EF0005_4DB009CF0103_var*
//#UC END# *4DB047EF0005_4DB009CF0103_var*
//#UC START# *4DB0480002EF_4DB009CF0103_impl*
 with GrowByOne^ do
 begin
  rType := tfw_vtStr;
  rString := aString;
 end;//with GrowByOne^
 //Add(TtfwStackValue_C(aString));
//#UC END# *4DB0480002EF_4DB009CF0103_impl*
//#UC START# *4DB0480002EF_4DB009CF0103_var*
//#UC END# *4DB0480002EF_4DB009CF0103_var*
//#UC START# *4DB0480A0174_4DB009CF0103_impl*
 PushString(TtfwCStringFactory.C(aString));
//#UC END# *4DB0480A0174_4DB009CF0103_impl*
//#UC START# *4DB0480A0174_4DB009CF0103_var*
//#UC END# *4DB0480A0174_4DB009CF0103_var*
//#UC START# *4DB0488A0157_4DB009CF0103_impl*
 if Empty then
  Result := false
 else
  Result := (pLast.rType = tfw_vtStr); 
//#UC END# *4DB0488A0157_4DB009CF0103_impl*
//#UC START# *4DB0488A0157_4DB009CF0103_var*
//#UC END# *4DB0488A0157_4DB009CF0103_var*
//#UC START# *4DB0489C0129_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 Result := pLast.AsDelphiString;
 DeleteLast;
//#UC END# *4DB0489C0129_4DB009CF0103_impl*
//#UC START# *4DB0489C0129_4DB009CF0103_var*
//#UC END# *4DB0489C0129_4DB009CF0103_var*
//#UC START# *4DB1784F0388_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 Result := pLast.AsString;
 DeleteLast;
//#UC END# *4DB1784F0388_4DB009CF0103_impl*
//#UC START# *4DB1784F0388_4DB009CF0103_var*
//#UC END# *4DB1784F0388_4DB009CF0103_var*
//#UC START# *4DB17E8502F0_4DB009CF0103_impl*
 if Empty then
  Result := false
 else
  Result := (pLast.rType = tfw_vtInt); 
//#UC END# *4DB17E8502F0_4DB009CF0103_impl*
//#UC START# *4DB17E8502F0_4DB009CF0103_var*
//#UC END# *4DB17E8502F0_4DB009CF0103_var*
//#UC START# *4DB6EE5E031F_4DB009CF0103_impl*
 Add(Last);
//#UC END# *4DB6EE5E031F_4DB009CF0103_impl*
//#UC START# *4DB6EE5E031F_4DB009CF0103_var*
//#UC END# *4DB6EE5E031F_4DB009CF0103_var*
//#UC START# *4DB6F04F02D2_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 DeleteLast;
//#UC END# *4DB6F04F02D2_4DB009CF0103_impl*
//#UC START# *4DB6F04F02D2_4DB009CF0103_var*
//#UC END# *4DB6F04F02D2_4DB009CF0103_var*
//#UC START# *4DB704AA00BF_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 1, 'Должно быть больше одного элемента в стеке');
 Exchange(Count - 1, Count - 2);
//#UC END# *4DB704AA00BF_4DB009CF0103_impl*
//#UC START# *4DB704AA00BF_4DB009CF0103_var*
//#UC END# *4DB704AA00BF_4DB009CF0103_var*
//#UC START# *4DBAF89E0328_4DB009CF0103_impl*
 GrowByOne^ := aValue;
 //Add(aValue);
//#UC END# *4DBAF89E0328_4DB009CF0103_impl*
//#UC START# *4DBAF89E0328_4DB009CF0103_var*
//#UC END# *4DBAF89E0328_4DB009CF0103_var*
//#UC START# *4DBAF8B002CA_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 Result := pLast^;
 DeleteLast;
//#UC END# *4DBAF8B002CA_4DB009CF0103_impl*
//#UC START# *4DBAF8B002CA_4DB009CF0103_var*
//#UC END# *4DBAF8B002CA_4DB009CF0103_var*
//#UC START# *4DBAF8C200E2_4DB009CF0103_impl*
 if Empty then
  Result := false
 else
  Result := (pLast.rType = aType); 
//#UC END# *4DBAF8C200E2_4DB009CF0103_impl*
//#UC START# *4DBAF8C200E2_4DB009CF0103_var*
//#UC END# *4DBAF8C200E2_4DB009CF0103_var*
//#UC START# *4DBAF910011B_4DB009CF0103_impl*
 with GrowByOne^ do
 begin
  rType := tfw_vtObj;
  rInteger := Integer(aValue);
 end;//with GrowByOne^
 //Add(TtfwStackValue_C(aValue));
//#UC END# *4DBAF910011B_4DB009CF0103_impl*
//#UC START# *4DBAF910011B_4DB009CF0103_var*
//#UC END# *4DBAF910011B_4DB009CF0103_var*
//#UC START# *4DBAF9210150_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 Result := pLast.AsObject;
 DeleteLast;
//#UC END# *4DBAF9210150_4DB009CF0103_impl*
//#UC START# *4DBAF9210150_4DB009CF0103_var*
//#UC END# *4DBAF9210150_4DB009CF0103_var*
//#UC START# *4DCBD16302CD_4DB009CF0103_impl*
 l_L := pLast;
 if (l_L.rInteger <> 0) AND (l_L.rType = tfw_vtInt) then
  Add(Last);
//#UC END# *4DCBD16302CD_4DB009CF0103_impl*
//#UC START# *4DCBD16302CD_4DB009CF0103_var*
var
 l_L : PtfwStackValue;
//#UC END# *4DCBD16302CD_4DB009CF0103_var*
//#UC START# *4DEF28E400E0_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 2, 'Должно быть больше двух элементов в стеке');
 l_BottomID := Count - 3;
 Exchange(l_BottomID, l_BottomID + 1);
 Inc(l_BottomID);
 Exchange(l_BottomID, l_BottomID + 1);
//#UC END# *4DEF28E400E0_4DB009CF0103_impl*
//#UC START# *4DEF28E400E0_4DB009CF0103_var*
var
 l_BottomID: Integer;
//#UC END# *4DEF28E400E0_4DB009CF0103_var*
//#UC START# *4DEF5D850232_4DB009CF0103_impl*
 if IsTopInt then
  Add(PrevTop(PopInt, False))
 else
  EtfwCheck.Fail('Должно быть целое');
//#UC END# *4DEF5D850232_4DB009CF0103_impl*
//#UC START# *4DEF5D850232_4DB009CF0103_var*
//#UC END# *4DEF5D850232_4DB009CF0103_var*
//#UC START# *4DEF5FBB0157_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 2, 'Должно быть больше двух элементов в стеке');
 l_TopID := Count - 1;
 Exchange(l_TopID, l_TopID - 1);
 Dec(l_TopID);
 Exchange(l_TopID, l_TopID - 1);
//#UC END# *4DEF5FBB0157_4DB009CF0103_impl*
//#UC START# *4DEF5FBB0157_4DB009CF0103_var*
var
 l_TopID: Integer;
//#UC END# *4DEF5FBB0157_4DB009CF0103_var*
//#UC START# *4DEF5FE202B1_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 3, 'Должно быть больше трёх элементов в стеке');
 l_TopID := Count - 1;
 Exchange(l_TopID - 2, l_TopID);
 Exchange(l_TopID - 1, l_TopID - 3);
//#UC END# *4DEF5FE202B1_4DB009CF0103_impl*
//#UC START# *4DEF5FE202B1_4DB009CF0103_var*
var
 l_TopID: Integer;
//#UC END# *4DEF5FE202B1_4DB009CF0103_var*
//#UC START# *4DEF5FF802E6_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 3, 'Должно быть больше трёх элементов в стеке');
 Add(PrevTop(3, False));
 Add(PrevTop(3, False));
//#UC END# *4DEF5FF802E6_4DB009CF0103_impl*
//#UC START# *4DEF5FF802E6_4DB009CF0103_var*
//#UC END# *4DEF5FF802E6_4DB009CF0103_var*
//#UC START# *4DEF60050174_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 1, 'Должно быть больше одного элемента в стеке');
 Add(PrevTop(1, False));
 Add(PrevTop(1, False));
//#UC END# *4DEF60050174_4DB009CF0103_impl*
//#UC START# *4DEF60050174_4DB009CF0103_var*
//#UC END# *4DEF60050174_4DB009CF0103_var*
//#UC START# *4DEF6013023F_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 1, 'Должно быть больше одного элемента в стеке');
 DeleteLast;
 DeleteLast;
//#UC END# *4DEF6013023F_4DB009CF0103_impl*
//#UC START# *4DEF6013023F_4DB009CF0103_var*
//#UC END# *4DEF6013023F_4DB009CF0103_var*
//#UC START# *4DEF602000E4_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 1, 'Должно быть больше одного элемента в стеке');
 Delete(Count - 2);
//#UC END# *4DEF602000E4_4DB009CF0103_impl*
//#UC START# *4DEF602000E4_4DB009CF0103_var*
//#UC END# *4DEF602000E4_4DB009CF0103_var*
//#UC START# *4DEF602B03A2_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 1, 'Должно быть больше одного элемента в стеке');
 Insert(Count - 2, Last);
//#UC END# *4DEF602B03A2_4DB009CF0103_impl*
//#UC START# *4DEF602B03A2_4DB009CF0103_var*
//#UC END# *4DEF602B03A2_4DB009CF0103_var*
//#UC START# *4DF06491010E_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 1, 'Должно быть больше одного элемента в стеке');
 Add(PrevTop(1, False));
//#UC END# *4DF06491010E_4DB009CF0103_impl*
//#UC START# *4DF06491010E_4DB009CF0103_var*
//#UC END# *4DF06491010E_4DB009CF0103_var*
//#UC START# *4DF0649B0073_4DB009CF0103_impl*
 //if IsTopInt then
  Add(PrevTop(PopInt, True))
// else
//  EtfwCheck.Fail(False);
//#UC END# *4DF0649B0073_4DB009CF0103_impl*
//#UC START# *4DF0649B0073_4DB009CF0103_var*
var
 l_Index: Integer;
//#UC END# *4DF0649B0073_4DB009CF0103_var*
//#UC START# *4DF069C60159_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > aDelta, 'количество элементов меньше или равно дельте');
 l_Index := Count - aDelta - 1;
 Result := ItemSlot(l_Index)^;
 if aNeedPop then
  Delete(l_Index);
//#UC END# *4DF069C60159_4DB009CF0103_impl*
//#UC START# *4DF069C60159_4DB009CF0103_var*
var
 l_Index: Integer;
//#UC END# *4DF069C60159_4DB009CF0103_var*
//#UC START# *4EB274C402BC_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 Result := pLast.AsIntf(aGUID);
 DeleteLast;
//#UC END# *4EB274C402BC_4DB009CF0103_impl*
//#UC START# *4EB274C402BC_4DB009CF0103_var*
//#UC END# *4EB274C402BC_4DB009CF0103_var*
//#UC START# *4EB274E201C2_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 Result := pLast.AsIntf;
 DeleteLast;
//#UC END# *4EB274E201C2_4DB009CF0103_impl*
//#UC START# *4EB274E201C2_4DB009CF0103_var*
//#UC END# *4EB274E201C2_4DB009CF0103_var*
//#UC START# *4EB2759D021C_4DB009CF0103_impl*
 if Empty then
  Result := false
 else
  Result := (pLast.rType = tfw_vtIntf); 
//#UC END# *4EB2759D021C_4DB009CF0103_impl*
//#UC START# *4EB2759D021C_4DB009CF0103_var*
//#UC END# *4EB2759D021C_4DB009CF0103_var*
//#UC START# *4F3E34A1009A_4DB009CF0103get_impl*
 Result := Count;
//#UC END# *4F3E34A1009A_4DB009CF0103get_impl*
//#UC START# *4F3E34A1009A_4DB009CF0103get_var*
//#UC END# *4F3E34A1009A_4DB009CF0103get_var*
//#UC START# *4F4749150158_4DB009CF0103_impl*
 PushString(TtfwCStringFactory.C(aString));
//#UC END# *4F4749150158_4DB009CF0103_impl*
//#UC START# *4F4749150158_4DB009CF0103_var*
//#UC END# *4F4749150158_4DB009CF0103_var*
//#UC START# *4F4FD9790124_4DB009CF0103_impl*
 Add(TtfwStackValue_C(aFile));
//#UC END# *4F4FD9790124_4DB009CF0103_impl*
//#UC START# *4F4FD9790124_4DB009CF0103_var*
//#UC END# *4F4FD9790124_4DB009CF0103_var*
//#UC START# *4F4FD99A0182_4DB009CF0103_impl*
 pLast.CheckTypeIs(tfw_vtFile);
 Result := ItfwFile(pLast.AsIntf);
 DeleteLast;
//#UC END# *4F4FD99A0182_4DB009CF0103_impl*
//#UC START# *4F4FD99A0182_4DB009CF0103_var*
//#UC END# *4F4FD99A0182_4DB009CF0103_var*
//#UC START# *4F4FDC210286_4DB009CF0103_impl*
 if Empty then
  Result := false
 else
  Result := (pLast.rType = tfw_vtObj); 
//#UC END# *4F4FDC210286_4DB009CF0103_impl*
//#UC START# *4F4FDC210286_4DB009CF0103_var*
//#UC END# *4F4FDC210286_4DB009CF0103_var*
//#UC START# *4F4FDCFB0195_4DB009CF0103_impl*
 if Empty then
  Result := false
 else
  Result := (pLast.rType = tfw_vtChar); 
//#UC END# *4F4FDCFB0195_4DB009CF0103_impl*
//#UC START# *4F4FDCFB0195_4DB009CF0103_var*
//#UC END# *4F4FDCFB0195_4DB009CF0103_var*
//#UC START# *4F4FDD140127_4DB009CF0103_impl*
 Add(TtfwStackValue_C(aChar));
//#UC END# *4F4FDD140127_4DB009CF0103_impl*
//#UC START# *4F4FDD140127_4DB009CF0103_var*
//#UC END# *4F4FDD140127_4DB009CF0103_var*
//#UC START# *4F4FDD38028A_4DB009CF0103_impl*
 Result := pLast.AsChar;
 DeleteLast;
//#UC END# *4F4FDD38028A_4DB009CF0103_impl*
//#UC START# *4F4FDD38028A_4DB009CF0103_var*
//#UC END# *4F4FDD38028A_4DB009CF0103_var*
//#UC START# *4F4FE1DC0081_4DB009CF0103_impl*
 PushString(TtfwCStringFactory.ViewOf(aStr));
 //Add(TtfwStackValue_C(aStr));
//#UC END# *4F4FE1DC0081_4DB009CF0103_impl*
//#UC START# *4F4FE1DC0081_4DB009CF0103_var*
//#UC END# *4F4FE1DC0081_4DB009CF0103_var*
//#UC START# *4F4FEB6100A7_4DB009CF0103_impl*
 Result := pLast.AsPrintable;
 DeleteLast;
//#UC END# *4F4FEB6100A7_4DB009CF0103_impl*
//#UC START# *4F4FEB6100A7_4DB009CF0103_var*
//#UC END# *4F4FEB6100A7_4DB009CF0103_var*
//#UC START# *508526FE0229_4DB009CF0103_impl*
 with GrowByOne^ do
 begin
  rType := tfw_vtClass;
  rInteger := Integer(aClass);
 end;//with GrowByOne^
 //Add(TtfwStackValue_C(aClass));
//#UC END# *508526FE0229_4DB009CF0103_impl*
//#UC START# *508526FE0229_4DB009CF0103_var*
//#UC END# *508526FE0229_4DB009CF0103_var*
//#UC START# *5085273502AA_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count > 0, 'Стек пустой');
 Result := pLast.AsClass;
 DeleteLast;
//#UC END# *5085273502AA_4DB009CF0103_impl*
//#UC START# *5085273502AA_4DB009CF0103_var*
//#UC END# *5085273502AA_4DB009CF0103_var*
//#UC START# *5085275F0044_4DB009CF0103_impl*
 if Empty then
  Result := false
 else
  Result := (pLast.rType = tfw_vtClass);
//#UC END# *5085275F0044_4DB009CF0103_impl*
//#UC START# *5085275F0044_4DB009CF0103_var*
//#UC END# *5085275F0044_4DB009CF0103_var*
//#UC START# *54F7390300EC_4DB009CF0103_impl*
 Result := Pop.AsObject(aClass, aAllowNil);
//#UC END# *54F7390300EC_4DB009CF0103_impl*
//#UC START# *54F7390300EC_4DB009CF0103_var*
//#UC END# *54F7390300EC_4DB009CF0103_var*
//#UC START# *54F8664200B0_4DB009CF0103_impl*
 Result := Pop.AsClass(aClass);
//#UC END# *54F8664200B0_4DB009CF0103_impl*
//#UC START# *54F8664200B0_4DB009CF0103_var*
//#UC END# *54F8664200B0_4DB009CF0103_var*
//#UC START# *54F9C2A502E9_4DB009CF0103_impl*
 l_S := Tl3Str(l3PCharLen(PopString));
 Result := l_S.AsWideString;
//#UC END# *54F9C2A502E9_4DB009CF0103_impl*
//#UC START# *54F9C2A502E9_4DB009CF0103_var*
var
 l_S : Tl3Str;
//#UC END# *54F9C2A502E9_4DB009CF0103_var*
//#UC START# *54F9C2CF0044_4DB009CF0103_impl*
 PushString(l3CStr(aValue));
//#UC END# *54F9C2CF0044_4DB009CF0103_impl*
//#UC START# *54F9C2CF0044_4DB009CF0103_var*
//#UC END# *54F9C2CF0044_4DB009CF0103_var*
//#UC START# *54F9C6530229_4DB009CF0103_impl*
 Result.Y := PopInt;
 Result.X := PopInt;
//#UC END# *54F9C6530229_4DB009CF0103_impl*
//#UC START# *54F9C6530229_4DB009CF0103_var*
//#UC END# *54F9C6530229_4DB009CF0103_var*
//#UC START# *54F9C66902E3_4DB009CF0103_impl*
 PushInt(aPoint.X);
 PushInt(aPoint.Y);
//#UC END# *54F9C66902E3_4DB009CF0103_impl*
//#UC START# *54F9C66902E3_4DB009CF0103_var*
//#UC END# *54F9C66902E3_4DB009CF0103_var*
//#UC START# *5510153F001C_4DB009CF0103_impl*
 with GrowByOne^ do
 begin
  rType := tfw_vtList;
  ItfwValueList(rString) := aList;
 end;//with GrowByOne^
 //Push(TtfwStackValue_C(aList));
//#UC END# *5510153F001C_4DB009CF0103_impl*
//#UC START# *5510153F001C_4DB009CF0103_var*
//#UC END# *5510153F001C_4DB009CF0103_var*
//#UC START# *551015680218_4DB009CF0103_impl*
 if (pLast.rType = tfw_vtNil) then
 begin
  Drop;
  Result := nil;
 end//pLast.rType = tfw_vtNil
 else
 begin
  pLast.CheckTypeIs(tfw_vtList);
  Result := ItfwValueList(Pop.AsIntf);
 end;//pLast.rType = tfw_vtNil
//#UC END# *551015680218_4DB009CF0103_impl*
//#UC START# *551015680218_4DB009CF0103_var*
//#UC END# *551015680218_4DB009CF0103_var*
//#UC START# *55E848EA003D_4DB009CF0103_impl*
 l_C := Count + aN;
 if (Capacity < l_C) then
  Capacity := l_C;
 for l_Index := (Count - aN) to Pred(Count) do
  Add(ItemSlot(l_Index)^);
//#UC END# *55E848EA003D_4DB009CF0103_impl*
//#UC START# *55E848EA003D_4DB009CF0103_var*
var
 l_Index : Integer;
 l_C : Integer; 
//#UC END# *55E848EA003D_4DB009CF0103_var*
//#UC START# *55E84904001E_4DB009CF0103_impl*
 EtfwCheck.IsTrue(Count >= aN, 'Элементов в стеке меньше, чем пытаются удалить');
 for l_Index := 0 to Pred(aN) do
  DeleteLast;
//#UC END# *55E84904001E_4DB009CF0103_impl*
//#UC START# *55E84904001E_4DB009CF0103_var*
var
 l_Index : Integer;
//#UC END# *55E84904001E_4DB009CF0103_var*
//#UC START# *55EFF78F01D7_4DB009CF0103_impl*
 {$IfDef XE}
 Result := PtfwStackValue(ItemSlot(Count - 1));
 {$Else  XE}
 Result := ItemSlot(Count - 1);
 {$EndIf XE}
//#UC END# *55EFF78F01D7_4DB009CF0103_impl*
//#UC START# *55EFF78F01D7_4DB009CF0103_var*
//#UC END# *55EFF78F01D7_4DB009CF0103_var*
//#UC START# *5601534A0012_4DB009CF0103_impl*
 Result := pLast; 
//#UC END# *5601534A0012_4DB009CF0103_impl*
//#UC START# *5601534A0012_4DB009CF0103_var*
//#UC END# *5601534A0012_4DB009CF0103_var*
//#UC START# *5613FA08013C_4DB009CF0103_impl*
 with GrowByOne^ do
 begin
  rType := tfw_vtIntf;
  IUnknown(rString) := anIntf;
 end;//with GrowByOne^
//#UC END# *5613FA08013C_4DB009CF0103_impl*
//#UC START# *5613FA08013C_4DB009CF0103_var*
//#UC END# *5613FA08013C_4DB009CF0103_var*
