//#UC START# *479731C50290_4E37F5B402A5_impl*
 f_Engine := nil;
 inherited;
//#UC END# *479731C50290_4E37F5B402A5_impl*
//#UC START# *479731C50290_4E37F5B402A5_var*
//#UC END# *479731C50290_4E37F5B402A5_var*
//#UC START# *4BF4E6A00093_4E37F5B402A5_impl*
 GetColumnAndRow(l_Col, l_Row);
 try
  Result := f_TablePara.Para[l_Row].AsList.Para[l_Col];
 finally
  f_TablePara := nil;
 end;
//#UC END# *4BF4E6A00093_4E37F5B402A5_impl*
//#UC START# *4BF4E6A00093_4E37F5B402A5_var*
var
 l_Col : Integer;
 l_Row : Integer;
//#UC END# *4BF4E6A00093_4E37F5B402A5_var*
//#UC START# *4E32CA35008A_4E37F5B402A5_impl*
 with ItfwScriptEngine(f_Engine) do
 begin
  aRow := PopInt;
  aCol := PopInt;
 end; // with ItfwScriptEngine(f_Engine) do
//#UC END# *4E32CA35008A_4E37F5B402A5_impl*
//#UC START# *4E32CA35008A_4E37F5B402A5_var*
//#UC END# *4E32CA35008A_4E37F5B402A5_var*
//#UC START# *4E32CA5E0115_4E37F5B402A5_impl*
 Result := ItfwScriptEngine(f_Engine).PopInt;
//#UC END# *4E32CA5E0115_4E37F5B402A5_impl*
//#UC START# *4E32CA5E0115_4E37F5B402A5_var*
//#UC END# *4E32CA5E0115_4E37F5B402A5_var*
//#UC START# *50B8BCDF0093_4E37F5B402A5_impl*
 f_Engine := Pointer(aCtx.rEngine);
 l_Point := aPoint;
 while not l_Point.AsObject.IsKindOf(k2_typTable) do
 begin
  l_Point := l_Point.Inner;
  RunnerAssert(l_Point <> nil, 'Курсор не в таблице.', aCtx);
 end; // while not f_Cursor.IsKindOf(k2_typTable) do
 f_TablePara := l_Point.Obj^.AsPara.AsList;
 SelectColumn(anEditor);
//#UC END# *50B8BCDF0093_4E37F5B402A5_impl*
//#UC START# *50B8BCDF0093_4E37F5B402A5_var*
var
 l_Point : InevBasePoint;
//#UC END# *50B8BCDF0093_4E37F5B402A5_var*
