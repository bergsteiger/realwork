//#UC START# *47B2C42A0163_4F61DE50034C_impl*
 Assert(false);
//#UC END# *47B2C42A0163_4F61DE50034C_impl*
//#UC START# *47B2C42A0163_4F61DE50034C_var*
//#UC END# *47B2C42A0163_4F61DE50034C_var*
//#UC START# *47B99D4503A2_4F61DE50034C_impl*
 Result := -1;
 Assert(false);
//#UC END# *47B99D4503A2_4F61DE50034C_impl*
//#UC START# *47B99D4503A2_4F61DE50034C_var*
//#UC END# *47B99D4503A2_4F61DE50034C_var*
//#UC START# *4F61DEF6012B_4F61DE50034C_impl*
 Result := nil;
 for l_Index := 0 to Pred(Count) do
 begin
  I := Items[l_Index].IndexOf(aControl);
  if (I <> -1) then
  begin
   Result := Items[l_Index];
   Break;
  end;//I <> -1
 end;//for l_Index
//#UC END# *4F61DEF6012B_4F61DE50034C_impl*
//#UC START# *4F61DEF6012B_4F61DE50034C_var*
var
 l_Index, I : Integer;
//#UC END# *4F61DEF6012B_4F61DE50034C_var*
//#UC START# *4F61DF1D01E2_4F61DE50034C_impl*
 Result := nil;
 for l_Index := 0 to Pred(Count) do
  if (Items[l_Index].Navigator = aNavigator) then
  begin
   Result := Items[l_Index];
   Break;
  end;//Items[l_Index].Navigator = aNavigator
//#UC END# *4F61DF1D01E2_4F61DE50034C_impl*
//#UC START# *4F61DF1D01E2_4F61DE50034C_var*
var
 l_Index : Integer;
//#UC END# *4F61DF1D01E2_4F61DE50034C_var*
//#UC START# *4F61DF43019D_4F61DE50034C_impl*
 DeleteControl(aControl);
 (* Добавим навигатор и компонент в список *)
 l_Navigator := Find(aNavigator);
 (* Создадим новый навигатор *)
 if not Assigned(l_Navigator) then
 begin
  l_Navigator := TnpControls.Create(aNavigator);
  try
   Add(l_Navigator);
   (* Добавим в список компонентов навигатора *)
   l_Navigator.Add(aControl);
  finally
   FreeAndNil(l_Navigator);
  end;//try..finally
 end//not Assigned(l_Navigator)
 else
 (* Добавим в список компонентов навигатора *)
  l_Navigator.Add(aControl);
//#UC END# *4F61DF43019D_4F61DE50034C_impl*
//#UC START# *4F61DF43019D_4F61DE50034C_var*
var
 l_Navigator : TnpControls;
//#UC END# *4F61DF43019D_4F61DE50034C_var*
//#UC START# *4F61DF7A0326_4F61DE50034C_impl*
 for l_Index := 0 to Pred(Count) do
  if Items[l_Index].DeleteControl(aControl) then
   Break;
//#UC END# *4F61DF7A0326_4F61DE50034C_impl*
//#UC START# *4F61DF7A0326_4F61DE50034C_var*
var
 l_Index : Integer;
//#UC END# *4F61DF7A0326_4F61DE50034C_var*
//#UC START# *4F61DF950395_4F61DE50034C_impl*
 lN := Find(aControl);
 if Assigned(lN) then
 begin
  (* После пристыковки компонент будет автоматически удалён из списка
     компонентов lN *)
  aControl.ManualDock(lN.Navigator);
  Assert(lN.IndexOf(lN.Navigator) < 0);
  // - проверим факт, описаннный выше
 end;//Assigned(lN)
//#UC END# *4F61DF950395_4F61DE50034C_impl*
//#UC START# *4F61DF950395_4F61DE50034C_var*
var
 lN : TnpControls;
//#UC END# *4F61DF950395_4F61DE50034C_var*
