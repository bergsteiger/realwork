//#UC START# *4F854878032F_ext:FileName
w:\common\components\rtl\Garant\ScriptEngine\WinUtilsPack.pas
//#UC END# *4F854878032F_ext:FileName
//#UC START# *4F854878032Fimpl_uses*
//#UC END# *4F854878032Fimpl_uses*
//#UC START# *510AB608018E_4F854878032F_impl*
 Result := True;
 try
  aData.rCtx.rEngine.PushInt(Integer(hWindow));
  aData.rWord.DoIt(aData.rCtx^);
 except
  on EtfwBreakIterator do
   Result := False;
 end;//try..except
//#UC END# *510AB608018E_4F854878032F_impl*
//#UC START# *510AB608018E_4F854878032F_var*
//#UC END# *510AB608018E_4F854878032F_var*
//#UC START# *55192F7C0078_55192F7C0078_Word_impl*
 Result := Windows.IsWindowVisible(aWnd);
//#UC END# *55192F7C0078_55192F7C0078_Word_impl*
//#UC START# *55192F7C0078_55192F7C0078_Word_var*
//#UC END# *55192F7C0078_55192F7C0078_Word_var*
//#UC START# *55192F980349_55192F980349_Word_impl*
 GetClassName(aWnd, l_Buffer, SizeOf(l_Buffer));
 Result := l_Buffer;
//#UC END# *55192F980349_55192F980349_Word_impl*
//#UC START# *55192F980349_55192F980349_Word_var*
var
 l_Buffer: array[Byte] of Char;
//#UC END# *55192F980349_55192F980349_Word_var*
//#UC START# *55192FAF01D3_55192FAF01D3_Word_impl*
 GetWindowText(aWnd, l_Buffer, SizeOf(l_Buffer));
 Result := l_Buffer;
//#UC END# *55192FAF01D3_55192FAF01D3_Word_impl*
//#UC START# *55192FAF01D3_55192FAF01D3_Word_var*
var
 l_Buffer: array[Byte] of Char;
//#UC END# *55192FAF01D3_55192FAF01D3_Word_var*
//#UC START# *5519300102ED_5519300102ED_Word_impl*
 SendMessage(aWnd, WM_CLOSE, 0, 0);
//#UC END# *5519300102ED_5519300102ED_Word_impl*
//#UC START# *5519300102ED_5519300102ED_Word_var*
//#UC END# *5519300102ED_5519300102ED_Word_var*
//#UC START# *55193045008D_55193045008D_Word_impl*
 GetWindowThreadProcessId(aWnd, l_Process);
 Result := (l_Process = GetCurrentProcessId);
//#UC END# *55193045008D_55193045008D_Word_impl*
//#UC START# *55193045008D_55193045008D_Word_var*
var
 l_Process: DWORD;
//#UC END# *55193045008D_55193045008D_Word_var*
//#UC START# *5519307103E4_5519307103E4_Word_impl*
 Windows.SetForegroundWindow(aWnd);
//#UC END# *5519307103E4_5519307103E4_Word_impl*
//#UC START# *5519307103E4_5519307103E4_Word_var*
//#UC END# *5519307103E4_5519307103E4_Word_var*
//#UC START# *551930A001DF_551930A001DF_Word_impl*
 System.FillChar(l_Current, SizeOf(l_Current), 0);
 l_Current.hItem := TreeView_GetSelection(aWnd);
 l_Current.mask := TVIF_TEXT;
 l_Current.cchTextMax := 255;
 l_Current.pszText := @l_Text;

 l_Res := TreeView_GetItemA(aWnd, l_Current);
 if l_Res then
  Result := l_Current.pszText
 else
  Result := '';
//#UC END# *551930A001DF_551930A001DF_Word_impl*
//#UC START# *551930A001DF_551930A001DF_Word_var*
var
 l_Current: TTVItemA;
 l_Res: Boolean;
 l_Text: array[1..255] of AnsiChar;
//#UC END# *551930A001DF_551930A001DF_Word_var*
//#UC START# *551941E30047_551941E30047_Word_impl*
 l_Data.rWord := aLambda;
 l_Data.rCtx := @aCtx;
 
 EnumChildWindows(aWnd, @IterateWindowsMethod, LongInt(@l_Data));
//#UC END# *551941E30047_551941E30047_Word_impl*
//#UC START# *551941E30047_551941E30047_Word_var*
var
 l_Data: TtfwWordCallContext;
//#UC END# *551941E30047_551941E30047_Word_var*
//#UC START# *5519427E00F3_5519427E00F3_Word_impl*
 l_Data.rWord := aLambda;
 l_Data.rCtx := @aCtx;
 
 EnumWindows(@IterateWindowsMethod, LongInt(@l_Data));
//#UC END# *5519427E00F3_5519427E00F3_Word_impl*
//#UC START# *5519427E00F3_5519427E00F3_Word_var*
var
 l_Data: TtfwWordCallContext;
//#UC END# *5519427E00F3_5519427E00F3_Word_var*
//#UC START# *551943280118_551943280118_Word_impl*
 Result := Windows.WindowFromPoint(aPoint);
//#UC END# *551943280118_551943280118_Word_impl*
//#UC START# *551943280118_551943280118_Word_var*
//#UC END# *551943280118_551943280118_Word_var*
//#UC START# *5519434F0000_5519434F0000_Word_impl*
 Result := Windows.GetForegroundWindow;
//#UC END# *5519434F0000_5519434F0000_Word_impl*
//#UC START# *5519434F0000_5519434F0000_Word_var*
//#UC END# *5519434F0000_5519434F0000_Word_var*
//#UC START# *551943860248_551943860248_Word_impl*
 Result := FindWindowA(nil, PAnsiChar(aCaption));
//#UC END# *551943860248_551943860248_Word_impl*
//#UC START# *551943860248_551943860248_Word_var*
//#UC END# *551943860248_551943860248_Word_var*
//#UC START# *551943FD0148_551943FD0148_Word_impl*
 l3SetFuzzValueInPercent(aValue);
//#UC END# *551943FD0148_551943FD0148_Word_impl*
//#UC START# *551943FD0148_551943FD0148_Word_var*
//#UC END# *551943FD0148_551943FD0148_Word_var*
//#UC START# *551D5FE00397_551D5FE00397_Word_impl*
 {$IfNDef NoVCL}
 Result := Forms.Screen.DesktopHeight;
 {$Else  NoVCL}
 Assert(false);
 {$EndIf NoVCL}
//#UC END# *551D5FE00397_551D5FE00397_Word_impl*
//#UC START# *551D5FE00397_551D5FE00397_Word_var*
//#UC END# *551D5FE00397_551D5FE00397_Word_var*
//#UC START# *551D5FF00393_551D5FF00393_Word_impl*
 {$IfNDef NoVCL}
 Result := Forms.Screen.DesktopWidth
 {$Else  NoVCL}
 Assert(false);
 {$EndIf NoVCL}
//#UC END# *551D5FF00393_551D5FF00393_Word_impl*
//#UC START# *551D5FF00393_551D5FF00393_Word_var*
//#UC END# *551D5FF00393_551D5FF00393_Word_var*
//#UC START# *551D5FFF03A1_551D5FFF03A1_Word_impl*
 {$IfNDef NoVCL}
 Result := Forms.Screen.Monitors[anIndex].Width;
 {$Else  NoVCL}
 Assert(false);
 {$EndIf NoVCL}
//#UC END# *551D5FFF03A1_551D5FFF03A1_Word_impl*
//#UC START# *551D5FFF03A1_551D5FFF03A1_Word_var*
//#UC END# *551D5FFF03A1_551D5FFF03A1_Word_var*
//#UC START# *551D60220051_551D60220051_Word_impl*
 {$IfNDef NoVCL}
 Result := Forms.Screen.Monitors[anIndex].Height;
 {$Else   NoVCL}
 Assert(false);
 {$EndIf  NoVCL}
//#UC END# *551D60220051_551D60220051_Word_impl*
//#UC START# *551D60220051_551D60220051_Word_var*
//#UC END# *551D60220051_551D60220051_Word_var*
//#UC START# *551D605302AE_551D605302AE_Word_impl*
 {$IfNDef NoVCL}
 Result := Forms.Screen.Monitors[0].Width;
 {$Else   NoVCL}
 Assert(false);
 {$EndIf  NoVCL}
//#UC END# *551D605302AE_551D605302AE_Word_impl*
//#UC START# *551D605302AE_551D605302AE_Word_var*
//#UC END# *551D605302AE_551D605302AE_Word_var*
//#UC START# *551D606401C1_551D606401C1_Word_impl*
 {$IfNDef NoVCL}
 Result := Forms.Screen.Monitors[0].Height;
 {$Else   NoVCL}
 Assert(false);
 {$EndIf  NoVCL}
//#UC END# *551D606401C1_551D606401C1_Word_impl*
//#UC START# *551D606401C1_551D606401C1_Word_var*
//#UC END# *551D606401C1_551D606401C1_Word_var*
//#UC START# *551D607202D0_551D607202D0_Word_impl*
 {$IfNDef NoVCL}
 Result := Forms.Screen.MonitorCount;
 {$Else   NoVCL}
 Assert(false);
 {$EndIf  NoVCL}
//#UC END# *551D607202D0_551D607202D0_Word_impl*
//#UC START# *551D607202D0_551D607202D0_Word_var*
//#UC END# *551D607202D0_551D607202D0_Word_var*
//#UC START# *551D60A60370_551D60A60370_Word_impl*
 {$IfNDef NoVCL}
 l_Window := nil;
 if (aWnd.rType = tfw_vtInt) then
 begin
  l_Handle := THandle(aWnd.AsInt);
  l_Window := FindControl(l_Handle);
 end//aWnd.rType = tfw_vtInt
 else
  l_Handle := 0;

 if Assigned(l_Window) or
    (aWnd.rType = tfw_vtObj) then
 begin
  if not Assigned(l_Window) then
   l_Window := aWnd.AsObject As TWinControl;
  RunnerAssert(l_Window is TWinControl, 'Где окно?!', aCtx);
  if Tl3CloseFormHelper.Instance.Close(l_Window) then
   Exit;
  if (l_Handle <> 0) then
   l_Handle := l_Window.Handle;
 end;//Assigned(l_Window) or
 RunnerAssert(l_Handle <> 0, 'Где окно?!', aCtx);
 PostMessage(l_Handle, WM_CLOSE, 0, 0);
 {$Else  NoVCL}
 Assert(false);
 {$EndIf NoVCL}
//#UC END# *551D60A60370_551D60A60370_Word_impl*
//#UC START# *551D60A60370_551D60A60370_Word_var*
{$IfNDef NoVCL}
var
 l_Window: TWinControl;
 l_Handle: THandle;
{$EndIf  NoVCL}
//#UC END# *551D60A60370_551D60A60370_Word_var*
//#UC START# *551D697C0023_4F854878032F_impl*
  l_Left := aRect.Left;
  l_Top := aRect.Top;
  l_Width := aRect.Right - aRect.Left;
  l_Height := aRect.Bottom - aRect.Top;
  aCaller.RunnerAssert(l_Height > 0, 'Высота скриншота меньше или равна 0.', aCtx);
  aCaller.RunnerAssert(l_Width > 0, 'Ширина скриншота меньше или равна 0.', aCtx);
  l_FileName := aCtx.rCaller.ResolveOutputFilePath(aFileName);
  l3SaveScreenShot2File(l_FileName, l_Left, l_Top, l_Width, l_Height, aWnd);
  if aWithCheck then
  begin
   with Tl3PicturePathService.Instance do
   begin
    AddPicturePath(l_FileName);
    SetTestName('');
   end; // with Tl3PicturePathService.Instance do
   aCtx.rCaller.CheckPictureOnly;
  end;//aWithCheck
//#UC END# *551D697C0023_4F854878032F_impl*
//#UC START# *551D697C0023_4F854878032F_var*
var
 l_Top     : Integer;
 l_Left    : Integer;
 l_Width   : Integer;
 l_Height  : Integer;
 l_Bitmap  : TBitmap;
 l_FileName: AnsiString;
//#UC END# *551D697C0023_4F854878032F_var*
//#UC START# *551D6A28026C_551D6A28026C_Word_impl*
 MakeScreenshot(aWnd, Rect(aLeft, aTop, aLeft + aWidth, aTop + aHeight), aFileName, false, aCtx, Self);
//#UC END# *551D6A28026C_551D6A28026C_Word_impl*
//#UC START# *551D6A28026C_551D6A28026C_Word_var*
//#UC END# *551D6A28026C_551D6A28026C_Word_var*
//#UC START# *551D6A850205_551D6A850205_Word_impl*
 MakeScreenshot(aWnd, Rect(aLeft, aTop, aLeft + aWidth, aTop + aHeight), aFileName, true, aCtx, Self);
//#UC END# *551D6A850205_551D6A850205_Word_impl*
//#UC START# *551D6A850205_551D6A850205_Word_var*
//#UC END# *551D6A850205_551D6A850205_Word_var*
