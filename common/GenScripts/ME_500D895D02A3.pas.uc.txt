//#UC START# *48089F3701B4_500D895D02A3_impl*
  inherited;
  with f_ParamList do
  begin
    Add( ParamType.Create('count', 'Количество добавляемых запросов', '1') );
    Add( ParamType.Create('query_type', 'Тип запроса', 'QT_BASE_SEARCH') );
  end;
//#UC END# *48089F3701B4_500D895D02A3_impl*
//#UC START# *48089F3701B4_500D895D02A3_var*
//#UC END# *48089F3701B4_500D895D02A3_var*
//#UC START# *48089F460352_500D895D02A3_impl*
  l_Count := Parameters['count'].AsInt;
  l_QTStr := Parameters['query_type'].AsStr;
  try
    l_QT := TatQueryTypeConverter.Instance.ToValue(l_QTStr);
  except
    on EConvertError do
    begin
      Logger.Error('Неизвестный тип запроса: %s', [l_QTStr]);
      Exit;
    end;
  end;
  //
  l_Queries := TatUserJournalHelper.GetQueryHistory(l_QT, 1);
  if Assigned(l_Queries) then
    try
      l_Query := (l_Queries.Items[0] as TatQuery).Query;
    finally
      FreeAndNil(l_Queries);
    end
  else
  begin
    Logger.Error('В журнале работы не найдено запросов типа %s', [l_QTStr]);
    Exit;
  end;
  //
  for i := 1 to l_Count do
  begin
    l_Query.Clone(l_ClonedQuery);
    TatUserJournalHelper.AddQuery(l_ClonedQuery);
    if i mod 5000 = 0 then
      Logger.Info('В журнал работы добавлено %d тыс. копий запроса c типом "%s"...', [i div 1000, l_QTStr]);
  end;
  Logger.Info('В журнал работы добавлено %d копий запроса с типом "%s"', [l_Count, l_QTStr]);
//#UC END# *48089F460352_500D895D02A3_impl*
//#UC START# *48089F460352_500D895D02A3_var*
  var
    l_Count : Integer;
    l_Query, l_ClonedQuery : IQuery;
    l_Queries : TObjectList;
    l_QTStr : String;
    l_QT : TQueryType;
    i : Integer;
//#UC END# *48089F460352_500D895D02A3_var*
