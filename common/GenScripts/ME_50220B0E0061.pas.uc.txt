//#UC START# *47D1602000C6_50220B0E0061_impl*
 inherited;
 Align := sbalRight;
 f_Max := 0;
 f_Min := 0;
 f_SmallChange := 1;
 f_LargeChange := 1;
 f_Position := 0;
 PageSize := f_Max;
 SetParams(f_Position, f_Min, f_Max);
//#UC END# *47D1602000C6_50220B0E0061_impl*
//#UC START# *47D1602000C6_50220B0E0061_var*
//#UC END# *47D1602000C6_50220B0E0061_var*
//#UC START# *47E136A80191_50220B0E0061_impl*
 // Два case тут для удобства отладки
 case Message.Msg of
  WM_ERASEBKGND,
  WM_NCPAINT,
  WM_PAINT:
  begin
   case Message.Msg of
    WM_ERASEBKGND:
     if InUpdating then
     begin
      Message.Result := 1;  {don't erase background}
      Exit;
     end;//InUpdating
    WM_NCPAINT:
     if InUpdating then
      Exit;
    WM_PAINT:
     if InUpdating then
     begin
      BeginPaint(Handle, PS);
      EndPaint(Handle, PS);
      Exit;
     end;//InUpdating
   end;//case Message.Msg
   inherited;
  end;//WM_ERASEBKGND
  else
   inherited;
 end;//case Message.Msg
//#UC END# *47E136A80191_50220B0E0061_impl*
//#UC START# *47E136A80191_50220B0E0061_var*
var
 PS: TPaintStruct;
//#UC END# *47E136A80191_50220B0E0061_var*
//#UC START# *48C7925A02E5_50220B0E0061_impl*
 inherited CreateParams(Params);
 if ScrollBarKind = sbVertical
  then Params.Style := Params.Style or WS_VSCROLL
  else Params.Style := Params.Style or WS_HSCROLL;
//#UC END# *48C7925A02E5_50220B0E0061_impl*
//#UC START# *48C7925A02E5_50220B0E0061_var*
//#UC END# *48C7925A02E5_50220B0E0061_var*
//#UC START# *4A97E78202FC_50220B0E0061_impl*
 inherited;
 PageSize := f_PageSize;
//#UC END# *4A97E78202FC_50220B0E0061_impl*
//#UC START# *4A97E78202FC_50220B0E0061_var*
//#UC END# *4A97E78202FC_50220B0E0061_var*
//#UC START# *4CC8414403B8_50220B0E0061_impl*
 inherited CreateWnd;
 if ScrollBarKind = sbVertical
  then l_SB := SB_VERT
  else l_SB := SB_HORZ;
 l_ScrollInfo.cbSize := SizeOf(l_ScrollInfo);
 l_ScrollInfo.nPage := f_PageSize;
 l_ScrollInfo.nPos := f_Position;
 l_ScrollInfo.nMin := f_Min;
 l_ScrollInfo.nMax := f_Max;
 l_ScrollInfo.fMask := SIF_RANGE or SIF_POS or SIF_PAGE;
 SetScrollInfo(Handle, l_SB, l_ScrollInfo, False);
//#UC END# *4CC8414403B8_50220B0E0061_impl*
//#UC START# *4CC8414403B8_50220B0E0061_var*
var
 l_ScrollInfo: TScrollInfo;
 l_SB: Integer;
//#UC END# *4CC8414403B8_50220B0E0061_var*
//#UC START# *4F2A599E0283_50220B0E0061_impl*
 if ScrollBarKind = sbVertical
  then aWidth := GetSystemMetrics(SM_CYVSCROLL)
  else aHeight := GetSystemMetrics(SM_CXHSCROLL) + 1;
 inherited SetBounds(aLeft, aTop, aWidth, aHeight);
//#UC END# *4F2A599E0283_50220B0E0061_impl*
//#UC START# *4F2A599E0283_50220B0E0061_var*
//#UC END# *4F2A599E0283_50220B0E0061_var*
//#UC START# *50220B0E0061_ext:FileName
w:\common\components\gui\Garant\VT\vtScrollBar.pas
//#UC END# *50220B0E0061_ext:FileName
//#UC START# *50220B0E0061impl_uses*
//#UC END# *50220B0E0061impl_uses*
//#UC START# *50220C6501B2_50220B0E0061get_impl*
 case Align of
  sbalTop, sbalBottom: Result := sbHorizontal;
 else
  //sbalRight, sbalLeft:
  Result := sbVertical;
 end;
//#UC END# *50220C6501B2_50220B0E0061get_impl*
//#UC START# *50220C6501B2_50220B0E0061get_var*
//#UC END# *50220C6501B2_50220B0E0061get_var*
//#UC START# *50220C6501B2_50220B0E0061set_impl*
 if ScrollBarKind <> aValue then
  if aValue = sbHorizontal
   then Align := sbalBottom
   else Align := sbalRight;
//#UC END# *50220C6501B2_50220B0E0061set_impl*
//#UC START# *50220C6501B2_50220B0E0061set_var*
//#UC END# *50220C6501B2_50220B0E0061set_var*
//#UC START# *50220D98014D_50220B0E0061get_impl*
 case inherited Align of
  alTop: Result := sbalTop;
  alRight: Result := sbalRight;
  alBottom: Result := sbalBottom;
  alLeft: Result := sbalLeft;
 else
  Result := sbalNone;
 end;
//#UC END# *50220D98014D_50220B0E0061get_impl*
//#UC START# *50220D98014D_50220B0E0061get_var*
//#UC END# *50220D98014D_50220B0E0061get_var*
//#UC START# *50220D98014D_50220B0E0061set_impl*
 if Align <> aValue then
 begin
  case aValue of
   sbalTop: inherited Align := alTop;
   sbalLeft: inherited Align := alLeft;
   sbalBottom: inherited Align := alBottom;
  else
   //sbalRight:
   inherited Align := alRight;
  end;
  RecreateWnd;
 end;
//#UC END# *50220D98014D_50220B0E0061set_impl*
//#UC START# *50220D98014D_50220B0E0061set_var*
//#UC END# *50220D98014D_50220B0E0061set_var*
//#UC START# *50220DCD01C1_50220B0E0061set_impl*
 SetParams(f_Position, aValue, f_Max);
//#UC END# *50220DCD01C1_50220B0E0061set_impl*
//#UC START# *50220DCD01C1_50220B0E0061set_var*
//#UC END# *50220DCD01C1_50220B0E0061set_var*
//#UC START# *50220DD70207_50220B0E0061set_impl*
 SetParams(f_Position, f_Min, aValue);
//#UC END# *50220DD70207_50220B0E0061set_impl*
//#UC START# *50220DD70207_50220B0E0061set_var*
//#UC END# *50220DD70207_50220B0E0061set_var*
//#UC START# *50220DE00328_50220B0E0061set_impl*
 SetParams(aValue, f_Min, f_Max);
//#UC END# *50220DE00328_50220B0E0061set_impl*
//#UC START# *50220DE00328_50220B0E0061set_var*
//#UC END# *50220DE00328_50220B0E0061set_var*
//#UC START# *50220DF801D8_50220B0E0061set_impl*
 f_PageSize := aValue;
 if HandleAllocated then
 begin
  if ScrollBarKind = sbVertical
   then l_SB := SB_VERT
   else l_SB := SB_HORZ;
  l_ScrollInfo.cbSize := SizeOf(l_ScrollInfo);
  l_ScrollInfo.nPage := f_PageSize;
  l_ScrollInfo.fMask := SIF_PAGE;
  SetScrollInfo(Handle, l_SB, l_ScrollInfo, False);
 end;
//#UC END# *50220DF801D8_50220B0E0061set_impl*
//#UC START# *50220DF801D8_50220B0E0061set_var*
var
 l_ScrollInfo: TScrollInfo;
 l_SB: Integer;
//#UC END# *50220DF801D8_50220B0E0061set_var*
//#UC START# *5022104B03A6_50220B0E0061_impl*
 if not (inherited Align in [alTop, alRight, alBottom, alLeft])
  then inherited Align := alRight
  else inherited;
//#UC END# *5022104B03A6_50220B0E0061_impl*
//#UC START# *5022104B03A6_50220B0E0061_var*
//#UC END# *5022104B03A6_50220B0E0061_var*
//#UC START# *502210E20375_50220B0E0061_impl*
 if Assigned(f_OnScroll) then
  f_OnScroll(Self, ScrollCode, ScrollPos);
//#UC END# *502210E20375_50220B0E0061_impl*
//#UC START# *502210E20375_50220B0E0061_var*
//#UC END# *502210E20375_50220B0E0061_var*
//#UC START# *50221120038F_50220B0E0061_impl*
 if Assigned(f_OnChange) then
  f_OnChange(Self);
//#UC END# *50221120038F_50220B0E0061_impl*
//#UC START# *50221120038F_50220B0E0061_var*
//#UC END# *50221120038F_50220B0E0061_var*
//#UC START# *502211340371_50220B0E0061_impl*
 if ScrollBarKind = sbVertical
  then l_SB := SB_VERT
  else l_SB := SB_HORZ;
 if (AMax < AMin) or (AMax < f_PageSize) then
   raise EInvalidOperation.Create(SScrollBarRange);
 if APosition < AMin then
  APosition := AMin;
 if APosition > AMax then
  APosition := AMax;
 f_Min := AMin;
 f_Max := AMax;
 if HandleAllocated then
  SetScrollRange(Handle, l_SB, AMin, AMax, f_Position = APosition);
 f_Position := APosition;
 if HandleAllocated then
  SetScrollPos(Handle, l_SB, f_Position, True);
 Enabled := True;
 DoChange;
//#UC END# *502211340371_50220B0E0061_impl*
//#UC START# *502211340371_50220B0E0061_var*
var
 l_ScrollInfo: TScrollInfo;
 l_SB: Integer;
//#UC END# *502211340371_50220B0E0061_var*
//#UC START# *5022115C02AE_50220B0E0061_impl*
 l_Pos := Position;
 case TScrollCode(Msg.ScrollCode) of
  scLineUp: Dec(l_Pos, f_SmallChange);
  scLineDown: Inc(l_Pos, f_SmallChange);
  scPageUp: Dec(l_Pos, f_LargeChange);
  scPageDown: Inc(l_Pos, f_LargeChange);
  scPosition, scTrack:
    with l_ScrollInfo do
    begin
      cbSize := SizeOf(TScrollInfo);
      fMask := SIF_ALL;
      if ScrollBarKind = sbVertical
       then GetScrollInfo(Handle, SB_VERT, l_ScrollInfo)
       else GetScrollInfo(Handle, SB_HORZ, l_ScrollInfo);
      l_Pos := nTrackPos;
    end;
  scTop: l_Pos := f_Min;
  scBottom: l_Pos := f_Max;
 end;
 if l_Pos < f_Min then
  l_Pos := f_Min;
 if l_Pos > f_Max then
  l_Pos := f_Max;
 DoScroll(TScrollCode(Msg.ScrollCode), l_Pos);
 Position := l_Pos;
//#UC END# *5022115C02AE_50220B0E0061_impl*
//#UC START# *5022115C02AE_50220B0E0061_var*
var
 l_ScrollInfo: TScrollInfo;
 l_Pos: Integer;
//#UC END# *5022115C02AE_50220B0E0061_var*
//#UC START# *502228CB009D_50220B0E0061_impl*
 if ScrollBarKind = sbHorizontal then
  DoWMScroll(Msg);
//#UC END# *502228CB009D_50220B0E0061_impl*
//#UC START# *502228CB009D_50220B0E0061_var*
//#UC END# *502228CB009D_50220B0E0061_var*
//#UC START# *502228F70076_50220B0E0061_impl*
 if ScrollBarKind = sbVertical then
  DoWMScroll(Msg);
//#UC END# *502228F70076_50220B0E0061_impl*
//#UC START# *502228F70076_50220B0E0061_var*
//#UC END# *502228F70076_50220B0E0061_var*
//#UC START# *505894EC0371_50220B0E0061_impl*
 Result := HandleAllocated and Visible and afw.IsObjectLocked(Self);
 // без проверки на видимость, WM_PAINT'ы приходят невидимым контролам, в результате
 // имеем прогрузку дерева при ненужной отрисовке, например.
//#UC END# *505894EC0371_50220B0E0061_impl*
//#UC START# *505894EC0371_50220B0E0061_var*
//#UC END# *505894EC0371_50220B0E0061_var*
