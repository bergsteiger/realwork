//#UC START# *503E2BCA01E8_ext:FileName
w:\quality\test\garant6x\AdapterTest\CoreObjects\atConverter.imp.pas
//#UC END# *503E2BCA01E8_ext:FileName
//#UC START# *503E2F000018_503E2BCA01E8_impl*
  for i := Low(f_ConvertMap) to High(f_ConvertMap) do
    if aFirst = f_ConvertMap[i].First then
    begin
      Result := f_ConvertMap[i].Second;
      Exit;
    end;
  Error1st(aFirst);
//#UC END# *503E2F000018_503E2BCA01E8_impl*
//#UC START# *503E2F000018_503E2BCA01E8_var*
  var
    i : Integer;
//#UC END# *503E2F000018_503E2BCA01E8_var*
//#UC START# *503E2F1B035E_503E2BCA01E8_impl*
  for i := Low(f_ConvertMap) to High(f_ConvertMap) do
    if aSecond = f_ConvertMap[i].Second then
    begin
      Result := f_ConvertMap[i].First;
      Exit;
    end;
  Error2nd(aSecond);
//#UC END# *503E2F1B035E_503E2BCA01E8_impl*
//#UC START# *503E2F1B035E_503E2BCA01E8_var*
  var
    i : Integer;
//#UC END# *503E2F1B035E_503E2BCA01E8_var*
//#UC START# *503E3C86007D_503E2BCA01E8_impl*
  l_FirstTI := TypeInfo(_FirstType_);
  l_SecondTI := TypeInfo(_SecondType_);
  Raise EConvertError.CreateFmt('Ошибка конвертации из типа %s в тип %s : для переданного значения не найдено соответствие!', [l_FirstTI^.Name, l_SecondTI^.Name]);
//#UC END# *503E3C86007D_503E2BCA01E8_impl*
//#UC START# *503E3C86007D_503E2BCA01E8_var*
  var
    l_FirstTI, l_SecondTI : PTypeInfo;
//#UC END# *503E3C86007D_503E2BCA01E8_var*
//#UC START# *503E3CC102AE_503E2BCA01E8_impl*
  l_FirstTI := TypeInfo(_FirstType_);
  l_SecondTI := TypeInfo(_SecondType_);
  Raise EConvertError.CreateFmt('Ошибка конвертации из типа %s в тип %s : для переданного значения не найдено соответствие!', [l_SecondTI^.Name, l_FirstTI^.Name]);
//#UC END# *503E3CC102AE_503E2BCA01E8_impl*
//#UC START# *503E3CC102AE_503E2BCA01E8_var*
  var
    l_FirstTI, l_SecondTI : PTypeInfo;
//#UC END# *503E3CC102AE_503E2BCA01E8_var*
//#UC START# *503E4FF00107_503E2BCA01E8_impl*
  inherited;
  InitConvertMap;
//#UC END# *503E4FF00107_503E2BCA01E8_impl*
//#UC START# *503E4FF00107_503E2BCA01E8_var*
//#UC END# *503E4FF00107_503E2BCA01E8_var*
//#UC START# *503E5D3102F3_503E2BCA01E8_impl*
  SetLength(f_ConvertMap, Length(anArray));
  j := Low(f_ConvertMap);
  for i := Low(anArray) to High(anArray) do
  begin
    f_ConvertMap[j] := anArray[i];
    Inc(j);
  end;
//#UC END# *503E5D3102F3_503E2BCA01E8_impl*
//#UC START# *503E5D3102F3_503E2BCA01E8_var*
  var
    i, j : Integer;
//#UC END# *503E5D3102F3_503E2BCA01E8_var*
