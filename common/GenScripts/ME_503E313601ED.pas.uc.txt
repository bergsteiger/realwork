//#UC START# *503E318D00A7_503E313601ED_impl*
  Result := FirstToSecond(aName);
//#UC END# *503E318D00A7_503E313601ED_impl*
//#UC START# *503E318D00A7_503E313601ED_var*
//#UC END# *503E318D00A7_503E313601ED_var*
//#UC START# *503E31BD027C_503E313601ED_impl*
  Result := SecondToFirst(aValue);
//#UC END# *503E31BD027C_503E313601ED_impl*
//#UC START# *503E31BD027C_503E313601ED_var*
//#UC END# *503E31BD027C_503E313601ED_var*
//#UC START# *503E37A40321_503E313601ED_impl*
  for i := Low(f_ConvertMap) to High(f_ConvertMap) do
    if AnsiSameText(aName, f_ConvertMap[i].First) then
    begin
      Result := f_ConvertMap[i].Second;
      Exit;
    end;
  Error1St(aName);  
//#UC END# *503E37A40321_503E313601ED_impl*
//#UC START# *503E37A40321_503E313601ED_var*
  var
    i : Integer;
//#UC END# *503E37A40321_503E313601ED_var*
//#UC START# *503E3C86007D_503E313601ED_impl*
  l_TI := TypeInfo(_SecondType_);
  Raise EConvertError.CreateFmt('Ошибка конвертации из имени в тип %s: не найдено соответствия для имени "%s"!', [l_TI^.Name, aFirst]);
//#UC END# *503E3C86007D_503E313601ED_impl*
//#UC START# *503E3C86007D_503E313601ED_var*
  var
    l_TI : PTypeInfo;
//#UC END# *503E3C86007D_503E313601ED_var*
