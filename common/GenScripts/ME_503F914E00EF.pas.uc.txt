//#UC START# *503F914E00EF_ext:FileName
w:\common\components\rtl\Garant\ScriptEngine\vtOutlinerWordsPack.pas
//#UC END# *503F914E00EF_ext:FileName
//#UC START# *503F914E00EFimpl_uses*
//#UC END# *503F914E00EFimpl_uses*
//#UC START# *552FEA840365_552FEA840365_4CFFBEEA0109_Word_impl*
 Result := l3TestMask(aTree.CTree.CNodes[aNodeID].Flags, aFlag);
//#UC END# *552FEA840365_552FEA840365_4CFFBEEA0109_Word_impl*
//#UC START# *552FEA840365_552FEA840365_4CFFBEEA0109_Word_var*
//#UC END# *552FEA840365_552FEA840365_4CFFBEEA0109_Word_var*
//#UC START# *552FEAD4014B_552FEAD4014B_4CFFBEEA0109_Word_impl*
 aTree.TreeStruct.RootNode.ExpandCollapseAll(False);
//#UC END# *552FEAD4014B_552FEAD4014B_4CFFBEEA0109_Word_impl*
//#UC START# *552FEAD4014B_552FEAD4014B_4CFFBEEA0109_Word_var*
//#UC END# *552FEAD4014B_552FEAD4014B_4CFFBEEA0109_Word_var*
//#UC START# *552FEAF60072_552FEAF60072_4CFFBEEA0109_Word_impl*
 Result := aTree.TreeStruct.IsExpanded(aTree.GetCurrentNode);
//#UC END# *552FEAF60072_552FEAF60072_4CFFBEEA0109_Word_impl*
//#UC START# *552FEAF60072_552FEAF60072_4CFFBEEA0109_Word_var*
//#UC END# *552FEAF60072_552FEAF60072_4CFFBEEA0109_Word_var*
//#UC START# *552FEB150182_552FEB150182_4CFFBEEA0109_Word_impl*
 l_Current := aTree.CurrentCNode;
 while l_Current.HasChild do
 begin
  l_Node := l_Current.Child;
  l_Node.Delete;
 end; // while l_Current.HasChld do
//#UC END# *552FEB150182_552FEB150182_4CFFBEEA0109_Word_impl*
//#UC START# *552FEB150182_552FEB150182_4CFFBEEA0109_Word_var*
var
 l_Node   : Il3SimpleNode;
 l_Current: Il3SimpleNode;
//#UC END# *552FEB150182_552FEB150182_4CFFBEEA0109_Word_var*
//#UC START# *552FEB5A0289_552FEB5A0289_4CFFBEEA0109_Word_impl*
 aTree.TreeStruct.RootNode.ExpandCollapseAll(True);
//#UC END# *552FEB5A0289_552FEB5A0289_4CFFBEEA0109_Word_impl*
//#UC START# *552FEB5A0289_552FEB5A0289_4CFFBEEA0109_Word_var*
//#UC END# *552FEB5A0289_552FEB5A0289_4CFFBEEA0109_Word_var*
//#UC START# *552FEB8A0123_552FEB8A0123_4CFFBEEA0109_Word_impl*
 Result := aTree.GetCurrentNode;
//#UC END# *552FEB8A0123_552FEB8A0123_4CFFBEEA0109_Word_impl*
//#UC START# *552FEB8A0123_552FEB8A0123_4CFFBEEA0109_Word_var*
//#UC END# *552FEB8A0123_552FEB8A0123_4CFFBEEA0109_Word_var*
//#UC START# *552FEBB50243_552FEBB50243_4CFFBEEA0109_Word_impl*
 Result := aTree.TreeStruct.Nodes[anIndex];
//#UC END# *552FEBB50243_552FEBB50243_4CFFBEEA0109_Word_impl*
//#UC START# *552FEBB50243_552FEBB50243_4CFFBEEA0109_Word_var*
//#UC END# *552FEBB50243_552FEBB50243_4CFFBEEA0109_Word_var*
//#UC START# *552FEBDB031D_552FEBDB031D_4CFFBEEA0109_Word_impl*
 Result := aTree.TreeStruct.CountView;
//#UC END# *552FEBDB031D_552FEBDB031D_4CFFBEEA0109_Word_impl*
//#UC START# *552FEBDB031D_552FEBDB031D_4CFFBEEA0109_Word_var*
//#UC END# *552FEBDB031D_552FEBDB031D_4CFFBEEA0109_Word_var*
//#UC START# *552FEBFF016C_552FEBFF016C_4CFFBEEA0109_Word_impl*
 try
  aTree.IterateF(l3L2NA(@DoItem), 0);
 except
  on EtfwBreakIterator do ;
 end;//try..except
//#UC END# *552FEBFF016C_552FEBFF016C_4CFFBEEA0109_Word_impl*
//#UC START# *552FEBFF016C_552FEBFF016C_4CFFBEEA0109_Word_var*

 function DoItem(const aNode: Il3Node): Boolean;
 begin//DoItem
  Result := false;
  aCtx.rEngine.PushIntf(aNode, TypeInfo(Il3Node));
  aLambda.DoIt(aCtx);
 end;//DoItem
 
//#UC END# *552FEBFF016C_552FEBFF016C_4CFFBEEA0109_Word_var*
//#UC START# *552FEC260349_552FEC260349_4CFFBEEA0109_Word_impl*
 l_S := aCtx.rCaller.ResolveOutputFilePath(aFileName);
 l_S := ChangeFileExt(l_S, '.tree');
 l_F := Tl3CustomDosFiler.Make(l_S, l3_fmWrite, false);
 try
  l_F.Open;
  aTree.CTree.CRootNode.IterateF(l3L2NA(@lp_IterateNode), imExpandOnly);
  l_F.Close;
 finally
  FreeAndNil(l_F);
 end;//try..finally
//#UC END# *552FEC260349_552FEC260349_4CFFBEEA0109_Word_impl*
//#UC START# *552FEC260349_552FEC260349_4CFFBEEA0109_Word_var*
var
 l_F : Tl3CustomDosFiler;
 
 function lp_IterateNode(const aCurNode : Il3Node) : Boolean;
 var
  i       : Integer;
  l_CStr  : Il3CString;
  l_Name  : AnsiString;
  l_Level : Integer;
 begin
  Result := false;
  l_Name  := '';
  with aTree.CTree do
  begin
   if not aTree.CTree.IsExpanded(aCurNode.ParentNode) then Exit;
   l_Level := GetLevel(aCurNode);
   if ShowRoot then Dec(l_Level);
  end; // with aTreeControl.CTree do
  for i := l_Level downto 2 do
   l_Name := l_Name + '  ';
  l_CStr := l3CStr(aCurNode.Text);
  l3DeleteChars(l_CStr, [cc_SoftEnter, cc_HardEnter, cc_SoftSpace]);
  l_Name := Format('%s%s - Flags: %d', [l_Name, l3Str(l_CStr), aCurNode.Flags]);
  l_F.WriteLn(l_Name);
 end;

var
 l_S : AnsiString;
//#UC END# *552FEC260349_552FEC260349_4CFFBEEA0109_Word_var*
//#UC START# *552FF5F001F8_552FF5F001F8_4CFFBEEA0109_Word_impl*
 Result := aTree.GetNode(anIndex).ThisChildrenCount;
//#UC END# *552FF5F001F8_552FF5F001F8_4CFFBEEA0109_Word_impl*
//#UC START# *552FF5F001F8_552FF5F001F8_4CFFBEEA0109_Word_var*
//#UC END# *552FF5F001F8_552FF5F001F8_4CFFBEEA0109_Word_var*
//#UC START# *552FF61301F5_552FF61301F5_4CFFBEEA0109_Word_impl*
 aTree.ExpandNode(aTree.GetNode(anIndex), True);
//#UC END# *552FF61301F5_552FF61301F5_4CFFBEEA0109_Word_impl*
//#UC START# *552FF61301F5_552FF61301F5_4CFFBEEA0109_Word_var*
//#UC END# *552FF61301F5_552FF61301F5_4CFFBEEA0109_Word_var*
//#UC START# *552FF6740129_552FF6740129_4CFFBEEA0109_Word_impl*
 with TvtCustomOutlinerFriend(aTree).GetDrawRect(anIndex) do
  Result := (Bottom - Top);
//#UC END# *552FF6740129_552FF6740129_4CFFBEEA0109_Word_impl*
//#UC START# *552FF6740129_552FF6740129_4CFFBEEA0109_Word_var*
//#UC END# *552FF6740129_552FF6740129_4CFFBEEA0109_Word_var*
//#UC START# *552FF69A0228_552FF69A0228_4CFFBEEA0109_Word_impl*
 if Assigned(aTree.OnGetItemImage) then
  Result := aTree.OnGetItemImage(aTree, anIndex, l_IL)
 else
  Result := vtItemWithoutImage;
//#UC END# *552FF69A0228_552FF69A0228_4CFFBEEA0109_Word_impl*
//#UC START# *552FF69A0228_552FF69A0228_4CFFBEEA0109_Word_var*
var
 l_IL: TCustomImageList;
//#UC END# *552FF69A0228_552FF69A0228_4CFFBEEA0109_Word_var*
//#UC START# *552FF6CC0186_552FF6CC0186_4CFFBEEA0109_Word_impl*
 with TvtCustomOutlinerFriend(aTree).GetDrawRect(anIndex) do
  Result := Left;
//#UC END# *552FF6CC0186_552FF6CC0186_4CFFBEEA0109_Word_impl*
//#UC START# *552FF6CC0186_552FF6CC0186_4CFFBEEA0109_Word_var*
//#UC END# *552FF6CC0186_552FF6CC0186_4CFFBEEA0109_Word_var*
//#UC START# *552FF6F802D9_552FF6F802D9_4CFFBEEA0109_Word_impl*
 with TvtCustomOutlinerFriend(aTree).GetDrawRect(anIndex) do
  Result := Top;
//#UC END# *552FF6F802D9_552FF6F802D9_4CFFBEEA0109_Word_impl*
//#UC START# *552FF6F802D9_552FF6F802D9_4CFFBEEA0109_Word_var*
//#UC END# *552FF6F802D9_552FF6F802D9_4CFFBEEA0109_Word_var*
//#UC START# *552FF71D00BE_552FF71D00BE_4CFFBEEA0109_Word_impl*
 with TvtCustomOutlinerFriend(aTree).GetDrawRect(anIndex) do
  Result := (Right - Left);
//#UC END# *552FF71D00BE_552FF71D00BE_4CFFBEEA0109_Word_impl*
//#UC START# *552FF71D00BE_552FF71D00BE_4CFFBEEA0109_Word_var*
//#UC END# *552FF71D00BE_552FF71D00BE_4CFFBEEA0109_Word_var*
//#UC START# *552FF745039F_552FF745039F_4CFFBEEA0109_Word_impl*
 Result := aTree.Selected[anIndex];
//#UC END# *552FF745039F_552FF745039F_4CFFBEEA0109_Word_impl*
//#UC START# *552FF745039F_552FF745039F_4CFFBEEA0109_Word_var*
//#UC END# *552FF745039F_552FF745039F_4CFFBEEA0109_Word_var*
//#UC START# *552FF76C0114_552FF76C0114_4CFFBEEA0109_Word_impl*
 aTree.Selected[anIndex] := aValue;
//#UC END# *552FF76C0114_552FF76C0114_4CFFBEEA0109_Word_impl*
//#UC START# *552FF76C0114_552FF76C0114_4CFFBEEA0109_Word_var*
//#UC END# *552FF76C0114_552FF76C0114_4CFFBEEA0109_Word_var*
//#UC START# *5530E0B20024_5530E0B20024_4CFFBEEA0109_Word_impl*
 aTree.ExpandNode(aTree.GetNode(anIndex), false);
//#UC END# *5530E0B20024_5530E0B20024_4CFFBEEA0109_Word_impl*
//#UC START# *5530E0B20024_5530E0B20024_4CFFBEEA0109_Word_var*
//#UC END# *5530E0B20024_5530E0B20024_4CFFBEEA0109_Word_var*
