//#UC START# *4F71A8960347_50C852B30225_impl*
 l3FillChar(Result, SizeOf(TInput));

 Windows.GetCursorPos(l_P);
 Result.Itype := INPUT_MOUSE;
 Result.mi.dx := l_P.X;
 Result.mi.dy := l_P.Y;
 Result.mi.mouseData := DWORD(WHEEL_DELTA * GetLineCount(aCtx)); // msdn://MOUSEINPUT
                                                         //mouseData
          //If dwFlags contains MOUSEEVENTF_WHEEL, then mouseData provides the amount of wheel movement.
          //A positive value indicates that the wheel was rotated forward, away from the user; a negative
          //value indicates that the wheel was rotated backward, toward the user. One wheel click is
          //defined as WHEEL_DELTA, which is 120.
 Result.mi.dwFlags := MOUSEEVENTF_WHEEL;
//#UC END# *4F71A8960347_50C852B30225_impl*
//#UC START# *4F71A8960347_50C852B30225_var*
var
 l_P: TPoint;
//#UC END# *4F71A8960347_50C852B30225_var*
