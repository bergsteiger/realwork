//#UC START# *515992DE031D_ext:FileName
w:\common\components\SandBox\StackTest.imp.pas
//#UC END# *515992DE031D_ext:FileName
//#UC START# *5159938101A2_515992DE031D_impl*
 l_S := _StackType_.Create;
 try
  l_Etalons := GetEtalonData;
  for l_I := Low(l_Etalons) to High(l_Etalons) do
   l_S.Push(l_Etalons[l_I]);
  for l_I := High(l_Etalons) downto Low(l_Etalons) do
   Check(l_S.Pop = l_Etalons[l_I]);
 finally
  FreeAndNil(l_S);
 end;//try..finally
//#UC END# *5159938101A2_515992DE031D_impl*
//#UC START# *5159938101A2_515992DE031D_var*
var
 l_Etalons : TEtalonData;
 l_S : _StackType_;
 l_I : Integer;
//#UC END# *5159938101A2_515992DE031D_var*
//#UC START# *515996DE014C_515992DE031D_impl*
 DoDoIt;
//#UC END# *515996DE014C_515992DE031D_impl*
//#UC START# *515996DE014C_515992DE031D_var*
//#UC END# *515996DE014C_515992DE031D_var*
//#UC START# *51599BD5015F_515992DE031D_impl*
 SetLength(Result, Length(aData));
 for l_I := Low(aData) to High(aData) do
  Result[l_I] := aData[l_I];
//#UC END# *51599BD5015F_515992DE031D_impl*
//#UC START# *51599BD5015F_515992DE031D_var*
var
 l_I : Integer;
//#UC END# *51599BD5015F_515992DE031D_var*
