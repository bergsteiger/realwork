//#UC START# *5214B1B9029D_ext:FileName
w:\common\components\rtl\Garant\dd\ddAppConfigDates.pas
//#UC END# *5214B1B9029D_ext:FileName
//#UC START# *5217273F000F_522F0FB3004F_impl*
 l_DefValue := aDefaultValue;
 if l_DefValue.AsDateTime = 0 then
  l_DefValue.AsDateTime := Now;
 inherited Create(aAlias, aCaption, l_DefValue, aMasterItem);
 f_Value.Kind := dd_vkDateTime;
 f_Value.AsDateTime := Now;
//#UC END# *5217273F000F_522F0FB3004F_impl*
//#UC START# *5217273F000F_522F0FB3004F_var*
var
 l_DefValue: TddConfigValue;
//#UC END# *5217273F000F_522F0FB3004F_var*
//#UC START# *52172B72014C_522F0FB3004F_impl*
 DateTimeValue := aStorage.ReadDateTime(Alias, Now{DefaultValue.AsDateTime});
//#UC END# *52172B72014C_522F0FB3004F_impl*
//#UC START# *52172B72014C_522F0FB3004F_var*
//#UC END# *52172B72014C_522F0FB3004F_var*
//#UC START# *52172CA801E3_522F0FB3004F_impl*
 aStorage.WriteDateTime(Alias, DateTimeValue);
//#UC END# *52172CA801E3_522F0FB3004F_impl*
//#UC START# *52172CA801E3_522F0FB3004F_var*
//#UC END# *52172CA801E3_522F0FB3004F_var*
//#UC START# *521760C60369_522F0FC7007F_impl*
 inherited AfterConstruct(aLeft, aMaxLeft, aTop, theControl, theLabel);
 (theControl as TDateTimePicker).Kind:= dtkTime;
//#UC END# *521760C60369_522F0FC7007F_impl*
//#UC START# *521760C60369_522F0FC7007F_var*
//#UC END# *521760C60369_522F0FC7007F_var*
//#UC START# *521760C60369_522F0FF8033E_impl*
 inherited AfterConstruct(aLeft, aMaxLeft, aTop, theControl, theLabel);
 (theControl as TDateTimePicker).Kind:= dtkDate;
//#UC END# *521760C60369_522F0FF8033E_impl*
//#UC START# *521760C60369_522F0FF8033E_var*
//#UC END# *521760C60369_522F0FF8033E_var*
//#UC START# *521761BB03DE_522F0FB3004F_impl*
 Result := TDateTimePicker.Create(aParent);
 Result.Parent := aParent;
 Result.Left := aLeft;
 Result.Top := aTop;
 if LabelTop then
  Result.Width := aParent.ClientWidth - aLeft - c_ConfigItemRight
 else
  Result.Width := MinWidth(aParent);
 TDateTimePicker(Result).OnChange := DoOnChange;
//#UC END# *521761BB03DE_522F0FB3004F_impl*
//#UC START# *521761BB03DE_522F0FB3004F_var*
//#UC END# *521761BB03DE_522F0FB3004F_var*
//#UC START# *521B053F03C3_522F0FB3004F_impl*
 with TDateTimePicker.Create(aParent) do
 try
  Parent := aParent;
  Result := Height;
 finally
  Free;
 end;
//#UC END# *521B053F03C3_522F0FB3004F_impl*
//#UC START# *521B053F03C3_522F0FB3004F_var*
//#UC END# *521B053F03C3_522F0FB3004F_var*
//#UC START# *521B058801FD_522F0FB3004F_impl*
 DateTimeValue := TDateTimePicker(Control).DateTime;
//#UC END# *521B058801FD_522F0FB3004F_impl*
//#UC START# *521B058801FD_522F0FB3004F_var*
//#UC END# *521B058801FD_522F0FB3004F_var*
//#UC START# *521B061A0387_522F0FC7007F_impl*
 Result := 40 + GetCanvas(aParent).TextWidth(TimeToStr(Time)) + c_ConfigItemLeft;
//#UC END# *521B061A0387_522F0FC7007F_impl*
//#UC START# *521B061A0387_522F0FC7007F_var*
//#UC END# *521B061A0387_522F0FC7007F_var*
//#UC START# *521B061A0387_522F0FF8033E_impl*
 Result := 40 + GetCanvas(aParent).TextWidth(DateToStr(Date)) + c_ConfigItemLeft;
//#UC END# *521B061A0387_522F0FF8033E_impl*
//#UC START# *521B061A0387_522F0FF8033E_var*
//#UC END# *521B061A0387_522F0FF8033E_var*
//#UC START# *521B07030052_522F0FB3004F_impl*
 if aDefault then
  TDateTimePicker(Control).DateTime:= DefaultValue.AsDateTime
 else
  TDateTimePicker(Control).DateTime:= DateTimeValue;
//#UC END# *521B07030052_522F0FB3004F_impl*
//#UC START# *521B07030052_522F0FB3004F_var*
//#UC END# *521B07030052_522F0FB3004F_var*
//#UC START# *522F10E10084_522F0FB3004F_impl*
 Changed := True;
//#UC END# *522F10E10084_522F0FB3004F_impl*
//#UC START# *522F10E10084_522F0FB3004F_var*
//#UC END# *522F10E10084_522F0FB3004F_var*
//#UC START# *522F11FB01F4_522F103A01FA_impl*
 Create(aAlias, aCaption, aDefaultValue, Tl3SimpleTypedIntegerValueMap.Make(WeekID, TypeInfo(TddWeekType), WeekDaysArray[aCase]));
//#UC END# *522F11FB01F4_522F103A01FA_impl*
//#UC START# *522F11FB01F4_522F103A01FA_var*
//#UC END# *522F11FB01F4_522F103A01FA_var*
//#UC START# *522F1221016B_522F10570306_impl*
 l_A := MonthDaysArray;
 Create(aAlias, aCaption, aDefaultValue, Tl3SimpleTypedIntegerValueMap.Make(DayID, TypeInfo(TddDayType), l_A));
//#UC END# *522F1221016B_522F10570306_impl*
//#UC START# *522F1221016B_522F10570306_var*
var
 l_A: TddDayArray;

 function MonthDaysArray: TddDayArray;
 var
  I: TddDayType;
 begin
  for I := low(TddDayType) to High(TddDayType) do
   Result[I] := Format('%d-го числа', [Succ(Ord(I))]);
 end;
//#UC END# *522F1221016B_522F10570306_var*
//#UC START# *522F1243037E_522F106802E6_impl*
 Create(aAlias, aCaption, aDefaultValue, Tl3SimpleTypedIntegerValueMap.Make(MonthID, TypeInfo(TddMonthType), MonthsArray[aCase]));
//#UC END# *522F1243037E_522F106802E6_impl*
//#UC START# *522F1243037E_522F106802E6_var*
//#UC END# *522F1243037E_522F106802E6_var*
//#UC START# *522F125702AB_522F10880303_impl*
 Create(aAlias, aCaption, aDefaultValue, aMasterItem);
 Columns := 2;
 for I := Low(TddWeekType) to High(TddWeekType) do
  Add(WeekDaysArray[1, I]);
//#UC END# *522F125702AB_522F10880303_impl*
//#UC START# *522F125702AB_522F10880303_var*
var
 I: TddWeekType;
//#UC END# *522F125702AB_522F10880303_var*
