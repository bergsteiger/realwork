//#UC START# *48C7925A02E5_525AE04E0326_impl*
 inherited;
 with Params do
 begin
  ExStyle := ExStyle or WS_EX_APPWINDOW and not(WS_EX_TOOLWINDOW);
  WndParent := GetDesktopWindow;
 end;
//#UC END# *48C7925A02E5_525AE04E0326_impl*
//#UC START# *48C7925A02E5_525AE04E0326_var*
//#UC END# *48C7925A02E5_525AE04E0326_var*
//#UC START# *4A8E8F2E0195_525AE04E0326_impl*
 inherited;
 ActiveControl := edLogin;

 BorderIcons := [biSystemMenu];
 BorderStyle := bsSingle;
 ClientHeight := 262;
 ClientWidth := 476;
 Font.Height := -13;

 with pnMainData do
 begin
  Align := alClient;
  BevelOuter := bvNone;
  TabOrder := 0;
 end;
  with UserNameLabel do
  begin
   AutoSize := False;
   Left := 0;
   Top := 150;
   Width := 207;
   Height := 17;
   Alignment := taRightJustify;
  end;
  with PasswordLabel do
  begin
   AutoSize := False;
   Left := 0;
   Top := 102;
   Width := 207;
   Height := 17;
   Alignment := taRightJustify;
  end;
  with LoginLabel do
  begin
   AutoSize := False;
   Left := 0;
   Top := 78;
   Width := 207;
   Height := 17;
   Alignment := taRightJustify;
  end;
  with InfoLabel do
  begin
   Left := 222;
   Top := 214;
   Width := 249;
   Height := 17;
  end;
  with EMailLabel do
  begin
   AutoSize := False;
   Left := 0;
   Top := 174;
   Width := 207;
   Height := 17;
   Alignment := taRightJustify;
  end;
  with ConfirmPasswordLabel do
  begin
   AutoSize := False;
   Left := 0;
   Top := 126;
   Width := 207;
   Height := 17;
   Alignment := taRightJustify;
  end;
  with vtAsteriskLabelLogin do
  begin
   Left := 207;
   Top := 78;
   Width := 9;
   Height := 17;
   Alignment := taRightJustify;
  end;
  with vtAsteriskLabelFIO do
  begin
   Left := 207;
   Top := 150;
   Width := 9;
   Height := 17;
   Alignment := taRightJustify;
  end;
  with edPassword do
  begin
   Left := 222;
   Top := 100;
   Width := 249;
   Height := 21;
   Hint := str_edPasswordHint.AsStr;
   OnChange := edPasswordChange;
   TabOrder := 1;
   ShowHint := True;
   MaxLength := 255;
   PasswordChar := '*';
  end;
  with edUserName do
  begin
   Left := 222;
   Top := 148;
   Width := 249;
   Height := 21;
   Hint := str_edUserNameHint.AsStr;
   OnChange := edUserNameChange;
   TabOrder := 3;
   ShowHint := True;
  end;
  with edLogin do
  begin
   Left := 222;
   Top := 76;
   Width := 249;
   Height := 21;
   Hint := str_edLoginHint.AsStr;
   OnChange := edLoginChange;
   TabOrder := 0;
   ShowHint := True;
   MaxLength := 31;
  end;
  with edEmail do
  begin
   Left := 222;
   Top := 172;
   Width := 249;
   Height := 21;
   Hint := str_edEmailHint.AsStr;
   OnChange := edUserNameChange;
   TabOrder := 4;
   ShowHint := True;
  end;
  with edConfirm do
  begin
   Left := 222;
   Top := 124;
   Width := 249;
   Height := 21;
   Hint := str_edConfirmHint.AsStr;
   OnChange := edConfirmChange;
   TabOrder := 2;
   ShowHint := True;
   MaxLength := 255;
   PasswordChar := '*';
  end;
  with cbAutoLogin do
  begin
   Left := 222;
   Top := 194;
   Width := 250;
   Height := 17;
   Enabled := False;
   TabOrder := 5;
  end;
  with NewUserGroupBox do
  begin
   Left := 6;
   Top := 7;
   Width := 462;
   Height := 64;
   TabOrder := 6;
   Font.Height := -13;
  end;
   with NewUserLabel do
   begin
    WordWrap := True;
    Autosize := False;
    Left := 69;
    Top := 17;
    Width := 312;
    Height := 45;
    Layout := tlCenter;
    Font.Height := -12;
   end;
   with NewUserPaintBox do
   begin
    Left := 15;
    Top := 20;
    Width := 32;
    Height := 32;
    OnPaint := NewUserPaintBoxPaint;
   end;
 with BottomPanel do
 begin
  Align := alBottom;
  Height := 33;
  BevelOuter := bvNone;
  TabOrder := 1;
 end;
  with RegisterButton do
  begin
   Left := 265;
   Top := 0;
   Width := 205;
   Height := 25;
   DrawDefaultFrame := False;
   Default := True;
   NumGlyphs := 1;
   Enabled := False;
   TabOrder := 0;
   OnClick := RegisterButtonClick;
   DockOrientation := doNoOrient;
   DoubleBuffered := False;
  end;
  with HelpPanel do
  begin
   Left := 9;
   Top := 7;
   Width := 85;
   Height := 19;
   BevelOuter := bvNone;
   ParentColor := True;
   TabOrder := 1;
  end;
   with HelpPaintBox do
   begin
    Left := 0;
    Top := 0;
    Width :=  16;
    Height := 19;
    OnPaint := HelpPaintBoxPaint;
   end;
   with HelpLabel do
   begin
    Left := 20;
    Top := 0;
    Width := 56;
    Height := 19;
    Cursor := crHandPoint;
    TabOrder := 0;
    Font.Color := clBlue;
    Font.Height := -13;
    HighlightColor := clBlue;
    Hyperlink := True;
    OnClick := HelpLabelClick;
   end;
 RepositionControls;
//#UC END# *4A8E8F2E0195_525AE04E0326_impl*
//#UC START# *4A8E8F2E0195_525AE04E0326_var*
//#UC END# *4A8E8F2E0195_525AE04E0326_var*
//#UC START# *4B0E846D022B_525AE04E0326_impl*
 Result := True;
//#UC END# *4B0E846D022B_525AE04E0326_impl*
//#UC START# *4B0E846D022B_525AE04E0326_var*
//#UC END# *4B0E846D022B_525AE04E0326_var*
//#UC START# *525AE9C902D1_525AE04E0326_impl*
 CheckForm;
//#UC END# *525AE9C902D1_525AE04E0326_impl*
//#UC START# *525AE9C902D1_525AE04E0326_var*
//#UC END# *525AE9C902D1_525AE04E0326_var*
//#UC START# *525AE9D5033E_525AE04E0326_impl*
 CheckForm;
//#UC END# *525AE9D5033E_525AE04E0326_impl*
//#UC START# *525AE9D5033E_525AE04E0326_var*
//#UC END# *525AE9D5033E_525AE04E0326_var*
//#UC START# *525AE9F100C2_525AE04E0326_impl*
 CheckForm;
//#UC END# *525AE9F100C2_525AE04E0326_impl*
//#UC START# *525AE9F100C2_525AE04E0326_var*
//#UC END# *525AE9F100C2_525AE04E0326_var*
//#UC START# *525AE9FB00ED_525AE04E0326_impl*
 CheckForm;
//#UC END# *525AE9FB00ED_525AE04E0326_impl*
//#UC START# *525AE9FB00ED_525AE04E0326_var*
//#UC END# *525AE9FB00ED_525AE04E0326_var*
//#UC START# *525AEA140367_525AE04E0326_impl*
 with Sender as TPaintBox do
  dmStdRes.LargeImageList.Draw(Canvas, width - c_LargeSizeIcon, (Height - c_LargeSizeIcon) div 2, cNewUser);
//#UC END# *525AEA140367_525AE04E0326_impl*
//#UC START# *525AEA140367_525AE04E0326_var*
//#UC END# *525AEA140367_525AE04E0326_var*
//#UC START# *525AEA3E0143_525AE04E0326_impl*
 Save;
//#UC END# *525AEA3E0143_525AE04E0326_impl*
//#UC START# *525AEA3E0143_525AE04E0326_var*
//#UC END# *525AEA3E0143_525AE04E0326_var*
//#UC START# *525AEA4B0070_525AE04E0326_impl*
 with Sender as TPaintBox do
  nsSearchRes.ImageList16x16.Draw(Canvas, width - c_SmallSizeIcon, (Height - c_SmallSizeIcon) div 2, c_srchHelp);
//#UC END# *525AEA4B0070_525AE04E0326_impl*
//#UC START# *525AEA4B0070_525AE04E0326_var*
//#UC END# *525AEA4B0070_525AE04E0326_var*
//#UC START# *525AEA560331_525AE04E0326_impl*
 Application.HelpSystem.ShowHelp('ut_RegistrationForm', '');
//#UC END# *525AEA560331_525AE04E0326_impl*
//#UC START# *525AEA560331_525AE04E0326_var*
//#UC END# *525AEA560331_525AE04E0326_var*
//#UC START# *525AED3900D1_525AE04E0326get_impl*
 Result := edLogin.Text;
//#UC END# *525AED3900D1_525AE04E0326get_impl*
//#UC START# *525AED3900D1_525AE04E0326get_var*
//#UC END# *525AED3900D1_525AE04E0326get_var*
//#UC START# *525AED3900D1_525AE04E0326set_impl*
 edLogin.Text := aValue;
 //После присвоения логина нужно проверить валидность чтобы подсветить красным
 //если превышен размер 
 //http://mdp.garant.ru/pages/viewpage.action?pageId=284165335
 CheckForm;
//#UC END# *525AED3900D1_525AE04E0326set_impl*
//#UC START# *525AED3900D1_525AE04E0326set_var*
//#UC END# *525AED3900D1_525AE04E0326set_var*
//#UC START# *525AED530277_525AE04E0326get_impl*
 Result := edPassword.Text;
//#UC END# *525AED530277_525AE04E0326get_impl*
//#UC START# *525AED530277_525AE04E0326get_var*
//#UC END# *525AED530277_525AE04E0326get_var*
//#UC START# *525AED530277_525AE04E0326set_impl*
 edPassword.Text := aValue;
 edConfirm.Text := aValue;
//#UC END# *525AED530277_525AE04E0326set_impl*
//#UC START# *525AED530277_525AE04E0326set_var*
//#UC END# *525AED530277_525AE04E0326set_var*
//#UC START# *525AED640191_525AE04E0326get_impl*
 Result := edUserName.Text;
//#UC END# *525AED640191_525AE04E0326get_impl*
//#UC START# *525AED640191_525AE04E0326get_var*
//#UC END# *525AED640191_525AE04E0326get_var*
//#UC START# *525AEDAA0332_525AE04E0326get_impl*
 Result := edEmail.Text;
//#UC END# *525AEDAA0332_525AE04E0326get_impl*
//#UC START# *525AEDAA0332_525AE04E0326get_var*
//#UC END# *525AEDAA0332_525AE04E0326get_var*
//#UC START# *525AEDBE00D1_525AE04E0326get_impl*
 Result := cbAutoLogin.Checked;
//#UC END# *525AEDBE00D1_525AE04E0326get_impl*
//#UC START# *525AEDBE00D1_525AE04E0326get_var*
//#UC END# *525AEDBE00D1_525AE04E0326get_var*
//#UC START# *525AEF5B01E9_525AE04E0326_impl*
 edLogin.SetFocus;
 l_String := Login;
 if l3IsNil(l_String) then
  exit;
 l_Len := l3Len(l_String);
 l_Char := l3Char(l_String, l_Len - 1);

 if (l_Char in ['0'..'8']) then
 begin
  l3SetLen(l_String, l_Len - 1);
  l_Char := Succ(l_Char)
 end//l_Char in ['0'..'8']
 else
 if (l_Char in ['9']) then
 begin
  l3SetLen(l_String, l_Len - 1);
  l_Char := '0';
 end//l_Char in ['9']
 else
  l_Char := '1';
 l_String := l3Cat(l_String, l_Char);

 Login := l_String;
//#UC END# *525AEF5B01E9_525AE04E0326_impl*
//#UC START# *525AEF5B01E9_525AE04E0326_var*
var
 l_Char   : AnsiChar;
 l_String : Il3CString;
 l_Len    : Integer;
//#UC END# *525AEF5B01E9_525AE04E0326_var*
//#UC START# *525AEF6D0366_525AE04E0326_impl*
 HelpPanel.Width := HelpLabel.Left + HelpLabel.Width + c_ControlBorder;
 l_HeightDelta := Max(NewUserLabel.Top + NewUserLabel.Height - NewUserGroupBox.Height + 8, 0);
 l_WidthDelta := Max(InfoLabel.Width - edEMail.Width, 0);
 if (l_HeightDelta > 0) or (l_WidthDelta > 0) then
 begin
  SetBounds(Left, Top, Width + l_WidthDelta, Height + l_HeightDelta);
  NewUserGroupBox.Height := NewUserGroupBox.Height + l_HeightDelta;
  lp_CorrectLabelWidth(LoginLabel);
  lp_CorrectLabelWidth(PasswordLabel);
  lp_CorrectLabelWidth(ConfirmPasswordLabel);
  lp_CorrectLabelWidth(UserNameLabel);
  lp_CorrectLabelWidth(EMailLabel);
  lp_CorrectControlWidth(edLogin);
  lp_CorrectControlWidth(edPassword);
  lp_CorrectControlWidth(edConfirm);
  lp_CorrectControlWidth(edUserName);
  lp_CorrectControlWidth(edEmail);
  lp_CorrectControlWidth(cbAutoLogin);
  with RegisterButton do
   SetBounds(pnMainData.Left + edEmail.Left, Top + l_HeightDelta, edEmail.Width, Height);
  InfoLabel.Left := InfoLabel.Left - l_WidthDelta;
 end;
 with vtAsteriskLabelLogin do
  SetBounds(LoginLabel.Left + LoginLabel.Width, LoginLabel.Top, Width, Height);
 with vtAsteriskLabelFIO do
  SetBounds(UserNameLabel.Left + UserNameLabel.Width, UserNameLabel.Top, Width, Height);
//#UC END# *525AEF6D0366_525AE04E0326_impl*
//#UC START# *525AEF6D0366_525AE04E0326_var*
var
 l_WidthDelta: Integer;
 l_HeightDelta: Integer;

 procedure lp_CorrectLabelWidth(aLabel: TvtLabel);
 begin
  with aLabel do
   SetBounds(Left, Top + l_HeightDelta, Width - l_WidthDelta, Height);
 end;

 procedure lp_CorrectControlWidth(anEdit: TWinControl);
 begin
  with anEdit do
   SetBounds(Left - l_WidthDelta, Top + l_HeightDelta, Width + l_WidthDelta, Height);
 end;
//#UC END# *525AEF6D0366_525AE04E0326_var*
//#UC START# *525AEF7702EB_525AE04E0326_impl*
 edUserName.Text := l3Trim(edUserName.Text);
 // Логин
 if not nsLoginVerify.Verify(edLogin.Text) then
 begin
  lpSetFocus(edLogin);
  //http://mdp.garant.ru/pages/viewpage.action?pageId=284165424
  l_LoginVerifyResult := nsLoginVerify.VerifyResult;
  if (l_LoginVerifyResult = vvrInvalidTooLong) then
   vcmSay(str_errLoginIsTooLong, [])
  else if (l_LoginVerifyResult <> vvrNormal) then
   Say(err_LoginHasNotValidChars);
  Exit;
 end
 else
 // Пароль, подтверждение
 if not l3Same(edPassword.Text, edConfirm.Text) then
 begin
  lpClearPassword;
  Say(err_PasswordAndConfirmNotSame);
  Exit;
 end
 else
 if not nsPasswordVerify.Verify(edPassword.Text) then
 begin
  lpClearPassword;
  Say(err_PasswordHasErrorSimbols);
  Exit;
 end
 else
 // Поле ФИО
 if l3IsNil(edUserName.Text) then
 begin
  lpSetFocus(edUserName);
  Say(err_SurnameNotDefined);
  Exit;
 end
 else
 // Email
 if not l3IsNil(edEmail.Text) and not nsEmailVerify.Verify(edEmail.Text) then
 begin
  lpSetFocus(edEmail);
  Say(err_EmailNotValid);
  Exit;
 end;

 if ((l3IsNil(edPassword.Text)) and
    not Ask(qr_PasswordIsEmpty)) then
 begin
  edPassword.SetFocus;
  Exit;
 end;

 if Assigned(RegisterAction) then
  ModalResult := RegisterAction(self);
//#UC END# *525AEF7702EB_525AE04E0326_impl*
//#UC START# *525AEF7702EB_525AE04E0326_var*
  procedure lpSetFocus(aEdit : TnscComboBox);
  begin
   with aEdit do
   begin
    SelectAll;
    SetFocus;
   end;
  end;

  procedure lpClearPassword;
  begin
   edPassword.Text := nil;
   edConfirm.Text  := nil;
   lpSetFocus(edPassword);
  end;

var
 l_LoginVerifyResult: TnsVerifyValueResult;
//#UC END# *525AEF7702EB_525AE04E0326_var*
//#UC START# *525AEF8102B9_525AE04E0326_impl*
 l_Result := True;
 // Подсветим красным
 edLogin.TextValid := nsLoginVerify.Verify(edLogin.Text);
 edPassword.TextValid := nsPasswordVerify.Verify(edPassword.Text);
 edEmail.TextValid := nsEmailVerify.Verify(edEmail.Text);
 edConfirm.TextValid := nsPasswordVerify.Verify(edConfirm.Text) and
                        l3Same(edConfirm.Text, edPassword.Text);
 // Логин
 if l3IsNil(edLogin.Text) then
  l_Result := False
 else
 // ФИО пользователя
 if l3IsNil(edUserName.Text) then
  l_Result := False;

 RegisterButton.Enabled := l_Result;
 cbAutoLogin.Enabled := l_Result;
//#UC END# *525AEF8102B9_525AE04E0326_impl*
//#UC START# *525AEF8102B9_525AE04E0326_var*
var
 l_Result : Boolean;
//#UC END# *525AEF8102B9_525AE04E0326_var*
//#UC START# *525AF00601EC_525AE04E0326_impl*
 if (Message.CharCode = VK_ESCAPE) and (fsModal in FormState) then
 begin
  ModalResult := mrCancel;
  Message.Result := 1;
 end
 else
  inherited;
//#UC END# *525AF00601EC_525AE04E0326_impl*
//#UC START# *525AF00601EC_525AE04E0326_var*
//#UC END# *525AF00601EC_525AE04E0326_var*
//#UC START# *525BCC29025A_525AE04E0326_impl*
   cbAutoLogin.Checked := aIsAutoLogin;
   f_CanRelogin := aCanRelogin;
   Position := poScreenCenter;
//#UC END# *525BCC29025A_525AE04E0326_impl*
