//#UC START# *47A869BB02DE_53319F9C002F_impl*
 l3AssignNil(Result);
 Assert(false, 'Невозможно преобразовать ' + ClassName + ' к Tl3WString');
//#UC END# *47A869BB02DE_53319F9C002F_impl*
//#UC START# *47A869BB02DE_53319F9C002F_var*
//#UC END# *47A869BB02DE_53319F9C002F_var*
//#UC START# *4A421BE201A9_53319F9C002F_impl*
 if (Self = nil) then
  Result := true
 else
  Result := GetIsOrd;
//#UC END# *4A421BE201A9_53319F9C002F_impl*
//#UC START# *4A421BE201A9_53319F9C002F_var*
//#UC END# *4A421BE201A9_53319F9C002F_var*
//#UC START# *4A421BED00FF_53319F9C002F_impl*
 if (Self = nil) then
  Result := (anID = nil)
 else
  Result := GetIsKindOfPrim(anID);
//#UC END# *4A421BED00FF_53319F9C002F_impl*
//#UC START# *4A421BED00FF_53319F9C002F_var*
//#UC END# *4A421BED00FF_53319F9C002F_var*
//#UC START# *4A421BF200BF_53319F9C002F_impl*
 Result := false;
 for l_Index := Low(anIDs) to High(anIDs) do
  if IsKindOf(anIDs[l_Index]) then
  begin
   Result := true;
   break;
  end;//IsKindOf(ID[l_Index])
//#UC END# *4A421BF200BF_53319F9C002F_impl*
//#UC START# *4A421BF200BF_53319F9C002F_var*
var
 l_Index : Integer;
//#UC END# *4A421BF200BF_53319F9C002F_var*
//#UC START# *4A421C12034A_53319F9C002F_impl*
 Result := IsKindOf(anAtomTypeID);
 if Result then
  for l_Index := Low(Exclude) to High(Exclude) do
   if IsKindOf(Exclude[l_Index]) then
   begin
    Result := false;
    break;
   end;//IsKindOf(ID[l_Index])
//#UC END# *4A421C12034A_53319F9C002F_impl*
//#UC START# *4A421C12034A_53319F9C002F_var*
var
 l_Index : Integer;
//#UC END# *4A421C12034A_53319F9C002F_var*
//#UC START# *5329CD1A020E_53319F9C002F_impl*
 Result := '';
 Assert(false, 'Невозможно преобразовать ' + ClassName + ' к AnsiString');
//#UC END# *5329CD1A020E_53319F9C002F_impl*
//#UC START# *5329CD1A020E_53319F9C002F_var*
//#UC END# *5329CD1A020E_53319F9C002F_var*
//#UC START# *532AE8F2009A_53319F9C002F_impl*
 Result := false;
 Assert(false, 'Невозможно вычислить IsOrd для ' + ClassName);
//#UC END# *532AE8F2009A_53319F9C002F_impl*
//#UC START# *532AE8F2009A_53319F9C002F_var*
//#UC END# *532AE8F2009A_53319F9C002F_var*
//#UC START# *533129DC037C_53319F9C002F_impl*
 Result := false;
 Assert(false, 'Не перекрыт GetIsKindOfPrim для ' + ClassName);
//#UC END# *533129DC037C_53319F9C002F_impl*
//#UC START# *533129DC037C_53319F9C002F_var*
//#UC END# *533129DC037C_53319F9C002F_var*
//#UC START# *53319F9C002F_ext:ParentFileName
w:\common\components\rtl\Garant\L3\l3Variant.pas
//#UC END# *53319F9C002F_ext:ParentFileName
//#UC START# *53319F9C002Fci*
 //Tl3VariantDef = class;
//#UC END# *53319F9C002Fci*
//#UC START# *53319F9C002Fcit*
//#UC END# *53319F9C002Fcit*
//#UC START# *53319F9C002Fimpl*
//#UC END# *53319F9C002Fimpl*
//#UC START# *53319F9C002Fpubl*
//#UC END# *53319F9C002Fpubl*
//#UC START# *5342ACBB023A_53319F9C002F_impl*
 if (Self = nil) then
  Result := false
 else
 if Succeeded(Self.QueryInterface(aGUID, theObj)) then
  Result := true
 else
  Result := false;
//#UC END# *5342ACBB023A_53319F9C002F_impl*
//#UC START# *5342ACBB023A_53319F9C002F_var*
//#UC END# *5342ACBB023A_53319F9C002F_var*
