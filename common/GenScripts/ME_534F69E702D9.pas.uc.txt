//#UC START# *479731C50290_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *479731C50290_534F69E702D9_impl*
//#UC START# *479731C50290_534F69E702D9_var*
//#UC END# *479731C50290_534F69E702D9_var*
//#UC START# *48C7925A02E5_534F69E702D9_impl*
 inherited;
 aParams.ExStyle := aParams.ExStyle or WS_EX_APPWINDOW;
//#UC END# *48C7925A02E5_534F69E702D9_impl*
//#UC START# *48C7925A02E5_534F69E702D9_var*
//#UC END# *48C7925A02E5_534F69E702D9_var*
//#UC START# *49803F5503AA_534F69E702D9_impl*
 inherited;
 LoadSettings;
//#UC END# *49803F5503AA_534F69E702D9_impl*
//#UC START# *49803F5503AA_534F69E702D9_var*
//#UC END# *49803F5503AA_534F69E702D9_var*
//#UC START# *4A8E8F2E0195_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *4A8E8F2E0195_534F69E702D9_impl*
//#UC START# *4A8E8F2E0195_534F69E702D9_var*
//#UC END# *4A8E8F2E0195_534F69E702D9_var*
//#UC START# *4B0E845502C1_534F69E702D9_impl*
 Result := False;
//#UC END# *4B0E845502C1_534F69E702D9_impl*
//#UC START# *4B0E845502C1_534F69E702D9_var*
//#UC END# *4B0E845502C1_534F69E702D9_var*
//#UC START# *4F7DCF74032D_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *4F7DCF74032D_534F69E702D9_impl*
//#UC START# *4F7DCF74032D_534F69E702D9_var*
//#UC END# *4F7DCF74032D_534F69E702D9_var*
//#UC START# *4F7DCF8D03CC_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *4F7DCF8D03CC_534F69E702D9_impl*
//#UC START# *4F7DCF8D03CC_534F69E702D9_var*
//#UC END# *4F7DCF8D03CC_534F69E702D9_var*
//#UC START# *4F9007B20376_534F69E702D9_impl*
 f_BackgroundBitmap := Tl3Bitmap.Create;
 inherited;
 DoLoadFromSettings;
 LoadSettings;
//#UC END# *4F9007B20376_534F69E702D9_impl*
//#UC START# *4F9007B20376_534F69E702D9_var*
//#UC END# *4F9007B20376_534F69E702D9_var*
//#UC START# *500004A60200_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *500004A60200_534F69E702D9_impl*
//#UC START# *500004A60200_534F69E702D9_var*
//#UC END# *500004A60200_534F69E702D9_var*
//#UC START# *534F69E702D9_ext:FileName
w:\common\components\gui\Garant\VCM\implementation\Visual\ChromeLike\NOT_FINISHED_vcmTabbedContainerForm.pas
//#UC END# *534F69E702D9_ext:FileName
//#UC START# *534F88D7028A_534F69E702D9get_impl*
 !!! Needs to be implemented !!!
//#UC END# *534F88D7028A_534F69E702D9get_impl*
//#UC START# *534F88D7028A_534F69E702D9get_var*
//#UC END# *534F88D7028A_534F69E702D9get_var*
//#UC START# *537C731D00B3_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *537C731D00B3_534F69E702D9_impl*
//#UC START# *537C731D00B3_534F69E702D9_var*
//#UC END# *537C731D00B3_534F69E702D9_var*
//#UC START# *537D832600C0_534F69E702D9get_impl*
 !!! Needs to be implemented !!!
//#UC END# *537D832600C0_534F69E702D9get_impl*
//#UC START# *537D832600C0_534F69E702D9get_var*
//#UC END# *537D832600C0_534F69E702D9get_var*
//#UC START# *53EAF3250169_534F69E702D9_impl*
 l_CaptionRect := ClientRect;
 l_CaptionRect.Bottom := l_CaptionRect.Top + f_TabSet.Height;

 Result := (PtInRect(l_CaptionRect, ScreenToClient(aPoint))) AND
           (lp_DoHitTest(aPoint) in [HTCLIENT, HTCAPTION])  AND
           (f_TabSet.HitTest(aPoint) <> htrInTab);
//#UC END# *53EAF3250169_534F69E702D9_impl*
//#UC START# *53EAF3250169_534F69E702D9_var*

 function lp_DoHitTest(const aHitPoint: TPoint): LongInt;
 var
  l_Msg: TWMNCHitTest;
 begin
  l3FillChar(l_Msg, SizeOf(l_Msg), 0);
  l_Msg.XPos := aPoint.X;
  l_Msg.YPos := aPoint.Y;
  Result := SendMessage(Handle, WM_NCHITTEST, TMessage(l_Msg).WParam,
   TMessage(l_Msg).LParam);
 end;//lp_DoHitTest

var
 l_HitTestResult: TChromeLikeTabSetHitTestResult;
 l_CaptionRect: TRect;
 l_sCaptionRect: TRect;
//#UC END# *53EAF3250169_534F69E702D9_var*
//#UC START# *54B4B94903C5_534F69E702D9_impl*
 Result := TabSet;
//#UC END# *54B4B94903C5_534F69E702D9_impl*
//#UC START# *54B4B94903C5_534F69E702D9_var*
//#UC END# *54B4B94903C5_534F69E702D9_var*
//#UC START# *550A7E2502F7_534F69E702D9_impl*
 Assert(aTab.Form <> nil);
 if Supports(aTab.Form, IvcmContainedForm, l_Container) then
 try
  l_Container.SaveFocusedControl;
 finally
  l_Container := nil;
 end;
//#UC END# *550A7E2502F7_534F69E702D9_impl*
//#UC START# *550A7E2502F7_534F69E702D9_var*
var
 l_Container: IvcmContainedForm;
//#UC END# *550A7E2502F7_534F69E702D9_var*
//#UC START# *550A7E46032C_534F69E702D9_impl*
 Assert(False);
//#UC END# *550A7E46032C_534F69E702D9_impl*
//#UC START# *550A7E46032C_534F69E702D9_var*
//#UC END# *550A7E46032C_534F69E702D9_var*
//#UC START# *550A7E690247_534F69E702D9_impl*
 aCanUndock := TvcmTabbedContainerFormDispatcher.Instance.CanOpenNewContainer;
//#UC END# *550A7E690247_534F69E702D9_impl*
//#UC START# *550A7E690247_534F69E702D9_var*
//#UC END# *550A7E690247_534F69E702D9_var*
//#UC START# *550A7EAB00D2_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *550A7EAB00D2_534F69E702D9_impl*
//#UC START# *550A7EAB00D2_534F69E702D9_var*
//#UC END# *550A7EAB00D2_534F69E702D9_var*
//#UC START# *550A7EC00274_534F69E702D9_impl*
 Assert(aNewSelected.Form <> nil);
 l_Form := aNewSelected.Form;
 if (l_Form <> nil) and
    (not l_Form.Floating) then
 begin
  NotifyComponentsSelectionChanged(l_Form as TvcmEntityForm);
  DisableOthers(l_Form);
  SetActiveWindow(l_Form.Handle);
  SetWindowPos(l_Form.Handle, HWND(0), l_Form.Left, l_Form.Top, l_Form.Width, l_Form.Height,
   SWP_NOSIZE or SWP_NOMOVE or SWP_NOZORDER);
//  TvgRemindersLineManager.UpdateRemindersActions;
//  TvgRemindersLineManager.CheckZOrder;
  UpdateContainerCaption;
  UpdateMenu(l_Form);
  SetFocusToSelectedForm;
  // - http://mdp.garant.ru/pages/viewpage.action?pageId=578894988
 end;
 UpdateContainedFormsActions;
//#UC END# *550A7EC00274_534F69E702D9_impl*
//#UC START# *550A7EC00274_534F69E702D9_var*
var
 l_Form: TForm;
//#UC END# *550A7EC00274_534F69E702D9_var*
//#UC START# *550A7FE70244_534F69E702D9_impl*
 Result := Decorator;
//#UC END# *550A7FE70244_534F69E702D9_impl*
//#UC START# *550A7FE70244_534F69E702D9_var*
//#UC END# *550A7FE70244_534F69E702D9_var*
//#UC START# *550A84C1035F_534F69E702D9_impl*
 inherited;
 UpdateWindow(f_Menu.Handle);
 UpdateWindow(Handle);

 l_Form := aForm as TvcmEntityForm;

 TvcmTabbedContainerFormDispatcher.Instance.FormInsertedIntoContainer(l_Form, Self);

 if (aParams <> nil) then
  f_TabSet.UpdateFormTab(aForm, aParams);

 if (TvcmTabbedContainerFormDispatcher.Instance.ContainerCount = 0) and
    (f_TabSet.TabCount = 1) then
//   Запил для хинта на первом окне с основным меню после запуска оболочки
//   - http://mdp.garant.ru/pages/viewpage.action?pageId=569232339
//   Задача на выпрямление всего хозяйства с заголовками, хинтами и иконками:
//   http://mdp.garant.ru/pages/viewpage.action?pageId=570129497
  f_TabSet.FormTabs[aForm].HintText := l3Str(l_Form.CCaption);

 NotifyComponentsMainFormChanged(l_Form);

 Decorator.EndUpdate;
 f_LastDockOperationTickCount := GetTickCount;

 TvgRemindersLineManager.UpdateRemindersActions;

 if aNeedSelect then
  NotifyComponentsSelectionChanged(l_Form);
 // - http://mdp.garant.ru/pages/viewpage.action?pageId=589883482

 TvgRemindersLineManager.CheckZOrder;
//#UC END# *550A84C1035F_534F69E702D9_impl*
//#UC START# *550A84C1035F_534F69E702D9_var*
var
 l_Form: TvcmEntityForm;
//#UC END# *550A84C1035F_534F69E702D9_var*
//#UC START# *550A865102E6_534F69E702D9_impl*
 Result := Make;
//#UC END# *550A865102E6_534F69E702D9_impl*
//#UC START# *550A865102E6_534F69E702D9_var*
//#UC END# *550A865102E6_534F69E702D9_var*
//#UC START# *550A873B0298_534F69E702D9_impl*
 pnlMain.Caption := EmptyStr;
 inherited;

//#UC END# *550A873B0298_534F69E702D9_impl*
//#UC START# *550A873B0298_534F69E702D9_var*
//#UC END# *550A873B0298_534F69E702D9_var*
//#UC START# *550A877701F5_534F69E702D9_impl*
 Result := inherited CanDockToAnother(aPoint);
//#UC END# *550A877701F5_534F69E702D9_impl*
//#UC START# *550A877701F5_534F69E702D9_var*
//#UC END# *550A877701F5_534F69E702D9_var*
//#UC START# *550A879C02C9_534F69E702D9_impl*
 TvcmTabbedContainerFormDispatcher.Instance.TryDockToTabSet(aMousePoint,
  TvcmEntityForm(TabSet.Tabs[0].Form), Self);
//#UC END# *550A879C02C9_534F69E702D9_impl*
//#UC START# *550A879C02C9_534F69E702D9_var*
//#UC END# *550A879C02C9_534F69E702D9_var*
//#UC START# *550AAF6F03A1_534F69E702D9_impl*
 Result := PnlMain;
//#UC END# *550AAF6F03A1_534F69E702D9_impl*
//#UC START# *550AAF6F03A1_534F69E702D9_var*
//#UC END# *550AAF6F03A1_534F69E702D9_var*
//#UC START# *550AB82400FD_534F69E702D9_impl*
 f_BackgroundBitmap.Assign(aBitmap);
//#UC END# *550AB82400FD_534F69E702D9_impl*
//#UC START# *550AB82400FD_534F69E702D9_var*
//#UC END# *550AB82400FD_534F69E702D9_var*
//#UC START# *550AB87B00B3_534F69E702D9get_impl*
 Result := f_TabSet.TabCount;
//#UC END# *550AB87B00B3_534F69E702D9get_impl*
//#UC START# *550AB87B00B3_534F69E702D9get_var*
//#UC END# *550AB87B00B3_534F69E702D9get_var*
//#UC START# *550AB8A301BA_534F69E702D9get_impl*
 Result := TvcmEntityForm(f_TabSet.Tabs[Index].Form);
//#UC END# *550AB8A301BA_534F69E702D9get_impl*
//#UC START# *550AB8A301BA_534F69E702D9get_var*
//#UC END# *550AB8A301BA_534F69E702D9get_var*
//#UC START# *550AB9B3002C_534F69E702D9_impl*
 f_ContainerIsClosing := True;
 inherited;
//#UC END# *550AB9B3002C_534F69E702D9_impl*
//#UC START# *550AB9B3002C_534F69E702D9_var*
//#UC END# *550AB9B3002C_534F69E702D9_var*
//#UC START# *550AB9CA03D4_534F69E702D9_impl*
 inherited;
 if not Message.Enabled then
  TvgRemindersLineManager.LockActivateProcessing
 else
  TvgRemindersLineManager.UnlockActivateProcessing;
 // - это нужно для того, чтобы медалям не пришло в голову посылать
 // WM_ACTIVATE главной форме когда ее задизейблили
 // http://mdp.garant.ru/pages/viewpage.action?pageId=564993117
 UpdateMenu;
 UpdateWindow(Handle);
//#UC END# *550AB9CA03D4_534F69E702D9_impl*
//#UC START# *550AB9CA03D4_534F69E702D9_var*
//#UC END# *550AB9CA03D4_534F69E702D9_var*
//#UC START# *550AB9EC0166_534F69E702D9_impl*
 if (f_TabSet.SelectedForm <> nil) then
  aMessage.Result := SendMessage(TabSet.SelectedForm.Handle,
                                 WM_COPYDATA,
                                 TMessage(aMessage).WParam,
                                 TMessage(aMessage).LParam);
//#UC END# *550AB9EC0166_534F69E702D9_impl*
//#UC START# *550AB9EC0166_534F69E702D9_var*
//#UC END# *550AB9EC0166_534F69E702D9_var*
//#UC START# *550ABA050068_534F69E702D9_impl*
 inherited;
//#UC END# *550ABA050068_534F69E702D9_impl*
//#UC START# *550ABA050068_534F69E702D9_var*
//#UC END# *550ABA050068_534F69E702D9_var*
//#UC START# *550ABA1E0398_534F69E702D9_impl*
 inherited;
 DoGiveFocusToContainedForm;
 // - http://mdp.garant.ru/pages/viewpage.action?pageId=587165767
//#UC END# *550ABA1E0398_534F69E702D9_impl*
//#UC START# *550ABA1E0398_534F69E702D9_var*
//#UC END# *550ABA1E0398_534F69E702D9_var*
//#UC START# *550BB564039B_534F69E702D9_impl*
 Result := CreateNew(Application);
//#UC END# *550BB564039B_534F69E702D9_impl*
//#UC START# *550BB564039B_534F69E702D9_var*
//#UC END# *550BB564039B_534F69E702D9_var*
//#UC START# *550BB5850337_534F69E702D9_impl*
 Assert(not (aChild is TvcmTabbedContainerForm));
 Result := Make;
 with Result do
 begin
  InsertForm(aChild, aTabParams, True);
  DisableOthers(aChild);
 end;
//#UC END# *550BB5850337_534F69E702D9_impl*
//#UC START# *550BB5850337_534F69E702D9_var*

//#UC END# *550BB5850337_534F69E702D9_var*
//#UC START# *550BBECD016F_534F69E702D9_impl*
 f_ContainerIsClosing := False;
//#UC END# *550BBECD016F_534F69E702D9_impl*
//#UC START# *550BBECD016F_534F69E702D9_var*
//#UC END# *550BBECD016F_534F69E702D9_var*
//#UC START# *550BBEE402D5_534F69E702D9_impl*
 if (aFormWithMenu = nil) then
  l_Form := f_TabSet.SelectedForm
 else
  l_Form := aFormWithMenu;
 if (l_Form <> nil) then
 begin
  f_CurrentMainMenu := lp_GetFormMenu(l_Form);
  if (f_CurrentMainMenu <> nil) then
   f_Menu.MenuItem := f_CurrentMainMenu.Items;
 end;
//#UC END# *550BBEE402D5_534F69E702D9_impl*
//#UC START# *550BBEE402D5_534F69E702D9_var*

 function lp_GetFormMenu(aForm: TForm): TMainMenu;
 var
  l_Index: Integer;
 begin
  Result := nil;
  for l_Index := 0 to Pred(aForm.ComponentCount) do
   if (aForm.Components[l_Index] is TMainMenu) then
   begin
    Result := TMainMenu(aForm.Components[l_Index]);
    Break;
   end;
 end;

var
 l_Form: TForm;
//#UC END# *550BBEE402D5_534F69E702D9_var*
//#UC START# *550BBF190077_534F69E702D9_impl*
 Assert(False);
//#UC END# *550BBF190077_534F69E702D9_impl*
//#UC START# *550BBF190077_534F69E702D9_var*
//#UC END# *550BBF190077_534F69E702D9_var*
//#UC START# *550BBF280023_534F69E702D9_impl*
 Assert(False);
//#UC END# *550BBF280023_534F69E702D9_impl*
//#UC START# *550BBF280023_534F69E702D9_var*
//#UC END# *550BBF280023_534F69E702D9_var*
//#UC START# *550BBF70002F_534F69E702D9_impl*
 Result := TabSet.IsDockablePoint(aPoint) and IsDockOperationPossible;
//#UC END# *550BBF70002F_534F69E702D9_impl*
//#UC START# *550BBF70002F_534F69E702D9_var*
//#UC END# *550BBF70002F_534F69E702D9_var*
//#UC START# *550BCDB500D7_534F69E702D9_impl*
 if (aMessage.CmdType = SC_KEYMENU) and (aMessage.Key = 0) then
 begin
  if f_Menu.IsMenuActive then
   f_Menu.DeactivateMenu
  else
   f_Menu.ActivateMenu(True);
  aMessage.Result := 1;
 end
 else
 begin
  if (aMessage.CmdType = SC_MINIMIZE) then
   f_WindowStateBeforeMinimizing := WindowState;
  inherited;
 end;
//#UC END# *550BCDB500D7_534F69E702D9_impl*
//#UC START# *550BCDB500D7_534F69E702D9_var*
//#UC END# *550BCDB500D7_534F69E702D9_var*
//#UC START# *550BCFD00150_534F69E702D9_impl*
 for l_Index := 0 to Pred(f_TabSet.TabCount) do
  lp_UpdateActions(f_TabSet.Tabs[l_Index].Form);
//#UC END# *550BCFD00150_534F69E702D9_impl*
//#UC START# *550BCFD00150_534F69E702D9_var*

 procedure lp_UpdateActions(aControl: TWinControl);
 var
  l_Form: THackCustomForm;
  l_Index: Integer;
 begin
  if (aControl is TCustomForm) then
  begin
   l_Form := THackCustomForm(aControl);
   l_Form.UpdateActions;
  end;
  for l_Index := 0 to Pred(aControl.ControlCount) do
   if (aControl.Controls[l_Index] is TWinControl) then
    lp_UpdateActions(TWinControl(aControl.Controls[l_Index]));
 end;//lp_UpdateActions

var
 l_Index: Integer;
//#UC END# *550BCFD00150_534F69E702D9_var*
//#UC START# *550BCFDF0357_534F69E702D9_impl*
 for l_Index := 0 to Pred(f_TabSet.TabCount) do
 begin
  l_Form := f_TabSet.Tabs[l_Index].Form;
  if (l_Form <> aSelectedForm) then
  begin
   l_Form.Visible := False;
   l_Form.SendToBack;
   l_Form.Enabled := False;
  end;
 end;
 aSelectedForm.Enabled := True;
 if (not aSelectedForm.Visible) and Visible and Showing then
  aSelectedForm.Show;
 aSelectedForm.BringToFront;
//#UC END# *550BCFDF0357_534F69E702D9_impl*
//#UC START# *550BCFDF0357_534F69E702D9_var*
var
 l_Form: TForm;
 l_Index: Integer;
//#UC END# *550BCFDF0357_534F69E702D9_var*
//#UC START# *550BD0050137_534F69E702D9_impl*
 l_Form := f_TabSet.SelectedTab.Form;
 if (l_Form <> nil) then
 begin
  // 1. В заголовке вкладки отображается короткое название (типа, "Список документов).
  // 2. Такое же название должно быть в таскбаре и меню Alt+Tab.
  // 3. Хинт вкладки остается полным(типа, "Список: <название списка>").
  // - http://mdp.garant.ru/pages/viewpage.action?pageId=565271368
  l_Caption := l3CStr(f_TabSet.SelectedTab.Text);
  // - http://mdp.garant.ru/pages/viewpage.action?pageId=564736847
  CCaption := l_Caption;
  Application.Title := l3Str(l_Caption);
  TvcmTabbedContainerFormDispatcher.Instance.ContainerChanged(Self);
 end;
//#UC END# *550BD0050137_534F69E702D9_impl*
//#UC START# *550BD0050137_534F69E702D9_var*
var
 l_Form: TForm;
 l_Caption: IvcmCString;
//#UC END# *550BD0050137_534F69E702D9_var*
//#UC START# *550BD0180268_534F69E702D9_impl*
 l_SelectedForm := f_TabSet.SelectedForm;
 Assert(l_SelectedForm <> nil);
 if Supports(l_SelectedForm, IvcmContainedForm, l_Container) then
 try
  l_Container.RestoreFocusedControl;
 finally
  l_Container := nil;
 end;
//#UC END# *550BD0180268_534F69E702D9_impl*
//#UC START# *550BD0180268_534F69E702D9_var*
var
 l_SelectedForm: TCustomForm;
 l_Container: IvcmContainedForm;
//#UC END# *550BD0180268_534F69E702D9_var*
//#UC START# *550BD03202AF_534F69E702D9_impl*
 if Supports(f_TabSet.SelectedForm, IvcmContainer, l_Container) then
 try
  l_Container.SetFocusToMainObjectForm;
 finally
  l_Container := nil;
 end;//try..finally
//#UC END# *550BD03202AF_534F69E702D9_impl*
//#UC START# *550BD03202AF_534F69E702D9_var*
var
 l_Container: IvcmContainer;
//#UC END# *550BD03202AF_534F69E702D9_var*
//#UC START# *550BD68A034F_534F69E702D9_impl*
 CanClose := TvcmTabbedContainerFormDispatcher.Instance.CallContainerCloseQuery(Self);
 if CanClose then
  NotifyContainedFormsOnClosing;
//#UC END# *550BD68A034F_534F69E702D9_impl*
//#UC START# *550BD68A034F_534F69E702D9_var*
//#UC END# *550BD68A034F_534F69E702D9_var*
//#UC START# *550BD6D202AE_534F69E702D9_impl*
 lp_NotifyComponent(aForm);
//#UC END# *550BD6D202AE_534F69E702D9_impl*
//#UC START# *550BD6D202AE_534F69E702D9_var*

 procedure lp_NotifyComponent(const aComponent: TComponent);

  procedure lp_DoNotifyComponent(const aSubjectComponent: TComponent);
  var
   l_MainFormDependent: IvcmMainFormDependent;
  begin
   Assert(aSubjectComponent <> nil);
   if Supports(aSubjectComponent, IvcmMainFormDependent, l_MainFormDependent) then
   try
    l_MainFormDependent.MainFormChanged(Self);
   finally
    l_MainFormDependent := nil;
   end;
  end;//lp_SetPageActive

 var
  l_Index: Integer;
 begin
  lp_DoNotifyComponent(aComponent);
  for l_Index := 0 to Pred(aComponent.ComponentCount) do
   lp_NotifyComponent(aComponent.Components[l_Index]);
 end;//lp_NotifyComponent

//#UC END# *550BD6D202AE_534F69E702D9_var*
//#UC START# *550BD6F702D7_534F69E702D9_impl*
 for l_Index := 0 to Pred(f_TabSet.TabCount) do
 begin
  l_Form := f_TabSet.Tabs[l_Index].Form;
  Assert(l_Form <> nil);
  lp_NotifyComponent(l_Form, l_Form = aNewSelectedForm);
 end;
//#UC END# *550BD6F702D7_534F69E702D9_impl*
//#UC START# *550BD6F702D7_534F69E702D9_var*

 procedure lp_NotifyComponent(const aComponent: TComponent; aIsActive: Boolean);

  procedure lp_SetPageActive(const aSubjectComponent: TComponent; aValue: Boolean);
  var
   l_TabSheetControl: IafwTabSheetControl;
   l_Component: IvcmSelectedTabDependent;
  begin
   Assert(aSubjectComponent <> nil);
   if Supports(aSubjectComponent, IafwTabSheetControl, l_TabSheetControl) then
   try
    if aValue then
     l_TabSheetControl.PageActive
    else
     l_TabSheetControl.PageInactive;
   finally
    l_TabSheetControl := nil;
   end;//try..finally
   if Supports(aSubjectComponent, IvcmSelectedTabDependent, l_Component) then
   try
    if aIsActive then
     l_Component.TabBecomeActive
    else
     l_Component.TabBecomeInActive;
   finally
    l_Component := nil;
   end;//try..finally
  end;//lp_SetPageActive

 var
  l_Index: Integer;
 begin
  lp_SetPageActive(aComponent, aIsActive);
  for l_Index := 0 to Pred(aComponent.ComponentCount) do
   lp_NotifyComponent(aComponent.Components[l_Index], aIsActive);
 end;//lp_NotifyComponent

var
 l_Index: Integer;
 l_Form: TForm;
//#UC END# *550BD6F702D7_534F69E702D9_var*
//#UC START# *550BD7170264_534F69E702D9_impl*
 for l_Index := 0 to Pred(f_TabSet.TabCount) do
  if Supports(f_TabSet.Tabs[l_Index].Form, IvcmContainedForm, l_Form) then
  try
   l_Form.NotifyContainerIsClosing;
  finally
   l_Form := nil;
  end;
//#UC END# *550BD7170264_534F69E702D9_impl*
//#UC START# *550BD7170264_534F69E702D9_var*
var
 l_Index: Integer;
 l_Form: IvcmContainedForm;
//#UC END# *550BD7170264_534F69E702D9_var*
//#UC START# *5511053E013B_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *5511053E013B_534F69E702D9_impl*
//#UC START# *5511053E013B_534F69E702D9_var*
//#UC END# *5511053E013B_534F69E702D9_var*
//#UC START# *5518E1700367_534F69E702D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *5518E1700367_534F69E702D9_impl*
//#UC START# *5518E1700367_534F69E702D9_var*
//#UC END# *5518E1700367_534F69E702D9_var*
