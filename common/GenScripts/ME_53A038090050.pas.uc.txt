//#UC START# *479731C50290_53A038090050_impl*
 FreeAndNil(f_Items);
 inherited;
//#UC END# *479731C50290_53A038090050_impl*
//#UC START# *479731C50290_53A038090050_var*
//#UC END# *479731C50290_53A038090050_var*
//#UC START# *47A042E100E2_53A038090050_impl*
 inherited;
 if NeedSort then
  f_Items := TalcuTaskListPrim.MakeSorted(l3_dupError)
 else
  f_Items := TalcuTaskListPrim.Create;
//#UC END# *47A042E100E2_53A038090050_impl*
//#UC START# *47A042E100E2_53A038090050_var*
//#UC END# *47A042E100E2_53A038090050_var*
//#UC START# *53A038090050_ext:ParentFileName
w:\archi\source\projects\PipeInAuto\Tasks\alcuTaskListBase.pas
//#UC END# *53A038090050_ext:ParentFileName
//#UC START# *53A04652024A_53A038090050_impl*
 try
  Lock;
  try
   f_Items.IterateAllF(l3L2IA(@DoIt));
  finally
   Unlock;
  end;//try..finally
 finally
  l3FreeLocalStub(Hack);
 end;//try..finally
//#UC END# *53A04652024A_53A038090050_impl*
//#UC START# *53A04652024A_53A038090050_var*

 function DoIt(aData : PObject; anIndex : Integer) : Boolean;
 begin
  Result := anAction(TddProcessTask(aData^));
 end;
 
var
 Hack : Pointer absolute anAction;
//#UC END# *53A04652024A_53A038090050_var*
//#UC START# *53A063C502F6_53A038090050_impl*
 Changing;
 try
  Lock;
  try
   f_Items.Clear;
  finally
   Unlock;
  end;//try..finally
 finally
  Changed;
 end;
//#UC END# *53A063C502F6_53A038090050_impl*
//#UC START# *53A063C502F6_53A038090050_var*
//#UC END# *53A063C502F6_53A038090050_var*
//#UC START# *53A064490063_53A038090050get_impl*
(* Lock;
 try*)
  Result := f_Items.Count;
(* finally
  Unlock;
 end;//try..finally*)
//#UC END# *53A064490063_53A038090050get_impl*
//#UC START# *53A064490063_53A038090050get_var*
//#UC END# *53A064490063_53A038090050get_var*
//#UC START# *53A196850107_53A038090050_impl*
 Result := false;
//#UC END# *53A196850107_53A038090050_impl*
//#UC START# *53A196850107_53A038090050_var*
//#UC END# *53A196850107_53A038090050_var*
//#UC START# *53A199A802C9_53A038090050_impl*
 try
  Lock;
  try
   if (anIndex >= 0) AND (anIndex < f_Items.Count) then
    anAction(f_Items[anIndex]);
  finally
   Unlock;
  end;//try..finally
 finally
  l3FreeLocalStub(Hack);
 end;//try..finally
//#UC END# *53A199A802C9_53A038090050_impl*
//#UC START# *53A199A802C9_53A038090050_var*
var
 Hack : Pointer absolute anAction;
//#UC END# *53A199A802C9_53A038090050_var*
//#UC START# *546B5A73038A_53A038090050_impl*
 Result := false;
 l_Found := nil;
 try
  try
   ForEachF(L2AlcuTasksIteratorForEachFAction(@DoIt));
   if (l_Found <> nil) then
   begin
    anAction(l_Found);
    Result := True;
   end;
  finally
   l3FreeLocalStub(Hack);
  end;//try..finally
 finally
  FreeAndNil(l_Found);
 end;//try..finally
//#UC END# *546B5A73038A_53A038090050_impl*
//#UC START# *546B5A73038A_53A038090050_var*

var
 l_Found : TddProcessTask;

 function DoIt(anItem: TddProcessTask): Boolean;
 begin
  if anItem.TaskID = aTaskID then
  begin
   anItem.SetRefTo(l_Found);
   //anAction(anItem);
   ForOneByIDF := true;
   Result := false;
  end//anItem.TaskID = aTaskID
  else
   Result := true;
 end;

var
 Hack : Pointer absolute anAction;

//#UC END# *546B5A73038A_53A038090050_var*
