//#UC START# *521761BB03DE_53A297C601F0_impl*
 Control := ControlClass.Create(aParent);
 with Control do
 begin
  aParent.InsertControl(Control);
  Top := aTop;
  Left := aLeft;
  if aParent is TScrollBox
   then Width := aParent.ClientWidth - aLeft - c_ConfigItemRight - c_ScrollBarWidth
   else Width := aParent.ClientWidth - aLeft - c_ConfigItemRight;
 {$ifdef nemesis}
  Control.Anchors := Control.Anchors + [akRight];
 {$endif}
  InitControl(Control);
  CheckLoadItems;
  Height := ControlHeight(aParent);
  if aMaxLeft < aLeft then
   aMaxLeft := aLeft;
 end;
 Result := Control;
//#UC END# *521761BB03DE_53A297C601F0_impl*
//#UC START# *521761BB03DE_53A297C601F0_var*
//#UC END# *521761BB03DE_53A297C601F0_var*
//#UC START# *521B053F03C3_53A297C601F0_impl*
 Assert(False);
//#UC END# *521B053F03C3_53A297C601F0_impl*
//#UC START# *521B053F03C3_53A297C601F0_var*
//#UC END# *521B053F03C3_53A297C601F0_var*
//#UC START# *521B058801FD_53A297C601F0_impl*
 if (SelectedItemIndex <> -1) then
  Value := CalcValue(ControlStrings[SelectedItemIndex]);
//#UC END# *521B058801FD_53A297C601F0_impl*
//#UC START# *521B058801FD_53A297C601F0_var*
//#UC END# *521B058801FD_53A297C601F0_var*
//#UC START# *521B07030052_53A297C601F0_impl*
 if aDefault then
  l_Name := CalcDisplayName(DefaultValue)
 else
  l_Name := CalcDisplayName(Value);
 l_Index := ControlStrings.IndexOf(l_Name);
 if l_Index <> -1 then
  SelectValue(l_Index)
 else
 begin
  l_DefaultValueIndex := ControlStrings.IndexOf(CalcDisplayName(DefaultValue));
  if (not aDefault) and (l_DefaultValueIndex <> -1) then
   SelectValue(l_DefaultValueIndex)
  else
   SelectValue(0);
 end;
//#UC END# *521B07030052_53A297C601F0_impl*
//#UC START# *521B07030052_53A297C601F0_var*
var
 l_Index: Integer;
 l_Name: String;
 l_DefaultValueIndex: Integer;
//#UC END# *521B07030052_53A297C601F0_var*
//#UC START# *52245D1400E9_53A297C601F0_impl*
 Assert(False);
//#UC END# *52245D1400E9_53A297C601F0_impl*
//#UC START# *52245D1400E9_53A297C601F0_var*
//#UC END# *52245D1400E9_53A297C601F0_var*
//#UC START# *53A297C601F0_ext:ParentFileName
w:\common\components\rtl\Garant\dd\ddAppConfigTypes.pas
//#UC END# *53A297C601F0_ext:ParentFileName
//#UC START# *53A299B303CB_53A297C601F0get_impl*
 Assert(False);
//#UC END# *53A299B303CB_53A297C601F0get_impl*
//#UC START# *53A299B303CB_53A297C601F0get_var*
//#UC END# *53A299B303CB_53A297C601F0get_var*
//#UC START# *53A29C9C00DA_53A297C601F0_impl*
 Changed := True;
//#UC END# *53A29C9C00DA_53A297C601F0_impl*
//#UC START# *53A29C9C00DA_53A297C601F0_var*
//#UC END# *53A29C9C00DA_53A297C601F0_var*
//#UC START# *53A29CE60182_53A297C601F0_impl*
 Assert(Control is ControlClass, Control.ClassName);
 if (f_ValueMap <> nil) then
 begin
  if (ControlStrings.Count = 0) then
  begin
   // загрузим значения
   l_Items := Tl3Strings.Make;
   try
    f_ValueMap.GetDisplayNames(l_Items);
    try
     AssignStringsToControl(l_Items);
     SetValueToControl(false);
    except
     on El3ValueMapValueNotFound do
     begin
      Value := DefaultValue;
      SetValueToControl(false);
     end;//on El3ValueMapValueNotFound
    end;//try..except
   finally
    l_Items := nil;
   end;//try..finally
  end//ControlStrings.Count = 0
 end//f_ValueMap <> nil
 else
  // первая загрузка
 if (ControlStrings.Count = 0) and (f_MapValues.Count > 0) then
 begin
  // загрузим значения
  for l_Index := 0 to Pred(f_MapValues.Count) do
   ControlStrings.Add(f_MapValues[l_Index].Caption);
  // установим текущее значение
  SelectedItemIndex := ControlStrings.IndexOf(CalcDisplayName(Value));
 end;//ControlStrings.Count = 0
//#UC END# *53A29CE60182_53A297C601F0_impl*
//#UC START# *53A29CE60182_53A297C601F0_var*
var
 l_Items : Il3StringsEx;
 l_Index: Integer;
//#UC END# *53A29CE60182_53A297C601F0_var*
//#UC START# *53A29D070172_53A297C601F0_impl*
 SelectedItemIndex := aValue;
//#UC END# *53A29D070172_53A297C601F0_impl*
//#UC START# *53A29D070172_53A297C601F0_var*
//#UC END# *53A29D070172_53A297C601F0_var*
//#UC START# *53A29D68029C_53A297C601F0get_impl*
 Assert(False);
//#UC END# *53A29D68029C_53A297C601F0get_impl*
//#UC START# *53A29D68029C_53A297C601F0get_var*
//#UC END# *53A29D68029C_53A297C601F0get_var*
//#UC START# *53A29D68029C_53A297C601F0set_impl*
 Assert(False);
//#UC END# *53A29D68029C_53A297C601F0set_impl*
//#UC START# *53A29D68029C_53A297C601F0set_var*
//#UC END# *53A29D68029C_53A297C601F0set_var*
//#UC START# *53A2A16C0369_53A297C601F0_impl*
 // ничего не делаем
//#UC END# *53A2A16C0369_53A297C601F0_impl*
//#UC START# *53A2A16C0369_53A297C601F0_var*
//#UC END# *53A2A16C0369_53A297C601F0_var*
//#UC START# *53A3BE140327_53A297C601F0get_impl*
 Assert(False);
//#UC END# *53A3BE140327_53A297C601F0get_impl*
//#UC START# *53A3BE140327_53A297C601F0get_var*
//#UC END# *53A3BE140327_53A297C601F0get_var*
//#UC START# *53A3D16C014B_53A297C601F0_impl*
 Assert(False);
//#UC END# *53A3D16C014B_53A297C601F0_impl*
//#UC START# *53A3D16C014B_53A297C601F0_var*
//#UC END# *53A3D16C014B_53A297C601F0_var*
