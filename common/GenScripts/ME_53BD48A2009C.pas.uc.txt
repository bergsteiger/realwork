//#UC START# *53B55ED6016D_53BD48A2009C_impl*
 Clear;
 if (Count > 0) then
 begin
  l_Pos := Source.Position;
  try
   Source.ReadBuffer(l_Count, SizeOf(l_Count));
  finally
   Source.Position := l_Pos;
  end;//try..finally
  if (l_Count = Count) then
   // - НОВЫЙ ФОРМАТ, читаем как список целых
   Load(Source)
  else
  begin
   // - СТАРЫЙ ФОРМАТ, читаем как "сырой поток" целых
   Assert(Count mod 4 = 0, 'Размер списка целыех не кратен размеру целого');
   Assert(Source.Size - l_Pos > Count, 'Размер списка целых меньше оставшегося размера потока');
   l_CountToRead := Count div 4;
   for l_Index := 0 to Pred(l_CountToRead) do
   begin
    Source.ReadBuffer(l_Item, SizeOf(l_Item));
    Self.Add(l_Item);
   end;//for l_Index
  end;//l_Count = Count
 end;//Count > 0
//#UC END# *53B55ED6016D_53BD48A2009C_impl*
//#UC START# *53B55ED6016D_53BD48A2009C_var*
var
 l_Pos : Int64;
 l_Count : Integer;
 l_CountToRead : Integer;
 l_Index : Integer;
 l_Item : Integer;
//#UC END# *53B55ED6016D_53BD48A2009C_var*
//#UC START# *53B55EF0025D_53BD48A2009C_impl*
 if (Count > 0) then
  Save(Dest);
//#UC END# *53B55EF0025D_53BD48A2009C_impl*
//#UC START# *53B55EF0025D_53BD48A2009C_var*
//#UC END# *53B55EF0025D_53BD48A2009C_var*
//#UC START# *53BD48A2009C_ext:ParentFileName
w:\common\components\rtl\Garant\EVD\evdTasksHelpers.pas
//#UC END# *53BD48A2009C_ext:ParentFileName
//#UC START# *53BD52D902BE_53BD48A2009Cget_impl*
 Result := Get_Count;
//#UC END# *53BD52D902BE_53BD48A2009Cget_impl*
//#UC START# *53BD52D902BE_53BD48A2009Cget_var*
//#UC END# *53BD52D902BE_53BD48A2009Cget_var*
