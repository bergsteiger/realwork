//#UC START# *479F2AFB0397_53FDD3D902AA_impl*
 // не станем этого делать в Cleanup,
 //пускай кеширует с буфером, съэкономим на распределении памяти
 FreeAndNil(f_Buff);
 inherited;
//#UC END# *479F2AFB0397_53FDD3D902AA_impl*
//#UC START# *479F2AFB0397_53FDD3D902AA_var*
//#UC END# *479F2AFB0397_53FDD3D902AA_var*
//#UC START# *47A6FEE600FC_53FDD3D902AA_impl*
 //Result := false;
 Result := True;
//#UC END# *47A6FEE600FC_53FDD3D902AA_impl*
//#UC START# *47A6FEE600FC_53FDD3D902AA_var*
//#UC END# *47A6FEE600FC_53FDD3D902AA_var*
//#UC START# *49BFC98902FF_53FDD3D902AA_impl*
 SaveBuff;
 inherited;
//#UC END# *49BFC98902FF_53FDD3D902AA_impl*
//#UC START# *49BFC98902FF_53FDD3D902AA_var*
//#UC END# *49BFC98902FF_53FDD3D902AA_var*
//#UC START# *4FA27CF501C4_53FDD3D902AA_impl*
  if SUCCEEDED(theReturn) then
  begin
   while (theResult <> ASize) do
    begin
     LoadBuff;
     LSize:=LongInt(FBuffEndPos-(FBuffCurPos+Int64(FBuffOffset)));

     if (lSize = 0) then
      Break
     else
      LSize:=LongInt(m2S32Min(LSize,(ASize-theResult)));

     f_Buff.Read(FBuffOffset, PAnsiChar(aBuff) + theResult, LSize);

     Inc(FBuffOffset,LSize);
     Inc(theResult,LSize);

     if ((FBuffCurPos+Int64(FBuffOffset)) = FBuffEndPos) then
      SaveBuff;
    end;
  end;
//#UC END# *4FA27CF501C4_53FDD3D902AA_impl*
//#UC START# *4FA27CF501C4_53FDD3D902AA_var*
 var
  lSize : LongInt;
//#UC END# *4FA27CF501C4_53FDD3D902AA_var*
//#UC START# *4FA27D310344_53FDD3D902AA_impl*
  if SUCCEEDED(theReturn) then
  begin
   while (theResult <> ASize) do
    begin
     LoadBuff;

     lSize := FBuffSize - FBuffOffset;

     if (lSize = 0) then
      Break
     else
      LSize:=LongInt(m2S32Min(LSize,(ASize-theResult)));

     f_Buff.Write(FBuffOffset, PAnsiChar(aBuff) + theResult, LSize);

     Inc(FBuffOffset,LSize);
     Inc(theResult,LSize);

     FBuffModifed:=True;

     FBuffEndPos:=m2S64Max(FBuffEndPos,(FBuffCurPos+Int64(FBuffOffset)));

     FRealSize:=m2S64Max(FBuffEndPos,FRealSize);

     if (FBuffOffset = FBuffSize) then
      SaveBuff;
    end;
  end;
//#UC END# *4FA27D310344_53FDD3D902AA_impl*
//#UC START# *4FA27D310344_53FDD3D902AA_var*
 var
  LSize : LongInt;
//#UC END# *4FA27D310344_53FDD3D902AA_var*
//#UC START# *4FA27D5302C5_53FDD3D902AA_impl*
 if SUCCEEDED(theReturn) then
  case anOrigin of
   soBeginning:
    __Seek(anOffset,theResult);
   soCurrent:
    __Seek(anOffset+FBuffCurPos+Int64(FBuffOffset),theResult);
   soEnd:
    __Seek(anOffset+FRealSize,theResult);
   else
    OleError(E_UNEXPECTED);
  end;//case AOrigin
//#UC END# *4FA27D5302C5_53FDD3D902AA_impl*
//#UC START# *4FA27D5302C5_53FDD3D902AA_var*

 procedure __Seek(APosition: Int64;
                  var   theResult: Int64);
 begin//__Seek
  if ((APosition >= 0) and (APosition <= FRealSize)) then
  begin
   if (APosition <> (FBuffCurPos+Int64(FBuffOffset))) then
   begin
    if ((APosition >= FBuffCurPos) and (APosition < FBuffEndPos)) then
       FBuffOffset:=LongInt(APosition-FBuffCurPos)
    else
    begin
     SaveBuff;
     FBuffCurPos:=APosition;
     FBuffEndPos:=FBuffCurPos;
    end;//((APosition >= FBuffCurPos) and (APosition < FBuffEndPos))
   end;//APosition <> (FBuffCurPos+Int64(FBuffOffset))
  end//((APosition >= 0) and (APosition <= FRealSize))
  else
   Exit;
  theResult:=APosition;
 end;//__Seek

//#UC END# *4FA27D5302C5_53FDD3D902AA_var*
//#UC START# *4FA27DCD02B4_53FDD3D902AA_impl*

  if SUCCEEDED(theReturn)
   then
    begin

     SaveBuff;

     m2COMSetSize(ASize, InnerStream);

     FBuffCurPos := ASize;
     FBuffEndPos := FBuffCurPos;

     FRealSize := FBuffEndPos;

    end;

//#UC END# *4FA27DCD02B4_53FDD3D902AA_impl*
//#UC START# *4FA27DCD02B4_53FDD3D902AA_var*
//#UC END# *4FA27DCD02B4_53FDD3D902AA_var*
//#UC START# *4FA2802E0231_53FDD3D902AA_impl*
 Result := FRealSize;
//#UC END# *4FA2802E0231_53FDD3D902AA_impl*
//#UC START# *4FA2802E0231_53FDD3D902AA_var*
//#UC END# *4FA2802E0231_53FDD3D902AA_var*
//#UC START# *4FA280DB0288_53FDD3D902AA_impl*
 SaveBuff;
 inherited;
//#UC END# *4FA280DB0288_53FDD3D902AA_impl*
//#UC START# *4FA280DB0288_53FDD3D902AA_var*
//#UC END# *4FA280DB0288_53FDD3D902AA_var*
//#UC START# *5480693401AA_53FDD3D902AA_impl*

  if (FBuffCurPos = FBuffEndPos)
   then
    begin

     m2COMSetPosition(FBuffCurPos, InnerStream);

     OleCheck(InnerStream.Read(f_Buff.AsPointer,FBuffSize,@LResult));

     FBuffEndPos:=FBuffCurPos+Int64(LResult);
     FBuffOffset:=0;

     FBuffModifed:=False;

    end;

//#UC END# *5480693401AA_53FDD3D902AA_impl*
//#UC START# *5480693401AA_53FDD3D902AA_var*
 var
        LResult:                  LongInt;
//#UC END# *5480693401AA_53FDD3D902AA_var*
//#UC START# *5480694400B8_53FDD3D902AA_impl*

  if FBuffModifed
   then
    begin

     m2COMSetPosition(FBuffCurPos, InnerStream);

     OleCheck(InnerStream.Write(f_Buff.AsPointer,LongInt(FBuffEndPos-FBuffCurPos),@LResult));

     FBuffCurPos:=FBuffCurPos+Int64(LResult);
     FBuffOffset:=0;

     FBuffModifed:=False;

    end
   else
    begin

     FBuffCurPos:=FBuffEndPos;
     FBuffOffset:=0;

    end;

//#UC END# *5480694400B8_53FDD3D902AA_impl*
//#UC START# *5480694400B8_53FDD3D902AA_var*
 var
        LResult:                  LongInt;
//#UC END# *5480694400B8_53FDD3D902AA_var*
//#UC START# *548069970154_53FDD3D902AA_impl*
  inherited Create(AStream,m2COMModeAccess(m2COMGetStatStgMode(AStream)));
  FRealSize := m2COMGetSize(InnerStream);
  FBuffCurPos:=m2COMGetPosition(InnerStream);
  FBuffEndPos:=FBuffCurPos;

  if (f_Buff = nil) then
   f_Buff := Tl3BufferStreamMemoryPool.Create;
  FBuffSize := f_Buff.Size;
  LoadBuff;
//#UC END# *548069970154_53FDD3D902AA_impl*
//#UC START# *548069970154_53FDD3D902AA_var*
//#UC END# *548069970154_53FDD3D902AA_var*
