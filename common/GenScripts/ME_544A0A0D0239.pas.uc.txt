//#UC START# *479731C50290_544A0A0D0239_impl*
 Disconnect;
 FreeAndNil(f_TcpClients[ncs_skSend]);
 FreeAndNil(f_TcpClients[ncs_skReceive]);
 inherited;
//#UC END# *479731C50290_544A0A0D0239_impl*
//#UC START# *479731C50290_544A0A0D0239_var*
//#UC END# *479731C50290_544A0A0D0239_var*
//#UC START# *47A042E100E2_544A0A0D0239_impl*
 inherited;
 f_TcpClients[ncs_skSend] := TncsTcpClient.Create(nil);
 f_TcpClients[ncs_skSend].ConnectTimeout := c_ClientConnectTimeout;
 f_TcpClients[ncs_skSend].ReadTimeout := c_ClientReadTimeout;
 f_TcpClients[ncs_skSend].OnStatus := SendTransportStatus;

 f_TcpClients[ncs_skReceive] := TncsTcpClient.Create(nil);
 f_TcpClients[ncs_skReceive].ConnectTimeout := c_ClientConnectTimeout;
 f_TcpClients[ncs_skReceive].ReadTimeout := c_ClientReadTimeout;
 f_TcpClients[ncs_skReceive].OnStatus := ReceiveTransportStatus;

//#UC END# *47A042E100E2_544A0A0D0239_impl*
//#UC START# *47A042E100E2_544A0A0D0239_var*
//#UC END# *47A042E100E2_544A0A0D0239_var*
//#UC START# *544A0A0D0239_ext:FileName
w:\common\components\rtl\Garant\cs\ncsClientTransporter.pas
//#UC END# *544A0A0D0239_ext:FileName
//#UC START# *544A0A0D0239impl_uses*
//#UC END# *544A0A0D0239impl_uses*
//#UC START# *544A1FD802E9_544A0A0D0239_impl*
 if Get_Connected then
  Exit;

 IntSessionID := aSessionID;
 f_TcpClients[ncs_skSend].Host := aServerHost;
 f_TcpClients[ncs_skSend].Port := aServerPort;

 f_TcpClients[ncs_skReceive].Host := aServerHost;
 f_TcpClients[ncs_skReceive].Port := aServerPort;

 try
  f_TcpClients[ncs_skSend].Connect;
 except
  on E: EidException do
   l3System.Exception2Log(E);
 end;
//#UC END# *544A1FD802E9_544A0A0D0239_impl*
//#UC START# *544A1FD802E9_544A0A0D0239_var*
//#UC END# *544A1FD802E9_544A0A0D0239_var*
//#UC START# *544A1FF00062_544A0A0D0239_impl*
 if not Get_Connected then
  Exit;

 if not Immidiate then
 begin
  l_Message := TncsDisconnect.Create;
  try
   Send(l_Message);
   l_Reply := nil;
   WaitForReply(l_Message, l_Reply);
   if not (l_Reply is TncsDisconnectReply) then
    l3System.Msg2Log('Invalid csDisconnectReply');
   FreeAndNil(l_Reply);
  finally
   FreeAndNil(l_Message);
  end;
 end;

 StopProcessing(True);

 f_TcpClients[ncs_skSend].IOHandler.WriteBufferClose;
 f_TcpClients[ncs_skSend].Disconnect(True);

 f_TcpClients[ncs_skReceive].IOHandler.WriteBufferClose;
 f_TcpClients[ncs_skReceive].Disconnect(True);

 IntSessionID := '';
//#UC END# *544A1FF00062_544A0A0D0239_impl*
//#UC START# *544A1FF00062_544A0A0D0239_var*
var
 l_Message: TncsDisconnect;
 l_Reply: TncsMessage;
//#UC END# *544A1FF00062_544A0A0D0239_var*
//#UC START# *54522FCE0023_544A0A0D0239_impl*
 if Get_Connected then
  Exit;

 l_IOHandler := TcsidIOHandlerAdapter.Create(f_TcpClients[ncs_skSend].IOHandler);
 try
  IOHandlers[ncs_skSend] := l_IOHandler;
 finally
  FreeAndNil(l_IOHandler)
 end;
 StartProcessing;
//#UC END# *54522FCE0023_544A0A0D0239_impl*
//#UC START# *54522FCE0023_544A0A0D0239_var*
var
 l_IOHandler: TcsIdIOHandlerAbstractAdapter;
//#UC END# *54522FCE0023_544A0A0D0239_var*
//#UC START# *545B400202AF_544A0A0D0239_impl*
 case aStatus of
  hsConnected: TransportConnected;
  hsDisconnected: StopProcessing(False);
 end;
//#UC END# *545B400202AF_544A0A0D0239_impl*
//#UC START# *545B400202AF_544A0A0D0239_var*
//#UC END# *545B400202AF_544A0A0D0239_var*
//#UC START# *5465A71E02F2_544A0A0D0239_impl*
 inherited Create;
//#UC END# *5465A71E02F2_544A0A0D0239_impl*
//#UC START# *5465A71E02F2_544A0A0D0239_var*
//#UC END# *5465A71E02F2_544A0A0D0239_var*
//#UC START# *5477033C03D0_544A0A0D0239_impl*
 BeforeSendHandshake;
 IOHandlers[ncs_skSend].WriteInteger(Ord(ncs_skSend));
 IOHandlers[ncs_skSend].WriteLn(IntSessionID);
 IOHandlers[ncs_skSend].WriteBufferFlush;
 l_ID := IOHandlers[ncs_skSend].ReadInteger;
 Assert(l_ID = 104);
 try
  f_TcpClients[ncs_skReceive].Connect;
  l_IOHandler := TcsidIOHandlerAdapter.Create(f_TcpClients[ncs_skReceive].IOHandler);
  try
   IOHandlers[ncs_skReceive] := l_IOHandler;
  finally
   FreeAndNil(l_IOHandler)
  end;
  IOHandlers[ncs_skReceive].WriteBufferOpen(-1);

  BeforeReceiveHandshake;
  IOHandlers[ncs_skReceive].WriteInteger(Ord(ncs_skReceive));
  IOHandlers[ncs_skReceive].WriteLn(IntSessionID);
  IOHandlers[ncs_skReceive].WriteBufferFlush;
  l_ID := IOHandlers[ncs_skReceive].ReadInteger;
  Assert(l_ID = 104);

  IOHandlers[ncs_skSend].WriteInteger(105);
  IOHandlers[ncs_skSend].WriteBufferFlush;
  l_ID := IOHandlers[ncs_skSend].ReadInteger;
  Assert(l_ID = 106);

  IOHandlers[ncs_skReceive].WriteInteger(105);
  IOHandlers[ncs_skReceive].WriteBufferFlush;

 except
  on E: EidException do
   l3System.Exception2Log(E);
 end;
//#UC END# *5477033C03D0_544A0A0D0239_impl*
//#UC START# *5477033C03D0_544A0A0D0239_var*
var
 l_ID: Integer;
 l_IOHandler: TcsIdIOHandlerAbstractAdapter;
//#UC END# *5477033C03D0_544A0A0D0239_var*
//#UC START# *5491684203A6_544A0A0D0239_impl*
 case aStatus of
  hsDisconnected: StopProcessing(False);
 end;
//#UC END# *5491684203A6_544A0A0D0239_impl*
//#UC START# *5491684203A6_544A0A0D0239_var*
//#UC END# *5491684203A6_544A0A0D0239_var*
//#UC START# *549175C4030A_544A0A0D0239_impl*
 Result := ncs_skSend;
//#UC END# *549175C4030A_544A0A0D0239_impl*
//#UC START# *549175C4030A_544A0A0D0239_var*
//#UC END# *549175C4030A_544A0A0D0239_var*
//#UC START# *549279980264_544A0A0D0239_impl*
// Do nothing
//#UC END# *549279980264_544A0A0D0239_impl*
//#UC START# *549279980264_544A0A0D0239_var*
//#UC END# *549279980264_544A0A0D0239_var*
//#UC START# *549279B300D5_544A0A0D0239_impl*
// Do nothing
//#UC END# *549279B300D5_544A0A0D0239_impl*
//#UC START# *549279B300D5_544A0A0D0239_var*
//#UC END# *549279B300D5_544A0A0D0239_var*
