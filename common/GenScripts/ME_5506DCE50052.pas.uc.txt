//#UC START# *5506DCE50052_ext:ParentFileName
w:\common\components\gui\Garant\VCM\implementation\vcmHistory.pas
//#UC END# *5506DCE50052_ext:ParentFileName
//#UC START# *55080FE40284_5506DCE50052_impl*
 Result := True;
 if TvcmDispatcher.Instance.FormDispatcher.FindForm(f_FormGUID, l_Form) then
 begin
  //Assert(not l_Form.VCMClosing);
  // - если форма ”∆≈ закрываетс€, то еЄ наверное повторно использовать Ќ≈Ћ№«я
  if not l_Form.VCMClosing then
  // -  например это ќƒЌќ ќћ уже «ј –џ¬ј≈“—я, а хочетс€ создать Ќќ¬ќ≈
  // http://mdp.garant.ru/pages/viewpage.action?pageId=332566005
   Exit
  // - форма уже восстановлена
  else
   TvcmDispatcher.Instance.FormDispatcher.RemoveForm(l_Form);
   // - удалить еЄ надо из диспетчера, чтобы больше не находилась
 end;//g_Dispatcher.FormDispatcher.FindForm(f_FormGUID, l_Form)
 l_Form := MakeForm(aMainForm, anOwner, nil);
 if (l_Form <> nil) then
  Result := l_Form.IsAcceptable(False);
 if (f_FormClass <> nil) then
  Assert(l_Form <> nil,
         Format('ј может ли тут быть такое, что форма не создана? FormClass = %s Caption = %s',
                [f_FormClass.ClassName, l3Str(f_Caption)]));
 if not Result then
  l_Form := nil;
 if (l_Form = nil) then
  Exit;
 l_Caption := l_Form.{VCLForm.}MainCaption;
 l_Form.LoadState(f_FormData, vcm_stContent);
 l_Form.Caption := f_Caption;
 l_DataSource := l_Form.DataSource;
 l_Form.DataSource := f_DataSource;
 f_DataSource := l_DataSource;
 RestoreFocused(l_Form);
 f_Caption := l_Caption;
 ActivateList(aMainForm, l_Form, f_Children, Assigned(l_Form.FormSet));
 ActivateList(aMainForm, nil, f_Docked, Assigned(l_Form.FormSet));
//#UC END# *55080FE40284_5506DCE50052_impl*
//#UC START# *55080FE40284_5506DCE50052_var*
var
 l_Form: IvcmEntityForm;
 l_Caption: IvcmCString;
 l_DataSource: IvcmFormDataSource;
//#UC END# *55080FE40284_5506DCE50052_var*
//#UC START# *550825AC0253_5506DCE50052_impl*
 Result := Make(aForm, aStateType, True, SavingClone);
//#UC END# *550825AC0253_5506DCE50052_impl*
//#UC START# *550825AC0253_5506DCE50052_var*
//#UC END# *550825AC0253_5506DCE50052_var*
//#UC START# *55082738022C_5506DCE50052_impl*
 if InDestroy then
 begin
  TvcmDispatcher.Instance.As_IvcmDispatcher.UpdateStatus;
  with (aForm.VCLWinControl as TvcmEntityForm) do
   l_Item := Self.Create(aForm, aStateType, FormId, UserType, ZoneType,
    vcm_hitNone, SubUserType, aForClone);
  try
   Result := l_Item;
  finally
   FreeAndNil(l_Item);
  end;//try..finally
 end//InDestroy
 else
  Result := TvcmHistoryItemPrim.Make(aForm, aStateType);
//#UC END# *55082738022C_5506DCE50052_impl*
//#UC START# *55082738022C_5506DCE50052_var*
var
 l_Item: TvcmHistoryItem;
//#UC END# *55082738022C_5506DCE50052_var*
