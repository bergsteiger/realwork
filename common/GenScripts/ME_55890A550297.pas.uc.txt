//#UC START# *479731C50290_55890A550297_impl*
  f_Enabled := False;
  UpdateTimer;
  Classes.DeallocateHWnd(f_WindowHandle);
  inherited;
//#UC END# *479731C50290_55890A550297_impl*
//#UC START# *479731C50290_55890A550297_var*
//#UC END# *479731C50290_55890A550297_var*
//#UC START# *47A042E100E2_55890A550297_impl*
  inherited;
  f_Enabled := False;
  f_Interval := 1000;
  f_WindowHandle := Classes.AllocateHWnd(WndProc);
//#UC END# *47A042E100E2_55890A550297_impl*
//#UC START# *47A042E100E2_55890A550297_var*
//#UC END# *47A042E100E2_55890A550297_var*
//#UC START# *55890A550297_ext:FileName
w:\common\components\rtl\Garant\L3\l3Timer.pas
//#UC END# *55890A550297_ext:FileName
//#UC START# *55890AE80379_55890A550297set_impl*
 if aValue <> f_Enabled then
 begin
  f_Enabled := aValue;
  UpdateTimer;
 end;
//#UC END# *55890AE80379_55890A550297set_impl*
//#UC START# *55890AE80379_55890A550297set_var*
//#UC END# *55890AE80379_55890A550297set_var*
//#UC START# *55890B7A0309_55890A550297set_impl*
 if aValue <> f_Interval then
 begin
   f_Interval := aValue;
   UpdateTimer;
 end;
//#UC END# *55890B7A0309_55890A550297set_impl*
//#UC START# *55890B7A0309_55890A550297set_var*
//#UC END# *55890B7A0309_55890A550297set_var*
//#UC START# *55890C00017C_55890A550297set_impl*
  f_OnTimer := aValue;
  UpdateTimer;
//#UC END# *55890C00017C_55890A550297set_impl*
//#UC START# *55890C00017C_55890A550297set_var*
//#UC END# *55890C00017C_55890A550297set_var*
//#UC START# *5589142F0292_55890A550297_impl*
  KillTimer(f_WindowHandle, 1);
  if (f_Interval <> 0) and f_Enabled and Assigned(f_OnTimer) then
    if SetTimer(f_WindowHandle, 1, f_Interval, nil) = 0 then
      raise EOutOfResources.Create('Not enough timers available');
//#UC END# *5589142F0292_55890A550297_impl*
//#UC START# *5589142F0292_55890A550297_var*
//#UC END# *5589142F0292_55890A550297_var*
//#UC START# *5589144E02EE_55890A550297_impl*
  with Msg do
    case Msg of
     WM_TIMER:
      try
        DoOnTimer;
      except
        Tl3ExceptionHandler.Instance.HandleException(Self);
      end;
     WM_TIMECHANGE:
      try
        DoOnLocalTimeChange;
      except
        Tl3ExceptionHandler.Instance.HandleException(Self);
      end;
    else
      Result := DefWindowProc(f_WindowHandle, Msg, wParam, lParam);
    end;
//#UC END# *5589144E02EE_55890A550297_impl*
//#UC START# *5589144E02EE_55890A550297_var*
//#UC END# *5589144E02EE_55890A550297_var*
//#UC START# *55891D9D0016_55890A550297_impl*
 if Assigned(f_OnTimer) then
  f_OnTimer(Self);
//#UC END# *55891D9D0016_55890A550297_impl*
//#UC START# *55891D9D0016_55890A550297_var*
//#UC END# *55891D9D0016_55890A550297_var*
//#UC START# *5589417C02FC_55890A550297_impl*
 if Assigned(f_OnLocalTimeChange) then
  OnLocalTimeChange(Self);
//#UC END# *5589417C02FC_55890A550297_impl*
//#UC START# *5589417C02FC_55890A550297_var*
//#UC END# *5589417C02FC_55890A550297_var*
