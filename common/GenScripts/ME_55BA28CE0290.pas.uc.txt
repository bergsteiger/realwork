//#UC START# *52C1617803A0_52C15D690329_impl*
 Result := TtfwWordInfoRec_C(nil, [], tfw_atNone, tfw_ltNone);
//#UC END# *52C1617803A0_52C15D690329_impl*
//#UC START# *52C1617803A0_52C15D690329_var*
//#UC END# *52C1617803A0_52C15D690329_var*
//#UC START# *55716CAC0395_52C15D690329_impl*
 Result := (rModifiers = []) AND
           rTypeModifiers.Empty AND
           (rAccessType = tfw_atNone) AND
           (rLinkType = tfw_ltNone);
//#UC END# *55716CAC0395_52C15D690329_impl*
//#UC START# *55716CAC0395_52C15D690329_var*
//#UC END# *55716CAC0395_52C15D690329_var*
//#UC START# *559137130242_52C15D690329_impl*
 Result := (aModifier in rModifiers);
//#UC END# *559137130242_52C15D690329_impl*
//#UC START# *559137130242_52C15D690329_var*
//#UC END# *559137130242_52C15D690329_var*
//#UC START# *55B253BE0033_52C15D690329_impl*
 Result := Ord(Self.rAccessType) - Ord(anOther.rAccessType);

 if (Result <> 0) then
  Exit;

 Result := Ord(Self.rLinkType) - Ord(anOther.rLinkType);

 if (Result <> 0) then
  Exit;

 Result := Self.rTypeModifiers.Compare(anOther.rTypeModifiers);
  
 if (Result <> 0) then
  Exit;

 l_A := 0;
 l_B := 0;
 Assert(SizeOf(Self.rModifiers) <= SizeOf(l_A));
 l3Move(Self.rModifiers, l_A, SizeOf(Self.rModifiers));

 Assert(SizeOf(anOther.rModifiers) <= SizeOf(l_B));
 l3Move(anOther.rModifiers, l_B, SizeOf(anOther.rModifiers));

 if (l_A < l_B) then
  Result := -1
 else
 if (l_A > l_B) then
  Result := +1
 else
  Result := 0;
  
//#UC END# *55B253BE0033_52C15D690329_impl*
//#UC START# *55B253BE0033_52C15D690329_var*
var
 l_A : Word;
 l_B : Word;
//#UC END# *55B253BE0033_52C15D690329_var*
//#UC START# *55B265FD0005_52C15D690329_impl*
 Result.rModifiers := aModifiers;
 Result.rAccessType := anAccess;
 Result.rLinkType := aLinkType;

 if Result.Has(tfw_wmRightWordRef) OR
    Result.Has(tfw_wmLeftWordRef) then
  Result.rTypeModifiers := TtfwValueTypes.Make(TypeInfo(TtfwWord))
  // - незачем тут ничего складывать
 else
  Result.rTypeModifiers := aTypes;
//#UC END# *55B265FD0005_52C15D690329_impl*
//#UC START# *55B265FD0005_52C15D690329_var*
//#UC END# *55B265FD0005_52C15D690329_var*
//#UC START# *55B26BCB01BA_52C15D690329_impl*
 Result := rTypeModifiers.Has(aType);
//#UC END# *55B26BCB01BA_52C15D690329_impl*
//#UC START# *55B26BCB01BA_52C15D690329_var*
//#UC END# *55B26BCB01BA_52C15D690329_var*
//#UC START# *55BA4C430110_52C15D690329_impl*
 Result := (Self.rAccessType = anAccess);
//#UC END# *55BA4C430110_52C15D690329_impl*
//#UC START# *55BA4C430110_52C15D690329_var*
//#UC END# *55BA4C430110_52C15D690329_var*
//#UC START# *55BEFF3A0168_52C15D690329_impl*
 Result := rTypeModifiers.Name;
//#UC END# *55BEFF3A0168_52C15D690329_impl*
//#UC START# *55BEFF3A0168_52C15D690329_var*
//#UC END# *55BEFF3A0168_52C15D690329_var*
//#UC START# *55C23DA10124_52C15D690329_impl*
 Result := (Self.rLinkType = aLinkType);
//#UC END# *55C23DA10124_52C15D690329_impl*
//#UC START# *55C23DA10124_52C15D690329_var*
//#UC END# *55C23DA10124_52C15D690329_var*
