//#UC START# *4DAEEDE10285_560937350073_impl*
 if f_WordInfo.ValueTypes.Empty then
  inherited
 else
 begin
  l_StackCount := aCtx.rEngine.ValuesCount - Self.GetAllParamsCount(aCtx);
  inherited;
  l_StackCount := aCtx.rEngine.ValuesCount - l_StackCount;
  l_PrevStackCount := l_StackCount;
  if f_WordInfo.Has(tfw_vtVoid) then
  begin
   if (l_StackCount <> 0) then
    RunnerError('Процедура не может возвращать значение через стек, а возвращается ' + IntToStr(l_PrevStackCount) + ' значений', aCtx);
  end//f_WordInfo.Has(tfw_vtVoid)
  else
  begin
   if (l_StackCount <> 1) then
   begin
    while (l_StackCount > 0) do
    begin
     aCtx.rEngine.Drop;
     Dec(l_StackCount);
    end;//l_StackCount > 0
    RunnerError('Нужно вернуть ТОЛЬКО одно значение, а возвращается ' + IntToStr(l_PrevStackCount) + ' значений', aCtx);
   end;//l_StackCount <> 1
   if not f_WordInfo.AcceptsValue(aCtx.rEngine.Top^) then
   begin
    aCtx.rEngine.Drop;
    RunnerError('Неверное возвращаемое значение', aCtx);
   end;//not f_WordInfo.AcceptsValue(aCtx.rEngine.Top^)
  end;//f_WordInfo.Has(tfw_vtVoid)
 end;//f_WordInfo.ValueTypes.Empty
//#UC END# *4DAEEDE10285_560937350073_impl*
//#UC START# *4DAEEDE10285_560937350073_var*
var
 l_StackCount : Integer;
 l_PrevStackCount : Integer;
//#UC END# *4DAEEDE10285_560937350073_var*
//#UC START# *52CFC11603C8_560937350073get_impl*
 Result := f_WordInfo;
//#UC END# *52CFC11603C8_560937350073get_impl*
//#UC START# *52CFC11603C8_560937350073get_var*
//#UC END# *52CFC11603C8_560937350073get_var*
//#UC START# *52EA6A2C0111_560937350073_impl*
 f_WordInfo := aValue;
//#UC END# *52EA6A2C0111_560937350073_impl*
//#UC START# *52EA6A2C0111_560937350073_var*
//#UC END# *52EA6A2C0111_560937350073_var*
//#UC START# *560937350073_ext:FileName
w:\common\components\rtl\Garant\ScriptEngine\kwTypedBeginLikeCompiledCode.pas
//#UC END# *560937350073_ext:FileName
//#UC START# *560937350073impl_uses*
//#UC END# *560937350073impl_uses*
