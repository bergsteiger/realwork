//#UC START# *4A8E8F2E0195_56FA889202B4_impl*
 inherited;
 Self.Color := clWhite;
 bvlLeft.Align := alLeft;
 bvlLeft.Width := 25;
 bvlLeft.Shape := bsSpacer;
 bvlRight.Align := alRight;
 bvlRight.Width := 25;
 bvlRight.Shape := bsSpacer;
 with pnlMain do
 begin
  Align := alClient;
  BevelOuter := bvNone;
  Color := clWhite;
  TabOrder := 0;
 end;
 with pnlLeft do
 begin
  Align := alLeft;
  BevelOuter := bvNone;
  Color := clWhite;
  Width := 200;
 end;
 with pnlClient do
 begin
  Align := alClient;
  BevelOuter := bvNone;
  Color := clWhite;
 end;
 with pnlNews do
 begin
  Align := alTop;
  BevelOuter := bvNone;
  Color := clWhite;
  Height := 200;
 end;
 with pnlBaseSearch do
 begin
  BevelOuter := bvNone;
  Color := clWhite;
  Align := alTop;
  Height := 145;
  Top := 201;
  with pnlBaseSearchZone do
  begin
   Align := alClient;
   BevelOuter := bvNone;
   Color := clWhite;
  end;
  with pnlSearches do
  begin
   Align := alBottom;
   BevelOuter := bvNone;
   Color := clWhite;
   Height := 20;
   with flAttributeSearch do
   begin
    Left := 15;
    AutoWidth := True;
    AllowTrucking := True;
    HighlightColor := c_MainMenuColor;
    TextColor := c_MainMenuColor;
    Cursor := crHandPoint;
    OnClick := SearchClick;
   end;//flAttributeSearch
   with flSituationSearch do
   begin
    Left := c_SearchLabelDistance + flAttributeSearch.Left + flAttributeSearch.Width;
    AutoWidth := True;
    AllowTrucking := True;
    HighlightColor := c_MainMenuColor;
    TextColor := c_MainMenuColor;
    Cursor := crHandPoint;
    OnClick := SearchClick;
   end;//flSituationSearch
   with flPublishedSourceSearch do
   begin
    Left := c_SearchLabelDistance + flSituationSearch.Left + flSituationSearch.Width;
    AutoWidth := True;
    AllowTrucking := True;
    HighlightColor := c_MainMenuColor;
    TextColor := c_MainMenuColor;
    Cursor := crHandPoint;
    OnClick := SearchClick;
   end;//flPublishedSourceSearch
   with flDictionSearch do
   begin
    Left := c_SearchLabelDistance + flPublishedSourceSearch.Left + flPublishedSourceSearch.Width;
    AutoWidth := True;
    AllowTrucking := True;
    HighlightColor := c_MainMenuColor;
    TextColor := c_MainMenuColor;
    Cursor := crHandPoint;
    OnClick := SearchClick;
   end;//flDictionSearch
   UpdateSearchLabels;
  end;
 end;
 with pnlTrees do
 begin
  Align := alTop;
  BevelOuter := bvNone;
  Color := clWhite;
  Height := 200;
  Top := 401;
 end;

 bvlLeftTop.Align := alTop;
 bvlLeftTop.Height := 200;
 bvlLeftTop.Shape := bsSpacer;
 pbLogo.Align := alTop;
 pbLogo.Height := 200;
 ieBanner.Align := alTop;
 ieBanner.Height := 200;

 with hfProfNews do
 begin
  TopHeaderIndent := 30;

  Align := alClient;
  Left := 16;
  //Top := 62;
  Width := 377;
  Height := 107;
  ButtonCloseImage := 1;
  ButtonImageList := dmMainMenuNew.ilSmallIcons;
  ButtonOpenImage := 0;
  ClientControl := tvProfNews;
  ClientIndent := 20;
  HeaderImage := 2;
  Images := dmMainMenuNew.ilMainMenuNew;
  LeftHeaderIndent := 20;
  LeftImageIndent := 10;
  Options := [];
  TabOrder := 0;
  SettingId := 'sthfLastOpenDocs';
 end;
  with tvProfNews do
  begin
   AllowTrucking := True;

   Align := alClient;
   BorderStyle := bsNone;
   TabOrder := 0;
   MultiStrokeItem := True;
   ActionElementMode := l3_amSingleClick;
   ViewOptions := [voShowInterRowSpace, voShowExpandable, voVariableItemHeight, voWithoutImages];
   ClearTreeStructOnSaveState := False;
  end;

 with hfLastOpenDocs do
 begin
  TopHeaderIndent := 30;

  Align := alClient;
  Left := 16;
  //Top := 62;
  Width := 377;
  Height := 107;
  ButtonCloseImage := 1;
  ButtonImageList := dmMainMenuNew.ilSmallIcons;
  ButtonOpenImage := 0;
  ClientControl := tvLastOpenDocs;
  ClientIndent := 20;
  HeaderImage := 2;
  Images := dmMainMenuNew.ilMainMenuNew;
  LeftHeaderIndent := 20;
  LeftImageIndent := 10;
  Options := [];
  TabOrder := 0;
  SettingId := 'sthfLastOpenDocs';
 end;
  with tvLastOpenDocs do
  begin
   AllowTrucking := True;

   Align := alClient;
   BorderStyle := bsNone;
   TabOrder := 0;
   MultiStrokeItem := True;
   ActionElementMode := l3_amSingleClick;
   ViewOptions := [voShowInterRowSpace, voShowExpandable, voVariableItemHeight, voWithoutImages];
   ClearTreeStructOnSaveState := False;
  end;

 with hfReferences do
 begin
  Align := alClient;
  Left := 24;
  Top := 168;
  Height := 150;
  Width := 390;
  TopHeaderIndent := 20;
  ClientControl := tvReferences;
  ClientIndent := 20;
  HeaderImage := 1;
  Images := dmMainMenuNew.ilMainMenuNew;
  LeftHeaderIndent := 20;
  LeftImageIndent := 10;
  Options := [];
  TabOrder := 1;
 end;
  with tvReferences do
  begin
   AllowTrucking := True;

   Align := alClient;
   BorderStyle := bsNone;
   TabOrder := 0;
   MultiStrokeItem := True;
   ActionElementMode := l3_amSingleClick;
   ViewOptions := [voShowIcons, voShowExpandable, voWithoutImages];
   ClearTreeStructOnSaveState := False;
   OnResize := ReferencesResize;
  end;

 with hfLawNews do
 begin
  Align := alRight;
  Width := 390;
  ClientControl := tvLawNews;
  ClientIndent := 20;
  HeaderImage := 0;
  Images := dmMainMenuNew.ilMainMenuNew;
  LeftHeaderIndent := 20;
  LeftImageIndent := 10;
  Options := [];
  TopHeaderIndent := 20;
  TabOrder := 2;
 end;
  with tvLawNews do
  begin
   AllowTrucking := True;
   Align := alClient;
   BorderStyle := bsNone;
   TabOrder := 0;
   MultiStrokeItem := True;
   ActionElementMode := l3_amSingleClick;
   ViewOptions := [voShowIcons, voShowExpandable, voWithoutImages];
   ClearTreeStructOnSaveState := False;
  end;

 with hfTaxes do
 begin
  Align := alRight;
  Height := hfReferences.Height;
  Width := 380;
  ClientIndent := 15;
  LeftHeaderIndent := 15;
  TopHeaderIndent := 20;
  ClientControl := tvTaxes;
  Options := [hfoCanHide, hfoHyperlink];
  ButtonImageList := nsDocumentRes.MainMenuImageList;
  if afw.Application.LocaleInfo.Language = afw_lngEnglish then
  begin
   ButtonOpenImage := 1;
   ButtonCloseImage := 1;
  end else
  begin
   ButtonOpenImage := 0;
   ButtonCloseImage := 0;
  end;
  OnValidateStateChanged := TaxesStateChanged;
  OnHyperlinkClick := nil;//TaxesNextTree;
 end;//with hfTaxes
  with tvTaxes do
  begin
   Width := 380;
   Align := alClient;
   BorderStyle := bsNone;
   MultiStrokeItem := True;
   ActionElementMode := l3_amSingleClick;
   ViewOptions := [voShowIcons, voShowExpandable, voWithoutImages];
   ClearTreeStructOnSaveState := False;
   AllowTrucking := True;
  end;//with tvTaxes

 for l_Index := 0 to Pred(ComponentCount) do
  if (Components[l_Index] is TnscHideField) then
  begin
   TnscHideField(Components[l_Index]).StyleId := f1_saNewSchoolMainMenuHeader;
   TnscHideField(Components[l_Index]).HeaderImage := -1;
   TnscHideField(Components[l_Index]).TabStop := false;
  end//Components[l_Index] is TnscHideField
  else
  if (Components[l_Index] is TnscTreeViewHotTruck) then
  begin
   TnscTreeViewHotTruck(Components[l_Index]).TreatDefaultColorAsWindowColor := False;
   TnscTreeViewHotTruck(Components[l_Index]).StyleID := f1_saNewSchoolMainMenuConstPath;
   TnscTreeViewHotTruck(Components[l_Index]).Color := clWhite;
  end;
//#UC END# *4A8E8F2E0195_56FA889202B4_impl*
//#UC START# *4A8E8F2E0195_56FA889202B4_var*
const
 c_SearchLabelDistance = 18;
var
 l_Index: Integer;
//#UC END# *4A8E8F2E0195_56FA889202B4_var*
//#UC START# *4AC9B6D00250_56FA889202B4_impl*
 Result := nil;
//#UC END# *4AC9B6D00250_56FA889202B4_impl*
//#UC START# *4AC9B6D00250_56FA889202B4_var*
//#UC END# *4AC9B6D00250_56FA889202B4_var*
//#UC START# *4AC9D12600E0_56FA889202B4_impl*
 l_DocCount := afw.Settings.LoadInteger(pi_RecentlyOpenDocumentsCount, dv_RecentlyOpenDocumentsCount);
 tvLastOpenDocs.TreeStruct := TnsLastOpenDocTree.Make(l_DocCount, False, True);
//#UC END# *4AC9D12600E0_56FA889202B4_impl*
//#UC START# *4AC9D12600E0_56FA889202B4_var*
var
 l_DocCount: Integer;
//#UC END# *4AC9D12600E0_56FA889202B4_var*
//#UC START# *4AC9E9EC0064_56FA889202B4_impl*
 inherited;
 UpdateTaxesTree;
 UpdateReferencesAndLawNewsCaptions;
//#UC END# *4AC9E9EC0064_56FA889202B4_impl*
//#UC START# *4AC9E9EC0064_56FA889202B4_var*
//#UC END# *4AC9E9EC0064_56FA889202B4_var*
//#UC START# *4ACA197F0147_56FA889202B4get_impl*
 Result := Self;
//#UC END# *4ACA197F0147_56FA889202B4get_impl*
//#UC START# *4ACA197F0147_56FA889202B4get_var*
//#UC END# *4ACA197F0147_56FA889202B4get_var*
//#UC START# *4ACB2F98002B_56FA889202B4_impl*
 Result := True;
//#UC END# *4ACB2F98002B_56FA889202B4_impl*
//#UC START# *4ACB2F98002B_56FA889202B4_var*
//#UC END# *4ACB2F98002B_56FA889202B4_var*
//#UC START# *4B62D10B031B_56FA889202B4_impl*
 inherited;
 flAttributeSearch.Hint := 'Открыть карточку поиска по реквизитам';
 flSituationSearch.Hint := 'Открыть энциклопедию ситуаций';
 flPublishedSourceSearch.Hint := 'Открыть поиск по источнику опубликования';
 flDictionSearch.Hint := 'Открыть Толковый словарь правовых и финансовых терминов';

 flAttributeSearch.ShowHint := True;
 flSituationSearch.ShowHint := True;
 flPublishedSourceSearch.ShowHint := True;
 flDictionSearch.ShowHint := True;
//#UC END# *4B62D10B031B_56FA889202B4_impl*
//#UC START# *4B62D10B031B_56FA889202B4_var*
//#UC END# *4B62D10B031B_56FA889202B4_var*
//#UC START# *5000565C019C_56FA889202B4_impl*
 inherited;
//#UC END# *5000565C019C_56FA889202B4_impl*
//#UC START# *5000565C019C_56FA889202B4_var*
//#UC END# *5000565C019C_56FA889202B4_var*
//#UC START# *53F1C6EF02C9_56FA889202B4_impl*
 Result := vcmCStr(str_utMainMenuWithProfNewsCaption);
//#UC END# *53F1C6EF02C9_56FA889202B4_impl*
//#UC START# *53F1C6EF02C9_56FA889202B4_var*
//#UC END# *53F1C6EF02C9_56FA889202B4_var*
//#UC START# *54058CBC0182_56FA889202B4_impl*
 Result := DoGetTabCaption;
//#UC END# *54058CBC0182_56FA889202B4_impl*
//#UC START# *54058CBC0182_56FA889202B4_var*
//#UC END# *54058CBC0182_56FA889202B4_var*
//#UC START# *543E3AA801D0_56FA889202B4_impl*
 Result := nsTabIconIndex(titMain);
//#UC END# *543E3AA801D0_56FA889202B4_impl*
//#UC START# *543E3AA801D0_56FA889202B4_var*
//#UC END# *543E3AA801D0_56FA889202B4_var*
//#UC START# *56FBC3F90034_56FA889202B4_impl*
 theState := hfsShow;
 //TaxesNextTree(aSender);
//#UC END# *56FBC3F90034_56FA889202B4_impl*
//#UC START# *56FBC3F90034_56FA889202B4_var*
//#UC END# *56FBC3F90034_56FA889202B4_var*
//#UC START# *56FBC41602A9_56FA889202B4_impl*
 UpdateTaxesTreeCaption;
 tvTaxes.TreeStruct := TsmChangeableTree.Make(ST_BUDGET_ORGS);
//#UC END# *56FBC41602A9_56FA889202B4_impl*
//#UC START# *56FBC41602A9_56FA889202B4_var*
//#UC END# *56FBC41602A9_56FA889202B4_var*
//#UC START# *56FBC4240324_56FA889202B4_impl*
 DefDataAdapter.NativeAdapter.MakeMainMenu.GetSection(ST_BUDGET_ORGS, l_Sect);
 Assert(l_Sect <> nil);
 l_Sect.GetCaption(l_S);
 Assert(l_S <> nil);
 hfTaxes.Caption := l3Str(nsCStr(l_S));
//#UC END# *56FBC4240324_56FA889202B4_impl*
//#UC START# *56FBC4240324_56FA889202B4_var*
var
 l_Sect: ISection;
 l_S: IString;
//#UC END# *56FBC4240324_56FA889202B4_var*
//#UC START# *56FBC4350226_56FA889202B4_impl*
 DefDataAdapter.NativeAdapter.MakeMainMenu.GetSection(ST_BUSINESS_REFERENCES, l_Sect);
 Assert(l_Sect <> nil);
 try
  l_Sect.GetCaption(l_S);
 finally
  l_Sect := nil
 end;//try..finally
 Assert(l_S <> nil);
 try
  hfReferences.Caption := l3Str(nsCStr(l_S));
 finally
  l_S := nil;
 end;//try..finally
//#UC END# *56FBC4350226_56FA889202B4_impl*
//#UC START# *56FBC4350226_56FA889202B4_var*
var
 l_Sect: ISection;
 l_S: IString;
//#UC END# *56FBC4350226_56FA889202B4_var*
//#UC START# *56FBD187013A_56FA889202B4_impl*
 //
//#UC END# *56FBD187013A_56FA889202B4_impl*
//#UC START# *56FBD187013A_56FA889202B4_var*
//#UC END# *56FBD187013A_56FA889202B4_var*
//#UC START# *56FBD27503D1_56FA889202B4_impl*
 //
//#UC END# *56FBD27503D1_56FA889202B4_impl*
//#UC START# *56FBD27503D1_56FA889202B4_var*
//#UC END# *56FBD27503D1_56FA889202B4_var*
//#UC START# *56FCF6290256_56FA889202B4_impl*
 flSituationSearch.Visible := Assigned(defDataAdapter) and defDataAdapter.IsExists_KeyWordTag;
 with flPublishedSourceSearch do
 begin
  if flSituationSearch.Visible then
   Left := c_SearchLabelDistance + flSituationSearch.Left + flSituationSearch.Width
  else
   Left := c_SearchLabelDistance + flAttributeSearch.Left + flAttributeSearch.Width;
  Visible := Assigned(defDataAdapter) and defDataAdapter.IsExists_PublishSourceTag;
 end;//flPublishedSourceSearch
 with flDictionSearch do
 begin
  if flPublishedSourceSearch.Visible then
   Left := c_SearchLabelDistance + flPublishedSourceSearch.Left + flPublishedSourceSearch.Width
  else
   if flSituationSearch.Visible then
    Left := c_SearchLabelDistance + flSituationSearch.Left + flSituationSearch.Width
   else
    Left := c_SearchLabelDistance + flAttributeSearch.Left + flAttributeSearch.Width;
  Visible := Assigned(defDataAdapter) and DefDataAdapter.IsExplanatoryExists;
 end;//flDictionSearch
//#UC END# *56FCF6290256_56FA889202B4_impl*
//#UC START# *56FCF6290256_56FA889202B4_var*
const
  c_SearchLabelDistance = 18;
//#UC END# *56FCF6290256_56FA889202B4_var*
//#UC START# *56FD0A30011C_56FA889202B4_impl*
 //!!! Needs to be implemented !!!
//#UC END# *56FD0A30011C_56FA889202B4_impl*
//#UC START# *56FD0A30011C_56FA889202B4_var*
//#UC END# *56FD0A30011C_56FA889202B4_var*
