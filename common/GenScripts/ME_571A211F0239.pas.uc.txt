//#UC START# *4DAEEDE10285_4DB00AF302F0_impl*
 if aCtx.rEngine.IsTopString then
 begin
  sDoc := aCtx.rEngine.PopDelphiString;
  l_Result := nsOpenDocumentByNumber(sDoc, true, false);
 end else
 begin
  if aCtx.rEngine.IsTopBool then
  begin                             
   if not aCtx.rEngine.PopBool then
   begin
    iDoc := aCtx.rEngine.PopInt;
    sDoc := IntToStr(iDoc);
    iDoc := iDoc + c_InternalDocShift;
   end else
   begin
    iDoc := aCtx.rEngine.PopInt;
    sDoc := IntToStr(iDoc);
   end;
  end else
  begin
   iDoc := aCtx.rEngine.PopInt;
   sDoc := IntToStr(iDoc);
   iDoc := iDoc + c_InternalDocShift;
  end;
  l_Result := nsOpenDocumentByNumber(iDoc, 0, dptSub, false);
 end;
 RunnerAssert(l_Result, 'Документ ' + sDoc + ' в базе не найден.', aCtx);
//#UC END# *4DAEEDE10285_4DB00AF302F0_impl*
//#UC START# *4DAEEDE10285_4DB00AF302F0_var*
var
 sDoc: string;
 iDoc: Integer;
 l_Result: Boolean;
//#UC END# *4DAEEDE10285_4DB00AF302F0_var*
//#UC START# *4DAEEDE10285_4DB82E4D0197_impl*
 TevDocumentsCache.Clear;
//#UC END# *4DAEEDE10285_4DB82E4D0197_impl*
//#UC START# *4DAEEDE10285_4DB82E4D0197_var*
//#UC END# *4DAEEDE10285_4DB82E4D0197_var*
//#UC START# *4DAEEDE10285_53B2CAE50115_impl*
 l_FoldersRoot := DefDataAdapter.FoldersRoot;
 try
  for I := 0 to l_FoldersRoot.GetChildCount - 1 do
  begin
   l_FoldersRoot.GetChild(I, l_Child);
   if l_Child.GetFlags and NF_MY_DOCUMENTS = NF_MY_DOCUMENTS then
   begin
    aCtx.rEngine.PushBool(l_Child.GetChildCount = 0);
    Exit;
   end;
  end;
  RunnerAssert(False, 'Мои документы не найдены.', aCtx);
 finally
  l_FoldersRoot := nil;
 end;
//#UC END# *4DAEEDE10285_53B2CAE50115_impl*
//#UC START# *4DAEEDE10285_53B2CAE50115_var*
var
 l_Child,
 l_FoldersRoot: INode;
 I: Integer;
//#UC END# *4DAEEDE10285_53B2CAE50115_var*
//#UC START# *4DCA5B340360_4F183D860083_impl*
 aForm.NeedShowIntranetWarningHack := aCtx.rEngine.PopBool;
//#UC END# *4DCA5B340360_4F183D860083_impl*
//#UC START# *4DCA5B340360_4F183D860083_var*
//#UC END# *4DCA5B340360_4F183D860083_var*
//#UC START# *4DCA5B340360_4F1942440116_impl*
 l_ID := 0;
 try
  if (TExTextFormHack(aForm).Document <> nil) then
   l_ID := TExTextFormHack(aForm).Document.GetInternalId{ + c_InternalDocShift};
 finally
  aCtx.rEngine.PushInt(l_ID);
 end;//try..finally
//#UC END# *4DCA5B340360_4F1942440116_impl*
//#UC START# *4DCA5B340360_4F1942440116_var*
var
 l_ID : Integer;
//#UC END# *4DCA5B340360_4F1942440116_var*
//#UC START# *4DCA5B340360_500E876A0208_impl*
 aCtx.rEngine.PushInt(Ord(TExTextFormHack(aForm).dsDocument.LikeState));
//#UC END# *4DCA5B340360_500E876A0208_impl*
//#UC START# *4DCA5B340360_500E876A0208_var*
//#UC END# *4DCA5B340360_500E876A0208_var*
//#UC START# *4EB25DE00396_4DCA5A94013D_impl*
 Assert(aForm Is TExTextForm, Format('Форма %s не совместима с %s',
                                   [aForm.ClassName, TExTextForm.ClassName]));
 DoTextForm(aForm As TExTextForm, aCtx);
//#UC END# *4EB25DE00396_4DCA5A94013D_impl*
//#UC START# *4EB25DE00396_4DCA5A94013D_var*
//#UC END# *4EB25DE00396_4DCA5A94013D_var*
//#UC START# *571A211F0239impl_uses*
 , nsUtils
 , bsTypesNew
//#UC END# *571A211F0239impl_uses*
//#UC START# *571A211F0239intf_uses*
//#UC END# *571A211F0239intf_uses*
