//#UC START# *47B07CF403D0_578614D202D9_impl*
 Result := A.EQ(B);
//#UC END# *47B07CF403D0_578614D202D9_impl*
//#UC START# *47B07CF403D0_578614D202D9_var*
//#UC END# *47B07CF403D0_578614D202D9_var*
//#UC START# *47B2C42A0163_578614D202D9_impl*
 !!! Needs to be implemented !!!
//#UC END# *47B2C42A0163_578614D202D9_impl*
//#UC START# *47B2C42A0163_578614D202D9_var*
//#UC END# *47B2C42A0163_578614D202D9_var*
//#UC START# *47B99D4503A2_578614D202D9_impl*
 Result := -1;
 Assert(false);
//#UC END# *47B99D4503A2_578614D202D9_impl*
//#UC START# *47B99D4503A2_578614D202D9_var*
//#UC END# *47B99D4503A2_578614D202D9_var*
//#UC START# *578615FD02BA_578614F1007E_impl*
 Result.rStateName := aName;
 Result.rVar := @theVar;
 Result.rImageIndex := -1;
//#UC END# *578615FD02BA_578614F1007E_impl*
//#UC START# *578615FD02BA_578614F1007E_var*
//#UC END# *578615FD02BA_578614F1007E_var*
//#UC START# *578616150058_578614F1007E_impl*
 Result := (rStateName = anOther.rStateName); 
//#UC END# *578616150058_578614F1007E_impl*
//#UC START# *578616150058_578614F1007E_var*
//#UC END# *578616150058_578614F1007E_var*
//#UC START# *57861CED02AE_578614D202D9_impl*
 l_Index := IndexOf(aState);
 if (l_Index < 0) then
  l_Index := Add(aState);
 {$IfDef XE}
 Result := PvcmOperationStateForRegister(ItemSlot(l_Index));
 {$Else  XE}
 Result := ItemSlot(l_Index);
 {$EndIf XE}
//#UC END# *57861CED02AE_578614D202D9_impl*
//#UC START# *57861CED02AE_578614D202D9_var*
var
 l_Index : Integer;
//#UC END# *57861CED02AE_578614D202D9_var*
