//#UC START# *479731C50290_57987CF90375_impl*
 FreeAndNil(f_LoadedObjects);
 inherited;
//#UC END# *479731C50290_57987CF90375_impl*
//#UC START# *479731C50290_57987CF90375_var*
//#UC END# *479731C50290_57987CF90375_var*
//#UC START# *479731C50290_57987D2802C9_impl*
 FreeAndNil(f_SavedObjects);
 inherited;
//#UC END# *479731C50290_57987D2802C9_impl*
//#UC START# *479731C50290_57987D2802C9_var*
//#UC END# *479731C50290_57987D2802C9_var*
//#UC START# *4836D52400D9_57987D2802C9_impl*
 if (AtomIndex = k2_tiData) then
 begin
  if (SkipLevel = 2) then
  begin
   assert(DocID <> 0);
   Assert(Value.Kind = k2_vkStream);
   l_EVDStr := l3Stream2IStream(Value.AsStream);
   try
    if (f_SavedObjects = nil) then
     f_SavedObjects := TddSavedObjectsList.Create(CurrentFamily, DocID);
    f_SavedObjects.SaveObject(f_Buffer.Tags.Top.Box, l_EVDStr);
   finally
    l_EVDStr := nil;
   end;//try..finally
   StopBufferingAndFlush(false, TopObject[0], false);
   Exit;
  end;//SkipLevel = 2
 end;//AtomIndex = k2_tiData 
 inherited;
//#UC END# *4836D52400D9_57987D2802C9_impl*
//#UC START# *4836D52400D9_57987D2802C9_var*
var
 l_EVDStr : IStream;
//#UC END# *4836D52400D9_57987D2802C9_var*
//#UC START# *4D53D8BF00D5_57987CF90375_impl*
 assert(DocID <> 0);
 if not aLeaf.Attr[k2_tiData].IsValid then // если данные находятся в потоке хранилища, а не в EVD
 begin
  Assert(aTagId < 0);
  l_InternalID := aLeaf.IntA[k2_tiInternalHandle]; // Это порядковый номер картинки в документе
  l_ExternalID := aLeaf.IntA[k2_tiExternalHandle];
  if (f_LoadedObjects <> nil) then
  begin
   for l_Index := 0 to Pred(f_LoadedObjects.Count) do
   begin
    l_Data := f_LoadedObjects.Items[l_Index];
    if (l_Data.InternalID = l_InternalID) then
    begin
     AddToGenerator(l_Data);
     Exit;
    end;//l_Data.InternalID = l_InternalID
   end;//for l_Index
  end;//f_LoadedObjects <> nil
  l_IStr := dtGetObjectStream(CurrentFamily, DocID, l_InternalID, m3_saRead);
  try
   l_Data := TddExtObjectData.CreateFromIStream(l_IStr, l_InternalID, l_ExternalID);
   try
    l_IStr := nil;
    if (f_LoadedObjects = nil) then
     f_LoadedObjects := TddExtObjectDataList.Create;
    f_LoadedObjects.Add(l_Data);
    AddToGenerator(l_Data);
    Exit;
   finally
    FreeAndNil(l_Data);
   end;//try..finally
  finally
   l_IStr := nil;
  end;//try..finally
 end;// then // если данные находятся в потоке хранилища, а не в EVD
 inherited;
//#UC END# *4D53D8BF00D5_57987CF90375_impl*
//#UC START# *4D53D8BF00D5_57987CF90375_var*

 procedure AddToGenerator(aData: TddExtObjectData);
 begin//AddToGenerator
  Generator.StartChild(TypeTable.TypeByHandle[-aTagId]);
  try
   aLeaf.AsObject.WriteTag(Generator);
   Generator.AddAtom(k2_tiData, aData);
  finally
   if aNeedCloseBracket then
    Generator.Finish;
  end;//try..finally
 end;//AddToGenerator

var
 l_InternalID: Integer;
 l_ExternalID: Integer;
 l_IStr : IStream;
 l_Data : TddExtObjectData;
 l_Index : Integer;
//#UC END# *4D53D8BF00D5_57987CF90375_var*
//#UC START# *57987C120048_ext:FileName
w:\common\components\rtl\Garant\dd\ddExtObjectSupport.pas
//#UC END# *57987C120048_ext:FileName
//#UC START# *57987C120048impl_uses*
 , ActiveX
 , Classes
 
 , l3Base
 , l3Stream

 , k2Tags
 , k2Interfaces
 
 , Document_Const
 , BitmapPara_Const
 , ExtDataPara_Const

 , m2ComLib

 , m3StorageInterfaces

 , daSchemeConsts
 
 , Dt_Serv
//#UC END# *57987C120048impl_uses*
//#UC START# *57987C120048intf_uses*
//#UC END# *57987C120048intf_uses*
//#UC START# *57987D54034E_57987CF90375_impl*
 FreeAndNil(f_LoadedObjects);
 inherited;
//#UC END# *57987D54034E_57987CF90375_impl*
//#UC START# *57987D54034E_57987CF90375_var*
//#UC END# *57987D54034E_57987CF90375_var*
//#UC START# *57987D54034E_57987D2802C9_impl*
 FreeAndNil(f_SavedObjects);
 inherited;
//#UC END# *57987D54034E_57987D2802C9_impl*
//#UC START# *57987D54034E_57987D2802C9_var*
//#UC END# *57987D54034E_57987D2802C9_var*
