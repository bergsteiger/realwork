//#UC START# *47B07CF403D0_57AC61D402B3_impl*
 Result := Il3SimpleNode(A).IsSame(B);
//#UC END# *47B07CF403D0_57AC61D402B3_impl*
//#UC START# *47B07CF403D0_57AC61D402B3_var*
//#UC END# *47B07CF403D0_57AC61D402B3_var*
//#UC START# *47B1CCC901BE_57AC61D402B3_impl*
 Result := inherited GetItem(Index);
 f_LastAccessedElementIndex := Index;
//#UC END# *47B1CCC901BE_57AC61D402B3_impl*
//#UC START# *47B1CCC901BE_57AC61D402B3_var*
//#UC END# *47B1CCC901BE_57AC61D402B3_var*
//#UC START# *47B2C42A0163_57AC61D402B3_impl*
 !!! Needs to be implemented !!!
//#UC END# *47B2C42A0163_57AC61D402B3_impl*
//#UC START# *47B2C42A0163_57AC61D402B3_var*
//#UC END# *47B2C42A0163_57AC61D402B3_var*
//#UC START# *47B935AF0066_57AC61D402B3_impl*
 aPlace := anItem.Use;
//#UC END# *47B935AF0066_57AC61D402B3_impl*
//#UC START# *47B935AF0066_57AC61D402B3_var*
//#UC END# *47B935AF0066_57AC61D402B3_var*
//#UC START# *47B94A5C006E_57AC61D402B3_impl*
 FreeAndNil(aPlace);
//#UC END# *47B94A5C006E_57AC61D402B3_impl*
//#UC START# *47B94A5C006E_57AC61D402B3_var*
//#UC END# *47B94A5C006E_57AC61D402B3_var*
//#UC START# *47B99D4503A2_57AC61D402B3_impl*
 Result := -1;
 Assert(false);
//#UC END# *47B99D4503A2_57AC61D402B3_impl*
//#UC START# *47B99D4503A2_57AC61D402B3_var*
//#UC END# *47B99D4503A2_57AC61D402B3_var*
//#UC START# *57AC61D402B3_ext:FileName
w:\common\components\gui\Garant\msm\msmModelElementNodeList.pas
//#UC END# *57AC61D402B3_ext:FileName
//#UC START# *57AC61D402B3impl_uses*
//#UC END# *57AC61D402B3impl_uses*
//#UC START# *57AC740902D1_57AC61D402B3_impl*
 Result := IndexOf((aNode As ITmsmModelElementNodeWrap).GetSelf);
//#UC END# *57AC740902D1_57AC61D402B3_impl*
//#UC START# *57AC740902D1_57AC61D402B3_var*
//#UC END# *57AC740902D1_57AC61D402B3_var*
//#UC START# *57AC79C3032D_57AC61D402B3_impl*
 Result := Add((aNode As ITmsmModelElementNodeWrap).GetSelf);
//#UC END# *57AC79C3032D_57AC61D402B3_impl*
//#UC START# *57AC79C3032D_57AC61D402B3_var*
//#UC END# *57AC79C3032D_57AC61D402B3_var*
//#UC START# *57AC79D40359_57AC61D402B3_impl*
 Insert(anIndex, (aNode As ITmsmModelElementNodeWrap).GetSelf);
//#UC END# *57AC79D40359_57AC61D402B3_impl*
//#UC START# *57AC79D40359_57AC61D402B3_var*
//#UC END# *57AC79D40359_57AC61D402B3_var*
//#UC START# *57AC79F901CC_57AC61D402B3_impl*
 Remove((aNode As ITmsmModelElementNodeWrap).GetSelf);
//#UC END# *57AC79F901CC_57AC61D402B3_impl*
//#UC START# *57AC79F901CC_57AC61D402B3_var*
//#UC END# *57AC79F901CC_57AC61D402B3_var*
//#UC START# *57DFBB530171_57AC61D402B3_impl*
 l_I := f_LastAccessedElementIndex;
 if CheckNearest(l_I) then
  Exit;
 if CheckNearest(l_I-1) then
  Exit;
 if CheckNearest(l_I+1) then
  Exit;
 if CheckNearest(l_I-2) then
  Exit;
 if CheckNearest(l_I+2) then
  Exit;
 if CheckNearest(l_I-3) then
  Exit;
 if CheckNearest(l_I+3) then
  Exit;
 Result := inherited IndexOf(anItem);
//#UC END# *57DFBB530171_57AC61D402B3_impl*
//#UC START# *57DFBB530171_57AC61D402B3_var*

 function CheckNearest(anIndex: Integer): Boolean;
 begin//CheckNearest
  Result := false;
  if (anIndex >= 0) AND (anIndex < Count) then
  begin
   if Il3SimpleNode(Items[anIndex]).IsSame(anItem) then
   begin
    IndexOf := anIndex;
    Result := true;
    Exit;
   end;//Il3SimpleNode(Items[anIndex]).IsSame(anItem)
  end;//anIndex >= 0..
 end;//CheckNearest

var
 l_I : Integer;
//#UC END# *57DFBB530171_57AC61D402B3_var*
//#UC START# *57DFBB730022_57AC61D402B3_impl*
 l_Index := IndexOf(anItem);
 if (l_Index >= 0) then
  Delete(l_Index);
//#UC END# *57DFBB730022_57AC61D402B3_impl*
//#UC START# *57DFBB730022_57AC61D402B3_var*
var
 l_Index : Integer;
//#UC END# *57DFBB730022_57AC61D402B3_var*
