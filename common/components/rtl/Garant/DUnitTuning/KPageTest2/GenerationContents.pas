// ***************************************************************************
//                                                                            
// Generated by the MTDORB IDL-to-Pascal Translator (1.0.1b1), 21.09.2010 14:22
//                                                                            
// Copyright (c) 2002 - 2004                                                  
// Millennium Group.                                                          
// Samara, Russia                                                             
//                                                                            
// All Rights Reserved                                                        
//                                                                            
// ***************************************************************************
// Compiled with parameters: " -iw:\ W:\MDProcess\ServerGate\GenerationContents\GenerationContents.idl" 
//                                                                            
unit GenerationContents;

interface

uses
  Classes, orb_int, orb, req_int, code_int, env_int, stdstat, std_seq,imr, imr_int, 
  orbtypes, exceptions, except_int, GenerationContents_int, RootSrv_int, RootSrv, Contents_int,
  Contents, poa_int, poa;

type

  TServerGate_GenerationContents_TransactionConflict_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0 } 
  TServerGate_GenerationContents_TransactionConflict = class(UserException,IServerGate_GenerationContents_TransactionConflict)
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
  public
    constructor Create(ex: TServerGate_GenerationContents_TransactionConflict); overload;
    constructor Create(); overload;
  end;

  TServerGate_GenerationContents_NavigationArea_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  ServerGate_GenerationContents_NavigationArea_seq = Array of TServerGate_GenerationContents_NavigationArea;
  PServerGate_GenerationContents_NavigationArea_seq = ^ServerGate_GenerationContents_NavigationArea_seq;

  TServerGate_GenerationContents_NavigationArea_seq_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  TServerGate_GenerationContents_Diagram_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  TServerGate_GenerationContents_ReadOnlyContent_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0 } 
  TServerGate_GenerationContents_ReadOnlyContent = class(UserException,IServerGate_GenerationContents_ReadOnlyContent)
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
  public
    constructor Create(ex: TServerGate_GenerationContents_ReadOnlyContent); overload;
    constructor Create(); overload;
  end;

  TServerGate_GenerationContents_ContentUpdateError_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:garant.ru/ServerGate/GenerationContents/ContentUpdateError:1.0 } 
  TServerGate_GenerationContents_ContentUpdateError = class(UserException,IServerGate_GenerationContents_ContentUpdateError)
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
  public
    constructor Create(ex: TServerGate_GenerationContents_ContentUpdateError); overload;
    constructor Create(); overload;
  end;

  TServerGate_GenerationContents_PathNotValid_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:garant.ru/ServerGate/GenerationContents/PathNotValid:1.0 } 
  TServerGate_GenerationContents_PathNotValid = class(UserException,IServerGate_GenerationContents_PathNotValid)
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
  public
    constructor Create(ex: TServerGate_GenerationContents_PathNotValid); overload;
    constructor Create(); overload;
  end;

  TServerGate_GenerationContents_PropertyMapEntry_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  ServerGate_GenerationContents_PropertyMapEntry_seq = Array of TServerGate_GenerationContents_PropertyMapEntry;
  PServerGate_GenerationContents_PropertyMapEntry_seq = ^ServerGate_GenerationContents_PropertyMapEntry_seq;

  TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:garant.ru/ServerGate/GenerationContents/Page:1.0 } 
  TServerGate_GenerationContents_Page = class(TORBObject,IServerGate_GenerationContents_Page)
  protected
    function get_generated_text: AnsiString; virtual; abstract;
    procedure set_generated_text(const generated_text: AnsiString); virtual; abstract;
    function get_labels: AnsiString; virtual; abstract;
    procedure set_labels(const labels: AnsiString); virtual; abstract;
    function get_page_before_changes: IServerGate_GenerationContents_Page; virtual; abstract;
    function get_path: TServerGate_GenerationContents_PagePath; virtual; abstract;
    procedure set_path(const path: TServerGate_GenerationContents_PagePath); virtual; abstract;
    function get_guid: TServerGate_GenerationContents_ModelElementId; virtual; abstract;
    procedure mark_for_remove; virtual; abstract;
    procedure prepare_for_commit; virtual; abstract;
    procedure commit_all_changes(const minor_changes: Boolean); virtual; abstract;
    procedure rollback_all_changes; virtual; abstract;
    procedure add_diagram(const name: AnsiString; const d: TServerGate_GenerationContents_Diagram); virtual; abstract;
    function get_diagram_hash(const name: AnsiString): AnsiString; virtual; abstract;
    function is_modified: Boolean; virtual; abstract;
    function is_new_page: Boolean; virtual; abstract;
    procedure remove; virtual; abstract;
    procedure add_property_map(const map: TServerGate_GenerationContents_PropertyMapEntryList); virtual; abstract;
    function get_all_property_cheksum: longlong; virtual; abstract;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    class function _narrow(const obj : IORBObject): IServerGate_GenerationContents_Page;
    class function narrow_helper2(const obj: IORBObject): Boolean;
  end;

  {** stub for interface IDL:garant.ru/ServerGate/GenerationContents/Page:1.0} 
  TServerGate_GenerationContents_Page_stub = class(TServerGate_GenerationContents_Page)
  protected
    function get_generated_text: AnsiString; override;
    procedure set_generated_text(const generated_text: AnsiString); override;
    function get_labels: AnsiString; override;
    procedure set_labels(const labels: AnsiString); override;
    function get_page_before_changes: IServerGate_GenerationContents_Page; override;
    function get_path: TServerGate_GenerationContents_PagePath; override;
    procedure set_path(const path: TServerGate_GenerationContents_PagePath); override;
    function get_guid: TServerGate_GenerationContents_ModelElementId; override;
    procedure mark_for_remove; override;
    procedure prepare_for_commit; override;
    procedure commit_all_changes(const minor_changes: Boolean); override;
    procedure rollback_all_changes; override;
    procedure add_diagram(const name: AnsiString; const d: TServerGate_GenerationContents_Diagram); override;
    function get_diagram_hash(const name: AnsiString): AnsiString; override;
    function is_modified: Boolean; override;
    function is_new_page: Boolean; override;
    procedure remove; override;
    procedure add_property_map(const map: TServerGate_GenerationContents_PropertyMapEntryList); override;
    function get_all_property_cheksum: longlong; override;
  end;

  {** POA stub for interface IDL:garant.ru/ServerGate/GenerationContents/Page:1.0} 
  TServerGate_GenerationContents_Page_stub_clp = class(TPOAStub,IPOAStub,IServerGate_GenerationContents_Page)
  protected
    function get_generated_text: AnsiString; virtual;
    procedure set_generated_text(const generated_text: AnsiString); virtual;
    function get_labels: AnsiString; virtual;
    procedure set_labels(const labels: AnsiString); virtual;
    function get_page_before_changes: IServerGate_GenerationContents_Page; virtual;
    function get_path: TServerGate_GenerationContents_PagePath; virtual;
    procedure set_path(const path: TServerGate_GenerationContents_PagePath); virtual;
    function get_guid: TServerGate_GenerationContents_ModelElementId; virtual;
    procedure mark_for_remove; virtual;
    procedure prepare_for_commit; virtual;
    procedure commit_all_changes(const minor_changes: Boolean); virtual;
    procedure rollback_all_changes; virtual;
    procedure add_diagram(const name: AnsiString; const d: TServerGate_GenerationContents_Diagram); virtual;
    function get_diagram_hash(const name: AnsiString): AnsiString; virtual;
    function is_modified: Boolean; virtual;
    function is_new_page: Boolean; virtual;
    procedure remove; virtual;
    procedure add_property_map(const map: TServerGate_GenerationContents_PropertyMapEntryList); virtual;
    function get_all_property_cheksum: longlong; virtual;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  end;

  {** servant for interface IDL:garant.ru/ServerGate/GenerationContents/Page:1.0} 
  TServerGate_GenerationContents_Page_serv = class(TPOAStaticImplementation,IPOAStaticImplementation,IServant,IServerGate_GenerationContents_Page)
  protected
    function get_generated_text: AnsiString; virtual; abstract;
    procedure set_generated_text(const generated_text: AnsiString); virtual; abstract;
    function get_labels: AnsiString; virtual; abstract;
    procedure set_labels(const labels: AnsiString); virtual; abstract;
    function get_page_before_changes: IServerGate_GenerationContents_Page; virtual; abstract;
    function get_path: TServerGate_GenerationContents_PagePath; virtual; abstract;
    procedure set_path(const path: TServerGate_GenerationContents_PagePath); virtual; abstract;
    function get_guid: TServerGate_GenerationContents_ModelElementId; virtual; abstract;
    procedure mark_for_remove; virtual; abstract;
    procedure prepare_for_commit; virtual; abstract;
    procedure commit_all_changes(const minor_changes: Boolean); virtual; abstract;
    procedure rollback_all_changes; virtual; abstract;
    procedure add_diagram(const name: AnsiString; const d: TServerGate_GenerationContents_Diagram); virtual; abstract;
    function get_diagram_hash(const name: AnsiString): AnsiString; virtual; abstract;
    function is_modified: Boolean; virtual; abstract;
    function is_new_page: Boolean; virtual; abstract;
    procedure remove; virtual; abstract;
    procedure add_property_map(const map: TServerGate_GenerationContents_PropertyMapEntryList); virtual; abstract;
    function get_all_property_cheksum: longlong; virtual; abstract;
    function _primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID; override;
    function _make_stub(const poa: IPOA; const obj : IORBObject): IORBObject; override;
    function _is_a(const repoid: RepositoryID): Boolean; override;
    procedure invoke(const serv: IStaticServerRequest); override;
    function _dispatch(const req: IStaticServerRequest): Boolean;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    function _this(): IServerGate_GenerationContents_Page;
    class function _narrow(const srv : IServant): IServerGate_GenerationContents_Page;
  end;

  TServerGate_GenerationContents_Page_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0 } 
  TServerGate_GenerationContents_PageFactoryManagerSrv = class(TORBObject,IServerGate_GenerationContents_PageFactoryManagerSrv)
  protected
    function keys: TServerGate_GenerationContents_PageFactoryKeySet; virtual; abstract;
    function get(const guid: TServerGate_GenerationContents_ModelElementId): IServerGate_GenerationContents_Page; virtual; abstract;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    class function _narrow(const obj : IORBObject): IServerGate_GenerationContents_PageFactoryManagerSrv;
    class function narrow_helper2(const obj: IORBObject): Boolean;
  end;

  {** stub for interface IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0} 
  TServerGate_GenerationContents_PageFactoryManagerSrv_stub = class(TServerGate_GenerationContents_PageFactoryManagerSrv)
  protected
    function keys: TServerGate_GenerationContents_PageFactoryKeySet; override;
    function get(const guid: TServerGate_GenerationContents_ModelElementId): IServerGate_GenerationContents_Page; override;
  end;

  {** POA stub for interface IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0} 
  TServerGate_GenerationContents_PageFactoryManagerSrv_stub_clp = class(TPOAStub,IPOAStub,IServerGate_GenerationContents_PageFactoryManagerSrv)
  protected
    function keys: TServerGate_GenerationContents_PageFactoryKeySet; virtual;
    function get(const guid: TServerGate_GenerationContents_ModelElementId): IServerGate_GenerationContents_Page; virtual;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  end;

  {** servant for interface IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0} 
  TServerGate_GenerationContents_PageFactoryManagerSrv_serv = class(TPOAStaticImplementation,IPOAStaticImplementation,IServant,IServerGate_GenerationContents_PageFactoryManagerSrv)
  protected
    function keys: TServerGate_GenerationContents_PageFactoryKeySet; virtual; abstract;
    function get(const guid: TServerGate_GenerationContents_ModelElementId): IServerGate_GenerationContents_Page; virtual; abstract;
    function _primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID; override;
    function _make_stub(const poa: IPOA; const obj : IORBObject): IORBObject; override;
    function _is_a(const repoid: RepositoryID): Boolean; override;
    procedure invoke(const serv: IStaticServerRequest); override;
    function _dispatch(const req: IStaticServerRequest): Boolean;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    function _this(): IServerGate_GenerationContents_PageFactoryManagerSrv;
    class function _narrow(const srv : IServant): IServerGate_GenerationContents_PageFactoryManagerSrv;
  end;

  TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  ServerGate_GenerationContents_Page_seq = Array of IServerGate_GenerationContents_Page;
  PServerGate_GenerationContents_Page_seq = ^ServerGate_GenerationContents_Page_seq;

  TServerGate_GenerationContents_Page_seq_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0 } 
  TServerGate_GenerationContents_GenerationManager = class(TORBObject,IServerGate_GenerationContents_GenerationManager)
  protected
    function get_generated_labels: TServerGate_GenerationContents_Labels; virtual; abstract;
    procedure set_generated_labels(const generated_labels: TServerGate_GenerationContents_Labels); virtual; abstract;
    procedure begin_generation; virtual; abstract;
    procedure end_generation; virtual; abstract;
    procedure commit_all(const pages: TServerGate_GenerationContents_PageList; const is_minor: Boolean); virtual; abstract;
    procedure rollback_all(const pages: TServerGate_GenerationContents_PageList); virtual; abstract;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    class function _narrow(const obj : IORBObject): IServerGate_GenerationContents_GenerationManager;
    class function narrow_helper2(const obj: IORBObject): Boolean;
  end;

  {** stub for interface IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0} 
  TServerGate_GenerationContents_GenerationManager_stub = class(TServerGate_GenerationContents_GenerationManager)
  protected
    function get_generated_labels: TServerGate_GenerationContents_Labels; override;
    procedure set_generated_labels(const generated_labels: TServerGate_GenerationContents_Labels); override;
    procedure begin_generation; override;
    procedure end_generation; override;
    procedure commit_all(const pages: TServerGate_GenerationContents_PageList; const is_minor: Boolean); override;
    procedure rollback_all(const pages: TServerGate_GenerationContents_PageList); override;
  end;

  {** POA stub for interface IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0} 
  TServerGate_GenerationContents_GenerationManager_stub_clp = class(TPOAStub,IPOAStub,IServerGate_GenerationContents_GenerationManager)
  protected
    function get_generated_labels: TServerGate_GenerationContents_Labels; virtual;
    procedure set_generated_labels(const generated_labels: TServerGate_GenerationContents_Labels); virtual;
    procedure begin_generation; virtual;
    procedure end_generation; virtual;
    procedure commit_all(const pages: TServerGate_GenerationContents_PageList; const is_minor: Boolean); virtual;
    procedure rollback_all(const pages: TServerGate_GenerationContents_PageList); virtual;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  end;

  {** servant for interface IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0} 
  TServerGate_GenerationContents_GenerationManager_serv = class(TPOAStaticImplementation,IPOAStaticImplementation,IServant,IServerGate_GenerationContents_GenerationManager)
  protected
    function get_generated_labels: TServerGate_GenerationContents_Labels; virtual; abstract;
    procedure set_generated_labels(const generated_labels: TServerGate_GenerationContents_Labels); virtual; abstract;
    procedure begin_generation; virtual; abstract;
    procedure end_generation; virtual; abstract;
    procedure commit_all(const pages: TServerGate_GenerationContents_PageList; const is_minor: Boolean); virtual; abstract;
    procedure rollback_all(const pages: TServerGate_GenerationContents_PageList); virtual; abstract;
    function _primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID; override;
    function _make_stub(const poa: IPOA; const obj : IORBObject): IORBObject; override;
    function _is_a(const repoid: RepositoryID): Boolean; override;
    procedure invoke(const serv: IStaticServerRequest); override;
    function _dispatch(const req: IStaticServerRequest): Boolean;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    function _this(): IServerGate_GenerationContents_GenerationManager;
    class function _narrow(const srv : IServant): IServerGate_GenerationContents_GenerationManager;
  end;

  TServerGate_GenerationContents_GenerationManager_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0 } 
  TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv = class(TORBObject,IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv)
  protected
    function get: IServerGate_GenerationContents_GenerationManager; virtual; abstract;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    class function _narrow(const obj : IORBObject): IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv;
    class function narrow_helper2(const obj: IORBObject): Boolean;
  end;

  {** stub for interface IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0} 
  TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub = class(TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv)
  protected
    function get: IServerGate_GenerationContents_GenerationManager; override;
  end;

  {** POA stub for interface IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0} 
  TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub_clp = class(TPOAStub,IPOAStub,IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv)
  protected
    function get: IServerGate_GenerationContents_GenerationManager; virtual;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  end;

  {** servant for interface IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0} 
  TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv = class(TPOAStaticImplementation,IPOAStaticImplementation,IServant,IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv)
  protected
    function get: IServerGate_GenerationContents_GenerationManager; virtual; abstract;
    function _primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID; override;
    function _make_stub(const poa: IPOA; const obj : IORBObject): IORBObject; override;
    function _is_a(const repoid: RepositoryID): Boolean; override;
    procedure invoke(const serv: IStaticServerRequest); override;
    function _dispatch(const req: IStaticServerRequest): Boolean;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    function _this(): IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv;
    class function _narrow(const srv : IServant): IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv;
  end;

  TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

var
  ServerGate_GenerationContents_TransactionConflict_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_NavigationArea_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_NavigationArea_seq_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_Diagram_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_ReadOnlyContent_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_ContentUpdateError_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_PathNotValid_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_PropertyMapEntry_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_PropertyMapEntry_seq_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_Page_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_PageFactoryManagerSrv_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_Page_seq_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_GenerationManager_marshaller : IStaticTypeInfo;
  ServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller : IStaticTypeInfo;
  _tc_ServerGate_GenerationContents_TransactionConflict : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_NavigationArea : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_NavigationArea_seq : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_Diagram : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_ReadOnlyContent : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_ContentUpdateError : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_PathNotValid : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_PropertyMapEntry : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_PropertyMapEntry_seq : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_Page : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_PageFactoryManagerSrv : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_Page_seq : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_GenerationManager : ITypeCodeConst;
  _tc_ServerGate_GenerationContents_GenerationManagerFactoryManagerSrv : ITypeCodeConst;

implementation

uses
  SysUtils, any, tcode, static, throw;

//***********************************************************
// TServerGate_GenerationContents_TransactionConflict_marshaller
//***********************************************************
function TServerGate_GenerationContents_TransactionConflict_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryId;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not dec.except_end then exit;
  result := true;
end;

procedure TServerGate_GenerationContents_TransactionConflict_marshaller.marshal(enc: IEncoder;const addr : Pointer);
begin
  enc.except_begin('IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0');
  enc.except_end;
end;

procedure TServerGate_GenerationContents_TransactionConflict_marshaller._free(var addr: Pointer);
begin
  IServerGate_GenerationContents_TransactionConflict(addr^) := nil;
end;

procedure TServerGate_GenerationContents_TransactionConflict_marshaller._create(var addr: Pointer);
begin
  IServerGate_GenerationContents_TransactionConflict(addr^) := TServerGate_GenerationContents_TransactionConflict.Create();
end;

procedure TServerGate_GenerationContents_TransactionConflict_marshaller._assign(dst, src: Pointer);
begin
  IServerGate_GenerationContents_TransactionConflict(dst^) := IServerGate_GenerationContents_TransactionConflict(src^);
end;

function TServerGate_GenerationContents_TransactionConflict_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_TransactionConflict.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_TransactionConflict
//***********************************************************
constructor TServerGate_GenerationContents_TransactionConflict.Create(ex: TServerGate_GenerationContents_TransactionConflict);
begin
  inherited Create();
end;

procedure TServerGate_GenerationContents_TransactionConflict.throw;
begin
  raise TServerGate_GenerationContents_TransactionConflict.Create(self);
end;

function TServerGate_GenerationContents_TransactionConflict.clone(): IORBException;
begin
  result := TServerGate_GenerationContents_TransactionConflict.Create(self);
end;

procedure TServerGate_GenerationContents_TransactionConflict.encode(const enc: IEncoder);
var
  int : IServerGate_GenerationContents_TransactionConflict;
begin
  int := self;
  ServerGate_GenerationContents_TransactionConflict_marshaller.marshal(enc,@int);
end;

procedure TServerGate_GenerationContents_TransactionConflict.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(ServerGate_GenerationContents_TransactionConflict_marshaller, Self);
  a.from_static_any(stat);
end;

constructor TServerGate_GenerationContents_TransactionConflict.Create();
begin
  inherited Create();
end;

function TServerGate_GenerationContents_TransactionConflict.repoid(): RepositoryID;
begin
  result := 'IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0';
end;

//***********************************************************
// TServerGate_GenerationContents_NavigationArea_marshaller
//***********************************************************
function TServerGate_GenerationContents_NavigationArea_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  struct: GenerationContents_int.TServerGate_GenerationContents_NavigationArea;
begin
  result := false;
  if not stat_long.demarshal(dec,@struct.x1) then exit;
  if not stat_long.demarshal(dec,@struct.y1) then exit;
  if not stat_long.demarshal(dec,@struct.x2) then exit;
  if not stat_long.demarshal(dec,@struct.y2) then exit;
  if not stat_long.demarshal(dec,@struct.x3) then exit;
  if not stat_long.demarshal(dec,@struct.y3) then exit;
  if not stat_long.demarshal(dec,@struct.x4) then exit;
  if not stat_long.demarshal(dec,@struct.y4) then exit;
  if not stat_string.demarshal(dec,@struct.guid) then exit;
  GenerationContents_int.TServerGate_GenerationContents_NavigationArea(addr^) := struct;
  result := true;
end;

procedure TServerGate_GenerationContents_NavigationArea_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  struct: GenerationContents_int.TServerGate_GenerationContents_NavigationArea;
begin
  struct := GenerationContents_int.TServerGate_GenerationContents_NavigationArea(addr^);
  stat_long.marshal(enc,@struct.x1);
  stat_long.marshal(enc,@struct.y1);
  stat_long.marshal(enc,@struct.x2);
  stat_long.marshal(enc,@struct.y2);
  stat_long.marshal(enc,@struct.x3);
  stat_long.marshal(enc,@struct.y3);
  stat_long.marshal(enc,@struct.x4);
  stat_long.marshal(enc,@struct.y4);
  stat_string.marshal(enc,@struct.guid);
end;

procedure TServerGate_GenerationContents_NavigationArea_marshaller._free(var addr: Pointer);
begin
{$HINTS OFF}
  System.Finalize(GenerationContents_int.TServerGate_GenerationContents_NavigationArea(addr^));
{$HINTS ON}
  FreeMem(addr);
end;

procedure TServerGate_GenerationContents_NavigationArea_marshaller._create(var addr: Pointer);
begin
  addr := AllocMem(sizeOf(GenerationContents_int.TServerGate_GenerationContents_NavigationArea));
{$HINTS OFF}
  System.Initialize(GenerationContents_int.TServerGate_GenerationContents_NavigationArea(addr^));
{$HINTS ON}
end;

procedure TServerGate_GenerationContents_NavigationArea_marshaller._assign(dst, src: Pointer);
begin
  GenerationContents_int.TServerGate_GenerationContents_NavigationArea(dst^) := GenerationContents_int.TServerGate_GenerationContents_NavigationArea(src^);
end;

function TServerGate_GenerationContents_NavigationArea_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_NavigationArea.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_NavigationArea_seq_marshaller
//***********************************************************

function TServerGate_GenerationContents_NavigationArea_seq_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  len: _ulong;
  i: integer;
  val: TServerGate_GenerationContents_NavigationArea;
begin
  result := false;
  if not dec.seq_begin(len) then exit;
  SetLength(ServerGate_GenerationContents_NavigationArea_seq(addr^),len);
  if len <> 0 then
    for i := 0 to Pred(len) do
      begin
        if not ServerGate_GenerationContents_NavigationArea_marshaller.demarshal(dec,@val) then exit;
        ServerGate_GenerationContents_NavigationArea_seq(addr^)[i] := val; 
      end;
  if not dec.seq_end() then exit;
  result := true;
end;

procedure TServerGate_GenerationContents_NavigationArea_seq_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  len: _ulong;
  i: integer;
begin
  len := Length(ServerGate_GenerationContents_NavigationArea_seq(addr^));
  enc.seq_begin(len);
  if len <> 0 then
    for i := 0 to Pred(len) do
      ServerGate_GenerationContents_NavigationArea_marshaller.marshal(enc,@ServerGate_GenerationContents_NavigationArea_seq(addr^)[i]);
  enc.seq_end;
end;

procedure TServerGate_GenerationContents_NavigationArea_seq_marshaller._free(var addr: Pointer);
begin
  setLength(ServerGate_GenerationContents_NavigationArea_seq(addr^),0);
  freemem(addr);
end;

procedure TServerGate_GenerationContents_NavigationArea_seq_marshaller._create(var addr: Pointer);
begin
  addr := allocmem(sizeOf(_ulong));
end;

procedure TServerGate_GenerationContents_NavigationArea_seq_marshaller._assign(dst, src: Pointer);
begin
  _ulong(dst^) := _ulong(src^);
end;

function TServerGate_GenerationContents_NavigationArea_seq_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_NavigationArea_seq.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_Diagram_marshaller
//***********************************************************
function TServerGate_GenerationContents_Diagram_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  struct: GenerationContents_int.TServerGate_GenerationContents_Diagram;
begin
  result := false;
  if not stat_seq_octet.demarshal(dec,@struct.picture) then exit;
  if not ServerGate_GenerationContents_NavigationArea_seq_marshaller.demarshal(dec,@struct.map) then exit;
  if not stat_string.demarshal(dec,@struct.hash) then exit;
  GenerationContents_int.TServerGate_GenerationContents_Diagram(addr^) := struct;
  result := true;
end;

procedure TServerGate_GenerationContents_Diagram_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  struct: GenerationContents_int.TServerGate_GenerationContents_Diagram;
begin
  struct := GenerationContents_int.TServerGate_GenerationContents_Diagram(addr^);
  stat_seq_octet.marshal(enc,@struct.picture);
  ServerGate_GenerationContents_NavigationArea_seq_marshaller.marshal(enc,@struct.map);
  stat_string.marshal(enc,@struct.hash);
end;

procedure TServerGate_GenerationContents_Diagram_marshaller._free(var addr: Pointer);
begin
{$HINTS OFF}
  System.Finalize(GenerationContents_int.TServerGate_GenerationContents_Diagram(addr^));
{$HINTS ON}
  FreeMem(addr);
end;

procedure TServerGate_GenerationContents_Diagram_marshaller._create(var addr: Pointer);
begin
  addr := AllocMem(sizeOf(GenerationContents_int.TServerGate_GenerationContents_Diagram));
{$HINTS OFF}
  System.Initialize(GenerationContents_int.TServerGate_GenerationContents_Diagram(addr^));
{$HINTS ON}
end;

procedure TServerGate_GenerationContents_Diagram_marshaller._assign(dst, src: Pointer);
begin
  GenerationContents_int.TServerGate_GenerationContents_Diagram(dst^) := GenerationContents_int.TServerGate_GenerationContents_Diagram(src^);
end;

function TServerGate_GenerationContents_Diagram_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_Diagram.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_ReadOnlyContent_marshaller
//***********************************************************
function TServerGate_GenerationContents_ReadOnlyContent_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryId;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not dec.except_end then exit;
  result := true;
end;

procedure TServerGate_GenerationContents_ReadOnlyContent_marshaller.marshal(enc: IEncoder;const addr : Pointer);
begin
  enc.except_begin('IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0');
  enc.except_end;
end;

procedure TServerGate_GenerationContents_ReadOnlyContent_marshaller._free(var addr: Pointer);
begin
  IServerGate_GenerationContents_ReadOnlyContent(addr^) := nil;
end;

procedure TServerGate_GenerationContents_ReadOnlyContent_marshaller._create(var addr: Pointer);
begin
  IServerGate_GenerationContents_ReadOnlyContent(addr^) := TServerGate_GenerationContents_ReadOnlyContent.Create();
end;

procedure TServerGate_GenerationContents_ReadOnlyContent_marshaller._assign(dst, src: Pointer);
begin
  IServerGate_GenerationContents_ReadOnlyContent(dst^) := IServerGate_GenerationContents_ReadOnlyContent(src^);
end;

function TServerGate_GenerationContents_ReadOnlyContent_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_ReadOnlyContent
//***********************************************************
constructor TServerGate_GenerationContents_ReadOnlyContent.Create(ex: TServerGate_GenerationContents_ReadOnlyContent);
begin
  inherited Create();
end;

procedure TServerGate_GenerationContents_ReadOnlyContent.throw;
begin
  raise TServerGate_GenerationContents_ReadOnlyContent.Create(self);
end;

function TServerGate_GenerationContents_ReadOnlyContent.clone(): IORBException;
begin
  result := TServerGate_GenerationContents_ReadOnlyContent.Create(self);
end;

procedure TServerGate_GenerationContents_ReadOnlyContent.encode(const enc: IEncoder);
var
  int : IServerGate_GenerationContents_ReadOnlyContent;
begin
  int := self;
  ServerGate_GenerationContents_ReadOnlyContent_marshaller.marshal(enc,@int);
end;

procedure TServerGate_GenerationContents_ReadOnlyContent.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(ServerGate_GenerationContents_ReadOnlyContent_marshaller, Self);
  a.from_static_any(stat);
end;

constructor TServerGate_GenerationContents_ReadOnlyContent.Create();
begin
  inherited Create();
end;

function TServerGate_GenerationContents_ReadOnlyContent.repoid(): RepositoryID;
begin
  result := 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0';
end;

//***********************************************************
// TServerGate_GenerationContents_ContentUpdateError_marshaller
//***********************************************************
function TServerGate_GenerationContents_ContentUpdateError_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryId;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not dec.except_end then exit;
  result := true;
end;

procedure TServerGate_GenerationContents_ContentUpdateError_marshaller.marshal(enc: IEncoder;const addr : Pointer);
begin
  enc.except_begin('IDL:garant.ru/ServerGate/GenerationContents/ContentUpdateError:1.0');
  enc.except_end;
end;

procedure TServerGate_GenerationContents_ContentUpdateError_marshaller._free(var addr: Pointer);
begin
  IServerGate_GenerationContents_ContentUpdateError(addr^) := nil;
end;

procedure TServerGate_GenerationContents_ContentUpdateError_marshaller._create(var addr: Pointer);
begin
  IServerGate_GenerationContents_ContentUpdateError(addr^) := TServerGate_GenerationContents_ContentUpdateError.Create();
end;

procedure TServerGate_GenerationContents_ContentUpdateError_marshaller._assign(dst, src: Pointer);
begin
  IServerGate_GenerationContents_ContentUpdateError(dst^) := IServerGate_GenerationContents_ContentUpdateError(src^);
end;

function TServerGate_GenerationContents_ContentUpdateError_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_ContentUpdateError.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_ContentUpdateError
//***********************************************************
constructor TServerGate_GenerationContents_ContentUpdateError.Create(ex: TServerGate_GenerationContents_ContentUpdateError);
begin
  inherited Create();
end;

procedure TServerGate_GenerationContents_ContentUpdateError.throw;
begin
  raise TServerGate_GenerationContents_ContentUpdateError.Create(self);
end;

function TServerGate_GenerationContents_ContentUpdateError.clone(): IORBException;
begin
  result := TServerGate_GenerationContents_ContentUpdateError.Create(self);
end;

procedure TServerGate_GenerationContents_ContentUpdateError.encode(const enc: IEncoder);
var
  int : IServerGate_GenerationContents_ContentUpdateError;
begin
  int := self;
  ServerGate_GenerationContents_ContentUpdateError_marshaller.marshal(enc,@int);
end;

procedure TServerGate_GenerationContents_ContentUpdateError.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(ServerGate_GenerationContents_ContentUpdateError_marshaller, Self);
  a.from_static_any(stat);
end;

constructor TServerGate_GenerationContents_ContentUpdateError.Create();
begin
  inherited Create();
end;

function TServerGate_GenerationContents_ContentUpdateError.repoid(): RepositoryID;
begin
  result := 'IDL:garant.ru/ServerGate/GenerationContents/ContentUpdateError:1.0';
end;

//***********************************************************
// TServerGate_GenerationContents_PathNotValid_marshaller
//***********************************************************
function TServerGate_GenerationContents_PathNotValid_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryId;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not dec.except_end then exit;
  result := true;
end;

procedure TServerGate_GenerationContents_PathNotValid_marshaller.marshal(enc: IEncoder;const addr : Pointer);
begin
  enc.except_begin('IDL:garant.ru/ServerGate/GenerationContents/PathNotValid:1.0');
  enc.except_end;
end;

procedure TServerGate_GenerationContents_PathNotValid_marshaller._free(var addr: Pointer);
begin
  IServerGate_GenerationContents_PathNotValid(addr^) := nil;
end;

procedure TServerGate_GenerationContents_PathNotValid_marshaller._create(var addr: Pointer);
begin
  IServerGate_GenerationContents_PathNotValid(addr^) := TServerGate_GenerationContents_PathNotValid.Create();
end;

procedure TServerGate_GenerationContents_PathNotValid_marshaller._assign(dst, src: Pointer);
begin
  IServerGate_GenerationContents_PathNotValid(dst^) := IServerGate_GenerationContents_PathNotValid(src^);
end;

function TServerGate_GenerationContents_PathNotValid_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_PathNotValid.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_PathNotValid
//***********************************************************
constructor TServerGate_GenerationContents_PathNotValid.Create(ex: TServerGate_GenerationContents_PathNotValid);
begin
  inherited Create();
end;

procedure TServerGate_GenerationContents_PathNotValid.throw;
begin
  raise TServerGate_GenerationContents_PathNotValid.Create(self);
end;

function TServerGate_GenerationContents_PathNotValid.clone(): IORBException;
begin
  result := TServerGate_GenerationContents_PathNotValid.Create(self);
end;

procedure TServerGate_GenerationContents_PathNotValid.encode(const enc: IEncoder);
var
  int : IServerGate_GenerationContents_PathNotValid;
begin
  int := self;
  ServerGate_GenerationContents_PathNotValid_marshaller.marshal(enc,@int);
end;

procedure TServerGate_GenerationContents_PathNotValid.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(ServerGate_GenerationContents_PathNotValid_marshaller, Self);
  a.from_static_any(stat);
end;

constructor TServerGate_GenerationContents_PathNotValid.Create();
begin
  inherited Create();
end;

function TServerGate_GenerationContents_PathNotValid.repoid(): RepositoryID;
begin
  result := 'IDL:garant.ru/ServerGate/GenerationContents/PathNotValid:1.0';
end;

//***********************************************************
// TServerGate_GenerationContents_PropertyMapEntry_marshaller
//***********************************************************
function TServerGate_GenerationContents_PropertyMapEntry_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  struct: GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry;
begin
  result := false;
  if not stat_string.demarshal(dec,@struct.key) then exit;
  if not stat_seq_string.demarshal(dec,@struct.string_list) then exit;
  GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry(addr^) := struct;
  result := true;
end;

procedure TServerGate_GenerationContents_PropertyMapEntry_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  struct: GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry;
begin
  struct := GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry(addr^);
  stat_string.marshal(enc,@struct.key);
  stat_seq_string.marshal(enc,@struct.string_list);
end;

procedure TServerGate_GenerationContents_PropertyMapEntry_marshaller._free(var addr: Pointer);
begin
{$HINTS OFF}
  System.Finalize(GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry(addr^));
{$HINTS ON}
  FreeMem(addr);
end;

procedure TServerGate_GenerationContents_PropertyMapEntry_marshaller._create(var addr: Pointer);
begin
  addr := AllocMem(sizeOf(GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry));
{$HINTS OFF}
  System.Initialize(GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry(addr^));
{$HINTS ON}
end;

procedure TServerGate_GenerationContents_PropertyMapEntry_marshaller._assign(dst, src: Pointer);
begin
  GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry(dst^) := GenerationContents_int.TServerGate_GenerationContents_PropertyMapEntry(src^);
end;

function TServerGate_GenerationContents_PropertyMapEntry_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_PropertyMapEntry.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller
//***********************************************************

function TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  len: _ulong;
  i: integer;
  val: TServerGate_GenerationContents_PropertyMapEntry;
begin
  result := false;
  if not dec.seq_begin(len) then exit;
  SetLength(ServerGate_GenerationContents_PropertyMapEntry_seq(addr^),len);
  if len <> 0 then
    for i := 0 to Pred(len) do
      begin
        if not ServerGate_GenerationContents_PropertyMapEntry_marshaller.demarshal(dec,@val) then exit;
        ServerGate_GenerationContents_PropertyMapEntry_seq(addr^)[i] := val; 
      end;
  if not dec.seq_end() then exit;
  result := true;
end;

procedure TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  len: _ulong;
  i: integer;
begin
  len := Length(ServerGate_GenerationContents_PropertyMapEntry_seq(addr^));
  enc.seq_begin(len);
  if len <> 0 then
    for i := 0 to Pred(len) do
      ServerGate_GenerationContents_PropertyMapEntry_marshaller.marshal(enc,@ServerGate_GenerationContents_PropertyMapEntry_seq(addr^)[i]);
  enc.seq_end;
end;

procedure TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller._free(var addr: Pointer);
begin
  setLength(ServerGate_GenerationContents_PropertyMapEntry_seq(addr^),0);
  freemem(addr);
end;

procedure TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller._create(var addr: Pointer);
begin
  addr := allocmem(sizeOf(_ulong));
end;

procedure TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller._assign(dst, src: Pointer);
begin
  _ulong(dst^) := _ulong(src^);
end;

function TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_PropertyMapEntry_seq.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_Page
//***********************************************************
function TServerGate_GenerationContents_Page.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/Page:1.0' then
    begin
      result := Pointer(self as IServerGate_GenerationContents_Page);
      exit;
    end;
end;

class function TServerGate_GenerationContents_Page._narrow(const obj : IORBObject): IServerGate_GenerationContents_Page;
var
  p: Pointer;
  stub: TServerGate_GenerationContents_Page_stub;
begin
  result := nil;
  if obj = nil then exit;
  p := obj.narrow_helper('IDL:garant.ru/ServerGate/GenerationContents/Page:1.0');
  if p <> nil then
    result := IServerGate_GenerationContents_Page(p)
  else
    begin
      if narrow_helper2(obj) or obj._is_a_remote('IDL:garant.ru/ServerGate/GenerationContents/Page:1.0') then
        begin
          stub := TServerGate_GenerationContents_Page_stub.Create();
          stub.assign(obj);
          result := stub;
        end;
    end;
end;

class function TServerGate_GenerationContents_Page.narrow_helper2(const obj: IORBObject): Boolean;
begin
  result := obj._repoid = 'IDL:garant.ru/ServerGate/GenerationContents/Page:1.0'
end;

//***********************************************************
// TServerGate_GenerationContents_Page_stub
//***********************************************************
function TServerGate_GenerationContents_Page_stub.get_generated_text: AnsiString;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_string, @result);
  req := StaticRequest(self,'get_generated_text');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

procedure TServerGate_GenerationContents_Page_stub.set_generated_text(const generated_text: AnsiString);
var
  req: IStaticRequest;
  _generated_text: IStaticAny;
begin
  _generated_text := StaticAny(stat_string,@generated_text);
  req := StaticRequest(self,'set_generated_text');
  req.add_in_arg(_generated_text);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_TransactionConflict_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0', ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0']);
end;

function TServerGate_GenerationContents_Page_stub.get_labels: AnsiString;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_string, @result);
  req := StaticRequest(self,'get_labels');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

procedure TServerGate_GenerationContents_Page_stub.set_labels(const labels: AnsiString);
var
  req: IStaticRequest;
  _labels: IStaticAny;
begin
  _labels := StaticAny(stat_string,@labels);
  req := StaticRequest(self,'set_labels');
  req.add_in_arg(_labels);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_TransactionConflict_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0', ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0']);
end;

function TServerGate_GenerationContents_Page_stub.get_page_before_changes: IServerGate_GenerationContents_Page;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(ServerGate_GenerationContents_Page_marshaller, @result);
  req := StaticRequest(self,'get_page_before_changes');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

function TServerGate_GenerationContents_Page_stub.get_path: TServerGate_GenerationContents_PagePath;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_string, @result);
  req := StaticRequest(self,'get_path');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

procedure TServerGate_GenerationContents_Page_stub.set_path(const path: TServerGate_GenerationContents_PagePath);
var
  req: IStaticRequest;
  _path: IStaticAny;
begin
  _path := StaticAny(stat_string,@path);
  req := StaticRequest(self,'set_path');
  req.add_in_arg(_path);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_PathNotValid.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_TransactionConflict_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0', ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0', ServerGate_GenerationContents_PathNotValid_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/PathNotValid:1.0']);
end;

function TServerGate_GenerationContents_Page_stub.get_guid: TServerGate_GenerationContents_ModelElementId;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_string, @result);
  req := StaticRequest(self,'get_guid');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

procedure TServerGate_GenerationContents_Page_stub.mark_for_remove;
var
  req: IStaticRequest;
begin
  req := StaticRequest(self,'mark_for_remove');
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_TransactionConflict_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0', ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0']);
end;

procedure TServerGate_GenerationContents_Page_stub.prepare_for_commit;
var
  req: IStaticRequest;
begin
  req := StaticRequest(self,'prepare_for_commit');
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_ContentUpdateError.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0', ServerGate_GenerationContents_ContentUpdateError_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ContentUpdateError:1.0']);
end;

procedure TServerGate_GenerationContents_Page_stub.commit_all_changes(const minor_changes: Boolean);
var
  req: IStaticRequest;
  _minor_changes: IStaticAny;
begin
  _minor_changes := StaticAny(stat_boolean,@minor_changes);
  req := StaticRequest(self,'commit_all_changes');
  req.add_in_arg(_minor_changes);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_ContentUpdateError.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0', ServerGate_GenerationContents_ContentUpdateError_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ContentUpdateError:1.0']);
end;

procedure TServerGate_GenerationContents_Page_stub.rollback_all_changes;
var
  req: IStaticRequest;
begin
  req := StaticRequest(self,'rollback_all_changes');
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0']);
end;

procedure TServerGate_GenerationContents_Page_stub.add_diagram(const name: AnsiString; const d: TServerGate_GenerationContents_Diagram);
var
  req: IStaticRequest;
  _name: IStaticAny;
  _d: IStaticAny;
begin
  _name := StaticAny(stat_string,@name);
  _d := StaticAny(ServerGate_GenerationContents_Diagram_marshaller,@d);
  req := StaticRequest(self,'add_diagram');
  req.add_in_arg(_name);
  req.add_in_arg(_d);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_TransactionConflict_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0', ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0']);
end;

function TServerGate_GenerationContents_Page_stub.get_diagram_hash(const name: AnsiString): AnsiString;
var
  req: IStaticRequest;
  _name: IStaticAny;
  _result: IStaticAny;
begin
  _name := StaticAny(stat_string,@name);
  _result := StaticAny(stat_string, @result);
  req := StaticRequest(self,'get_diagram_hash');
  req.add_in_arg(_name);
  req.set_result(_result);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0']);
end;

function TServerGate_GenerationContents_Page_stub.is_modified: Boolean;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_boolean, @result);
  req := StaticRequest(self,'is_modified');
  req.set_result(_result);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0']);
end;

function TServerGate_GenerationContents_Page_stub.is_new_page: Boolean;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_boolean, @result);
  req := StaticRequest(self,'is_new_page');
  req.set_result(_result);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0']);
end;

procedure TServerGate_GenerationContents_Page_stub.remove;
var
  req: IStaticRequest;
begin
  req := StaticRequest(self,'remove');
  req.set_exceptions_tc([_tc_CoreSrv_ForeignObject.typecode]);
  req.invoke;
  dorb_static_throw(req,[CoreSrv_ForeignObject_marshaller, 'IDL:garant.ru/CoreSrv/ForeignObject:1.0']);
end;

procedure TServerGate_GenerationContents_Page_stub.add_property_map(const map: TServerGate_GenerationContents_PropertyMapEntryList);
var
  req: IStaticRequest;
  _map: IStaticAny;
begin
  _map := StaticAny(ServerGate_GenerationContents_PropertyMapEntry_seq_marshaller,@map);
  req := StaticRequest(self,'add_property_map');
  req.add_in_arg(_map);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_ContentUpdateError.typecode, _tc_ServerGate_GenerationContents_PathNotValid.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_TransactionConflict_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/TransactionConflict:1.0', ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0', ServerGate_GenerationContents_ContentUpdateError_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ContentUpdateError:1.0', ServerGate_GenerationContents_PathNotValid_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/PathNotValid:1.0']);
end;

function TServerGate_GenerationContents_Page_stub.get_all_property_cheksum: longlong;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_longlong, @result);
  req := StaticRequest(self,'get_all_property_cheksum');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

//***********************************************************
// TServerGate_GenerationContents_Page_stub_clp
//***********************************************************
function TServerGate_GenerationContents_Page_stub_clp.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/Page:1.0' then
    begin
      result := Pointer(self as IServerGate_GenerationContents_Page);
      exit;
  end;
end;

function TServerGate_GenerationContents_Page_stub_clp.get_generated_text: AnsiString;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := '';
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get_generated_text
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.set_generated_text(const generated_text: AnsiString);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.set_generated_text(generated_text)
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_Page_stub_clp.get_labels: AnsiString;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := '';
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get_labels
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.set_labels(const labels: AnsiString);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.set_labels(labels)
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_Page_stub_clp.get_page_before_changes: IServerGate_GenerationContents_Page;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get_page_before_changes
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_Page_stub_clp.get_path: TServerGate_GenerationContents_PagePath;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := '';
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get_path
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.set_path(const path: TServerGate_GenerationContents_PagePath);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.set_path(path)
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_Page_stub_clp.get_guid: TServerGate_GenerationContents_ModelElementId;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := '';
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get_guid
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.mark_for_remove;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.mark_for_remove
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.prepare_for_commit;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.prepare_for_commit
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.commit_all_changes(const minor_changes: Boolean);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.commit_all_changes(minor_changes)
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.rollback_all_changes;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.rollback_all_changes
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.add_diagram(const name: AnsiString; const d: TServerGate_GenerationContents_Diagram);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.add_diagram(name, d)
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_Page_stub_clp.get_diagram_hash(const name: AnsiString): AnsiString;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := '';
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get_diagram_hash(name)
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_Page_stub_clp.is_modified: Boolean;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := false;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.is_modified
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_Page_stub_clp.is_new_page: Boolean;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := false;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.is_new_page
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.remove;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.remove
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_Page_stub_clp.add_property_map(const map: TServerGate_GenerationContents_PropertyMapEntryList);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        srv.add_property_map(map)
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_Page_stub_clp.get_all_property_cheksum: longlong;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_Page;
begin
  result := 0;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_Page_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get_all_property_cheksum
    end;
  _postinvoke();
end;

//***********************************************************
// TServerGate_GenerationContents_Page_serv
//***********************************************************
function TServerGate_GenerationContents_Page_serv._this(): IServerGate_GenerationContents_Page;
var
  obj: IORBObject;
begin
  obj := this();
  result := TServerGate_GenerationContents_Page._narrow(obj);
end;

function TServerGate_GenerationContents_Page_serv._is_a(const repoid: RepositoryID): Boolean;
begin
  result := repoid = 'IDL:garant.ru/ServerGate/GenerationContents/Page:1.0';
end;

function TServerGate_GenerationContents_Page_serv._primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID;
begin
  result := 'IDL:garant.ru/ServerGate/GenerationContents/Page:1.0';
end;

function TServerGate_GenerationContents_Page_serv._make_stub(const poa: IPOA; const obj : IORBObject): IORBObject;
begin
  result := TServerGate_GenerationContents_Page_stub_clp.Create(poa,obj);
end;

procedure TServerGate_GenerationContents_Page_serv.invoke(const serv: IStaticServerRequest);
begin
  if not _dispatch(serv) then
    begin
      serv.set_exception(BAD_OPERATION.Create(0, COMPLETED_NO) as IORBException);
      serv.write_results();
    end;
end;

function TServerGate_GenerationContents_Page_serv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/Page:1.0' then
    begin
      result := Pointer(IServerGate_GenerationContents_Page(self));
      exit;
    end;
end;

class function TServerGate_GenerationContents_Page_serv._narrow(const srv : IServant): IServerGate_GenerationContents_Page;
var
  p: Pointer;
begin
  result := nil;
  if srv = nil then exit;
  p := srv.narrow_helper('IDL:garant.ru/ServerGate/GenerationContents/Page:1.0');
  if p <> nil then
    result := IServerGate_GenerationContents_Page(p)
end;

function TServerGate_GenerationContents_Page_serv._dispatch(const req: IStaticServerRequest): Boolean;
var
  get_generated_text_result: AnsiString;
  set_generated_text_generated_text: AnsiString;
  get_labels_result: AnsiString;
  set_labels_labels: AnsiString;
  get_page_before_changes_result: IServerGate_GenerationContents_Page;
  get_path_result: TServerGate_GenerationContents_PagePath;
  set_path_path: TServerGate_GenerationContents_PagePath;
  get_guid_result: TServerGate_GenerationContents_ModelElementId;
  commit_all_changes_minor_changes: Boolean;
  add_diagram_name: AnsiString;
  add_diagram_d: TServerGate_GenerationContents_Diagram;
  get_diagram_hash_result: AnsiString;
  get_diagram_hash_name: AnsiString;
  is_modified_result: Boolean;
  is_new_page_result: Boolean;
  add_property_map_map: TServerGate_GenerationContents_PropertyMapEntryList;
  get_all_property_cheksum_result: longlong;
begin
  result := true;
  if req.op_name = 'get_generated_text' then
    begin
      req.set_result(StaticAny(stat_string,@get_generated_text_result) as IStaticAny);
      if not req.read_args() then  exit;
      get_generated_text_result := get_generated_text;
      req.write_results();
      exit;
    end
  else if req.op_name = 'set_generated_text' then
    begin
      req.add_in_arg(StaticAny(stat_string,@set_generated_text_generated_text) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
      try
        set_generated_text(set_generated_text_generated_text);
      except
        on TransactionConflict: TServerGate_GenerationContents_TransactionConflict do
          req.set_exception(TServerGate_GenerationContents_TransactionConflict.Create(TransactionConflict) as IORBException);
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'get_labels' then
    begin
      req.set_result(StaticAny(stat_string,@get_labels_result) as IStaticAny);
      if not req.read_args() then  exit;
      get_labels_result := get_labels;
      req.write_results();
      exit;
    end
  else if req.op_name = 'set_labels' then
    begin
      req.add_in_arg(StaticAny(stat_string,@set_labels_labels) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
      try
        set_labels(set_labels_labels);
      except
        on TransactionConflict: TServerGate_GenerationContents_TransactionConflict do
          req.set_exception(TServerGate_GenerationContents_TransactionConflict.Create(TransactionConflict) as IORBException);
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'get_page_before_changes' then
    begin
      req.set_result(StaticAny(ServerGate_GenerationContents_Page_marshaller,@get_page_before_changes_result) as IStaticAny);
      if not req.read_args() then  exit;
      get_page_before_changes_result := get_page_before_changes;
      req.write_results();
      exit;
    end
  else if req.op_name = 'get_path' then
    begin
      req.set_result(StaticAny(stat_string,@get_path_result) as IStaticAny);
      if not req.read_args() then  exit;
      get_path_result := get_path;
      req.write_results();
      exit;
    end
  else if req.op_name = 'set_path' then
    begin
      req.add_in_arg(StaticAny(stat_string,@set_path_path) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_PathNotValid.typecode]);
      try
        set_path(set_path_path);
      except
        on TransactionConflict: TServerGate_GenerationContents_TransactionConflict do
          req.set_exception(TServerGate_GenerationContents_TransactionConflict.Create(TransactionConflict) as IORBException);
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
        on PathNotValid: TServerGate_GenerationContents_PathNotValid do
          req.set_exception(TServerGate_GenerationContents_PathNotValid.Create(PathNotValid) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'get_guid' then
    begin
      req.set_result(StaticAny(stat_string,@get_guid_result) as IStaticAny);
      if not req.read_args() then  exit;
      get_guid_result := get_guid;
      req.write_results();
      exit;
    end
  else if req.op_name = 'mark_for_remove' then
    begin
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
      try
        mark_for_remove;
      except
        on TransactionConflict: TServerGate_GenerationContents_TransactionConflict do
          req.set_exception(TServerGate_GenerationContents_TransactionConflict.Create(TransactionConflict) as IORBException);
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'prepare_for_commit' then
    begin
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_ContentUpdateError.typecode]);
      try
        prepare_for_commit;
      except
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
        on ContentUpdateError: TServerGate_GenerationContents_ContentUpdateError do
          req.set_exception(TServerGate_GenerationContents_ContentUpdateError.Create(ContentUpdateError) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'commit_all_changes' then
    begin
      req.add_in_arg(StaticAny(stat_boolean,@commit_all_changes_minor_changes) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_ContentUpdateError.typecode]);
      try
        commit_all_changes(commit_all_changes_minor_changes);
      except
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
        on ContentUpdateError: TServerGate_GenerationContents_ContentUpdateError do
          req.set_exception(TServerGate_GenerationContents_ContentUpdateError.Create(ContentUpdateError) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'rollback_all_changes' then
    begin
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
      try
        rollback_all_changes;
      except
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'add_diagram' then
    begin
      req.add_in_arg(StaticAny(stat_string,@add_diagram_name) as IStaticAny);
      req.add_in_arg(StaticAny(ServerGate_GenerationContents_Diagram_marshaller,@add_diagram_d) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
      try
        add_diagram(add_diagram_name, add_diagram_d);
      except
        on TransactionConflict: TServerGate_GenerationContents_TransactionConflict do
          req.set_exception(TServerGate_GenerationContents_TransactionConflict.Create(TransactionConflict) as IORBException);
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'get_diagram_hash' then
    begin
      req.add_in_arg(StaticAny(stat_string,@get_diagram_hash_name) as IStaticAny);
      req.set_result(StaticAny(stat_string,@get_diagram_hash_result) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
      try
        get_diagram_hash_result := get_diagram_hash(get_diagram_hash_name);
      except
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'is_modified' then
    begin
      req.set_result(StaticAny(stat_boolean,@is_modified_result) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
      try
        is_modified_result := is_modified;
      except
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'is_new_page' then
    begin
      req.set_result(StaticAny(stat_boolean,@is_new_page_result) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode]);
      try
        is_new_page_result := is_new_page;
      except
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'remove' then
    begin
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_CoreSrv_ForeignObject.typecode]);
      try
        remove;
      except
        on ForeignObject: TCoreSrv_ForeignObject do
          req.set_exception(TCoreSrv_ForeignObject.Create(ForeignObject) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'add_property_map' then
    begin
      req.add_in_arg(StaticAny(ServerGate_GenerationContents_PropertyMapEntry_seq_marshaller,@add_property_map_map) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_TransactionConflict.typecode, _tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_ContentUpdateError.typecode, _tc_ServerGate_GenerationContents_PathNotValid.typecode]);
      try
        add_property_map(add_property_map_map);
      except
        on TransactionConflict: TServerGate_GenerationContents_TransactionConflict do
          req.set_exception(TServerGate_GenerationContents_TransactionConflict.Create(TransactionConflict) as IORBException);
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
        on ContentUpdateError: TServerGate_GenerationContents_ContentUpdateError do
          req.set_exception(TServerGate_GenerationContents_ContentUpdateError.Create(ContentUpdateError) as IORBException);
        on PathNotValid: TServerGate_GenerationContents_PathNotValid do
          req.set_exception(TServerGate_GenerationContents_PathNotValid.Create(PathNotValid) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'get_all_property_cheksum' then
    begin
      req.set_result(StaticAny(stat_longlong,@get_all_property_cheksum_result) as IStaticAny);
      if not req.read_args() then  exit;
      get_all_property_cheksum_result := get_all_property_cheksum;
      req.write_results();
      exit;
    end;
  result := false;
end;

//***********************************************************
// TServerGate_GenerationContents_Page_marshaller
//***********************************************************
function TServerGate_GenerationContents_Page_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  obj: IORBObject;
begin
  result := false;
  if not stat_Object.demarshal(dec,@obj) then exit;
  IServerGate_GenerationContents_Page(addr^) := TServerGate_GenerationContents_Page._narrow(obj);
  result := (obj = nil) or (Pointer(addr^) <> nil);
end;

procedure TServerGate_GenerationContents_Page_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  obj: IORBObject;
begin
  obj := IServerGate_GenerationContents_Page(addr^) as IORBObject;
  stat_Object.marshal(enc,@Pointer(obj));
end;

procedure TServerGate_GenerationContents_Page_marshaller._free(var addr: Pointer);
begin
  IServerGate_GenerationContents_Page(addr^) := nil;
end;

procedure TServerGate_GenerationContents_Page_marshaller._create(var addr: Pointer);
begin
  IServerGate_GenerationContents_Page(addr^) := TServerGate_GenerationContents_Page_stub.Create();
end;

procedure TServerGate_GenerationContents_Page_marshaller._assign(dst, src: Pointer);
begin
  IServerGate_GenerationContents_Page(dst^) := IServerGate_GenerationContents_Page(src^);
end;

function TServerGate_GenerationContents_Page_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_Page.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_PageFactoryManagerSrv
//***********************************************************
function TServerGate_GenerationContents_PageFactoryManagerSrv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0' then
    begin
      result := Pointer(self as IServerGate_GenerationContents_PageFactoryManagerSrv);
      exit;
    end;
end;

class function TServerGate_GenerationContents_PageFactoryManagerSrv._narrow(const obj : IORBObject): IServerGate_GenerationContents_PageFactoryManagerSrv;
var
  p: Pointer;
  stub: TServerGate_GenerationContents_PageFactoryManagerSrv_stub;
begin
  result := nil;
  if obj = nil then exit;
  p := obj.narrow_helper('IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0');
  if p <> nil then
    result := IServerGate_GenerationContents_PageFactoryManagerSrv(p)
  else
    begin
      if narrow_helper2(obj) or obj._is_a_remote('IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0') then
        begin
          stub := TServerGate_GenerationContents_PageFactoryManagerSrv_stub.Create();
          stub.assign(obj);
          result := stub;
        end;
    end;
end;

class function TServerGate_GenerationContents_PageFactoryManagerSrv.narrow_helper2(const obj: IORBObject): Boolean;
begin
  result := obj._repoid = 'IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0'
end;

//***********************************************************
// TServerGate_GenerationContents_PageFactoryManagerSrv_stub
//***********************************************************
function TServerGate_GenerationContents_PageFactoryManagerSrv_stub.keys: TServerGate_GenerationContents_PageFactoryKeySet;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_seq_string, @result);
  req := StaticRequest(self,'keys');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_stub.get(const guid: TServerGate_GenerationContents_ModelElementId): IServerGate_GenerationContents_Page;
var
  req: IStaticRequest;
  _guid: IStaticAny;
  _result: IStaticAny;
begin
  _guid := StaticAny(stat_string,@guid);
  _result := StaticAny(ServerGate_GenerationContents_Page_marshaller, @result);
  req := StaticRequest(self,'get');
  req.add_in_arg(_guid);
  req.set_result(_result);
  req.set_exceptions_tc([_tc_CoreSrv_NoActiveFactory.typecode]);
  req.invoke;
  dorb_static_throw(req,[CoreSrv_NoActiveFactory_marshaller, 'IDL:garant.ru/CoreSrv/NoActiveFactory:1.0']);
end;

//***********************************************************
// TServerGate_GenerationContents_PageFactoryManagerSrv_stub_clp
//***********************************************************
function TServerGate_GenerationContents_PageFactoryManagerSrv_stub_clp.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0' then
    begin
      result := Pointer(self as IServerGate_GenerationContents_PageFactoryManagerSrv);
      exit;
  end;
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_stub_clp.keys: TServerGate_GenerationContents_PageFactoryKeySet;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_PageFactoryManagerSrv;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_PageFactoryManagerSrv_serv._narrow(_srv);
      if srv <> nil then
        result := srv.keys
    end;
  _postinvoke();
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_stub_clp.get(const guid: TServerGate_GenerationContents_ModelElementId): IServerGate_GenerationContents_Page;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_PageFactoryManagerSrv;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_PageFactoryManagerSrv_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get(guid)
    end;
  _postinvoke();
end;

//***********************************************************
// TServerGate_GenerationContents_PageFactoryManagerSrv_serv
//***********************************************************
function TServerGate_GenerationContents_PageFactoryManagerSrv_serv._this(): IServerGate_GenerationContents_PageFactoryManagerSrv;
var
  obj: IORBObject;
begin
  obj := this();
  result := TServerGate_GenerationContents_PageFactoryManagerSrv._narrow(obj);
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_serv._is_a(const repoid: RepositoryID): Boolean;
begin
  result := repoid = 'IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0';
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_serv._primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID;
begin
  result := 'IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0';
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_serv._make_stub(const poa: IPOA; const obj : IORBObject): IORBObject;
begin
  result := TServerGate_GenerationContents_PageFactoryManagerSrv_stub_clp.Create(poa,obj);
end;

procedure TServerGate_GenerationContents_PageFactoryManagerSrv_serv.invoke(const serv: IStaticServerRequest);
begin
  if not _dispatch(serv) then
    begin
      serv.set_exception(BAD_OPERATION.Create(0, COMPLETED_NO) as IORBException);
      serv.write_results();
    end;
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_serv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0' then
    begin
      result := Pointer(IServerGate_GenerationContents_PageFactoryManagerSrv(self));
      exit;
    end;
end;

class function TServerGate_GenerationContents_PageFactoryManagerSrv_serv._narrow(const srv : IServant): IServerGate_GenerationContents_PageFactoryManagerSrv;
var
  p: Pointer;
begin
  result := nil;
  if srv = nil then exit;
  p := srv.narrow_helper('IDL:garant.ru/ServerGate/GenerationContents/PageFactoryManagerSrv:1.0');
  if p <> nil then
    result := IServerGate_GenerationContents_PageFactoryManagerSrv(p)
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_serv._dispatch(const req: IStaticServerRequest): Boolean;
var
  keys_result: TServerGate_GenerationContents_PageFactoryKeySet;
  get_result: IServerGate_GenerationContents_Page;
  get_guid: TServerGate_GenerationContents_ModelElementId;
begin
  result := true;
  if req.op_name = 'keys' then
    begin
      req.set_result(StaticAny(stat_seq_string,@keys_result) as IStaticAny);
      if not req.read_args() then  exit;
      keys_result := keys;
      req.write_results();
      exit;
    end
  else if req.op_name = 'get' then
    begin
      req.add_in_arg(StaticAny(stat_string,@get_guid) as IStaticAny);
      req.set_result(StaticAny(ServerGate_GenerationContents_Page_marshaller,@get_result) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_CoreSrv_NoActiveFactory.typecode]);
      try
        get_result := get(get_guid);
      except
        on NoActiveFactory: TCoreSrv_NoActiveFactory do
          req.set_exception(TCoreSrv_NoActiveFactory.Create(NoActiveFactory) as IORBException);
      end;
      req.write_results();
      exit;
    end;
  result := false;
end;

//***********************************************************
// TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller
//***********************************************************
function TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  obj: IORBObject;
begin
  result := false;
  if not stat_Object.demarshal(dec,@obj) then exit;
  IServerGate_GenerationContents_PageFactoryManagerSrv(addr^) := TServerGate_GenerationContents_PageFactoryManagerSrv._narrow(obj);
  result := (obj = nil) or (Pointer(addr^) <> nil);
end;

procedure TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  obj: IORBObject;
begin
  obj := IServerGate_GenerationContents_PageFactoryManagerSrv(addr^) as IORBObject;
  stat_Object.marshal(enc,@Pointer(obj));
end;

procedure TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller._free(var addr: Pointer);
begin
  IServerGate_GenerationContents_PageFactoryManagerSrv(addr^) := nil;
end;

procedure TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller._create(var addr: Pointer);
begin
  IServerGate_GenerationContents_PageFactoryManagerSrv(addr^) := TServerGate_GenerationContents_PageFactoryManagerSrv_stub.Create();
end;

procedure TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller._assign(dst, src: Pointer);
begin
  IServerGate_GenerationContents_PageFactoryManagerSrv(dst^) := IServerGate_GenerationContents_PageFactoryManagerSrv(src^);
end;

function TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_PageFactoryManagerSrv.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_Page_seq_marshaller
//***********************************************************

function TServerGate_GenerationContents_Page_seq_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  len: _ulong;
  i: integer;
  val: IServerGate_GenerationContents_Page;
begin
  result := false;
  if not dec.seq_begin(len) then exit;
  SetLength(ServerGate_GenerationContents_Page_seq(addr^),len);
  if len <> 0 then
    for i := 0 to Pred(len) do
      begin
        if not ServerGate_GenerationContents_Page_marshaller.demarshal(dec,@val) then exit;
        ServerGate_GenerationContents_Page_seq(addr^)[i] := val; 
      end;
  if not dec.seq_end() then exit;
  result := true;
end;

procedure TServerGate_GenerationContents_Page_seq_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  len: _ulong;
  i: integer;
begin
  len := Length(ServerGate_GenerationContents_Page_seq(addr^));
  enc.seq_begin(len);
  if len <> 0 then
    for i := 0 to Pred(len) do
      ServerGate_GenerationContents_Page_marshaller.marshal(enc,@ServerGate_GenerationContents_Page_seq(addr^)[i]);
  enc.seq_end;
end;

procedure TServerGate_GenerationContents_Page_seq_marshaller._free(var addr: Pointer);
begin
  setLength(ServerGate_GenerationContents_Page_seq(addr^),0);
  freemem(addr);
end;

procedure TServerGate_GenerationContents_Page_seq_marshaller._create(var addr: Pointer);
begin
  addr := allocmem(sizeOf(_ulong));
end;

procedure TServerGate_GenerationContents_Page_seq_marshaller._assign(dst, src: Pointer);
begin
  _ulong(dst^) := _ulong(src^);
end;

function TServerGate_GenerationContents_Page_seq_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_Page_seq.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManager
//***********************************************************
function TServerGate_GenerationContents_GenerationManager.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0' then
    begin
      result := Pointer(self as IServerGate_GenerationContents_GenerationManager);
      exit;
    end;
end;

class function TServerGate_GenerationContents_GenerationManager._narrow(const obj : IORBObject): IServerGate_GenerationContents_GenerationManager;
var
  p: Pointer;
  stub: TServerGate_GenerationContents_GenerationManager_stub;
begin
  result := nil;
  if obj = nil then exit;
  p := obj.narrow_helper('IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0');
  if p <> nil then
    result := IServerGate_GenerationContents_GenerationManager(p)
  else
    begin
      if narrow_helper2(obj) or obj._is_a_remote('IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0') then
        begin
          stub := TServerGate_GenerationContents_GenerationManager_stub.Create();
          stub.assign(obj);
          result := stub;
        end;
    end;
end;

class function TServerGate_GenerationContents_GenerationManager.narrow_helper2(const obj: IORBObject): Boolean;
begin
  result := obj._repoid = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0'
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManager_stub
//***********************************************************
function TServerGate_GenerationContents_GenerationManager_stub.get_generated_labels: TServerGate_GenerationContents_Labels;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_seq_string, @result);
  req := StaticRequest(self,'get_generated_labels');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

procedure TServerGate_GenerationContents_GenerationManager_stub.set_generated_labels(const generated_labels: TServerGate_GenerationContents_Labels);
var
  req: IStaticRequest;
  _generated_labels: IStaticAny;
begin
  _generated_labels := StaticAny(stat_seq_string,@generated_labels);
  req := StaticRequest(self,'set_generated_labels');
  req.add_in_arg(_generated_labels);
  req.invoke;
  dorb_static_throw(req);
end;

procedure TServerGate_GenerationContents_GenerationManager_stub.begin_generation;
var
  req: IStaticRequest;
begin
  req := StaticRequest(self,'begin_generation');
  req.invoke;
  dorb_static_throw(req);
end;

procedure TServerGate_GenerationContents_GenerationManager_stub.end_generation;
var
  req: IStaticRequest;
begin
  req := StaticRequest(self,'end_generation');
  req.invoke;
  dorb_static_throw(req);
end;

procedure TServerGate_GenerationContents_GenerationManager_stub.commit_all(const pages: TServerGate_GenerationContents_PageList; const is_minor: Boolean);
var
  req: IStaticRequest;
  _pages: IStaticAny;
  _is_minor: IStaticAny;
begin
  _pages := StaticAny(ServerGate_GenerationContents_Page_seq_marshaller,@pages);
  _is_minor := StaticAny(stat_boolean,@is_minor);
  req := StaticRequest(self,'commit_all');
  req.add_in_arg(_pages);
  req.add_in_arg(_is_minor);
  req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_ContentUpdateError.typecode]);
  req.invoke;
  dorb_static_throw(req,[ServerGate_GenerationContents_ReadOnlyContent_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ReadOnlyContent:1.0', ServerGate_GenerationContents_ContentUpdateError_marshaller, 'IDL:garant.ru/ServerGate/GenerationContents/ContentUpdateError:1.0']);
end;

procedure TServerGate_GenerationContents_GenerationManager_stub.rollback_all(const pages: TServerGate_GenerationContents_PageList);
var
  req: IStaticRequest;
  _pages: IStaticAny;
begin
  _pages := StaticAny(ServerGate_GenerationContents_Page_seq_marshaller,@pages);
  req := StaticRequest(self,'rollback_all');
  req.add_in_arg(_pages);
  req.invoke;
  dorb_static_throw(req);
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManager_stub_clp
//***********************************************************
function TServerGate_GenerationContents_GenerationManager_stub_clp.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0' then
    begin
      result := Pointer(self as IServerGate_GenerationContents_GenerationManager);
      exit;
  end;
end;

function TServerGate_GenerationContents_GenerationManager_stub_clp.get_generated_labels: TServerGate_GenerationContents_Labels;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_GenerationManager;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_GenerationManager_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get_generated_labels
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_GenerationManager_stub_clp.set_generated_labels(const generated_labels: TServerGate_GenerationContents_Labels);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_GenerationManager;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_GenerationManager_serv._narrow(_srv);
      if srv <> nil then
        srv.set_generated_labels(generated_labels)
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_GenerationManager_stub_clp.begin_generation;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_GenerationManager;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_GenerationManager_serv._narrow(_srv);
      if srv <> nil then
        srv.begin_generation
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_GenerationManager_stub_clp.end_generation;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_GenerationManager;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_GenerationManager_serv._narrow(_srv);
      if srv <> nil then
        srv.end_generation
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_GenerationManager_stub_clp.commit_all(const pages: TServerGate_GenerationContents_PageList; const is_minor: Boolean);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_GenerationManager;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_GenerationManager_serv._narrow(_srv);
      if srv <> nil then
        srv.commit_all(pages, is_minor)
    end;
  _postinvoke();
end;

procedure TServerGate_GenerationContents_GenerationManager_stub_clp.rollback_all(const pages: TServerGate_GenerationContents_PageList);
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_GenerationManager;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_GenerationManager_serv._narrow(_srv);
      if srv <> nil then
        srv.rollback_all(pages)
    end;
  _postinvoke();
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManager_serv
//***********************************************************
function TServerGate_GenerationContents_GenerationManager_serv._this(): IServerGate_GenerationContents_GenerationManager;
var
  obj: IORBObject;
begin
  obj := this();
  result := TServerGate_GenerationContents_GenerationManager._narrow(obj);
end;

function TServerGate_GenerationContents_GenerationManager_serv._is_a(const repoid: RepositoryID): Boolean;
begin
  result := repoid = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0';
end;

function TServerGate_GenerationContents_GenerationManager_serv._primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID;
begin
  result := 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0';
end;

function TServerGate_GenerationContents_GenerationManager_serv._make_stub(const poa: IPOA; const obj : IORBObject): IORBObject;
begin
  result := TServerGate_GenerationContents_GenerationManager_stub_clp.Create(poa,obj);
end;

procedure TServerGate_GenerationContents_GenerationManager_serv.invoke(const serv: IStaticServerRequest);
begin
  if not _dispatch(serv) then
    begin
      serv.set_exception(BAD_OPERATION.Create(0, COMPLETED_NO) as IORBException);
      serv.write_results();
    end;
end;

function TServerGate_GenerationContents_GenerationManager_serv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0' then
    begin
      result := Pointer(IServerGate_GenerationContents_GenerationManager(self));
      exit;
    end;
end;

class function TServerGate_GenerationContents_GenerationManager_serv._narrow(const srv : IServant): IServerGate_GenerationContents_GenerationManager;
var
  p: Pointer;
begin
  result := nil;
  if srv = nil then exit;
  p := srv.narrow_helper('IDL:garant.ru/ServerGate/GenerationContents/GenerationManager:1.0');
  if p <> nil then
    result := IServerGate_GenerationContents_GenerationManager(p)
end;

function TServerGate_GenerationContents_GenerationManager_serv._dispatch(const req: IStaticServerRequest): Boolean;
var
  get_generated_labels_result: TServerGate_GenerationContents_Labels;
  set_generated_labels_generated_labels: TServerGate_GenerationContents_Labels;
  commit_all_pages: TServerGate_GenerationContents_PageList;
  commit_all_is_minor: Boolean;
  rollback_all_pages: TServerGate_GenerationContents_PageList;
begin
  result := true;
  if req.op_name = 'get_generated_labels' then
    begin
      req.set_result(StaticAny(stat_seq_string,@get_generated_labels_result) as IStaticAny);
      if not req.read_args() then  exit;
      get_generated_labels_result := get_generated_labels;
      req.write_results();
      exit;
    end
  else if req.op_name = 'set_generated_labels' then
    begin
      req.add_in_arg(StaticAny(stat_seq_string,@set_generated_labels_generated_labels) as IStaticAny);
      if not req.read_args() then  exit;
      set_generated_labels(set_generated_labels_generated_labels);
      req.write_results();
      exit;
    end
  else if req.op_name = 'begin_generation' then
    begin
      if not req.read_args() then  exit;
      begin_generation;
      req.write_results();
      exit;
    end
  else if req.op_name = 'end_generation' then
    begin
      if not req.read_args() then  exit;
      end_generation;
      req.write_results();
      exit;
    end
  else if req.op_name = 'commit_all' then
    begin
      req.add_in_arg(StaticAny(ServerGate_GenerationContents_Page_seq_marshaller,@commit_all_pages) as IStaticAny);
      req.add_in_arg(StaticAny(stat_boolean,@commit_all_is_minor) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_ServerGate_GenerationContents_ReadOnlyContent.typecode, _tc_ServerGate_GenerationContents_ContentUpdateError.typecode]);
      try
        commit_all(commit_all_pages, commit_all_is_minor);
      except
        on ReadOnlyContent: TServerGate_GenerationContents_ReadOnlyContent do
          req.set_exception(TServerGate_GenerationContents_ReadOnlyContent.Create(ReadOnlyContent) as IORBException);
        on ContentUpdateError: TServerGate_GenerationContents_ContentUpdateError do
          req.set_exception(TServerGate_GenerationContents_ContentUpdateError.Create(ContentUpdateError) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'rollback_all' then
    begin
      req.add_in_arg(StaticAny(ServerGate_GenerationContents_Page_seq_marshaller,@rollback_all_pages) as IStaticAny);
      if not req.read_args() then  exit;
      rollback_all(rollback_all_pages);
      req.write_results();
      exit;
    end;
  result := false;
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManager_marshaller
//***********************************************************
function TServerGate_GenerationContents_GenerationManager_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  obj: IORBObject;
begin
  result := false;
  if not stat_Object.demarshal(dec,@obj) then exit;
  IServerGate_GenerationContents_GenerationManager(addr^) := TServerGate_GenerationContents_GenerationManager._narrow(obj);
  result := (obj = nil) or (Pointer(addr^) <> nil);
end;

procedure TServerGate_GenerationContents_GenerationManager_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  obj: IORBObject;
begin
  obj := IServerGate_GenerationContents_GenerationManager(addr^) as IORBObject;
  stat_Object.marshal(enc,@Pointer(obj));
end;

procedure TServerGate_GenerationContents_GenerationManager_marshaller._free(var addr: Pointer);
begin
  IServerGate_GenerationContents_GenerationManager(addr^) := nil;
end;

procedure TServerGate_GenerationContents_GenerationManager_marshaller._create(var addr: Pointer);
begin
  IServerGate_GenerationContents_GenerationManager(addr^) := TServerGate_GenerationContents_GenerationManager_stub.Create();
end;

procedure TServerGate_GenerationContents_GenerationManager_marshaller._assign(dst, src: Pointer);
begin
  IServerGate_GenerationContents_GenerationManager(dst^) := IServerGate_GenerationContents_GenerationManager(src^);
end;

function TServerGate_GenerationContents_GenerationManager_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_GenerationManager.typecode;
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv
//***********************************************************
function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0' then
    begin
      result := Pointer(self as IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv);
      exit;
    end;
end;

class function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv._narrow(const obj : IORBObject): IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv;
var
  p: Pointer;
  stub: TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub;
begin
  result := nil;
  if obj = nil then exit;
  p := obj.narrow_helper('IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0');
  if p <> nil then
    result := IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(p)
  else
    begin
      if narrow_helper2(obj) or obj._is_a_remote('IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0') then
        begin
          stub := TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub.Create();
          stub.assign(obj);
          result := stub;
        end;
    end;
end;

class function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv.narrow_helper2(const obj: IORBObject): Boolean;
begin
  result := obj._repoid = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0'
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub
//***********************************************************
function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub.get: IServerGate_GenerationContents_GenerationManager;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(ServerGate_GenerationContents_GenerationManager_marshaller, @result);
  req := StaticRequest(self,'get');
  req.set_result(_result);
  req.set_exceptions_tc([_tc_CoreSrv_NoActiveFactory.typecode]);
  req.invoke;
  dorb_static_throw(req,[CoreSrv_NoActiveFactory_marshaller, 'IDL:garant.ru/CoreSrv/NoActiveFactory:1.0']);
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub_clp
//***********************************************************
function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub_clp.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0' then
    begin
      result := Pointer(self as IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv);
      exit;
  end;
end;

function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub_clp.get: IServerGate_GenerationContents_GenerationManager;
var
  _srv: IServant;
  srv: IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv._narrow(_srv);
      if srv <> nil then
        result := srv.get
    end;
  _postinvoke();
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv
//***********************************************************
function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv._this(): IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv;
var
  obj: IORBObject;
begin
  obj := this();
  result := TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv._narrow(obj);
end;

function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv._is_a(const repoid: RepositoryID): Boolean;
begin
  result := repoid = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0';
end;

function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv._primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID;
begin
  result := 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0';
end;

function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv._make_stub(const poa: IPOA; const obj : IORBObject): IORBObject;
begin
  result := TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub_clp.Create(poa,obj);
end;

procedure TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv.invoke(const serv: IStaticServerRequest);
begin
  if not _dispatch(serv) then
    begin
      serv.set_exception(BAD_OPERATION.Create(0, COMPLETED_NO) as IORBException);
      serv.write_results();
    end;
end;

function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0' then
    begin
      result := Pointer(IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(self));
      exit;
    end;
end;

class function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv._narrow(const srv : IServant): IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv;
var
  p: Pointer;
begin
  result := nil;
  if srv = nil then exit;
  p := srv.narrow_helper('IDL:garant.ru/ServerGate/GenerationContents/GenerationManagerFactoryManagerSrv:1.0');
  if p <> nil then
    result := IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(p)
end;

function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_serv._dispatch(const req: IStaticServerRequest): Boolean;
var
  get_result: IServerGate_GenerationContents_GenerationManager;
begin
  result := true;
  if req.op_name = 'get' then
    begin
      req.set_result(StaticAny(ServerGate_GenerationContents_GenerationManager_marshaller,@get_result) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_CoreSrv_NoActiveFactory.typecode]);
      try
        get_result := get;
      except
        on NoActiveFactory: TCoreSrv_NoActiveFactory do
          req.set_exception(TCoreSrv_NoActiveFactory.Create(NoActiveFactory) as IORBException);
      end;
      req.write_results();
      exit;
    end;
  result := false;
end;

//***********************************************************
// TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller
//***********************************************************
function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  obj: IORBObject;
begin
  result := false;
  if not stat_Object.demarshal(dec,@obj) then exit;
  IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(addr^) := TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv._narrow(obj);
  result := (obj = nil) or (Pointer(addr^) <> nil);
end;

procedure TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  obj: IORBObject;
begin
  obj := IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(addr^) as IORBObject;
  stat_Object.marshal(enc,@Pointer(obj));
end;

procedure TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller._free(var addr: Pointer);
begin
  IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(addr^) := nil;
end;

procedure TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller._create(var addr: Pointer);
begin
  IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(addr^) := TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_stub.Create();
end;

procedure TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller._assign(dst, src: Pointer);
begin
  IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(dst^) := IServerGate_GenerationContents_GenerationManagerFactoryManagerSrv(src^);
end;

function TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller.typecode: ITypeCode;
begin
  result := _tc_ServerGate_GenerationContents_GenerationManagerFactoryManagerSrv.typecode;
end;

initialization
{!touched!}{$IfDef LogInit} WriteLn('W:\common\components\rtl\Garant\DUnitTuning\KPageTest2\GenerationContents.pas initialization enter'); {$EndIf}
  ServerGate_GenerationContents_TransactionConflict_marshaller := TServerGate_GenerationContents_TransactionConflict_marshaller.Create();
  ServerGate_GenerationContents_NavigationArea_marshaller := TServerGate_GenerationContents_NavigationArea_marshaller.Create();
  ServerGate_GenerationContents_NavigationArea_seq_marshaller := TServerGate_GenerationContents_NavigationArea_seq_marshaller.Create();
  ServerGate_GenerationContents_Diagram_marshaller := TServerGate_GenerationContents_Diagram_marshaller.Create();
  ServerGate_GenerationContents_ReadOnlyContent_marshaller := TServerGate_GenerationContents_ReadOnlyContent_marshaller.Create();
  ServerGate_GenerationContents_ContentUpdateError_marshaller := TServerGate_GenerationContents_ContentUpdateError_marshaller.Create();
  ServerGate_GenerationContents_PathNotValid_marshaller := TServerGate_GenerationContents_PathNotValid_marshaller.Create();
  ServerGate_GenerationContents_PropertyMapEntry_marshaller := TServerGate_GenerationContents_PropertyMapEntry_marshaller.Create();
  ServerGate_GenerationContents_PropertyMapEntry_seq_marshaller := TServerGate_GenerationContents_PropertyMapEntry_seq_marshaller.Create();
  ServerGate_GenerationContents_Page_marshaller := TServerGate_GenerationContents_Page_marshaller.Create();
  ServerGate_GenerationContents_PageFactoryManagerSrv_marshaller := TServerGate_GenerationContents_PageFactoryManagerSrv_marshaller.Create();
  ServerGate_GenerationContents_Page_seq_marshaller := TServerGate_GenerationContents_Page_seq_marshaller.Create();
  ServerGate_GenerationContents_GenerationManager_marshaller := TServerGate_GenerationContents_GenerationManager_marshaller.Create();
  ServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller := TServerGate_GenerationContents_GenerationManagerFactoryManagerSrv_marshaller.Create();
  _tc_ServerGate_GenerationContents_TransactionConflict := CreateTypeCodeConst('010000001600000068000000010000004400000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f5472616e73616374696f6e436f6e666c6963743a312e3000140000005472616e73616374696f6e436f6e666c6963'+
    '740000000000');
  _tc_ServerGate_GenerationContents_NavigationArea := CreateTypeCodeConst('010000000f00000038010000010000003f00000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f4e617669676174696f6e417265613a312e3000000f0000004e617669676174696f6e417265610000090000000300'+
    '00007831000003000000030000007931000003000000030000007832000003000000030000007932000003000000030000007833000003'+
    '00000003000000793300000300000003000000783400000300000003000000793400000300000005000000677569640000000015000000'+
    '64000000010000003f00000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e436f6e74656e7473'+
    '2f4d6f64656c456c656d656e7449643a312e3000000f0000004d6f64656c456c656d656e74496400001200000000000000');
  _tc_ServerGate_GenerationContents_NavigationArea_seq := CreateTypeCodeConst('010000001300000048010000010000000f00000038010000010000003f00000049444c3a676172616e742e72752f536572766572476174'+
    '652f47656e65726174696f6e436f6e74656e74732f4e617669676174696f6e417265613a312e3000000f0000004e617669676174696f6e'+
    '41726561000009000000030000007831000003000000030000007931000003000000030000007832000003000000030000007932000003'+
    '00000003000000783300000300000003000000793300000300000003000000783400000300000003000000793400000300000005000000'+
    '67756964000000001500000064000000010000003f00000049444c3a676172616e742e72752f536572766572476174652f47656e657261'+
    '74696f6e436f6e74656e74732f4d6f64656c456c656d656e7449643a312e3000000f0000004d6f64656c456c656d656e74496400001200'+
    '00000000000000000000');
  _tc_ServerGate_GenerationContents_Diagram := CreateTypeCodeConst('010000000f00000094020000010000003800000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f4469616772616d3a312e3000080000004469616772616d0003000000080000007069637475726500150000006000'+
    '0000010000003100000049444c3a676172616e742e72752f536572766572476174652f436f6e74656e74732f427974654275666665723a'+
    '312e30000000000b000000427974654275666665720000130000000c000000010000000a00000000000000040000006d61700015000000'+
    'ac010000010000003e00000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e436f6e74656e7473'+
    '2f4e617669676174696f6e4d61703a312e300000000e0000004e617669676174696f6e4d61700000001300000048010000010000000f00'+
    '000038010000010000003f00000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e436f6e74656e'+
    '74732f4e617669676174696f6e417265613a312e3000000f0000004e617669676174696f6e417265610000090000000300000078310000'+
    '03000000030000007931000003000000030000007832000003000000030000007932000003000000030000007833000003000000030000'+
    '00793300000300000003000000783400000300000003000000793400000300000005000000677569640000000015000000640000000100'+
    '00003f00000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e436f6e74656e74732f4d6f64656c'+
    '456c656d656e7449643a312e3000000f0000004d6f64656c456c656d656e74496400001200000000000000000000000500000068617368'+
    '000000001200000000000000');
  _tc_ServerGate_GenerationContents_ReadOnlyContent := CreateTypeCodeConst('010000001600000060000000010000004000000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f526561644f6e6c79436f6e74656e743a312e300010000000526561644f6e6c79436f6e74656e740000000000');
  _tc_ServerGate_GenerationContents_ContentUpdateError := CreateTypeCodeConst('010000001600000068000000010000004300000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f436f6e74656e745570646174654572726f723a312e30000013000000436f6e74656e745570646174654572726f72'+
    '000000000000');
  _tc_ServerGate_GenerationContents_PathNotValid := CreateTypeCodeConst('010000001600000060000000010000003d00000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f506174684e6f7456616c69643a312e30000000000d000000506174684e6f7456616c69640000000000000000');
  _tc_ServerGate_GenerationContents_PropertyMapEntry := CreateTypeCodeConst('010000000f0000000c010000010000004100000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f50726f70657274794d6170456e7472793a312e30000000001100000050726f70657274794d6170456e7472790000'+
    '000002000000040000006b65790012000000000000000c000000737472696e675f6c69737400150000007c000000010000004100000049'+
    '444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e436f6e74656e74732f50726f706572747944617461'+
    '4c6973743a312e30000000001100000050726f7065727479446174614c69737400000000130000001000000001000000120000000000000000000000');
  _tc_ServerGate_GenerationContents_PropertyMapEntry_seq := CreateTypeCodeConst('01000000130000001c010000010000000f0000000c010000010000004100000049444c3a676172616e742e72752f536572766572476174'+
    '652f47656e65726174696f6e436f6e74656e74732f50726f70657274794d6170456e7472793a312e30000000001100000050726f706572'+
    '74794d6170456e7472790000000002000000040000006b65790012000000000000000c000000737472696e675f6c69737400150000007c'+
    '000000010000004100000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e436f6e74656e74732f'+
    '50726f7065727479446174614c6973743a312e30000000001100000050726f7065727479446174614c6973740000000013000000100000'+
    '000100000012000000000000000000000000000000');
  _tc_ServerGate_GenerationContents_Page := CreateTypeCodeConst('010000000e00000049000000010000003500000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f506167653a312e3000000000050000005061676500');
  _tc_ServerGate_GenerationContents_PageFactoryManagerSrv := CreateTypeCodeConst('010000000e0000006a000000010000004600000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f50616765466163746f72794d616e616765725372763a312e300000001600000050616765466163746f72794d616e'+
    '6167657253727600');
  _tc_ServerGate_GenerationContents_Page_seq := CreateTypeCodeConst('01000000130000005c000000010000000e00000049000000010000003500000049444c3a676172616e742e72752f536572766572476174'+
    '652f47656e65726174696f6e436f6e74656e74732f506167653a312e300000000005000000506167650000000000000000');
  _tc_ServerGate_GenerationContents_GenerationManager := CreateTypeCodeConst('010000000e00000062000000010000004200000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f47656e65726174696f6e4d616e616765723a312e300000001200000047656e65726174696f6e4d616e6167657200');
  _tc_ServerGate_GenerationContents_GenerationManagerFactoryManagerSrv := CreateTypeCodeConst('010000000e00000083000000010000005300000049444c3a676172616e742e72752f536572766572476174652f47656e65726174696f6e'+
    '436f6e74656e74732f47656e65726174696f6e4d616e61676572466163746f72794d616e616765725372763a312e300000230000004765'+
    '6e65726174696f6e4d616e61676572466163746f72794d616e6167657253727600');
{!touched!}{$IfDef LogInit} WriteLn('W:\common\components\rtl\Garant\DUnitTuning\KPageTest2\GenerationContents.pas initialization leave'); {$EndIf}
end.
