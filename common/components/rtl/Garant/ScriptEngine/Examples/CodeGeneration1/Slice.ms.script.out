VOID TestWithDump SliceTest
 SliceTest
 DumpElement
 2
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
 ]
 Array:Slice
 (
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 2
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
 ]
 Array:Slice
 .
 3
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
 ]
 Array:Slice
 (
  .
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 3
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
 ]
 Array:Slice
 .
 '------'
 .
 2
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
 ]
 Array:Slice
 Array:Reverted
 (
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 2
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
 ]
 Array:Slice
 Array:Reverted
 .
 3
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
 ]
 Array:Slice
 Array:Reverted
 (
  .
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 3
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
 ]
 Array:Slice
 Array:Reverted
 .
 '------'
 .
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
 ]
 .slice>
 2
 (
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
 ]
 .slice>
 3
 (
  .
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 '------'
 .
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
 ]
 .slice>
 2
 Array:Reverted
 (
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 ARRAY [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
 ]
 .slice>
 3
 Array:Reverted
 (
  .
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 '------'
 .
 [ 1 2 3 4 5 6 7 8 9 10 >slice>
 2
 (
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 [ 1 2 3 4 5 6 7 8 9 10 11 12 >slice>
 3
 (
  .
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 '------'
 .
 [ 1 2 3 4 5 6 7 8 9 10 >slice>
 2
 Array:Reverted
 (
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 [ 1 2 3 4 5 6 7 8 9 10 11 12 >slice>
 3
 Array:Reverted
 (
  .
  .
  .
  '--'
  .
 )
 SWAP
 Array:Iterate
 '------'
 .
; // VOID TestWithDump SliceTest

2
1
--
4
3
--
6
5
--
8
7
--
10
9
--
[ { 1 2 } { 3 4 } { 5 6 } { 7 8 } { 9 10 } ]
3
2
1
--
6
5
4
--
9
8
7
--
12
11
10
--
[ { 1 2 3 } { 4 5 6 } { 7 8 9 } { 10 11 12 } ]
------
9
10
--
7
8
--
5
6
--
3
4
--
1
2
--
[ { 10 9 } { 8 7 } { 6 5 } { 4 3 } { 2 1 } ]
10
11
12
--
7
8
9
--
4
5
6
--
1
2
3
--
[ { 12 11 10 } { 9 8 7 } { 6 5 4 } { 3 2 1 } ]
------
2
1
--
4
3
--
6
5
--
8
7
--
10
9
--
3
2
1
--
6
5
4
--
9
8
7
--
12
11
10
--
------
9
10
--
7
8
--
5
6
--
3
4
--
1
2
--
10
11
12
--
7
8
9
--
4
5
6
--
1
2
3
--
------
2
1
--
4
3
--
6
5
--
8
7
--
10
9
--
3
2
1
--
6
5
4
--
9
8
7
--
12
11
10
--
------
9
10
--
7
8
--
5
6
--
3
4
--
1
2
--
10
11
12
--
7
8
9
--
4
5
6
--
1
2
3
--
------
