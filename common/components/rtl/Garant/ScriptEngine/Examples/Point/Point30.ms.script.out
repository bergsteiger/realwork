[ 0 0 ]
[ 0 0 ]
[ 1 1 ]
[ 2 2 ]
[ 2 2 ]
[ 3 3 ]
[ -1 -1 ]
[ 1 1 ]
[ -2 -2 ]
[ -1 -1 ]
VOID Test PointTest
 INTEGER CONST c:Point:CoordCount
  2
 IMMEDIATE VOID OPERATOR class
  ^L IN aName
  'Object'
  Ctx:Parser:PushSymbol
  'type'
  Ctx:Parser:PushSymbol
  aName
  |N
  Ctx:Parser:PushSymbol
 ; // IMMEDIATE VOID OPERATOR class
 
 IMMEDIATE VOID OPERATOR constructor
  ^L IN aName
  constructor
  Ctx:SetWordProducerForCompiledClass
  ':'
  Ctx:Parser:PushSymbol
  aName
  |N
  Ctx:Parser:PushSymbol
 ; // IMMEDIATE VOID OPERATOR constructor
 
 IMMEDIATE VOID TYPE FieldOffset
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE FieldOffset
 
 IMMEDIATE VOID OPERATOR method
  ^L IN aName
  method
  Ctx:SetWordProducerForCompiledClass
  ':'
  Ctx:Parser:PushSymbol
  aName
  |N
  Ctx:Parser:PushSymbol
 ; // IMMEDIATE VOID OPERATOR method
 
 IMMEDIATE VOID TYPE Object
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object
 
 Point VAR P1
 Point VAR P10
 Point VAR P2
 Point VAR P3
 Point VAR P4
 Point VAR P5
 Point VAR P6
 Point VAR P7
 Point VAR P8
 Point VAR P9
 IMMEDIATE VOID TYPE Pixel
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Pixel
 
 IMMEDIATE VOID TYPE PixelList
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE PixelList
 
 IMMEDIATE VOID TYPE Point
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Point
 
 Point constructor Point:
  ^ IN aX
  ^ IN aY
  [
   aX |^
   aY |^
  ]
  Result
  pop:Word:SetValue
 ; // Point constructor Point:
 
 Point method Point:-
  ^ IN aPoint
  FieldOffset VAR i
  Point IN Self
  0
  i
  pop:Word:SetValuePrim
  [
   (
    aPoint |@
    DO
   )
   DO
   (
    Pixel IN aPx
    aPx
    i
    Self
    Array:Item
    SWAP
    -
    INC
    i
   )
   SWAP
   Array:Iterate
  ]
  Result
  pop:Word:SetValue
 ; // Point method Point:-
 
 Point method Point:+
  ^ IN aPoint
  FieldOffset VAR i
  Point IN Self
  0
  i
  pop:Word:SetValuePrim
  [
   (
    aPoint |@
    DO
   )
   DO
   (
    Pixel IN aPx
    aPx
    i
    Self
    Array:Item
    +
    INC
    i
   )
   SWAP
   Array:Iterate
  ]
  Result
  pop:Word:SetValue
 ; // Point method Point:+
 
 Point constructor Point:0
  [
   0
   0
  ]
  Result
  pop:Word:SetValue
 ; // Point constructor Point:0
 
 Point method Point:Neg
  Point IN Self
  [
   Self
   DO
   (
    Pixel IN aPx
    aPx
    0
    SWAP
    -
   )
   SWAP
   Array:Iterate
  ]
  Result
  pop:Word:SetValue
 ; // Point method Point:Neg
 
 Point constructor Point:OF
  ^ IN aPoint
  [
   (
    aPoint |@
    DO
   )
   DO
   (
    Pixel IN aPx
    aPx
   )
   SWAP
   Array:Iterate
  ]
  Result
  pop:Word:SetValue
  (
   Result
   Array:Count
   =
   c:Point:CoordCount
  )
  ?ASSURE
  '“очка должна содержать две координаты'
 ; // Point constructor Point:OF
 
 VOID method Point:Print
  Point IN aPoint
  aPoint
  .
 ; // VOID method Point:Print
 
 Point constructor Point:XY
  ^ IN aPoint
  [
   aPoint |@
   DO
  ]
  Result
  pop:Word:SetValue
  (
   Result
   Array:Count
   =
   c:Point:CoordCount
  )
  ?ASSURE
  '“очка должна содержать две координаты'
 ; // Point constructor Point:XY
 
 Point:0
 P1
 pop:Word:SetValuePrim
 Point:0
 P2
 pop:Word:SetValuePrim
 Point:
 1
 1
 P3
 pop:Word:SetValuePrim
 Point:XY
 (
  2
  2
 )
 P4
 pop:Word:SetValuePrim
 Point:OF
 P4
 P5
 pop:Word:SetValuePrim
 (
  P3
  Point:+
  P4
 )
 P6
 pop:Word:SetValue
 (
  P3
  Point:-
  P4
 )
 P7
 pop:Word:SetValue
 (
  P4
  Point:-
  P3
 )
 P8
 pop:Word:SetValue
 (
  P4
  Point:Neg
 )
 P9
 pop:Word:SetValue
 (
  P3
  Point:Neg
 )
 P10
 pop:Word:SetValue
 P1
 Point:Print
 P2
 Point:Print
 P3
 Point:Print
 P4
 Point:Print
 P5
 Point:Print
 P6
 Point:Print
 P7
 Point:Print
 P8
 Point:Print
 P9
 Point:Print
 P10
 Point:Print
 PointTest
 DumpElement
; // VOID Test PointTest

