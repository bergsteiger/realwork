VOID Test PointTest
 IMMEDIATE VOID NamedWordProducer %FIELDS
  %FIELDS
  Ctx:SetWordProducerForCompiledClass
  '%Fld'
  Ctx:SetNewWordName
  @
  OPERATOR
  DO
 ; // IMMEDIATE VOID NamedWordProducer %FIELDS
 
 ARRAY FUNCTION %G
  IN %S
  (
   '%G'
   %S
   ELEMLIST
  )
  Result
  pop:Word:SetValue
 ; // ARRAY FUNCTION %G
 
 ARRAY FUNCTION %R
  IN %S
  (
   '%R'
   %S
   ELEMLIST
  )
  Result
  pop:Word:SetValue
 ; // ARRAY FUNCTION %R
 
 class_impl _:Object
  %FIELDS %Fld
  ; // %FIELDS %Fld
  
 ; // class_impl _:Object
 
 class_impl _:Point
  %FIELDS %Fld
  ; // %FIELDS %Fld
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
 ; // class_impl _:Point
 
 INTEGER CONST c:Object:Instance:Size
  1
 INTEGER CONST c:Object:Offset:VMT
  0
 INTEGER CONST c:Point:Instance:Size
  3
 INTEGER CONST c:Point:Offset:X
  1
 INTEGER CONST c:Point:Offset:Y
  2
 IMMEDIATE VOID OPERATOR class
  ^L IN aName
  aName
  |N
  g_CurrentClass
  pop:Word:SetValue
  [
   ':'
   @
   class_impl
   Ctx:SetWordProducerForCompiledClass
   [
    '_:'
    g_CurrentClass
   ]
   strings:Cat
   g_CurrentClassImpl
   pop:Word:SetValue
   g_CurrentClassImpl
   if
    (
     g_CurrentClass
     <>
     'Object'
    )
   then
    BEGIN
     '%INHERITS'
     '@'
     [
      '_:'
      'Object'
     ]
     strings:Cat
     ';'
    END
   '%FIELDS'
   ';'
   ';'
  ]
  Ctx:Parser:PushArray
  [
   'array'
   'type'
   g_CurrentClass
  ]
  Ctx:Parser:PushArray
  'classExpander'
  Ctx:Parser:PushSymbol
 ; // IMMEDIATE VOID OPERATOR class
 
 IMMEDIATE VOID OPERATOR class_impl
 ; // IMMEDIATE VOID OPERATOR class_impl
 
 IMMEDIATE VOID OPERATOR classExpander
 ; // IMMEDIATE VOID OPERATOR classExpander
 
 IMMEDIATE VOID OPERATOR constructor
  ^L IN aName
  constructor
  Ctx:SetWordProducerForCompiledClass
  g_CurrentClass
  Ctx:Parser:PushSymbol
  aName
  |N
  MakeMethodSignature
 ; // IMMEDIATE VOID OPERATOR constructor
 
 PRIVATE OPERATOR do-get-member
  STRING IN aName
  'FieldByOffset'
  Ctx:Parser:PushSymbol
  aName
  MakeFieldOffsetName
  Ctx:Parser:PushSymbol
 ; // PRIVATE OPERATOR do-get-member
 
 OBJECT FUNCTION DoMember
  OBJECT IN aMember
  aMember
  DO
  Result
  pop:Word:SetValue
 ; // OBJECT FUNCTION DoMember
 
 ARRAY FUNCTION ELEMLIST
  IN %S
  STRING IN aListName
  if
   (
    %S
    NotValid
   )
  then
   (
    [
    ]
    Result
    pop:Word:SetValuePrim
   )
  else
   (
    VAR l_List
    (
     %S
     %%
     aListName
    )
    l_List
    pop:Word:SetValue
    if
     (
      l_List
      NotValid
     )
    then
     (
      [
      ]
      Result
      pop:Word:SetValuePrim
     )
    else
     (
      (
       @
       FilterMember
       (
        @
        DoMember
        (
         l_List
         pop:Word:CodeIterator
        )
        Array:Map
       )
       Array:Filter
      )
      Result
      pop:Word:SetValue
     )
   )
 ; // ARRAY FUNCTION ELEMLIST
 
 : FieldByOffset
  ^ IN _anOffset
  IMMEDIATE VOID OPERATOR anOffset
   '_anOffset'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR anOffset
  
  Object IN Self
  (
   _anOffset |^
  )
  Self
  Array:Item
 ; // : FieldByOffset
 
 IMMEDIATE VOID TYPE FieldOffset
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE FieldOffset
 
 BOOLEAN FUNCTION FilterMember
  OBJECT IN aMember
  (
   aMember
   NotValid
   !
  )
  Result
  pop:Word:SetValue
 ; // BOOLEAN FUNCTION FilterMember
 
 INTEGER VAR g_ClassFieldOffset
 STRING VAR g_CurrentClass
 STRING VAR g_CurrentClassImpl
 ARRAY VAR g_CurrentClassMembers
 STRING : getClassName
  IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : getClassName
 
 IMMEDIATE VOID OPERATOR get-member
  ^L IN aName
  aName
  |N
  do-get-member
 ; // IMMEDIATE VOID OPERATOR get-member
 
 ARRAY VAR l_Points
 PRIVATE STRING OPERATOR MakeFieldOffsetName
  STRING IN aName
  [
   'c:'
   g_CurrentClass
   ':Offset:'
   aName
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // PRIVATE STRING OPERATOR MakeFieldOffsetName
 
 PRIVATE VOID OPERATOR MakeMethodSignature
  STRING IN aName
  ':'
  Ctx:Parser:PushSymbol
  [
   g_CurrentClass
   ':'
   aName
  ]
  strings:Cat
  Ctx:Parser:PushSymbol
 ; // PRIVATE VOID OPERATOR MakeMethodSignature
 
 PRIVATE VOID OPERATOR MakeSelfParam
  g_CurrentClass
  Ctx:Parser:PushSymbol
  'in'
  Ctx:Parser:PushSymbol
  'Self'
  Ctx:Parser:PushSymbol
 ; // PRIVATE VOID OPERATOR MakeSelfParam
 
 IMMEDIATE VOID OPERATOR member
  ^L IN aName
  'private'
  Ctx:Parser:PushSymbol
  'Const'
  Ctx:Parser:PushSymbol
  aName
  |N
  MakeFieldOffsetName
  Ctx:Parser:PushSymbol
  g_ClassFieldOffset
  Ctx:Parser:PushInt
  INC
  g_ClassFieldOffset
  aName
  |N
  >>>[]
  g_CurrentClassMembers
 ; // IMMEDIATE VOID OPERATOR member
 
 IMMEDIATE VOID OPERATOR members-end
  'private'
  Ctx:Parser:PushSymbol
  'Const'
  Ctx:Parser:PushSymbol
  [
   'c:'
   g_CurrentClass
   ':Instance:Size'
  ]
  strings:Cat
  Ctx:Parser:PushSymbol
  g_ClassFieldOffset
  Ctx:Parser:PushInt
 ; // IMMEDIATE VOID OPERATOR members-end
 
 IMMEDIATE VOID OPERATOR method
  ^L IN aName
  method
  Ctx:SetWordProducerForCompiledClass
  aName
  |N
  MakeMethodSignature
  MakeSelfParam
 ; // IMMEDIATE VOID OPERATOR method
 
 IMMEDIATE VOID OPERATOR new[
  '['
  Ctx:Parser:PushSymbol
  '@'
  Ctx:Parser:PushSymbol
  g_CurrentClassImpl
  Ctx:Parser:PushSymbol
 ; // IMMEDIATE VOID OPERATOR new[
 
 Object VAR O1
 IMMEDIATE VOID TYPE Object
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object
 
 TtfwWord readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  c:Object:Offset:VMT
  Result
  pop:Word:SetValue
 ; // TtfwWord readonly Object:class
 
 STRING readonly Object:ClassName
  Object IN Self
  Self
  Object:class
  getClassName
  Result
  pop:Word:SetValue
 ; // STRING readonly Object:ClassName
 
 Point VAR P1
 Point VAR P10
 Point VAR P2
 Point VAR P3
 Point VAR P4
 Point VAR P5
 Point VAR P6
 Point VAR P7
 Point VAR P8
 Point VAR P9
 IMMEDIATE VOID TYPE Pixel
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Pixel
 
 IMMEDIATE VOID TYPE PixelList
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE PixelList
 
 IMMEDIATE VOID TYPE Point
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Point
 
 Point method Point:-
  ^ IN _aPoint
  IMMEDIATE VOID OPERATOR aPoint
   '_aPoint'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aPoint
  
  Point IN Self
  Point:OF
  (
   Self
   Point:+
   (
    (
     _aPoint |^
    )
    Point:Neg
   )
  )
  Result
  pop:Word:SetValue
 ; // Point method Point:-
 
 Point constructor Point::
  ^ IN aX
  ^ IN aY
  [
   @
   _:Point
   aX |^
   aY |^
  ]
  Result
  pop:Word:SetValue
 ; // Point constructor Point::
 
 Point method Point:+
  ^ IN _aPoint
  IMMEDIATE VOID OPERATOR aPoint
   '_aPoint'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aPoint
  
  Point IN Self
  Point::
  (
   Self
   Point:X
   (+)
   (
    (
     _aPoint |^
    )
    Point:X
   )
  )
  (
   Self
   Point:Y
   (+)
   (
    (
     _aPoint |^
    )
    Point:Y
   )
  )
  Result
  pop:Word:SetValue
 ; // Point method Point:+
 
 Point constructor Point:0
  Point::
  0
  0
  Result
  pop:Word:SetValue
 ; // Point constructor Point:0
 
 Point method Point:Neg
  Point IN Self
  Point::
  Neg
  (
   Self
   Point:X
  )
  Neg
  (
   Self
   Point:Y
  )
  Result
  pop:Word:SetValue
 ; // Point method Point:Neg
 
 Point constructor Point:OF
  ^ IN _aPoint
  IMMEDIATE VOID OPERATOR aPoint
   '_aPoint'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aPoint
  
  Point::
  (
   (
    _aPoint |^
   )
   Point:X
  )
  (
   (
    _aPoint |^
   )
   Point:Y
  )
  Result
  pop:Word:SetValue
 ; // Point constructor Point:OF
 
 VOID method Point:Print
  Point IN Self
  [
   '( '
   'X: '
   Self
   Point:X
   ToPrintable
   ', Y: '
   Self
   Point:Y
   ToPrintable
   ' )'
  ]
  strings:Cat
  .
 ; // VOID method Point:Print
 
 Pixel readonly Point:X
  Point IN Self
  Self
  FieldByOffset
  c:Point:Offset:X
  Result
  pop:Word:SetValue
 ; // Pixel readonly Point:X
 
 Point constructor Point:XY
  ^ IN _aPoint
  IMMEDIATE VOID OPERATOR aPoint
   '_aPoint'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aPoint
  
  ARRAY VAR Points
  [
   (
    _aPoint |^
   )
  ]
  Points
  pop:Word:SetValue
  Point::
  (
   Points
   FieldByOffset
   0
  )
  (
   Points
   FieldByOffset
   1
  )
  Result
  pop:Word:SetValue
 ; // Point constructor Point:XY
 
 Pixel readonly Point:Y
  Point IN Self
  Self
  FieldByOffset
  c:Point:Offset:Y
  Result
  pop:Word:SetValue
 ; // Pixel readonly Point:Y
 
 IMMEDIATE VOID OPERATOR read
  ^L IN aName
  'Self'
  Ctx:Parser:PushSymbol
  aName
  |N
  do-get-member
  '>>>'
  Ctx:Parser:PushSymbol
  'Result'
  Ctx:Parser:PushSymbol
  ';'
  Ctx:Parser:PushSymbol
 ; // IMMEDIATE VOID OPERATOR read
 
 IMMEDIATE VOID OPERATOR readonly
  ^L IN aName
  readonly
  Ctx:SetWordProducerForCompiledClass
  aName
  |N
  MakeMethodSignature
  MakeSelfParam
 ; // IMMEDIATE VOID OPERATOR readonly
 
 ''
 g_CurrentClass
 pop:Word:SetValuePrim
 ''
 g_CurrentClassImpl
 pop:Word:SetValuePrim
 0
 g_ClassFieldOffset
 pop:Word:SetValuePrim
 (
  [
  ]
  g_CurrentClassMembers
  pop:Word:SetValuePrim
 )
 PointTest
 DumpElement
 Point:0
 P1
 pop:Word:SetValuePrim
 Point:0
 P2
 pop:Word:SetValuePrim
 Point::
 1
 1
 P3
 pop:Word:SetValuePrim
 Point:XY
 (
  2
  2
 )
 P4
 pop:Word:SetValuePrim
 Point:OF
 P4
 P5
 pop:Word:SetValuePrim
 (
  P3
  Point:+
  P4
 )
 P6
 pop:Word:SetValue
 (
  P3
  Point:-
  P4
 )
 P7
 pop:Word:SetValue
 (
  P4
  Point:-
  P3
 )
 P8
 pop:Word:SetValue
 (
  P4
  Point:Neg
 )
 P9
 pop:Word:SetValue
 (
  P3
  Point:Neg
 )
 P10
 pop:Word:SetValue
 P1
 O1
 pop:Word:SetValuePrim
 O1
 Point:Print
 [
  P1
  P2
  P3
  P4
  P5
  P6
  P7
  P8
  P9
  P10
 ]
 l_Points
 pop:Word:SetValue
 l_Points
 DO
 Point:Print
 SWAP
 Array:Iterate
 l_Points
 DO
 (
  Point:X
  .
 )
 SWAP
 Array:Iterate
 l_Points
 DO
 (
  Point:Y
  .
 )
 SWAP
 Array:Iterate
 l_Points
 DO
 (
  Object:class
  .
 )
 SWAP
 Array:Iterate
 l_Points
 DO
 (
  Object:ClassName
  .
 )
 SWAP
 Array:Iterate
 l_Points
 DO
 (
  (
   Object:class
   %G
  )
  DO
  (
   getClassName
   .
  )
  SWAP
  Array:Iterate
 )
 SWAP
 Array:Iterate
 'Hello '
 (+)
 'world'
 .
 'Hello '
 (+)
 'world'
 .
 'Hello '
 (+)
 'world'
 .
 1
 (+)
 2
 .
 10
 (+)
 20
 .
 0
 (-)
 10
 .
 Neg
 10
 .
 Neg
 -10
 .
; // VOID Test PointTest

( X: 0, Y: 0 )
( X: 0, Y: 0 )
( X: 0, Y: 0 )
( X: 1, Y: 1 )
( X: 2, Y: 2 )
( X: 2, Y: 2 )
( X: 3, Y: 3 )
( X: -1, Y: -1 )
( X: 1, Y: 1 )
( X: -2, Y: -2 )
( X: -1, Y: -1 )
0
0
1
2
2
3
-1
1
-2
-1
0
0
1
2
2
3
-1
1
-2
-1
TkwCompiledProcedure
TkwCompiledProcedure
TkwCompiledProcedure
TkwCompiledProcedure
TkwCompiledProcedure
TkwCompiledProcedure
TkwCompiledProcedure
TkwCompiledProcedure
TkwCompiledProcedure
TkwCompiledProcedure
Point
Point
Point
Point
Point
Point
Point
Point
Point
Point
Object
Object
Object
Object
Object
Object
Object
Object
Object
Object
Hello world
Hello world
Hello world
3
30
-10
-10
10
