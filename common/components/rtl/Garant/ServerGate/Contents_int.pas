// ***************************************************************************
//                                                                            
// Generated by the MTDORB IDL-to-Pascal Translator (1.0.1b1), 27.06.2011 16:45
//                                                                            
// Copyright (c) 2002 - 2004                                                  
// Millennium Group.                                                          
// Samara, Russia                                                             
//                                                                            
// All Rights Reserved                                                        
//                                                                            
// ***************************************************************************
// Compiled with parameters: " -ishura shura/Contents.idl" 
//                                                                            
unit Contents_int;

{$MINENUMSIZE 4}

interface

uses
  orbtypes, code_int, orb_int, RootSrv_int, except_int;

type

// module ServerGate types

// module Contents types

  IServerGate_Contents_PageNotFound = interface(IUserException)
  ['{FC0C0EF3-55A5-4947-98E4-5EDA76505217}']
  end;

  IServerGate_Contents_CantCreatePage = interface(IUserException)
  ['{BD7BD7E9-BC98-44FD-9C37-EA4CD308B4DF}']
  end;

  IServerGate_Contents_PermissionException = interface(IUserException)
  ['{6352230A-0114-459F-9A67-099A2A46F61B}']
  end;

  TServerGate_Contents_PageId = longlong;

  TServerGate_Contents_MetadataEntity = record
    key : AnsiString;
    value : AnsiString;
  end;

  TServerGate_Contents_MetadataEntityList = Array of TServerGate_Contents_MetadataEntity;

  TServerGate_Contents_ByteBuffer = Array of octet;

  IServerGate_Contents_KPage = interface
  ['{7D3860B9-187F-43C9-ABCD-9311E141D827}']
    function get_name: AnsiString;
    function get_id: TServerGate_Contents_PageId;
    procedure _free;
    function get_metadata(const name: AnsiString): AnsiString;
    procedure set_metadata(const name: AnsiString; const value: AnsiString);
    procedure append_wiki_text(const text: AnsiString);
    function get_wiki_text: AnsiString;
    function get_labels: AnsiString;
    procedure set_labels(const labels: AnsiString);
    procedure set_wiki_text(const wiki: AnsiString);
    procedure set_name(const name: AnsiString);
    procedure add_metadata(const metas: TServerGate_Contents_MetadataEntityList);
    procedure add_attachment(const name: AnsiString; const byte_stream: TServerGate_Contents_ByteBuffer; const content_type: AnsiString);
    procedure simulate_viewpage_action(const current_user_password: AnsiString);
  end;

  IServerGate_Contents_KPageFactoryManagerSrv = interface
  ['{2F33B56A-ACBC-43AD-9535-861162B74629}']
    function _create(const name: AnsiString; const parent: IServerGate_Contents_KPage): IServerGate_Contents_KPage;
    function get(const page_id: TServerGate_Contents_PageId): IServerGate_Contents_KPage;
    function get_by_name_and_space(const name: AnsiString; const spacekey: AnsiString): IServerGate_Contents_KPage;
    function get_by_model_element_guid(const guid: AnsiString): IServerGate_Contents_KPage;
  end;

  TServerGate_Contents_RequestImportance = (
    CRITICAL,
    MAJOR,
    NORMAL,
    MINIOR
  );

  TServerGate_Contents_RequestType = (
    InternalError
  );

  IServerGate_Contents_PageIsNotRequest = interface(IUserException)
  ['{D40BB554-6FA5-4F78-9954-DAD627D79AA8}']
  end;

  IServerGate_Contents_CantChangeState = interface(IUserException)
  ['{798B2494-169A-49AB-AF5A-3117BD19A0F3}']
  end;

  IServerGate_Contents_Request = interface(IServerGate_Contents_KPage)
  ['{A2C4E63A-D748-4882-9A79-B3D8E2D7E477}']
    function get_state: AnsiString;
    procedure post_event(const event: AnsiString);
  end;

  IServerGate_Contents_RequestFactoryManagerSrv = interface
  ['{83D5C4C1-E624-45B0-8624-66CA4AA103C3}']
    function get_by_name_and_space(const name: AnsiString; const spacekey: AnsiString): IServerGate_Contents_Request;
    function get(const page_id: TServerGate_Contents_PageId): IServerGate_Contents_Request;
    function _create(const _type: TServerGate_Contents_RequestType; const importance: TServerGate_Contents_RequestImportance; const name: AnsiString; const parent: IServerGate_Contents_KPage): IServerGate_Contents_Request;
  end;

implementation

end.
