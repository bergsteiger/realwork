{*******************************************************}
{                                                       }
{               Delphi DBX Framework                    }
{                                                       }
{ Copyright(c) 1995-2013 Embarcadero Technologies, Inc. }
{                                                       }
{*******************************************************}

unit Data.DBXCommonResStrs;

interface

const
  PackageVersion = '170';
  AssemblyVersion = '17.0.0.0';

resourcestring
  SBadVariantType = 'Unsupported variant type: %s';
  SAlreadyRegistered        = '%s class already registered';
  SNotRegistered            = '%s class is not registered';
  SInvalidClassRegister     = '%s class registered with a nil class reference';
  SInvalidClassName         = '%s class cannot be found in %s';
  SCannotFreeClassRegistry  = 'Cannot free TClassRegistry.ClassRegistry';
  SDllLoadError       = 'Unable to load %s (ErrorCode %d).  It may be missing from the system path.';
  SDllProcLoadError   = 'Unable to find procedure %s';
  SUnknownDriver      = 'Unknown driver:  %s';
  SInvalidArgument    = 'Invalid argument:  %s';
  SInvalidTransaction = 'Invalid transaction Object';
  SNotImplemented     = 'Feature not implemented';
  SRequiredProperty   = '%s property not set';
  SDriverLoadError    = '%s driver cannot be loaded.  Make sure your project either uses the %s unit or uses packages so the %s package can be loaded dynamically';
  SReaderNew          = 'Reader Next method has not been called';
  SReaderClosed       = 'Reader has no more rows';
  SReadOnlyType       = '%s type cannot be modified';
  SReadOnlyParameter  = '%s parameter cannot be modified';
  SSetSingletonOnce     = 'Cannot set this singleton instance more than once or after it has been retrieved one or more times';
  SConnectionFactoryInitFailed  = 'Cannot find connection files from application directory (%s) or the system registry (%s).';
  SInvalidDelegationDepth       = 'Cannot delegate a connection more than 16 times:  %s';
  SInvalidOrdinal     = 'Invalid Ordinal:  %d';
  SDefaultErrorMessage          = 'DBX Error:  %s';
  SErrorCode          = 'Error Code:  ';
  SAlreadyPrepared    = 'Command can only be prepared once';
  SInvalidTypeAccess  = '%s value type cannot be accessed as %s value type';
  SDriverAlreadyLoaded = 'A driver instance with the %s name has already been loaded.';
  SConnectionClosed = 'Operation failed.  Connection was closed';
  SMetaDataLoadError = 'Could not find metadata: %s; package: %s. Add %s to your uses.';
  SJSONByteStream = 'JSON byte stream cannot be parsed correctly into a JSON value';
  SNoStatementToExecute = 'No statement to execute';
  SAdditionalInfo = '%s.  Vendor error message:  %s.';
  SInvalidDataType = 'dbExpress driver does not support the %s data type';
  SUnmatchedBrace = 'Unmatched brace found in format string: %s';
  SParameterIndexOutOfRange = 'Unmatched brace found in format string: %d';
  SConnectTimeout = 'Connect request timed out after %s milliseconds';
  SInvalidCommand = 'Unrecognized command:  %s';
  SINVALID_TRACE_FLAG       =
    '%s is an invalid setting for the %s property.'#13#10
    +'Use ''%s'' or a semicolon separated list of one or more of the following:'#13#10
    +'%s %s %s %s %s %s %s %s %s %s %s %s';
  SFieldValueMissing = 'Internal: Field %s has no serialized value';
  SFieldExpected = 'Internal: Field %s conversion is incomplete';
  SArrayExpected = 'Internal: Array expected instead of %s';
  SNoArray = 'Internal: Array expected instead of nil';
  STypeExpected = 'Internal: Type expected';
  STypeFieldsPairExpected = 'Internal: Type fields pair expected';
  SValueExpected = 'Internal: JSON value expected instead of %s';
  SInvalidContext = 'Internal: Current context cannot accept a value';
  SObjectExpectedForPair = 'Internal: Object context expected when processing a pair';
  SInvalidContextForPair = 'Internal: Current context cannot accept a pair';
  STypeNotSupported = 'Internal: Type %s is not currently supported';
  SNoTypeInterceptorExpected = 'Field attribute should provide a field interceptor instead of a type one on field %s';
  SInconsistentConversion = 'Internal: Conversion failed, converted object is most likely incomplete';
  SNoConversionForType = 'Internal: No conversion possible for type: %s';
  SNoFieldFoundForType = 'Internal: Field %s cannot be found in type %s';
  SNoValueConversionForField = 'Internal: Value %s cannot be converted to be assigned to field %s in type %s';
  SNoConversionAvailableForValue = 'Value %s cannot be converted into %s. You may use a user-defined reverter';
  SInvalidTypeForField = 'Cannot set value for field %s as it is expected to be an array instead of %s';
  SCannotCreateType = 'Internal: Cannot instantiate type %s';
  SCannotCreateObject = 'The input value is not a valid Object';
  SObjectNotFound = 'Internal: Object type %s not found for id: %s';
  SUnexpectedPairName = 'Internal: Invalid pair name %s: expected %s or %s';
  SInvalidJSONFieldType = 'Un-marshaled array cannot be set as a field value. A reverter may be missing for field %s of %s';
  SObjectExpectedInArray = 'Object expected at position %d in JSON array %s';
  SStringExpectedInArray = 'String expected at position %d in JSON array %s';
  SArrayExpectedForField = 'JSON array expected for field %s in JSON %s';
  SObjectExpectedForField = 'JSON object expected for field %s in JSON %s';
  SStringExpectedForField = 'JSON string expected for field %s in JSON %s';
  SNoProductNameFound = 'No Product name found for Data Provider. No metadata can be provided.';
  SNoDialectForProduct = 'No metadata could be loaded for: %s.';
  SDialectTypeNotFound = 'Could not locate the type: %s.';
  SBeforeRow = 'Invoke Next before getting data from a reader.';
  SAfterRow = 'No more data in reader.';
  SUnknownDataType = 'Unknown Data Type';
  SNoMetadataProvider = 'Cannot load metadata for %s.';
  SUnexpectedMetaDataType = 'Unexpected metadata type';
  SInsertNotCalled = 'Must call Insert before Post.';
  SPostNotCalled = 'Must call Post before moving away from a new row.';
  SEditNotCalled = 'Must call Edit before table can be modified.';
  SMustKeepOriginalColumnOrder = 'Additional columns must be added after the prescribed columns.';
  SObjectNotSupported = 'Objecta are not supported with this metadata store.';
  SUnexpectedDataType = 'Unexpected data type %s';
  SDriverAlreadyRegistered = 'Driver already registered:  ';
  SNotDefinedIn = 'No "%s" defined in %s';
  SDBXErrNone = 'None';
  SDBXErrWarning = 'Warning';
  SDBXErrNoMemory = 'Insufficient memory to complete the operation';
  SDBXErrUnsupportedFieldType = 'Unsupported field type';
  SDBXErrInvalidHandle = 'Unexpected internal error. DBX Object such as a connection, command, or reader may already be closed.';
  SDBXErrNotSupported = 'Not supported';
  SDBXErrInvalidTime = 'Invalid time';
  SDBXErrInvalidType = 'Invalid type';
  SDBXErrInvalidOrdinal = 'Invalid ordinal';
  SDBXErrInvalidParameter = 'Invalid parameter';
  SDBXErrEOF = 'No more rows';
  SDBXErrParameterNotSet = 'Parameter not set';
  SDBXErrInvalidUserOrPassword = 'Invalid username or password';
  SDBXErrInvalidPrecision = 'Invalid precision';
  SDBXErrInvalidLength = 'Invalid length';
  SDBXErrInvalidIsolationLevel = 'Invalid isolation level';
  SDBXErrInvalidTransactionId = 'Invalid transaction id';
  SDBXErrDuplicateTransactionId = 'Duplicate transaction id';
  SDBXErrDriverRestricted = 'Driver restricted';
  SDBXErrTransactionActive = 'Transaction active';
  SDBXErrMultipleTransactionNotEnabled = 'Multiple transaction not enabled';
  SDBXErrConnectionFailed = 'Connection failed';
  SDBXErrDriverInitFailed = 'Driver could not be properly initialized.  Client library may be missing, not installed properly, of the wrong version, or the driver may be missing from the system path.';
  SDBXErrOptimisticLockFailed = 'Optimistic lock failed';
  SDBXErrInvalidReference = 'Invalid reference';
  SDBXErrNoTable = 'No table';
  SDBXErrMissingParameterMarker = 'Missing parameter marker';
  SDBXErrNotImplemented = 'Not implemented';
  SDBXErrDriverIncompatible = 'Driver incompatible';
  SDBXErrInvalidArgument = 'Invalid argument';
  SDBXErrNoData = 'No data';
  SDBXErrVendorError = 'Vendor error';
  SDBXErrUnrecognizedCommandType = 'Unrecognized command type.';
  SDBXErrSchemaNameUnspecified = 'Schema or user name separated by a ''.'' must be specified.';
  SDBXErrDatabaseUnspecified = 'Database must be specified.';
  SDBXErrLibraryNameUnspecified = 'LibraryName must be specified.';
  SDBXErrGetDriverFuncUnspecified = 'GetDriverFunc must be specified.';
  SDBXErrVendorLibUnspecified = 'VendorLib must be specified';
  SInvalidOrderByColumn = 'Table cannot use column %s in an order by operation since it does not exist';
  SIllegalArgument = 'Illegal argument';
  SUnsupportedOperation = 'Unsupported operation';
  SUnexpectedStringOverflow = 'Unexpected string overflow.  Length(''%s'') >= %s)';
  SUTF8InvalidHeaderByte = 'UTF8: Type cannot be determined out of header byte at position %s';
  SUTF8UnexpectedByte = 'UTF8: An unexpected continuation byte in %s-byte UTF8 in position %s';
  SUTF8Start = 'UTF8: A start byte not followed by enough continuation bytes in position %s';
  SInvalidJsonStream = 'Cannot convert JSON input into a stream';
  SNoConversionToJSON = 'Cannot convert DBX type %s into a JSON value';
  SNoConversionToDBX = 'Cannot convert JSON value %s input into %s';
  SNoJSONConversion = 'No conversion exists for JSON value %s';
  SIsLiteralSupported = 'Literal Supported';
  SDataType = 'Platform Type Name';
  SCatalogName = 'Catalog Name';
  SProcedureType = 'Procedure Type';
  SUnclosedQuotes = 'Unclosed quotes were found in the metadata query: %s.';
  SDefaultValue = 'Default Value';
  SForeignKeyName = 'Foreign Key Name';
  SIndexName = 'Index Name';
  SIsUnsigned = 'Unsigned';
  SIsUnique = 'Unique';
  SPrimaryKeyName = 'Primary Key Name';
  SIsAscending = 'Ascending';
  SOrdinalOutOfRange = 'Ordinal is outside the bounds of this cursor.';
  SScale = 'Scale';
  SColumnName = 'Column Name';
  STableSchemaName = 'Table Schema Name';
  SPrimaryColumnName = 'Primary Column Name';
  SOrdinal = 'Ordinal';
  SWrongAccessorForType = 'Wrong accessor method used for the datatype: %s.';
  SIsCaseSensitive = 'Case Sensitive';
  SMinimumVersion = 'Minimum Version';
  SIsSearchableWithLike = 'Searchable With Like';
  SCreateParameters = 'Create Parameters';
  SPackageName = 'Package Name';
  SParameterMode = 'Parameter Mode';
  SPrecision = 'Precision';
  SIsBestMatch = 'Best Match';
  SMissingImplementation = 'This method must be implemented in a derived class.';
  SNoSchemaNameSpecified = 'No schema name specified.';
  SMaximumVersion = 'Maximum Version';
  SIsAutoIncrement = 'Auto Increment';
  SLiteralSuffix = 'Literal Suffix';
  SCreateFormat = 'Create Format';
  SSchemaName = 'Schema Name';
  SIsConcurrencyType = 'Concurrency';
  SReservedWord = 'Reserved Word';
  SPrimaryCatalogName = 'Primary Catalog Name';
  SUserName = 'User Name';
  SExternalDefinition = 'External Definition';
  STypeName = 'Type Name';
  SIsNullable = 'Nullable';
  SProviderDbType = 'Provider Type';
  SIsFixedLength = 'Fixed Length';
  SIsSearchable = 'Searchable';
  SConstraintName = 'Constraint Name';
  SUnknownSchemaName = 'Unknown schema name specified: %s';
  SParameterName = 'Parameter Name';
  STableType = 'Table Type';
  SViewName = 'View Name';
  SMinimumScale = 'Minimum Scale';
  SColumnSize = 'Column Size';
  SIsUnicode = 'Unicode';
  SIsFixedPrecisionScale = 'Fixed Precision';
  SUnexpectedSymbol = 'Could not parse the %1:s metadata command. Problem found near: %0:s. Original query: %2:s.';
  SUnknownTableType = 'Unknown table type specified:';
  SMetaDataCommandExpected = 'A MetaData command was expected here e.g. GetTables.';
  SLiteralPrefix = 'Literal Prefix';
  SIsPrimary = 'Primary';
  SSynonymName = 'Synonym Name';
  SRoleName = 'Role Name';
  STableCatalogName = 'Table Catalog Name';
  SMaximumScale = 'Maximum Scale';
  SPrimarySchemaName = 'Primary Schema Name';
  SMustCallNextFirst = 'Cursor is positioned before the first row, move to the next row before getting data';
  SDbxDataType = 'DbxType';
  SIsLong = 'Long';
  SPrimaryTableName = 'Primary Table Name';
  SMaxInline = 'Max Inline';
  STableName = 'Table Name';
  SProcedureName = 'Procedure Name';
  SIsAutoIncrementable = 'AutoIncrementable';
  SPastEndOfCursor = 'No more data.';
  SDefinition = 'Definition';
  SNoTypeWithEnoughPrecision = 'The best type match in %s for the column: %s is %s. But it is does not have sufficient precision.';
  SCannotBeUsedForAutoIncrement = 'The best type match in %s for the column: %s is %s. But is cannot be used for an auto increment column.';
  SNoBlobTypeFound = 'No long %2:s type found for the column: %1:s in %0:s.';
  STypeNameNotFound = 'Data type: %s is not recognized for SQL dialect.';
  SWrongViewDefinition = 'A view definition must start with the CREATE keyword.';
  SNoSignedTypeFound = 'The best type match in %s for the column: %s is %s. But it is unsigned.';
  SCannotHoldWantedPrecision = 'The best type match in %s for the column: %s is %s. But the max precision is: %s which is less than the specified: %s.';
  SCannotHoldWantedScale = 'The best type match in %s for the column: %s is %s. But the max scale is: %s which is less than the specified: %s.';
  STypeNotFound = 'No %2:s type found for the column: %1:s in %0:s.';
  SCannotHoldUnicodeChars = 'The best type match in %s for the column: %s is %s. But it cannot hold unicode characters.';
  SCannotRecreateConstraint = 'The constraint: %s could not be recreated, because the column: %s was dropped.';
  SUnknownColumnName = 'The Data type: %s requires a column: %s, which does not exist on the Column collection.';
  SUnsupportedType = 'Unsupported data type:  %s';
  SParameterNotSet = 'Parameter not set for column number %s';
  SInvalidHandle = 'Invalid Handle';
  SUnexpectedIndex = 'Unexpected index: %d';

implementation

end.
