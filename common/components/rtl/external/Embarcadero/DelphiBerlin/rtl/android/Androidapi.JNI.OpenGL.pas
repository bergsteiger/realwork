{*******************************************************}
{                                                       }
{           CodeGear Delphi Runtime Library             }
{ Copyright(c) 2016 Embarcadero Technologies, Inc.      }
{              All rights reserved                      }
{                                                       }
{*******************************************************}

unit Androidapi.JNI.OpenGL;

interface

uses
  Androidapi.JNIBridge,
  Androidapi.JNI.GraphicsContentViewText,
  Androidapi.JNI.JavaTypes,
  Androidapi.JNI.Util;

type
// ===== Forward declarations =====

  JEGL14 = interface;//android.opengl.EGL14
  JEGLObjectHandle = interface;//android.opengl.EGLObjectHandle
  Jopengl_EGLConfig = interface;//android.opengl.EGLConfig
  Jopengl_EGLContext = interface;//android.opengl.EGLContext
  Jopengl_EGLDisplay = interface;//android.opengl.EGLDisplay
  JEGLExt = interface;//android.opengl.EGLExt
  Jopengl_EGLSurface = interface;//android.opengl.EGLSurface
  JETC1 = interface;//android.opengl.ETC1
  JETC1Util = interface;//android.opengl.ETC1Util
  JETC1Util_ETC1Texture = interface;//android.opengl.ETC1Util$ETC1Texture
  JGLDebugHelper = interface;//android.opengl.GLDebugHelper
  JGLES10 = interface;//android.opengl.GLES10
  JGLES10Ext = interface;//android.opengl.GLES10Ext
  JGLES11 = interface;//android.opengl.GLES11
  JGLES11Ext = interface;//android.opengl.GLES11Ext
  JGLES20 = interface;//android.opengl.GLES20
  JGLES30 = interface;//android.opengl.GLES30
  JGLES31 = interface;//android.opengl.GLES31
  JGLES31Ext = interface;//android.opengl.GLES31Ext
  JGLES31Ext_DebugProcKHR = interface;//android.opengl.GLES31Ext$DebugProcKHR
  JGLException = interface;//android.opengl.GLException
  JGLSurfaceView = interface;//android.opengl.GLSurfaceView
  JGLSurfaceView_EGLConfigChooser = interface;//android.opengl.GLSurfaceView$EGLConfigChooser
  JGLSurfaceView_EGLContextFactory = interface;//android.opengl.GLSurfaceView$EGLContextFactory
  JGLSurfaceView_EGLWindowSurfaceFactory = interface;//android.opengl.GLSurfaceView$EGLWindowSurfaceFactory
  JGLSurfaceView_GLWrapper = interface;//android.opengl.GLSurfaceView$GLWrapper
  JGLSurfaceView_Renderer = interface;//android.opengl.GLSurfaceView$Renderer
  JGLU = interface;//android.opengl.GLU
  JGLUtils = interface;//android.opengl.GLUtils
  Jopengl_Matrix = interface;//android.opengl.Matrix
  JVisibility = interface;//android.opengl.Visibility

// ===== Interface declarations =====

  JEGL14Class = interface(JObjectClass)
    ['{9310A9F9-6946-402D-8221-860ED16B719D}']
    {class} function _GetEGL_ALPHA_MASK_SIZE: Integer; cdecl;
    {class} function _GetEGL_ALPHA_SIZE: Integer; cdecl;
    {class} function _GetEGL_BACK_BUFFER: Integer; cdecl;
    {class} function _GetEGL_BAD_ACCESS: Integer; cdecl;
    {class} function _GetEGL_BAD_ALLOC: Integer; cdecl;
    {class} function _GetEGL_BAD_ATTRIBUTE: Integer; cdecl;
    {class} function _GetEGL_BAD_CONFIG: Integer; cdecl;
    {class} function _GetEGL_BAD_CONTEXT: Integer; cdecl;
    {class} function _GetEGL_BAD_CURRENT_SURFACE: Integer; cdecl;
    {class} function _GetEGL_BAD_DISPLAY: Integer; cdecl;
    {class} function _GetEGL_BAD_MATCH: Integer; cdecl;
    {class} function _GetEGL_BAD_NATIVE_PIXMAP: Integer; cdecl;
    {class} function _GetEGL_BAD_NATIVE_WINDOW: Integer; cdecl;
    {class} function _GetEGL_BAD_PARAMETER: Integer; cdecl;
    {class} function _GetEGL_BAD_SURFACE: Integer; cdecl;
    {class} function _GetEGL_BIND_TO_TEXTURE_RGB: Integer; cdecl;
    {class} function _GetEGL_BIND_TO_TEXTURE_RGBA: Integer; cdecl;
    {class} function _GetEGL_BLUE_SIZE: Integer; cdecl;
    {class} function _GetEGL_BUFFER_DESTROYED: Integer; cdecl;
    {class} function _GetEGL_BUFFER_PRESERVED: Integer; cdecl;
    {class} function _GetEGL_BUFFER_SIZE: Integer; cdecl;
    {class} function _GetEGL_CLIENT_APIS: Integer; cdecl;
    {class} function _GetEGL_COLOR_BUFFER_TYPE: Integer; cdecl;
    {class} function _GetEGL_CONFIG_CAVEAT: Integer; cdecl;
    {class} function _GetEGL_CONFIG_ID: Integer; cdecl;
    {class} function _GetEGL_CONFORMANT: Integer; cdecl;
    {class} function _GetEGL_CONTEXT_CLIENT_TYPE: Integer; cdecl;
    {class} function _GetEGL_CONTEXT_CLIENT_VERSION: Integer; cdecl;
    {class} function _GetEGL_CONTEXT_LOST: Integer; cdecl;
    {class} function _GetEGL_CORE_NATIVE_ENGINE: Integer; cdecl;
    {class} function _GetEGL_DEFAULT_DISPLAY: Integer; cdecl;
    {class} function _GetEGL_DEPTH_SIZE: Integer; cdecl;
    {class} function _GetEGL_DISPLAY_SCALING: Integer; cdecl;
    {class} function _GetEGL_DRAW: Integer; cdecl;
    {class} function _GetEGL_EXTENSIONS: Integer; cdecl;
    {class} function _GetEGL_FALSE: Integer; cdecl;
    {class} function _GetEGL_GREEN_SIZE: Integer; cdecl;
    {class} function _GetEGL_HEIGHT: Integer; cdecl;
    {class} function _GetEGL_HORIZONTAL_RESOLUTION: Integer; cdecl;
    {class} function _GetEGL_LARGEST_PBUFFER: Integer; cdecl;
    {class} function _GetEGL_LEVEL: Integer; cdecl;
    {class} function _GetEGL_LUMINANCE_BUFFER: Integer; cdecl;
    {class} function _GetEGL_LUMINANCE_SIZE: Integer; cdecl;
    {class} function _GetEGL_MATCH_NATIVE_PIXMAP: Integer; cdecl;
    {class} function _GetEGL_MAX_PBUFFER_HEIGHT: Integer; cdecl;
    {class} function _GetEGL_MAX_PBUFFER_PIXELS: Integer; cdecl;
    {class} function _GetEGL_MAX_PBUFFER_WIDTH: Integer; cdecl;
    {class} function _GetEGL_MAX_SWAP_INTERVAL: Integer; cdecl;
    {class} function _GetEGL_MIN_SWAP_INTERVAL: Integer; cdecl;
    {class} function _GetEGL_MIPMAP_LEVEL: Integer; cdecl;
    {class} function _GetEGL_MIPMAP_TEXTURE: Integer; cdecl;
    {class} function _GetEGL_MULTISAMPLE_RESOLVE: Integer; cdecl;
    {class} function _GetEGL_MULTISAMPLE_RESOLVE_BOX: Integer; cdecl;
    {class} function _GetEGL_MULTISAMPLE_RESOLVE_BOX_BIT: Integer; cdecl;
    {class} function _GetEGL_MULTISAMPLE_RESOLVE_DEFAULT: Integer; cdecl;
    {class} function _GetEGL_NATIVE_RENDERABLE: Integer; cdecl;
    {class} function _GetEGL_NATIVE_VISUAL_ID: Integer; cdecl;
    {class} function _GetEGL_NATIVE_VISUAL_TYPE: Integer; cdecl;
    {class} function _GetEGL_NONE: Integer; cdecl;
    {class} function _GetEGL_NON_CONFORMANT_CONFIG: Integer; cdecl;
    {class} function _GetEGL_NOT_INITIALIZED: Integer; cdecl;
    {class} function _GetEGL_NO_CONTEXT: Jopengl_EGLContext; cdecl;
    {class} procedure _SetEGL_NO_CONTEXT(Value: Jopengl_EGLContext); cdecl;
    {class} function _GetEGL_NO_DISPLAY: Jopengl_EGLDisplay; cdecl;
    {class} procedure _SetEGL_NO_DISPLAY(Value: Jopengl_EGLDisplay); cdecl;
    {class} function _GetEGL_NO_SURFACE: Jopengl_EGLSurface; cdecl;
    {class} procedure _SetEGL_NO_SURFACE(Value: Jopengl_EGLSurface); cdecl;
    {class} function _GetEGL_NO_TEXTURE: Integer; cdecl;
    {class} function _GetEGL_OPENGL_API: Integer; cdecl;
    {class} function _GetEGL_OPENGL_BIT: Integer; cdecl;
    {class} function _GetEGL_OPENGL_ES2_BIT: Integer; cdecl;
    {class} function _GetEGL_OPENGL_ES_API: Integer; cdecl;
    {class} function _GetEGL_OPENGL_ES_BIT: Integer; cdecl;
    {class} function _GetEGL_OPENVG_API: Integer; cdecl;
    {class} function _GetEGL_OPENVG_BIT: Integer; cdecl;
    {class} function _GetEGL_OPENVG_IMAGE: Integer; cdecl;
    {class} function _GetEGL_PBUFFER_BIT: Integer; cdecl;
    {class} function _GetEGL_PIXEL_ASPECT_RATIO: Integer; cdecl;
    {class} function _GetEGL_PIXMAP_BIT: Integer; cdecl;
    {class} function _GetEGL_READ: Integer; cdecl;
    {class} function _GetEGL_RED_SIZE: Integer; cdecl;
    {class} function _GetEGL_RENDERABLE_TYPE: Integer; cdecl;
    {class} function _GetEGL_RENDER_BUFFER: Integer; cdecl;
    {class} function _GetEGL_RGB_BUFFER: Integer; cdecl;
    {class} function _GetEGL_SAMPLES: Integer; cdecl;
    {class} function _GetEGL_SAMPLE_BUFFERS: Integer; cdecl;
    {class} function _GetEGL_SINGLE_BUFFER: Integer; cdecl;
    {class} function _GetEGL_SLOW_CONFIG: Integer; cdecl;
    {class} function _GetEGL_STENCIL_SIZE: Integer; cdecl;
    {class} function _GetEGL_SUCCESS: Integer; cdecl;
    {class} function _GetEGL_SURFACE_TYPE: Integer; cdecl;
    {class} function _GetEGL_SWAP_BEHAVIOR: Integer; cdecl;
    {class} function _GetEGL_SWAP_BEHAVIOR_PRESERVED_BIT: Integer; cdecl;
    {class} function _GetEGL_TEXTURE_2D: Integer; cdecl;
    {class} function _GetEGL_TEXTURE_FORMAT: Integer; cdecl;
    {class} function _GetEGL_TEXTURE_RGB: Integer; cdecl;
    {class} function _GetEGL_TEXTURE_RGBA: Integer; cdecl;
    {class} function _GetEGL_TEXTURE_TARGET: Integer; cdecl;
    {class} function _GetEGL_TRANSPARENT_BLUE_VALUE: Integer; cdecl;
    {class} function _GetEGL_TRANSPARENT_GREEN_VALUE: Integer; cdecl;
    {class} function _GetEGL_TRANSPARENT_RED_VALUE: Integer; cdecl;
    {class} function _GetEGL_TRANSPARENT_RGB: Integer; cdecl;
    {class} function _GetEGL_TRANSPARENT_TYPE: Integer; cdecl;
    {class} function _GetEGL_TRUE: Integer; cdecl;
    {class} function _GetEGL_VENDOR: Integer; cdecl;
    {class} function _GetEGL_VERSION: Integer; cdecl;
    {class} function _GetEGL_VERTICAL_RESOLUTION: Integer; cdecl;
    {class} function _GetEGL_VG_ALPHA_FORMAT: Integer; cdecl;
    {class} function _GetEGL_VG_ALPHA_FORMAT_NONPRE: Integer; cdecl;
    {class} function _GetEGL_VG_ALPHA_FORMAT_PRE: Integer; cdecl;
    {class} function _GetEGL_VG_ALPHA_FORMAT_PRE_BIT: Integer; cdecl;
    {class} function _GetEGL_VG_COLORSPACE: Integer; cdecl;
    {class} function _GetEGL_VG_COLORSPACE_LINEAR: Integer; cdecl;
    {class} function _GetEGL_VG_COLORSPACE_LINEAR_BIT: Integer; cdecl;
    {class} function _GetEGL_VG_COLORSPACE_sRGB: Integer; cdecl;
    {class} function _GetEGL_WIDTH: Integer; cdecl;
    {class} function _GetEGL_WINDOW_BIT: Integer; cdecl;
    {class} function init: JEGL14; cdecl;
    {class} function eglBindAPI(api: Integer): Boolean; cdecl;
    {class} function eglBindTexImage(dpy: Jopengl_EGLDisplay; surface: Jopengl_EGLSurface; buffer: Integer): Boolean; cdecl;
    {class} function eglChooseConfig(dpy: Jopengl_EGLDisplay; attrib_list: TJavaArray<Integer>; attrib_listOffset: Integer; configs: TJavaObjectArray<Jopengl_EGLConfig>; configsOffset: Integer; config_size: Integer; num_config: TJavaArray<Integer>; num_configOffset: Integer): Boolean; cdecl;
    {class} function eglCopyBuffers(dpy: Jopengl_EGLDisplay; surface: Jopengl_EGLSurface; target: Integer): Boolean; cdecl;
    {class} function eglCreateContext(dpy: Jopengl_EGLDisplay; config: Jopengl_EGLConfig; share_context: Jopengl_EGLContext; attrib_list: TJavaArray<Integer>; offset: Integer): Jopengl_EGLContext; cdecl;
    {class} function eglCreatePbufferFromClientBuffer(dpy: Jopengl_EGLDisplay; buftype: Integer; buffer: Integer; config: Jopengl_EGLConfig; attrib_list: TJavaArray<Integer>; offset: Integer): Jopengl_EGLSurface; cdecl;
    {class} function eglCreatePbufferSurface(dpy: Jopengl_EGLDisplay; config: Jopengl_EGLConfig; attrib_list: TJavaArray<Integer>; offset: Integer): Jopengl_EGLSurface; cdecl;
    {class} function eglCreatePixmapSurface(dpy: Jopengl_EGLDisplay; config: Jopengl_EGLConfig; pixmap: Integer; attrib_list: TJavaArray<Integer>; offset: Integer): Jopengl_EGLSurface; cdecl;
    {class} function eglCreateWindowSurface(dpy: Jopengl_EGLDisplay; config: Jopengl_EGLConfig; win: JObject; attrib_list: TJavaArray<Integer>; offset: Integer): Jopengl_EGLSurface; cdecl;
    {class} function eglDestroyContext(dpy: Jopengl_EGLDisplay; ctx: Jopengl_EGLContext): Boolean; cdecl;
    {class} function eglDestroySurface(dpy: Jopengl_EGLDisplay; surface: Jopengl_EGLSurface): Boolean; cdecl;
    {class} function eglGetConfigAttrib(dpy: Jopengl_EGLDisplay; config: Jopengl_EGLConfig; attribute: Integer; value: TJavaArray<Integer>; offset: Integer): Boolean; cdecl;
    {class} function eglGetConfigs(dpy: Jopengl_EGLDisplay; configs: TJavaObjectArray<Jopengl_EGLConfig>; configsOffset: Integer; config_size: Integer; num_config: TJavaArray<Integer>; num_configOffset: Integer): Boolean; cdecl;
    {class} function eglGetCurrentContext: Jopengl_EGLContext; cdecl;
    {class} function eglGetCurrentDisplay: Jopengl_EGLDisplay; cdecl;
    {class} function eglGetCurrentSurface(readdraw: Integer): Jopengl_EGLSurface; cdecl;
    {class} function eglGetDisplay(display_id: Integer): Jopengl_EGLDisplay; cdecl;
    {class} function eglGetError: Integer; cdecl;
    {class} function eglInitialize(dpy: Jopengl_EGLDisplay; major: TJavaArray<Integer>; majorOffset: Integer; minor: TJavaArray<Integer>; minorOffset: Integer): Boolean; cdecl;
    {class} function eglMakeCurrent(dpy: Jopengl_EGLDisplay; draw: Jopengl_EGLSurface; read: Jopengl_EGLSurface; ctx: Jopengl_EGLContext): Boolean; cdecl;
    {class} function eglQueryAPI: Integer; cdecl;
    {class} function eglQueryContext(dpy: Jopengl_EGLDisplay; ctx: Jopengl_EGLContext; attribute: Integer; value: TJavaArray<Integer>; offset: Integer): Boolean; cdecl;
    {class} function eglQueryString(dpy: Jopengl_EGLDisplay; name: Integer): JString; cdecl;
    {class} function eglQuerySurface(dpy: Jopengl_EGLDisplay; surface: Jopengl_EGLSurface; attribute: Integer; value: TJavaArray<Integer>; offset: Integer): Boolean; cdecl;
    {class} function eglReleaseTexImage(dpy: Jopengl_EGLDisplay; surface: Jopengl_EGLSurface; buffer: Integer): Boolean; cdecl;
    {class} function eglReleaseThread: Boolean; cdecl;
    {class} function eglSurfaceAttrib(dpy: Jopengl_EGLDisplay; surface: Jopengl_EGLSurface; attribute: Integer; value: Integer): Boolean; cdecl;
    {class} function eglSwapBuffers(dpy: Jopengl_EGLDisplay; surface: Jopengl_EGLSurface): Boolean; cdecl;
    {class} function eglSwapInterval(dpy: Jopengl_EGLDisplay; interval: Integer): Boolean; cdecl;
    {class} function eglTerminate(dpy: Jopengl_EGLDisplay): Boolean; cdecl;
    {class} function eglWaitClient: Boolean; cdecl;
    {class} function eglWaitGL: Boolean; cdecl;
    {class} function eglWaitNative(engine: Integer): Boolean; cdecl;
    {class} property EGL_ALPHA_MASK_SIZE: Integer read _GetEGL_ALPHA_MASK_SIZE;
    {class} property EGL_ALPHA_SIZE: Integer read _GetEGL_ALPHA_SIZE;
    {class} property EGL_BACK_BUFFER: Integer read _GetEGL_BACK_BUFFER;
    {class} property EGL_BAD_ACCESS: Integer read _GetEGL_BAD_ACCESS;
    {class} property EGL_BAD_ALLOC: Integer read _GetEGL_BAD_ALLOC;
    {class} property EGL_BAD_ATTRIBUTE: Integer read _GetEGL_BAD_ATTRIBUTE;
    {class} property EGL_BAD_CONFIG: Integer read _GetEGL_BAD_CONFIG;
    {class} property EGL_BAD_CONTEXT: Integer read _GetEGL_BAD_CONTEXT;
    {class} property EGL_BAD_CURRENT_SURFACE: Integer read _GetEGL_BAD_CURRENT_SURFACE;
    {class} property EGL_BAD_DISPLAY: Integer read _GetEGL_BAD_DISPLAY;
    {class} property EGL_BAD_MATCH: Integer read _GetEGL_BAD_MATCH;
    {class} property EGL_BAD_NATIVE_PIXMAP: Integer read _GetEGL_BAD_NATIVE_PIXMAP;
    {class} property EGL_BAD_NATIVE_WINDOW: Integer read _GetEGL_BAD_NATIVE_WINDOW;
    {class} property EGL_BAD_PARAMETER: Integer read _GetEGL_BAD_PARAMETER;
    {class} property EGL_BAD_SURFACE: Integer read _GetEGL_BAD_SURFACE;
    {class} property EGL_BIND_TO_TEXTURE_RGB: Integer read _GetEGL_BIND_TO_TEXTURE_RGB;
    {class} property EGL_BIND_TO_TEXTURE_RGBA: Integer read _GetEGL_BIND_TO_TEXTURE_RGBA;
    {class} property EGL_BLUE_SIZE: Integer read _GetEGL_BLUE_SIZE;
    {class} property EGL_BUFFER_DESTROYED: Integer read _GetEGL_BUFFER_DESTROYED;
    {class} property EGL_BUFFER_PRESERVED: Integer read _GetEGL_BUFFER_PRESERVED;
    {class} property EGL_BUFFER_SIZE: Integer read _GetEGL_BUFFER_SIZE;
    {class} property EGL_CLIENT_APIS: Integer read _GetEGL_CLIENT_APIS;
    {class} property EGL_COLOR_BUFFER_TYPE: Integer read _GetEGL_COLOR_BUFFER_TYPE;
    {class} property EGL_CONFIG_CAVEAT: Integer read _GetEGL_CONFIG_CAVEAT;
    {class} property EGL_CONFIG_ID: Integer read _GetEGL_CONFIG_ID;
    {class} property EGL_CONFORMANT: Integer read _GetEGL_CONFORMANT;
    {class} property EGL_CONTEXT_CLIENT_TYPE: Integer read _GetEGL_CONTEXT_CLIENT_TYPE;
    {class} property EGL_CONTEXT_CLIENT_VERSION: Integer read _GetEGL_CONTEXT_CLIENT_VERSION;
    {class} property EGL_CONTEXT_LOST: Integer read _GetEGL_CONTEXT_LOST;
    {class} property EGL_CORE_NATIVE_ENGINE: Integer read _GetEGL_CORE_NATIVE_ENGINE;
    {class} property EGL_DEFAULT_DISPLAY: Integer read _GetEGL_DEFAULT_DISPLAY;
    {class} property EGL_DEPTH_SIZE: Integer read _GetEGL_DEPTH_SIZE;
    {class} property EGL_DISPLAY_SCALING: Integer read _GetEGL_DISPLAY_SCALING;
    {class} property EGL_DRAW: Integer read _GetEGL_DRAW;
    {class} property EGL_EXTENSIONS: Integer read _GetEGL_EXTENSIONS;
    {class} property EGL_FALSE: Integer read _GetEGL_FALSE;
    {class} property EGL_GREEN_SIZE: Integer read _GetEGL_GREEN_SIZE;
    {class} property EGL_HEIGHT: Integer read _GetEGL_HEIGHT;
    {class} property EGL_HORIZONTAL_RESOLUTION: Integer read _GetEGL_HORIZONTAL_RESOLUTION;
    {class} property EGL_LARGEST_PBUFFER: Integer read _GetEGL_LARGEST_PBUFFER;
    {class} property EGL_LEVEL: Integer read _GetEGL_LEVEL;
    {class} property EGL_LUMINANCE_BUFFER: Integer read _GetEGL_LUMINANCE_BUFFER;
    {class} property EGL_LUMINANCE_SIZE: Integer read _GetEGL_LUMINANCE_SIZE;
    {class} property EGL_MATCH_NATIVE_PIXMAP: Integer read _GetEGL_MATCH_NATIVE_PIXMAP;
    {class} property EGL_MAX_PBUFFER_HEIGHT: Integer read _GetEGL_MAX_PBUFFER_HEIGHT;
    {class} property EGL_MAX_PBUFFER_PIXELS: Integer read _GetEGL_MAX_PBUFFER_PIXELS;
    {class} property EGL_MAX_PBUFFER_WIDTH: Integer read _GetEGL_MAX_PBUFFER_WIDTH;
    {class} property EGL_MAX_SWAP_INTERVAL: Integer read _GetEGL_MAX_SWAP_INTERVAL;
    {class} property EGL_MIN_SWAP_INTERVAL: Integer read _GetEGL_MIN_SWAP_INTERVAL;
    {class} property EGL_MIPMAP_LEVEL: Integer read _GetEGL_MIPMAP_LEVEL;
    {class} property EGL_MIPMAP_TEXTURE: Integer read _GetEGL_MIPMAP_TEXTURE;
    {class} property EGL_MULTISAMPLE_RESOLVE: Integer read _GetEGL_MULTISAMPLE_RESOLVE;
    {class} property EGL_MULTISAMPLE_RESOLVE_BOX: Integer read _GetEGL_MULTISAMPLE_RESOLVE_BOX;
    {class} property EGL_MULTISAMPLE_RESOLVE_BOX_BIT: Integer read _GetEGL_MULTISAMPLE_RESOLVE_BOX_BIT;
    {class} property EGL_MULTISAMPLE_RESOLVE_DEFAULT: Integer read _GetEGL_MULTISAMPLE_RESOLVE_DEFAULT;
    {class} property EGL_NATIVE_RENDERABLE: Integer read _GetEGL_NATIVE_RENDERABLE;
    {class} property EGL_NATIVE_VISUAL_ID: Integer read _GetEGL_NATIVE_VISUAL_ID;
    {class} property EGL_NATIVE_VISUAL_TYPE: Integer read _GetEGL_NATIVE_VISUAL_TYPE;
    {class} property EGL_NONE: Integer read _GetEGL_NONE;
    {class} property EGL_NON_CONFORMANT_CONFIG: Integer read _GetEGL_NON_CONFORMANT_CONFIG;
    {class} property EGL_NOT_INITIALIZED: Integer read _GetEGL_NOT_INITIALIZED;
    {class} property EGL_NO_CONTEXT: Jopengl_EGLContext read _GetEGL_NO_CONTEXT write _SetEGL_NO_CONTEXT;
    {class} property EGL_NO_DISPLAY: Jopengl_EGLDisplay read _GetEGL_NO_DISPLAY write _SetEGL_NO_DISPLAY;
    {class} property EGL_NO_SURFACE: Jopengl_EGLSurface read _GetEGL_NO_SURFACE write _SetEGL_NO_SURFACE;
    {class} property EGL_NO_TEXTURE: Integer read _GetEGL_NO_TEXTURE;
    {class} property EGL_OPENGL_API: Integer read _GetEGL_OPENGL_API;
    {class} property EGL_OPENGL_BIT: Integer read _GetEGL_OPENGL_BIT;
    {class} property EGL_OPENGL_ES2_BIT: Integer read _GetEGL_OPENGL_ES2_BIT;
    {class} property EGL_OPENGL_ES_API: Integer read _GetEGL_OPENGL_ES_API;
    {class} property EGL_OPENGL_ES_BIT: Integer read _GetEGL_OPENGL_ES_BIT;
    {class} property EGL_OPENVG_API: Integer read _GetEGL_OPENVG_API;
    {class} property EGL_OPENVG_BIT: Integer read _GetEGL_OPENVG_BIT;
    {class} property EGL_OPENVG_IMAGE: Integer read _GetEGL_OPENVG_IMAGE;
    {class} property EGL_PBUFFER_BIT: Integer read _GetEGL_PBUFFER_BIT;
    {class} property EGL_PIXEL_ASPECT_RATIO: Integer read _GetEGL_PIXEL_ASPECT_RATIO;
    {class} property EGL_PIXMAP_BIT: Integer read _GetEGL_PIXMAP_BIT;
    {class} property EGL_READ: Integer read _GetEGL_READ;
    {class} property EGL_RED_SIZE: Integer read _GetEGL_RED_SIZE;
    {class} property EGL_RENDERABLE_TYPE: Integer read _GetEGL_RENDERABLE_TYPE;
    {class} property EGL_RENDER_BUFFER: Integer read _GetEGL_RENDER_BUFFER;
    {class} property EGL_RGB_BUFFER: Integer read _GetEGL_RGB_BUFFER;
    {class} property EGL_SAMPLES: Integer read _GetEGL_SAMPLES;
    {class} property EGL_SAMPLE_BUFFERS: Integer read _GetEGL_SAMPLE_BUFFERS;
    {class} property EGL_SINGLE_BUFFER: Integer read _GetEGL_SINGLE_BUFFER;
    {class} property EGL_SLOW_CONFIG: Integer read _GetEGL_SLOW_CONFIG;
    {class} property EGL_STENCIL_SIZE: Integer read _GetEGL_STENCIL_SIZE;
    {class} property EGL_SUCCESS: Integer read _GetEGL_SUCCESS;
    {class} property EGL_SURFACE_TYPE: Integer read _GetEGL_SURFACE_TYPE;
    {class} property EGL_SWAP_BEHAVIOR: Integer read _GetEGL_SWAP_BEHAVIOR;
    {class} property EGL_SWAP_BEHAVIOR_PRESERVED_BIT: Integer read _GetEGL_SWAP_BEHAVIOR_PRESERVED_BIT;
    {class} property EGL_TEXTURE_2D: Integer read _GetEGL_TEXTURE_2D;
    {class} property EGL_TEXTURE_FORMAT: Integer read _GetEGL_TEXTURE_FORMAT;
    {class} property EGL_TEXTURE_RGB: Integer read _GetEGL_TEXTURE_RGB;
    {class} property EGL_TEXTURE_RGBA: Integer read _GetEGL_TEXTURE_RGBA;
    {class} property EGL_TEXTURE_TARGET: Integer read _GetEGL_TEXTURE_TARGET;
    {class} property EGL_TRANSPARENT_BLUE_VALUE: Integer read _GetEGL_TRANSPARENT_BLUE_VALUE;
    {class} property EGL_TRANSPARENT_GREEN_VALUE: Integer read _GetEGL_TRANSPARENT_GREEN_VALUE;
    {class} property EGL_TRANSPARENT_RED_VALUE: Integer read _GetEGL_TRANSPARENT_RED_VALUE;
    {class} property EGL_TRANSPARENT_RGB: Integer read _GetEGL_TRANSPARENT_RGB;
    {class} property EGL_TRANSPARENT_TYPE: Integer read _GetEGL_TRANSPARENT_TYPE;
    {class} property EGL_TRUE: Integer read _GetEGL_TRUE;
    {class} property EGL_VENDOR: Integer read _GetEGL_VENDOR;
    {class} property EGL_VERSION: Integer read _GetEGL_VERSION;
    {class} property EGL_VERTICAL_RESOLUTION: Integer read _GetEGL_VERTICAL_RESOLUTION;
    {class} property EGL_VG_ALPHA_FORMAT: Integer read _GetEGL_VG_ALPHA_FORMAT;
    {class} property EGL_VG_ALPHA_FORMAT_NONPRE: Integer read _GetEGL_VG_ALPHA_FORMAT_NONPRE;
    {class} property EGL_VG_ALPHA_FORMAT_PRE: Integer read _GetEGL_VG_ALPHA_FORMAT_PRE;
    {class} property EGL_VG_ALPHA_FORMAT_PRE_BIT: Integer read _GetEGL_VG_ALPHA_FORMAT_PRE_BIT;
    {class} property EGL_VG_COLORSPACE: Integer read _GetEGL_VG_COLORSPACE;
    {class} property EGL_VG_COLORSPACE_LINEAR: Integer read _GetEGL_VG_COLORSPACE_LINEAR;
    {class} property EGL_VG_COLORSPACE_LINEAR_BIT: Integer read _GetEGL_VG_COLORSPACE_LINEAR_BIT;
    {class} property EGL_VG_COLORSPACE_sRGB: Integer read _GetEGL_VG_COLORSPACE_sRGB;
    {class} property EGL_WIDTH: Integer read _GetEGL_WIDTH;
    {class} property EGL_WINDOW_BIT: Integer read _GetEGL_WINDOW_BIT;
  end;

  [JavaSignature('android/opengl/EGL14')]
  JEGL14 = interface(JObject)
    ['{3F6CFADC-F857-4996-886D-079C676135C7}']
  end;
  TJEGL14 = class(TJavaGenericImport<JEGL14Class, JEGL14>) end;

  JEGLObjectHandleClass = interface(JObjectClass)
    ['{FF7E34A3-9353-4DF9-9BD6-21DA955FB685}']
  end;

  [JavaSignature('android/opengl/EGLObjectHandle')]
  JEGLObjectHandle = interface(JObject)
    ['{DDBE4C0D-FAFA-4488-9AF0-A0DA2288D4EE}']
    function getHandle: Integer; cdecl;//Deprecated
    function getNativeHandle: Int64; cdecl;
    function hashCode: Integer; cdecl;
  end;
  TJEGLObjectHandle = class(TJavaGenericImport<JEGLObjectHandleClass, JEGLObjectHandle>) end;

  Jopengl_EGLConfigClass = interface(JEGLObjectHandleClass)
    ['{3822999D-D9EE-4F0F-BBB3-C0B5081A54C3}']
  end;

  [JavaSignature('android/opengl/EGLConfig')]
  Jopengl_EGLConfig = interface(JEGLObjectHandle)
    ['{B821AC66-FC87-4B82-9F10-A1021B85AE65}']
    function equals(o: JObject): Boolean; cdecl;
  end;
  TJopengl_EGLConfig = class(TJavaGenericImport<Jopengl_EGLConfigClass, Jopengl_EGLConfig>) end;

  Jopengl_EGLContextClass = interface(JEGLObjectHandleClass)
    ['{E3975386-B545-40C7-A1E4-2C27B7E78418}']
  end;

  [JavaSignature('android/opengl/EGLContext')]
  Jopengl_EGLContext = interface(JEGLObjectHandle)
    ['{7878A9EA-E332-4F81-A941-38213B756F83}']
    function equals(o: JObject): Boolean; cdecl;
  end;
  TJopengl_EGLContext = class(TJavaGenericImport<Jopengl_EGLContextClass, Jopengl_EGLContext>) end;

  Jopengl_EGLDisplayClass = interface(JEGLObjectHandleClass)
    ['{88F3BA54-B00D-48F7-AF12-A0CB468AC554}']
  end;

  [JavaSignature('android/opengl/EGLDisplay')]
  Jopengl_EGLDisplay = interface(JEGLObjectHandle)
    ['{04C41700-CE9C-472E-AD2B-F9BD85ED2F2F}']
    function equals(o: JObject): Boolean; cdecl;
  end;
  TJopengl_EGLDisplay = class(TJavaGenericImport<Jopengl_EGLDisplayClass, Jopengl_EGLDisplay>) end;

  JEGLExtClass = interface(JObjectClass)
    ['{80782380-A265-4609-BDD3-57760E211070}']
    {class} function _GetEGL_CONTEXT_FLAGS_KHR: Integer; cdecl;
    {class} function _GetEGL_CONTEXT_MAJOR_VERSION_KHR: Integer; cdecl;
    {class} function _GetEGL_CONTEXT_MINOR_VERSION_KHR: Integer; cdecl;
    {class} function _GetEGL_OPENGL_ES3_BIT_KHR: Integer; cdecl;
    {class} function init: JEGLExt; cdecl;
    {class} function eglPresentationTimeANDROID(dpy: Jopengl_EGLDisplay; sur: Jopengl_EGLSurface; time: Int64): Boolean; cdecl;
    {class} property EGL_CONTEXT_FLAGS_KHR: Integer read _GetEGL_CONTEXT_FLAGS_KHR;
    {class} property EGL_CONTEXT_MAJOR_VERSION_KHR: Integer read _GetEGL_CONTEXT_MAJOR_VERSION_KHR;
    {class} property EGL_CONTEXT_MINOR_VERSION_KHR: Integer read _GetEGL_CONTEXT_MINOR_VERSION_KHR;
    {class} property EGL_OPENGL_ES3_BIT_KHR: Integer read _GetEGL_OPENGL_ES3_BIT_KHR;
  end;

  [JavaSignature('android/opengl/EGLExt')]
  JEGLExt = interface(JObject)
    ['{333656E1-045A-43F1-9025-B76EF3C144F4}']
  end;
  TJEGLExt = class(TJavaGenericImport<JEGLExtClass, JEGLExt>) end;

  Jopengl_EGLSurfaceClass = interface(JEGLObjectHandleClass)
    ['{16333FF4-C63D-4F38-B92E-C0C7BAD97E25}']
  end;

  [JavaSignature('android/opengl/EGLSurface')]
  Jopengl_EGLSurface = interface(JEGLObjectHandle)
    ['{14FEC125-04A4-4B09-8C09-6B352317AB30}']
    function equals(o: JObject): Boolean; cdecl;
  end;
  TJopengl_EGLSurface = class(TJavaGenericImport<Jopengl_EGLSurfaceClass, Jopengl_EGLSurface>) end;

  JETC1Class = interface(JObjectClass)
    ['{54BA31A1-A2A8-448C-96F9-9D95D460D0E9}']
    {class} function _GetDECODED_BLOCK_SIZE: Integer; cdecl;
    {class} function _GetENCODED_BLOCK_SIZE: Integer; cdecl;
    {class} function _GetETC1_RGB8_OES: Integer; cdecl;
    {class} function _GetETC_PKM_HEADER_SIZE: Integer; cdecl;
    {class} function init: JETC1; cdecl;
    {class} procedure decodeBlock(in_: JBuffer; out_: JBuffer); cdecl;
    {class} procedure decodeImage(in_: JBuffer; out_: JBuffer; width: Integer; height: Integer; pixelSize: Integer; stride: Integer); cdecl;
    {class} procedure encodeBlock(in_: JBuffer; validPixelMask: Integer; out_: JBuffer); cdecl;
    {class} procedure encodeImage(in_: JBuffer; width: Integer; height: Integer; pixelSize: Integer; stride: Integer; out_: JBuffer); cdecl;
    {class} procedure formatHeader(header: JBuffer; width: Integer; height: Integer); cdecl;
    {class} function getEncodedDataSize(width: Integer; height: Integer): Integer; cdecl;
    {class} function getHeight(header: JBuffer): Integer; cdecl;
    {class} function getWidth(header: JBuffer): Integer; cdecl;
    {class} function isValid(header: JBuffer): Boolean; cdecl;
    {class} property DECODED_BLOCK_SIZE: Integer read _GetDECODED_BLOCK_SIZE;
    {class} property ENCODED_BLOCK_SIZE: Integer read _GetENCODED_BLOCK_SIZE;
    {class} property ETC1_RGB8_OES: Integer read _GetETC1_RGB8_OES;
    {class} property ETC_PKM_HEADER_SIZE: Integer read _GetETC_PKM_HEADER_SIZE;
  end;

  [JavaSignature('android/opengl/ETC1')]
  JETC1 = interface(JObject)
    ['{412471CE-BF49-40AF-B106-E3DBB54F5811}']
  end;
  TJETC1 = class(TJavaGenericImport<JETC1Class, JETC1>) end;

  JETC1UtilClass = interface(JObjectClass)
    ['{0D4A24DC-5C27-4C15-BD0E-1F58E876AFDE}']
    {class} function init: JETC1Util; cdecl;
    {class} function compressTexture(input: JBuffer; width: Integer; height: Integer; pixelSize: Integer; stride: Integer): JETC1Util_ETC1Texture; cdecl;
    {class} function createTexture(input: JInputStream): JETC1Util_ETC1Texture; cdecl;
    {class} function isETC1Supported: Boolean; cdecl;
    {class} procedure loadTexture(target: Integer; level: Integer; border: Integer; fallbackFormat: Integer; fallbackType: Integer; input: JInputStream); cdecl; overload;
    {class} procedure loadTexture(target: Integer; level: Integer; border: Integer; fallbackFormat: Integer; fallbackType: Integer; texture: JETC1Util_ETC1Texture); cdecl; overload;
    {class} procedure writeTexture(texture: JETC1Util_ETC1Texture; output: JOutputStream); cdecl;
  end;

  [JavaSignature('android/opengl/ETC1Util')]
  JETC1Util = interface(JObject)
    ['{EFB4D5C0-69BE-4ACE-949F-32EF40434DCE}']
  end;
  TJETC1Util = class(TJavaGenericImport<JETC1UtilClass, JETC1Util>) end;

  JETC1Util_ETC1TextureClass = interface(JObjectClass)
    ['{4A43895C-EFD2-444A-8048-4F8DFF323CBD}']
    {class} function init(width: Integer; height: Integer; data: JByteBuffer): JETC1Util_ETC1Texture; cdecl;
  end;

  [JavaSignature('android/opengl/ETC1Util$ETC1Texture')]
  JETC1Util_ETC1Texture = interface(JObject)
    ['{C53E11F2-9E67-4CC3-8D31-14F55D2E3A6F}']
    function getData: JByteBuffer; cdecl;
    function getHeight: Integer; cdecl;
    function getWidth: Integer; cdecl;
  end;
  TJETC1Util_ETC1Texture = class(TJavaGenericImport<JETC1Util_ETC1TextureClass, JETC1Util_ETC1Texture>) end;

  JGLDebugHelperClass = interface(JObjectClass)
    ['{7E6A0223-471A-40A4-819C-F743E8C79B03}']
    {class} function _GetCONFIG_CHECK_GL_ERROR: Integer; cdecl;
    {class} function _GetCONFIG_CHECK_THREAD: Integer; cdecl;
    {class} function _GetCONFIG_LOG_ARGUMENT_NAMES: Integer; cdecl;
    {class} function _GetERROR_WRONG_THREAD: Integer; cdecl;
    {class} function init: JGLDebugHelper; cdecl;
    {class} function wrap(gl: JGL; configFlags: Integer; log: JWriter): JGL; cdecl; overload;
    {class} function wrap(egl: JEGL; configFlags: Integer; log: JWriter): JEGL; cdecl; overload;
    {class} property CONFIG_CHECK_GL_ERROR: Integer read _GetCONFIG_CHECK_GL_ERROR;
    {class} property CONFIG_CHECK_THREAD: Integer read _GetCONFIG_CHECK_THREAD;
    {class} property CONFIG_LOG_ARGUMENT_NAMES: Integer read _GetCONFIG_LOG_ARGUMENT_NAMES;
    {class} property ERROR_WRONG_THREAD: Integer read _GetERROR_WRONG_THREAD;
  end;

  [JavaSignature('android/opengl/GLDebugHelper')]
  JGLDebugHelper = interface(JObject)
    ['{A639D925-310B-4DA9-AA69-984007F9B7CD}']
  end;
  TJGLDebugHelper = class(TJavaGenericImport<JGLDebugHelperClass, JGLDebugHelper>) end;

  JGLES10Class = interface(JObjectClass)
    ['{175246E8-7414-4AA7-932F-878CC6D920EE}']
    {class} function _GetGL_ADD: Integer; cdecl;
    {class} function _GetGL_ALIASED_LINE_WIDTH_RANGE: Integer; cdecl;
    {class} function _GetGL_ALIASED_POINT_SIZE_RANGE: Integer; cdecl;
    {class} function _GetGL_ALPHA: Integer; cdecl;
    {class} function _GetGL_ALPHA_BITS: Integer; cdecl;
    {class} function _GetGL_ALPHA_TEST: Integer; cdecl;
    {class} function _GetGL_ALWAYS: Integer; cdecl;
    {class} function _GetGL_AMBIENT: Integer; cdecl;
    {class} function _GetGL_AMBIENT_AND_DIFFUSE: Integer; cdecl;
    {class} function _GetGL_AND: Integer; cdecl;
    {class} function _GetGL_AND_INVERTED: Integer; cdecl;
    {class} function _GetGL_AND_REVERSE: Integer; cdecl;
    {class} function _GetGL_BACK: Integer; cdecl;
    {class} function _GetGL_BLEND: Integer; cdecl;
    {class} function _GetGL_BLUE_BITS: Integer; cdecl;
    {class} function _GetGL_BYTE: Integer; cdecl;
    {class} function _GetGL_CCW: Integer; cdecl;
    {class} function _GetGL_CLAMP_TO_EDGE: Integer; cdecl;
    {class} function _GetGL_CLEAR: Integer; cdecl;
    {class} function _GetGL_COLOR_ARRAY: Integer; cdecl;
    {class} function _GetGL_COLOR_BUFFER_BIT: Integer; cdecl;
    {class} function _GetGL_COLOR_LOGIC_OP: Integer; cdecl;
    {class} function _GetGL_COLOR_MATERIAL: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_TEXTURE_FORMATS: Integer; cdecl;
    {class} function _GetGL_CONSTANT_ATTENUATION: Integer; cdecl;
    {class} function _GetGL_COPY: Integer; cdecl;
    {class} function _GetGL_COPY_INVERTED: Integer; cdecl;
    {class} function _GetGL_CULL_FACE: Integer; cdecl;
    {class} function _GetGL_CW: Integer; cdecl;
    {class} function _GetGL_DECAL: Integer; cdecl;
    {class} function _GetGL_DECR: Integer; cdecl;
    {class} function _GetGL_DEPTH_BITS: Integer; cdecl;
    {class} function _GetGL_DEPTH_BUFFER_BIT: Integer; cdecl;
    {class} function _GetGL_DEPTH_TEST: Integer; cdecl;
    {class} function _GetGL_DIFFUSE: Integer; cdecl;
    {class} function _GetGL_DITHER: Integer; cdecl;
    {class} function _GetGL_DONT_CARE: Integer; cdecl;
    {class} function _GetGL_DST_ALPHA: Integer; cdecl;
    {class} function _GetGL_DST_COLOR: Integer; cdecl;
    {class} function _GetGL_EMISSION: Integer; cdecl;
    {class} function _GetGL_EQUAL: Integer; cdecl;
    {class} function _GetGL_EQUIV: Integer; cdecl;
    {class} function _GetGL_EXP: Integer; cdecl;
    {class} function _GetGL_EXP2: Integer; cdecl;
    {class} function _GetGL_EXTENSIONS: Integer; cdecl;
    {class} function _GetGL_FALSE: Integer; cdecl;
    {class} function _GetGL_FASTEST: Integer; cdecl;
    {class} function _GetGL_FIXED: Integer; cdecl;
    {class} function _GetGL_FLAT: Integer; cdecl;
    {class} function _GetGL_FLOAT: Integer; cdecl;
    {class} function _GetGL_FOG: Integer; cdecl;
    {class} function _GetGL_FOG_COLOR: Integer; cdecl;
    {class} function _GetGL_FOG_DENSITY: Integer; cdecl;
    {class} function _GetGL_FOG_END: Integer; cdecl;
    {class} function _GetGL_FOG_HINT: Integer; cdecl;
    {class} function _GetGL_FOG_MODE: Integer; cdecl;
    {class} function _GetGL_FOG_START: Integer; cdecl;
    {class} function _GetGL_FRONT: Integer; cdecl;
    {class} function _GetGL_FRONT_AND_BACK: Integer; cdecl;
    {class} function _GetGL_GEQUAL: Integer; cdecl;
    {class} function _GetGL_GREATER: Integer; cdecl;
    {class} function _GetGL_GREEN_BITS: Integer; cdecl;
    {class} function _GetGL_IMPLEMENTATION_COLOR_READ_FORMAT_OES: Integer; cdecl;
    {class} function _GetGL_IMPLEMENTATION_COLOR_READ_TYPE_OES: Integer; cdecl;
    {class} function _GetGL_INCR: Integer; cdecl;
    {class} function _GetGL_INVALID_ENUM: Integer; cdecl;
    {class} function _GetGL_INVALID_OPERATION: Integer; cdecl;
    {class} function _GetGL_INVALID_VALUE: Integer; cdecl;
    {class} function _GetGL_INVERT: Integer; cdecl;
    {class} function _GetGL_KEEP: Integer; cdecl;
    {class} function _GetGL_LEQUAL: Integer; cdecl;
    {class} function _GetGL_LESS: Integer; cdecl;
    {class} function _GetGL_LIGHT0: Integer; cdecl;
    {class} function _GetGL_LIGHT1: Integer; cdecl;
    {class} function _GetGL_LIGHT2: Integer; cdecl;
    {class} function _GetGL_LIGHT3: Integer; cdecl;
    {class} function _GetGL_LIGHT4: Integer; cdecl;
    {class} function _GetGL_LIGHT5: Integer; cdecl;
    {class} function _GetGL_LIGHT6: Integer; cdecl;
    {class} function _GetGL_LIGHT7: Integer; cdecl;
    {class} function _GetGL_LIGHTING: Integer; cdecl;
    {class} function _GetGL_LIGHT_MODEL_AMBIENT: Integer; cdecl;
    {class} function _GetGL_LIGHT_MODEL_TWO_SIDE: Integer; cdecl;
    {class} function _GetGL_LINEAR: Integer; cdecl;
    {class} function _GetGL_LINEAR_ATTENUATION: Integer; cdecl;
    {class} function _GetGL_LINEAR_MIPMAP_LINEAR: Integer; cdecl;
    {class} function _GetGL_LINEAR_MIPMAP_NEAREST: Integer; cdecl;
    {class} function _GetGL_LINES: Integer; cdecl;
    {class} function _GetGL_LINE_LOOP: Integer; cdecl;
    {class} function _GetGL_LINE_SMOOTH: Integer; cdecl;
    {class} function _GetGL_LINE_SMOOTH_HINT: Integer; cdecl;
    {class} function _GetGL_LINE_STRIP: Integer; cdecl;
    {class} function _GetGL_LUMINANCE: Integer; cdecl;
    {class} function _GetGL_LUMINANCE_ALPHA: Integer; cdecl;
    {class} function _GetGL_MAX_ELEMENTS_INDICES: Integer; cdecl;
    {class} function _GetGL_MAX_ELEMENTS_VERTICES: Integer; cdecl;
    {class} function _GetGL_MAX_LIGHTS: Integer; cdecl;
    {class} function _GetGL_MAX_MODELVIEW_STACK_DEPTH: Integer; cdecl;
    {class} function _GetGL_MAX_PROJECTION_STACK_DEPTH: Integer; cdecl;
    {class} function _GetGL_MAX_TEXTURE_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_TEXTURE_STACK_DEPTH: Integer; cdecl;
    {class} function _GetGL_MAX_TEXTURE_UNITS: Integer; cdecl;
    {class} function _GetGL_MAX_VIEWPORT_DIMS: Integer; cdecl;
    {class} function _GetGL_MODELVIEW: Integer; cdecl;
    {class} function _GetGL_MODULATE: Integer; cdecl;
    {class} function _GetGL_MULTISAMPLE: Integer; cdecl;
    {class} function _GetGL_NAND: Integer; cdecl;
    {class} function _GetGL_NEAREST: Integer; cdecl;
    {class} function _GetGL_NEAREST_MIPMAP_LINEAR: Integer; cdecl;
    {class} function _GetGL_NEAREST_MIPMAP_NEAREST: Integer; cdecl;
    {class} function _GetGL_NEVER: Integer; cdecl;
    {class} function _GetGL_NICEST: Integer; cdecl;
    {class} function _GetGL_NOOP: Integer; cdecl;
    {class} function _GetGL_NOR: Integer; cdecl;
    {class} function _GetGL_NORMALIZE: Integer; cdecl;
    {class} function _GetGL_NORMAL_ARRAY: Integer; cdecl;
    {class} function _GetGL_NOTEQUAL: Integer; cdecl;
    {class} function _GetGL_NO_ERROR: Integer; cdecl;
    {class} function _GetGL_NUM_COMPRESSED_TEXTURE_FORMATS: Integer; cdecl;
    {class} function _GetGL_ONE: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_DST_ALPHA: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_DST_COLOR: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_SRC_ALPHA: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_SRC_COLOR: Integer; cdecl;
    {class} function _GetGL_OR: Integer; cdecl;
    {class} function _GetGL_OR_INVERTED: Integer; cdecl;
    {class} function _GetGL_OR_REVERSE: Integer; cdecl;
    {class} function _GetGL_OUT_OF_MEMORY: Integer; cdecl;
    {class} function _GetGL_PACK_ALIGNMENT: Integer; cdecl;
    {class} function _GetGL_PALETTE4_R5_G6_B5_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE4_RGB5_A1_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE4_RGB8_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE4_RGBA4_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE4_RGBA8_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE8_R5_G6_B5_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE8_RGB5_A1_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE8_RGB8_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE8_RGBA4_OES: Integer; cdecl;
    {class} function _GetGL_PALETTE8_RGBA8_OES: Integer; cdecl;
    {class} function _GetGL_PERSPECTIVE_CORRECTION_HINT: Integer; cdecl;
    {class} function _GetGL_POINTS: Integer; cdecl;
    {class} function _GetGL_POINT_FADE_THRESHOLD_SIZE: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE: Integer; cdecl;
    {class} function _GetGL_POINT_SMOOTH: Integer; cdecl;
    {class} function _GetGL_POINT_SMOOTH_HINT: Integer; cdecl;
    {class} function _GetGL_POLYGON_OFFSET_FILL: Integer; cdecl;
    {class} function _GetGL_POLYGON_SMOOTH_HINT: Integer; cdecl;
    {class} function _GetGL_POSITION: Integer; cdecl;
    {class} function _GetGL_PROJECTION: Integer; cdecl;
    {class} function _GetGL_QUADRATIC_ATTENUATION: Integer; cdecl;
    {class} function _GetGL_RED_BITS: Integer; cdecl;
    {class} function _GetGL_RENDERER: Integer; cdecl;
    {class} function _GetGL_REPEAT: Integer; cdecl;
    {class} function _GetGL_REPLACE: Integer; cdecl;
    {class} function _GetGL_RESCALE_NORMAL: Integer; cdecl;
    {class} function _GetGL_RGB: Integer; cdecl;
    {class} function _GetGL_RGBA: Integer; cdecl;
    {class} function _GetGL_SAMPLE_ALPHA_TO_COVERAGE: Integer; cdecl;
    {class} function _GetGL_SAMPLE_ALPHA_TO_ONE: Integer; cdecl;
    {class} function _GetGL_SAMPLE_COVERAGE: Integer; cdecl;
    {class} function _GetGL_SCISSOR_TEST: Integer; cdecl;
    {class} function _GetGL_SET: Integer; cdecl;
    {class} function _GetGL_SHININESS: Integer; cdecl;
    {class} function _GetGL_SHORT: Integer; cdecl;
    {class} function _GetGL_SMOOTH: Integer; cdecl;
    {class} function _GetGL_SMOOTH_LINE_WIDTH_RANGE: Integer; cdecl;
    {class} function _GetGL_SMOOTH_POINT_SIZE_RANGE: Integer; cdecl;
    {class} function _GetGL_SPECULAR: Integer; cdecl;
    {class} function _GetGL_SPOT_CUTOFF: Integer; cdecl;
    {class} function _GetGL_SPOT_DIRECTION: Integer; cdecl;
    {class} function _GetGL_SPOT_EXPONENT: Integer; cdecl;
    {class} function _GetGL_SRC_ALPHA: Integer; cdecl;
    {class} function _GetGL_SRC_ALPHA_SATURATE: Integer; cdecl;
    {class} function _GetGL_SRC_COLOR: Integer; cdecl;
    {class} function _GetGL_STACK_OVERFLOW: Integer; cdecl;
    {class} function _GetGL_STACK_UNDERFLOW: Integer; cdecl;
    {class} function _GetGL_STENCIL_BITS: Integer; cdecl;
    {class} function _GetGL_STENCIL_BUFFER_BIT: Integer; cdecl;
    {class} function _GetGL_STENCIL_TEST: Integer; cdecl;
    {class} function _GetGL_SUBPIXEL_BITS: Integer; cdecl;
    {class} function _GetGL_TEXTURE: Integer; cdecl;
    {class} function _GetGL_TEXTURE0: Integer; cdecl;
    {class} function _GetGL_TEXTURE1: Integer; cdecl;
    {class} function _GetGL_TEXTURE10: Integer; cdecl;
    {class} function _GetGL_TEXTURE11: Integer; cdecl;
    {class} function _GetGL_TEXTURE12: Integer; cdecl;
    {class} function _GetGL_TEXTURE13: Integer; cdecl;
    {class} function _GetGL_TEXTURE14: Integer; cdecl;
    {class} function _GetGL_TEXTURE15: Integer; cdecl;
    {class} function _GetGL_TEXTURE16: Integer; cdecl;
    {class} function _GetGL_TEXTURE17: Integer; cdecl;
    {class} function _GetGL_TEXTURE18: Integer; cdecl;
    {class} function _GetGL_TEXTURE19: Integer; cdecl;
    {class} function _GetGL_TEXTURE2: Integer; cdecl;
    {class} function _GetGL_TEXTURE20: Integer; cdecl;
    {class} function _GetGL_TEXTURE21: Integer; cdecl;
    {class} function _GetGL_TEXTURE22: Integer; cdecl;
    {class} function _GetGL_TEXTURE23: Integer; cdecl;
    {class} function _GetGL_TEXTURE24: Integer; cdecl;
    {class} function _GetGL_TEXTURE25: Integer; cdecl;
    {class} function _GetGL_TEXTURE26: Integer; cdecl;
    {class} function _GetGL_TEXTURE27: Integer; cdecl;
    {class} function _GetGL_TEXTURE28: Integer; cdecl;
    {class} function _GetGL_TEXTURE29: Integer; cdecl;
    {class} function _GetGL_TEXTURE3: Integer; cdecl;
    {class} function _GetGL_TEXTURE30: Integer; cdecl;
    {class} function _GetGL_TEXTURE31: Integer; cdecl;
    {class} function _GetGL_TEXTURE4: Integer; cdecl;
    {class} function _GetGL_TEXTURE5: Integer; cdecl;
    {class} function _GetGL_TEXTURE6: Integer; cdecl;
    {class} function _GetGL_TEXTURE7: Integer; cdecl;
    {class} function _GetGL_TEXTURE8: Integer; cdecl;
    {class} function _GetGL_TEXTURE9: Integer; cdecl;
    {class} function _GetGL_TEXTURE_2D: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COORD_ARRAY: Integer; cdecl;
    {class} function _GetGL_TEXTURE_ENV: Integer; cdecl;
    {class} function _GetGL_TEXTURE_ENV_COLOR: Integer; cdecl;
    {class} function _GetGL_TEXTURE_ENV_MODE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MAG_FILTER: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MIN_FILTER: Integer; cdecl;
    {class} function _GetGL_TEXTURE_WRAP_S: Integer; cdecl;
    {class} function _GetGL_TEXTURE_WRAP_T: Integer; cdecl;
    {class} function _GetGL_TRIANGLES: Integer; cdecl;
    {class} function _GetGL_TRIANGLE_FAN: Integer; cdecl;
    {class} function _GetGL_TRIANGLE_STRIP: Integer; cdecl;
    {class} function _GetGL_TRUE: Integer; cdecl;
    {class} function _GetGL_UNPACK_ALIGNMENT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_BYTE: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_SHORT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_SHORT_4_4_4_4: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_SHORT_5_5_5_1: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_SHORT_5_6_5: Integer; cdecl;
    {class} function _GetGL_VENDOR: Integer; cdecl;
    {class} function _GetGL_VERSION: Integer; cdecl;
    {class} function _GetGL_VERTEX_ARRAY: Integer; cdecl;
    {class} function _GetGL_XOR: Integer; cdecl;
    {class} function _GetGL_ZERO: Integer; cdecl;
    {class} function init: JGLES10; cdecl;
    {class} procedure glActiveTexture(texture: Integer); cdecl;
    {class} procedure glAlphaFunc(func: Integer; ref: Single); cdecl;
    {class} procedure glAlphaFuncx(func: Integer; ref: Integer); cdecl;
    {class} procedure glBindTexture(target: Integer; texture: Integer); cdecl;
    {class} procedure glBlendFunc(sfactor: Integer; dfactor: Integer); cdecl;
    {class} procedure glClear(mask: Integer); cdecl;
    {class} procedure glClearColor(red: Single; green: Single; blue: Single; alpha: Single); cdecl;
    {class} procedure glClearColorx(red: Integer; green: Integer; blue: Integer; alpha: Integer); cdecl;
    {class} procedure glClearDepthf(depth: Single); cdecl;
    {class} procedure glClearDepthx(depth: Integer); cdecl;
    {class} procedure glClearStencil(s: Integer); cdecl;
    {class} procedure glClientActiveTexture(texture: Integer); cdecl;
    {class} procedure glColor4f(red: Single; green: Single; blue: Single; alpha: Single); cdecl;
    {class} procedure glColor4x(red: Integer; green: Integer; blue: Integer; alpha: Integer); cdecl;
    {class} procedure glColorMask(red: Boolean; green: Boolean; blue: Boolean; alpha: Boolean); cdecl;
    {class} procedure glColorPointer(size: Integer; type_: Integer; stride: Integer; pointer: JBuffer); cdecl;
    {class} procedure glCompressedTexImage2D(target: Integer; level: Integer; internalformat: Integer; width: Integer; height: Integer; border: Integer; imageSize: Integer; data: JBuffer); cdecl;
    {class} procedure glCompressedTexSubImage2D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; width: Integer; height: Integer; format: Integer; imageSize: Integer; data: JBuffer); cdecl;
    {class} procedure glCopyTexImage2D(target: Integer; level: Integer; internalformat: Integer; x: Integer; y: Integer; width: Integer; height: Integer; border: Integer); cdecl;
    {class} procedure glCopyTexSubImage2D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; x: Integer; y: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glCullFace(mode: Integer); cdecl;
    {class} procedure glDeleteTextures(n: Integer; textures: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteTextures(n: Integer; textures: JIntBuffer); cdecl; overload;
    {class} procedure glDepthFunc(func: Integer); cdecl;
    {class} procedure glDepthMask(flag: Boolean); cdecl;
    {class} procedure glDepthRangef(zNear: Single; zFar: Single); cdecl;
    {class} procedure glDepthRangex(zNear: Integer; zFar: Integer); cdecl;
    {class} procedure glDisable(cap: Integer); cdecl;
    {class} procedure glDisableClientState(array_: Integer); cdecl;
    {class} procedure glDrawArrays(mode: Integer; first: Integer; count: Integer); cdecl;
    {class} procedure glDrawElements(mode: Integer; count: Integer; type_: Integer; indices: JBuffer); cdecl;
    {class} procedure glEnable(cap: Integer); cdecl;
    {class} procedure glEnableClientState(array_: Integer); cdecl;
    {class} procedure glFinish; cdecl;
    {class} procedure glFlush; cdecl;
    {class} procedure glFogf(pname: Integer; param: Single); cdecl;
    {class} procedure glFogfv(pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glFogfv(pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glFogx(pname: Integer; param: Integer); cdecl;
    {class} procedure glFogxv(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glFogxv(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glFrontFace(mode: Integer); cdecl;
    {class} procedure glFrustumf(left: Single; right: Single; bottom: Single; top: Single; zNear: Single; zFar: Single); cdecl;
    {class} procedure glFrustumx(left: Integer; right: Integer; bottom: Integer; top: Integer; zNear: Integer; zFar: Integer); cdecl;
    {class} procedure glGenTextures(n: Integer; textures: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenTextures(n: Integer; textures: JIntBuffer); cdecl; overload;
    {class} function glGetError: Integer; cdecl;
    {class} procedure glGetIntegerv(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetIntegerv(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetString(name: Integer): JString; cdecl;
    {class} procedure glHint(target: Integer; mode: Integer); cdecl;
    {class} procedure glLightModelf(pname: Integer; param: Single); cdecl;
    {class} procedure glLightModelfv(pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glLightModelfv(pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glLightModelx(pname: Integer; param: Integer); cdecl;
    {class} procedure glLightModelxv(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glLightModelxv(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glLightf(light: Integer; pname: Integer; param: Single); cdecl;
    {class} procedure glLightfv(light: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glLightfv(light: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glLightx(light: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glLightxv(light: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glLightxv(light: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glLineWidth(width: Single); cdecl;
    {class} procedure glLineWidthx(width: Integer); cdecl;
    {class} procedure glLoadIdentity; cdecl;
    {class} procedure glLoadMatrixf(m: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glLoadMatrixf(m: JFloatBuffer); cdecl; overload;
    {class} procedure glLoadMatrixx(m: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glLoadMatrixx(m: JIntBuffer); cdecl; overload;
    {class} procedure glLogicOp(opcode: Integer); cdecl;
    {class} procedure glMaterialf(face: Integer; pname: Integer; param: Single); cdecl;
    {class} procedure glMaterialfv(face: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glMaterialfv(face: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glMaterialx(face: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glMaterialxv(face: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glMaterialxv(face: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glMatrixMode(mode: Integer); cdecl;
    {class} procedure glMultMatrixf(m: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glMultMatrixf(m: JFloatBuffer); cdecl; overload;
    {class} procedure glMultMatrixx(m: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glMultMatrixx(m: JIntBuffer); cdecl; overload;
    {class} procedure glMultiTexCoord4f(target: Integer; s: Single; t: Single; r: Single; q: Single); cdecl;
    {class} procedure glMultiTexCoord4x(target: Integer; s: Integer; t: Integer; r: Integer; q: Integer); cdecl;
    {class} procedure glNormal3f(nx: Single; ny: Single; nz: Single); cdecl;
    {class} procedure glNormal3x(nx: Integer; ny: Integer; nz: Integer); cdecl;
    {class} procedure glNormalPointer(type_: Integer; stride: Integer; pointer: JBuffer); cdecl;
    {class} procedure glOrthof(left: Single; right: Single; bottom: Single; top: Single; zNear: Single; zFar: Single); cdecl;
    {class} procedure glOrthox(left: Integer; right: Integer; bottom: Integer; top: Integer; zNear: Integer; zFar: Integer); cdecl;
    {class} procedure glPixelStorei(pname: Integer; param: Integer); cdecl;
    {class} procedure glPointSize(size: Single); cdecl;
    {class} procedure glPointSizex(size: Integer); cdecl;
    {class} procedure glPolygonOffset(factor: Single; units: Single); cdecl;
    {class} procedure glPolygonOffsetx(factor: Integer; units: Integer); cdecl;
    {class} procedure glPopMatrix; cdecl;
    {class} procedure glPushMatrix; cdecl;
    {class} procedure glReadPixels(x: Integer; y: Integer; width: Integer; height: Integer; format: Integer; type_: Integer; pixels: JBuffer); cdecl;
    {class} procedure glRotatef(angle: Single; x: Single; y: Single; z: Single); cdecl;
    {class} procedure glRotatex(angle: Integer; x: Integer; y: Integer; z: Integer); cdecl;
    {class} procedure glSampleCoverage(value: Single; invert: Boolean); cdecl;
    {class} procedure glSampleCoveragex(value: Integer; invert: Boolean); cdecl;
    {class} procedure glScalef(x: Single; y: Single; z: Single); cdecl;
    {class} procedure glScalex(x: Integer; y: Integer; z: Integer); cdecl;
    {class} procedure glScissor(x: Integer; y: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glShadeModel(mode: Integer); cdecl;
    {class} procedure glStencilFunc(func: Integer; ref: Integer; mask: Integer); cdecl;
    {class} procedure glStencilMask(mask: Integer); cdecl;
    {class} procedure glStencilOp(fail: Integer; zfail: Integer; zpass: Integer); cdecl;
    {class} procedure glTexCoordPointer(size: Integer; type_: Integer; stride: Integer; pointer: JBuffer); cdecl;
    {class} procedure glTexEnvf(target: Integer; pname: Integer; param: Single); cdecl;
    {class} procedure glTexEnvfv(target: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glTexEnvfv(target: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glTexEnvx(target: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexEnvxv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexEnvxv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexImage2D(target: Integer; level: Integer; internalformat: Integer; width: Integer; height: Integer; border: Integer; format: Integer; type_: Integer; pixels: JBuffer); cdecl;
    {class} procedure glTexParameterf(target: Integer; pname: Integer; param: Single); cdecl;
    {class} procedure glTexParameterx(target: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexSubImage2D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; width: Integer; height: Integer; format: Integer; type_: Integer; pixels: JBuffer); cdecl;
    {class} procedure glTranslatef(x: Single; y: Single; z: Single); cdecl;
    {class} procedure glTranslatex(x: Integer; y: Integer; z: Integer); cdecl;
    {class} procedure glVertexPointer(size: Integer; type_: Integer; stride: Integer; pointer: JBuffer); cdecl;
    {class} procedure glViewport(x: Integer; y: Integer; width: Integer; height: Integer); cdecl;
    {class} property GL_ADD: Integer read _GetGL_ADD;
    {class} property GL_ALIASED_LINE_WIDTH_RANGE: Integer read _GetGL_ALIASED_LINE_WIDTH_RANGE;
    {class} property GL_ALIASED_POINT_SIZE_RANGE: Integer read _GetGL_ALIASED_POINT_SIZE_RANGE;
    {class} property GL_ALPHA: Integer read _GetGL_ALPHA;
    {class} property GL_ALPHA_BITS: Integer read _GetGL_ALPHA_BITS;
    {class} property GL_ALPHA_TEST: Integer read _GetGL_ALPHA_TEST;
    {class} property GL_ALWAYS: Integer read _GetGL_ALWAYS;
    {class} property GL_AMBIENT: Integer read _GetGL_AMBIENT;
    {class} property GL_AMBIENT_AND_DIFFUSE: Integer read _GetGL_AMBIENT_AND_DIFFUSE;
    {class} property GL_AND: Integer read _GetGL_AND;
    {class} property GL_AND_INVERTED: Integer read _GetGL_AND_INVERTED;
    {class} property GL_AND_REVERSE: Integer read _GetGL_AND_REVERSE;
    {class} property GL_BACK: Integer read _GetGL_BACK;
    {class} property GL_BLEND: Integer read _GetGL_BLEND;
    {class} property GL_BLUE_BITS: Integer read _GetGL_BLUE_BITS;
    {class} property GL_BYTE: Integer read _GetGL_BYTE;
    {class} property GL_CCW: Integer read _GetGL_CCW;
    {class} property GL_CLAMP_TO_EDGE: Integer read _GetGL_CLAMP_TO_EDGE;
    {class} property GL_CLEAR: Integer read _GetGL_CLEAR;
    {class} property GL_COLOR_ARRAY: Integer read _GetGL_COLOR_ARRAY;
    {class} property GL_COLOR_BUFFER_BIT: Integer read _GetGL_COLOR_BUFFER_BIT;
    {class} property GL_COLOR_LOGIC_OP: Integer read _GetGL_COLOR_LOGIC_OP;
    {class} property GL_COLOR_MATERIAL: Integer read _GetGL_COLOR_MATERIAL;
    {class} property GL_COMPRESSED_TEXTURE_FORMATS: Integer read _GetGL_COMPRESSED_TEXTURE_FORMATS;
    {class} property GL_CONSTANT_ATTENUATION: Integer read _GetGL_CONSTANT_ATTENUATION;
    {class} property GL_COPY: Integer read _GetGL_COPY;
    {class} property GL_COPY_INVERTED: Integer read _GetGL_COPY_INVERTED;
    {class} property GL_CULL_FACE: Integer read _GetGL_CULL_FACE;
    {class} property GL_CW: Integer read _GetGL_CW;
    {class} property GL_DECAL: Integer read _GetGL_DECAL;
    {class} property GL_DECR: Integer read _GetGL_DECR;
    {class} property GL_DEPTH_BITS: Integer read _GetGL_DEPTH_BITS;
    {class} property GL_DEPTH_BUFFER_BIT: Integer read _GetGL_DEPTH_BUFFER_BIT;
    {class} property GL_DEPTH_TEST: Integer read _GetGL_DEPTH_TEST;
    {class} property GL_DIFFUSE: Integer read _GetGL_DIFFUSE;
    {class} property GL_DITHER: Integer read _GetGL_DITHER;
    {class} property GL_DONT_CARE: Integer read _GetGL_DONT_CARE;
    {class} property GL_DST_ALPHA: Integer read _GetGL_DST_ALPHA;
    {class} property GL_DST_COLOR: Integer read _GetGL_DST_COLOR;
    {class} property GL_EMISSION: Integer read _GetGL_EMISSION;
    {class} property GL_EQUAL: Integer read _GetGL_EQUAL;
    {class} property GL_EQUIV: Integer read _GetGL_EQUIV;
    {class} property GL_EXP: Integer read _GetGL_EXP;
    {class} property GL_EXP2: Integer read _GetGL_EXP2;
    {class} property GL_EXTENSIONS: Integer read _GetGL_EXTENSIONS;
    {class} property GL_FALSE: Integer read _GetGL_FALSE;
    {class} property GL_FASTEST: Integer read _GetGL_FASTEST;
    {class} property GL_FIXED: Integer read _GetGL_FIXED;
    {class} property GL_FLAT: Integer read _GetGL_FLAT;
    {class} property GL_FLOAT: Integer read _GetGL_FLOAT;
    {class} property GL_FOG: Integer read _GetGL_FOG;
    {class} property GL_FOG_COLOR: Integer read _GetGL_FOG_COLOR;
    {class} property GL_FOG_DENSITY: Integer read _GetGL_FOG_DENSITY;
    {class} property GL_FOG_END: Integer read _GetGL_FOG_END;
    {class} property GL_FOG_HINT: Integer read _GetGL_FOG_HINT;
    {class} property GL_FOG_MODE: Integer read _GetGL_FOG_MODE;
    {class} property GL_FOG_START: Integer read _GetGL_FOG_START;
    {class} property GL_FRONT: Integer read _GetGL_FRONT;
    {class} property GL_FRONT_AND_BACK: Integer read _GetGL_FRONT_AND_BACK;
    {class} property GL_GEQUAL: Integer read _GetGL_GEQUAL;
    {class} property GL_GREATER: Integer read _GetGL_GREATER;
    {class} property GL_GREEN_BITS: Integer read _GetGL_GREEN_BITS;
    {class} property GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES: Integer read _GetGL_IMPLEMENTATION_COLOR_READ_FORMAT_OES;
    {class} property GL_IMPLEMENTATION_COLOR_READ_TYPE_OES: Integer read _GetGL_IMPLEMENTATION_COLOR_READ_TYPE_OES;
    {class} property GL_INCR: Integer read _GetGL_INCR;
    {class} property GL_INVALID_ENUM: Integer read _GetGL_INVALID_ENUM;
    {class} property GL_INVALID_OPERATION: Integer read _GetGL_INVALID_OPERATION;
    {class} property GL_INVALID_VALUE: Integer read _GetGL_INVALID_VALUE;
    {class} property GL_INVERT: Integer read _GetGL_INVERT;
    {class} property GL_KEEP: Integer read _GetGL_KEEP;
    {class} property GL_LEQUAL: Integer read _GetGL_LEQUAL;
    {class} property GL_LESS: Integer read _GetGL_LESS;
    {class} property GL_LIGHT0: Integer read _GetGL_LIGHT0;
    {class} property GL_LIGHT1: Integer read _GetGL_LIGHT1;
    {class} property GL_LIGHT2: Integer read _GetGL_LIGHT2;
    {class} property GL_LIGHT3: Integer read _GetGL_LIGHT3;
    {class} property GL_LIGHT4: Integer read _GetGL_LIGHT4;
    {class} property GL_LIGHT5: Integer read _GetGL_LIGHT5;
    {class} property GL_LIGHT6: Integer read _GetGL_LIGHT6;
    {class} property GL_LIGHT7: Integer read _GetGL_LIGHT7;
    {class} property GL_LIGHTING: Integer read _GetGL_LIGHTING;
    {class} property GL_LIGHT_MODEL_AMBIENT: Integer read _GetGL_LIGHT_MODEL_AMBIENT;
    {class} property GL_LIGHT_MODEL_TWO_SIDE: Integer read _GetGL_LIGHT_MODEL_TWO_SIDE;
    {class} property GL_LINEAR: Integer read _GetGL_LINEAR;
    {class} property GL_LINEAR_ATTENUATION: Integer read _GetGL_LINEAR_ATTENUATION;
    {class} property GL_LINEAR_MIPMAP_LINEAR: Integer read _GetGL_LINEAR_MIPMAP_LINEAR;
    {class} property GL_LINEAR_MIPMAP_NEAREST: Integer read _GetGL_LINEAR_MIPMAP_NEAREST;
    {class} property GL_LINES: Integer read _GetGL_LINES;
    {class} property GL_LINE_LOOP: Integer read _GetGL_LINE_LOOP;
    {class} property GL_LINE_SMOOTH: Integer read _GetGL_LINE_SMOOTH;
    {class} property GL_LINE_SMOOTH_HINT: Integer read _GetGL_LINE_SMOOTH_HINT;
    {class} property GL_LINE_STRIP: Integer read _GetGL_LINE_STRIP;
    {class} property GL_LUMINANCE: Integer read _GetGL_LUMINANCE;
    {class} property GL_LUMINANCE_ALPHA: Integer read _GetGL_LUMINANCE_ALPHA;
    {class} property GL_MAX_ELEMENTS_INDICES: Integer read _GetGL_MAX_ELEMENTS_INDICES;
    {class} property GL_MAX_ELEMENTS_VERTICES: Integer read _GetGL_MAX_ELEMENTS_VERTICES;
    {class} property GL_MAX_LIGHTS: Integer read _GetGL_MAX_LIGHTS;
    {class} property GL_MAX_MODELVIEW_STACK_DEPTH: Integer read _GetGL_MAX_MODELVIEW_STACK_DEPTH;
    {class} property GL_MAX_PROJECTION_STACK_DEPTH: Integer read _GetGL_MAX_PROJECTION_STACK_DEPTH;
    {class} property GL_MAX_TEXTURE_SIZE: Integer read _GetGL_MAX_TEXTURE_SIZE;
    {class} property GL_MAX_TEXTURE_STACK_DEPTH: Integer read _GetGL_MAX_TEXTURE_STACK_DEPTH;
    {class} property GL_MAX_TEXTURE_UNITS: Integer read _GetGL_MAX_TEXTURE_UNITS;
    {class} property GL_MAX_VIEWPORT_DIMS: Integer read _GetGL_MAX_VIEWPORT_DIMS;
    {class} property GL_MODELVIEW: Integer read _GetGL_MODELVIEW;
    {class} property GL_MODULATE: Integer read _GetGL_MODULATE;
    {class} property GL_MULTISAMPLE: Integer read _GetGL_MULTISAMPLE;
    {class} property GL_NAND: Integer read _GetGL_NAND;
    {class} property GL_NEAREST: Integer read _GetGL_NEAREST;
    {class} property GL_NEAREST_MIPMAP_LINEAR: Integer read _GetGL_NEAREST_MIPMAP_LINEAR;
    {class} property GL_NEAREST_MIPMAP_NEAREST: Integer read _GetGL_NEAREST_MIPMAP_NEAREST;
    {class} property GL_NEVER: Integer read _GetGL_NEVER;
    {class} property GL_NICEST: Integer read _GetGL_NICEST;
    {class} property GL_NOOP: Integer read _GetGL_NOOP;
    {class} property GL_NOR: Integer read _GetGL_NOR;
    {class} property GL_NORMALIZE: Integer read _GetGL_NORMALIZE;
    {class} property GL_NORMAL_ARRAY: Integer read _GetGL_NORMAL_ARRAY;
    {class} property GL_NOTEQUAL: Integer read _GetGL_NOTEQUAL;
    {class} property GL_NO_ERROR: Integer read _GetGL_NO_ERROR;
    {class} property GL_NUM_COMPRESSED_TEXTURE_FORMATS: Integer read _GetGL_NUM_COMPRESSED_TEXTURE_FORMATS;
    {class} property GL_ONE: Integer read _GetGL_ONE;
    {class} property GL_ONE_MINUS_DST_ALPHA: Integer read _GetGL_ONE_MINUS_DST_ALPHA;
    {class} property GL_ONE_MINUS_DST_COLOR: Integer read _GetGL_ONE_MINUS_DST_COLOR;
    {class} property GL_ONE_MINUS_SRC_ALPHA: Integer read _GetGL_ONE_MINUS_SRC_ALPHA;
    {class} property GL_ONE_MINUS_SRC_COLOR: Integer read _GetGL_ONE_MINUS_SRC_COLOR;
    {class} property GL_OR: Integer read _GetGL_OR;
    {class} property GL_OR_INVERTED: Integer read _GetGL_OR_INVERTED;
    {class} property GL_OR_REVERSE: Integer read _GetGL_OR_REVERSE;
    {class} property GL_OUT_OF_MEMORY: Integer read _GetGL_OUT_OF_MEMORY;
    {class} property GL_PACK_ALIGNMENT: Integer read _GetGL_PACK_ALIGNMENT;
    {class} property GL_PALETTE4_R5_G6_B5_OES: Integer read _GetGL_PALETTE4_R5_G6_B5_OES;
    {class} property GL_PALETTE4_RGB5_A1_OES: Integer read _GetGL_PALETTE4_RGB5_A1_OES;
    {class} property GL_PALETTE4_RGB8_OES: Integer read _GetGL_PALETTE4_RGB8_OES;
    {class} property GL_PALETTE4_RGBA4_OES: Integer read _GetGL_PALETTE4_RGBA4_OES;
    {class} property GL_PALETTE4_RGBA8_OES: Integer read _GetGL_PALETTE4_RGBA8_OES;
    {class} property GL_PALETTE8_R5_G6_B5_OES: Integer read _GetGL_PALETTE8_R5_G6_B5_OES;
    {class} property GL_PALETTE8_RGB5_A1_OES: Integer read _GetGL_PALETTE8_RGB5_A1_OES;
    {class} property GL_PALETTE8_RGB8_OES: Integer read _GetGL_PALETTE8_RGB8_OES;
    {class} property GL_PALETTE8_RGBA4_OES: Integer read _GetGL_PALETTE8_RGBA4_OES;
    {class} property GL_PALETTE8_RGBA8_OES: Integer read _GetGL_PALETTE8_RGBA8_OES;
    {class} property GL_PERSPECTIVE_CORRECTION_HINT: Integer read _GetGL_PERSPECTIVE_CORRECTION_HINT;
    {class} property GL_POINTS: Integer read _GetGL_POINTS;
    {class} property GL_POINT_FADE_THRESHOLD_SIZE: Integer read _GetGL_POINT_FADE_THRESHOLD_SIZE;
    {class} property GL_POINT_SIZE: Integer read _GetGL_POINT_SIZE;
    {class} property GL_POINT_SMOOTH: Integer read _GetGL_POINT_SMOOTH;
    {class} property GL_POINT_SMOOTH_HINT: Integer read _GetGL_POINT_SMOOTH_HINT;
    {class} property GL_POLYGON_OFFSET_FILL: Integer read _GetGL_POLYGON_OFFSET_FILL;
    {class} property GL_POLYGON_SMOOTH_HINT: Integer read _GetGL_POLYGON_SMOOTH_HINT;
    {class} property GL_POSITION: Integer read _GetGL_POSITION;
    {class} property GL_PROJECTION: Integer read _GetGL_PROJECTION;
    {class} property GL_QUADRATIC_ATTENUATION: Integer read _GetGL_QUADRATIC_ATTENUATION;
    {class} property GL_RED_BITS: Integer read _GetGL_RED_BITS;
    {class} property GL_RENDERER: Integer read _GetGL_RENDERER;
    {class} property GL_REPEAT: Integer read _GetGL_REPEAT;
    {class} property GL_REPLACE: Integer read _GetGL_REPLACE;
    {class} property GL_RESCALE_NORMAL: Integer read _GetGL_RESCALE_NORMAL;
    {class} property GL_RGB: Integer read _GetGL_RGB;
    {class} property GL_RGBA: Integer read _GetGL_RGBA;
    {class} property GL_SAMPLE_ALPHA_TO_COVERAGE: Integer read _GetGL_SAMPLE_ALPHA_TO_COVERAGE;
    {class} property GL_SAMPLE_ALPHA_TO_ONE: Integer read _GetGL_SAMPLE_ALPHA_TO_ONE;
    {class} property GL_SAMPLE_COVERAGE: Integer read _GetGL_SAMPLE_COVERAGE;
    {class} property GL_SCISSOR_TEST: Integer read _GetGL_SCISSOR_TEST;
    {class} property GL_SET: Integer read _GetGL_SET;
    {class} property GL_SHININESS: Integer read _GetGL_SHININESS;
    {class} property GL_SHORT: Integer read _GetGL_SHORT;
    {class} property GL_SMOOTH: Integer read _GetGL_SMOOTH;
    {class} property GL_SMOOTH_LINE_WIDTH_RANGE: Integer read _GetGL_SMOOTH_LINE_WIDTH_RANGE;
    {class} property GL_SMOOTH_POINT_SIZE_RANGE: Integer read _GetGL_SMOOTH_POINT_SIZE_RANGE;
    {class} property GL_SPECULAR: Integer read _GetGL_SPECULAR;
    {class} property GL_SPOT_CUTOFF: Integer read _GetGL_SPOT_CUTOFF;
    {class} property GL_SPOT_DIRECTION: Integer read _GetGL_SPOT_DIRECTION;
    {class} property GL_SPOT_EXPONENT: Integer read _GetGL_SPOT_EXPONENT;
    {class} property GL_SRC_ALPHA: Integer read _GetGL_SRC_ALPHA;
    {class} property GL_SRC_ALPHA_SATURATE: Integer read _GetGL_SRC_ALPHA_SATURATE;
    {class} property GL_SRC_COLOR: Integer read _GetGL_SRC_COLOR;
    {class} property GL_STACK_OVERFLOW: Integer read _GetGL_STACK_OVERFLOW;
    {class} property GL_STACK_UNDERFLOW: Integer read _GetGL_STACK_UNDERFLOW;
    {class} property GL_STENCIL_BITS: Integer read _GetGL_STENCIL_BITS;
    {class} property GL_STENCIL_BUFFER_BIT: Integer read _GetGL_STENCIL_BUFFER_BIT;
    {class} property GL_STENCIL_TEST: Integer read _GetGL_STENCIL_TEST;
    {class} property GL_SUBPIXEL_BITS: Integer read _GetGL_SUBPIXEL_BITS;
    {class} property GL_TEXTURE: Integer read _GetGL_TEXTURE;
    {class} property GL_TEXTURE0: Integer read _GetGL_TEXTURE0;
    {class} property GL_TEXTURE1: Integer read _GetGL_TEXTURE1;
    {class} property GL_TEXTURE10: Integer read _GetGL_TEXTURE10;
    {class} property GL_TEXTURE11: Integer read _GetGL_TEXTURE11;
    {class} property GL_TEXTURE12: Integer read _GetGL_TEXTURE12;
    {class} property GL_TEXTURE13: Integer read _GetGL_TEXTURE13;
    {class} property GL_TEXTURE14: Integer read _GetGL_TEXTURE14;
    {class} property GL_TEXTURE15: Integer read _GetGL_TEXTURE15;
    {class} property GL_TEXTURE16: Integer read _GetGL_TEXTURE16;
    {class} property GL_TEXTURE17: Integer read _GetGL_TEXTURE17;
    {class} property GL_TEXTURE18: Integer read _GetGL_TEXTURE18;
    {class} property GL_TEXTURE19: Integer read _GetGL_TEXTURE19;
    {class} property GL_TEXTURE2: Integer read _GetGL_TEXTURE2;
    {class} property GL_TEXTURE20: Integer read _GetGL_TEXTURE20;
    {class} property GL_TEXTURE21: Integer read _GetGL_TEXTURE21;
    {class} property GL_TEXTURE22: Integer read _GetGL_TEXTURE22;
    {class} property GL_TEXTURE23: Integer read _GetGL_TEXTURE23;
    {class} property GL_TEXTURE24: Integer read _GetGL_TEXTURE24;
    {class} property GL_TEXTURE25: Integer read _GetGL_TEXTURE25;
    {class} property GL_TEXTURE26: Integer read _GetGL_TEXTURE26;
    {class} property GL_TEXTURE27: Integer read _GetGL_TEXTURE27;
    {class} property GL_TEXTURE28: Integer read _GetGL_TEXTURE28;
    {class} property GL_TEXTURE29: Integer read _GetGL_TEXTURE29;
    {class} property GL_TEXTURE3: Integer read _GetGL_TEXTURE3;
    {class} property GL_TEXTURE30: Integer read _GetGL_TEXTURE30;
    {class} property GL_TEXTURE31: Integer read _GetGL_TEXTURE31;
    {class} property GL_TEXTURE4: Integer read _GetGL_TEXTURE4;
    {class} property GL_TEXTURE5: Integer read _GetGL_TEXTURE5;
    {class} property GL_TEXTURE6: Integer read _GetGL_TEXTURE6;
    {class} property GL_TEXTURE7: Integer read _GetGL_TEXTURE7;
    {class} property GL_TEXTURE8: Integer read _GetGL_TEXTURE8;
    {class} property GL_TEXTURE9: Integer read _GetGL_TEXTURE9;
    {class} property GL_TEXTURE_2D: Integer read _GetGL_TEXTURE_2D;
    {class} property GL_TEXTURE_COORD_ARRAY: Integer read _GetGL_TEXTURE_COORD_ARRAY;
    {class} property GL_TEXTURE_ENV: Integer read _GetGL_TEXTURE_ENV;
    {class} property GL_TEXTURE_ENV_COLOR: Integer read _GetGL_TEXTURE_ENV_COLOR;
    {class} property GL_TEXTURE_ENV_MODE: Integer read _GetGL_TEXTURE_ENV_MODE;
    {class} property GL_TEXTURE_MAG_FILTER: Integer read _GetGL_TEXTURE_MAG_FILTER;
    {class} property GL_TEXTURE_MIN_FILTER: Integer read _GetGL_TEXTURE_MIN_FILTER;
    {class} property GL_TEXTURE_WRAP_S: Integer read _GetGL_TEXTURE_WRAP_S;
    {class} property GL_TEXTURE_WRAP_T: Integer read _GetGL_TEXTURE_WRAP_T;
    {class} property GL_TRIANGLES: Integer read _GetGL_TRIANGLES;
    {class} property GL_TRIANGLE_FAN: Integer read _GetGL_TRIANGLE_FAN;
    {class} property GL_TRIANGLE_STRIP: Integer read _GetGL_TRIANGLE_STRIP;
    {class} property GL_TRUE: Integer read _GetGL_TRUE;
    {class} property GL_UNPACK_ALIGNMENT: Integer read _GetGL_UNPACK_ALIGNMENT;
    {class} property GL_UNSIGNED_BYTE: Integer read _GetGL_UNSIGNED_BYTE;
    {class} property GL_UNSIGNED_SHORT: Integer read _GetGL_UNSIGNED_SHORT;
    {class} property GL_UNSIGNED_SHORT_4_4_4_4: Integer read _GetGL_UNSIGNED_SHORT_4_4_4_4;
    {class} property GL_UNSIGNED_SHORT_5_5_5_1: Integer read _GetGL_UNSIGNED_SHORT_5_5_5_1;
    {class} property GL_UNSIGNED_SHORT_5_6_5: Integer read _GetGL_UNSIGNED_SHORT_5_6_5;
    {class} property GL_VENDOR: Integer read _GetGL_VENDOR;
    {class} property GL_VERSION: Integer read _GetGL_VERSION;
    {class} property GL_VERTEX_ARRAY: Integer read _GetGL_VERTEX_ARRAY;
    {class} property GL_XOR: Integer read _GetGL_XOR;
    {class} property GL_ZERO: Integer read _GetGL_ZERO;
  end;

  [JavaSignature('android/opengl/GLES10')]
  JGLES10 = interface(JObject)
    ['{C4CE6341-D0A4-4865-87A2-5251AE952149}']
  end;
  TJGLES10 = class(TJavaGenericImport<JGLES10Class, JGLES10>) end;

  JGLES10ExtClass = interface(JObjectClass)
    ['{15FC6B5A-A329-4CA4-8C7B-96DD6FCA4775}']
    {class} function init: JGLES10Ext; cdecl;
    {class} function glQueryMatrixxOES(mantissa: TJavaArray<Integer>; mantissaOffset: Integer; exponent: TJavaArray<Integer>; exponentOffset: Integer): Integer; cdecl; overload;
    {class} function glQueryMatrixxOES(mantissa: JIntBuffer; exponent: JIntBuffer): Integer; cdecl; overload;
  end;

  [JavaSignature('android/opengl/GLES10Ext')]
  JGLES10Ext = interface(JObject)
    ['{2AC60F2B-5ED3-4A6C-ACEC-AFE55D9545E7}']
  end;
  TJGLES10Ext = class(TJavaGenericImport<JGLES10ExtClass, JGLES10Ext>) end;

  JGLES11Class = interface(JGLES10Class)
    ['{7E756B17-DA84-4FA1-95BD-A2C395836589}']
    {class} function _GetGL_ACTIVE_TEXTURE: Integer; cdecl;
    {class} function _GetGL_ADD_SIGNED: Integer; cdecl;
    {class} function _GetGL_ALPHA_SCALE: Integer; cdecl;
    {class} function _GetGL_ALPHA_TEST_FUNC: Integer; cdecl;
    {class} function _GetGL_ALPHA_TEST_REF: Integer; cdecl;
    {class} function _GetGL_ARRAY_BUFFER: Integer; cdecl;
    {class} function _GetGL_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_BLEND_DST: Integer; cdecl;
    {class} function _GetGL_BLEND_SRC: Integer; cdecl;
    {class} function _GetGL_BUFFER_ACCESS: Integer; cdecl;
    {class} function _GetGL_BUFFER_SIZE: Integer; cdecl;
    {class} function _GetGL_BUFFER_USAGE: Integer; cdecl;
    {class} function _GetGL_CLIENT_ACTIVE_TEXTURE: Integer; cdecl;
    {class} function _GetGL_CLIP_PLANE0: Integer; cdecl;
    {class} function _GetGL_CLIP_PLANE1: Integer; cdecl;
    {class} function _GetGL_CLIP_PLANE2: Integer; cdecl;
    {class} function _GetGL_CLIP_PLANE3: Integer; cdecl;
    {class} function _GetGL_CLIP_PLANE4: Integer; cdecl;
    {class} function _GetGL_CLIP_PLANE5: Integer; cdecl;
    {class} function _GetGL_COLOR_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_COLOR_ARRAY_POINTER: Integer; cdecl;
    {class} function _GetGL_COLOR_ARRAY_SIZE: Integer; cdecl;
    {class} function _GetGL_COLOR_ARRAY_STRIDE: Integer; cdecl;
    {class} function _GetGL_COLOR_ARRAY_TYPE: Integer; cdecl;
    {class} function _GetGL_COLOR_CLEAR_VALUE: Integer; cdecl;
    {class} function _GetGL_COLOR_WRITEMASK: Integer; cdecl;
    {class} function _GetGL_COMBINE: Integer; cdecl;
    {class} function _GetGL_COMBINE_ALPHA: Integer; cdecl;
    {class} function _GetGL_COMBINE_RGB: Integer; cdecl;
    {class} function _GetGL_CONSTANT: Integer; cdecl;
    {class} function _GetGL_COORD_REPLACE_OES: Integer; cdecl;
    {class} function _GetGL_CULL_FACE_MODE: Integer; cdecl;
    {class} function _GetGL_CURRENT_COLOR: Integer; cdecl;
    {class} function _GetGL_CURRENT_NORMAL: Integer; cdecl;
    {class} function _GetGL_CURRENT_TEXTURE_COORDS: Integer; cdecl;
    {class} function _GetGL_DEPTH_CLEAR_VALUE: Integer; cdecl;
    {class} function _GetGL_DEPTH_FUNC: Integer; cdecl;
    {class} function _GetGL_DEPTH_RANGE: Integer; cdecl;
    {class} function _GetGL_DEPTH_WRITEMASK: Integer; cdecl;
    {class} function _GetGL_DOT3_RGB: Integer; cdecl;
    {class} function _GetGL_DOT3_RGBA: Integer; cdecl;
    {class} function _GetGL_DYNAMIC_DRAW: Integer; cdecl;
    {class} function _GetGL_ELEMENT_ARRAY_BUFFER: Integer; cdecl;
    {class} function _GetGL_ELEMENT_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_FRONT_FACE: Integer; cdecl;
    {class} function _GetGL_GENERATE_MIPMAP: Integer; cdecl;
    {class} function _GetGL_GENERATE_MIPMAP_HINT: Integer; cdecl;
    {class} function _GetGL_INTERPOLATE: Integer; cdecl;
    {class} function _GetGL_LINE_WIDTH: Integer; cdecl;
    {class} function _GetGL_LOGIC_OP_MODE: Integer; cdecl;
    {class} function _GetGL_MATRIX_MODE: Integer; cdecl;
    {class} function _GetGL_MAX_CLIP_PLANES: Integer; cdecl;
    {class} function _GetGL_MODELVIEW_MATRIX: Integer; cdecl;
    {class} function _GetGL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES: Integer; cdecl;
    {class} function _GetGL_MODELVIEW_STACK_DEPTH: Integer; cdecl;
    {class} function _GetGL_NORMAL_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_NORMAL_ARRAY_POINTER: Integer; cdecl;
    {class} function _GetGL_NORMAL_ARRAY_STRIDE: Integer; cdecl;
    {class} function _GetGL_NORMAL_ARRAY_TYPE: Integer; cdecl;
    {class} function _GetGL_OPERAND0_ALPHA: Integer; cdecl;
    {class} function _GetGL_OPERAND0_RGB: Integer; cdecl;
    {class} function _GetGL_OPERAND1_ALPHA: Integer; cdecl;
    {class} function _GetGL_OPERAND1_RGB: Integer; cdecl;
    {class} function _GetGL_OPERAND2_ALPHA: Integer; cdecl;
    {class} function _GetGL_OPERAND2_RGB: Integer; cdecl;
    {class} function _GetGL_POINT_DISTANCE_ATTENUATION: Integer; cdecl;
    {class} function _GetGL_POINT_FADE_THRESHOLD_SIZE: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE_ARRAY_OES: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE_ARRAY_POINTER_OES: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE_ARRAY_STRIDE_OES: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE_ARRAY_TYPE_OES: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE_MAX: Integer; cdecl;
    {class} function _GetGL_POINT_SIZE_MIN: Integer; cdecl;
    {class} function _GetGL_POINT_SPRITE_OES: Integer; cdecl;
    {class} function _GetGL_POLYGON_OFFSET_FACTOR: Integer; cdecl;
    {class} function _GetGL_POLYGON_OFFSET_UNITS: Integer; cdecl;
    {class} function _GetGL_PREVIOUS: Integer; cdecl;
    {class} function _GetGL_PRIMARY_COLOR: Integer; cdecl;
    {class} function _GetGL_PROJECTION_MATRIX: Integer; cdecl;
    {class} function _GetGL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES: Integer; cdecl;
    {class} function _GetGL_PROJECTION_STACK_DEPTH: Integer; cdecl;
    {class} function _GetGL_RGB_SCALE: Integer; cdecl;
    {class} function _GetGL_SAMPLES: Integer; cdecl;
    {class} function _GetGL_SAMPLE_BUFFERS: Integer; cdecl;
    {class} function _GetGL_SAMPLE_COVERAGE_INVERT: Integer; cdecl;
    {class} function _GetGL_SAMPLE_COVERAGE_VALUE: Integer; cdecl;
    {class} function _GetGL_SCISSOR_BOX: Integer; cdecl;
    {class} function _GetGL_SHADE_MODEL: Integer; cdecl;
    {class} function _GetGL_SRC0_ALPHA: Integer; cdecl;
    {class} function _GetGL_SRC0_RGB: Integer; cdecl;
    {class} function _GetGL_SRC1_ALPHA: Integer; cdecl;
    {class} function _GetGL_SRC1_RGB: Integer; cdecl;
    {class} function _GetGL_SRC2_ALPHA: Integer; cdecl;
    {class} function _GetGL_SRC2_RGB: Integer; cdecl;
    {class} function _GetGL_STATIC_DRAW: Integer; cdecl;
    {class} function _GetGL_STENCIL_CLEAR_VALUE: Integer; cdecl;
    {class} function _GetGL_STENCIL_FAIL: Integer; cdecl;
    {class} function _GetGL_STENCIL_FUNC: Integer; cdecl;
    {class} function _GetGL_STENCIL_PASS_DEPTH_FAIL: Integer; cdecl;
    {class} function _GetGL_STENCIL_PASS_DEPTH_PASS: Integer; cdecl;
    {class} function _GetGL_STENCIL_REF: Integer; cdecl;
    {class} function _GetGL_STENCIL_VALUE_MASK: Integer; cdecl;
    {class} function _GetGL_STENCIL_WRITEMASK: Integer; cdecl;
    {class} function _GetGL_SUBTRACT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_2D: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COORD_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COORD_ARRAY_POINTER: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COORD_ARRAY_SIZE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COORD_ARRAY_STRIDE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COORD_ARRAY_TYPE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MATRIX: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_STACK_DEPTH: Integer; cdecl;
    {class} function _GetGL_VERTEX_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_VERTEX_ARRAY_POINTER: Integer; cdecl;
    {class} function _GetGL_VERTEX_ARRAY_SIZE: Integer; cdecl;
    {class} function _GetGL_VERTEX_ARRAY_STRIDE: Integer; cdecl;
    {class} function _GetGL_VERTEX_ARRAY_TYPE: Integer; cdecl;
    {class} function _GetGL_VIEWPORT: Integer; cdecl;
    {class} function _GetGL_WRITE_ONLY: Integer; cdecl;
    {class} function init: JGLES11; cdecl;
    {class} procedure glBindBuffer(target: Integer; buffer: Integer); cdecl;
    {class} procedure glBufferData(target: Integer; size: Integer; data: JBuffer; usage: Integer); cdecl;
    {class} procedure glBufferSubData(target: Integer; offset: Integer; size: Integer; data: JBuffer); cdecl;
    {class} procedure glClipPlanef(plane: Integer; equation: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glClipPlanef(plane: Integer; equation: JFloatBuffer); cdecl; overload;
    {class} procedure glClipPlanex(plane: Integer; equation: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glClipPlanex(plane: Integer; equation: JIntBuffer); cdecl; overload;
    {class} procedure glColor4ub(red: Byte; green: Byte; blue: Byte; alpha: Byte); cdecl;
    {class} procedure glColorPointer(size: Integer; type_: Integer; stride: Integer; offset: Integer); cdecl;
    {class} procedure glDeleteBuffers(n: Integer; buffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteBuffers(n: Integer; buffers: JIntBuffer); cdecl; overload;
    {class} procedure glDrawElements(mode: Integer; count: Integer; type_: Integer; offset: Integer); cdecl;
    {class} procedure glGenBuffers(n: Integer; buffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenBuffers(n: Integer; buffers: JIntBuffer); cdecl; overload;
    {class} procedure glGetBooleanv(pname: Integer; params: TJavaArray<Boolean>; offset: Integer); cdecl; overload;
    {class} procedure glGetBooleanv(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetBufferParameteriv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetBufferParameteriv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetClipPlanef(pname: Integer; eqn: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetClipPlanef(pname: Integer; eqn: JFloatBuffer); cdecl; overload;
    {class} procedure glGetClipPlanex(pname: Integer; eqn: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetClipPlanex(pname: Integer; eqn: JIntBuffer); cdecl; overload;
    {class} procedure glGetFixedv(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetFixedv(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetFloatv(pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetFloatv(pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetLightfv(light: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetLightfv(light: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetLightxv(light: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetLightxv(light: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetMaterialfv(face: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetMaterialfv(face: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetMaterialxv(face: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetMaterialxv(face: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexEnvfv(env: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexEnvfv(env: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetTexEnviv(env: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexEnviv(env: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexEnvxv(env: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexEnvxv(env: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexParameterfv(target: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexParameterfv(target: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetTexParameteriv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexParameteriv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexParameterxv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexParameterxv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glIsBuffer(buffer: Integer): Boolean; cdecl;
    {class} function glIsEnabled(cap: Integer): Boolean; cdecl;
    {class} function glIsTexture(texture: Integer): Boolean; cdecl;
    {class} procedure glNormalPointer(type_: Integer; stride: Integer; offset: Integer); cdecl;
    {class} procedure glPointParameterf(pname: Integer; param: Single); cdecl;
    {class} procedure glPointParameterfv(pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glPointParameterfv(pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glPointParameterx(pname: Integer; param: Integer); cdecl;
    {class} procedure glPointParameterxv(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glPointParameterxv(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glPointSizePointerOES(type_: Integer; stride: Integer; pointer: JBuffer); cdecl;
    {class} procedure glTexCoordPointer(size: Integer; type_: Integer; stride: Integer; offset: Integer); cdecl;
    {class} procedure glTexEnvi(target: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexEnviv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexEnviv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexParameterfv(target: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glTexParameterfv(target: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glTexParameteri(target: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexParameteriv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexParameteriv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexParameterxv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexParameterxv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glVertexPointer(size: Integer; type_: Integer; stride: Integer; offset: Integer); cdecl;
    {class} property GL_ACTIVE_TEXTURE: Integer read _GetGL_ACTIVE_TEXTURE;
    {class} property GL_ADD_SIGNED: Integer read _GetGL_ADD_SIGNED;
    {class} property GL_ALPHA_SCALE: Integer read _GetGL_ALPHA_SCALE;
    {class} property GL_ALPHA_TEST_FUNC: Integer read _GetGL_ALPHA_TEST_FUNC;
    {class} property GL_ALPHA_TEST_REF: Integer read _GetGL_ALPHA_TEST_REF;
    {class} property GL_ARRAY_BUFFER: Integer read _GetGL_ARRAY_BUFFER;
    {class} property GL_ARRAY_BUFFER_BINDING: Integer read _GetGL_ARRAY_BUFFER_BINDING;
    {class} property GL_BLEND_DST: Integer read _GetGL_BLEND_DST;
    {class} property GL_BLEND_SRC: Integer read _GetGL_BLEND_SRC;
    {class} property GL_BUFFER_ACCESS: Integer read _GetGL_BUFFER_ACCESS;
    {class} property GL_BUFFER_SIZE: Integer read _GetGL_BUFFER_SIZE;
    {class} property GL_BUFFER_USAGE: Integer read _GetGL_BUFFER_USAGE;
    {class} property GL_CLIENT_ACTIVE_TEXTURE: Integer read _GetGL_CLIENT_ACTIVE_TEXTURE;
    {class} property GL_CLIP_PLANE0: Integer read _GetGL_CLIP_PLANE0;
    {class} property GL_CLIP_PLANE1: Integer read _GetGL_CLIP_PLANE1;
    {class} property GL_CLIP_PLANE2: Integer read _GetGL_CLIP_PLANE2;
    {class} property GL_CLIP_PLANE3: Integer read _GetGL_CLIP_PLANE3;
    {class} property GL_CLIP_PLANE4: Integer read _GetGL_CLIP_PLANE4;
    {class} property GL_CLIP_PLANE5: Integer read _GetGL_CLIP_PLANE5;
    {class} property GL_COLOR_ARRAY_BUFFER_BINDING: Integer read _GetGL_COLOR_ARRAY_BUFFER_BINDING;
    {class} property GL_COLOR_ARRAY_POINTER: Integer read _GetGL_COLOR_ARRAY_POINTER;
    {class} property GL_COLOR_ARRAY_SIZE: Integer read _GetGL_COLOR_ARRAY_SIZE;
    {class} property GL_COLOR_ARRAY_STRIDE: Integer read _GetGL_COLOR_ARRAY_STRIDE;
    {class} property GL_COLOR_ARRAY_TYPE: Integer read _GetGL_COLOR_ARRAY_TYPE;
    {class} property GL_COLOR_CLEAR_VALUE: Integer read _GetGL_COLOR_CLEAR_VALUE;
    {class} property GL_COLOR_WRITEMASK: Integer read _GetGL_COLOR_WRITEMASK;
    {class} property GL_COMBINE: Integer read _GetGL_COMBINE;
    {class} property GL_COMBINE_ALPHA: Integer read _GetGL_COMBINE_ALPHA;
    {class} property GL_COMBINE_RGB: Integer read _GetGL_COMBINE_RGB;
    {class} property GL_CONSTANT: Integer read _GetGL_CONSTANT;
    {class} property GL_COORD_REPLACE_OES: Integer read _GetGL_COORD_REPLACE_OES;
    {class} property GL_CULL_FACE_MODE: Integer read _GetGL_CULL_FACE_MODE;
    {class} property GL_CURRENT_COLOR: Integer read _GetGL_CURRENT_COLOR;
    {class} property GL_CURRENT_NORMAL: Integer read _GetGL_CURRENT_NORMAL;
    {class} property GL_CURRENT_TEXTURE_COORDS: Integer read _GetGL_CURRENT_TEXTURE_COORDS;
    {class} property GL_DEPTH_CLEAR_VALUE: Integer read _GetGL_DEPTH_CLEAR_VALUE;
    {class} property GL_DEPTH_FUNC: Integer read _GetGL_DEPTH_FUNC;
    {class} property GL_DEPTH_RANGE: Integer read _GetGL_DEPTH_RANGE;
    {class} property GL_DEPTH_WRITEMASK: Integer read _GetGL_DEPTH_WRITEMASK;
    {class} property GL_DOT3_RGB: Integer read _GetGL_DOT3_RGB;
    {class} property GL_DOT3_RGBA: Integer read _GetGL_DOT3_RGBA;
    {class} property GL_DYNAMIC_DRAW: Integer read _GetGL_DYNAMIC_DRAW;
    {class} property GL_ELEMENT_ARRAY_BUFFER: Integer read _GetGL_ELEMENT_ARRAY_BUFFER;
    {class} property GL_ELEMENT_ARRAY_BUFFER_BINDING: Integer read _GetGL_ELEMENT_ARRAY_BUFFER_BINDING;
    {class} property GL_FRONT_FACE: Integer read _GetGL_FRONT_FACE;
    {class} property GL_GENERATE_MIPMAP: Integer read _GetGL_GENERATE_MIPMAP;
    {class} property GL_GENERATE_MIPMAP_HINT: Integer read _GetGL_GENERATE_MIPMAP_HINT;
    {class} property GL_INTERPOLATE: Integer read _GetGL_INTERPOLATE;
    {class} property GL_LINE_WIDTH: Integer read _GetGL_LINE_WIDTH;
    {class} property GL_LOGIC_OP_MODE: Integer read _GetGL_LOGIC_OP_MODE;
    {class} property GL_MATRIX_MODE: Integer read _GetGL_MATRIX_MODE;
    {class} property GL_MAX_CLIP_PLANES: Integer read _GetGL_MAX_CLIP_PLANES;
    {class} property GL_MODELVIEW_MATRIX: Integer read _GetGL_MODELVIEW_MATRIX;
    {class} property GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES: Integer read _GetGL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES;
    {class} property GL_MODELVIEW_STACK_DEPTH: Integer read _GetGL_MODELVIEW_STACK_DEPTH;
    {class} property GL_NORMAL_ARRAY_BUFFER_BINDING: Integer read _GetGL_NORMAL_ARRAY_BUFFER_BINDING;
    {class} property GL_NORMAL_ARRAY_POINTER: Integer read _GetGL_NORMAL_ARRAY_POINTER;
    {class} property GL_NORMAL_ARRAY_STRIDE: Integer read _GetGL_NORMAL_ARRAY_STRIDE;
    {class} property GL_NORMAL_ARRAY_TYPE: Integer read _GetGL_NORMAL_ARRAY_TYPE;
    {class} property GL_OPERAND0_ALPHA: Integer read _GetGL_OPERAND0_ALPHA;
    {class} property GL_OPERAND0_RGB: Integer read _GetGL_OPERAND0_RGB;
    {class} property GL_OPERAND1_ALPHA: Integer read _GetGL_OPERAND1_ALPHA;
    {class} property GL_OPERAND1_RGB: Integer read _GetGL_OPERAND1_RGB;
    {class} property GL_OPERAND2_ALPHA: Integer read _GetGL_OPERAND2_ALPHA;
    {class} property GL_OPERAND2_RGB: Integer read _GetGL_OPERAND2_RGB;
    {class} property GL_POINT_DISTANCE_ATTENUATION: Integer read _GetGL_POINT_DISTANCE_ATTENUATION;
    {class} //GL_POINT_FADE_THRESHOLD_SIZE is defined in parent interface
    {class} //GL_POINT_SIZE is defined in parent interface
    {class} property GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES: Integer read _GetGL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES;
    {class} property GL_POINT_SIZE_ARRAY_OES: Integer read _GetGL_POINT_SIZE_ARRAY_OES;
    {class} property GL_POINT_SIZE_ARRAY_POINTER_OES: Integer read _GetGL_POINT_SIZE_ARRAY_POINTER_OES;
    {class} property GL_POINT_SIZE_ARRAY_STRIDE_OES: Integer read _GetGL_POINT_SIZE_ARRAY_STRIDE_OES;
    {class} property GL_POINT_SIZE_ARRAY_TYPE_OES: Integer read _GetGL_POINT_SIZE_ARRAY_TYPE_OES;
    {class} property GL_POINT_SIZE_MAX: Integer read _GetGL_POINT_SIZE_MAX;
    {class} property GL_POINT_SIZE_MIN: Integer read _GetGL_POINT_SIZE_MIN;
    {class} property GL_POINT_SPRITE_OES: Integer read _GetGL_POINT_SPRITE_OES;
    {class} property GL_POLYGON_OFFSET_FACTOR: Integer read _GetGL_POLYGON_OFFSET_FACTOR;
    {class} property GL_POLYGON_OFFSET_UNITS: Integer read _GetGL_POLYGON_OFFSET_UNITS;
    {class} property GL_PREVIOUS: Integer read _GetGL_PREVIOUS;
    {class} property GL_PRIMARY_COLOR: Integer read _GetGL_PRIMARY_COLOR;
    {class} property GL_PROJECTION_MATRIX: Integer read _GetGL_PROJECTION_MATRIX;
    {class} property GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES: Integer read _GetGL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES;
    {class} property GL_PROJECTION_STACK_DEPTH: Integer read _GetGL_PROJECTION_STACK_DEPTH;
    {class} property GL_RGB_SCALE: Integer read _GetGL_RGB_SCALE;
    {class} property GL_SAMPLES: Integer read _GetGL_SAMPLES;
    {class} property GL_SAMPLE_BUFFERS: Integer read _GetGL_SAMPLE_BUFFERS;
    {class} property GL_SAMPLE_COVERAGE_INVERT: Integer read _GetGL_SAMPLE_COVERAGE_INVERT;
    {class} property GL_SAMPLE_COVERAGE_VALUE: Integer read _GetGL_SAMPLE_COVERAGE_VALUE;
    {class} property GL_SCISSOR_BOX: Integer read _GetGL_SCISSOR_BOX;
    {class} property GL_SHADE_MODEL: Integer read _GetGL_SHADE_MODEL;
    {class} property GL_SRC0_ALPHA: Integer read _GetGL_SRC0_ALPHA;
    {class} property GL_SRC0_RGB: Integer read _GetGL_SRC0_RGB;
    {class} property GL_SRC1_ALPHA: Integer read _GetGL_SRC1_ALPHA;
    {class} property GL_SRC1_RGB: Integer read _GetGL_SRC1_RGB;
    {class} property GL_SRC2_ALPHA: Integer read _GetGL_SRC2_ALPHA;
    {class} property GL_SRC2_RGB: Integer read _GetGL_SRC2_RGB;
    {class} property GL_STATIC_DRAW: Integer read _GetGL_STATIC_DRAW;
    {class} property GL_STENCIL_CLEAR_VALUE: Integer read _GetGL_STENCIL_CLEAR_VALUE;
    {class} property GL_STENCIL_FAIL: Integer read _GetGL_STENCIL_FAIL;
    {class} property GL_STENCIL_FUNC: Integer read _GetGL_STENCIL_FUNC;
    {class} property GL_STENCIL_PASS_DEPTH_FAIL: Integer read _GetGL_STENCIL_PASS_DEPTH_FAIL;
    {class} property GL_STENCIL_PASS_DEPTH_PASS: Integer read _GetGL_STENCIL_PASS_DEPTH_PASS;
    {class} property GL_STENCIL_REF: Integer read _GetGL_STENCIL_REF;
    {class} property GL_STENCIL_VALUE_MASK: Integer read _GetGL_STENCIL_VALUE_MASK;
    {class} property GL_STENCIL_WRITEMASK: Integer read _GetGL_STENCIL_WRITEMASK;
    {class} property GL_SUBTRACT: Integer read _GetGL_SUBTRACT;
    {class} property GL_TEXTURE_BINDING_2D: Integer read _GetGL_TEXTURE_BINDING_2D;
    {class} property GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING: Integer read _GetGL_TEXTURE_COORD_ARRAY_BUFFER_BINDING;
    {class} property GL_TEXTURE_COORD_ARRAY_POINTER: Integer read _GetGL_TEXTURE_COORD_ARRAY_POINTER;
    {class} property GL_TEXTURE_COORD_ARRAY_SIZE: Integer read _GetGL_TEXTURE_COORD_ARRAY_SIZE;
    {class} property GL_TEXTURE_COORD_ARRAY_STRIDE: Integer read _GetGL_TEXTURE_COORD_ARRAY_STRIDE;
    {class} property GL_TEXTURE_COORD_ARRAY_TYPE: Integer read _GetGL_TEXTURE_COORD_ARRAY_TYPE;
    {class} property GL_TEXTURE_MATRIX: Integer read _GetGL_TEXTURE_MATRIX;
    {class} property GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES: Integer read _GetGL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES;
    {class} property GL_TEXTURE_STACK_DEPTH: Integer read _GetGL_TEXTURE_STACK_DEPTH;
    {class} property GL_VERTEX_ARRAY_BUFFER_BINDING: Integer read _GetGL_VERTEX_ARRAY_BUFFER_BINDING;
    {class} property GL_VERTEX_ARRAY_POINTER: Integer read _GetGL_VERTEX_ARRAY_POINTER;
    {class} property GL_VERTEX_ARRAY_SIZE: Integer read _GetGL_VERTEX_ARRAY_SIZE;
    {class} property GL_VERTEX_ARRAY_STRIDE: Integer read _GetGL_VERTEX_ARRAY_STRIDE;
    {class} property GL_VERTEX_ARRAY_TYPE: Integer read _GetGL_VERTEX_ARRAY_TYPE;
    {class} property GL_VIEWPORT: Integer read _GetGL_VIEWPORT;
    {class} property GL_WRITE_ONLY: Integer read _GetGL_WRITE_ONLY;
  end;

  [JavaSignature('android/opengl/GLES11')]
  JGLES11 = interface(JGLES10)
    ['{07CD2AD1-3814-49AC-AA6E-09475BED866C}']
  end;
  TJGLES11 = class(TJavaGenericImport<JGLES11Class, JGLES11>) end;

  JGLES11ExtClass = interface(JObjectClass)
    ['{67F44FDE-35A7-4E7D-A292-13B5A0A63992}']
    {class} function _GetGL_3DC_XY_AMD: Integer; cdecl;
    {class} function _GetGL_3DC_X_AMD: Integer; cdecl;
    {class} function _GetGL_ATC_RGBA_EXPLICIT_ALPHA_AMD: Integer; cdecl;
    {class} function _GetGL_ATC_RGBA_INTERPOLATED_ALPHA_AMD: Integer; cdecl;
    {class} function _GetGL_ATC_RGB_AMD: Integer; cdecl;
    {class} function _GetGL_BGRA: Integer; cdecl;
    {class} function _GetGL_BLEND_DST_ALPHA_OES: Integer; cdecl;
    {class} function _GetGL_BLEND_DST_RGB_OES: Integer; cdecl;
    {class} function _GetGL_BLEND_EQUATION_ALPHA_OES: Integer; cdecl;
    {class} function _GetGL_BLEND_EQUATION_OES: Integer; cdecl;
    {class} function _GetGL_BLEND_EQUATION_RGB_OES: Integer; cdecl;
    {class} function _GetGL_BLEND_SRC_ALPHA_OES: Integer; cdecl;
    {class} function _GetGL_BLEND_SRC_RGB_OES: Integer; cdecl;
    {class} function _GetGL_BUFFER_ACCESS_OES: Integer; cdecl;
    {class} function _GetGL_BUFFER_MAPPED_OES: Integer; cdecl;
    {class} function _GetGL_BUFFER_MAP_POINTER_OES: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT0_OES: Integer; cdecl;
    {class} function _GetGL_CURRENT_PALETTE_MATRIX_OES: Integer; cdecl;
    {class} function _GetGL_DECR_WRAP_OES: Integer; cdecl;
    {class} function _GetGL_DEPTH24_STENCIL8_OES: Integer; cdecl;
    {class} function _GetGL_DEPTH_ATTACHMENT_OES: Integer; cdecl;
    {class} function _GetGL_DEPTH_COMPONENT16_OES: Integer; cdecl;
    {class} function _GetGL_DEPTH_COMPONENT24_OES: Integer; cdecl;
    {class} function _GetGL_DEPTH_COMPONENT32_OES: Integer; cdecl;
    {class} function _GetGL_DEPTH_STENCIL_OES: Integer; cdecl;
    {class} function _GetGL_ETC1_RGB8_OES: Integer; cdecl;
    {class} function _GetGL_FIXED_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_BINDING_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_COMPLETE_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_UNSUPPORTED_OES: Integer; cdecl;
    {class} function _GetGL_FUNC_ADD_OES: Integer; cdecl;
    {class} function _GetGL_FUNC_REVERSE_SUBTRACT_OES: Integer; cdecl;
    {class} function _GetGL_FUNC_SUBTRACT_OES: Integer; cdecl;
    {class} function _GetGL_INCR_WRAP_OES: Integer; cdecl;
    {class} function _GetGL_INVALID_FRAMEBUFFER_OPERATION_OES: Integer; cdecl;
    {class} function _GetGL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES: Integer; cdecl;
    {class} function _GetGL_MATRIX_INDEX_ARRAY_OES: Integer; cdecl;
    {class} function _GetGL_MATRIX_INDEX_ARRAY_POINTER_OES: Integer; cdecl;
    {class} function _GetGL_MATRIX_INDEX_ARRAY_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_MATRIX_INDEX_ARRAY_STRIDE_OES: Integer; cdecl;
    {class} function _GetGL_MATRIX_INDEX_ARRAY_TYPE_OES: Integer; cdecl;
    {class} function _GetGL_MATRIX_PALETTE_OES: Integer; cdecl;
    {class} function _GetGL_MAX_CUBE_MAP_TEXTURE_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_MAX_PALETTE_MATRICES_OES: Integer; cdecl;
    {class} function _GetGL_MAX_RENDERBUFFER_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_MAX_TEXTURE_MAX_ANISOTROPY_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_UNITS_OES: Integer; cdecl;
    {class} function _GetGL_MIRRORED_REPEAT_OES: Integer; cdecl;
    {class} function _GetGL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES: Integer; cdecl;
    {class} function _GetGL_NONE_OES: Integer; cdecl;
    {class} function _GetGL_NORMAL_MAP_OES: Integer; cdecl;
    {class} function _GetGL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES: Integer; cdecl;
    {class} function _GetGL_REFLECTION_MAP_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_ALPHA_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_BINDING_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_BLUE_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_DEPTH_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_GREEN_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_HEIGHT_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_INTERNAL_FORMAT_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_RED_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_STENCIL_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_WIDTH_OES: Integer; cdecl;
    {class} function _GetGL_REQUIRED_TEXTURE_IMAGE_UNITS_OES: Integer; cdecl;
    {class} function _GetGL_RGB565_OES: Integer; cdecl;
    {class} function _GetGL_RGB5_A1_OES: Integer; cdecl;
    {class} function _GetGL_RGB8_OES: Integer; cdecl;
    {class} function _GetGL_RGBA4_OES: Integer; cdecl;
    {class} function _GetGL_RGBA8_OES: Integer; cdecl;
    {class} function _GetGL_SAMPLER_EXTERNAL_OES: Integer; cdecl;
    {class} function _GetGL_STENCIL_ATTACHMENT_OES: Integer; cdecl;
    {class} function _GetGL_STENCIL_INDEX1_OES: Integer; cdecl;
    {class} function _GetGL_STENCIL_INDEX4_OES: Integer; cdecl;
    {class} function _GetGL_STENCIL_INDEX8_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_CUBE_MAP_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_EXTERNAL_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CROP_RECT_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_POSITIVE_X_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_EXTERNAL_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_GEN_MODE_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_GEN_STR_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MAX_ANISOTROPY_EXT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_24_8_OES: Integer; cdecl;
    {class} function _GetGL_WEIGHT_ARRAY_BUFFER_BINDING_OES: Integer; cdecl;
    {class} function _GetGL_WEIGHT_ARRAY_OES: Integer; cdecl;
    {class} function _GetGL_WEIGHT_ARRAY_POINTER_OES: Integer; cdecl;
    {class} function _GetGL_WEIGHT_ARRAY_SIZE_OES: Integer; cdecl;
    {class} function _GetGL_WEIGHT_ARRAY_STRIDE_OES: Integer; cdecl;
    {class} function _GetGL_WEIGHT_ARRAY_TYPE_OES: Integer; cdecl;
    {class} function _GetGL_WRITE_ONLY_OES: Integer; cdecl;
    {class} function init: JGLES11Ext; cdecl;
    {class} procedure glAlphaFuncxOES(func: Integer; ref: Integer); cdecl;
    {class} procedure glBindFramebufferOES(target: Integer; framebuffer: Integer); cdecl;
    {class} procedure glBindRenderbufferOES(target: Integer; renderbuffer: Integer); cdecl;
    {class} procedure glBlendEquationOES(mode: Integer); cdecl;
    {class} procedure glBlendEquationSeparateOES(modeRGB: Integer; modeAlpha: Integer); cdecl;
    {class} procedure glBlendFuncSeparateOES(srcRGB: Integer; dstRGB: Integer; srcAlpha: Integer; dstAlpha: Integer); cdecl;
    {class} function glCheckFramebufferStatusOES(target: Integer): Integer; cdecl;
    {class} procedure glClearColorxOES(red: Integer; green: Integer; blue: Integer; alpha: Integer); cdecl;
    {class} procedure glClearDepthfOES(depth: Single); cdecl;
    {class} procedure glClearDepthxOES(depth: Integer); cdecl;
    {class} procedure glClipPlanefOES(plane: Integer; equation: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glClipPlanefOES(plane: Integer; equation: JFloatBuffer); cdecl; overload;
    {class} procedure glClipPlanexOES(plane: Integer; equation: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glClipPlanexOES(plane: Integer; equation: JIntBuffer); cdecl; overload;
    {class} procedure glColor4xOES(red: Integer; green: Integer; blue: Integer; alpha: Integer); cdecl;
    {class} procedure glCurrentPaletteMatrixOES(matrixpaletteindex: Integer); cdecl;
    {class} procedure glDeleteFramebuffersOES(n: Integer; framebuffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteFramebuffersOES(n: Integer; framebuffers: JIntBuffer); cdecl; overload;
    {class} procedure glDeleteRenderbuffersOES(n: Integer; renderbuffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteRenderbuffersOES(n: Integer; renderbuffers: JIntBuffer); cdecl; overload;
    {class} procedure glDepthRangefOES(zNear: Single; zFar: Single); cdecl;
    {class} procedure glDepthRangexOES(zNear: Integer; zFar: Integer); cdecl;
    {class} procedure glDrawTexfOES(x: Single; y: Single; z: Single; width: Single; height: Single); cdecl;
    {class} procedure glDrawTexfvOES(coords: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glDrawTexfvOES(coords: JFloatBuffer); cdecl; overload;
    {class} procedure glDrawTexiOES(x: Integer; y: Integer; z: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glDrawTexivOES(coords: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDrawTexivOES(coords: JIntBuffer); cdecl; overload;
    {class} procedure glDrawTexsOES(x: SmallInt; y: SmallInt; z: SmallInt; width: SmallInt; height: SmallInt); cdecl;
    {class} procedure glDrawTexsvOES(coords: TJavaArray<SmallInt>; offset: Integer); cdecl; overload;
    {class} procedure glDrawTexsvOES(coords: JShortBuffer); cdecl; overload;
    {class} procedure glDrawTexxOES(x: Integer; y: Integer; z: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glDrawTexxvOES(coords: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDrawTexxvOES(coords: JIntBuffer); cdecl; overload;
    {class} procedure glEGLImageTargetRenderbufferStorageOES(target: Integer; image: JBuffer); cdecl;
    {class} procedure glEGLImageTargetTexture2DOES(target: Integer; image: JBuffer); cdecl;
    {class} procedure glFogxOES(pname: Integer; param: Integer); cdecl;
    {class} procedure glFogxvOES(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glFogxvOES(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glFramebufferRenderbufferOES(target: Integer; attachment: Integer; renderbuffertarget: Integer; renderbuffer: Integer); cdecl;
    {class} procedure glFramebufferTexture2DOES(target: Integer; attachment: Integer; textarget: Integer; texture: Integer; level: Integer); cdecl;
    {class} procedure glFrustumfOES(left: Single; right: Single; bottom: Single; top: Single; zNear: Single; zFar: Single); cdecl;
    {class} procedure glFrustumxOES(left: Integer; right: Integer; bottom: Integer; top: Integer; zNear: Integer; zFar: Integer); cdecl;
    {class} procedure glGenFramebuffersOES(n: Integer; framebuffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenFramebuffersOES(n: Integer; framebuffers: JIntBuffer); cdecl; overload;
    {class} procedure glGenRenderbuffersOES(n: Integer; renderbuffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenRenderbuffersOES(n: Integer; renderbuffers: JIntBuffer); cdecl; overload;
    {class} procedure glGenerateMipmapOES(target: Integer); cdecl;
    {class} procedure glGetClipPlanefOES(pname: Integer; eqn: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetClipPlanefOES(pname: Integer; eqn: JFloatBuffer); cdecl; overload;
    {class} procedure glGetClipPlanexOES(pname: Integer; eqn: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetClipPlanexOES(pname: Integer; eqn: JIntBuffer); cdecl; overload;
    {class} procedure glGetFixedvOES(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetFixedvOES(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetFramebufferAttachmentParameterivOES(target: Integer; attachment: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetFramebufferAttachmentParameterivOES(target: Integer; attachment: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetLightxvOES(light: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetLightxvOES(light: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetMaterialxvOES(face: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetMaterialxvOES(face: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetRenderbufferParameterivOES(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetRenderbufferParameterivOES(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexEnvxvOES(env: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexEnvxvOES(env: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexGenfvOES(coord: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexGenfvOES(coord: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetTexGenivOES(coord: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexGenivOES(coord: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexGenxvOES(coord: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexGenxvOES(coord: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexParameterxvOES(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexParameterxvOES(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glIsFramebufferOES(framebuffer: Integer): Boolean; cdecl;
    {class} function glIsRenderbufferOES(renderbuffer: Integer): Boolean; cdecl;
    {class} procedure glLightModelxOES(pname: Integer; param: Integer); cdecl;
    {class} procedure glLightModelxvOES(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glLightModelxvOES(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glLightxOES(light: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glLightxvOES(light: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glLightxvOES(light: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glLineWidthxOES(width: Integer); cdecl;
    {class} procedure glLoadMatrixxOES(m: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glLoadMatrixxOES(m: JIntBuffer); cdecl; overload;
    {class} procedure glLoadPaletteFromModelViewMatrixOES; cdecl;
    {class} procedure glMaterialxOES(face: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glMaterialxvOES(face: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glMaterialxvOES(face: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glMatrixIndexPointerOES(size: Integer; type_: Integer; stride: Integer; pointer: JBuffer); cdecl;
    {class} procedure glMultMatrixxOES(m: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glMultMatrixxOES(m: JIntBuffer); cdecl; overload;
    {class} procedure glMultiTexCoord4xOES(target: Integer; s: Integer; t: Integer; r: Integer; q: Integer); cdecl;
    {class} procedure glNormal3xOES(nx: Integer; ny: Integer; nz: Integer); cdecl;
    {class} procedure glOrthofOES(left: Single; right: Single; bottom: Single; top: Single; zNear: Single; zFar: Single); cdecl;
    {class} procedure glOrthoxOES(left: Integer; right: Integer; bottom: Integer; top: Integer; zNear: Integer; zFar: Integer); cdecl;
    {class} procedure glPointParameterxOES(pname: Integer; param: Integer); cdecl;
    {class} procedure glPointParameterxvOES(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glPointParameterxvOES(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glPointSizexOES(size: Integer); cdecl;
    {class} procedure glPolygonOffsetxOES(factor: Integer; units: Integer); cdecl;
    {class} procedure glRenderbufferStorageOES(target: Integer; internalformat: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glRotatexOES(angle: Integer; x: Integer; y: Integer; z: Integer); cdecl;
    {class} procedure glSampleCoveragexOES(value: Integer; invert: Boolean); cdecl;
    {class} procedure glScalexOES(x: Integer; y: Integer; z: Integer); cdecl;
    {class} procedure glTexEnvxOES(target: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexEnvxvOES(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexEnvxvOES(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexGenfOES(coord: Integer; pname: Integer; param: Single); cdecl;
    {class} procedure glTexGenfvOES(coord: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glTexGenfvOES(coord: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glTexGeniOES(coord: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexGenivOES(coord: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexGenivOES(coord: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexGenxOES(coord: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexGenxvOES(coord: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexGenxvOES(coord: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexParameterxOES(target: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexParameterxvOES(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexParameterxvOES(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTranslatexOES(x: Integer; y: Integer; z: Integer); cdecl;
    {class} procedure glWeightPointerOES(size: Integer; type_: Integer; stride: Integer; pointer: JBuffer); cdecl;
    {class} property GL_3DC_XY_AMD: Integer read _GetGL_3DC_XY_AMD;
    {class} property GL_3DC_X_AMD: Integer read _GetGL_3DC_X_AMD;
    {class} property GL_ATC_RGBA_EXPLICIT_ALPHA_AMD: Integer read _GetGL_ATC_RGBA_EXPLICIT_ALPHA_AMD;
    {class} property GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD: Integer read _GetGL_ATC_RGBA_INTERPOLATED_ALPHA_AMD;
    {class} property GL_ATC_RGB_AMD: Integer read _GetGL_ATC_RGB_AMD;
    {class} property GL_BGRA: Integer read _GetGL_BGRA;
    {class} property GL_BLEND_DST_ALPHA_OES: Integer read _GetGL_BLEND_DST_ALPHA_OES;
    {class} property GL_BLEND_DST_RGB_OES: Integer read _GetGL_BLEND_DST_RGB_OES;
    {class} property GL_BLEND_EQUATION_ALPHA_OES: Integer read _GetGL_BLEND_EQUATION_ALPHA_OES;
    {class} property GL_BLEND_EQUATION_OES: Integer read _GetGL_BLEND_EQUATION_OES;
    {class} property GL_BLEND_EQUATION_RGB_OES: Integer read _GetGL_BLEND_EQUATION_RGB_OES;
    {class} property GL_BLEND_SRC_ALPHA_OES: Integer read _GetGL_BLEND_SRC_ALPHA_OES;
    {class} property GL_BLEND_SRC_RGB_OES: Integer read _GetGL_BLEND_SRC_RGB_OES;
    {class} property GL_BUFFER_ACCESS_OES: Integer read _GetGL_BUFFER_ACCESS_OES;
    {class} property GL_BUFFER_MAPPED_OES: Integer read _GetGL_BUFFER_MAPPED_OES;
    {class} property GL_BUFFER_MAP_POINTER_OES: Integer read _GetGL_BUFFER_MAP_POINTER_OES;
    {class} property GL_COLOR_ATTACHMENT0_OES: Integer read _GetGL_COLOR_ATTACHMENT0_OES;
    {class} property GL_CURRENT_PALETTE_MATRIX_OES: Integer read _GetGL_CURRENT_PALETTE_MATRIX_OES;
    {class} property GL_DECR_WRAP_OES: Integer read _GetGL_DECR_WRAP_OES;
    {class} property GL_DEPTH24_STENCIL8_OES: Integer read _GetGL_DEPTH24_STENCIL8_OES;
    {class} property GL_DEPTH_ATTACHMENT_OES: Integer read _GetGL_DEPTH_ATTACHMENT_OES;
    {class} property GL_DEPTH_COMPONENT16_OES: Integer read _GetGL_DEPTH_COMPONENT16_OES;
    {class} property GL_DEPTH_COMPONENT24_OES: Integer read _GetGL_DEPTH_COMPONENT24_OES;
    {class} property GL_DEPTH_COMPONENT32_OES: Integer read _GetGL_DEPTH_COMPONENT32_OES;
    {class} property GL_DEPTH_STENCIL_OES: Integer read _GetGL_DEPTH_STENCIL_OES;
    {class} property GL_ETC1_RGB8_OES: Integer read _GetGL_ETC1_RGB8_OES;
    {class} property GL_FIXED_OES: Integer read _GetGL_FIXED_OES;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES;
    {class} property GL_FRAMEBUFFER_BINDING_OES: Integer read _GetGL_FRAMEBUFFER_BINDING_OES;
    {class} property GL_FRAMEBUFFER_COMPLETE_OES: Integer read _GetGL_FRAMEBUFFER_COMPLETE_OES;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES;
    {class} property GL_FRAMEBUFFER_OES: Integer read _GetGL_FRAMEBUFFER_OES;
    {class} property GL_FRAMEBUFFER_UNSUPPORTED_OES: Integer read _GetGL_FRAMEBUFFER_UNSUPPORTED_OES;
    {class} property GL_FUNC_ADD_OES: Integer read _GetGL_FUNC_ADD_OES;
    {class} property GL_FUNC_REVERSE_SUBTRACT_OES: Integer read _GetGL_FUNC_REVERSE_SUBTRACT_OES;
    {class} property GL_FUNC_SUBTRACT_OES: Integer read _GetGL_FUNC_SUBTRACT_OES;
    {class} property GL_INCR_WRAP_OES: Integer read _GetGL_INCR_WRAP_OES;
    {class} property GL_INVALID_FRAMEBUFFER_OPERATION_OES: Integer read _GetGL_INVALID_FRAMEBUFFER_OPERATION_OES;
    {class} property GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES: Integer read _GetGL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES;
    {class} property GL_MATRIX_INDEX_ARRAY_OES: Integer read _GetGL_MATRIX_INDEX_ARRAY_OES;
    {class} property GL_MATRIX_INDEX_ARRAY_POINTER_OES: Integer read _GetGL_MATRIX_INDEX_ARRAY_POINTER_OES;
    {class} property GL_MATRIX_INDEX_ARRAY_SIZE_OES: Integer read _GetGL_MATRIX_INDEX_ARRAY_SIZE_OES;
    {class} property GL_MATRIX_INDEX_ARRAY_STRIDE_OES: Integer read _GetGL_MATRIX_INDEX_ARRAY_STRIDE_OES;
    {class} property GL_MATRIX_INDEX_ARRAY_TYPE_OES: Integer read _GetGL_MATRIX_INDEX_ARRAY_TYPE_OES;
    {class} property GL_MATRIX_PALETTE_OES: Integer read _GetGL_MATRIX_PALETTE_OES;
    {class} property GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES: Integer read _GetGL_MAX_CUBE_MAP_TEXTURE_SIZE_OES;
    {class} property GL_MAX_PALETTE_MATRICES_OES: Integer read _GetGL_MAX_PALETTE_MATRICES_OES;
    {class} property GL_MAX_RENDERBUFFER_SIZE_OES: Integer read _GetGL_MAX_RENDERBUFFER_SIZE_OES;
    {class} property GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT: Integer read _GetGL_MAX_TEXTURE_MAX_ANISOTROPY_EXT;
    {class} property GL_MAX_VERTEX_UNITS_OES: Integer read _GetGL_MAX_VERTEX_UNITS_OES;
    {class} property GL_MIRRORED_REPEAT_OES: Integer read _GetGL_MIRRORED_REPEAT_OES;
    {class} property GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES: Integer read _GetGL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES;
    {class} property GL_NONE_OES: Integer read _GetGL_NONE_OES;
    {class} property GL_NORMAL_MAP_OES: Integer read _GetGL_NORMAL_MAP_OES;
    {class} property GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES: Integer read _GetGL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES;
    {class} property GL_REFLECTION_MAP_OES: Integer read _GetGL_REFLECTION_MAP_OES;
    {class} property GL_RENDERBUFFER_ALPHA_SIZE_OES: Integer read _GetGL_RENDERBUFFER_ALPHA_SIZE_OES;
    {class} property GL_RENDERBUFFER_BINDING_OES: Integer read _GetGL_RENDERBUFFER_BINDING_OES;
    {class} property GL_RENDERBUFFER_BLUE_SIZE_OES: Integer read _GetGL_RENDERBUFFER_BLUE_SIZE_OES;
    {class} property GL_RENDERBUFFER_DEPTH_SIZE_OES: Integer read _GetGL_RENDERBUFFER_DEPTH_SIZE_OES;
    {class} property GL_RENDERBUFFER_GREEN_SIZE_OES: Integer read _GetGL_RENDERBUFFER_GREEN_SIZE_OES;
    {class} property GL_RENDERBUFFER_HEIGHT_OES: Integer read _GetGL_RENDERBUFFER_HEIGHT_OES;
    {class} property GL_RENDERBUFFER_INTERNAL_FORMAT_OES: Integer read _GetGL_RENDERBUFFER_INTERNAL_FORMAT_OES;
    {class} property GL_RENDERBUFFER_OES: Integer read _GetGL_RENDERBUFFER_OES;
    {class} property GL_RENDERBUFFER_RED_SIZE_OES: Integer read _GetGL_RENDERBUFFER_RED_SIZE_OES;
    {class} property GL_RENDERBUFFER_STENCIL_SIZE_OES: Integer read _GetGL_RENDERBUFFER_STENCIL_SIZE_OES;
    {class} property GL_RENDERBUFFER_WIDTH_OES: Integer read _GetGL_RENDERBUFFER_WIDTH_OES;
    {class} property GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES: Integer read _GetGL_REQUIRED_TEXTURE_IMAGE_UNITS_OES;
    {class} property GL_RGB565_OES: Integer read _GetGL_RGB565_OES;
    {class} property GL_RGB5_A1_OES: Integer read _GetGL_RGB5_A1_OES;
    {class} property GL_RGB8_OES: Integer read _GetGL_RGB8_OES;
    {class} property GL_RGBA4_OES: Integer read _GetGL_RGBA4_OES;
    {class} property GL_RGBA8_OES: Integer read _GetGL_RGBA8_OES;
    {class} property GL_SAMPLER_EXTERNAL_OES: Integer read _GetGL_SAMPLER_EXTERNAL_OES;
    {class} property GL_STENCIL_ATTACHMENT_OES: Integer read _GetGL_STENCIL_ATTACHMENT_OES;
    {class} property GL_STENCIL_INDEX1_OES: Integer read _GetGL_STENCIL_INDEX1_OES;
    {class} property GL_STENCIL_INDEX4_OES: Integer read _GetGL_STENCIL_INDEX4_OES;
    {class} property GL_STENCIL_INDEX8_OES: Integer read _GetGL_STENCIL_INDEX8_OES;
    {class} property GL_TEXTURE_BINDING_CUBE_MAP_OES: Integer read _GetGL_TEXTURE_BINDING_CUBE_MAP_OES;
    {class} property GL_TEXTURE_BINDING_EXTERNAL_OES: Integer read _GetGL_TEXTURE_BINDING_EXTERNAL_OES;
    {class} property GL_TEXTURE_CROP_RECT_OES: Integer read _GetGL_TEXTURE_CROP_RECT_OES;
    {class} property GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES: Integer read _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES;
    {class} property GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES: Integer read _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES;
    {class} property GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES: Integer read _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES;
    {class} property GL_TEXTURE_CUBE_MAP_OES: Integer read _GetGL_TEXTURE_CUBE_MAP_OES;
    {class} property GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES: Integer read _GetGL_TEXTURE_CUBE_MAP_POSITIVE_X_OES;
    {class} property GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES: Integer read _GetGL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES;
    {class} property GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES: Integer read _GetGL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES;
    {class} property GL_TEXTURE_EXTERNAL_OES: Integer read _GetGL_TEXTURE_EXTERNAL_OES;
    {class} property GL_TEXTURE_GEN_MODE_OES: Integer read _GetGL_TEXTURE_GEN_MODE_OES;
    {class} property GL_TEXTURE_GEN_STR_OES: Integer read _GetGL_TEXTURE_GEN_STR_OES;
    {class} property GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES: Integer read _GetGL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES;
    {class} property GL_TEXTURE_MAX_ANISOTROPY_EXT: Integer read _GetGL_TEXTURE_MAX_ANISOTROPY_EXT;
    {class} property GL_UNSIGNED_INT_24_8_OES: Integer read _GetGL_UNSIGNED_INT_24_8_OES;
    {class} property GL_WEIGHT_ARRAY_BUFFER_BINDING_OES: Integer read _GetGL_WEIGHT_ARRAY_BUFFER_BINDING_OES;
    {class} property GL_WEIGHT_ARRAY_OES: Integer read _GetGL_WEIGHT_ARRAY_OES;
    {class} property GL_WEIGHT_ARRAY_POINTER_OES: Integer read _GetGL_WEIGHT_ARRAY_POINTER_OES;
    {class} property GL_WEIGHT_ARRAY_SIZE_OES: Integer read _GetGL_WEIGHT_ARRAY_SIZE_OES;
    {class} property GL_WEIGHT_ARRAY_STRIDE_OES: Integer read _GetGL_WEIGHT_ARRAY_STRIDE_OES;
    {class} property GL_WEIGHT_ARRAY_TYPE_OES: Integer read _GetGL_WEIGHT_ARRAY_TYPE_OES;
    {class} property GL_WRITE_ONLY_OES: Integer read _GetGL_WRITE_ONLY_OES;
  end;

  [JavaSignature('android/opengl/GLES11Ext')]
  JGLES11Ext = interface(JObject)
    ['{82AC1A8D-82F5-4A70-93C3-A55C1CFA7E95}']
  end;
  TJGLES11Ext = class(TJavaGenericImport<JGLES11ExtClass, JGLES11Ext>) end;

  JGLES20Class = interface(JObjectClass)
    ['{C0AFF4E3-5F31-4377-9F58-C376F76D1CF4}']
    {class} function _GetGL_ACTIVE_ATTRIBUTES: Integer; cdecl;
    {class} function _GetGL_ACTIVE_ATTRIBUTE_MAX_LENGTH: Integer; cdecl;
    {class} function _GetGL_ACTIVE_TEXTURE: Integer; cdecl;
    {class} function _GetGL_ACTIVE_UNIFORMS: Integer; cdecl;
    {class} function _GetGL_ACTIVE_UNIFORM_MAX_LENGTH: Integer; cdecl;
    {class} function _GetGL_ALIASED_LINE_WIDTH_RANGE: Integer; cdecl;
    {class} function _GetGL_ALIASED_POINT_SIZE_RANGE: Integer; cdecl;
    {class} function _GetGL_ALPHA: Integer; cdecl;
    {class} function _GetGL_ALPHA_BITS: Integer; cdecl;
    {class} function _GetGL_ALWAYS: Integer; cdecl;
    {class} function _GetGL_ARRAY_BUFFER: Integer; cdecl;
    {class} function _GetGL_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_ATTACHED_SHADERS: Integer; cdecl;
    {class} function _GetGL_BACK: Integer; cdecl;
    {class} function _GetGL_BLEND: Integer; cdecl;
    {class} function _GetGL_BLEND_COLOR: Integer; cdecl;
    {class} function _GetGL_BLEND_DST_ALPHA: Integer; cdecl;
    {class} function _GetGL_BLEND_DST_RGB: Integer; cdecl;
    {class} function _GetGL_BLEND_EQUATION: Integer; cdecl;
    {class} function _GetGL_BLEND_EQUATION_ALPHA: Integer; cdecl;
    {class} function _GetGL_BLEND_EQUATION_RGB: Integer; cdecl;
    {class} function _GetGL_BLEND_SRC_ALPHA: Integer; cdecl;
    {class} function _GetGL_BLEND_SRC_RGB: Integer; cdecl;
    {class} function _GetGL_BLUE_BITS: Integer; cdecl;
    {class} function _GetGL_BOOL: Integer; cdecl;
    {class} function _GetGL_BOOL_VEC2: Integer; cdecl;
    {class} function _GetGL_BOOL_VEC3: Integer; cdecl;
    {class} function _GetGL_BOOL_VEC4: Integer; cdecl;
    {class} function _GetGL_BUFFER_SIZE: Integer; cdecl;
    {class} function _GetGL_BUFFER_USAGE: Integer; cdecl;
    {class} function _GetGL_BYTE: Integer; cdecl;
    {class} function _GetGL_CCW: Integer; cdecl;
    {class} function _GetGL_CLAMP_TO_EDGE: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT0: Integer; cdecl;
    {class} function _GetGL_COLOR_BUFFER_BIT: Integer; cdecl;
    {class} function _GetGL_COLOR_CLEAR_VALUE: Integer; cdecl;
    {class} function _GetGL_COLOR_WRITEMASK: Integer; cdecl;
    {class} function _GetGL_COMPILE_STATUS: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_TEXTURE_FORMATS: Integer; cdecl;
    {class} function _GetGL_CONSTANT_ALPHA: Integer; cdecl;
    {class} function _GetGL_CONSTANT_COLOR: Integer; cdecl;
    {class} function _GetGL_CULL_FACE: Integer; cdecl;
    {class} function _GetGL_CULL_FACE_MODE: Integer; cdecl;
    {class} function _GetGL_CURRENT_PROGRAM: Integer; cdecl;
    {class} function _GetGL_CURRENT_VERTEX_ATTRIB: Integer; cdecl;
    {class} function _GetGL_CW: Integer; cdecl;
    {class} function _GetGL_DECR: Integer; cdecl;
    {class} function _GetGL_DECR_WRAP: Integer; cdecl;
    {class} function _GetGL_DELETE_STATUS: Integer; cdecl;
    {class} function _GetGL_DEPTH_ATTACHMENT: Integer; cdecl;
    {class} function _GetGL_DEPTH_BITS: Integer; cdecl;
    {class} function _GetGL_DEPTH_BUFFER_BIT: Integer; cdecl;
    {class} function _GetGL_DEPTH_CLEAR_VALUE: Integer; cdecl;
    {class} function _GetGL_DEPTH_COMPONENT: Integer; cdecl;
    {class} function _GetGL_DEPTH_COMPONENT16: Integer; cdecl;
    {class} function _GetGL_DEPTH_FUNC: Integer; cdecl;
    {class} function _GetGL_DEPTH_RANGE: Integer; cdecl;
    {class} function _GetGL_DEPTH_TEST: Integer; cdecl;
    {class} function _GetGL_DEPTH_WRITEMASK: Integer; cdecl;
    {class} function _GetGL_DITHER: Integer; cdecl;
    {class} function _GetGL_DONT_CARE: Integer; cdecl;
    {class} function _GetGL_DST_ALPHA: Integer; cdecl;
    {class} function _GetGL_DST_COLOR: Integer; cdecl;
    {class} function _GetGL_DYNAMIC_DRAW: Integer; cdecl;
    {class} function _GetGL_ELEMENT_ARRAY_BUFFER: Integer; cdecl;
    {class} function _GetGL_ELEMENT_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_EQUAL: Integer; cdecl;
    {class} function _GetGL_EXTENSIONS: Integer; cdecl;
    {class} function _GetGL_FALSE: Integer; cdecl;
    {class} function _GetGL_FASTEST: Integer; cdecl;
    {class} function _GetGL_FIXED: Integer; cdecl;
    {class} function _GetGL_FLOAT: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT2: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT3: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT4: Integer; cdecl;
    {class} function _GetGL_FLOAT_VEC2: Integer; cdecl;
    {class} function _GetGL_FLOAT_VEC3: Integer; cdecl;
    {class} function _GetGL_FLOAT_VEC4: Integer; cdecl;
    {class} function _GetGL_FRAGMENT_SHADER: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_COMPLETE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_UNSUPPORTED: Integer; cdecl;
    {class} function _GetGL_FRONT: Integer; cdecl;
    {class} function _GetGL_FRONT_AND_BACK: Integer; cdecl;
    {class} function _GetGL_FRONT_FACE: Integer; cdecl;
    {class} function _GetGL_FUNC_ADD: Integer; cdecl;
    {class} function _GetGL_FUNC_REVERSE_SUBTRACT: Integer; cdecl;
    {class} function _GetGL_FUNC_SUBTRACT: Integer; cdecl;
    {class} function _GetGL_GENERATE_MIPMAP_HINT: Integer; cdecl;
    {class} function _GetGL_GEQUAL: Integer; cdecl;
    {class} function _GetGL_GREATER: Integer; cdecl;
    {class} function _GetGL_GREEN_BITS: Integer; cdecl;
    {class} function _GetGL_HIGH_FLOAT: Integer; cdecl;
    {class} function _GetGL_HIGH_INT: Integer; cdecl;
    {class} function _GetGL_IMPLEMENTATION_COLOR_READ_FORMAT: Integer; cdecl;
    {class} function _GetGL_IMPLEMENTATION_COLOR_READ_TYPE: Integer; cdecl;
    {class} function _GetGL_INCR: Integer; cdecl;
    {class} function _GetGL_INCR_WRAP: Integer; cdecl;
    {class} function _GetGL_INFO_LOG_LENGTH: Integer; cdecl;
    {class} function _GetGL_INT: Integer; cdecl;
    {class} function _GetGL_INT_VEC2: Integer; cdecl;
    {class} function _GetGL_INT_VEC3: Integer; cdecl;
    {class} function _GetGL_INT_VEC4: Integer; cdecl;
    {class} function _GetGL_INVALID_ENUM: Integer; cdecl;
    {class} function _GetGL_INVALID_FRAMEBUFFER_OPERATION: Integer; cdecl;
    {class} function _GetGL_INVALID_OPERATION: Integer; cdecl;
    {class} function _GetGL_INVALID_VALUE: Integer; cdecl;
    {class} function _GetGL_INVERT: Integer; cdecl;
    {class} function _GetGL_KEEP: Integer; cdecl;
    {class} function _GetGL_LEQUAL: Integer; cdecl;
    {class} function _GetGL_LESS: Integer; cdecl;
    {class} function _GetGL_LINEAR: Integer; cdecl;
    {class} function _GetGL_LINEAR_MIPMAP_LINEAR: Integer; cdecl;
    {class} function _GetGL_LINEAR_MIPMAP_NEAREST: Integer; cdecl;
    {class} function _GetGL_LINES: Integer; cdecl;
    {class} function _GetGL_LINE_LOOP: Integer; cdecl;
    {class} function _GetGL_LINE_STRIP: Integer; cdecl;
    {class} function _GetGL_LINE_WIDTH: Integer; cdecl;
    {class} function _GetGL_LINK_STATUS: Integer; cdecl;
    {class} function _GetGL_LOW_FLOAT: Integer; cdecl;
    {class} function _GetGL_LOW_INT: Integer; cdecl;
    {class} function _GetGL_LUMINANCE: Integer; cdecl;
    {class} function _GetGL_LUMINANCE_ALPHA: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_TEXTURE_IMAGE_UNITS: Integer; cdecl;
    {class} function _GetGL_MAX_CUBE_MAP_TEXTURE_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_UNIFORM_VECTORS: Integer; cdecl;
    {class} function _GetGL_MAX_RENDERBUFFER_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_TEXTURE_IMAGE_UNITS: Integer; cdecl;
    {class} function _GetGL_MAX_TEXTURE_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_VARYING_VECTORS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_ATTRIBS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_TEXTURE_IMAGE_UNITS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_UNIFORM_VECTORS: Integer; cdecl;
    {class} function _GetGL_MAX_VIEWPORT_DIMS: Integer; cdecl;
    {class} function _GetGL_MEDIUM_FLOAT: Integer; cdecl;
    {class} function _GetGL_MEDIUM_INT: Integer; cdecl;
    {class} function _GetGL_MIRRORED_REPEAT: Integer; cdecl;
    {class} function _GetGL_NEAREST: Integer; cdecl;
    {class} function _GetGL_NEAREST_MIPMAP_LINEAR: Integer; cdecl;
    {class} function _GetGL_NEAREST_MIPMAP_NEAREST: Integer; cdecl;
    {class} function _GetGL_NEVER: Integer; cdecl;
    {class} function _GetGL_NICEST: Integer; cdecl;
    {class} function _GetGL_NONE: Integer; cdecl;
    {class} function _GetGL_NOTEQUAL: Integer; cdecl;
    {class} function _GetGL_NO_ERROR: Integer; cdecl;
    {class} function _GetGL_NUM_COMPRESSED_TEXTURE_FORMATS: Integer; cdecl;
    {class} function _GetGL_NUM_SHADER_BINARY_FORMATS: Integer; cdecl;
    {class} function _GetGL_ONE: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_CONSTANT_ALPHA: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_CONSTANT_COLOR: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_DST_ALPHA: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_DST_COLOR: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_SRC_ALPHA: Integer; cdecl;
    {class} function _GetGL_ONE_MINUS_SRC_COLOR: Integer; cdecl;
    {class} function _GetGL_OUT_OF_MEMORY: Integer; cdecl;
    {class} function _GetGL_PACK_ALIGNMENT: Integer; cdecl;
    {class} function _GetGL_POINTS: Integer; cdecl;
    {class} function _GetGL_POLYGON_OFFSET_FACTOR: Integer; cdecl;
    {class} function _GetGL_POLYGON_OFFSET_FILL: Integer; cdecl;
    {class} function _GetGL_POLYGON_OFFSET_UNITS: Integer; cdecl;
    {class} function _GetGL_RED_BITS: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_ALPHA_SIZE: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_BLUE_SIZE: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_DEPTH_SIZE: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_GREEN_SIZE: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_HEIGHT: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_INTERNAL_FORMAT: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_RED_SIZE: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_STENCIL_SIZE: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_WIDTH: Integer; cdecl;
    {class} function _GetGL_RENDERER: Integer; cdecl;
    {class} function _GetGL_REPEAT: Integer; cdecl;
    {class} function _GetGL_REPLACE: Integer; cdecl;
    {class} function _GetGL_RGB: Integer; cdecl;
    {class} function _GetGL_RGB565: Integer; cdecl;
    {class} function _GetGL_RGB5_A1: Integer; cdecl;
    {class} function _GetGL_RGBA: Integer; cdecl;
    {class} function _GetGL_RGBA4: Integer; cdecl;
    {class} function _GetGL_SAMPLER_2D: Integer; cdecl;
    {class} function _GetGL_SAMPLER_CUBE: Integer; cdecl;
    {class} function _GetGL_SAMPLES: Integer; cdecl;
    {class} function _GetGL_SAMPLE_ALPHA_TO_COVERAGE: Integer; cdecl;
    {class} function _GetGL_SAMPLE_BUFFERS: Integer; cdecl;
    {class} function _GetGL_SAMPLE_COVERAGE: Integer; cdecl;
    {class} function _GetGL_SAMPLE_COVERAGE_INVERT: Integer; cdecl;
    {class} function _GetGL_SAMPLE_COVERAGE_VALUE: Integer; cdecl;
    {class} function _GetGL_SCISSOR_BOX: Integer; cdecl;
    {class} function _GetGL_SCISSOR_TEST: Integer; cdecl;
    {class} function _GetGL_SHADER_BINARY_FORMATS: Integer; cdecl;
    {class} function _GetGL_SHADER_COMPILER: Integer; cdecl;
    {class} function _GetGL_SHADER_SOURCE_LENGTH: Integer; cdecl;
    {class} function _GetGL_SHADER_TYPE: Integer; cdecl;
    {class} function _GetGL_SHADING_LANGUAGE_VERSION: Integer; cdecl;
    {class} function _GetGL_SHORT: Integer; cdecl;
    {class} function _GetGL_SRC_ALPHA: Integer; cdecl;
    {class} function _GetGL_SRC_ALPHA_SATURATE: Integer; cdecl;
    {class} function _GetGL_SRC_COLOR: Integer; cdecl;
    {class} function _GetGL_STATIC_DRAW: Integer; cdecl;
    {class} function _GetGL_STENCIL_ATTACHMENT: Integer; cdecl;
    {class} function _GetGL_STENCIL_BACK_FAIL: Integer; cdecl;
    {class} function _GetGL_STENCIL_BACK_FUNC: Integer; cdecl;
    {class} function _GetGL_STENCIL_BACK_PASS_DEPTH_FAIL: Integer; cdecl;
    {class} function _GetGL_STENCIL_BACK_PASS_DEPTH_PASS: Integer; cdecl;
    {class} function _GetGL_STENCIL_BACK_REF: Integer; cdecl;
    {class} function _GetGL_STENCIL_BACK_VALUE_MASK: Integer; cdecl;
    {class} function _GetGL_STENCIL_BACK_WRITEMASK: Integer; cdecl;
    {class} function _GetGL_STENCIL_BITS: Integer; cdecl;
    {class} function _GetGL_STENCIL_BUFFER_BIT: Integer; cdecl;
    {class} function _GetGL_STENCIL_CLEAR_VALUE: Integer; cdecl;
    {class} function _GetGL_STENCIL_FAIL: Integer; cdecl;
    {class} function _GetGL_STENCIL_FUNC: Integer; cdecl;
    {class} function _GetGL_STENCIL_INDEX: Integer; cdecl;
    {class} function _GetGL_STENCIL_INDEX8: Integer; cdecl;
    {class} function _GetGL_STENCIL_PASS_DEPTH_FAIL: Integer; cdecl;
    {class} function _GetGL_STENCIL_PASS_DEPTH_PASS: Integer; cdecl;
    {class} function _GetGL_STENCIL_REF: Integer; cdecl;
    {class} function _GetGL_STENCIL_TEST: Integer; cdecl;
    {class} function _GetGL_STENCIL_VALUE_MASK: Integer; cdecl;
    {class} function _GetGL_STENCIL_WRITEMASK: Integer; cdecl;
    {class} function _GetGL_STREAM_DRAW: Integer; cdecl;
    {class} function _GetGL_SUBPIXEL_BITS: Integer; cdecl;
    {class} function _GetGL_TEXTURE: Integer; cdecl;
    {class} function _GetGL_TEXTURE0: Integer; cdecl;
    {class} function _GetGL_TEXTURE1: Integer; cdecl;
    {class} function _GetGL_TEXTURE10: Integer; cdecl;
    {class} function _GetGL_TEXTURE11: Integer; cdecl;
    {class} function _GetGL_TEXTURE12: Integer; cdecl;
    {class} function _GetGL_TEXTURE13: Integer; cdecl;
    {class} function _GetGL_TEXTURE14: Integer; cdecl;
    {class} function _GetGL_TEXTURE15: Integer; cdecl;
    {class} function _GetGL_TEXTURE16: Integer; cdecl;
    {class} function _GetGL_TEXTURE17: Integer; cdecl;
    {class} function _GetGL_TEXTURE18: Integer; cdecl;
    {class} function _GetGL_TEXTURE19: Integer; cdecl;
    {class} function _GetGL_TEXTURE2: Integer; cdecl;
    {class} function _GetGL_TEXTURE20: Integer; cdecl;
    {class} function _GetGL_TEXTURE21: Integer; cdecl;
    {class} function _GetGL_TEXTURE22: Integer; cdecl;
    {class} function _GetGL_TEXTURE23: Integer; cdecl;
    {class} function _GetGL_TEXTURE24: Integer; cdecl;
    {class} function _GetGL_TEXTURE25: Integer; cdecl;
    {class} function _GetGL_TEXTURE26: Integer; cdecl;
    {class} function _GetGL_TEXTURE27: Integer; cdecl;
    {class} function _GetGL_TEXTURE28: Integer; cdecl;
    {class} function _GetGL_TEXTURE29: Integer; cdecl;
    {class} function _GetGL_TEXTURE3: Integer; cdecl;
    {class} function _GetGL_TEXTURE30: Integer; cdecl;
    {class} function _GetGL_TEXTURE31: Integer; cdecl;
    {class} function _GetGL_TEXTURE4: Integer; cdecl;
    {class} function _GetGL_TEXTURE5: Integer; cdecl;
    {class} function _GetGL_TEXTURE6: Integer; cdecl;
    {class} function _GetGL_TEXTURE7: Integer; cdecl;
    {class} function _GetGL_TEXTURE8: Integer; cdecl;
    {class} function _GetGL_TEXTURE9: Integer; cdecl;
    {class} function _GetGL_TEXTURE_2D: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_2D: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_CUBE_MAP: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_X: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_Y: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_Z: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_POSITIVE_X: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_POSITIVE_Y: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_POSITIVE_Z: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MAG_FILTER: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MIN_FILTER: Integer; cdecl;
    {class} function _GetGL_TEXTURE_WRAP_S: Integer; cdecl;
    {class} function _GetGL_TEXTURE_WRAP_T: Integer; cdecl;
    {class} function _GetGL_TRIANGLES: Integer; cdecl;
    {class} function _GetGL_TRIANGLE_FAN: Integer; cdecl;
    {class} function _GetGL_TRIANGLE_STRIP: Integer; cdecl;
    {class} function _GetGL_TRUE: Integer; cdecl;
    {class} function _GetGL_UNPACK_ALIGNMENT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_BYTE: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_SHORT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_SHORT_4_4_4_4: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_SHORT_5_5_5_1: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_SHORT_5_6_5: Integer; cdecl;
    {class} function _GetGL_VALIDATE_STATUS: Integer; cdecl;
    {class} function _GetGL_VENDOR: Integer; cdecl;
    {class} function _GetGL_VERSION: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_ENABLED: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_NORMALIZED: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_POINTER: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_SIZE: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_STRIDE: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_TYPE: Integer; cdecl;
    {class} function _GetGL_VERTEX_SHADER: Integer; cdecl;
    {class} function _GetGL_VIEWPORT: Integer; cdecl;
    {class} function _GetGL_ZERO: Integer; cdecl;
    {class} function init: JGLES20; cdecl;
    {class} procedure glActiveTexture(texture: Integer); cdecl;
    {class} procedure glAttachShader(program_: Integer; shader: Integer); cdecl;
    {class} procedure glBindAttribLocation(program_: Integer; index: Integer; name: JString); cdecl;
    {class} procedure glBindBuffer(target: Integer; buffer: Integer); cdecl;
    {class} procedure glBindFramebuffer(target: Integer; framebuffer: Integer); cdecl;
    {class} procedure glBindRenderbuffer(target: Integer; renderbuffer: Integer); cdecl;
    {class} procedure glBindTexture(target: Integer; texture: Integer); cdecl;
    {class} procedure glBlendColor(red: Single; green: Single; blue: Single; alpha: Single); cdecl;
    {class} procedure glBlendEquation(mode: Integer); cdecl;
    {class} procedure glBlendEquationSeparate(modeRGB: Integer; modeAlpha: Integer); cdecl;
    {class} procedure glBlendFunc(sfactor: Integer; dfactor: Integer); cdecl;
    {class} procedure glBlendFuncSeparate(srcRGB: Integer; dstRGB: Integer; srcAlpha: Integer; dstAlpha: Integer); cdecl;
    {class} procedure glBufferData(target: Integer; size: Integer; data: JBuffer; usage: Integer); cdecl;
    {class} procedure glBufferSubData(target: Integer; offset: Integer; size: Integer; data: JBuffer); cdecl;
    {class} function glCheckFramebufferStatus(target: Integer): Integer; cdecl;
    {class} procedure glClear(mask: Integer); cdecl;
    {class} procedure glClearColor(red: Single; green: Single; blue: Single; alpha: Single); cdecl;
    {class} procedure glClearDepthf(depth: Single); cdecl;
    {class} procedure glClearStencil(s: Integer); cdecl;
    {class} procedure glColorMask(red: Boolean; green: Boolean; blue: Boolean; alpha: Boolean); cdecl;
    {class} procedure glCompileShader(shader: Integer); cdecl;
    {class} procedure glCompressedTexImage2D(target: Integer; level: Integer; internalformat: Integer; width: Integer; height: Integer; border: Integer; imageSize: Integer; data: JBuffer); cdecl;
    {class} procedure glCompressedTexSubImage2D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; width: Integer; height: Integer; format: Integer; imageSize: Integer; data: JBuffer); cdecl;
    {class} procedure glCopyTexImage2D(target: Integer; level: Integer; internalformat: Integer; x: Integer; y: Integer; width: Integer; height: Integer; border: Integer); cdecl;
    {class} procedure glCopyTexSubImage2D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; x: Integer; y: Integer; width: Integer; height: Integer); cdecl;
    {class} function glCreateProgram: Integer; cdecl;
    {class} function glCreateShader(type_: Integer): Integer; cdecl;
    {class} procedure glCullFace(mode: Integer); cdecl;
    {class} procedure glDeleteBuffers(n: Integer; buffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteBuffers(n: Integer; buffers: JIntBuffer); cdecl; overload;
    {class} procedure glDeleteFramebuffers(n: Integer; framebuffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteFramebuffers(n: Integer; framebuffers: JIntBuffer); cdecl; overload;
    {class} procedure glDeleteProgram(program_: Integer); cdecl;
    {class} procedure glDeleteRenderbuffers(n: Integer; renderbuffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteRenderbuffers(n: Integer; renderbuffers: JIntBuffer); cdecl; overload;
    {class} procedure glDeleteShader(shader: Integer); cdecl;
    {class} procedure glDeleteTextures(n: Integer; textures: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteTextures(n: Integer; textures: JIntBuffer); cdecl; overload;
    {class} procedure glDepthFunc(func: Integer); cdecl;
    {class} procedure glDepthMask(flag: Boolean); cdecl;
    {class} procedure glDepthRangef(zNear: Single; zFar: Single); cdecl;
    {class} procedure glDetachShader(program_: Integer; shader: Integer); cdecl;
    {class} procedure glDisable(cap: Integer); cdecl;
    {class} procedure glDisableVertexAttribArray(index: Integer); cdecl;
    {class} procedure glDrawArrays(mode: Integer; first: Integer; count: Integer); cdecl;
    {class} procedure glDrawElements(mode: Integer; count: Integer; type_: Integer; offset: Integer); cdecl; overload;
    {class} procedure glDrawElements(mode: Integer; count: Integer; type_: Integer; indices: JBuffer); cdecl; overload;
    {class} procedure glEnable(cap: Integer); cdecl;
    {class} procedure glEnableVertexAttribArray(index: Integer); cdecl;
    {class} procedure glFinish; cdecl;
    {class} procedure glFlush; cdecl;
    {class} procedure glFramebufferRenderbuffer(target: Integer; attachment: Integer; renderbuffertarget: Integer; renderbuffer: Integer); cdecl;
    {class} procedure glFramebufferTexture2D(target: Integer; attachment: Integer; textarget: Integer; texture: Integer; level: Integer); cdecl;
    {class} procedure glFrontFace(mode: Integer); cdecl;
    {class} procedure glGenBuffers(n: Integer; buffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenBuffers(n: Integer; buffers: JIntBuffer); cdecl; overload;
    {class} procedure glGenFramebuffers(n: Integer; framebuffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenFramebuffers(n: Integer; framebuffers: JIntBuffer); cdecl; overload;
    {class} procedure glGenRenderbuffers(n: Integer; renderbuffers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenRenderbuffers(n: Integer; renderbuffers: JIntBuffer); cdecl; overload;
    {class} procedure glGenTextures(n: Integer; textures: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenTextures(n: Integer; textures: JIntBuffer); cdecl; overload;
    {class} procedure glGenerateMipmap(target: Integer); cdecl;
    {class} procedure glGetActiveAttrib(program_: Integer; index: Integer; bufsize: Integer; length: TJavaArray<Integer>; lengthOffset: Integer; size: TJavaArray<Integer>; sizeOffset: Integer; type_: TJavaArray<Integer>; typeOffset: Integer; name: TJavaArray<Byte>; nameOffset: Integer); cdecl; overload;
    {class} function glGetActiveAttrib(program_: Integer; index: Integer; size: TJavaArray<Integer>; sizeOffset: Integer; type_: TJavaArray<Integer>; typeOffset: Integer): JString; cdecl; overload;
    {class} function glGetActiveAttrib(program_: Integer; index: Integer; size: JIntBuffer; type_: JIntBuffer): JString; cdecl; overload;
    {class} procedure glGetActiveUniform(program_: Integer; index: Integer; bufsize: Integer; length: TJavaArray<Integer>; lengthOffset: Integer; size: TJavaArray<Integer>; sizeOffset: Integer; type_: TJavaArray<Integer>; typeOffset: Integer; name: TJavaArray<Byte>; nameOffset: Integer); cdecl; overload;
    {class} function glGetActiveUniform(program_: Integer; index: Integer; size: TJavaArray<Integer>; sizeOffset: Integer; type_: TJavaArray<Integer>; typeOffset: Integer): JString; cdecl; overload;
    {class} function glGetActiveUniform(program_: Integer; index: Integer; size: JIntBuffer; type_: JIntBuffer): JString; cdecl; overload;
    {class} procedure glGetAttachedShaders(program_: Integer; maxcount: Integer; count: TJavaArray<Integer>; countOffset: Integer; shaders: TJavaArray<Integer>; shadersOffset: Integer); cdecl; overload;
    {class} procedure glGetAttachedShaders(program_: Integer; maxcount: Integer; count: JIntBuffer; shaders: JIntBuffer); cdecl; overload;
    {class} function glGetAttribLocation(program_: Integer; name: JString): Integer; cdecl;
    {class} procedure glGetBooleanv(pname: Integer; params: TJavaArray<Boolean>; offset: Integer); cdecl; overload;
    {class} procedure glGetBooleanv(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetBufferParameteriv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetBufferParameteriv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetError: Integer; cdecl;
    {class} procedure glGetFloatv(pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetFloatv(pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetFramebufferAttachmentParameteriv(target: Integer; attachment: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetFramebufferAttachmentParameteriv(target: Integer; attachment: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetIntegerv(pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetIntegerv(pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetProgramInfoLog(program_: Integer): JString; cdecl;
    {class} procedure glGetProgramiv(program_: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetProgramiv(program_: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetRenderbufferParameteriv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetRenderbufferParameteriv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetShaderInfoLog(shader: Integer): JString; cdecl;
    {class} procedure glGetShaderPrecisionFormat(shadertype: Integer; precisiontype: Integer; range: TJavaArray<Integer>; rangeOffset: Integer; precision: TJavaArray<Integer>; precisionOffset: Integer); cdecl; overload;
    {class} procedure glGetShaderPrecisionFormat(shadertype: Integer; precisiontype: Integer; range: JIntBuffer; precision: JIntBuffer); cdecl; overload;
    {class} procedure glGetShaderSource(shader: Integer; bufsize: Integer; length: TJavaArray<Integer>; lengthOffset: Integer; source: TJavaArray<Byte>; sourceOffset: Integer); cdecl; overload;
    {class} function glGetShaderSource(shader: Integer): JString; cdecl; overload;
    {class} procedure glGetShaderiv(shader: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetShaderiv(shader: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetString(name: Integer): JString; cdecl;
    {class} procedure glGetTexParameterfv(target: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexParameterfv(target: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetTexParameteriv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexParameteriv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetUniformLocation(program_: Integer; name: JString): Integer; cdecl;
    {class} procedure glGetUniformfv(program_: Integer; location: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetUniformfv(program_: Integer; location: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetUniformiv(program_: Integer; location: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetUniformiv(program_: Integer; location: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetVertexAttribfv(index: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetVertexAttribfv(index: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetVertexAttribiv(index: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetVertexAttribiv(index: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glHint(target: Integer; mode: Integer); cdecl;
    {class} function glIsBuffer(buffer: Integer): Boolean; cdecl;
    {class} function glIsEnabled(cap: Integer): Boolean; cdecl;
    {class} function glIsFramebuffer(framebuffer: Integer): Boolean; cdecl;
    {class} function glIsProgram(program_: Integer): Boolean; cdecl;
    {class} function glIsRenderbuffer(renderbuffer: Integer): Boolean; cdecl;
    {class} function glIsShader(shader: Integer): Boolean; cdecl;
    {class} function glIsTexture(texture: Integer): Boolean; cdecl;
    {class} procedure glLineWidth(width: Single); cdecl;
    {class} procedure glLinkProgram(program_: Integer); cdecl;
    {class} procedure glPixelStorei(pname: Integer; param: Integer); cdecl;
    {class} procedure glPolygonOffset(factor: Single; units: Single); cdecl;
    {class} procedure glReadPixels(x: Integer; y: Integer; width: Integer; height: Integer; format: Integer; type_: Integer; pixels: JBuffer); cdecl;
    {class} procedure glReleaseShaderCompiler; cdecl;
    {class} procedure glRenderbufferStorage(target: Integer; internalformat: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glSampleCoverage(value: Single; invert: Boolean); cdecl;
    {class} procedure glScissor(x: Integer; y: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glShaderBinary(n: Integer; shaders: TJavaArray<Integer>; offset: Integer; binaryformat: Integer; binary: JBuffer; length: Integer); cdecl; overload;
    {class} procedure glShaderBinary(n: Integer; shaders: JIntBuffer; binaryformat: Integer; binary: JBuffer; length: Integer); cdecl; overload;
    {class} procedure glShaderSource(shader: Integer; string_: JString); cdecl;
    {class} procedure glStencilFunc(func: Integer; ref: Integer; mask: Integer); cdecl;
    {class} procedure glStencilFuncSeparate(face: Integer; func: Integer; ref: Integer; mask: Integer); cdecl;
    {class} procedure glStencilMask(mask: Integer); cdecl;
    {class} procedure glStencilMaskSeparate(face: Integer; mask: Integer); cdecl;
    {class} procedure glStencilOp(fail: Integer; zfail: Integer; zpass: Integer); cdecl;
    {class} procedure glStencilOpSeparate(face: Integer; fail: Integer; zfail: Integer; zpass: Integer); cdecl;
    {class} procedure glTexImage2D(target: Integer; level: Integer; internalformat: Integer; width: Integer; height: Integer; border: Integer; format: Integer; type_: Integer; pixels: JBuffer); cdecl;
    {class} procedure glTexParameterf(target: Integer; pname: Integer; param: Single); cdecl;
    {class} procedure glTexParameterfv(target: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glTexParameterfv(target: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glTexParameteri(target: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glTexParameteriv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexParameteriv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexSubImage2D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; width: Integer; height: Integer; format: Integer; type_: Integer; pixels: JBuffer); cdecl;
    {class} procedure glUniform1f(location: Integer; x: Single); cdecl;
    {class} procedure glUniform1fv(location: Integer; count: Integer; v: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniform1fv(location: Integer; count: Integer; v: JFloatBuffer); cdecl; overload;
    {class} procedure glUniform1i(location: Integer; x: Integer); cdecl;
    {class} procedure glUniform1iv(location: Integer; count: Integer; v: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glUniform1iv(location: Integer; count: Integer; v: JIntBuffer); cdecl; overload;
    {class} procedure glUniform2f(location: Integer; x: Single; y: Single); cdecl;
    {class} procedure glUniform2fv(location: Integer; count: Integer; v: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniform2fv(location: Integer; count: Integer; v: JFloatBuffer); cdecl; overload;
    {class} procedure glUniform2i(location: Integer; x: Integer; y: Integer); cdecl;
    {class} procedure glUniform2iv(location: Integer; count: Integer; v: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glUniform2iv(location: Integer; count: Integer; v: JIntBuffer); cdecl; overload;
    {class} procedure glUniform3f(location: Integer; x: Single; y: Single; z: Single); cdecl;
    {class} procedure glUniform3fv(location: Integer; count: Integer; v: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniform3fv(location: Integer; count: Integer; v: JFloatBuffer); cdecl; overload;
    {class} procedure glUniform3i(location: Integer; x: Integer; y: Integer; z: Integer); cdecl;
    {class} procedure glUniform3iv(location: Integer; count: Integer; v: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glUniform3iv(location: Integer; count: Integer; v: JIntBuffer); cdecl; overload;
    {class} procedure glUniform4f(location: Integer; x: Single; y: Single; z: Single; w: Single); cdecl;
    {class} procedure glUniform4fv(location: Integer; count: Integer; v: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniform4fv(location: Integer; count: Integer; v: JFloatBuffer); cdecl; overload;
    {class} procedure glUniform4i(location: Integer; x: Integer; y: Integer; z: Integer; w: Integer); cdecl;
    {class} procedure glUniform4iv(location: Integer; count: Integer; v: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glUniform4iv(location: Integer; count: Integer; v: JIntBuffer); cdecl; overload;
    {class} procedure glUniformMatrix2fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix2fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glUniformMatrix3fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix3fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glUniformMatrix4fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix4fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glUseProgram(program_: Integer); cdecl;
    {class} procedure glValidateProgram(program_: Integer); cdecl;
    {class} procedure glVertexAttrib1f(indx: Integer; x: Single); cdecl;
    {class} procedure glVertexAttrib1fv(indx: Integer; values: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glVertexAttrib1fv(indx: Integer; values: JFloatBuffer); cdecl; overload;
    {class} procedure glVertexAttrib2f(indx: Integer; x: Single; y: Single); cdecl;
    {class} procedure glVertexAttrib2fv(indx: Integer; values: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glVertexAttrib2fv(indx: Integer; values: JFloatBuffer); cdecl; overload;
    {class} procedure glVertexAttrib3f(indx: Integer; x: Single; y: Single; z: Single); cdecl;
    {class} procedure glVertexAttrib3fv(indx: Integer; values: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glVertexAttrib3fv(indx: Integer; values: JFloatBuffer); cdecl; overload;
    {class} procedure glVertexAttrib4f(indx: Integer; x: Single; y: Single; z: Single; w: Single); cdecl;
    {class} procedure glVertexAttrib4fv(indx: Integer; values: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glVertexAttrib4fv(indx: Integer; values: JFloatBuffer); cdecl; overload;
    {class} procedure glVertexAttribPointer(indx: Integer; size: Integer; type_: Integer; normalized: Boolean; stride: Integer; offset: Integer); cdecl; overload;
    {class} procedure glVertexAttribPointer(indx: Integer; size: Integer; type_: Integer; normalized: Boolean; stride: Integer; ptr: JBuffer); cdecl; overload;
    {class} procedure glViewport(x: Integer; y: Integer; width: Integer; height: Integer); cdecl;
    {class} property GL_ACTIVE_ATTRIBUTES: Integer read _GetGL_ACTIVE_ATTRIBUTES;
    {class} property GL_ACTIVE_ATTRIBUTE_MAX_LENGTH: Integer read _GetGL_ACTIVE_ATTRIBUTE_MAX_LENGTH;
    {class} property GL_ACTIVE_TEXTURE: Integer read _GetGL_ACTIVE_TEXTURE;
    {class} property GL_ACTIVE_UNIFORMS: Integer read _GetGL_ACTIVE_UNIFORMS;
    {class} property GL_ACTIVE_UNIFORM_MAX_LENGTH: Integer read _GetGL_ACTIVE_UNIFORM_MAX_LENGTH;
    {class} property GL_ALIASED_LINE_WIDTH_RANGE: Integer read _GetGL_ALIASED_LINE_WIDTH_RANGE;
    {class} property GL_ALIASED_POINT_SIZE_RANGE: Integer read _GetGL_ALIASED_POINT_SIZE_RANGE;
    {class} property GL_ALPHA: Integer read _GetGL_ALPHA;
    {class} property GL_ALPHA_BITS: Integer read _GetGL_ALPHA_BITS;
    {class} property GL_ALWAYS: Integer read _GetGL_ALWAYS;
    {class} property GL_ARRAY_BUFFER: Integer read _GetGL_ARRAY_BUFFER;
    {class} property GL_ARRAY_BUFFER_BINDING: Integer read _GetGL_ARRAY_BUFFER_BINDING;
    {class} property GL_ATTACHED_SHADERS: Integer read _GetGL_ATTACHED_SHADERS;
    {class} property GL_BACK: Integer read _GetGL_BACK;
    {class} property GL_BLEND: Integer read _GetGL_BLEND;
    {class} property GL_BLEND_COLOR: Integer read _GetGL_BLEND_COLOR;
    {class} property GL_BLEND_DST_ALPHA: Integer read _GetGL_BLEND_DST_ALPHA;
    {class} property GL_BLEND_DST_RGB: Integer read _GetGL_BLEND_DST_RGB;
    {class} property GL_BLEND_EQUATION: Integer read _GetGL_BLEND_EQUATION;
    {class} property GL_BLEND_EQUATION_ALPHA: Integer read _GetGL_BLEND_EQUATION_ALPHA;
    {class} property GL_BLEND_EQUATION_RGB: Integer read _GetGL_BLEND_EQUATION_RGB;
    {class} property GL_BLEND_SRC_ALPHA: Integer read _GetGL_BLEND_SRC_ALPHA;
    {class} property GL_BLEND_SRC_RGB: Integer read _GetGL_BLEND_SRC_RGB;
    {class} property GL_BLUE_BITS: Integer read _GetGL_BLUE_BITS;
    {class} property GL_BOOL: Integer read _GetGL_BOOL;
    {class} property GL_BOOL_VEC2: Integer read _GetGL_BOOL_VEC2;
    {class} property GL_BOOL_VEC3: Integer read _GetGL_BOOL_VEC3;
    {class} property GL_BOOL_VEC4: Integer read _GetGL_BOOL_VEC4;
    {class} property GL_BUFFER_SIZE: Integer read _GetGL_BUFFER_SIZE;
    {class} property GL_BUFFER_USAGE: Integer read _GetGL_BUFFER_USAGE;
    {class} property GL_BYTE: Integer read _GetGL_BYTE;
    {class} property GL_CCW: Integer read _GetGL_CCW;
    {class} property GL_CLAMP_TO_EDGE: Integer read _GetGL_CLAMP_TO_EDGE;
    {class} property GL_COLOR_ATTACHMENT0: Integer read _GetGL_COLOR_ATTACHMENT0;
    {class} property GL_COLOR_BUFFER_BIT: Integer read _GetGL_COLOR_BUFFER_BIT;
    {class} property GL_COLOR_CLEAR_VALUE: Integer read _GetGL_COLOR_CLEAR_VALUE;
    {class} property GL_COLOR_WRITEMASK: Integer read _GetGL_COLOR_WRITEMASK;
    {class} property GL_COMPILE_STATUS: Integer read _GetGL_COMPILE_STATUS;
    {class} property GL_COMPRESSED_TEXTURE_FORMATS: Integer read _GetGL_COMPRESSED_TEXTURE_FORMATS;
    {class} property GL_CONSTANT_ALPHA: Integer read _GetGL_CONSTANT_ALPHA;
    {class} property GL_CONSTANT_COLOR: Integer read _GetGL_CONSTANT_COLOR;
    {class} property GL_CULL_FACE: Integer read _GetGL_CULL_FACE;
    {class} property GL_CULL_FACE_MODE: Integer read _GetGL_CULL_FACE_MODE;
    {class} property GL_CURRENT_PROGRAM: Integer read _GetGL_CURRENT_PROGRAM;
    {class} property GL_CURRENT_VERTEX_ATTRIB: Integer read _GetGL_CURRENT_VERTEX_ATTRIB;
    {class} property GL_CW: Integer read _GetGL_CW;
    {class} property GL_DECR: Integer read _GetGL_DECR;
    {class} property GL_DECR_WRAP: Integer read _GetGL_DECR_WRAP;
    {class} property GL_DELETE_STATUS: Integer read _GetGL_DELETE_STATUS;
    {class} property GL_DEPTH_ATTACHMENT: Integer read _GetGL_DEPTH_ATTACHMENT;
    {class} property GL_DEPTH_BITS: Integer read _GetGL_DEPTH_BITS;
    {class} property GL_DEPTH_BUFFER_BIT: Integer read _GetGL_DEPTH_BUFFER_BIT;
    {class} property GL_DEPTH_CLEAR_VALUE: Integer read _GetGL_DEPTH_CLEAR_VALUE;
    {class} property GL_DEPTH_COMPONENT: Integer read _GetGL_DEPTH_COMPONENT;
    {class} property GL_DEPTH_COMPONENT16: Integer read _GetGL_DEPTH_COMPONENT16;
    {class} property GL_DEPTH_FUNC: Integer read _GetGL_DEPTH_FUNC;
    {class} property GL_DEPTH_RANGE: Integer read _GetGL_DEPTH_RANGE;
    {class} property GL_DEPTH_TEST: Integer read _GetGL_DEPTH_TEST;
    {class} property GL_DEPTH_WRITEMASK: Integer read _GetGL_DEPTH_WRITEMASK;
    {class} property GL_DITHER: Integer read _GetGL_DITHER;
    {class} property GL_DONT_CARE: Integer read _GetGL_DONT_CARE;
    {class} property GL_DST_ALPHA: Integer read _GetGL_DST_ALPHA;
    {class} property GL_DST_COLOR: Integer read _GetGL_DST_COLOR;
    {class} property GL_DYNAMIC_DRAW: Integer read _GetGL_DYNAMIC_DRAW;
    {class} property GL_ELEMENT_ARRAY_BUFFER: Integer read _GetGL_ELEMENT_ARRAY_BUFFER;
    {class} property GL_ELEMENT_ARRAY_BUFFER_BINDING: Integer read _GetGL_ELEMENT_ARRAY_BUFFER_BINDING;
    {class} property GL_EQUAL: Integer read _GetGL_EQUAL;
    {class} property GL_EXTENSIONS: Integer read _GetGL_EXTENSIONS;
    {class} property GL_FALSE: Integer read _GetGL_FALSE;
    {class} property GL_FASTEST: Integer read _GetGL_FASTEST;
    {class} property GL_FIXED: Integer read _GetGL_FIXED;
    {class} property GL_FLOAT: Integer read _GetGL_FLOAT;
    {class} property GL_FLOAT_MAT2: Integer read _GetGL_FLOAT_MAT2;
    {class} property GL_FLOAT_MAT3: Integer read _GetGL_FLOAT_MAT3;
    {class} property GL_FLOAT_MAT4: Integer read _GetGL_FLOAT_MAT4;
    {class} property GL_FLOAT_VEC2: Integer read _GetGL_FLOAT_VEC2;
    {class} property GL_FLOAT_VEC3: Integer read _GetGL_FLOAT_VEC3;
    {class} property GL_FLOAT_VEC4: Integer read _GetGL_FLOAT_VEC4;
    {class} property GL_FRAGMENT_SHADER: Integer read _GetGL_FRAGMENT_SHADER;
    {class} property GL_FRAMEBUFFER: Integer read _GetGL_FRAMEBUFFER;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;
    {class} property GL_FRAMEBUFFER_BINDING: Integer read _GetGL_FRAMEBUFFER_BINDING;
    {class} property GL_FRAMEBUFFER_COMPLETE: Integer read _GetGL_FRAMEBUFFER_COMPLETE;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
    {class} property GL_FRAMEBUFFER_UNSUPPORTED: Integer read _GetGL_FRAMEBUFFER_UNSUPPORTED;
    {class} property GL_FRONT: Integer read _GetGL_FRONT;
    {class} property GL_FRONT_AND_BACK: Integer read _GetGL_FRONT_AND_BACK;
    {class} property GL_FRONT_FACE: Integer read _GetGL_FRONT_FACE;
    {class} property GL_FUNC_ADD: Integer read _GetGL_FUNC_ADD;
    {class} property GL_FUNC_REVERSE_SUBTRACT: Integer read _GetGL_FUNC_REVERSE_SUBTRACT;
    {class} property GL_FUNC_SUBTRACT: Integer read _GetGL_FUNC_SUBTRACT;
    {class} property GL_GENERATE_MIPMAP_HINT: Integer read _GetGL_GENERATE_MIPMAP_HINT;
    {class} property GL_GEQUAL: Integer read _GetGL_GEQUAL;
    {class} property GL_GREATER: Integer read _GetGL_GREATER;
    {class} property GL_GREEN_BITS: Integer read _GetGL_GREEN_BITS;
    {class} property GL_HIGH_FLOAT: Integer read _GetGL_HIGH_FLOAT;
    {class} property GL_HIGH_INT: Integer read _GetGL_HIGH_INT;
    {class} property GL_IMPLEMENTATION_COLOR_READ_FORMAT: Integer read _GetGL_IMPLEMENTATION_COLOR_READ_FORMAT;
    {class} property GL_IMPLEMENTATION_COLOR_READ_TYPE: Integer read _GetGL_IMPLEMENTATION_COLOR_READ_TYPE;
    {class} property GL_INCR: Integer read _GetGL_INCR;
    {class} property GL_INCR_WRAP: Integer read _GetGL_INCR_WRAP;
    {class} property GL_INFO_LOG_LENGTH: Integer read _GetGL_INFO_LOG_LENGTH;
    {class} property GL_INT: Integer read _GetGL_INT;
    {class} property GL_INT_VEC2: Integer read _GetGL_INT_VEC2;
    {class} property GL_INT_VEC3: Integer read _GetGL_INT_VEC3;
    {class} property GL_INT_VEC4: Integer read _GetGL_INT_VEC4;
    {class} property GL_INVALID_ENUM: Integer read _GetGL_INVALID_ENUM;
    {class} property GL_INVALID_FRAMEBUFFER_OPERATION: Integer read _GetGL_INVALID_FRAMEBUFFER_OPERATION;
    {class} property GL_INVALID_OPERATION: Integer read _GetGL_INVALID_OPERATION;
    {class} property GL_INVALID_VALUE: Integer read _GetGL_INVALID_VALUE;
    {class} property GL_INVERT: Integer read _GetGL_INVERT;
    {class} property GL_KEEP: Integer read _GetGL_KEEP;
    {class} property GL_LEQUAL: Integer read _GetGL_LEQUAL;
    {class} property GL_LESS: Integer read _GetGL_LESS;
    {class} property GL_LINEAR: Integer read _GetGL_LINEAR;
    {class} property GL_LINEAR_MIPMAP_LINEAR: Integer read _GetGL_LINEAR_MIPMAP_LINEAR;
    {class} property GL_LINEAR_MIPMAP_NEAREST: Integer read _GetGL_LINEAR_MIPMAP_NEAREST;
    {class} property GL_LINES: Integer read _GetGL_LINES;
    {class} property GL_LINE_LOOP: Integer read _GetGL_LINE_LOOP;
    {class} property GL_LINE_STRIP: Integer read _GetGL_LINE_STRIP;
    {class} property GL_LINE_WIDTH: Integer read _GetGL_LINE_WIDTH;
    {class} property GL_LINK_STATUS: Integer read _GetGL_LINK_STATUS;
    {class} property GL_LOW_FLOAT: Integer read _GetGL_LOW_FLOAT;
    {class} property GL_LOW_INT: Integer read _GetGL_LOW_INT;
    {class} property GL_LUMINANCE: Integer read _GetGL_LUMINANCE;
    {class} property GL_LUMINANCE_ALPHA: Integer read _GetGL_LUMINANCE_ALPHA;
    {class} property GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS: Integer read _GetGL_MAX_COMBINED_TEXTURE_IMAGE_UNITS;
    {class} property GL_MAX_CUBE_MAP_TEXTURE_SIZE: Integer read _GetGL_MAX_CUBE_MAP_TEXTURE_SIZE;
    {class} property GL_MAX_FRAGMENT_UNIFORM_VECTORS: Integer read _GetGL_MAX_FRAGMENT_UNIFORM_VECTORS;
    {class} property GL_MAX_RENDERBUFFER_SIZE: Integer read _GetGL_MAX_RENDERBUFFER_SIZE;
    {class} property GL_MAX_TEXTURE_IMAGE_UNITS: Integer read _GetGL_MAX_TEXTURE_IMAGE_UNITS;
    {class} property GL_MAX_TEXTURE_SIZE: Integer read _GetGL_MAX_TEXTURE_SIZE;
    {class} property GL_MAX_VARYING_VECTORS: Integer read _GetGL_MAX_VARYING_VECTORS;
    {class} property GL_MAX_VERTEX_ATTRIBS: Integer read _GetGL_MAX_VERTEX_ATTRIBS;
    {class} property GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS: Integer read _GetGL_MAX_VERTEX_TEXTURE_IMAGE_UNITS;
    {class} property GL_MAX_VERTEX_UNIFORM_VECTORS: Integer read _GetGL_MAX_VERTEX_UNIFORM_VECTORS;
    {class} property GL_MAX_VIEWPORT_DIMS: Integer read _GetGL_MAX_VIEWPORT_DIMS;
    {class} property GL_MEDIUM_FLOAT: Integer read _GetGL_MEDIUM_FLOAT;
    {class} property GL_MEDIUM_INT: Integer read _GetGL_MEDIUM_INT;
    {class} property GL_MIRRORED_REPEAT: Integer read _GetGL_MIRRORED_REPEAT;
    {class} property GL_NEAREST: Integer read _GetGL_NEAREST;
    {class} property GL_NEAREST_MIPMAP_LINEAR: Integer read _GetGL_NEAREST_MIPMAP_LINEAR;
    {class} property GL_NEAREST_MIPMAP_NEAREST: Integer read _GetGL_NEAREST_MIPMAP_NEAREST;
    {class} property GL_NEVER: Integer read _GetGL_NEVER;
    {class} property GL_NICEST: Integer read _GetGL_NICEST;
    {class} property GL_NONE: Integer read _GetGL_NONE;
    {class} property GL_NOTEQUAL: Integer read _GetGL_NOTEQUAL;
    {class} property GL_NO_ERROR: Integer read _GetGL_NO_ERROR;
    {class} property GL_NUM_COMPRESSED_TEXTURE_FORMATS: Integer read _GetGL_NUM_COMPRESSED_TEXTURE_FORMATS;
    {class} property GL_NUM_SHADER_BINARY_FORMATS: Integer read _GetGL_NUM_SHADER_BINARY_FORMATS;
    {class} property GL_ONE: Integer read _GetGL_ONE;
    {class} property GL_ONE_MINUS_CONSTANT_ALPHA: Integer read _GetGL_ONE_MINUS_CONSTANT_ALPHA;
    {class} property GL_ONE_MINUS_CONSTANT_COLOR: Integer read _GetGL_ONE_MINUS_CONSTANT_COLOR;
    {class} property GL_ONE_MINUS_DST_ALPHA: Integer read _GetGL_ONE_MINUS_DST_ALPHA;
    {class} property GL_ONE_MINUS_DST_COLOR: Integer read _GetGL_ONE_MINUS_DST_COLOR;
    {class} property GL_ONE_MINUS_SRC_ALPHA: Integer read _GetGL_ONE_MINUS_SRC_ALPHA;
    {class} property GL_ONE_MINUS_SRC_COLOR: Integer read _GetGL_ONE_MINUS_SRC_COLOR;
    {class} property GL_OUT_OF_MEMORY: Integer read _GetGL_OUT_OF_MEMORY;
    {class} property GL_PACK_ALIGNMENT: Integer read _GetGL_PACK_ALIGNMENT;
    {class} property GL_POINTS: Integer read _GetGL_POINTS;
    {class} property GL_POLYGON_OFFSET_FACTOR: Integer read _GetGL_POLYGON_OFFSET_FACTOR;
    {class} property GL_POLYGON_OFFSET_FILL: Integer read _GetGL_POLYGON_OFFSET_FILL;
    {class} property GL_POLYGON_OFFSET_UNITS: Integer read _GetGL_POLYGON_OFFSET_UNITS;
    {class} property GL_RED_BITS: Integer read _GetGL_RED_BITS;
    {class} property GL_RENDERBUFFER: Integer read _GetGL_RENDERBUFFER;
    {class} property GL_RENDERBUFFER_ALPHA_SIZE: Integer read _GetGL_RENDERBUFFER_ALPHA_SIZE;
    {class} property GL_RENDERBUFFER_BINDING: Integer read _GetGL_RENDERBUFFER_BINDING;
    {class} property GL_RENDERBUFFER_BLUE_SIZE: Integer read _GetGL_RENDERBUFFER_BLUE_SIZE;
    {class} property GL_RENDERBUFFER_DEPTH_SIZE: Integer read _GetGL_RENDERBUFFER_DEPTH_SIZE;
    {class} property GL_RENDERBUFFER_GREEN_SIZE: Integer read _GetGL_RENDERBUFFER_GREEN_SIZE;
    {class} property GL_RENDERBUFFER_HEIGHT: Integer read _GetGL_RENDERBUFFER_HEIGHT;
    {class} property GL_RENDERBUFFER_INTERNAL_FORMAT: Integer read _GetGL_RENDERBUFFER_INTERNAL_FORMAT;
    {class} property GL_RENDERBUFFER_RED_SIZE: Integer read _GetGL_RENDERBUFFER_RED_SIZE;
    {class} property GL_RENDERBUFFER_STENCIL_SIZE: Integer read _GetGL_RENDERBUFFER_STENCIL_SIZE;
    {class} property GL_RENDERBUFFER_WIDTH: Integer read _GetGL_RENDERBUFFER_WIDTH;
    {class} property GL_RENDERER: Integer read _GetGL_RENDERER;
    {class} property GL_REPEAT: Integer read _GetGL_REPEAT;
    {class} property GL_REPLACE: Integer read _GetGL_REPLACE;
    {class} property GL_RGB: Integer read _GetGL_RGB;
    {class} property GL_RGB565: Integer read _GetGL_RGB565;
    {class} property GL_RGB5_A1: Integer read _GetGL_RGB5_A1;
    {class} property GL_RGBA: Integer read _GetGL_RGBA;
    {class} property GL_RGBA4: Integer read _GetGL_RGBA4;
    {class} property GL_SAMPLER_2D: Integer read _GetGL_SAMPLER_2D;
    {class} property GL_SAMPLER_CUBE: Integer read _GetGL_SAMPLER_CUBE;
    {class} property GL_SAMPLES: Integer read _GetGL_SAMPLES;
    {class} property GL_SAMPLE_ALPHA_TO_COVERAGE: Integer read _GetGL_SAMPLE_ALPHA_TO_COVERAGE;
    {class} property GL_SAMPLE_BUFFERS: Integer read _GetGL_SAMPLE_BUFFERS;
    {class} property GL_SAMPLE_COVERAGE: Integer read _GetGL_SAMPLE_COVERAGE;
    {class} property GL_SAMPLE_COVERAGE_INVERT: Integer read _GetGL_SAMPLE_COVERAGE_INVERT;
    {class} property GL_SAMPLE_COVERAGE_VALUE: Integer read _GetGL_SAMPLE_COVERAGE_VALUE;
    {class} property GL_SCISSOR_BOX: Integer read _GetGL_SCISSOR_BOX;
    {class} property GL_SCISSOR_TEST: Integer read _GetGL_SCISSOR_TEST;
    {class} property GL_SHADER_BINARY_FORMATS: Integer read _GetGL_SHADER_BINARY_FORMATS;
    {class} property GL_SHADER_COMPILER: Integer read _GetGL_SHADER_COMPILER;
    {class} property GL_SHADER_SOURCE_LENGTH: Integer read _GetGL_SHADER_SOURCE_LENGTH;
    {class} property GL_SHADER_TYPE: Integer read _GetGL_SHADER_TYPE;
    {class} property GL_SHADING_LANGUAGE_VERSION: Integer read _GetGL_SHADING_LANGUAGE_VERSION;
    {class} property GL_SHORT: Integer read _GetGL_SHORT;
    {class} property GL_SRC_ALPHA: Integer read _GetGL_SRC_ALPHA;
    {class} property GL_SRC_ALPHA_SATURATE: Integer read _GetGL_SRC_ALPHA_SATURATE;
    {class} property GL_SRC_COLOR: Integer read _GetGL_SRC_COLOR;
    {class} property GL_STATIC_DRAW: Integer read _GetGL_STATIC_DRAW;
    {class} property GL_STENCIL_ATTACHMENT: Integer read _GetGL_STENCIL_ATTACHMENT;
    {class} property GL_STENCIL_BACK_FAIL: Integer read _GetGL_STENCIL_BACK_FAIL;
    {class} property GL_STENCIL_BACK_FUNC: Integer read _GetGL_STENCIL_BACK_FUNC;
    {class} property GL_STENCIL_BACK_PASS_DEPTH_FAIL: Integer read _GetGL_STENCIL_BACK_PASS_DEPTH_FAIL;
    {class} property GL_STENCIL_BACK_PASS_DEPTH_PASS: Integer read _GetGL_STENCIL_BACK_PASS_DEPTH_PASS;
    {class} property GL_STENCIL_BACK_REF: Integer read _GetGL_STENCIL_BACK_REF;
    {class} property GL_STENCIL_BACK_VALUE_MASK: Integer read _GetGL_STENCIL_BACK_VALUE_MASK;
    {class} property GL_STENCIL_BACK_WRITEMASK: Integer read _GetGL_STENCIL_BACK_WRITEMASK;
    {class} property GL_STENCIL_BITS: Integer read _GetGL_STENCIL_BITS;
    {class} property GL_STENCIL_BUFFER_BIT: Integer read _GetGL_STENCIL_BUFFER_BIT;
    {class} property GL_STENCIL_CLEAR_VALUE: Integer read _GetGL_STENCIL_CLEAR_VALUE;
    {class} property GL_STENCIL_FAIL: Integer read _GetGL_STENCIL_FAIL;
    {class} property GL_STENCIL_FUNC: Integer read _GetGL_STENCIL_FUNC;
    {class} property GL_STENCIL_INDEX: Integer read _GetGL_STENCIL_INDEX;
    {class} property GL_STENCIL_INDEX8: Integer read _GetGL_STENCIL_INDEX8;
    {class} property GL_STENCIL_PASS_DEPTH_FAIL: Integer read _GetGL_STENCIL_PASS_DEPTH_FAIL;
    {class} property GL_STENCIL_PASS_DEPTH_PASS: Integer read _GetGL_STENCIL_PASS_DEPTH_PASS;
    {class} property GL_STENCIL_REF: Integer read _GetGL_STENCIL_REF;
    {class} property GL_STENCIL_TEST: Integer read _GetGL_STENCIL_TEST;
    {class} property GL_STENCIL_VALUE_MASK: Integer read _GetGL_STENCIL_VALUE_MASK;
    {class} property GL_STENCIL_WRITEMASK: Integer read _GetGL_STENCIL_WRITEMASK;
    {class} property GL_STREAM_DRAW: Integer read _GetGL_STREAM_DRAW;
    {class} property GL_SUBPIXEL_BITS: Integer read _GetGL_SUBPIXEL_BITS;
    {class} property GL_TEXTURE: Integer read _GetGL_TEXTURE;
    {class} property GL_TEXTURE0: Integer read _GetGL_TEXTURE0;
    {class} property GL_TEXTURE1: Integer read _GetGL_TEXTURE1;
    {class} property GL_TEXTURE10: Integer read _GetGL_TEXTURE10;
    {class} property GL_TEXTURE11: Integer read _GetGL_TEXTURE11;
    {class} property GL_TEXTURE12: Integer read _GetGL_TEXTURE12;
    {class} property GL_TEXTURE13: Integer read _GetGL_TEXTURE13;
    {class} property GL_TEXTURE14: Integer read _GetGL_TEXTURE14;
    {class} property GL_TEXTURE15: Integer read _GetGL_TEXTURE15;
    {class} property GL_TEXTURE16: Integer read _GetGL_TEXTURE16;
    {class} property GL_TEXTURE17: Integer read _GetGL_TEXTURE17;
    {class} property GL_TEXTURE18: Integer read _GetGL_TEXTURE18;
    {class} property GL_TEXTURE19: Integer read _GetGL_TEXTURE19;
    {class} property GL_TEXTURE2: Integer read _GetGL_TEXTURE2;
    {class} property GL_TEXTURE20: Integer read _GetGL_TEXTURE20;
    {class} property GL_TEXTURE21: Integer read _GetGL_TEXTURE21;
    {class} property GL_TEXTURE22: Integer read _GetGL_TEXTURE22;
    {class} property GL_TEXTURE23: Integer read _GetGL_TEXTURE23;
    {class} property GL_TEXTURE24: Integer read _GetGL_TEXTURE24;
    {class} property GL_TEXTURE25: Integer read _GetGL_TEXTURE25;
    {class} property GL_TEXTURE26: Integer read _GetGL_TEXTURE26;
    {class} property GL_TEXTURE27: Integer read _GetGL_TEXTURE27;
    {class} property GL_TEXTURE28: Integer read _GetGL_TEXTURE28;
    {class} property GL_TEXTURE29: Integer read _GetGL_TEXTURE29;
    {class} property GL_TEXTURE3: Integer read _GetGL_TEXTURE3;
    {class} property GL_TEXTURE30: Integer read _GetGL_TEXTURE30;
    {class} property GL_TEXTURE31: Integer read _GetGL_TEXTURE31;
    {class} property GL_TEXTURE4: Integer read _GetGL_TEXTURE4;
    {class} property GL_TEXTURE5: Integer read _GetGL_TEXTURE5;
    {class} property GL_TEXTURE6: Integer read _GetGL_TEXTURE6;
    {class} property GL_TEXTURE7: Integer read _GetGL_TEXTURE7;
    {class} property GL_TEXTURE8: Integer read _GetGL_TEXTURE8;
    {class} property GL_TEXTURE9: Integer read _GetGL_TEXTURE9;
    {class} property GL_TEXTURE_2D: Integer read _GetGL_TEXTURE_2D;
    {class} property GL_TEXTURE_BINDING_2D: Integer read _GetGL_TEXTURE_BINDING_2D;
    {class} property GL_TEXTURE_BINDING_CUBE_MAP: Integer read _GetGL_TEXTURE_BINDING_CUBE_MAP;
    {class} property GL_TEXTURE_CUBE_MAP: Integer read _GetGL_TEXTURE_CUBE_MAP;
    {class} property GL_TEXTURE_CUBE_MAP_NEGATIVE_X: Integer read _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_X;
    {class} property GL_TEXTURE_CUBE_MAP_NEGATIVE_Y: Integer read _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_Y;
    {class} property GL_TEXTURE_CUBE_MAP_NEGATIVE_Z: Integer read _GetGL_TEXTURE_CUBE_MAP_NEGATIVE_Z;
    {class} property GL_TEXTURE_CUBE_MAP_POSITIVE_X: Integer read _GetGL_TEXTURE_CUBE_MAP_POSITIVE_X;
    {class} property GL_TEXTURE_CUBE_MAP_POSITIVE_Y: Integer read _GetGL_TEXTURE_CUBE_MAP_POSITIVE_Y;
    {class} property GL_TEXTURE_CUBE_MAP_POSITIVE_Z: Integer read _GetGL_TEXTURE_CUBE_MAP_POSITIVE_Z;
    {class} property GL_TEXTURE_MAG_FILTER: Integer read _GetGL_TEXTURE_MAG_FILTER;
    {class} property GL_TEXTURE_MIN_FILTER: Integer read _GetGL_TEXTURE_MIN_FILTER;
    {class} property GL_TEXTURE_WRAP_S: Integer read _GetGL_TEXTURE_WRAP_S;
    {class} property GL_TEXTURE_WRAP_T: Integer read _GetGL_TEXTURE_WRAP_T;
    {class} property GL_TRIANGLES: Integer read _GetGL_TRIANGLES;
    {class} property GL_TRIANGLE_FAN: Integer read _GetGL_TRIANGLE_FAN;
    {class} property GL_TRIANGLE_STRIP: Integer read _GetGL_TRIANGLE_STRIP;
    {class} property GL_TRUE: Integer read _GetGL_TRUE;
    {class} property GL_UNPACK_ALIGNMENT: Integer read _GetGL_UNPACK_ALIGNMENT;
    {class} property GL_UNSIGNED_BYTE: Integer read _GetGL_UNSIGNED_BYTE;
    {class} property GL_UNSIGNED_INT: Integer read _GetGL_UNSIGNED_INT;
    {class} property GL_UNSIGNED_SHORT: Integer read _GetGL_UNSIGNED_SHORT;
    {class} property GL_UNSIGNED_SHORT_4_4_4_4: Integer read _GetGL_UNSIGNED_SHORT_4_4_4_4;
    {class} property GL_UNSIGNED_SHORT_5_5_5_1: Integer read _GetGL_UNSIGNED_SHORT_5_5_5_1;
    {class} property GL_UNSIGNED_SHORT_5_6_5: Integer read _GetGL_UNSIGNED_SHORT_5_6_5;
    {class} property GL_VALIDATE_STATUS: Integer read _GetGL_VALIDATE_STATUS;
    {class} property GL_VENDOR: Integer read _GetGL_VENDOR;
    {class} property GL_VERSION: Integer read _GetGL_VERSION;
    {class} property GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;
    {class} property GL_VERTEX_ATTRIB_ARRAY_ENABLED: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_ENABLED;
    {class} property GL_VERTEX_ATTRIB_ARRAY_NORMALIZED: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_NORMALIZED;
    {class} property GL_VERTEX_ATTRIB_ARRAY_POINTER: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_POINTER;
    {class} property GL_VERTEX_ATTRIB_ARRAY_SIZE: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_SIZE;
    {class} property GL_VERTEX_ATTRIB_ARRAY_STRIDE: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_STRIDE;
    {class} property GL_VERTEX_ATTRIB_ARRAY_TYPE: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_TYPE;
    {class} property GL_VERTEX_SHADER: Integer read _GetGL_VERTEX_SHADER;
    {class} property GL_VIEWPORT: Integer read _GetGL_VIEWPORT;
    {class} property GL_ZERO: Integer read _GetGL_ZERO;
  end;

  [JavaSignature('android/opengl/GLES20')]
  JGLES20 = interface(JObject)
    ['{C9117E42-C2BB-477E-9824-8499EB52648C}']
  end;
  TJGLES20 = class(TJavaGenericImport<JGLES20Class, JGLES20>) end;

  JGLES30Class = interface(JGLES20Class)
    ['{AB1FCB89-9334-45D0-94EB-1B0BE5D0D311}']
    {class} function _GetGL_ACTIVE_UNIFORM_BLOCKS: Integer; cdecl;
    {class} function _GetGL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: Integer; cdecl;
    {class} function _GetGL_ALREADY_SIGNALED: Integer; cdecl;
    {class} function _GetGL_ANY_SAMPLES_PASSED: Integer; cdecl;
    {class} function _GetGL_ANY_SAMPLES_PASSED_CONSERVATIVE: Integer; cdecl;
    {class} function _GetGL_BLUE: Integer; cdecl;
    {class} function _GetGL_BUFFER_ACCESS_FLAGS: Integer; cdecl;
    {class} function _GetGL_BUFFER_MAPPED: Integer; cdecl;
    {class} function _GetGL_BUFFER_MAP_LENGTH: Integer; cdecl;
    {class} function _GetGL_BUFFER_MAP_OFFSET: Integer; cdecl;
    {class} function _GetGL_BUFFER_MAP_POINTER: Integer; cdecl;
    {class} function _GetGL_COLOR: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT1: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT10: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT11: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT12: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT13: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT14: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT15: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT2: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT3: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT4: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT5: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT6: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT7: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT8: Integer; cdecl;
    {class} function _GetGL_COLOR_ATTACHMENT9: Integer; cdecl;
    {class} function _GetGL_COMPARE_REF_TO_TEXTURE: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_R11_EAC: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RG11_EAC: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGB8_ETC2: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA8_ETC2_EAC: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SIGNED_R11_EAC: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SIGNED_RG11_EAC: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ETC2: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: Integer; cdecl;
    {class} function _GetGL_CONDITION_SATISFIED: Integer; cdecl;
    {class} function _GetGL_COPY_READ_BUFFER: Integer; cdecl;
    {class} function _GetGL_COPY_READ_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_COPY_WRITE_BUFFER: Integer; cdecl;
    {class} function _GetGL_COPY_WRITE_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_CURRENT_QUERY: Integer; cdecl;
    {class} function _GetGL_DEPTH: Integer; cdecl;
    {class} function _GetGL_DEPTH24_STENCIL8: Integer; cdecl;
    {class} function _GetGL_DEPTH32F_STENCIL8: Integer; cdecl;
    {class} function _GetGL_DEPTH_COMPONENT24: Integer; cdecl;
    {class} function _GetGL_DEPTH_COMPONENT32F: Integer; cdecl;
    {class} function _GetGL_DEPTH_STENCIL: Integer; cdecl;
    {class} function _GetGL_DEPTH_STENCIL_ATTACHMENT: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER0: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER1: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER10: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER11: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER12: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER13: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER14: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER15: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER2: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER3: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER4: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER5: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER6: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER7: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER8: Integer; cdecl;
    {class} function _GetGL_DRAW_BUFFER9: Integer; cdecl;
    {class} function _GetGL_DRAW_FRAMEBUFFER: Integer; cdecl;
    {class} function _GetGL_DRAW_FRAMEBUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_DYNAMIC_COPY: Integer; cdecl;
    {class} function _GetGL_DYNAMIC_READ: Integer; cdecl;
    {class} function _GetGL_FLOAT_32_UNSIGNED_INT_24_8_REV: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT2x3: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT2x4: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT3x2: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT3x4: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT4x2: Integer; cdecl;
    {class} function _GetGL_FLOAT_MAT4x3: Integer; cdecl;
    {class} function _GetGL_FRAGMENT_SHADER_DERIVATIVE_HINT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_RED_SIZE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_DEFAULT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_UNDEFINED: Integer; cdecl;
    {class} function _GetGL_GREEN: Integer; cdecl;
    {class} function _GetGL_HALF_FLOAT: Integer; cdecl;
    {class} function _GetGL_INTERLEAVED_ATTRIBS: Integer; cdecl;
    {class} function _GetGL_INT_2_10_10_10_REV: Integer; cdecl;
    {class} function _GetGL_INT_SAMPLER_2D: Integer; cdecl;
    {class} function _GetGL_INT_SAMPLER_2D_ARRAY: Integer; cdecl;
    {class} function _GetGL_INT_SAMPLER_3D: Integer; cdecl;
    {class} function _GetGL_INT_SAMPLER_CUBE: Integer; cdecl;
    {class} function _GetGL_INVALID_INDEX: Integer; cdecl;
    {class} function _GetGL_MAJOR_VERSION: Integer; cdecl;
    {class} function _GetGL_MAP_FLUSH_EXPLICIT_BIT: Integer; cdecl;
    {class} function _GetGL_MAP_INVALIDATE_BUFFER_BIT: Integer; cdecl;
    {class} function _GetGL_MAP_INVALIDATE_RANGE_BIT: Integer; cdecl;
    {class} function _GetGL_MAP_READ_BIT: Integer; cdecl;
    {class} function _GetGL_MAP_UNSYNCHRONIZED_BIT: Integer; cdecl;
    {class} function _GetGL_MAP_WRITE_BIT: Integer; cdecl;
    {class} function _GetGL_MAX: Integer; cdecl;
    {class} function _GetGL_MAX_3D_TEXTURE_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_ARRAY_TEXTURE_LAYERS: Integer; cdecl;
    {class} function _GetGL_MAX_COLOR_ATTACHMENTS: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_UNIFORM_BLOCKS: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_DRAW_BUFFERS: Integer; cdecl;
    {class} function _GetGL_MAX_ELEMENTS_INDICES: Integer; cdecl;
    {class} function _GetGL_MAX_ELEMENTS_VERTICES: Integer; cdecl;
    {class} function _GetGL_MAX_ELEMENT_INDEX: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_INPUT_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_UNIFORM_BLOCKS: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_UNIFORM_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_PROGRAM_TEXEL_OFFSET: Integer; cdecl;
    {class} function _GetGL_MAX_SAMPLES: Integer; cdecl;
    {class} function _GetGL_MAX_SERVER_WAIT_TIMEOUT: Integer; cdecl;
    {class} function _GetGL_MAX_TEXTURE_LOD_BIAS: Integer; cdecl;
    {class} function _GetGL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: Integer; cdecl;
    {class} function _GetGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_UNIFORM_BLOCK_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_UNIFORM_BUFFER_BINDINGS: Integer; cdecl;
    {class} function _GetGL_MAX_VARYING_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_OUTPUT_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_UNIFORM_BLOCKS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_UNIFORM_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MIN: Integer; cdecl;
    {class} function _GetGL_MINOR_VERSION: Integer; cdecl;
    {class} function _GetGL_MIN_PROGRAM_TEXEL_OFFSET: Integer; cdecl;
    {class} function _GetGL_NUM_EXTENSIONS: Integer; cdecl;
    {class} function _GetGL_NUM_PROGRAM_BINARY_FORMATS: Integer; cdecl;
    {class} function _GetGL_NUM_SAMPLE_COUNTS: Integer; cdecl;
    {class} function _GetGL_OBJECT_TYPE: Integer; cdecl;
    {class} function _GetGL_PACK_ROW_LENGTH: Integer; cdecl;
    {class} function _GetGL_PACK_SKIP_PIXELS: Integer; cdecl;
    {class} function _GetGL_PACK_SKIP_ROWS: Integer; cdecl;
    {class} function _GetGL_PIXEL_PACK_BUFFER: Integer; cdecl;
    {class} function _GetGL_PIXEL_PACK_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_PIXEL_UNPACK_BUFFER: Integer; cdecl;
    {class} function _GetGL_PIXEL_UNPACK_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_PRIMITIVE_RESTART_FIXED_INDEX: Integer; cdecl;
    {class} function _GetGL_PROGRAM_BINARY_FORMATS: Integer; cdecl;
    {class} function _GetGL_PROGRAM_BINARY_LENGTH: Integer; cdecl;
    {class} function _GetGL_PROGRAM_BINARY_RETRIEVABLE_HINT: Integer; cdecl;
    {class} function _GetGL_QUERY_RESULT: Integer; cdecl;
    {class} function _GetGL_QUERY_RESULT_AVAILABLE: Integer; cdecl;
    {class} function _GetGL_R11F_G11F_B10F: Integer; cdecl;
    {class} function _GetGL_R16F: Integer; cdecl;
    {class} function _GetGL_R16I: Integer; cdecl;
    {class} function _GetGL_R16UI: Integer; cdecl;
    {class} function _GetGL_R32F: Integer; cdecl;
    {class} function _GetGL_R32I: Integer; cdecl;
    {class} function _GetGL_R32UI: Integer; cdecl;
    {class} function _GetGL_R8: Integer; cdecl;
    {class} function _GetGL_R8I: Integer; cdecl;
    {class} function _GetGL_R8UI: Integer; cdecl;
    {class} function _GetGL_R8_SNORM: Integer; cdecl;
    {class} function _GetGL_RASTERIZER_DISCARD: Integer; cdecl;
    {class} function _GetGL_READ_BUFFER: Integer; cdecl;
    {class} function _GetGL_READ_FRAMEBUFFER: Integer; cdecl;
    {class} function _GetGL_READ_FRAMEBUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_RED: Integer; cdecl;
    {class} function _GetGL_RED_INTEGER: Integer; cdecl;
    {class} function _GetGL_RENDERBUFFER_SAMPLES: Integer; cdecl;
    {class} function _GetGL_RG: Integer; cdecl;
    {class} function _GetGL_RG16F: Integer; cdecl;
    {class} function _GetGL_RG16I: Integer; cdecl;
    {class} function _GetGL_RG16UI: Integer; cdecl;
    {class} function _GetGL_RG32F: Integer; cdecl;
    {class} function _GetGL_RG32I: Integer; cdecl;
    {class} function _GetGL_RG32UI: Integer; cdecl;
    {class} function _GetGL_RG8: Integer; cdecl;
    {class} function _GetGL_RG8I: Integer; cdecl;
    {class} function _GetGL_RG8UI: Integer; cdecl;
    {class} function _GetGL_RG8_SNORM: Integer; cdecl;
    {class} function _GetGL_RGB10_A2: Integer; cdecl;
    {class} function _GetGL_RGB10_A2UI: Integer; cdecl;
    {class} function _GetGL_RGB16F: Integer; cdecl;
    {class} function _GetGL_RGB16I: Integer; cdecl;
    {class} function _GetGL_RGB16UI: Integer; cdecl;
    {class} function _GetGL_RGB32F: Integer; cdecl;
    {class} function _GetGL_RGB32I: Integer; cdecl;
    {class} function _GetGL_RGB32UI: Integer; cdecl;
    {class} function _GetGL_RGB8: Integer; cdecl;
    {class} function _GetGL_RGB8I: Integer; cdecl;
    {class} function _GetGL_RGB8UI: Integer; cdecl;
    {class} function _GetGL_RGB8_SNORM: Integer; cdecl;
    {class} function _GetGL_RGB9_E5: Integer; cdecl;
    {class} function _GetGL_RGBA16F: Integer; cdecl;
    {class} function _GetGL_RGBA16I: Integer; cdecl;
    {class} function _GetGL_RGBA16UI: Integer; cdecl;
    {class} function _GetGL_RGBA32F: Integer; cdecl;
    {class} function _GetGL_RGBA32I: Integer; cdecl;
    {class} function _GetGL_RGBA32UI: Integer; cdecl;
    {class} function _GetGL_RGBA8: Integer; cdecl;
    {class} function _GetGL_RGBA8I: Integer; cdecl;
    {class} function _GetGL_RGBA8UI: Integer; cdecl;
    {class} function _GetGL_RGBA8_SNORM: Integer; cdecl;
    {class} function _GetGL_RGBA_INTEGER: Integer; cdecl;
    {class} function _GetGL_RGB_INTEGER: Integer; cdecl;
    {class} function _GetGL_RG_INTEGER: Integer; cdecl;
    {class} function _GetGL_SAMPLER_2D_ARRAY: Integer; cdecl;
    {class} function _GetGL_SAMPLER_2D_ARRAY_SHADOW: Integer; cdecl;
    {class} function _GetGL_SAMPLER_2D_SHADOW: Integer; cdecl;
    {class} function _GetGL_SAMPLER_3D: Integer; cdecl;
    {class} function _GetGL_SAMPLER_BINDING: Integer; cdecl;
    {class} function _GetGL_SAMPLER_CUBE_SHADOW: Integer; cdecl;
    {class} function _GetGL_SEPARATE_ATTRIBS: Integer; cdecl;
    {class} function _GetGL_SIGNALED: Integer; cdecl;
    {class} function _GetGL_SIGNED_NORMALIZED: Integer; cdecl;
    {class} function _GetGL_SRGB: Integer; cdecl;
    {class} function _GetGL_SRGB8: Integer; cdecl;
    {class} function _GetGL_SRGB8_ALPHA8: Integer; cdecl;
    {class} function _GetGL_STATIC_COPY: Integer; cdecl;
    {class} function _GetGL_STATIC_READ: Integer; cdecl;
    {class} function _GetGL_STENCIL: Integer; cdecl;
    {class} function _GetGL_STREAM_COPY: Integer; cdecl;
    {class} function _GetGL_STREAM_READ: Integer; cdecl;
    {class} function _GetGL_SYNC_CONDITION: Integer; cdecl;
    {class} function _GetGL_SYNC_FENCE: Integer; cdecl;
    {class} function _GetGL_SYNC_FLAGS: Integer; cdecl;
    {class} function _GetGL_SYNC_FLUSH_COMMANDS_BIT: Integer; cdecl;
    {class} function _GetGL_SYNC_GPU_COMMANDS_COMPLETE: Integer; cdecl;
    {class} function _GetGL_SYNC_STATUS: Integer; cdecl;
    {class} function _GetGL_TEXTURE_2D_ARRAY: Integer; cdecl;
    {class} function _GetGL_TEXTURE_3D: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BASE_LEVEL: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_2D_ARRAY: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_3D: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COMPARE_FUNC: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COMPARE_MODE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_IMMUTABLE_FORMAT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_IMMUTABLE_LEVELS: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MAX_LEVEL: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MAX_LOD: Integer; cdecl;
    {class} function _GetGL_TEXTURE_MIN_LOD: Integer; cdecl;
    {class} function _GetGL_TEXTURE_SWIZZLE_A: Integer; cdecl;
    {class} function _GetGL_TEXTURE_SWIZZLE_B: Integer; cdecl;
    {class} function _GetGL_TEXTURE_SWIZZLE_G: Integer; cdecl;
    {class} function _GetGL_TEXTURE_SWIZZLE_R: Integer; cdecl;
    {class} function _GetGL_TEXTURE_WRAP_R: Integer; cdecl;
    {class} function _GetGL_TIMEOUT_EXPIRED: Integer; cdecl;
    {class} function _GetGL_TIMEOUT_IGNORED: Int64; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_ACTIVE: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_BINDING: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_BUFFER: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_BUFFER_MODE: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_BUFFER_SIZE: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_BUFFER_START: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_PAUSED: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_VARYINGS: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: Integer; cdecl;
    {class} function _GetGL_UNIFORM_ARRAY_STRIDE: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK_ACTIVE_UNIFORMS: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK_BINDING: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK_DATA_SIZE: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK_INDEX: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK_NAME_LENGTH: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BUFFER: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BUFFER_OFFSET_ALIGNMENT: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BUFFER_SIZE: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BUFFER_START: Integer; cdecl;
    {class} function _GetGL_UNIFORM_IS_ROW_MAJOR: Integer; cdecl;
    {class} function _GetGL_UNIFORM_MATRIX_STRIDE: Integer; cdecl;
    {class} function _GetGL_UNIFORM_NAME_LENGTH: Integer; cdecl;
    {class} function _GetGL_UNIFORM_OFFSET: Integer; cdecl;
    {class} function _GetGL_UNIFORM_SIZE: Integer; cdecl;
    {class} function _GetGL_UNIFORM_TYPE: Integer; cdecl;
    {class} function _GetGL_UNPACK_IMAGE_HEIGHT: Integer; cdecl;
    {class} function _GetGL_UNPACK_ROW_LENGTH: Integer; cdecl;
    {class} function _GetGL_UNPACK_SKIP_IMAGES: Integer; cdecl;
    {class} function _GetGL_UNPACK_SKIP_PIXELS: Integer; cdecl;
    {class} function _GetGL_UNPACK_SKIP_ROWS: Integer; cdecl;
    {class} function _GetGL_UNSIGNALED: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_10F_11F_11F_REV: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_24_8: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_2_10_10_10_REV: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_5_9_9_9_REV: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_SAMPLER_2D: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_SAMPLER_2D_ARRAY: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_SAMPLER_3D: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_SAMPLER_CUBE: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_VEC2: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_VEC3: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_VEC4: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_NORMALIZED: Integer; cdecl;
    {class} function _GetGL_VERTEX_ARRAY_BINDING: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_DIVISOR: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_ARRAY_INTEGER: Integer; cdecl;
    {class} function _GetGL_WAIT_FAILED: Integer; cdecl;
    {class} function init: JGLES30; cdecl;
    {class} procedure glBeginQuery(target: Integer; id: Integer); cdecl;
    {class} procedure glBeginTransformFeedback(primitiveMode: Integer); cdecl;
    {class} procedure glBindBufferBase(target: Integer; index: Integer; buffer: Integer); cdecl;
    {class} procedure glBindBufferRange(target: Integer; index: Integer; buffer: Integer; offset: Integer; size: Integer); cdecl;
    {class} procedure glBindSampler(unit_: Integer; sampler: Integer); cdecl;
    {class} procedure glBindTransformFeedback(target: Integer; id: Integer); cdecl;
    {class} procedure glBindVertexArray(array_: Integer); cdecl;
    {class} procedure glBlitFramebuffer(srcX0: Integer; srcY0: Integer; srcX1: Integer; srcY1: Integer; dstX0: Integer; dstY0: Integer; dstX1: Integer; dstY1: Integer; mask: Integer; filter: Integer); cdecl;
    {class} procedure glClearBufferfi(buffer: Integer; drawbuffer: Integer; depth: Single; stencil: Integer); cdecl;
    {class} procedure glClearBufferfv(buffer: Integer; drawbuffer: Integer; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glClearBufferfv(buffer: Integer; drawbuffer: Integer; value: JFloatBuffer); cdecl; overload;
    {class} procedure glClearBufferiv(buffer: Integer; drawbuffer: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glClearBufferiv(buffer: Integer; drawbuffer: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glClearBufferuiv(buffer: Integer; drawbuffer: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glClearBufferuiv(buffer: Integer; drawbuffer: Integer; value: JIntBuffer); cdecl; overload;
    {class} function glClientWaitSync(sync: Int64; flags: Integer; timeout: Int64): Integer; cdecl;
    {class} procedure glCompressedTexImage3D(target: Integer; level: Integer; internalformat: Integer; width: Integer; height: Integer; depth: Integer; border: Integer; imageSize: Integer; data: JBuffer); cdecl; overload;
    {class} procedure glCompressedTexImage3D(target: Integer; level: Integer; internalformat: Integer; width: Integer; height: Integer; depth: Integer; border: Integer; imageSize: Integer; offset: Integer); cdecl; overload;
    {class} procedure glCompressedTexSubImage3D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; zoffset: Integer; width: Integer; height: Integer; depth: Integer; format: Integer; imageSize: Integer; data: JBuffer); cdecl; overload;
    {class} procedure glCompressedTexSubImage3D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; zoffset: Integer; width: Integer; height: Integer; depth: Integer; format: Integer; imageSize: Integer; offset: Integer); cdecl; overload;
    {class} procedure glCopyBufferSubData(readTarget: Integer; writeTarget: Integer; readOffset: Integer; writeOffset: Integer; size: Integer); cdecl;
    {class} procedure glCopyTexSubImage3D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; zoffset: Integer; x: Integer; y: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glDeleteQueries(n: Integer; ids: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteQueries(n: Integer; ids: JIntBuffer); cdecl; overload;
    {class} procedure glDeleteSamplers(count: Integer; samplers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteSamplers(count: Integer; samplers: JIntBuffer); cdecl; overload;
    {class} procedure glDeleteSync(sync: Int64); cdecl;
    {class} procedure glDeleteTransformFeedbacks(n: Integer; ids: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteTransformFeedbacks(n: Integer; ids: JIntBuffer); cdecl; overload;
    {class} procedure glDeleteVertexArrays(n: Integer; arrays: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteVertexArrays(n: Integer; arrays: JIntBuffer); cdecl; overload;
    {class} procedure glDrawArraysInstanced(mode: Integer; first: Integer; count: Integer; instanceCount: Integer); cdecl;
    {class} procedure glDrawBuffers(n: Integer; bufs: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDrawBuffers(n: Integer; bufs: JIntBuffer); cdecl; overload;
    {class} procedure glDrawElementsInstanced(mode: Integer; count: Integer; type_: Integer; indices: JBuffer; instanceCount: Integer); cdecl; overload;
    {class} procedure glDrawElementsInstanced(mode: Integer; count: Integer; type_: Integer; indicesOffset: Integer; instanceCount: Integer); cdecl; overload;
    {class} procedure glDrawRangeElements(mode: Integer; start: Integer; end_: Integer; count: Integer; type_: Integer; indices: JBuffer); cdecl; overload;
    {class} procedure glDrawRangeElements(mode: Integer; start: Integer; end_: Integer; count: Integer; type_: Integer; offset: Integer); cdecl; overload;
    {class} procedure glEndQuery(target: Integer); cdecl;
    {class} procedure glEndTransformFeedback; cdecl;
    {class} function glFenceSync(condition: Integer; flags: Integer): Int64; cdecl;
    {class} procedure glFlushMappedBufferRange(target: Integer; offset: Integer; length: Integer); cdecl;
    {class} procedure glFramebufferTextureLayer(target: Integer; attachment: Integer; texture: Integer; level: Integer; layer: Integer); cdecl;
    {class} procedure glGenQueries(n: Integer; ids: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenQueries(n: Integer; ids: JIntBuffer); cdecl; overload;
    {class} procedure glGenSamplers(count: Integer; samplers: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenSamplers(count: Integer; samplers: JIntBuffer); cdecl; overload;
    {class} procedure glGenTransformFeedbacks(n: Integer; ids: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenTransformFeedbacks(n: Integer; ids: JIntBuffer); cdecl; overload;
    {class} procedure glGenVertexArrays(n: Integer; arrays: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenVertexArrays(n: Integer; arrays: JIntBuffer); cdecl; overload;
    {class} procedure glGetActiveUniformBlockName(program_: Integer; uniformBlockIndex: Integer; bufSize: Integer; length: TJavaArray<Integer>; lengthOffset: Integer; uniformBlockName: TJavaArray<Byte>; uniformBlockNameOffset: Integer); cdecl; overload;
    {class} procedure glGetActiveUniformBlockName(program_: Integer; uniformBlockIndex: Integer; length: JBuffer; uniformBlockName: JBuffer); cdecl; overload;
    {class} function glGetActiveUniformBlockName(program_: Integer; uniformBlockIndex: Integer): JString; cdecl; overload;
    {class} procedure glGetActiveUniformBlockiv(program_: Integer; uniformBlockIndex: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetActiveUniformBlockiv(program_: Integer; uniformBlockIndex: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetActiveUniformsiv(program_: Integer; uniformCount: Integer; uniformIndices: TJavaArray<Integer>; uniformIndicesOffset: Integer; pname: Integer; params: TJavaArray<Integer>; paramsOffset: Integer); cdecl; overload;
    {class} procedure glGetActiveUniformsiv(program_: Integer; uniformCount: Integer; uniformIndices: JIntBuffer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetBufferParameteri64v(target: Integer; pname: Integer; params: TJavaArray<Int64>; offset: Integer); cdecl; overload;
    {class} procedure glGetBufferParameteri64v(target: Integer; pname: Integer; params: JLongBuffer); cdecl; overload;
    {class} function glGetBufferPointerv(target: Integer; pname: Integer): JBuffer; cdecl;
    {class} function glGetFragDataLocation(program_: Integer; name: JString): Integer; cdecl;
    {class} procedure glGetInteger64i_v(target: Integer; index: Integer; data: TJavaArray<Int64>; offset: Integer); cdecl; overload;
    {class} procedure glGetInteger64i_v(target: Integer; index: Integer; data: JLongBuffer); cdecl; overload;
    {class} procedure glGetInteger64v(pname: Integer; params: TJavaArray<Int64>; offset: Integer); cdecl; overload;
    {class} procedure glGetInteger64v(pname: Integer; params: JLongBuffer); cdecl; overload;
    {class} procedure glGetIntegeri_v(target: Integer; index: Integer; data: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetIntegeri_v(target: Integer; index: Integer; data: JIntBuffer); cdecl; overload;
    {class} procedure glGetInternalformativ(target: Integer; internalformat: Integer; pname: Integer; bufSize: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetInternalformativ(target: Integer; internalformat: Integer; pname: Integer; bufSize: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetProgramBinary(program_: Integer; bufSize: Integer; length: TJavaArray<Integer>; lengthOffset: Integer; binaryFormat: TJavaArray<Integer>; binaryFormatOffset: Integer; binary: JBuffer); cdecl; overload;
    {class} procedure glGetProgramBinary(program_: Integer; bufSize: Integer; length: JIntBuffer; binaryFormat: JIntBuffer; binary: JBuffer); cdecl; overload;
    {class} procedure glGetQueryObjectuiv(id: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetQueryObjectuiv(id: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetQueryiv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetQueryiv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetSamplerParameterfv(sampler: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetSamplerParameterfv(sampler: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetSamplerParameteriv(sampler: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetSamplerParameteriv(sampler: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetStringi(name: Integer; index: Integer): JString; cdecl;
    {class} procedure glGetSynciv(sync: Int64; pname: Integer; bufSize: Integer; length: TJavaArray<Integer>; lengthOffset: Integer; values: TJavaArray<Integer>; valuesOffset: Integer); cdecl; overload;
    {class} procedure glGetSynciv(sync: Int64; pname: Integer; bufSize: Integer; length: JIntBuffer; values: JIntBuffer); cdecl; overload;
    {class} procedure glGetTransformFeedbackVarying(program_: Integer; index: Integer; bufsize: Integer; length: TJavaArray<Integer>; lengthOffset: Integer; size: TJavaArray<Integer>; sizeOffset: Integer; type_: TJavaArray<Integer>; typeOffset: Integer; name: TJavaArray<Byte>; nameOffset: Integer); cdecl; overload;
    {class} procedure glGetTransformFeedbackVarying(program_: Integer; index: Integer; bufsize: Integer; length: JIntBuffer; size: JIntBuffer; type_: JIntBuffer; name: Byte); cdecl; overload;
    {class} function glGetTransformFeedbackVarying(program_: Integer; index: Integer; size: TJavaArray<Integer>; sizeOffset: Integer; type_: TJavaArray<Integer>; typeOffset: Integer): JString; cdecl; overload;
    {class} function glGetTransformFeedbackVarying(program_: Integer; index: Integer; size: JIntBuffer; type_: JIntBuffer): JString; cdecl; overload;
    {class} function glGetUniformBlockIndex(program_: Integer; uniformBlockName: JString): Integer; cdecl;
    {class} procedure glGetUniformIndices(program_: Integer; uniformNames: TJavaObjectArray<JString>; uniformIndices: TJavaArray<Integer>; uniformIndicesOffset: Integer); cdecl; overload;
    {class} procedure glGetUniformIndices(program_: Integer; uniformNames: TJavaObjectArray<JString>; uniformIndices: JIntBuffer); cdecl; overload;
    {class} procedure glGetUniformuiv(program_: Integer; location: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetUniformuiv(program_: Integer; location: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetVertexAttribIiv(index: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetVertexAttribIiv(index: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetVertexAttribIuiv(index: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetVertexAttribIuiv(index: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glInvalidateFramebuffer(target: Integer; numAttachments: Integer; attachments: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glInvalidateFramebuffer(target: Integer; numAttachments: Integer; attachments: JIntBuffer); cdecl; overload;
    {class} procedure glInvalidateSubFramebuffer(target: Integer; numAttachments: Integer; attachments: TJavaArray<Integer>; offset: Integer; x: Integer; y: Integer; width: Integer; height: Integer); cdecl; overload;
    {class} procedure glInvalidateSubFramebuffer(target: Integer; numAttachments: Integer; attachments: JIntBuffer; x: Integer; y: Integer; width: Integer; height: Integer); cdecl; overload;
    {class} function glIsQuery(id: Integer): Boolean; cdecl;
    {class} function glIsSampler(sampler: Integer): Boolean; cdecl;
    {class} function glIsSync(sync: Int64): Boolean; cdecl;
    {class} function glIsTransformFeedback(id: Integer): Boolean; cdecl;
    {class} function glIsVertexArray(array_: Integer): Boolean; cdecl;
    {class} function glMapBufferRange(target: Integer; offset: Integer; length: Integer; access: Integer): JBuffer; cdecl;
    {class} procedure glPauseTransformFeedback; cdecl;
    {class} procedure glProgramBinary(program_: Integer; binaryFormat: Integer; binary: JBuffer; length: Integer); cdecl;
    {class} procedure glProgramParameteri(program_: Integer; pname: Integer; value: Integer); cdecl;
    {class} procedure glReadBuffer(mode: Integer); cdecl;
    {class} procedure glRenderbufferStorageMultisample(target: Integer; samples: Integer; internalformat: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glResumeTransformFeedback; cdecl;
    {class} procedure glSamplerParameterf(sampler: Integer; pname: Integer; param: Single); cdecl;
    {class} procedure glSamplerParameterfv(sampler: Integer; pname: Integer; param: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glSamplerParameterfv(sampler: Integer; pname: Integer; param: JFloatBuffer); cdecl; overload;
    {class} procedure glSamplerParameteri(sampler: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glSamplerParameteriv(sampler: Integer; pname: Integer; param: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glSamplerParameteriv(sampler: Integer; pname: Integer; param: JIntBuffer); cdecl; overload;
    {class} procedure glTexImage3D(target: Integer; level: Integer; internalformat: Integer; width: Integer; height: Integer; depth: Integer; border: Integer; format: Integer; type_: Integer; pixels: JBuffer); cdecl; overload;
    {class} procedure glTexImage3D(target: Integer; level: Integer; internalformat: Integer; width: Integer; height: Integer; depth: Integer; border: Integer; format: Integer; type_: Integer; offset: Integer); cdecl; overload;
    {class} procedure glTexStorage2D(target: Integer; levels: Integer; internalformat: Integer; width: Integer; height: Integer); cdecl;
    {class} procedure glTexStorage3D(target: Integer; levels: Integer; internalformat: Integer; width: Integer; height: Integer; depth: Integer); cdecl;
    {class} procedure glTexSubImage3D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; zoffset: Integer; width: Integer; height: Integer; depth: Integer; format: Integer; type_: Integer; pixels: JBuffer); cdecl; overload;
    {class} procedure glTexSubImage3D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; zoffset: Integer; width: Integer; height: Integer; depth: Integer; format: Integer; type_: Integer; offset: Integer); cdecl; overload;
    {class} procedure glTransformFeedbackVaryings(program_: Integer; varyings: TJavaObjectArray<JString>; bufferMode: Integer); cdecl;
    {class} procedure glUniform1ui(location: Integer; v0: Integer); cdecl;
    {class} procedure glUniform1uiv(location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glUniform1uiv(location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glUniform2ui(location: Integer; v0: Integer; v1: Integer); cdecl;
    {class} procedure glUniform2uiv(location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glUniform2uiv(location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glUniform3ui(location: Integer; v0: Integer; v1: Integer; v2: Integer); cdecl;
    {class} procedure glUniform3uiv(location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glUniform3uiv(location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glUniform4ui(location: Integer; v0: Integer; v1: Integer; v2: Integer; v3: Integer); cdecl;
    {class} procedure glUniform4uiv(location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glUniform4uiv(location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glUniformBlockBinding(program_: Integer; uniformBlockIndex: Integer; uniformBlockBinding: Integer); cdecl;
    {class} procedure glUniformMatrix2x3fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix2x3fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glUniformMatrix2x4fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix2x4fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glUniformMatrix3x2fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix3x2fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glUniformMatrix3x4fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix3x4fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glUniformMatrix4x2fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix4x2fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glUniformMatrix4x3fv(location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glUniformMatrix4x3fv(location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} function glUnmapBuffer(target: Integer): Boolean; cdecl;
    {class} procedure glVertexAttribDivisor(index: Integer; divisor: Integer); cdecl;
    {class} procedure glVertexAttribI4i(index: Integer; x: Integer; y: Integer; z: Integer; w: Integer); cdecl;
    {class} procedure glVertexAttribI4iv(index: Integer; v: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glVertexAttribI4iv(index: Integer; v: JIntBuffer); cdecl; overload;
    {class} procedure glVertexAttribI4ui(index: Integer; x: Integer; y: Integer; z: Integer; w: Integer); cdecl;
    {class} procedure glVertexAttribI4uiv(index: Integer; v: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glVertexAttribI4uiv(index: Integer; v: JIntBuffer); cdecl; overload;
    {class} procedure glVertexAttribIPointer(index: Integer; size: Integer; type_: Integer; stride: Integer; pointer: JBuffer); cdecl; overload;
    {class} procedure glVertexAttribIPointer(index: Integer; size: Integer; type_: Integer; stride: Integer; offset: Integer); cdecl; overload;
    {class} procedure glWaitSync(sync: Int64; flags: Integer; timeout: Int64); cdecl;
    {class} property GL_ACTIVE_UNIFORM_BLOCKS: Integer read _GetGL_ACTIVE_UNIFORM_BLOCKS;
    {class} property GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: Integer read _GetGL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH;
    {class} property GL_ALREADY_SIGNALED: Integer read _GetGL_ALREADY_SIGNALED;
    {class} property GL_ANY_SAMPLES_PASSED: Integer read _GetGL_ANY_SAMPLES_PASSED;
    {class} property GL_ANY_SAMPLES_PASSED_CONSERVATIVE: Integer read _GetGL_ANY_SAMPLES_PASSED_CONSERVATIVE;
    {class} property GL_BLUE: Integer read _GetGL_BLUE;
    {class} property GL_BUFFER_ACCESS_FLAGS: Integer read _GetGL_BUFFER_ACCESS_FLAGS;
    {class} property GL_BUFFER_MAPPED: Integer read _GetGL_BUFFER_MAPPED;
    {class} property GL_BUFFER_MAP_LENGTH: Integer read _GetGL_BUFFER_MAP_LENGTH;
    {class} property GL_BUFFER_MAP_OFFSET: Integer read _GetGL_BUFFER_MAP_OFFSET;
    {class} property GL_BUFFER_MAP_POINTER: Integer read _GetGL_BUFFER_MAP_POINTER;
    {class} property GL_COLOR: Integer read _GetGL_COLOR;
    {class} property GL_COLOR_ATTACHMENT1: Integer read _GetGL_COLOR_ATTACHMENT1;
    {class} property GL_COLOR_ATTACHMENT10: Integer read _GetGL_COLOR_ATTACHMENT10;
    {class} property GL_COLOR_ATTACHMENT11: Integer read _GetGL_COLOR_ATTACHMENT11;
    {class} property GL_COLOR_ATTACHMENT12: Integer read _GetGL_COLOR_ATTACHMENT12;
    {class} property GL_COLOR_ATTACHMENT13: Integer read _GetGL_COLOR_ATTACHMENT13;
    {class} property GL_COLOR_ATTACHMENT14: Integer read _GetGL_COLOR_ATTACHMENT14;
    {class} property GL_COLOR_ATTACHMENT15: Integer read _GetGL_COLOR_ATTACHMENT15;
    {class} property GL_COLOR_ATTACHMENT2: Integer read _GetGL_COLOR_ATTACHMENT2;
    {class} property GL_COLOR_ATTACHMENT3: Integer read _GetGL_COLOR_ATTACHMENT3;
    {class} property GL_COLOR_ATTACHMENT4: Integer read _GetGL_COLOR_ATTACHMENT4;
    {class} property GL_COLOR_ATTACHMENT5: Integer read _GetGL_COLOR_ATTACHMENT5;
    {class} property GL_COLOR_ATTACHMENT6: Integer read _GetGL_COLOR_ATTACHMENT6;
    {class} property GL_COLOR_ATTACHMENT7: Integer read _GetGL_COLOR_ATTACHMENT7;
    {class} property GL_COLOR_ATTACHMENT8: Integer read _GetGL_COLOR_ATTACHMENT8;
    {class} property GL_COLOR_ATTACHMENT9: Integer read _GetGL_COLOR_ATTACHMENT9;
    {class} property GL_COMPARE_REF_TO_TEXTURE: Integer read _GetGL_COMPARE_REF_TO_TEXTURE;
    {class} property GL_COMPRESSED_R11_EAC: Integer read _GetGL_COMPRESSED_R11_EAC;
    {class} property GL_COMPRESSED_RG11_EAC: Integer read _GetGL_COMPRESSED_RG11_EAC;
    {class} property GL_COMPRESSED_RGB8_ETC2: Integer read _GetGL_COMPRESSED_RGB8_ETC2;
    {class} property GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: Integer read _GetGL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;
    {class} property GL_COMPRESSED_RGBA8_ETC2_EAC: Integer read _GetGL_COMPRESSED_RGBA8_ETC2_EAC;
    {class} property GL_COMPRESSED_SIGNED_R11_EAC: Integer read _GetGL_COMPRESSED_SIGNED_R11_EAC;
    {class} property GL_COMPRESSED_SIGNED_RG11_EAC: Integer read _GetGL_COMPRESSED_SIGNED_RG11_EAC;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;
    {class} property GL_COMPRESSED_SRGB8_ETC2: Integer read _GetGL_COMPRESSED_SRGB8_ETC2;
    {class} property GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: Integer read _GetGL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;
    {class} property GL_CONDITION_SATISFIED: Integer read _GetGL_CONDITION_SATISFIED;
    {class} property GL_COPY_READ_BUFFER: Integer read _GetGL_COPY_READ_BUFFER;
    {class} property GL_COPY_READ_BUFFER_BINDING: Integer read _GetGL_COPY_READ_BUFFER_BINDING;
    {class} property GL_COPY_WRITE_BUFFER: Integer read _GetGL_COPY_WRITE_BUFFER;
    {class} property GL_COPY_WRITE_BUFFER_BINDING: Integer read _GetGL_COPY_WRITE_BUFFER_BINDING;
    {class} property GL_CURRENT_QUERY: Integer read _GetGL_CURRENT_QUERY;
    {class} property GL_DEPTH: Integer read _GetGL_DEPTH;
    {class} property GL_DEPTH24_STENCIL8: Integer read _GetGL_DEPTH24_STENCIL8;
    {class} property GL_DEPTH32F_STENCIL8: Integer read _GetGL_DEPTH32F_STENCIL8;
    {class} property GL_DEPTH_COMPONENT24: Integer read _GetGL_DEPTH_COMPONENT24;
    {class} property GL_DEPTH_COMPONENT32F: Integer read _GetGL_DEPTH_COMPONENT32F;
    {class} property GL_DEPTH_STENCIL: Integer read _GetGL_DEPTH_STENCIL;
    {class} property GL_DEPTH_STENCIL_ATTACHMENT: Integer read _GetGL_DEPTH_STENCIL_ATTACHMENT;
    {class} property GL_DRAW_BUFFER0: Integer read _GetGL_DRAW_BUFFER0;
    {class} property GL_DRAW_BUFFER1: Integer read _GetGL_DRAW_BUFFER1;
    {class} property GL_DRAW_BUFFER10: Integer read _GetGL_DRAW_BUFFER10;
    {class} property GL_DRAW_BUFFER11: Integer read _GetGL_DRAW_BUFFER11;
    {class} property GL_DRAW_BUFFER12: Integer read _GetGL_DRAW_BUFFER12;
    {class} property GL_DRAW_BUFFER13: Integer read _GetGL_DRAW_BUFFER13;
    {class} property GL_DRAW_BUFFER14: Integer read _GetGL_DRAW_BUFFER14;
    {class} property GL_DRAW_BUFFER15: Integer read _GetGL_DRAW_BUFFER15;
    {class} property GL_DRAW_BUFFER2: Integer read _GetGL_DRAW_BUFFER2;
    {class} property GL_DRAW_BUFFER3: Integer read _GetGL_DRAW_BUFFER3;
    {class} property GL_DRAW_BUFFER4: Integer read _GetGL_DRAW_BUFFER4;
    {class} property GL_DRAW_BUFFER5: Integer read _GetGL_DRAW_BUFFER5;
    {class} property GL_DRAW_BUFFER6: Integer read _GetGL_DRAW_BUFFER6;
    {class} property GL_DRAW_BUFFER7: Integer read _GetGL_DRAW_BUFFER7;
    {class} property GL_DRAW_BUFFER8: Integer read _GetGL_DRAW_BUFFER8;
    {class} property GL_DRAW_BUFFER9: Integer read _GetGL_DRAW_BUFFER9;
    {class} property GL_DRAW_FRAMEBUFFER: Integer read _GetGL_DRAW_FRAMEBUFFER;
    {class} property GL_DRAW_FRAMEBUFFER_BINDING: Integer read _GetGL_DRAW_FRAMEBUFFER_BINDING;
    {class} property GL_DYNAMIC_COPY: Integer read _GetGL_DYNAMIC_COPY;
    {class} property GL_DYNAMIC_READ: Integer read _GetGL_DYNAMIC_READ;
    {class} property GL_FLOAT_32_UNSIGNED_INT_24_8_REV: Integer read _GetGL_FLOAT_32_UNSIGNED_INT_24_8_REV;
    {class} property GL_FLOAT_MAT2x3: Integer read _GetGL_FLOAT_MAT2x3;
    {class} property GL_FLOAT_MAT2x4: Integer read _GetGL_FLOAT_MAT2x4;
    {class} property GL_FLOAT_MAT3x2: Integer read _GetGL_FLOAT_MAT3x2;
    {class} property GL_FLOAT_MAT3x4: Integer read _GetGL_FLOAT_MAT3x4;
    {class} property GL_FLOAT_MAT4x2: Integer read _GetGL_FLOAT_MAT4x2;
    {class} property GL_FLOAT_MAT4x3: Integer read _GetGL_FLOAT_MAT4x3;
    {class} property GL_FRAGMENT_SHADER_DERIVATIVE_HINT: Integer read _GetGL_FRAGMENT_SHADER_DERIVATIVE_HINT;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_RED_SIZE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER;
    {class} property GL_FRAMEBUFFER_DEFAULT: Integer read _GetGL_FRAMEBUFFER_DEFAULT;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE;
    {class} property GL_FRAMEBUFFER_UNDEFINED: Integer read _GetGL_FRAMEBUFFER_UNDEFINED;
    {class} property GL_GREEN: Integer read _GetGL_GREEN;
    {class} property GL_HALF_FLOAT: Integer read _GetGL_HALF_FLOAT;
    {class} property GL_INTERLEAVED_ATTRIBS: Integer read _GetGL_INTERLEAVED_ATTRIBS;
    {class} property GL_INT_2_10_10_10_REV: Integer read _GetGL_INT_2_10_10_10_REV;
    {class} property GL_INT_SAMPLER_2D: Integer read _GetGL_INT_SAMPLER_2D;
    {class} property GL_INT_SAMPLER_2D_ARRAY: Integer read _GetGL_INT_SAMPLER_2D_ARRAY;
    {class} property GL_INT_SAMPLER_3D: Integer read _GetGL_INT_SAMPLER_3D;
    {class} property GL_INT_SAMPLER_CUBE: Integer read _GetGL_INT_SAMPLER_CUBE;
    {class} property GL_INVALID_INDEX: Integer read _GetGL_INVALID_INDEX;
    {class} property GL_MAJOR_VERSION: Integer read _GetGL_MAJOR_VERSION;
    {class} property GL_MAP_FLUSH_EXPLICIT_BIT: Integer read _GetGL_MAP_FLUSH_EXPLICIT_BIT;
    {class} property GL_MAP_INVALIDATE_BUFFER_BIT: Integer read _GetGL_MAP_INVALIDATE_BUFFER_BIT;
    {class} property GL_MAP_INVALIDATE_RANGE_BIT: Integer read _GetGL_MAP_INVALIDATE_RANGE_BIT;
    {class} property GL_MAP_READ_BIT: Integer read _GetGL_MAP_READ_BIT;
    {class} property GL_MAP_UNSYNCHRONIZED_BIT: Integer read _GetGL_MAP_UNSYNCHRONIZED_BIT;
    {class} property GL_MAP_WRITE_BIT: Integer read _GetGL_MAP_WRITE_BIT;
    {class} property GL_MAX: Integer read _GetGL_MAX;
    {class} property GL_MAX_3D_TEXTURE_SIZE: Integer read _GetGL_MAX_3D_TEXTURE_SIZE;
    {class} property GL_MAX_ARRAY_TEXTURE_LAYERS: Integer read _GetGL_MAX_ARRAY_TEXTURE_LAYERS;
    {class} property GL_MAX_COLOR_ATTACHMENTS: Integer read _GetGL_MAX_COLOR_ATTACHMENTS;
    {class} property GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: Integer read _GetGL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS;
    {class} property GL_MAX_COMBINED_UNIFORM_BLOCKS: Integer read _GetGL_MAX_COMBINED_UNIFORM_BLOCKS;
    {class} property GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: Integer read _GetGL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS;
    {class} property GL_MAX_DRAW_BUFFERS: Integer read _GetGL_MAX_DRAW_BUFFERS;
    {class} property GL_MAX_ELEMENTS_INDICES: Integer read _GetGL_MAX_ELEMENTS_INDICES;
    {class} property GL_MAX_ELEMENTS_VERTICES: Integer read _GetGL_MAX_ELEMENTS_VERTICES;
    {class} property GL_MAX_ELEMENT_INDEX: Integer read _GetGL_MAX_ELEMENT_INDEX;
    {class} property GL_MAX_FRAGMENT_INPUT_COMPONENTS: Integer read _GetGL_MAX_FRAGMENT_INPUT_COMPONENTS;
    {class} property GL_MAX_FRAGMENT_UNIFORM_BLOCKS: Integer read _GetGL_MAX_FRAGMENT_UNIFORM_BLOCKS;
    {class} property GL_MAX_FRAGMENT_UNIFORM_COMPONENTS: Integer read _GetGL_MAX_FRAGMENT_UNIFORM_COMPONENTS;
    {class} property GL_MAX_PROGRAM_TEXEL_OFFSET: Integer read _GetGL_MAX_PROGRAM_TEXEL_OFFSET;
    {class} property GL_MAX_SAMPLES: Integer read _GetGL_MAX_SAMPLES;
    {class} property GL_MAX_SERVER_WAIT_TIMEOUT: Integer read _GetGL_MAX_SERVER_WAIT_TIMEOUT;
    {class} property GL_MAX_TEXTURE_LOD_BIAS: Integer read _GetGL_MAX_TEXTURE_LOD_BIAS;
    {class} property GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: Integer read _GetGL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS;
    {class} property GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: Integer read _GetGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS;
    {class} property GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: Integer read _GetGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS;
    {class} property GL_MAX_UNIFORM_BLOCK_SIZE: Integer read _GetGL_MAX_UNIFORM_BLOCK_SIZE;
    {class} property GL_MAX_UNIFORM_BUFFER_BINDINGS: Integer read _GetGL_MAX_UNIFORM_BUFFER_BINDINGS;
    {class} property GL_MAX_VARYING_COMPONENTS: Integer read _GetGL_MAX_VARYING_COMPONENTS;
    {class} property GL_MAX_VERTEX_OUTPUT_COMPONENTS: Integer read _GetGL_MAX_VERTEX_OUTPUT_COMPONENTS;
    {class} property GL_MAX_VERTEX_UNIFORM_BLOCKS: Integer read _GetGL_MAX_VERTEX_UNIFORM_BLOCKS;
    {class} property GL_MAX_VERTEX_UNIFORM_COMPONENTS: Integer read _GetGL_MAX_VERTEX_UNIFORM_COMPONENTS;
    {class} property GL_MIN: Integer read _GetGL_MIN;
    {class} property GL_MINOR_VERSION: Integer read _GetGL_MINOR_VERSION;
    {class} property GL_MIN_PROGRAM_TEXEL_OFFSET: Integer read _GetGL_MIN_PROGRAM_TEXEL_OFFSET;
    {class} property GL_NUM_EXTENSIONS: Integer read _GetGL_NUM_EXTENSIONS;
    {class} property GL_NUM_PROGRAM_BINARY_FORMATS: Integer read _GetGL_NUM_PROGRAM_BINARY_FORMATS;
    {class} property GL_NUM_SAMPLE_COUNTS: Integer read _GetGL_NUM_SAMPLE_COUNTS;
    {class} property GL_OBJECT_TYPE: Integer read _GetGL_OBJECT_TYPE;
    {class} property GL_PACK_ROW_LENGTH: Integer read _GetGL_PACK_ROW_LENGTH;
    {class} property GL_PACK_SKIP_PIXELS: Integer read _GetGL_PACK_SKIP_PIXELS;
    {class} property GL_PACK_SKIP_ROWS: Integer read _GetGL_PACK_SKIP_ROWS;
    {class} property GL_PIXEL_PACK_BUFFER: Integer read _GetGL_PIXEL_PACK_BUFFER;
    {class} property GL_PIXEL_PACK_BUFFER_BINDING: Integer read _GetGL_PIXEL_PACK_BUFFER_BINDING;
    {class} property GL_PIXEL_UNPACK_BUFFER: Integer read _GetGL_PIXEL_UNPACK_BUFFER;
    {class} property GL_PIXEL_UNPACK_BUFFER_BINDING: Integer read _GetGL_PIXEL_UNPACK_BUFFER_BINDING;
    {class} property GL_PRIMITIVE_RESTART_FIXED_INDEX: Integer read _GetGL_PRIMITIVE_RESTART_FIXED_INDEX;
    {class} property GL_PROGRAM_BINARY_FORMATS: Integer read _GetGL_PROGRAM_BINARY_FORMATS;
    {class} property GL_PROGRAM_BINARY_LENGTH: Integer read _GetGL_PROGRAM_BINARY_LENGTH;
    {class} property GL_PROGRAM_BINARY_RETRIEVABLE_HINT: Integer read _GetGL_PROGRAM_BINARY_RETRIEVABLE_HINT;
    {class} property GL_QUERY_RESULT: Integer read _GetGL_QUERY_RESULT;
    {class} property GL_QUERY_RESULT_AVAILABLE: Integer read _GetGL_QUERY_RESULT_AVAILABLE;
    {class} property GL_R11F_G11F_B10F: Integer read _GetGL_R11F_G11F_B10F;
    {class} property GL_R16F: Integer read _GetGL_R16F;
    {class} property GL_R16I: Integer read _GetGL_R16I;
    {class} property GL_R16UI: Integer read _GetGL_R16UI;
    {class} property GL_R32F: Integer read _GetGL_R32F;
    {class} property GL_R32I: Integer read _GetGL_R32I;
    {class} property GL_R32UI: Integer read _GetGL_R32UI;
    {class} property GL_R8: Integer read _GetGL_R8;
    {class} property GL_R8I: Integer read _GetGL_R8I;
    {class} property GL_R8UI: Integer read _GetGL_R8UI;
    {class} property GL_R8_SNORM: Integer read _GetGL_R8_SNORM;
    {class} property GL_RASTERIZER_DISCARD: Integer read _GetGL_RASTERIZER_DISCARD;
    {class} property GL_READ_BUFFER: Integer read _GetGL_READ_BUFFER;
    {class} property GL_READ_FRAMEBUFFER: Integer read _GetGL_READ_FRAMEBUFFER;
    {class} property GL_READ_FRAMEBUFFER_BINDING: Integer read _GetGL_READ_FRAMEBUFFER_BINDING;
    {class} property GL_RED: Integer read _GetGL_RED;
    {class} property GL_RED_INTEGER: Integer read _GetGL_RED_INTEGER;
    {class} property GL_RENDERBUFFER_SAMPLES: Integer read _GetGL_RENDERBUFFER_SAMPLES;
    {class} property GL_RG: Integer read _GetGL_RG;
    {class} property GL_RG16F: Integer read _GetGL_RG16F;
    {class} property GL_RG16I: Integer read _GetGL_RG16I;
    {class} property GL_RG16UI: Integer read _GetGL_RG16UI;
    {class} property GL_RG32F: Integer read _GetGL_RG32F;
    {class} property GL_RG32I: Integer read _GetGL_RG32I;
    {class} property GL_RG32UI: Integer read _GetGL_RG32UI;
    {class} property GL_RG8: Integer read _GetGL_RG8;
    {class} property GL_RG8I: Integer read _GetGL_RG8I;
    {class} property GL_RG8UI: Integer read _GetGL_RG8UI;
    {class} property GL_RG8_SNORM: Integer read _GetGL_RG8_SNORM;
    {class} property GL_RGB10_A2: Integer read _GetGL_RGB10_A2;
    {class} property GL_RGB10_A2UI: Integer read _GetGL_RGB10_A2UI;
    {class} property GL_RGB16F: Integer read _GetGL_RGB16F;
    {class} property GL_RGB16I: Integer read _GetGL_RGB16I;
    {class} property GL_RGB16UI: Integer read _GetGL_RGB16UI;
    {class} property GL_RGB32F: Integer read _GetGL_RGB32F;
    {class} property GL_RGB32I: Integer read _GetGL_RGB32I;
    {class} property GL_RGB32UI: Integer read _GetGL_RGB32UI;
    {class} property GL_RGB8: Integer read _GetGL_RGB8;
    {class} property GL_RGB8I: Integer read _GetGL_RGB8I;
    {class} property GL_RGB8UI: Integer read _GetGL_RGB8UI;
    {class} property GL_RGB8_SNORM: Integer read _GetGL_RGB8_SNORM;
    {class} property GL_RGB9_E5: Integer read _GetGL_RGB9_E5;
    {class} property GL_RGBA16F: Integer read _GetGL_RGBA16F;
    {class} property GL_RGBA16I: Integer read _GetGL_RGBA16I;
    {class} property GL_RGBA16UI: Integer read _GetGL_RGBA16UI;
    {class} property GL_RGBA32F: Integer read _GetGL_RGBA32F;
    {class} property GL_RGBA32I: Integer read _GetGL_RGBA32I;
    {class} property GL_RGBA32UI: Integer read _GetGL_RGBA32UI;
    {class} property GL_RGBA8: Integer read _GetGL_RGBA8;
    {class} property GL_RGBA8I: Integer read _GetGL_RGBA8I;
    {class} property GL_RGBA8UI: Integer read _GetGL_RGBA8UI;
    {class} property GL_RGBA8_SNORM: Integer read _GetGL_RGBA8_SNORM;
    {class} property GL_RGBA_INTEGER: Integer read _GetGL_RGBA_INTEGER;
    {class} property GL_RGB_INTEGER: Integer read _GetGL_RGB_INTEGER;
    {class} property GL_RG_INTEGER: Integer read _GetGL_RG_INTEGER;
    {class} property GL_SAMPLER_2D_ARRAY: Integer read _GetGL_SAMPLER_2D_ARRAY;
    {class} property GL_SAMPLER_2D_ARRAY_SHADOW: Integer read _GetGL_SAMPLER_2D_ARRAY_SHADOW;
    {class} property GL_SAMPLER_2D_SHADOW: Integer read _GetGL_SAMPLER_2D_SHADOW;
    {class} property GL_SAMPLER_3D: Integer read _GetGL_SAMPLER_3D;
    {class} property GL_SAMPLER_BINDING: Integer read _GetGL_SAMPLER_BINDING;
    {class} property GL_SAMPLER_CUBE_SHADOW: Integer read _GetGL_SAMPLER_CUBE_SHADOW;
    {class} property GL_SEPARATE_ATTRIBS: Integer read _GetGL_SEPARATE_ATTRIBS;
    {class} property GL_SIGNALED: Integer read _GetGL_SIGNALED;
    {class} property GL_SIGNED_NORMALIZED: Integer read _GetGL_SIGNED_NORMALIZED;
    {class} property GL_SRGB: Integer read _GetGL_SRGB;
    {class} property GL_SRGB8: Integer read _GetGL_SRGB8;
    {class} property GL_SRGB8_ALPHA8: Integer read _GetGL_SRGB8_ALPHA8;
    {class} property GL_STATIC_COPY: Integer read _GetGL_STATIC_COPY;
    {class} property GL_STATIC_READ: Integer read _GetGL_STATIC_READ;
    {class} property GL_STENCIL: Integer read _GetGL_STENCIL;
    {class} property GL_STREAM_COPY: Integer read _GetGL_STREAM_COPY;
    {class} property GL_STREAM_READ: Integer read _GetGL_STREAM_READ;
    {class} property GL_SYNC_CONDITION: Integer read _GetGL_SYNC_CONDITION;
    {class} property GL_SYNC_FENCE: Integer read _GetGL_SYNC_FENCE;
    {class} property GL_SYNC_FLAGS: Integer read _GetGL_SYNC_FLAGS;
    {class} property GL_SYNC_FLUSH_COMMANDS_BIT: Integer read _GetGL_SYNC_FLUSH_COMMANDS_BIT;
    {class} property GL_SYNC_GPU_COMMANDS_COMPLETE: Integer read _GetGL_SYNC_GPU_COMMANDS_COMPLETE;
    {class} property GL_SYNC_STATUS: Integer read _GetGL_SYNC_STATUS;
    {class} property GL_TEXTURE_2D_ARRAY: Integer read _GetGL_TEXTURE_2D_ARRAY;
    {class} property GL_TEXTURE_3D: Integer read _GetGL_TEXTURE_3D;
    {class} property GL_TEXTURE_BASE_LEVEL: Integer read _GetGL_TEXTURE_BASE_LEVEL;
    {class} property GL_TEXTURE_BINDING_2D_ARRAY: Integer read _GetGL_TEXTURE_BINDING_2D_ARRAY;
    {class} property GL_TEXTURE_BINDING_3D: Integer read _GetGL_TEXTURE_BINDING_3D;
    {class} property GL_TEXTURE_COMPARE_FUNC: Integer read _GetGL_TEXTURE_COMPARE_FUNC;
    {class} property GL_TEXTURE_COMPARE_MODE: Integer read _GetGL_TEXTURE_COMPARE_MODE;
    {class} property GL_TEXTURE_IMMUTABLE_FORMAT: Integer read _GetGL_TEXTURE_IMMUTABLE_FORMAT;
    {class} property GL_TEXTURE_IMMUTABLE_LEVELS: Integer read _GetGL_TEXTURE_IMMUTABLE_LEVELS;
    {class} property GL_TEXTURE_MAX_LEVEL: Integer read _GetGL_TEXTURE_MAX_LEVEL;
    {class} property GL_TEXTURE_MAX_LOD: Integer read _GetGL_TEXTURE_MAX_LOD;
    {class} property GL_TEXTURE_MIN_LOD: Integer read _GetGL_TEXTURE_MIN_LOD;
    {class} property GL_TEXTURE_SWIZZLE_A: Integer read _GetGL_TEXTURE_SWIZZLE_A;
    {class} property GL_TEXTURE_SWIZZLE_B: Integer read _GetGL_TEXTURE_SWIZZLE_B;
    {class} property GL_TEXTURE_SWIZZLE_G: Integer read _GetGL_TEXTURE_SWIZZLE_G;
    {class} property GL_TEXTURE_SWIZZLE_R: Integer read _GetGL_TEXTURE_SWIZZLE_R;
    {class} property GL_TEXTURE_WRAP_R: Integer read _GetGL_TEXTURE_WRAP_R;
    {class} property GL_TIMEOUT_EXPIRED: Integer read _GetGL_TIMEOUT_EXPIRED;
    {class} property GL_TIMEOUT_IGNORED: Int64 read _GetGL_TIMEOUT_IGNORED;
    {class} property GL_TRANSFORM_FEEDBACK: Integer read _GetGL_TRANSFORM_FEEDBACK;
    {class} property GL_TRANSFORM_FEEDBACK_ACTIVE: Integer read _GetGL_TRANSFORM_FEEDBACK_ACTIVE;
    {class} property GL_TRANSFORM_FEEDBACK_BINDING: Integer read _GetGL_TRANSFORM_FEEDBACK_BINDING;
    {class} property GL_TRANSFORM_FEEDBACK_BUFFER: Integer read _GetGL_TRANSFORM_FEEDBACK_BUFFER;
    {class} property GL_TRANSFORM_FEEDBACK_BUFFER_BINDING: Integer read _GetGL_TRANSFORM_FEEDBACK_BUFFER_BINDING;
    {class} property GL_TRANSFORM_FEEDBACK_BUFFER_MODE: Integer read _GetGL_TRANSFORM_FEEDBACK_BUFFER_MODE;
    {class} property GL_TRANSFORM_FEEDBACK_BUFFER_SIZE: Integer read _GetGL_TRANSFORM_FEEDBACK_BUFFER_SIZE;
    {class} property GL_TRANSFORM_FEEDBACK_BUFFER_START: Integer read _GetGL_TRANSFORM_FEEDBACK_BUFFER_START;
    {class} property GL_TRANSFORM_FEEDBACK_PAUSED: Integer read _GetGL_TRANSFORM_FEEDBACK_PAUSED;
    {class} property GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: Integer read _GetGL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN;
    {class} property GL_TRANSFORM_FEEDBACK_VARYINGS: Integer read _GetGL_TRANSFORM_FEEDBACK_VARYINGS;
    {class} property GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: Integer read _GetGL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH;
    {class} property GL_UNIFORM_ARRAY_STRIDE: Integer read _GetGL_UNIFORM_ARRAY_STRIDE;
    {class} property GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS: Integer read _GetGL_UNIFORM_BLOCK_ACTIVE_UNIFORMS;
    {class} property GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: Integer read _GetGL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES;
    {class} property GL_UNIFORM_BLOCK_BINDING: Integer read _GetGL_UNIFORM_BLOCK_BINDING;
    {class} property GL_UNIFORM_BLOCK_DATA_SIZE: Integer read _GetGL_UNIFORM_BLOCK_DATA_SIZE;
    {class} property GL_UNIFORM_BLOCK_INDEX: Integer read _GetGL_UNIFORM_BLOCK_INDEX;
    {class} property GL_UNIFORM_BLOCK_NAME_LENGTH: Integer read _GetGL_UNIFORM_BLOCK_NAME_LENGTH;
    {class} property GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: Integer read _GetGL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER;
    {class} property GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: Integer read _GetGL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER;
    {class} property GL_UNIFORM_BUFFER: Integer read _GetGL_UNIFORM_BUFFER;
    {class} property GL_UNIFORM_BUFFER_BINDING: Integer read _GetGL_UNIFORM_BUFFER_BINDING;
    {class} property GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT: Integer read _GetGL_UNIFORM_BUFFER_OFFSET_ALIGNMENT;
    {class} property GL_UNIFORM_BUFFER_SIZE: Integer read _GetGL_UNIFORM_BUFFER_SIZE;
    {class} property GL_UNIFORM_BUFFER_START: Integer read _GetGL_UNIFORM_BUFFER_START;
    {class} property GL_UNIFORM_IS_ROW_MAJOR: Integer read _GetGL_UNIFORM_IS_ROW_MAJOR;
    {class} property GL_UNIFORM_MATRIX_STRIDE: Integer read _GetGL_UNIFORM_MATRIX_STRIDE;
    {class} property GL_UNIFORM_NAME_LENGTH: Integer read _GetGL_UNIFORM_NAME_LENGTH;
    {class} property GL_UNIFORM_OFFSET: Integer read _GetGL_UNIFORM_OFFSET;
    {class} property GL_UNIFORM_SIZE: Integer read _GetGL_UNIFORM_SIZE;
    {class} property GL_UNIFORM_TYPE: Integer read _GetGL_UNIFORM_TYPE;
    {class} property GL_UNPACK_IMAGE_HEIGHT: Integer read _GetGL_UNPACK_IMAGE_HEIGHT;
    {class} property GL_UNPACK_ROW_LENGTH: Integer read _GetGL_UNPACK_ROW_LENGTH;
    {class} property GL_UNPACK_SKIP_IMAGES: Integer read _GetGL_UNPACK_SKIP_IMAGES;
    {class} property GL_UNPACK_SKIP_PIXELS: Integer read _GetGL_UNPACK_SKIP_PIXELS;
    {class} property GL_UNPACK_SKIP_ROWS: Integer read _GetGL_UNPACK_SKIP_ROWS;
    {class} property GL_UNSIGNALED: Integer read _GetGL_UNSIGNALED;
    {class} property GL_UNSIGNED_INT_10F_11F_11F_REV: Integer read _GetGL_UNSIGNED_INT_10F_11F_11F_REV;
    {class} property GL_UNSIGNED_INT_24_8: Integer read _GetGL_UNSIGNED_INT_24_8;
    {class} property GL_UNSIGNED_INT_2_10_10_10_REV: Integer read _GetGL_UNSIGNED_INT_2_10_10_10_REV;
    {class} property GL_UNSIGNED_INT_5_9_9_9_REV: Integer read _GetGL_UNSIGNED_INT_5_9_9_9_REV;
    {class} property GL_UNSIGNED_INT_SAMPLER_2D: Integer read _GetGL_UNSIGNED_INT_SAMPLER_2D;
    {class} property GL_UNSIGNED_INT_SAMPLER_2D_ARRAY: Integer read _GetGL_UNSIGNED_INT_SAMPLER_2D_ARRAY;
    {class} property GL_UNSIGNED_INT_SAMPLER_3D: Integer read _GetGL_UNSIGNED_INT_SAMPLER_3D;
    {class} property GL_UNSIGNED_INT_SAMPLER_CUBE: Integer read _GetGL_UNSIGNED_INT_SAMPLER_CUBE;
    {class} property GL_UNSIGNED_INT_VEC2: Integer read _GetGL_UNSIGNED_INT_VEC2;
    {class} property GL_UNSIGNED_INT_VEC3: Integer read _GetGL_UNSIGNED_INT_VEC3;
    {class} property GL_UNSIGNED_INT_VEC4: Integer read _GetGL_UNSIGNED_INT_VEC4;
    {class} property GL_UNSIGNED_NORMALIZED: Integer read _GetGL_UNSIGNED_NORMALIZED;
    {class} property GL_VERTEX_ARRAY_BINDING: Integer read _GetGL_VERTEX_ARRAY_BINDING;
    {class} property GL_VERTEX_ATTRIB_ARRAY_DIVISOR: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_DIVISOR;
    {class} property GL_VERTEX_ATTRIB_ARRAY_INTEGER: Integer read _GetGL_VERTEX_ATTRIB_ARRAY_INTEGER;
    {class} property GL_WAIT_FAILED: Integer read _GetGL_WAIT_FAILED;
  end;

  [JavaSignature('android/opengl/GLES30')]
  JGLES30 = interface(JGLES20)
    ['{6254BA09-4979-4CB0-AC26-B0A0D9A01400}']
  end;
  TJGLES30 = class(TJavaGenericImport<JGLES30Class, JGLES30>) end;

  JGLES31Class = interface(JGLES30Class)
    ['{B82E0B3B-6E15-479A-995B-57FFAF6ABDE7}']
    {class} function _GetGL_ACTIVE_ATOMIC_COUNTER_BUFFERS: Integer; cdecl;
    {class} function _GetGL_ACTIVE_PROGRAM: Integer; cdecl;
    {class} function _GetGL_ACTIVE_RESOURCES: Integer; cdecl;
    {class} function _GetGL_ACTIVE_VARIABLES: Integer; cdecl;
    {class} function _GetGL_ALL_SHADER_BITS: Integer; cdecl;
    {class} function _GetGL_ARRAY_SIZE: Integer; cdecl;
    {class} function _GetGL_ARRAY_STRIDE: Integer; cdecl;
    {class} function _GetGL_ATOMIC_COUNTER_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_ATOMIC_COUNTER_BUFFER: Integer; cdecl;
    {class} function _GetGL_ATOMIC_COUNTER_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_ATOMIC_COUNTER_BUFFER_INDEX: Integer; cdecl;
    {class} function _GetGL_ATOMIC_COUNTER_BUFFER_SIZE: Integer; cdecl;
    {class} function _GetGL_ATOMIC_COUNTER_BUFFER_START: Integer; cdecl;
    {class} function _GetGL_BLOCK_INDEX: Integer; cdecl;
    {class} function _GetGL_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_BUFFER_DATA_SIZE: Integer; cdecl;
    {class} function _GetGL_BUFFER_UPDATE_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_BUFFER_VARIABLE: Integer; cdecl;
    {class} function _GetGL_COMMAND_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_COMPUTE_SHADER: Integer; cdecl;
    {class} function _GetGL_COMPUTE_SHADER_BIT: Integer; cdecl;
    {class} function _GetGL_COMPUTE_WORK_GROUP_SIZE: Integer; cdecl;
    {class} function _GetGL_DEPTH_STENCIL_TEXTURE_MODE: Integer; cdecl;
    {class} function _GetGL_DISPATCH_INDIRECT_BUFFER: Integer; cdecl;
    {class} function _GetGL_DISPATCH_INDIRECT_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_DRAW_INDIRECT_BUFFER: Integer; cdecl;
    {class} function _GetGL_DRAW_INDIRECT_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_FRAGMENT_SHADER_BIT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_DEFAULT_HEIGHT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_DEFAULT_SAMPLES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_DEFAULT_WIDTH: Integer; cdecl;
    {class} function _GetGL_IMAGE_2D: Integer; cdecl;
    {class} function _GetGL_IMAGE_2D_ARRAY: Integer; cdecl;
    {class} function _GetGL_IMAGE_3D: Integer; cdecl;
    {class} function _GetGL_IMAGE_BINDING_ACCESS: Integer; cdecl;
    {class} function _GetGL_IMAGE_BINDING_FORMAT: Integer; cdecl;
    {class} function _GetGL_IMAGE_BINDING_LAYER: Integer; cdecl;
    {class} function _GetGL_IMAGE_BINDING_LAYERED: Integer; cdecl;
    {class} function _GetGL_IMAGE_BINDING_LEVEL: Integer; cdecl;
    {class} function _GetGL_IMAGE_BINDING_NAME: Integer; cdecl;
    {class} function _GetGL_IMAGE_CUBE: Integer; cdecl;
    {class} function _GetGL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS: Integer; cdecl;
    {class} function _GetGL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE: Integer; cdecl;
    {class} function _GetGL_IMAGE_FORMAT_COMPATIBILITY_TYPE: Integer; cdecl;
    {class} function _GetGL_INT_IMAGE_2D: Integer; cdecl;
    {class} function _GetGL_INT_IMAGE_2D_ARRAY: Integer; cdecl;
    {class} function _GetGL_INT_IMAGE_3D: Integer; cdecl;
    {class} function _GetGL_INT_IMAGE_CUBE: Integer; cdecl;
    {class} function _GetGL_INT_SAMPLER_2D_MULTISAMPLE: Integer; cdecl;
    {class} function _GetGL_IS_ROW_MAJOR: Integer; cdecl;
    {class} function _GetGL_LOCATION: Integer; cdecl;
    {class} function _GetGL_MATRIX_STRIDE: Integer; cdecl;
    {class} function _GetGL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS: Integer; cdecl;
    {class} function _GetGL_MAX_ATOMIC_COUNTER_BUFFER_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_COLOR_TEXTURE_SAMPLES: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_ATOMIC_COUNTERS: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_IMAGE_UNIFORMS: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_SHADER_STORAGE_BLOCKS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_ATOMIC_COUNTERS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_IMAGE_UNIFORMS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_SHARED_MEMORY_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_UNIFORM_BLOCKS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_UNIFORM_COMPONENTS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_WORK_GROUP_COUNT: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS: Integer; cdecl;
    {class} function _GetGL_MAX_COMPUTE_WORK_GROUP_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_DEPTH_TEXTURE_SAMPLES: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_ATOMIC_COUNTERS: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_IMAGE_UNIFORMS: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS: Integer; cdecl;
    {class} function _GetGL_MAX_FRAMEBUFFER_HEIGHT: Integer; cdecl;
    {class} function _GetGL_MAX_FRAMEBUFFER_SAMPLES: Integer; cdecl;
    {class} function _GetGL_MAX_FRAMEBUFFER_WIDTH: Integer; cdecl;
    {class} function _GetGL_MAX_IMAGE_UNITS: Integer; cdecl;
    {class} function _GetGL_MAX_INTEGER_SAMPLES: Integer; cdecl;
    {class} function _GetGL_MAX_NAME_LENGTH: Integer; cdecl;
    {class} function _GetGL_MAX_NUM_ACTIVE_VARIABLES: Integer; cdecl;
    {class} function _GetGL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET: Integer; cdecl;
    {class} function _GetGL_MAX_SAMPLE_MASK_WORDS: Integer; cdecl;
    {class} function _GetGL_MAX_SHADER_STORAGE_BLOCK_SIZE: Integer; cdecl;
    {class} function _GetGL_MAX_SHADER_STORAGE_BUFFER_BINDINGS: Integer; cdecl;
    {class} function _GetGL_MAX_UNIFORM_LOCATIONS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_ATOMIC_COUNTERS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_ATTRIB_BINDINGS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_ATTRIB_STRIDE: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_IMAGE_UNIFORMS: Integer; cdecl;
    {class} function _GetGL_MAX_VERTEX_SHADER_STORAGE_BLOCKS: Integer; cdecl;
    {class} function _GetGL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET: Integer; cdecl;
    {class} function _GetGL_NAME_LENGTH: Integer; cdecl;
    {class} function _GetGL_NUM_ACTIVE_VARIABLES: Integer; cdecl;
    {class} function _GetGL_OFFSET: Integer; cdecl;
    {class} function _GetGL_PIXEL_BUFFER_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_PROGRAM_INPUT: Integer; cdecl;
    {class} function _GetGL_PROGRAM_OUTPUT: Integer; cdecl;
    {class} function _GetGL_PROGRAM_PIPELINE_BINDING: Integer; cdecl;
    {class} function _GetGL_PROGRAM_SEPARABLE: Integer; cdecl;
    {class} function _GetGL_READ_ONLY: Integer; cdecl;
    {class} function _GetGL_READ_WRITE: Integer; cdecl;
    {class} function _GetGL_REFERENCED_BY_COMPUTE_SHADER: Integer; cdecl;
    {class} function _GetGL_REFERENCED_BY_FRAGMENT_SHADER: Integer; cdecl;
    {class} function _GetGL_REFERENCED_BY_VERTEX_SHADER: Integer; cdecl;
    {class} function _GetGL_SAMPLER_2D_MULTISAMPLE: Integer; cdecl;
    {class} function _GetGL_SAMPLE_MASK: Integer; cdecl;
    {class} function _GetGL_SAMPLE_MASK_VALUE: Integer; cdecl;
    {class} function _GetGL_SAMPLE_POSITION: Integer; cdecl;
    {class} function _GetGL_SHADER_STORAGE_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_SHADER_STORAGE_BLOCK: Integer; cdecl;
    {class} function _GetGL_SHADER_STORAGE_BUFFER: Integer; cdecl;
    {class} function _GetGL_SHADER_STORAGE_BUFFER_BINDING: Integer; cdecl;
    {class} function _GetGL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT: Integer; cdecl;
    {class} function _GetGL_SHADER_STORAGE_BUFFER_SIZE: Integer; cdecl;
    {class} function _GetGL_SHADER_STORAGE_BUFFER_START: Integer; cdecl;
    {class} function _GetGL_STENCIL_INDEX: Integer; cdecl;
    {class} function _GetGL_TEXTURE_2D_MULTISAMPLE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_ALPHA_SIZE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_ALPHA_TYPE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_2D_MULTISAMPLE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BLUE_SIZE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BLUE_TYPE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_COMPRESSED: Integer; cdecl;
    {class} function _GetGL_TEXTURE_DEPTH: Integer; cdecl;
    {class} function _GetGL_TEXTURE_DEPTH_SIZE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_DEPTH_TYPE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_FETCH_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_FIXED_SAMPLE_LOCATIONS: Integer; cdecl;
    {class} function _GetGL_TEXTURE_GREEN_SIZE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_GREEN_TYPE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_HEIGHT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_INTERNAL_FORMAT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_RED_SIZE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_RED_TYPE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_SAMPLES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_SHARED_SIZE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_STENCIL_SIZE: Integer; cdecl;
    {class} function _GetGL_TEXTURE_UPDATE_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_WIDTH: Integer; cdecl;
    {class} function _GetGL_TOP_LEVEL_ARRAY_SIZE: Integer; cdecl;
    {class} function _GetGL_TOP_LEVEL_ARRAY_STRIDE: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_TRANSFORM_FEEDBACK_VARYING: Integer; cdecl;
    {class} function _GetGL_TYPE: Integer; cdecl;
    {class} function _GetGL_UNIFORM: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BARRIER_BIT: Integer; cdecl;
    {class} function _GetGL_UNIFORM_BLOCK: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_ATOMIC_COUNTER: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_IMAGE_2D: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_IMAGE_2D_ARRAY: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_IMAGE_3D: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_IMAGE_CUBE: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_BINDING: Integer; cdecl;
    {class} function _GetGL_VERTEX_ATTRIB_RELATIVE_OFFSET: Integer; cdecl;
    {class} function _GetGL_VERTEX_BINDING_BUFFER: Integer; cdecl;
    {class} function _GetGL_VERTEX_BINDING_DIVISOR: Integer; cdecl;
    {class} function _GetGL_VERTEX_BINDING_OFFSET: Integer; cdecl;
    {class} function _GetGL_VERTEX_BINDING_STRIDE: Integer; cdecl;
    {class} function _GetGL_VERTEX_SHADER_BIT: Integer; cdecl;
    {class} function _GetGL_WRITE_ONLY: Integer; cdecl;
    {class} procedure glActiveShaderProgram(pipeline: Integer; program_: Integer); cdecl;
    {class} procedure glBindImageTexture(unit_: Integer; texture: Integer; level: Integer; layered: Boolean; layer: Integer; access: Integer; format: Integer); cdecl;
    {class} procedure glBindProgramPipeline(pipeline: Integer); cdecl;
    {class} procedure glBindVertexBuffer(bindingindex: Integer; buffer: Integer; offset: Int64; stride: Integer); cdecl;
    {class} function glCreateShaderProgramv(type_: Integer; strings: TJavaObjectArray<JString>): Integer; cdecl;
    {class} procedure glDeleteProgramPipelines(n: Integer; pipelines: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glDeleteProgramPipelines(n: Integer; pipelines: JIntBuffer); cdecl; overload;
    {class} procedure glDispatchCompute(num_groups_x: Integer; num_groups_y: Integer; num_groups_z: Integer); cdecl;
    {class} procedure glDispatchComputeIndirect(indirect: Int64); cdecl;
    {class} procedure glDrawArraysIndirect(mode: Integer; indirect: Int64); cdecl;
    {class} procedure glDrawElementsIndirect(mode: Integer; type_: Integer; indirect: Int64); cdecl;
    {class} procedure glFramebufferParameteri(target: Integer; pname: Integer; param: Integer); cdecl;
    {class} procedure glGenProgramPipelines(n: Integer; pipelines: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGenProgramPipelines(n: Integer; pipelines: JIntBuffer); cdecl; overload;
    {class} procedure glGetBooleani_v(target: Integer; index: Integer; data: TJavaArray<Boolean>; offset: Integer); cdecl; overload;
    {class} procedure glGetBooleani_v(target: Integer; index: Integer; data: JIntBuffer); cdecl; overload;
    {class} procedure glGetFramebufferParameteriv(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetFramebufferParameteriv(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetMultisamplefv(pname: Integer; index: Integer; val: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetMultisamplefv(pname: Integer; index: Integer; val: JFloatBuffer); cdecl; overload;
    {class} procedure glGetProgramInterfaceiv(program_: Integer; programInterface: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetProgramInterfaceiv(program_: Integer; programInterface: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetProgramPipelineInfoLog(program_: Integer): JString; cdecl;
    {class} procedure glGetProgramPipelineiv(pipeline: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetProgramPipelineiv(pipeline: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glGetProgramResourceIndex(program_: Integer; programInterface: Integer; name: JString): Integer; cdecl;
    {class} function glGetProgramResourceLocation(program_: Integer; programInterface: Integer; name: JString): Integer; cdecl;
    {class} function glGetProgramResourceName(program_: Integer; programInterface: Integer; index: Integer): JString; cdecl;
    {class} procedure glGetProgramResourceiv(program_: Integer; programInterface: Integer; index: Integer; propCount: Integer; props: TJavaArray<Integer>; propsOffset: Integer; bufSize: Integer; length: TJavaArray<Integer>; lengthOffset: Integer; params: TJavaArray<Integer>; paramsOffset: Integer); cdecl; overload;
    {class} procedure glGetProgramResourceiv(program_: Integer; programInterface: Integer; index: Integer; propCount: Integer; props: JIntBuffer; bufSize: Integer; length: JIntBuffer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexLevelParameterfv(target: Integer; level: Integer; pname: Integer; params: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexLevelParameterfv(target: Integer; level: Integer; pname: Integer; params: JFloatBuffer); cdecl; overload;
    {class} procedure glGetTexLevelParameteriv(target: Integer; level: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexLevelParameteriv(target: Integer; level: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glIsProgramPipeline(pipeline: Integer): Boolean; cdecl;
    {class} procedure glMemoryBarrier(barriers: Integer); cdecl;
    {class} procedure glMemoryBarrierByRegion(barriers: Integer); cdecl;
    {class} procedure glProgramUniform1f(program_: Integer; location: Integer; v0: Single); cdecl;
    {class} procedure glProgramUniform1fv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform1fv(program_: Integer; location: Integer; count: Integer; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniform1i(program_: Integer; location: Integer; v0: Integer); cdecl;
    {class} procedure glProgramUniform1iv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform1iv(program_: Integer; location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glProgramUniform1ui(program_: Integer; location: Integer; v0: Integer); cdecl;
    {class} procedure glProgramUniform1uiv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform1uiv(program_: Integer; location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glProgramUniform2f(program_: Integer; location: Integer; v0: Single; v1: Single); cdecl;
    {class} procedure glProgramUniform2fv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform2fv(program_: Integer; location: Integer; count: Integer; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniform2i(program_: Integer; location: Integer; v0: Integer; v1: Integer); cdecl;
    {class} procedure glProgramUniform2iv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform2iv(program_: Integer; location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glProgramUniform2ui(program_: Integer; location: Integer; v0: Integer; v1: Integer); cdecl;
    {class} procedure glProgramUniform2uiv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform2uiv(program_: Integer; location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glProgramUniform3f(program_: Integer; location: Integer; v0: Single; v1: Single; v2: Single); cdecl;
    {class} procedure glProgramUniform3fv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform3fv(program_: Integer; location: Integer; count: Integer; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniform3i(program_: Integer; location: Integer; v0: Integer; v1: Integer; v2: Integer); cdecl;
    {class} procedure glProgramUniform3iv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform3iv(program_: Integer; location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glProgramUniform3ui(program_: Integer; location: Integer; v0: Integer; v1: Integer; v2: Integer); cdecl;
    {class} procedure glProgramUniform3uiv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform3uiv(program_: Integer; location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glProgramUniform4f(program_: Integer; location: Integer; v0: Single; v1: Single; v2: Single; v3: Single); cdecl;
    {class} procedure glProgramUniform4fv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform4fv(program_: Integer; location: Integer; count: Integer; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniform4i(program_: Integer; location: Integer; v0: Integer; v1: Integer; v2: Integer; v3: Integer); cdecl;
    {class} procedure glProgramUniform4iv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform4iv(program_: Integer; location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glProgramUniform4ui(program_: Integer; location: Integer; v0: Integer; v1: Integer; v2: Integer; v3: Integer); cdecl;
    {class} procedure glProgramUniform4uiv(program_: Integer; location: Integer; count: Integer; value: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniform4uiv(program_: Integer; location: Integer; count: Integer; value: JIntBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix2fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix2fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix2x3fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix2x3fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix2x4fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix2x4fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix3fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix3fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix3x2fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix3x2fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix3x4fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix3x4fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix4fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix4fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix4x2fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix4x2fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glProgramUniformMatrix4x3fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: TJavaArray<Single>; offset: Integer); cdecl; overload;
    {class} procedure glProgramUniformMatrix4x3fv(program_: Integer; location: Integer; count: Integer; transpose: Boolean; value: JFloatBuffer); cdecl; overload;
    {class} procedure glSampleMaski(maskNumber: Integer; mask: Integer); cdecl;
    {class} procedure glTexStorage2DMultisample(target: Integer; samples: Integer; internalformat: Integer; width: Integer; height: Integer; fixedsamplelocations: Boolean); cdecl;
    {class} procedure glUseProgramStages(pipeline: Integer; stages: Integer; program_: Integer); cdecl;
    {class} procedure glValidateProgramPipeline(pipeline: Integer); cdecl;
    {class} procedure glVertexAttribBinding(attribindex: Integer; bindingindex: Integer); cdecl;
    {class} procedure glVertexAttribFormat(attribindex: Integer; size: Integer; type_: Integer; normalized: Boolean; relativeoffset: Integer); cdecl;
    {class} procedure glVertexAttribIFormat(attribindex: Integer; size: Integer; type_: Integer; relativeoffset: Integer); cdecl;
    {class} procedure glVertexBindingDivisor(bindingindex: Integer; divisor: Integer); cdecl;
    {class} property GL_ACTIVE_ATOMIC_COUNTER_BUFFERS: Integer read _GetGL_ACTIVE_ATOMIC_COUNTER_BUFFERS;
    {class} property GL_ACTIVE_PROGRAM: Integer read _GetGL_ACTIVE_PROGRAM;
    {class} property GL_ACTIVE_RESOURCES: Integer read _GetGL_ACTIVE_RESOURCES;
    {class} property GL_ACTIVE_VARIABLES: Integer read _GetGL_ACTIVE_VARIABLES;
    {class} property GL_ALL_SHADER_BITS: Integer read _GetGL_ALL_SHADER_BITS;
    {class} property GL_ARRAY_SIZE: Integer read _GetGL_ARRAY_SIZE;
    {class} property GL_ARRAY_STRIDE: Integer read _GetGL_ARRAY_STRIDE;
    {class} property GL_ATOMIC_COUNTER_BARRIER_BIT: Integer read _GetGL_ATOMIC_COUNTER_BARRIER_BIT;
    {class} property GL_ATOMIC_COUNTER_BUFFER: Integer read _GetGL_ATOMIC_COUNTER_BUFFER;
    {class} property GL_ATOMIC_COUNTER_BUFFER_BINDING: Integer read _GetGL_ATOMIC_COUNTER_BUFFER_BINDING;
    {class} property GL_ATOMIC_COUNTER_BUFFER_INDEX: Integer read _GetGL_ATOMIC_COUNTER_BUFFER_INDEX;
    {class} property GL_ATOMIC_COUNTER_BUFFER_SIZE: Integer read _GetGL_ATOMIC_COUNTER_BUFFER_SIZE;
    {class} property GL_ATOMIC_COUNTER_BUFFER_START: Integer read _GetGL_ATOMIC_COUNTER_BUFFER_START;
    {class} property GL_BLOCK_INDEX: Integer read _GetGL_BLOCK_INDEX;
    {class} property GL_BUFFER_BINDING: Integer read _GetGL_BUFFER_BINDING;
    {class} property GL_BUFFER_DATA_SIZE: Integer read _GetGL_BUFFER_DATA_SIZE;
    {class} property GL_BUFFER_UPDATE_BARRIER_BIT: Integer read _GetGL_BUFFER_UPDATE_BARRIER_BIT;
    {class} property GL_BUFFER_VARIABLE: Integer read _GetGL_BUFFER_VARIABLE;
    {class} property GL_COMMAND_BARRIER_BIT: Integer read _GetGL_COMMAND_BARRIER_BIT;
    {class} property GL_COMPUTE_SHADER: Integer read _GetGL_COMPUTE_SHADER;
    {class} property GL_COMPUTE_SHADER_BIT: Integer read _GetGL_COMPUTE_SHADER_BIT;
    {class} property GL_COMPUTE_WORK_GROUP_SIZE: Integer read _GetGL_COMPUTE_WORK_GROUP_SIZE;
    {class} property GL_DEPTH_STENCIL_TEXTURE_MODE: Integer read _GetGL_DEPTH_STENCIL_TEXTURE_MODE;
    {class} property GL_DISPATCH_INDIRECT_BUFFER: Integer read _GetGL_DISPATCH_INDIRECT_BUFFER;
    {class} property GL_DISPATCH_INDIRECT_BUFFER_BINDING: Integer read _GetGL_DISPATCH_INDIRECT_BUFFER_BINDING;
    {class} property GL_DRAW_INDIRECT_BUFFER: Integer read _GetGL_DRAW_INDIRECT_BUFFER;
    {class} property GL_DRAW_INDIRECT_BUFFER_BINDING: Integer read _GetGL_DRAW_INDIRECT_BUFFER_BINDING;
    {class} property GL_FRAGMENT_SHADER_BIT: Integer read _GetGL_FRAGMENT_SHADER_BIT;
    {class} property GL_FRAMEBUFFER_BARRIER_BIT: Integer read _GetGL_FRAMEBUFFER_BARRIER_BIT;
    {class} property GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS: Integer read _GetGL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS;
    {class} property GL_FRAMEBUFFER_DEFAULT_HEIGHT: Integer read _GetGL_FRAMEBUFFER_DEFAULT_HEIGHT;
    {class} property GL_FRAMEBUFFER_DEFAULT_SAMPLES: Integer read _GetGL_FRAMEBUFFER_DEFAULT_SAMPLES;
    {class} property GL_FRAMEBUFFER_DEFAULT_WIDTH: Integer read _GetGL_FRAMEBUFFER_DEFAULT_WIDTH;
    {class} property GL_IMAGE_2D: Integer read _GetGL_IMAGE_2D;
    {class} property GL_IMAGE_2D_ARRAY: Integer read _GetGL_IMAGE_2D_ARRAY;
    {class} property GL_IMAGE_3D: Integer read _GetGL_IMAGE_3D;
    {class} property GL_IMAGE_BINDING_ACCESS: Integer read _GetGL_IMAGE_BINDING_ACCESS;
    {class} property GL_IMAGE_BINDING_FORMAT: Integer read _GetGL_IMAGE_BINDING_FORMAT;
    {class} property GL_IMAGE_BINDING_LAYER: Integer read _GetGL_IMAGE_BINDING_LAYER;
    {class} property GL_IMAGE_BINDING_LAYERED: Integer read _GetGL_IMAGE_BINDING_LAYERED;
    {class} property GL_IMAGE_BINDING_LEVEL: Integer read _GetGL_IMAGE_BINDING_LEVEL;
    {class} property GL_IMAGE_BINDING_NAME: Integer read _GetGL_IMAGE_BINDING_NAME;
    {class} property GL_IMAGE_CUBE: Integer read _GetGL_IMAGE_CUBE;
    {class} property GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS: Integer read _GetGL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS;
    {class} property GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE: Integer read _GetGL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE;
    {class} property GL_IMAGE_FORMAT_COMPATIBILITY_TYPE: Integer read _GetGL_IMAGE_FORMAT_COMPATIBILITY_TYPE;
    {class} property GL_INT_IMAGE_2D: Integer read _GetGL_INT_IMAGE_2D;
    {class} property GL_INT_IMAGE_2D_ARRAY: Integer read _GetGL_INT_IMAGE_2D_ARRAY;
    {class} property GL_INT_IMAGE_3D: Integer read _GetGL_INT_IMAGE_3D;
    {class} property GL_INT_IMAGE_CUBE: Integer read _GetGL_INT_IMAGE_CUBE;
    {class} property GL_INT_SAMPLER_2D_MULTISAMPLE: Integer read _GetGL_INT_SAMPLER_2D_MULTISAMPLE;
    {class} property GL_IS_ROW_MAJOR: Integer read _GetGL_IS_ROW_MAJOR;
    {class} property GL_LOCATION: Integer read _GetGL_LOCATION;
    {class} property GL_MATRIX_STRIDE: Integer read _GetGL_MATRIX_STRIDE;
    {class} property GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS: Integer read _GetGL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS;
    {class} property GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE: Integer read _GetGL_MAX_ATOMIC_COUNTER_BUFFER_SIZE;
    {class} property GL_MAX_COLOR_TEXTURE_SAMPLES: Integer read _GetGL_MAX_COLOR_TEXTURE_SAMPLES;
    {class} property GL_MAX_COMBINED_ATOMIC_COUNTERS: Integer read _GetGL_MAX_COMBINED_ATOMIC_COUNTERS;
    {class} property GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS: Integer read _GetGL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS;
    {class} property GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS: Integer read _GetGL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS;
    {class} property GL_MAX_COMBINED_IMAGE_UNIFORMS: Integer read _GetGL_MAX_COMBINED_IMAGE_UNIFORMS;
    {class} property GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES: Integer read _GetGL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES;
    {class} property GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS: Integer read _GetGL_MAX_COMBINED_SHADER_STORAGE_BLOCKS;
    {class} property GL_MAX_COMPUTE_ATOMIC_COUNTERS: Integer read _GetGL_MAX_COMPUTE_ATOMIC_COUNTERS;
    {class} property GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS: Integer read _GetGL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS;
    {class} property GL_MAX_COMPUTE_IMAGE_UNIFORMS: Integer read _GetGL_MAX_COMPUTE_IMAGE_UNIFORMS;
    {class} property GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS: Integer read _GetGL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS;
    {class} property GL_MAX_COMPUTE_SHARED_MEMORY_SIZE: Integer read _GetGL_MAX_COMPUTE_SHARED_MEMORY_SIZE;
    {class} property GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS: Integer read _GetGL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS;
    {class} property GL_MAX_COMPUTE_UNIFORM_BLOCKS: Integer read _GetGL_MAX_COMPUTE_UNIFORM_BLOCKS;
    {class} property GL_MAX_COMPUTE_UNIFORM_COMPONENTS: Integer read _GetGL_MAX_COMPUTE_UNIFORM_COMPONENTS;
    {class} property GL_MAX_COMPUTE_WORK_GROUP_COUNT: Integer read _GetGL_MAX_COMPUTE_WORK_GROUP_COUNT;
    {class} property GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS: Integer read _GetGL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS;
    {class} property GL_MAX_COMPUTE_WORK_GROUP_SIZE: Integer read _GetGL_MAX_COMPUTE_WORK_GROUP_SIZE;
    {class} property GL_MAX_DEPTH_TEXTURE_SAMPLES: Integer read _GetGL_MAX_DEPTH_TEXTURE_SAMPLES;
    {class} property GL_MAX_FRAGMENT_ATOMIC_COUNTERS: Integer read _GetGL_MAX_FRAGMENT_ATOMIC_COUNTERS;
    {class} property GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS: Integer read _GetGL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS;
    {class} property GL_MAX_FRAGMENT_IMAGE_UNIFORMS: Integer read _GetGL_MAX_FRAGMENT_IMAGE_UNIFORMS;
    {class} property GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS: Integer read _GetGL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS;
    {class} property GL_MAX_FRAMEBUFFER_HEIGHT: Integer read _GetGL_MAX_FRAMEBUFFER_HEIGHT;
    {class} property GL_MAX_FRAMEBUFFER_SAMPLES: Integer read _GetGL_MAX_FRAMEBUFFER_SAMPLES;
    {class} property GL_MAX_FRAMEBUFFER_WIDTH: Integer read _GetGL_MAX_FRAMEBUFFER_WIDTH;
    {class} property GL_MAX_IMAGE_UNITS: Integer read _GetGL_MAX_IMAGE_UNITS;
    {class} property GL_MAX_INTEGER_SAMPLES: Integer read _GetGL_MAX_INTEGER_SAMPLES;
    {class} property GL_MAX_NAME_LENGTH: Integer read _GetGL_MAX_NAME_LENGTH;
    {class} property GL_MAX_NUM_ACTIVE_VARIABLES: Integer read _GetGL_MAX_NUM_ACTIVE_VARIABLES;
    {class} property GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET: Integer read _GetGL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET;
    {class} property GL_MAX_SAMPLE_MASK_WORDS: Integer read _GetGL_MAX_SAMPLE_MASK_WORDS;
    {class} property GL_MAX_SHADER_STORAGE_BLOCK_SIZE: Integer read _GetGL_MAX_SHADER_STORAGE_BLOCK_SIZE;
    {class} property GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS: Integer read _GetGL_MAX_SHADER_STORAGE_BUFFER_BINDINGS;
    {class} property GL_MAX_UNIFORM_LOCATIONS: Integer read _GetGL_MAX_UNIFORM_LOCATIONS;
    {class} property GL_MAX_VERTEX_ATOMIC_COUNTERS: Integer read _GetGL_MAX_VERTEX_ATOMIC_COUNTERS;
    {class} property GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS: Integer read _GetGL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS;
    {class} property GL_MAX_VERTEX_ATTRIB_BINDINGS: Integer read _GetGL_MAX_VERTEX_ATTRIB_BINDINGS;
    {class} property GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: Integer read _GetGL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET;
    {class} property GL_MAX_VERTEX_ATTRIB_STRIDE: Integer read _GetGL_MAX_VERTEX_ATTRIB_STRIDE;
    {class} property GL_MAX_VERTEX_IMAGE_UNIFORMS: Integer read _GetGL_MAX_VERTEX_IMAGE_UNIFORMS;
    {class} property GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS: Integer read _GetGL_MAX_VERTEX_SHADER_STORAGE_BLOCKS;
    {class} property GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET: Integer read _GetGL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET;
    {class} property GL_NAME_LENGTH: Integer read _GetGL_NAME_LENGTH;
    {class} property GL_NUM_ACTIVE_VARIABLES: Integer read _GetGL_NUM_ACTIVE_VARIABLES;
    {class} property GL_OFFSET: Integer read _GetGL_OFFSET;
    {class} property GL_PIXEL_BUFFER_BARRIER_BIT: Integer read _GetGL_PIXEL_BUFFER_BARRIER_BIT;
    {class} property GL_PROGRAM_INPUT: Integer read _GetGL_PROGRAM_INPUT;
    {class} property GL_PROGRAM_OUTPUT: Integer read _GetGL_PROGRAM_OUTPUT;
    {class} property GL_PROGRAM_PIPELINE_BINDING: Integer read _GetGL_PROGRAM_PIPELINE_BINDING;
    {class} property GL_PROGRAM_SEPARABLE: Integer read _GetGL_PROGRAM_SEPARABLE;
    {class} property GL_READ_ONLY: Integer read _GetGL_READ_ONLY;
    {class} property GL_READ_WRITE: Integer read _GetGL_READ_WRITE;
    {class} property GL_REFERENCED_BY_COMPUTE_SHADER: Integer read _GetGL_REFERENCED_BY_COMPUTE_SHADER;
    {class} property GL_REFERENCED_BY_FRAGMENT_SHADER: Integer read _GetGL_REFERENCED_BY_FRAGMENT_SHADER;
    {class} property GL_REFERENCED_BY_VERTEX_SHADER: Integer read _GetGL_REFERENCED_BY_VERTEX_SHADER;
    {class} property GL_SAMPLER_2D_MULTISAMPLE: Integer read _GetGL_SAMPLER_2D_MULTISAMPLE;
    {class} property GL_SAMPLE_MASK: Integer read _GetGL_SAMPLE_MASK;
    {class} property GL_SAMPLE_MASK_VALUE: Integer read _GetGL_SAMPLE_MASK_VALUE;
    {class} property GL_SAMPLE_POSITION: Integer read _GetGL_SAMPLE_POSITION;
    {class} property GL_SHADER_STORAGE_BARRIER_BIT: Integer read _GetGL_SHADER_STORAGE_BARRIER_BIT;
    {class} property GL_SHADER_STORAGE_BLOCK: Integer read _GetGL_SHADER_STORAGE_BLOCK;
    {class} property GL_SHADER_STORAGE_BUFFER: Integer read _GetGL_SHADER_STORAGE_BUFFER;
    {class} property GL_SHADER_STORAGE_BUFFER_BINDING: Integer read _GetGL_SHADER_STORAGE_BUFFER_BINDING;
    {class} property GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT: Integer read _GetGL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT;
    {class} property GL_SHADER_STORAGE_BUFFER_SIZE: Integer read _GetGL_SHADER_STORAGE_BUFFER_SIZE;
    {class} property GL_SHADER_STORAGE_BUFFER_START: Integer read _GetGL_SHADER_STORAGE_BUFFER_START;
    {class} //GL_STENCIL_INDEX is defined in parent interface
    {class} property GL_TEXTURE_2D_MULTISAMPLE: Integer read _GetGL_TEXTURE_2D_MULTISAMPLE;
    {class} property GL_TEXTURE_ALPHA_SIZE: Integer read _GetGL_TEXTURE_ALPHA_SIZE;
    {class} property GL_TEXTURE_ALPHA_TYPE: Integer read _GetGL_TEXTURE_ALPHA_TYPE;
    {class} property GL_TEXTURE_BINDING_2D_MULTISAMPLE: Integer read _GetGL_TEXTURE_BINDING_2D_MULTISAMPLE;
    {class} property GL_TEXTURE_BLUE_SIZE: Integer read _GetGL_TEXTURE_BLUE_SIZE;
    {class} property GL_TEXTURE_BLUE_TYPE: Integer read _GetGL_TEXTURE_BLUE_TYPE;
    {class} property GL_TEXTURE_COMPRESSED: Integer read _GetGL_TEXTURE_COMPRESSED;
    {class} property GL_TEXTURE_DEPTH: Integer read _GetGL_TEXTURE_DEPTH;
    {class} property GL_TEXTURE_DEPTH_SIZE: Integer read _GetGL_TEXTURE_DEPTH_SIZE;
    {class} property GL_TEXTURE_DEPTH_TYPE: Integer read _GetGL_TEXTURE_DEPTH_TYPE;
    {class} property GL_TEXTURE_FETCH_BARRIER_BIT: Integer read _GetGL_TEXTURE_FETCH_BARRIER_BIT;
    {class} property GL_TEXTURE_FIXED_SAMPLE_LOCATIONS: Integer read _GetGL_TEXTURE_FIXED_SAMPLE_LOCATIONS;
    {class} property GL_TEXTURE_GREEN_SIZE: Integer read _GetGL_TEXTURE_GREEN_SIZE;
    {class} property GL_TEXTURE_GREEN_TYPE: Integer read _GetGL_TEXTURE_GREEN_TYPE;
    {class} property GL_TEXTURE_HEIGHT: Integer read _GetGL_TEXTURE_HEIGHT;
    {class} property GL_TEXTURE_INTERNAL_FORMAT: Integer read _GetGL_TEXTURE_INTERNAL_FORMAT;
    {class} property GL_TEXTURE_RED_SIZE: Integer read _GetGL_TEXTURE_RED_SIZE;
    {class} property GL_TEXTURE_RED_TYPE: Integer read _GetGL_TEXTURE_RED_TYPE;
    {class} property GL_TEXTURE_SAMPLES: Integer read _GetGL_TEXTURE_SAMPLES;
    {class} property GL_TEXTURE_SHARED_SIZE: Integer read _GetGL_TEXTURE_SHARED_SIZE;
    {class} property GL_TEXTURE_STENCIL_SIZE: Integer read _GetGL_TEXTURE_STENCIL_SIZE;
    {class} property GL_TEXTURE_UPDATE_BARRIER_BIT: Integer read _GetGL_TEXTURE_UPDATE_BARRIER_BIT;
    {class} property GL_TEXTURE_WIDTH: Integer read _GetGL_TEXTURE_WIDTH;
    {class} property GL_TOP_LEVEL_ARRAY_SIZE: Integer read _GetGL_TOP_LEVEL_ARRAY_SIZE;
    {class} property GL_TOP_LEVEL_ARRAY_STRIDE: Integer read _GetGL_TOP_LEVEL_ARRAY_STRIDE;
    {class} property GL_TRANSFORM_FEEDBACK_BARRIER_BIT: Integer read _GetGL_TRANSFORM_FEEDBACK_BARRIER_BIT;
    {class} property GL_TRANSFORM_FEEDBACK_VARYING: Integer read _GetGL_TRANSFORM_FEEDBACK_VARYING;
    {class} property GL_TYPE: Integer read _GetGL_TYPE;
    {class} property GL_UNIFORM: Integer read _GetGL_UNIFORM;
    {class} property GL_UNIFORM_BARRIER_BIT: Integer read _GetGL_UNIFORM_BARRIER_BIT;
    {class} property GL_UNIFORM_BLOCK: Integer read _GetGL_UNIFORM_BLOCK;
    {class} property GL_UNSIGNED_INT_ATOMIC_COUNTER: Integer read _GetGL_UNSIGNED_INT_ATOMIC_COUNTER;
    {class} property GL_UNSIGNED_INT_IMAGE_2D: Integer read _GetGL_UNSIGNED_INT_IMAGE_2D;
    {class} property GL_UNSIGNED_INT_IMAGE_2D_ARRAY: Integer read _GetGL_UNSIGNED_INT_IMAGE_2D_ARRAY;
    {class} property GL_UNSIGNED_INT_IMAGE_3D: Integer read _GetGL_UNSIGNED_INT_IMAGE_3D;
    {class} property GL_UNSIGNED_INT_IMAGE_CUBE: Integer read _GetGL_UNSIGNED_INT_IMAGE_CUBE;
    {class} property GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: Integer read _GetGL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE;
    {class} property GL_VERTEX_ATTRIB_BINDING: Integer read _GetGL_VERTEX_ATTRIB_BINDING;
    {class} property GL_VERTEX_ATTRIB_RELATIVE_OFFSET: Integer read _GetGL_VERTEX_ATTRIB_RELATIVE_OFFSET;
    {class} property GL_VERTEX_BINDING_BUFFER: Integer read _GetGL_VERTEX_BINDING_BUFFER;
    {class} property GL_VERTEX_BINDING_DIVISOR: Integer read _GetGL_VERTEX_BINDING_DIVISOR;
    {class} property GL_VERTEX_BINDING_OFFSET: Integer read _GetGL_VERTEX_BINDING_OFFSET;
    {class} property GL_VERTEX_BINDING_STRIDE: Integer read _GetGL_VERTEX_BINDING_STRIDE;
    {class} property GL_VERTEX_SHADER_BIT: Integer read _GetGL_VERTEX_SHADER_BIT;
    {class} property GL_WRITE_ONLY: Integer read _GetGL_WRITE_ONLY;
  end;

  [JavaSignature('android/opengl/GLES31')]
  JGLES31 = interface(JGLES30)
    ['{A5839B6F-50F1-46A6-B9CC-748019DFAB87}']
  end;
  TJGLES31 = class(TJavaGenericImport<JGLES31Class, JGLES31>) end;

  JGLES31ExtClass = interface(JObjectClass)
    ['{6077CD36-8744-4F9A-BCEB-CFC942FB3FED}']
    {class} function _GetGL_BLEND_ADVANCED_COHERENT_KHR: Integer; cdecl;
    {class} function _GetGL_BUFFER_KHR: Integer; cdecl;
    {class} function _GetGL_CLAMP_TO_BORDER_EXT: Integer; cdecl;
    {class} function _GetGL_COLORBURN_KHR: Integer; cdecl;
    {class} function _GetGL_COLORDODGE_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_10x10_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_10x5_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_10x6_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_10x8_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_12x10_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_12x12_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_4x4_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_5x4_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_5x5_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_6x5_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_6x6_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_8x5_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_8x6_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_RGBA_ASTC_8x8_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: Integer; cdecl;
    {class} function _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: Integer; cdecl;
    {class} function _GetGL_CONTEXT_FLAG_DEBUG_BIT_KHR: Integer; cdecl;
    {class} function _GetGL_DARKEN_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_CALLBACK_FUNCTION_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_CALLBACK_USER_PARAM_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_GROUP_STACK_DEPTH_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_LOGGED_MESSAGES_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_OUTPUT_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_OUTPUT_SYNCHRONOUS_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SEVERITY_HIGH_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SEVERITY_LOW_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SEVERITY_MEDIUM_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SEVERITY_NOTIFICATION_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SOURCE_API_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SOURCE_APPLICATION_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SOURCE_OTHER_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SOURCE_SHADER_COMPILER_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SOURCE_THIRD_PARTY_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_ERROR_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_MARKER_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_OTHER_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_PERFORMANCE_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_POP_GROUP_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_PORTABILITY_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_PUSH_GROUP_KHR: Integer; cdecl;
    {class} function _GetGL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR: Integer; cdecl;
    {class} function _GetGL_DECODE_EXT: Integer; cdecl;
    {class} function _GetGL_DIFFERENCE_KHR: Integer; cdecl;
    {class} function _GetGL_EXCLUSION_KHR: Integer; cdecl;
    {class} function _GetGL_FIRST_VERTEX_CONVENTION_EXT: Integer; cdecl;
    {class} function _GetGL_FRACTIONAL_EVEN_EXT: Integer; cdecl;
    {class} function _GetGL_FRACTIONAL_ODD_EXT: Integer; cdecl;
    {class} function _GetGL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_DEFAULT_LAYERS_EXT: Integer; cdecl;
    {class} function _GetGL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT: Integer; cdecl;
    {class} function _GetGL_GEOMETRY_LINKED_INPUT_TYPE_EXT: Integer; cdecl;
    {class} function _GetGL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT: Integer; cdecl;
    {class} function _GetGL_GEOMETRY_LINKED_VERTICES_OUT_EXT: Integer; cdecl;
    {class} function _GetGL_GEOMETRY_SHADER_BIT_EXT: Integer; cdecl;
    {class} function _GetGL_GEOMETRY_SHADER_EXT: Integer; cdecl;
    {class} function _GetGL_GEOMETRY_SHADER_INVOCATIONS_EXT: Integer; cdecl;
    {class} function _GetGL_HARDLIGHT_KHR: Integer; cdecl;
    {class} function _GetGL_HSL_COLOR_KHR: Integer; cdecl;
    {class} function _GetGL_HSL_HUE_KHR: Integer; cdecl;
    {class} function _GetGL_HSL_LUMINOSITY_KHR: Integer; cdecl;
    {class} function _GetGL_HSL_SATURATION_KHR: Integer; cdecl;
    {class} function _GetGL_IMAGE_BUFFER_EXT: Integer; cdecl;
    {class} function _GetGL_IMAGE_CUBE_MAP_ARRAY_EXT: Integer; cdecl;
    {class} function _GetGL_INT_IMAGE_BUFFER_EXT: Integer; cdecl;
    {class} function _GetGL_INT_IMAGE_CUBE_MAP_ARRAY_EXT: Integer; cdecl;
    {class} function _GetGL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES: Integer; cdecl;
    {class} function _GetGL_INT_SAMPLER_BUFFER_EXT: Integer; cdecl;
    {class} function _GetGL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT: Integer; cdecl;
    {class} function _GetGL_ISOLINES_EXT: Integer; cdecl;
    {class} function _GetGL_IS_PER_PATCH_EXT: Integer; cdecl;
    {class} function _GetGL_LAST_VERTEX_CONVENTION_EXT: Integer; cdecl;
    {class} function _GetGL_LAYER_PROVOKING_VERTEX_EXT: Integer; cdecl;
    {class} function _GetGL_LIGHTEN_KHR: Integer; cdecl;
    {class} function _GetGL_LINES_ADJACENCY_EXT: Integer; cdecl;
    {class} function _GetGL_LINE_STRIP_ADJACENCY_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR: Integer; cdecl;
    {class} function _GetGL_MAX_DEBUG_LOGGED_MESSAGES_KHR: Integer; cdecl;
    {class} function _GetGL_MAX_DEBUG_MESSAGE_LENGTH_KHR: Integer; cdecl;
    {class} function _GetGL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES: Integer; cdecl;
    {class} function _GetGL_MAX_FRAMEBUFFER_LAYERS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_LABEL_LENGTH_KHR: Integer; cdecl;
    {class} function _GetGL_MAX_PATCH_VERTICES_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_GEN_LEVEL_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TESS_PATCH_COMPONENTS_EXT: Integer; cdecl;
    {class} function _GetGL_MAX_TEXTURE_BUFFER_SIZE_EXT: Integer; cdecl;
    {class} function _GetGL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES: Integer; cdecl;
    {class} function _GetGL_MIN_SAMPLE_SHADING_VALUE_OES: Integer; cdecl;
    {class} function _GetGL_MULTIPLY_KHR: Integer; cdecl;
    {class} function _GetGL_OVERLAY_KHR: Integer; cdecl;
    {class} function _GetGL_PATCHES_EXT: Integer; cdecl;
    {class} function _GetGL_PATCH_VERTICES_EXT: Integer; cdecl;
    {class} function _GetGL_PRIMITIVES_GENERATED_EXT: Integer; cdecl;
    {class} function _GetGL_PRIMITIVE_BOUNDING_BOX_EXT: Integer; cdecl;
    {class} function _GetGL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED: Integer; cdecl;
    {class} function _GetGL_PROGRAM_KHR: Integer; cdecl;
    {class} function _GetGL_QUADS_EXT: Integer; cdecl;
    {class} function _GetGL_QUERY_KHR: Integer; cdecl;
    {class} function _GetGL_REFERENCED_BY_GEOMETRY_SHADER_EXT: Integer; cdecl;
    {class} function _GetGL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT: Integer; cdecl;
    {class} function _GetGL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT: Integer; cdecl;
    {class} function _GetGL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES: Integer; cdecl;
    {class} function _GetGL_SAMPLER_BUFFER_EXT: Integer; cdecl;
    {class} function _GetGL_SAMPLER_CUBE_MAP_ARRAY_EXT: Integer; cdecl;
    {class} function _GetGL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT: Integer; cdecl;
    {class} function _GetGL_SAMPLER_KHR: Integer; cdecl;
    {class} function _GetGL_SAMPLE_SHADING_OES: Integer; cdecl;
    {class} function _GetGL_SCREEN_KHR: Integer; cdecl;
    {class} function _GetGL_SHADER_KHR: Integer; cdecl;
    {class} function _GetGL_SKIP_DECODE_EXT: Integer; cdecl;
    {class} function _GetGL_SOFTLIGHT_KHR: Integer; cdecl;
    {class} function _GetGL_STACK_OVERFLOW_KHR: Integer; cdecl;
    {class} function _GetGL_STACK_UNDERFLOW_KHR: Integer; cdecl;
    {class} function _GetGL_STENCIL_INDEX8_OES: Integer; cdecl;
    {class} function _GetGL_STENCIL_INDEX_OES: Integer; cdecl;
    {class} function _GetGL_TESS_CONTROL_OUTPUT_VERTICES_EXT: Integer; cdecl;
    {class} function _GetGL_TESS_CONTROL_SHADER_BIT_EXT: Integer; cdecl;
    {class} function _GetGL_TESS_CONTROL_SHADER_EXT: Integer; cdecl;
    {class} function _GetGL_TESS_EVALUATION_SHADER_BIT_EXT: Integer; cdecl;
    {class} function _GetGL_TESS_EVALUATION_SHADER_EXT: Integer; cdecl;
    {class} function _GetGL_TESS_GEN_MODE_EXT: Integer; cdecl;
    {class} function _GetGL_TESS_GEN_POINT_MODE_EXT: Integer; cdecl;
    {class} function _GetGL_TESS_GEN_SPACING_EXT: Integer; cdecl;
    {class} function _GetGL_TESS_GEN_VERTEX_ORDER_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_BUFFER_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BORDER_COLOR_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BUFFER_BINDING_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BUFFER_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BUFFER_OFFSET_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_BUFFER_SIZE_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_CUBE_MAP_ARRAY_EXT: Integer; cdecl;
    {class} function _GetGL_TEXTURE_SRGB_DECODE_EXT: Integer; cdecl;
    {class} function _GetGL_TRIANGLES_ADJACENCY_EXT: Integer; cdecl;
    {class} function _GetGL_TRIANGLE_STRIP_ADJACENCY_EXT: Integer; cdecl;
    {class} function _GetGL_UNDEFINED_VERTEX_EXT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_IMAGE_BUFFER_EXT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_SAMPLER_BUFFER_EXT: Integer; cdecl;
    {class} function _GetGL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT: Integer; cdecl;
    {class} function _GetGL_VERTEX_ARRAY_KHR: Integer; cdecl;
    {class} procedure glBlendBarrierKHR; cdecl;
    {class} procedure glBlendEquationSeparateiEXT(buf: Integer; modeRGB: Integer; modeAlpha: Integer); cdecl;
    {class} procedure glBlendEquationiEXT(buf: Integer; mode: Integer); cdecl;
    {class} procedure glBlendFuncSeparateiEXT(buf: Integer; srcRGB: Integer; dstRGB: Integer; srcAlpha: Integer; dstAlpha: Integer); cdecl;
    {class} procedure glBlendFunciEXT(buf: Integer; src: Integer; dst: Integer); cdecl;
    {class} procedure glColorMaskiEXT(index: Integer; r: Boolean; g: Boolean; b: Boolean; a: Boolean); cdecl;
    {class} procedure glCopyImageSubDataEXT(srcName: Integer; srcTarget: Integer; srcLevel: Integer; srcX: Integer; srcY: Integer; srcZ: Integer; dstName: Integer; dstTarget: Integer; dstLevel: Integer; dstX: Integer; dstY: Integer; dstZ: Integer; srcWidth: Integer; srcHeight: Integer; srcDepth: Integer); cdecl;
    {class} procedure glDebugMessageCallbackKHR(callback: JGLES31Ext_DebugProcKHR); cdecl;
    {class} procedure glDebugMessageControlKHR(source: Integer; type_: Integer; severity: Integer; count: Integer; ids: TJavaArray<Integer>; offset: Integer; enabled: Boolean); cdecl; overload;
    {class} procedure glDebugMessageControlKHR(source: Integer; type_: Integer; severity: Integer; count: Integer; ids: JIntBuffer; enabled: Boolean); cdecl; overload;
    {class} procedure glDebugMessageInsertKHR(source: Integer; type_: Integer; id: Integer; severity: Integer; buf: JString); cdecl;
    {class} procedure glDisableiEXT(target: Integer; index: Integer); cdecl;
    {class} procedure glEnableiEXT(target: Integer; index: Integer); cdecl;
    {class} procedure glFramebufferTextureEXT(target: Integer; attachment: Integer; texture: Integer; level: Integer); cdecl;
    {class} function glGetDebugMessageCallbackKHR: JGLES31Ext_DebugProcKHR; cdecl;
    {class} function glGetDebugMessageLogKHR(count: Integer; bufSize: Integer; sources: TJavaArray<Integer>; sourcesOffset: Integer; types: TJavaArray<Integer>; typesOffset: Integer; ids: TJavaArray<Integer>; idsOffset: Integer; severities: TJavaArray<Integer>; severitiesOffset: Integer; lengths: TJavaArray<Integer>; lengthsOffset: Integer; messageLog: TJavaArray<Byte>; messageLogOffset: Integer): Integer; cdecl; overload;
    {class} function glGetDebugMessageLogKHR(count: Integer; sources: JIntBuffer; types: JIntBuffer; ids: JIntBuffer; severities: JIntBuffer; lengths: JIntBuffer; messageLog: JByteBuffer): Integer; cdecl; overload;
    {class} function glGetDebugMessageLogKHR(count: Integer; sources: TJavaArray<Integer>; sourcesOffset: Integer; types: TJavaArray<Integer>; typesOffset: Integer; ids: TJavaArray<Integer>; idsOffset: Integer; severities: TJavaArray<Integer>; severitiesOffset: Integer): TJavaObjectArray<JString>; cdecl; overload;
    {class} function glGetDebugMessageLogKHR(count: Integer; sources: JIntBuffer; types: JIntBuffer; ids: JIntBuffer; severities: JIntBuffer): TJavaObjectArray<JString>; cdecl; overload;
    {class} function glGetObjectLabelKHR(identifier: Integer; name: Integer): JString; cdecl;
    {class} function glGetObjectPtrLabelKHR(ptr: Int64): JString; cdecl;
    {class} procedure glGetSamplerParameterIivEXT(sampler: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetSamplerParameterIivEXT(sampler: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetSamplerParameterIuivEXT(sampler: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetSamplerParameterIuivEXT(sampler: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexParameterIivEXT(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexParameterIivEXT(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glGetTexParameterIuivEXT(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glGetTexParameterIuivEXT(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} function glIsEnablediEXT(target: Integer; index: Integer): Boolean; cdecl;
    {class} procedure glMinSampleShadingOES(value: Single); cdecl;
    {class} procedure glObjectLabelKHR(identifier: Integer; name: Integer; length: Integer; label_: JString); cdecl;
    {class} procedure glObjectPtrLabelKHR(ptr: Int64; label_: JString); cdecl;
    {class} procedure glPatchParameteriEXT(pname: Integer; value: Integer); cdecl;
    {class} procedure glPopDebugGroupKHR; cdecl;
    {class} procedure glPrimitiveBoundingBoxEXT(minX: Single; minY: Single; minZ: Single; minW: Single; maxX: Single; maxY: Single; maxZ: Single; maxW: Single); cdecl;
    {class} procedure glPushDebugGroupKHR(source: Integer; id: Integer; length: Integer; message: JString); cdecl;
    {class} procedure glSamplerParameterIivEXT(sampler: Integer; pname: Integer; param: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glSamplerParameterIivEXT(sampler: Integer; pname: Integer; param: JIntBuffer); cdecl; overload;
    {class} procedure glSamplerParameterIuivEXT(sampler: Integer; pname: Integer; param: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glSamplerParameterIuivEXT(sampler: Integer; pname: Integer; param: JIntBuffer); cdecl; overload;
    {class} procedure glTexBufferEXT(target: Integer; internalformat: Integer; buffer: Integer); cdecl;
    {class} procedure glTexBufferRangeEXT(target: Integer; internalformat: Integer; buffer: Integer; offset: Integer; size: Integer); cdecl;
    {class} procedure glTexParameterIivEXT(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexParameterIivEXT(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexParameterIuivEXT(target: Integer; pname: Integer; params: TJavaArray<Integer>; offset: Integer); cdecl; overload;
    {class} procedure glTexParameterIuivEXT(target: Integer; pname: Integer; params: JIntBuffer); cdecl; overload;
    {class} procedure glTexStorage3DMultisampleOES(target: Integer; samples: Integer; internalformat: Integer; width: Integer; height: Integer; depth: Integer; fixedsamplelocations: Boolean); cdecl;
    {class} property GL_BLEND_ADVANCED_COHERENT_KHR: Integer read _GetGL_BLEND_ADVANCED_COHERENT_KHR;
    {class} property GL_BUFFER_KHR: Integer read _GetGL_BUFFER_KHR;
    {class} property GL_CLAMP_TO_BORDER_EXT: Integer read _GetGL_CLAMP_TO_BORDER_EXT;
    {class} property GL_COLORBURN_KHR: Integer read _GetGL_COLORBURN_KHR;
    {class} property GL_COLORDODGE_KHR: Integer read _GetGL_COLORDODGE_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_10x10_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_10x10_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_10x5_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_10x5_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_10x6_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_10x6_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_10x8_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_10x8_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_12x10_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_12x10_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_12x12_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_12x12_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_4x4_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_4x4_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_5x4_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_5x4_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_5x5_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_5x5_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_6x5_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_6x5_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_6x6_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_6x6_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_8x5_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_8x5_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_8x6_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_8x6_KHR;
    {class} property GL_COMPRESSED_RGBA_ASTC_8x8_KHR: Integer read _GetGL_COMPRESSED_RGBA_ASTC_8x8_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;
    {class} property GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: Integer read _GetGL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;
    {class} property GL_CONTEXT_FLAG_DEBUG_BIT_KHR: Integer read _GetGL_CONTEXT_FLAG_DEBUG_BIT_KHR;
    {class} property GL_DARKEN_KHR: Integer read _GetGL_DARKEN_KHR;
    {class} property GL_DEBUG_CALLBACK_FUNCTION_KHR: Integer read _GetGL_DEBUG_CALLBACK_FUNCTION_KHR;
    {class} property GL_DEBUG_CALLBACK_USER_PARAM_KHR: Integer read _GetGL_DEBUG_CALLBACK_USER_PARAM_KHR;
    {class} property GL_DEBUG_GROUP_STACK_DEPTH_KHR: Integer read _GetGL_DEBUG_GROUP_STACK_DEPTH_KHR;
    {class} property GL_DEBUG_LOGGED_MESSAGES_KHR: Integer read _GetGL_DEBUG_LOGGED_MESSAGES_KHR;
    {class} property GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR: Integer read _GetGL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR;
    {class} property GL_DEBUG_OUTPUT_KHR: Integer read _GetGL_DEBUG_OUTPUT_KHR;
    {class} property GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR: Integer read _GetGL_DEBUG_OUTPUT_SYNCHRONOUS_KHR;
    {class} property GL_DEBUG_SEVERITY_HIGH_KHR: Integer read _GetGL_DEBUG_SEVERITY_HIGH_KHR;
    {class} property GL_DEBUG_SEVERITY_LOW_KHR: Integer read _GetGL_DEBUG_SEVERITY_LOW_KHR;
    {class} property GL_DEBUG_SEVERITY_MEDIUM_KHR: Integer read _GetGL_DEBUG_SEVERITY_MEDIUM_KHR;
    {class} property GL_DEBUG_SEVERITY_NOTIFICATION_KHR: Integer read _GetGL_DEBUG_SEVERITY_NOTIFICATION_KHR;
    {class} property GL_DEBUG_SOURCE_API_KHR: Integer read _GetGL_DEBUG_SOURCE_API_KHR;
    {class} property GL_DEBUG_SOURCE_APPLICATION_KHR: Integer read _GetGL_DEBUG_SOURCE_APPLICATION_KHR;
    {class} property GL_DEBUG_SOURCE_OTHER_KHR: Integer read _GetGL_DEBUG_SOURCE_OTHER_KHR;
    {class} property GL_DEBUG_SOURCE_SHADER_COMPILER_KHR: Integer read _GetGL_DEBUG_SOURCE_SHADER_COMPILER_KHR;
    {class} property GL_DEBUG_SOURCE_THIRD_PARTY_KHR: Integer read _GetGL_DEBUG_SOURCE_THIRD_PARTY_KHR;
    {class} property GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR: Integer read _GetGL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR;
    {class} property GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR: Integer read _GetGL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR;
    {class} property GL_DEBUG_TYPE_ERROR_KHR: Integer read _GetGL_DEBUG_TYPE_ERROR_KHR;
    {class} property GL_DEBUG_TYPE_MARKER_KHR: Integer read _GetGL_DEBUG_TYPE_MARKER_KHR;
    {class} property GL_DEBUG_TYPE_OTHER_KHR: Integer read _GetGL_DEBUG_TYPE_OTHER_KHR;
    {class} property GL_DEBUG_TYPE_PERFORMANCE_KHR: Integer read _GetGL_DEBUG_TYPE_PERFORMANCE_KHR;
    {class} property GL_DEBUG_TYPE_POP_GROUP_KHR: Integer read _GetGL_DEBUG_TYPE_POP_GROUP_KHR;
    {class} property GL_DEBUG_TYPE_PORTABILITY_KHR: Integer read _GetGL_DEBUG_TYPE_PORTABILITY_KHR;
    {class} property GL_DEBUG_TYPE_PUSH_GROUP_KHR: Integer read _GetGL_DEBUG_TYPE_PUSH_GROUP_KHR;
    {class} property GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR: Integer read _GetGL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR;
    {class} property GL_DECODE_EXT: Integer read _GetGL_DECODE_EXT;
    {class} property GL_DIFFERENCE_KHR: Integer read _GetGL_DIFFERENCE_KHR;
    {class} property GL_EXCLUSION_KHR: Integer read _GetGL_EXCLUSION_KHR;
    {class} property GL_FIRST_VERTEX_CONVENTION_EXT: Integer read _GetGL_FIRST_VERTEX_CONVENTION_EXT;
    {class} property GL_FRACTIONAL_EVEN_EXT: Integer read _GetGL_FRACTIONAL_EVEN_EXT;
    {class} property GL_FRACTIONAL_ODD_EXT: Integer read _GetGL_FRACTIONAL_ODD_EXT;
    {class} property GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES: Integer read _GetGL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES;
    {class} property GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT: Integer read _GetGL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT;
    {class} property GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT: Integer read _GetGL_FRAMEBUFFER_DEFAULT_LAYERS_EXT;
    {class} property GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT: Integer read _GetGL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT;
    {class} property GL_GEOMETRY_LINKED_INPUT_TYPE_EXT: Integer read _GetGL_GEOMETRY_LINKED_INPUT_TYPE_EXT;
    {class} property GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT: Integer read _GetGL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT;
    {class} property GL_GEOMETRY_LINKED_VERTICES_OUT_EXT: Integer read _GetGL_GEOMETRY_LINKED_VERTICES_OUT_EXT;
    {class} property GL_GEOMETRY_SHADER_BIT_EXT: Integer read _GetGL_GEOMETRY_SHADER_BIT_EXT;
    {class} property GL_GEOMETRY_SHADER_EXT: Integer read _GetGL_GEOMETRY_SHADER_EXT;
    {class} property GL_GEOMETRY_SHADER_INVOCATIONS_EXT: Integer read _GetGL_GEOMETRY_SHADER_INVOCATIONS_EXT;
    {class} property GL_HARDLIGHT_KHR: Integer read _GetGL_HARDLIGHT_KHR;
    {class} property GL_HSL_COLOR_KHR: Integer read _GetGL_HSL_COLOR_KHR;
    {class} property GL_HSL_HUE_KHR: Integer read _GetGL_HSL_HUE_KHR;
    {class} property GL_HSL_LUMINOSITY_KHR: Integer read _GetGL_HSL_LUMINOSITY_KHR;
    {class} property GL_HSL_SATURATION_KHR: Integer read _GetGL_HSL_SATURATION_KHR;
    {class} property GL_IMAGE_BUFFER_EXT: Integer read _GetGL_IMAGE_BUFFER_EXT;
    {class} property GL_IMAGE_CUBE_MAP_ARRAY_EXT: Integer read _GetGL_IMAGE_CUBE_MAP_ARRAY_EXT;
    {class} property GL_INT_IMAGE_BUFFER_EXT: Integer read _GetGL_INT_IMAGE_BUFFER_EXT;
    {class} property GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT: Integer read _GetGL_INT_IMAGE_CUBE_MAP_ARRAY_EXT;
    {class} property GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES: Integer read _GetGL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES;
    {class} property GL_INT_SAMPLER_BUFFER_EXT: Integer read _GetGL_INT_SAMPLER_BUFFER_EXT;
    {class} property GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT: Integer read _GetGL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT;
    {class} property GL_ISOLINES_EXT: Integer read _GetGL_ISOLINES_EXT;
    {class} property GL_IS_PER_PATCH_EXT: Integer read _GetGL_IS_PER_PATCH_EXT;
    {class} property GL_LAST_VERTEX_CONVENTION_EXT: Integer read _GetGL_LAST_VERTEX_CONVENTION_EXT;
    {class} property GL_LAYER_PROVOKING_VERTEX_EXT: Integer read _GetGL_LAYER_PROVOKING_VERTEX_EXT;
    {class} property GL_LIGHTEN_KHR: Integer read _GetGL_LIGHTEN_KHR;
    {class} property GL_LINES_ADJACENCY_EXT: Integer read _GetGL_LINES_ADJACENCY_EXT;
    {class} property GL_LINE_STRIP_ADJACENCY_EXT: Integer read _GetGL_LINE_STRIP_ADJACENCY_EXT;
    {class} property GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT: Integer read _GetGL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT;
    {class} property GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT: Integer read _GetGL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT;
    {class} property GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT: Integer read _GetGL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT;
    {class} property GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR: Integer read _GetGL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR;
    {class} property GL_MAX_DEBUG_LOGGED_MESSAGES_KHR: Integer read _GetGL_MAX_DEBUG_LOGGED_MESSAGES_KHR;
    {class} property GL_MAX_DEBUG_MESSAGE_LENGTH_KHR: Integer read _GetGL_MAX_DEBUG_MESSAGE_LENGTH_KHR;
    {class} property GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES: Integer read _GetGL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES;
    {class} property GL_MAX_FRAMEBUFFER_LAYERS_EXT: Integer read _GetGL_MAX_FRAMEBUFFER_LAYERS_EXT;
    {class} property GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT: Integer read _GetGL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT;
    {class} property GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT: Integer read _GetGL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT;
    {class} property GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT: Integer read _GetGL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT;
    {class} property GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT: Integer read _GetGL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT;
    {class} property GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT: Integer read _GetGL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT;
    {class} property GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT: Integer read _GetGL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT;
    {class} property GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT: Integer read _GetGL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT;
    {class} property GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT: Integer read _GetGL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT;
    {class} property GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT: Integer read _GetGL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT;
    {class} property GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT: Integer read _GetGL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT;
    {class} property GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT: Integer read _GetGL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT;
    {class} property GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT: Integer read _GetGL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT;
    {class} property GL_MAX_LABEL_LENGTH_KHR: Integer read _GetGL_MAX_LABEL_LENGTH_KHR;
    {class} property GL_MAX_PATCH_VERTICES_EXT: Integer read _GetGL_MAX_PATCH_VERTICES_EXT;
    {class} property GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT;
    {class} property GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT;
    {class} property GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT;
    {class} property GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT;
    {class} property GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT;
    {class} property GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT;
    {class} property GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT;
    {class} property GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT;
    {class} property GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT;
    {class} property GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT: Integer read _GetGL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT;
    {class} property GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT: Integer read _GetGL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT;
    {class} property GL_MAX_TESS_GEN_LEVEL_EXT: Integer read _GetGL_MAX_TESS_GEN_LEVEL_EXT;
    {class} property GL_MAX_TESS_PATCH_COMPONENTS_EXT: Integer read _GetGL_MAX_TESS_PATCH_COMPONENTS_EXT;
    {class} property GL_MAX_TEXTURE_BUFFER_SIZE_EXT: Integer read _GetGL_MAX_TEXTURE_BUFFER_SIZE_EXT;
    {class} property GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES: Integer read _GetGL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES;
    {class} property GL_MIN_SAMPLE_SHADING_VALUE_OES: Integer read _GetGL_MIN_SAMPLE_SHADING_VALUE_OES;
    {class} property GL_MULTIPLY_KHR: Integer read _GetGL_MULTIPLY_KHR;
    {class} property GL_OVERLAY_KHR: Integer read _GetGL_OVERLAY_KHR;
    {class} property GL_PATCHES_EXT: Integer read _GetGL_PATCHES_EXT;
    {class} property GL_PATCH_VERTICES_EXT: Integer read _GetGL_PATCH_VERTICES_EXT;
    {class} property GL_PRIMITIVES_GENERATED_EXT: Integer read _GetGL_PRIMITIVES_GENERATED_EXT;
    {class} property GL_PRIMITIVE_BOUNDING_BOX_EXT: Integer read _GetGL_PRIMITIVE_BOUNDING_BOX_EXT;
    {class} property GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED: Integer read _GetGL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED;
    {class} property GL_PROGRAM_KHR: Integer read _GetGL_PROGRAM_KHR;
    {class} property GL_QUADS_EXT: Integer read _GetGL_QUADS_EXT;
    {class} property GL_QUERY_KHR: Integer read _GetGL_QUERY_KHR;
    {class} property GL_REFERENCED_BY_GEOMETRY_SHADER_EXT: Integer read _GetGL_REFERENCED_BY_GEOMETRY_SHADER_EXT;
    {class} property GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT: Integer read _GetGL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT;
    {class} property GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT: Integer read _GetGL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT;
    {class} property GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES: Integer read _GetGL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES;
    {class} property GL_SAMPLER_BUFFER_EXT: Integer read _GetGL_SAMPLER_BUFFER_EXT;
    {class} property GL_SAMPLER_CUBE_MAP_ARRAY_EXT: Integer read _GetGL_SAMPLER_CUBE_MAP_ARRAY_EXT;
    {class} property GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT: Integer read _GetGL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT;
    {class} property GL_SAMPLER_KHR: Integer read _GetGL_SAMPLER_KHR;
    {class} property GL_SAMPLE_SHADING_OES: Integer read _GetGL_SAMPLE_SHADING_OES;
    {class} property GL_SCREEN_KHR: Integer read _GetGL_SCREEN_KHR;
    {class} property GL_SHADER_KHR: Integer read _GetGL_SHADER_KHR;
    {class} property GL_SKIP_DECODE_EXT: Integer read _GetGL_SKIP_DECODE_EXT;
    {class} property GL_SOFTLIGHT_KHR: Integer read _GetGL_SOFTLIGHT_KHR;
    {class} property GL_STACK_OVERFLOW_KHR: Integer read _GetGL_STACK_OVERFLOW_KHR;
    {class} property GL_STACK_UNDERFLOW_KHR: Integer read _GetGL_STACK_UNDERFLOW_KHR;
    {class} property GL_STENCIL_INDEX8_OES: Integer read _GetGL_STENCIL_INDEX8_OES;
    {class} property GL_STENCIL_INDEX_OES: Integer read _GetGL_STENCIL_INDEX_OES;
    {class} property GL_TESS_CONTROL_OUTPUT_VERTICES_EXT: Integer read _GetGL_TESS_CONTROL_OUTPUT_VERTICES_EXT;
    {class} property GL_TESS_CONTROL_SHADER_BIT_EXT: Integer read _GetGL_TESS_CONTROL_SHADER_BIT_EXT;
    {class} property GL_TESS_CONTROL_SHADER_EXT: Integer read _GetGL_TESS_CONTROL_SHADER_EXT;
    {class} property GL_TESS_EVALUATION_SHADER_BIT_EXT: Integer read _GetGL_TESS_EVALUATION_SHADER_BIT_EXT;
    {class} property GL_TESS_EVALUATION_SHADER_EXT: Integer read _GetGL_TESS_EVALUATION_SHADER_EXT;
    {class} property GL_TESS_GEN_MODE_EXT: Integer read _GetGL_TESS_GEN_MODE_EXT;
    {class} property GL_TESS_GEN_POINT_MODE_EXT: Integer read _GetGL_TESS_GEN_POINT_MODE_EXT;
    {class} property GL_TESS_GEN_SPACING_EXT: Integer read _GetGL_TESS_GEN_SPACING_EXT;
    {class} property GL_TESS_GEN_VERTEX_ORDER_EXT: Integer read _GetGL_TESS_GEN_VERTEX_ORDER_EXT;
    {class} property GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES: Integer read _GetGL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES;
    {class} property GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES: Integer read _GetGL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES;
    {class} property GL_TEXTURE_BINDING_BUFFER_EXT: Integer read _GetGL_TEXTURE_BINDING_BUFFER_EXT;
    {class} property GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT: Integer read _GetGL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT;
    {class} property GL_TEXTURE_BORDER_COLOR_EXT: Integer read _GetGL_TEXTURE_BORDER_COLOR_EXT;
    {class} property GL_TEXTURE_BUFFER_BINDING_EXT: Integer read _GetGL_TEXTURE_BUFFER_BINDING_EXT;
    {class} property GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT: Integer read _GetGL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT;
    {class} property GL_TEXTURE_BUFFER_EXT: Integer read _GetGL_TEXTURE_BUFFER_EXT;
    {class} property GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT: Integer read _GetGL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT;
    {class} property GL_TEXTURE_BUFFER_OFFSET_EXT: Integer read _GetGL_TEXTURE_BUFFER_OFFSET_EXT;
    {class} property GL_TEXTURE_BUFFER_SIZE_EXT: Integer read _GetGL_TEXTURE_BUFFER_SIZE_EXT;
    {class} property GL_TEXTURE_CUBE_MAP_ARRAY_EXT: Integer read _GetGL_TEXTURE_CUBE_MAP_ARRAY_EXT;
    {class} property GL_TEXTURE_SRGB_DECODE_EXT: Integer read _GetGL_TEXTURE_SRGB_DECODE_EXT;
    {class} property GL_TRIANGLES_ADJACENCY_EXT: Integer read _GetGL_TRIANGLES_ADJACENCY_EXT;
    {class} property GL_TRIANGLE_STRIP_ADJACENCY_EXT: Integer read _GetGL_TRIANGLE_STRIP_ADJACENCY_EXT;
    {class} property GL_UNDEFINED_VERTEX_EXT: Integer read _GetGL_UNDEFINED_VERTEX_EXT;
    {class} property GL_UNSIGNED_INT_IMAGE_BUFFER_EXT: Integer read _GetGL_UNSIGNED_INT_IMAGE_BUFFER_EXT;
    {class} property GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT: Integer read _GetGL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT;
    {class} property GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES: Integer read _GetGL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES;
    {class} property GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT: Integer read _GetGL_UNSIGNED_INT_SAMPLER_BUFFER_EXT;
    {class} property GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT: Integer read _GetGL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT;
    {class} property GL_VERTEX_ARRAY_KHR: Integer read _GetGL_VERTEX_ARRAY_KHR;
  end;

  [JavaSignature('android/opengl/GLES31Ext')]
  JGLES31Ext = interface(JObject)
    ['{0A0B9045-27CE-420A-8B5D-3D92AAD1CF4A}']
  end;
  TJGLES31Ext = class(TJavaGenericImport<JGLES31ExtClass, JGLES31Ext>) end;

  JGLES31Ext_DebugProcKHRClass = interface(IJavaClass)
    ['{FCF53F5F-55C4-4AB9-914A-B9234E78A6E8}']
  end;

  [JavaSignature('android/opengl/GLES31Ext$DebugProcKHR')]
  JGLES31Ext_DebugProcKHR = interface(IJavaInstance)
    ['{E300468C-5411-4010-BEDA-5EC5B748C228}']
    procedure onMessage(source: Integer; type_: Integer; id: Integer; severity: Integer; message: JString); cdecl;
  end;
  TJGLES31Ext_DebugProcKHR = class(TJavaGenericImport<JGLES31Ext_DebugProcKHRClass, JGLES31Ext_DebugProcKHR>) end;

  JGLExceptionClass = interface(JRuntimeExceptionClass)
    ['{3125A88E-3ADF-4D9C-B145-B8AEB89658CD}']
    {class} function init(error: Integer): JGLException; cdecl; overload;
    {class} function init(error: Integer; string_: JString): JGLException; cdecl; overload;
  end;

  [JavaSignature('android/opengl/GLException')]
  JGLException = interface(JRuntimeException)
    ['{1779AF1E-76A0-4401-AA06-879864915F19}']
  end;
  TJGLException = class(TJavaGenericImport<JGLExceptionClass, JGLException>) end;

  JGLSurfaceViewClass = interface(JSurfaceViewClass)
    ['{63463E9C-6F3C-4267-AB08-75F38C2165EC}']
    {class} function _GetDEBUG_CHECK_GL_ERROR: Integer; cdecl;
    {class} function _GetDEBUG_LOG_GL_CALLS: Integer; cdecl;
    {class} function _GetRENDERMODE_CONTINUOUSLY: Integer; cdecl;
    {class} function _GetRENDERMODE_WHEN_DIRTY: Integer; cdecl;
    {class} function init(context: JContext): JGLSurfaceView; cdecl; overload;
    {class} function init(context: JContext; attrs: JAttributeSet): JGLSurfaceView; cdecl; overload;
    {class} property DEBUG_CHECK_GL_ERROR: Integer read _GetDEBUG_CHECK_GL_ERROR;
    {class} property DEBUG_LOG_GL_CALLS: Integer read _GetDEBUG_LOG_GL_CALLS;
    {class} property RENDERMODE_CONTINUOUSLY: Integer read _GetRENDERMODE_CONTINUOUSLY;
    {class} property RENDERMODE_WHEN_DIRTY: Integer read _GetRENDERMODE_WHEN_DIRTY;
  end;

  [JavaSignature('android/opengl/GLSurfaceView')]
  JGLSurfaceView = interface(JSurfaceView)
    ['{89634C91-C25A-47F1-9F63-1B86349BD676}']
    function getDebugFlags: Integer; cdecl;
    function getPreserveEGLContextOnPause: Boolean; cdecl;
    function getRenderMode: Integer; cdecl;
    procedure onPause; cdecl;
    procedure onResume; cdecl;
    procedure queueEvent(r: JRunnable); cdecl;
    procedure requestRender; cdecl;
    procedure setDebugFlags(debugFlags: Integer); cdecl;
    procedure setEGLConfigChooser(configChooser: JGLSurfaceView_EGLConfigChooser); cdecl; overload;
    procedure setEGLConfigChooser(needDepth: Boolean); cdecl; overload;
    procedure setEGLConfigChooser(redSize: Integer; greenSize: Integer; blueSize: Integer; alphaSize: Integer; depthSize: Integer; stencilSize: Integer); cdecl; overload;
    procedure setEGLContextClientVersion(version: Integer); cdecl;
    procedure setEGLContextFactory(factory: JGLSurfaceView_EGLContextFactory); cdecl;
    procedure setEGLWindowSurfaceFactory(factory: JGLSurfaceView_EGLWindowSurfaceFactory); cdecl;
    procedure setGLWrapper(glWrapper: JGLSurfaceView_GLWrapper); cdecl;
    procedure setPreserveEGLContextOnPause(preserveOnPause: Boolean); cdecl;
    procedure setRenderMode(renderMode: Integer); cdecl;
    procedure setRenderer(renderer: JGLSurfaceView_Renderer); cdecl;
    procedure surfaceChanged(holder: JSurfaceHolder; format: Integer; w: Integer; h: Integer); cdecl;
    procedure surfaceCreated(holder: JSurfaceHolder); cdecl;
    procedure surfaceDestroyed(holder: JSurfaceHolder); cdecl;
  end;
  TJGLSurfaceView = class(TJavaGenericImport<JGLSurfaceViewClass, JGLSurfaceView>) end;

  JGLSurfaceView_EGLConfigChooserClass = interface(IJavaClass)
    ['{A50E2BAD-797D-4F11-AF7A-2F9B1E9D975B}']
  end;

  [JavaSignature('android/opengl/GLSurfaceView$EGLConfigChooser')]
  JGLSurfaceView_EGLConfigChooser = interface(IJavaInstance)
    ['{34C89178-6D28-40CE-A5E4-20C433F5D871}']
    function chooseConfig(egl: JEGL10; display: JEGLDisplay): JEGLConfig; cdecl;
  end;
  TJGLSurfaceView_EGLConfigChooser = class(TJavaGenericImport<JGLSurfaceView_EGLConfigChooserClass, JGLSurfaceView_EGLConfigChooser>) end;

  JGLSurfaceView_EGLContextFactoryClass = interface(IJavaClass)
    ['{A2A6C144-BFC6-42FB-A2F9-9ADB73B3FDA4}']
  end;

  [JavaSignature('android/opengl/GLSurfaceView$EGLContextFactory')]
  JGLSurfaceView_EGLContextFactory = interface(IJavaInstance)
    ['{84229F89-FEA5-4E44-B2E0-F0D728C4A307}']
    function createContext(egl: JEGL10; display: JEGLDisplay; eglConfig: JEGLConfig): JEGLContext; cdecl;
    procedure destroyContext(egl: JEGL10; display: JEGLDisplay; context: JEGLContext); cdecl;
  end;
  TJGLSurfaceView_EGLContextFactory = class(TJavaGenericImport<JGLSurfaceView_EGLContextFactoryClass, JGLSurfaceView_EGLContextFactory>) end;

  JGLSurfaceView_EGLWindowSurfaceFactoryClass = interface(IJavaClass)
    ['{C942EC43-1E26-4355-89C2-2AF11A106E67}']
  end;

  [JavaSignature('android/opengl/GLSurfaceView$EGLWindowSurfaceFactory')]
  JGLSurfaceView_EGLWindowSurfaceFactory = interface(IJavaInstance)
    ['{7DD4EB8B-7244-477A-B1CA-92ACB9679FBE}']
    function createWindowSurface(egl: JEGL10; display: JEGLDisplay; config: JEGLConfig; nativeWindow: JObject): JEGLSurface; cdecl;
    procedure destroySurface(egl: JEGL10; display: JEGLDisplay; surface: JEGLSurface); cdecl;
  end;
  TJGLSurfaceView_EGLWindowSurfaceFactory = class(TJavaGenericImport<JGLSurfaceView_EGLWindowSurfaceFactoryClass, JGLSurfaceView_EGLWindowSurfaceFactory>) end;

  JGLSurfaceView_GLWrapperClass = interface(IJavaClass)
    ['{C178D1DB-2917-48D8-9F9E-EF01C799E8EB}']
  end;

  [JavaSignature('android/opengl/GLSurfaceView$GLWrapper')]
  JGLSurfaceView_GLWrapper = interface(IJavaInstance)
    ['{14B3F93A-06F9-44C0-AEA1-8B49C917B0A7}']
    function wrap(gl: JGL): JGL; cdecl;
  end;
  TJGLSurfaceView_GLWrapper = class(TJavaGenericImport<JGLSurfaceView_GLWrapperClass, JGLSurfaceView_GLWrapper>) end;

  JGLSurfaceView_RendererClass = interface(IJavaClass)
    ['{217726BB-8C84-479F-B023-74178C68EC53}']
  end;

  [JavaSignature('android/opengl/GLSurfaceView$Renderer')]
  JGLSurfaceView_Renderer = interface(IJavaInstance)
    ['{B2554C00-E9D5-49B0-9DFC-ED774863B255}']
    procedure onDrawFrame(gl: JGL10); cdecl;
    procedure onSurfaceChanged(gl: JGL10; width: Integer; height: Integer); cdecl;
    procedure onSurfaceCreated(gl: JGL10; config: JEGLConfig); cdecl;
  end;
  TJGLSurfaceView_Renderer = class(TJavaGenericImport<JGLSurfaceView_RendererClass, JGLSurfaceView_Renderer>) end;

  JGLUClass = interface(JObjectClass)
    ['{38DF26FD-6854-4A0B-A390-1247A628F094}']
    {class} function init: JGLU; cdecl;
    {class} function gluErrorString(error: Integer): JString; cdecl;
    {class} procedure gluLookAt(gl: JGL10; eyeX: Single; eyeY: Single; eyeZ: Single; centerX: Single; centerY: Single; centerZ: Single; upX: Single; upY: Single; upZ: Single); cdecl;
    {class} procedure gluOrtho2D(gl: JGL10; left: Single; right: Single; bottom: Single; top: Single); cdecl;
    {class} procedure gluPerspective(gl: JGL10; fovy: Single; aspect: Single; zNear: Single; zFar: Single); cdecl;
    {class} function gluProject(objX: Single; objY: Single; objZ: Single; model: TJavaArray<Single>; modelOffset: Integer; project: TJavaArray<Single>; projectOffset: Integer; view: TJavaArray<Integer>; viewOffset: Integer; win: TJavaArray<Single>; winOffset: Integer): Integer; cdecl;
    {class} function gluUnProject(winX: Single; winY: Single; winZ: Single; model: TJavaArray<Single>; modelOffset: Integer; project: TJavaArray<Single>; projectOffset: Integer; view: TJavaArray<Integer>; viewOffset: Integer; obj: TJavaArray<Single>; objOffset: Integer): Integer; cdecl;
  end;

  [JavaSignature('android/opengl/GLU')]
  JGLU = interface(JObject)
    ['{0E20BDE3-3902-49F7-9AD1-D665C1B13FBA}']
  end;
  TJGLU = class(TJavaGenericImport<JGLUClass, JGLU>) end;

  JGLUtilsClass = interface(JObjectClass)
    ['{81E5073C-57E6-43E4-A9D3-5408E7BD4BED}']
    {class} function getEGLErrorString(error: Integer): JString; cdecl;
    {class} function getInternalFormat(bitmap: JBitmap): Integer; cdecl;
    {class} function getType(bitmap: JBitmap): Integer; cdecl;
    {class} procedure texImage2D(target: Integer; level: Integer; internalformat: Integer; bitmap: JBitmap; border: Integer); cdecl; overload;
    {class} procedure texImage2D(target: Integer; level: Integer; internalformat: Integer; bitmap: JBitmap; type_: Integer; border: Integer); cdecl; overload;
    {class} procedure texImage2D(target: Integer; level: Integer; bitmap: JBitmap; border: Integer); cdecl; overload;
    {class} procedure texSubImage2D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; bitmap: JBitmap); cdecl; overload;
    {class} procedure texSubImage2D(target: Integer; level: Integer; xoffset: Integer; yoffset: Integer; bitmap: JBitmap; format: Integer; type_: Integer); cdecl; overload;
  end;

  [JavaSignature('android/opengl/GLUtils')]
  JGLUtils = interface(JObject)
    ['{74547182-0A71-406F-916A-12CA7D3B380F}']
  end;
  TJGLUtils = class(TJavaGenericImport<JGLUtilsClass, JGLUtils>) end;

  Jopengl_MatrixClass = interface(JObjectClass)
    ['{4EB67487-D94B-4FC1-95FA-26589B23C44C}']
    {class} function init: Jopengl_Matrix; cdecl;//Deprecated
    {class} procedure frustumM(m: TJavaArray<Single>; offset: Integer; left: Single; right: Single; bottom: Single; top: Single; near: Single; far: Single); cdecl;
    {class} function invertM(mInv: TJavaArray<Single>; mInvOffset: Integer; m: TJavaArray<Single>; mOffset: Integer): Boolean; cdecl;
    {class} function length(x: Single; y: Single; z: Single): Single; cdecl;
    {class} procedure multiplyMM(result: TJavaArray<Single>; resultOffset: Integer; lhs: TJavaArray<Single>; lhsOffset: Integer; rhs: TJavaArray<Single>; rhsOffset: Integer); cdecl;
    {class} procedure multiplyMV(resultVec: TJavaArray<Single>; resultVecOffset: Integer; lhsMat: TJavaArray<Single>; lhsMatOffset: Integer; rhsVec: TJavaArray<Single>; rhsVecOffset: Integer); cdecl;
    {class} procedure orthoM(m: TJavaArray<Single>; mOffset: Integer; left: Single; right: Single; bottom: Single; top: Single; near: Single; far: Single); cdecl;
    {class} procedure perspectiveM(m: TJavaArray<Single>; offset: Integer; fovy: Single; aspect: Single; zNear: Single; zFar: Single); cdecl;
    {class} procedure rotateM(rm: TJavaArray<Single>; rmOffset: Integer; m: TJavaArray<Single>; mOffset: Integer; a: Single; x: Single; y: Single; z: Single); cdecl; overload;
    {class} procedure rotateM(m: TJavaArray<Single>; mOffset: Integer; a: Single; x: Single; y: Single; z: Single); cdecl; overload;
    {class} procedure scaleM(sm: TJavaArray<Single>; smOffset: Integer; m: TJavaArray<Single>; mOffset: Integer; x: Single; y: Single; z: Single); cdecl; overload;
    {class} procedure scaleM(m: TJavaArray<Single>; mOffset: Integer; x: Single; y: Single; z: Single); cdecl; overload;
    {class} procedure setIdentityM(sm: TJavaArray<Single>; smOffset: Integer); cdecl;
    {class} procedure setLookAtM(rm: TJavaArray<Single>; rmOffset: Integer; eyeX: Single; eyeY: Single; eyeZ: Single; centerX: Single; centerY: Single; centerZ: Single; upX: Single; upY: Single; upZ: Single); cdecl;
    {class} procedure setRotateEulerM(rm: TJavaArray<Single>; rmOffset: Integer; x: Single; y: Single; z: Single); cdecl;
    {class} procedure setRotateM(rm: TJavaArray<Single>; rmOffset: Integer; a: Single; x: Single; y: Single; z: Single); cdecl;
    {class} procedure translateM(tm: TJavaArray<Single>; tmOffset: Integer; m: TJavaArray<Single>; mOffset: Integer; x: Single; y: Single; z: Single); cdecl; overload;
    {class} procedure translateM(m: TJavaArray<Single>; mOffset: Integer; x: Single; y: Single; z: Single); cdecl; overload;
    {class} procedure transposeM(mTrans: TJavaArray<Single>; mTransOffset: Integer; m: TJavaArray<Single>; mOffset: Integer); cdecl;
  end;

  [JavaSignature('android/opengl/Matrix')]
  Jopengl_Matrix = interface(JObject)
    ['{CFB1A8B7-3B83-4397-8FFA-5E7E733D6107}']
  end;
  TJopengl_Matrix = class(TJavaGenericImport<Jopengl_MatrixClass, Jopengl_Matrix>) end;

  JVisibilityClass = interface(JObjectClass)
    ['{6B76D3D5-276B-4DCE-8BE7-E8E4569C7FC2}']
    {class} function init: JVisibility; cdecl;
    {class} procedure computeBoundingSphere(positions: TJavaArray<Single>; positionsOffset: Integer; positionsCount: Integer; sphere: TJavaArray<Single>; sphereOffset: Integer); cdecl;
    {class} function frustumCullSpheres(mvp: TJavaArray<Single>; mvpOffset: Integer; spheres: TJavaArray<Single>; spheresOffset: Integer; spheresCount: Integer; results: TJavaArray<Integer>; resultsOffset: Integer; resultsCapacity: Integer): Integer; cdecl;
    {class} function visibilityTest(ws: TJavaArray<Single>; wsOffset: Integer; positions: TJavaArray<Single>; positionsOffset: Integer; indices: TJavaArray<Char>; indicesOffset: Integer; indexCount: Integer): Integer; cdecl;
  end;

  [JavaSignature('android/opengl/Visibility')]
  JVisibility = interface(JObject)
    ['{C7FA08CF-B60D-4208-BE44-C1A46B01B75D}']
  end;
  TJVisibility = class(TJavaGenericImport<JVisibilityClass, JVisibility>) end;

implementation

procedure RegisterTypes;
begin
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JEGL14', TypeInfo(Androidapi.JNI.OpenGL.JEGL14));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JEGLObjectHandle', TypeInfo(Androidapi.JNI.OpenGL.JEGLObjectHandle));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.Jopengl_EGLConfig', TypeInfo(Androidapi.JNI.OpenGL.Jopengl_EGLConfig));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.Jopengl_EGLContext', TypeInfo(Androidapi.JNI.OpenGL.Jopengl_EGLContext));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.Jopengl_EGLDisplay', TypeInfo(Androidapi.JNI.OpenGL.Jopengl_EGLDisplay));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JEGLExt', TypeInfo(Androidapi.JNI.OpenGL.JEGLExt));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.Jopengl_EGLSurface', TypeInfo(Androidapi.JNI.OpenGL.Jopengl_EGLSurface));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JETC1', TypeInfo(Androidapi.JNI.OpenGL.JETC1));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JETC1Util', TypeInfo(Androidapi.JNI.OpenGL.JETC1Util));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JETC1Util_ETC1Texture', TypeInfo(Androidapi.JNI.OpenGL.JETC1Util_ETC1Texture));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLDebugHelper', TypeInfo(Androidapi.JNI.OpenGL.JGLDebugHelper));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES10', TypeInfo(Androidapi.JNI.OpenGL.JGLES10));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES10Ext', TypeInfo(Androidapi.JNI.OpenGL.JGLES10Ext));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES11', TypeInfo(Androidapi.JNI.OpenGL.JGLES11));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES11Ext', TypeInfo(Androidapi.JNI.OpenGL.JGLES11Ext));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES20', TypeInfo(Androidapi.JNI.OpenGL.JGLES20));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES30', TypeInfo(Androidapi.JNI.OpenGL.JGLES30));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES31', TypeInfo(Androidapi.JNI.OpenGL.JGLES31));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES31Ext', TypeInfo(Androidapi.JNI.OpenGL.JGLES31Ext));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLES31Ext_DebugProcKHR', TypeInfo(Androidapi.JNI.OpenGL.JGLES31Ext_DebugProcKHR));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLException', TypeInfo(Androidapi.JNI.OpenGL.JGLException));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLSurfaceView', TypeInfo(Androidapi.JNI.OpenGL.JGLSurfaceView));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLSurfaceView_EGLConfigChooser', TypeInfo(Androidapi.JNI.OpenGL.JGLSurfaceView_EGLConfigChooser));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLSurfaceView_EGLContextFactory', TypeInfo(Androidapi.JNI.OpenGL.JGLSurfaceView_EGLContextFactory));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLSurfaceView_EGLWindowSurfaceFactory', TypeInfo(Androidapi.JNI.OpenGL.JGLSurfaceView_EGLWindowSurfaceFactory));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLSurfaceView_GLWrapper', TypeInfo(Androidapi.JNI.OpenGL.JGLSurfaceView_GLWrapper));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLSurfaceView_Renderer', TypeInfo(Androidapi.JNI.OpenGL.JGLSurfaceView_Renderer));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLU', TypeInfo(Androidapi.JNI.OpenGL.JGLU));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JGLUtils', TypeInfo(Androidapi.JNI.OpenGL.JGLUtils));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.Jopengl_Matrix', TypeInfo(Androidapi.JNI.OpenGL.Jopengl_Matrix));
  TRegTypes.RegisterType('Androidapi.JNI.OpenGL.JVisibility', TypeInfo(Androidapi.JNI.OpenGL.JVisibility));
end;

initialization
  RegisterTypes;
end.


