{**********************************************************}
{                                                          }
{           CodeGear Delphi Runtime Library                }
{                                                          }
{ Delphi-Objective-C Bridge                                }
{ Interfaces for Cocoa framework OpenGLES                  }
{                                                          }
{ Copyright (c) 2006-2008, Apple Inc. All rights reserved. }
{                                                          }
{ Translator: Embarcadero Technologies, Inc.               }
{ Copyright(c) 2016 Embarcadero Technologies, Inc.         }
{              All rights reserved                         }
{                                                          }
{**********************************************************}
{
** License Applicability. Except to the extent portions of this file are
** made subject to an alternative license as permitted in the SGI Free
** Software License B, Version 1.0 (the "License"), the contents of this
** file are subject only to the provisions of the License. You may not use
** this file except in compliance with the License. You may obtain a copy
** of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
** Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
**
** http://oss.sgi.com/projects/FreeB
**
** Note that, as provided in the License, the Software is distributed on an
** "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
** DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
** CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
** PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
**
** Original Code. The Original Code is: OpenGL Sample Implementation,
** Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
** Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
** Copyright in any portions created by third parties is as indicated
** elsewhere herein. All Rights Reserved.
**
** Additional Notice Provisions: The application programming interfaces
** established by SGI in conjunction with the Original Code are The
** OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
** April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
** 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
** Window System(R) (Version 1.3), released October 19, 1998. This software
** was created using the OpenGL(R) version 1.2.1 Sample Implementation
** published by SGI, but has not been independently verified as being
** compliant with the OpenGL(R) version 1.2.1 Specification.
}

unit iOSapi.OpenGLES;

interface

uses
  Macapi.ObjCRuntime, Macapi.ObjectiveC, iOSapi.Foundation, iOSapi.CocoaTypes;

const
  EAGL_MAJOR_VERSION = 1;
  EAGL_MINOR_VERSION = 0;
  GL_ACTIVE_ATTRIBUTES = 35721;
  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722;
  GL_ACTIVE_PROGRAM_EXT = 33369;
  GL_ACTIVE_TEXTURE = 34016;
  GL_ACTIVE_UNIFORMS = 35718;
  GL_ACTIVE_UNIFORM_MAX_LENGTH = 35719;
  GL_ADD = 260;
  GL_ADD_SIGNED = 34164;
  GL_ALIASED_LINE_WIDTH_RANGE = 33902;
  GL_ALIASED_POINT_SIZE_RANGE = 33901;
  GL_ALL_SHADER_BITS_EXT = 4294967295;
  GL_ALPHA = 6406;
  GL_ALPHA_BITS = 3413;
  GL_ALPHA_SCALE = 3356;
  GL_ALPHA_TEST = 3008;
  GL_ALPHA_TEST_FUNC = 3009;
  GL_ALPHA_TEST_REF = 3010;
  GL_ALWAYS = 519;
  GL_AMBIENT = 4608;
  GL_AMBIENT_AND_DIFFUSE = 5634;
  GL_AND = 5377;
  GL_AND_INVERTED = 5380;
  GL_AND_REVERSE = 5378;
  GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = 36202;
  GL_ANY_SAMPLES_PASSED_EXT = 35887;
  GL_APPLE_framebuffer_multisample = 1;
  GL_APPLE_rgb_422 = 1;
  GL_APPLE_texture_2D_limited_npot = 1;
  GL_APPLE_texture_format_BGRA8888 = 1;
  GL_APPLE_texture_max_level = 1;
  GL_ARRAY_BUFFER = 34962;
  GL_ARRAY_BUFFER_BINDING = 34964;
  GL_ATTACHED_SHADERS = 35717;
  GL_BACK = 1029;
  GL_BGRA = 32993;
  GL_BGRA_EXT = 32993;
  GL_BGRA_IMG = 32993;
  GL_BLEND = 3042;
  GL_BLEND_COLOR = 32773;
  GL_BLEND_DST = 3040;
  GL_BLEND_DST_ALPHA = 32970;
  GL_BLEND_DST_ALPHA_OES = 32970;
  GL_BLEND_DST_RGB = 32968;
  GL_BLEND_DST_RGB_OES = 32968;
  GL_BLEND_EQUATION = 32777;
  GL_BLEND_EQUATION_ALPHA = 34877;
  GL_BLEND_EQUATION_ALPHA_OES = 34877;
  GL_BLEND_EQUATION_OES = 32777;
  GL_BLEND_EQUATION_RGB = 32777;
  GL_BLEND_EQUATION_RGB_OES = 32777;
  GL_BLEND_SRC = 3041;
  GL_BLEND_SRC_ALPHA = 32971;
  GL_BLEND_SRC_ALPHA_OES = 32971;
  GL_BLEND_SRC_RGB = 32969;
  GL_BLEND_SRC_RGB_OES = 32969;
  GL_BLUE_BITS = 3412;
  GL_BOOL = 35670;
  GL_BOOL_VEC2 = 35671;
  GL_BOOL_VEC3 = 35672;
  GL_BOOL_VEC4 = 35673;
  GL_BUFFER_ACCESS_OES = 35003;
  GL_BUFFER_MAPPED_OES = 35004;
  GL_BUFFER_MAP_POINTER_OES = 35005;
  GL_BUFFER_OBJECT_EXT = 37201;
  GL_BUFFER_SIZE = 34660;
  GL_BUFFER_USAGE = 34661;
  GL_BYTE = 5120;
  GL_CCW = 2305;
  GL_CLAMP_TO_EDGE = 33071;
  GL_CLEAR = 5376;
  GL_CLIENT_ACTIVE_TEXTURE = 34017;
  GL_CLIP_PLANE0 = 12288;
  GL_CLIP_PLANE1 = 12289;
  GL_CLIP_PLANE2 = 12290;
  GL_CLIP_PLANE3 = 12291;
  GL_CLIP_PLANE4 = 12292;
  GL_CLIP_PLANE5 = 12293;
  GL_COLOR_ARRAY = 32886;
  GL_COLOR_ARRAY_BUFFER_BINDING = 34968;
  GL_COLOR_ARRAY_POINTER = 32912;
  GL_COLOR_ARRAY_SIZE = 32897;
  GL_COLOR_ARRAY_STRIDE = 32899;
  GL_COLOR_ARRAY_TYPE = 32898;
  GL_COLOR_ATTACHMENT0 = 36064;
  GL_COLOR_ATTACHMENT0_OES = 36064;
  GL_COLOR_BUFFER_BIT = 16384;
  GL_COLOR_CLEAR_VALUE = 3106;
  GL_COLOR_EXT = 6144;
  GL_COLOR_LOGIC_OP = 3058;
  GL_COLOR_MATERIAL = 2903;
  GL_COLOR_WRITEMASK = 3107;
  GL_COMBINE = 34160;
  GL_COMBINE_ALPHA = 34162;
  GL_COMBINE_RGB = 34161;
  GL_COMPARE_REF_TO_TEXTURE_EXT = 34894;
  GL_COMPILE_STATUS = 35713;
  GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 35843;
  GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 35842;
  GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 35841;
  GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 35840;
  GL_COMPRESSED_TEXTURE_FORMATS = 34467;
  GL_CONSTANT = 34166;
  GL_CONSTANT_ALPHA = 32771;
  GL_CONSTANT_ATTENUATION = 4615;
  GL_CONSTANT_COLOR = 32769;
  GL_COORD_REPLACE_OES = 34914;
  GL_COPY = 5379;
  GL_COPY_INVERTED = 5388;
  GL_CULL_FACE = 2884;
  GL_CULL_FACE_MODE = 2885;
  GL_CURRENT_COLOR = 2816;
  GL_CURRENT_NORMAL = 2818;
  GL_CURRENT_PALETTE_MATRIX_OES = 34883;
  GL_CURRENT_PROGRAM = 35725;
  GL_CURRENT_QUERY_EXT = 34917;
  GL_CURRENT_TEXTURE_COORDS = 2819;
  GL_CURRENT_VERTEX_ATTRIB = 34342;
  GL_CW = 2304;
  GL_DECAL = 8449;
  GL_DECR = 7683;
  GL_DECR_WRAP = 34056;
  GL_DECR_WRAP_OES = 34056;
  GL_DELETE_STATUS = 35712;
  GL_DEPTH24_STENCIL8_OES = 35056;
  GL_DEPTH_ATTACHMENT = 36096;
  GL_DEPTH_ATTACHMENT_OES = 36096;
  GL_DEPTH_BITS = 3414;
  GL_DEPTH_BUFFER_BIT = 256;
  GL_DEPTH_CLEAR_VALUE = 2931;
  GL_DEPTH_COMPONENT = 6402;
  GL_DEPTH_COMPONENT16 = 33189;
  GL_DEPTH_COMPONENT16_OES = 33189;
  GL_DEPTH_COMPONENT24_OES = 33190;
  GL_DEPTH_EXT = 6145;
  GL_DEPTH_FUNC = 2932;
  GL_DEPTH_RANGE = 2928;
  GL_DEPTH_STENCIL_OES = 34041;
  GL_DEPTH_TEST = 2929;
  GL_DEPTH_WRITEMASK = 2930;
  GL_DIFFUSE = 4609;
  GL_DITHER = 3024;
  GL_DONT_CARE = 4352;
  GL_DOT3_RGB = 34478;
  GL_DOT3_RGBA = 34479;
  GL_DRAW_FRAMEBUFFER_APPLE = 36009;
  GL_DRAW_FRAMEBUFFER_BINDING_APPLE = 36006;
  GL_DST_ALPHA = 772;
  GL_DST_COLOR = 774;
  GL_DYNAMIC_DRAW = 35048;
  GL_ELEMENT_ARRAY_BUFFER = 34963;
  GL_ELEMENT_ARRAY_BUFFER_BINDING = 34965;
  GL_EMISSION = 5632;
  GL_EQUAL = 514;
  GL_EQUIV = 5385;
  GL_ES_VERSION_2_0 = 1;
  GL_EXP = 2048;
  GL_EXP2 = 2049;
  GL_EXTENSIONS = 7939;
  GL_EXT_blend_minmax = 1;
  GL_EXT_color_buffer_half_float = 1;
  GL_EXT_debug_label = 1;
  GL_EXT_debug_marker = 1;
  GL_EXT_discard_framebuffer = 1;
  GL_EXT_occlusion_query_boolean = 1;
  GL_EXT_read_format_bgra = 1;
  GL_EXT_separate_shader_objects = 1;
  GL_EXT_shader_texture_lod = 1;
  GL_EXT_shadow_samplers = 1;
  GL_EXT_texture_filter_anisotropic = 1;
  GL_EXT_texture_lod_bias = 1;
  GL_EXT_texture_rg = 1;
  GL_FALSE = 0;
  GL_FASTEST = 4353;
  GL_FIXED = 5132;
  GL_FLAT = 7424;
  GL_FLOAT = 5126;
  GL_FLOAT_MAT2 = 35674;
  GL_FLOAT_MAT3 = 35675;
  GL_FLOAT_MAT4 = 35676;
  GL_FLOAT_VEC2 = 35664;
  GL_FLOAT_VEC3 = 35665;
  GL_FLOAT_VEC4 = 35666;
  GL_FOG = 2912;
  GL_FOG_COLOR = 2918;
  GL_FOG_DENSITY = 2914;
  GL_FOG_END = 2916;
  GL_FOG_HINT = 3156;
  GL_FOG_MODE = 2917;
  GL_FOG_START = 2915;
  GL_FRAGMENT_SHADER = 35632;
  GL_FRAGMENT_SHADER_BIT_EXT = 2;
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 35723;
  GL_FRAMEBUFFER = 36160;
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 33297;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = 36049;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = 36048;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = 36051;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = 36050;
  GL_FRAMEBUFFER_BINDING = 36006;
  GL_FRAMEBUFFER_BINDING_OES = 36006;
  GL_FRAMEBUFFER_COMPLETE = 36053;
  GL_FRAMEBUFFER_COMPLETE_OES = 36053;
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = 36054;
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = 36057;
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES = 36058;
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = 36055;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE = 36182;
  GL_FRAMEBUFFER_OES = 36160;
  GL_FRAMEBUFFER_UNSUPPORTED = 36061;
  GL_FRAMEBUFFER_UNSUPPORTED_OES = 36061;
  GL_FRONT = 1028;
  GL_FRONT_AND_BACK = 1032;
  GL_FRONT_FACE = 2886;
  GL_FUNC_ADD = 32774;
  GL_FUNC_ADD_OES = 32774;
  GL_FUNC_REVERSE_SUBTRACT = 32779;
  GL_FUNC_REVERSE_SUBTRACT_OES = 32779;
  GL_FUNC_SUBTRACT = 32778;
  GL_FUNC_SUBTRACT_OES = 32778;
  GL_GENERATE_MIPMAP = 33169;
  GL_GENERATE_MIPMAP_HINT = 33170;
  GL_GEQUAL = 518;
  GL_GREATER = 516;
  GL_GREEN_BITS = 3411;
  GL_HALF_FLOAT_OES = 36193;
  GL_HIGH_FLOAT = 36338;
  GL_HIGH_INT = 36341;
  GL_IMG_read_format = 1;
  GL_IMG_texture_compression_pvrtc = 1;
  GL_IMPLEMENTATION_COLOR_READ_FORMAT = 35739;
  GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 35739;
  GL_IMPLEMENTATION_COLOR_READ_TYPE = 35738;
  GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 35738;
  GL_INCR = 7682;
  GL_INCR_WRAP = 34055;
  GL_INCR_WRAP_OES = 34055;
  GL_INFO_LOG_LENGTH = 35716;
  GL_INT = 5124;
  GL_INTERPOLATE = 34165;
  GL_INT_VEC2 = 35667;
  GL_INT_VEC3 = 35668;
  GL_INT_VEC4 = 35669;
  GL_INVALID_ENUM = 1280;
  GL_INVALID_FRAMEBUFFER_OPERATION = 1286;
  GL_INVALID_FRAMEBUFFER_OPERATION_OES = 1286;
  GL_INVALID_OPERATION = 1282;
  GL_INVALID_VALUE = 1281;
  GL_INVERT = 5386;
  GL_KEEP = 7680;
  GL_LEQUAL = 515;
  GL_LESS = 513;
  GL_LIGHT0 = 16384;
  GL_LIGHT1 = 16385;
  GL_LIGHT2 = 16386;
  GL_LIGHT3 = 16387;
  GL_LIGHT4 = 16388;
  GL_LIGHT5 = 16389;
  GL_LIGHT6 = 16390;
  GL_LIGHT7 = 16391;
  GL_LIGHTING = 2896;
  GL_LIGHT_MODEL_AMBIENT = 2899;
  GL_LIGHT_MODEL_TWO_SIDE = 2898;
  GL_LINEAR = 9729;
  GL_LINEAR_ATTENUATION = 4616;
  GL_LINEAR_MIPMAP_LINEAR = 9987;
  GL_LINEAR_MIPMAP_NEAREST = 9985;
  GL_LINES = 1;
  GL_LINE_LOOP = 2;
  GL_LINE_SMOOTH = 2848;
  GL_LINE_SMOOTH_HINT = 3154;
  GL_LINE_STRIP = 3;
  GL_LINE_WIDTH = 2849;
  GL_LINK_STATUS = 35714;
  GL_LOGIC_OP_MODE = 3056;
  GL_LOW_FLOAT = 36336;
  GL_LOW_INT = 36339;
  GL_LUMINANCE = 6409;
  GL_LUMINANCE_ALPHA = 6410;
  GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = 35742;
  GL_MATRIX_INDEX_ARRAY_OES = 34884;
  GL_MATRIX_INDEX_ARRAY_POINTER_OES = 34889;
  GL_MATRIX_INDEX_ARRAY_SIZE_OES = 34886;
  GL_MATRIX_INDEX_ARRAY_STRIDE_OES = 34888;
  GL_MATRIX_INDEX_ARRAY_TYPE_OES = 34887;
  GL_MATRIX_MODE = 2976;
  GL_MATRIX_PALETTE_OES = 34880;
  GL_MAX_CLIP_PLANES = 3378;
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
  GL_MAX_EXT = 32776;
  GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
  GL_MAX_LIGHTS = 3377;
  GL_MAX_MODELVIEW_STACK_DEPTH = 3382;
  GL_MAX_PALETTE_MATRICES_OES = 34882;
  GL_MAX_PROJECTION_STACK_DEPTH = 3384;
  GL_MAX_RENDERBUFFER_SIZE = 34024;
  GL_MAX_RENDERBUFFER_SIZE_OES = 34024;
  GL_MAX_SAMPLES_APPLE = 36183;
  GL_MAX_TEXTURE_IMAGE_UNITS = 34930;
  GL_MAX_TEXTURE_LOD_BIAS_EXT = 34045;
  GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 34047;
  GL_MAX_TEXTURE_SIZE = 3379;
  GL_MAX_TEXTURE_STACK_DEPTH = 3385;
  GL_MAX_TEXTURE_UNITS = 34018;
  GL_MAX_VARYING_VECTORS = 36348;
  GL_MAX_VERTEX_ATTRIBS = 34921;
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
  GL_MAX_VERTEX_UNIFORM_VECTORS = 36347;
  GL_MAX_VERTEX_UNITS_OES = 34468;
  GL_MAX_VIEWPORT_DIMS = 3386;
  GL_MEDIUM_FLOAT = 36337;
  GL_MEDIUM_INT = 36340;
  GL_MIN_EXT = 32775;
  GL_MIRRORED_REPEAT = 33648;
  GL_MIRRORED_REPEAT_OES = 33648;
  GL_MODELVIEW = 5888;
  GL_MODELVIEW_MATRIX = 2982;
  GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = 35213;
  GL_MODELVIEW_STACK_DEPTH = 2979;
  GL_MODULATE = 8448;
  GL_MULTISAMPLE = 32925;
  GL_NAND = 5390;
  GL_NEAREST = 9728;
  GL_NEAREST_MIPMAP_LINEAR = 9986;
  GL_NEAREST_MIPMAP_NEAREST = 9984;
  GL_NEVER = 512;
  GL_NICEST = 4354;
  GL_NONE = 0;
  GL_NOOP = 5381;
  GL_NOR = 5384;
  GL_NORMALIZE = 2977;
  GL_NORMAL_ARRAY = 32885;
  GL_NORMAL_ARRAY_BUFFER_BINDING = 34967;
  GL_NORMAL_ARRAY_POINTER = 32911;
  GL_NORMAL_ARRAY_STRIDE = 32895;
  GL_NORMAL_ARRAY_TYPE = 32894;
  GL_NOTEQUAL = 517;
  GL_NO_ERROR = 0;
  GL_NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
  GL_NUM_SHADER_BINARY_FORMATS = 36345;
  GL_OES_VERSION_1_0 = 1;
  GL_OES_VERSION_1_1 = 1;
  GL_OES_blend_equation_separate = 1;
  GL_OES_blend_func_separate = 1;
  GL_OES_blend_subtract = 1;
  GL_OES_byte_coordinates = 1;
  GL_OES_compressed_paletted_texture = 1;
  GL_OES_depth24 = 1;
  GL_OES_depth_texture = 1;
  GL_OES_draw_texture = 1;
  GL_OES_element_index_uint = 1;
  GL_OES_fbo_render_mipmap = 1;
  GL_OES_fixed_point = 1;
  GL_OES_framebuffer_object = 1;
  GL_OES_mapbuffer = 1;
  GL_OES_matrix_get = 1;
  GL_OES_matrix_palette = 1;
  GL_OES_packed_depth_stencil = 1;
  GL_OES_point_size_array = 1;
  GL_OES_point_sprite = 1;
  GL_OES_read_format = 1;
  GL_OES_rgb8_rgba8 = 1;
  GL_OES_single_precision = 1;
  GL_OES_standard_derivatives = 1;
  GL_OES_stencil8 = 1;
  GL_OES_stencil_wrap = 1;
  GL_OES_texture_float = 1;
  GL_OES_texture_half_float = 1;
  GL_OES_texture_mirrored_repeat = 1;
  GL_OES_vertex_array_object = 1;
  GL_ONE = 1;
  GL_ONE_MINUS_CONSTANT_ALPHA = 32772;
  GL_ONE_MINUS_CONSTANT_COLOR = 32770;
  GL_ONE_MINUS_DST_ALPHA = 773;
  GL_ONE_MINUS_DST_COLOR = 775;
  GL_ONE_MINUS_SRC_ALPHA = 771;
  GL_ONE_MINUS_SRC_COLOR = 769;
  GL_OPERAND0_ALPHA = 34200;
  GL_OPERAND0_RGB = 34192;
  GL_OPERAND1_ALPHA = 34201;
  GL_OPERAND1_RGB = 34193;
  GL_OPERAND2_ALPHA = 34202;
  GL_OPERAND2_RGB = 34194;
  GL_OR = 5383;
  GL_OR_INVERTED = 5389;
  GL_OR_REVERSE = 5387;
  GL_OUT_OF_MEMORY = 1285;
  GL_PACK_ALIGNMENT = 3333;
  GL_PALETTE4_R5_G6_B5_OES = 35730;
  GL_PALETTE4_RGB5_A1_OES = 35732;
  GL_PALETTE4_RGB8_OES = 35728;
  GL_PALETTE4_RGBA4_OES = 35731;
  GL_PALETTE4_RGBA8_OES = 35729;
  GL_PALETTE8_R5_G6_B5_OES = 35735;
  GL_PALETTE8_RGB5_A1_OES = 35737;
  GL_PALETTE8_RGB8_OES = 35733;
  GL_PALETTE8_RGBA4_OES = 35736;
  GL_PALETTE8_RGBA8_OES = 35734;
  GL_PERSPECTIVE_CORRECTION_HINT = 3152;
  GL_POINTS = 0;
  GL_POINT_DISTANCE_ATTENUATION = 33065;
  GL_POINT_FADE_THRESHOLD_SIZE = 33064;
  GL_POINT_SIZE = 2833;
  GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = 35743;
  GL_POINT_SIZE_ARRAY_OES = 35740;
  GL_POINT_SIZE_ARRAY_POINTER_OES = 35212;
  GL_POINT_SIZE_ARRAY_STRIDE_OES = 35211;
  GL_POINT_SIZE_ARRAY_TYPE_OES = 35210;
  GL_POINT_SIZE_MAX = 33063;
  GL_POINT_SIZE_MIN = 33062;
  GL_POINT_SMOOTH = 2832;
  GL_POINT_SMOOTH_HINT = 3153;
  GL_POINT_SPRITE_OES = 34913;
  GL_POLYGON_OFFSET_FACTOR = 32824;
  GL_POLYGON_OFFSET_FILL = 32823;
  GL_POLYGON_OFFSET_UNITS = 10752;
  GL_POSITION = 4611;
  GL_PREVIOUS = 34168;
  GL_PRIMARY_COLOR = 34167;
  GL_PROGRAM_OBJECT_EXT = 35648;
  GL_PROGRAM_PIPELINE_BINDING_EXT = 33370;
  GL_PROGRAM_PIPELINE_OBJECT_EXT = 35407;
  GL_PROGRAM_SEPARABLE_EXT = 33368;
  GL_PROJECTION = 5889;
  GL_PROJECTION_MATRIX = 2983;
  GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = 35214;
  GL_PROJECTION_STACK_DEPTH = 2980;
  GL_QUADRATIC_ATTENUATION = 4617;
  GL_QUERY_OBJECT_EXT = 37203;
  GL_QUERY_RESULT_AVAILABLE_EXT = 34919;
  GL_QUERY_RESULT_EXT = 34918;
  GL_R16F_EXT = 33325;
  GL_R8_EXT = 33321;
  GL_READ_FRAMEBUFFER_APPLE = 36008;
  GL_READ_FRAMEBUFFER_BINDING_APPLE = 36010;
  GL_RED_BITS = 3410;
  GL_RED_EXT = 6403;
  GL_RENDERBUFFER = 36161;
  GL_RENDERBUFFER_ALPHA_SIZE = 36179;
  GL_RENDERBUFFER_ALPHA_SIZE_OES = 36179;
  GL_RENDERBUFFER_BINDING = 36007;
  GL_RENDERBUFFER_BINDING_OES = 36007;
  GL_RENDERBUFFER_BLUE_SIZE = 36178;
  GL_RENDERBUFFER_BLUE_SIZE_OES = 36178;
  GL_RENDERBUFFER_DEPTH_SIZE = 36180;
  GL_RENDERBUFFER_DEPTH_SIZE_OES = 36180;
  GL_RENDERBUFFER_GREEN_SIZE = 36177;
  GL_RENDERBUFFER_GREEN_SIZE_OES = 36177;
  GL_RENDERBUFFER_HEIGHT = 36163;
  GL_RENDERBUFFER_HEIGHT_OES = 36163;
  GL_RENDERBUFFER_INTERNAL_FORMAT = 36164;
  GL_RENDERBUFFER_INTERNAL_FORMAT_OES = 36164;
  GL_RENDERBUFFER_OES = 36161;
  GL_RENDERBUFFER_RED_SIZE = 36176;
  GL_RENDERBUFFER_RED_SIZE_OES = 36176;
  GL_RENDERBUFFER_SAMPLES_APPLE = 36011;
  GL_RENDERBUFFER_STENCIL_SIZE = 36181;
  GL_RENDERBUFFER_STENCIL_SIZE_OES = 36181;
  GL_RENDERBUFFER_WIDTH = 36162;
  GL_RENDERBUFFER_WIDTH_OES = 36162;
  GL_RENDERER = 7937;
  GL_REPEAT = 10497;
  GL_REPLACE = 7681;
  GL_RESCALE_NORMAL = 32826;
  GL_RG16F_EXT = 33327;
  GL_RG8_EXT = 33323;
  GL_RGB = 6407;
  GL_RGB16F_EXT = 34843;
  GL_RGB565 = 36194;
  GL_RGB565_OES = 36194;
  GL_RGB5_A1 = 32855;
  GL_RGB5_A1_OES = 32855;
  GL_RGB8_OES = 32849;
  GL_RGBA = 6408;
  GL_RGBA16F_EXT = 34842;
  GL_RGBA4 = 32854;
  GL_RGBA4_OES = 32854;
  GL_RGBA8_OES = 32856;
  GL_RGB_422_APPLE = 35359;
  GL_RGB_SCALE = 34163;
  GL_RG_EXT = 33319;
  GL_SAMPLER_2D = 35678;
  GL_SAMPLER_CUBE = 35680;
  GL_SAMPLES = 32937;
  GL_SAMPLE_ALPHA_TO_COVERAGE = 32926;
  GL_SAMPLE_ALPHA_TO_ONE = 32927;
  GL_SAMPLE_BUFFERS = 32936;
  GL_SAMPLE_COVERAGE = 32928;
  GL_SAMPLE_COVERAGE_INVERT = 32939;
  GL_SAMPLE_COVERAGE_VALUE = 32938;
  GL_SCISSOR_BOX = 3088;
  GL_SCISSOR_TEST = 3089;
  GL_SET = 5391;
  GL_SHADER_BINARY_FORMATS = 36344;
  GL_SHADER_COMPILER = 36346;
  GL_SHADER_OBJECT_EXT = 35656;
  GL_SHADER_SOURCE_LENGTH = 35720;
  GL_SHADER_TYPE = 35663;
  GL_SHADE_MODEL = 2900;
  GL_SHADING_LANGUAGE_VERSION = 35724;
  GL_SHININESS = 5633;
  GL_SHORT = 5122;
  GL_SMOOTH = 7425;
  GL_SMOOTH_LINE_WIDTH_RANGE = 2850;
  GL_SMOOTH_POINT_SIZE_RANGE = 2834;
  GL_SPECULAR = 4610;
  GL_SPOT_CUTOFF = 4614;
  GL_SPOT_DIRECTION = 4612;
  GL_SPOT_EXPONENT = 4613;
  GL_SRC0_ALPHA = 34184;
  GL_SRC0_RGB = 34176;
  GL_SRC1_ALPHA = 34185;
  GL_SRC1_RGB = 34177;
  GL_SRC2_ALPHA = 34186;
  GL_SRC2_RGB = 34178;
  GL_SRC_ALPHA = 770;
  GL_SRC_ALPHA_SATURATE = 776;
  GL_SRC_COLOR = 768;
  GL_STACK_OVERFLOW = 1283;
  GL_STACK_UNDERFLOW = 1284;
  GL_STATIC_DRAW = 35044;
  GL_STENCIL_ATTACHMENT = 36128;
  GL_STENCIL_ATTACHMENT_OES = 36128;
  GL_STENCIL_BACK_FAIL = 34817;
  GL_STENCIL_BACK_FUNC = 34816;
  GL_STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
  GL_STENCIL_BACK_PASS_DEPTH_PASS = 34819;
  GL_STENCIL_BACK_REF = 36003;
  GL_STENCIL_BACK_VALUE_MASK = 36004;
  GL_STENCIL_BACK_WRITEMASK = 36005;
  GL_STENCIL_BITS = 3415;
  GL_STENCIL_BUFFER_BIT = 1024;
  GL_STENCIL_CLEAR_VALUE = 2961;
  GL_STENCIL_EXT = 6146;
  GL_STENCIL_FAIL = 2964;
  GL_STENCIL_FUNC = 2962;
  GL_STENCIL_INDEX = 6401;
  GL_STENCIL_INDEX8 = 36168;
  GL_STENCIL_INDEX8_OES = 36168;
  GL_STENCIL_PASS_DEPTH_FAIL = 2965;
  GL_STENCIL_PASS_DEPTH_PASS = 2966;
  GL_STENCIL_REF = 2967;
  GL_STENCIL_TEST = 2960;
  GL_STENCIL_VALUE_MASK = 2963;
  GL_STENCIL_WRITEMASK = 2968;
  GL_STREAM_DRAW = 35040;
  GL_SUBPIXEL_BITS = 3408;
  GL_SUBTRACT = 34023;
  GL_TEXTURE = 5890;
  GL_TEXTURE0 = 33984;
  GL_TEXTURE1 = 33985;
  GL_TEXTURE10 = 33994;
  GL_TEXTURE11 = 33995;
  GL_TEXTURE12 = 33996;
  GL_TEXTURE13 = 33997;
  GL_TEXTURE14 = 33998;
  GL_TEXTURE15 = 33999;
  GL_TEXTURE16 = 34000;
  GL_TEXTURE17 = 34001;
  GL_TEXTURE18 = 34002;
  GL_TEXTURE19 = 34003;
  GL_TEXTURE2 = 33986;
  GL_TEXTURE20 = 34004;
  GL_TEXTURE21 = 34005;
  GL_TEXTURE22 = 34006;
  GL_TEXTURE23 = 34007;
  GL_TEXTURE24 = 34008;
  GL_TEXTURE25 = 34009;
  GL_TEXTURE26 = 34010;
  GL_TEXTURE27 = 34011;
  GL_TEXTURE28 = 34012;
  GL_TEXTURE29 = 34013;
  GL_TEXTURE3 = 33987;
  GL_TEXTURE30 = 34014;
  GL_TEXTURE31 = 34015;
  GL_TEXTURE4 = 33988;
  GL_TEXTURE5 = 33989;
  GL_TEXTURE6 = 33990;
  GL_TEXTURE7 = 33991;
  GL_TEXTURE8 = 33992;
  GL_TEXTURE9 = 33993;
  GL_TEXTURE_2D = 3553;
  GL_TEXTURE_BINDING_2D = 32873;
  GL_TEXTURE_BINDING_CUBE_MAP = 34068;
  GL_TEXTURE_COMPARE_FUNC_EXT = 34893;
  GL_TEXTURE_COMPARE_MODE_EXT = 34892;
  GL_TEXTURE_COORD_ARRAY = 32888;
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 34970;
  GL_TEXTURE_COORD_ARRAY_POINTER = 32914;
  GL_TEXTURE_COORD_ARRAY_SIZE = 32904;
  GL_TEXTURE_COORD_ARRAY_STRIDE = 32906;
  GL_TEXTURE_COORD_ARRAY_TYPE = 32905;
  GL_TEXTURE_CROP_RECT_OES = 35741;
  GL_TEXTURE_CUBE_MAP = 34067;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
  GL_TEXTURE_ENV = 8960;
  GL_TEXTURE_ENV_COLOR = 8705;
  GL_TEXTURE_ENV_MODE = 8704;
  GL_TEXTURE_FILTER_CONTROL_EXT = 34048;
  GL_TEXTURE_LOD_BIAS_EXT = 34049;
  GL_TEXTURE_MAG_FILTER = 10240;
  GL_TEXTURE_MATRIX = 2984;
  GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = 35215;
  GL_TEXTURE_MAX_ANISOTROPY_EXT = 34046;
  GL_TEXTURE_MAX_LEVEL_APPLE = 33085;
  GL_TEXTURE_MIN_FILTER = 10241;
  GL_TEXTURE_STACK_DEPTH = 2981;
  GL_TEXTURE_WRAP_S = 10242;
  GL_TEXTURE_WRAP_T = 10243;
  GL_TRIANGLES = 4;
  GL_TRIANGLE_FAN = 6;
  GL_TRIANGLE_STRIP = 5;
  GL_TRUE = 1;
  GL_UNPACK_ALIGNMENT = 3317;
  GL_UNSIGNED_BYTE = 5121;
  GL_UNSIGNED_INT = 5125;
  GL_UNSIGNED_INT_24_8_OES = 34042;
  GL_UNSIGNED_INT_OES = 5125;
  GL_UNSIGNED_NORMALIZED_EXT = 35863;
  GL_UNSIGNED_SHORT = 5123;
  GL_UNSIGNED_SHORT_1_5_5_5_REV = 33638;
  GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT = 33638;
  GL_UNSIGNED_SHORT_4_4_4_4 = 32819;
  GL_UNSIGNED_SHORT_4_4_4_4_REV = 33637;
  GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT = 33637;
  GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG = 33637;
  GL_UNSIGNED_SHORT_5_5_5_1 = 32820;
  GL_UNSIGNED_SHORT_5_6_5 = 33635;
  GL_UNSIGNED_SHORT_8_8_APPLE = 34234;
  GL_UNSIGNED_SHORT_8_8_REV_APPLE = 34235;
  GL_VALIDATE_STATUS = 35715;
  GL_VENDOR = 7936;
  GL_VERSION = 7938;
  GL_VERSION_ES_CL_1_0 = 1;
  GL_VERSION_ES_CL_1_1 = 1;
  GL_VERSION_ES_CM_1_0 = 1;
  GL_VERSION_ES_CM_1_1 = 1;
  GL_VERTEX_ARRAY = 32884;
  GL_VERTEX_ARRAY_BINDING_OES = 34229;
  GL_VERTEX_ARRAY_BUFFER_BINDING = 34966;
  GL_VERTEX_ARRAY_OBJECT_EXT = 37204;
  GL_VERTEX_ARRAY_POINTER = 32910;
  GL_VERTEX_ARRAY_SIZE = 32890;
  GL_VERTEX_ARRAY_STRIDE = 32892;
  GL_VERTEX_ARRAY_TYPE = 32891;
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
  GL_VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
  GL_VERTEX_ATTRIB_ARRAY_POINTER = 34373;
  GL_VERTEX_ATTRIB_ARRAY_SIZE = 34339;
  GL_VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
  GL_VERTEX_ATTRIB_ARRAY_TYPE = 34341;
  GL_VERTEX_SHADER = 35633;
  GL_VERTEX_SHADER_BIT_EXT = 1;
  GL_VIEWPORT = 2978;
  GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = 34974;
  GL_WEIGHT_ARRAY_OES = 34477;
  GL_WEIGHT_ARRAY_POINTER_OES = 34476;
  GL_WEIGHT_ARRAY_SIZE_OES = 34475;
  GL_WEIGHT_ARRAY_STRIDE_OES = 34474;
  GL_WEIGHT_ARRAY_TYPE_OES = 34473;
  GL_WRITE_ONLY_OES = 35001;
  GL_XOR = 5382;
  GL_ZERO = 0;
  kEAGLRenderingAPIOpenGLES1 = 1;
  kEAGLRenderingAPIOpenGLES2 = 2;

// ===== Typedefs =====
type
  EAGLRenderingAPI = NSUInteger;
  EAGLSharegroup = NSObject;
  GLbitfield = UInt32;
  GLboolean = Byte;
  PGLboolean = ^GLboolean;
  GLbyte = Shortint;
  PGLbyte = ^GLbyte;
  GLcampd = Double;
  GLchar = Byte;
  PGLchar = MarshaledAString;
  PGLcharARB = MarshaledAString;
  GLclampd = Double;
  GLclampf = Single;
  PGLclampf = ^GLclampf;
  GLclampx = Integer;
  GLdouble = Double;
  PGLdouble = ^GLdouble;
  GLenum = UInt32;
  PGLenum = ^GLenum;
  GLfixed = Int32;
  PGLfixed = ^GLfixed;
  GLfloat = Single;
  PGLfloat = ^GLfloat;
  GLhandleARB = LongWord;
  PGLhandleARB = ^GLhandleARB;
  GLint = Int32;
  GLintptr = IntPtr;
  GLintptrARB = IntPtr;
  PGLint = ^GLint;
  GLshort = Int16;
  PGLshort = ^GLshort;
  GLsizei = Int32;
  GLsizeiptr = IntPtr;
  GLsizeiptrARB = IntPtr;
  PGLsizei = ^GLsizei;
  GLubyte = Byte;
  PGLubyte = ^GLubyte;
  GLuint = UInt32;
  PGLuint = ^GLuint;
  GLushort = Word;
  PGLushort = ^GLushort;
  PUnsigned = PWord;
  GLvoid = Pointer;
  PGLvoid = Pointer;
  Pvoid = Pointer;


// ===== External functions =====

const
  libOpenGLES = '/System/Library/Frameworks/OpenGLES.framework/OpenGLES';

procedure EAGLGetVersion(major: PCardinal; minor: PCardinal); cdecl; external libOpenGLES name _PU + 'EAGLGetVersion';
procedure glActiveShaderProgramEXT(pipeline: GLuint; program_: GLuint); cdecl; external libOpenGLES name _PU + 'glActiveShaderProgramEXT';
procedure glActiveTexture(texture: GLenum); cdecl; external libOpenGLES name _PU + 'glActiveTexture';
procedure glAlphaFunc(func: GLenum; ref: GLclampf); cdecl; external libOpenGLES name _PU + 'glAlphaFunc';
procedure glAlphaFuncx(func: GLenum; ref: GLclampx); cdecl; external libOpenGLES name _PU + 'glAlphaFuncx';
procedure glAttachShader(program_: GLuint; shader: GLuint); cdecl; external libOpenGLES name _PU + 'glAttachShader';
procedure glBeginQueryEXT(target: GLenum; id: GLuint); cdecl; external libOpenGLES name _PU + 'glBeginQueryEXT';
procedure glBindAttribLocation(program_: GLuint; index: GLuint; name: PGLchar); cdecl; external libOpenGLES name _PU + 'glBindAttribLocation';
procedure glBindBuffer(target: GLenum; buffer: GLuint); cdecl; external libOpenGLES name _PU + 'glBindBuffer';
procedure glBindFramebuffer(target: GLenum; framebuffer: GLuint); cdecl; external libOpenGLES name _PU + 'glBindFramebuffer';
procedure glBindFramebufferOES(target: GLenum; framebuffer: GLuint); cdecl; external libOpenGLES name _PU + 'glBindFramebufferOES';
procedure glBindProgramPipelineEXT(pipeline: GLuint); cdecl; external libOpenGLES name _PU + 'glBindProgramPipelineEXT';
procedure glBindRenderbuffer(target: GLenum; renderbuffer: GLuint); cdecl; external libOpenGLES name _PU + 'glBindRenderbuffer';
procedure glBindRenderbufferOES(target: GLenum; renderbuffer: GLuint); cdecl; external libOpenGLES name _PU + 'glBindRenderbufferOES';
procedure glBindTexture(target: GLenum; texture: GLuint); cdecl; external libOpenGLES name _PU + 'glBindTexture';
procedure glBindVertexArrayOES(array_: GLuint); cdecl; external libOpenGLES name _PU + 'glBindVertexArrayOES';
procedure glBlendColor(red: GLclampf; green: GLclampf; blue: GLclampf; alpha: GLclampf); cdecl; external libOpenGLES name _PU + 'glBlendColor';
procedure glBlendEquation(mode: GLenum); cdecl; external libOpenGLES name _PU + 'glBlendEquation';
procedure glBlendEquationOES(mode: GLenum); cdecl; external libOpenGLES name _PU + 'glBlendEquationOES';
procedure glBlendEquationSeparate(modeRGB: GLenum; modeAlpha: GLenum); cdecl; external libOpenGLES name _PU + 'glBlendEquationSeparate';
procedure glBlendEquationSeparateOES(modeRGB: GLenum; modeAlpha: GLenum); cdecl; external libOpenGLES name _PU + 'glBlendEquationSeparateOES';
procedure glBlendFunc(sfactor: GLenum; dfactor: GLenum); cdecl; external libOpenGLES name _PU + 'glBlendFunc';
procedure glBlendFuncSeparate(srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); cdecl; external libOpenGLES name _PU + 'glBlendFuncSeparate';
procedure glBlendFuncSeparateOES(srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); cdecl; external libOpenGLES name _PU + 'glBlendFuncSeparateOES';
procedure glBufferData(target: GLenum; size: GLsizeiptr; data: PGLvoid; usage: GLenum); cdecl; external libOpenGLES name _PU + 'glBufferData';
procedure glBufferSubData(target: GLenum; offset: GLintptr; size: GLsizeiptr; data: PGLvoid); cdecl; external libOpenGLES name _PU + 'glBufferSubData';
function glCheckFramebufferStatus(target: GLenum): GLenum; cdecl; external libOpenGLES name _PU + 'glCheckFramebufferStatus';
function glCheckFramebufferStatusOES(target: GLenum): GLenum; cdecl; external libOpenGLES name _PU + 'glCheckFramebufferStatusOES';
procedure glClear(mask: GLbitfield); cdecl; external libOpenGLES name _PU + 'glClear';
procedure glClearColor(red: GLclampf; green: GLclampf; blue: GLclampf; alpha: GLclampf); cdecl; external libOpenGLES name _PU + 'glClearColor';
procedure glClearColorx(red: GLclampx; green: GLclampx; blue: GLclampx; alpha: GLclampx); cdecl; external libOpenGLES name _PU + 'glClearColorx';
procedure glClearDepthf(depth: GLclampf); cdecl; external libOpenGLES name _PU + 'glClearDepthf';
procedure glClearDepthx(depth: GLclampx); cdecl; external libOpenGLES name _PU + 'glClearDepthx';
procedure glClearStencil(s: GLint); cdecl; external libOpenGLES name _PU + 'glClearStencil';
procedure glClientActiveTexture(texture: GLenum); cdecl; external libOpenGLES name _PU + 'glClientActiveTexture';
procedure glClipPlanef(plane: GLenum; equation: PGLfloat); cdecl; external libOpenGLES name _PU + 'glClipPlanef';
procedure glClipPlanex(plane: GLenum; equation: PGLfixed); cdecl; external libOpenGLES name _PU + 'glClipPlanex';
procedure glColor4f(red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); cdecl; external libOpenGLES name _PU + 'glColor4f';
procedure glColor4ub(red: GLubyte; green: GLubyte; blue: GLubyte; alpha: GLubyte); cdecl; external libOpenGLES name _PU + 'glColor4ub';
procedure glColor4x(red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); cdecl; external libOpenGLES name _PU + 'glColor4x';
procedure glColorMask(red: GLboolean; green: GLboolean; blue: GLboolean; alpha: GLboolean); cdecl; external libOpenGLES name _PU + 'glColorMask';
procedure glColorPointer(size: GLint; type_: GLenum; stride: GLsizei; pointer: PGLvoid); cdecl; external libOpenGLES name _PU + 'glColorPointer';
procedure glCompileShader(shader: GLuint); cdecl; external libOpenGLES name _PU + 'glCompileShader';
procedure glCompressedTexImage2D(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; data: PGLvoid); cdecl; external libOpenGLES name _PU + 'glCompressedTexImage2D';
procedure glCompressedTexSubImage2D(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; data: PGLvoid); cdecl; external libOpenGLES name _PU + 'glCompressedTexSubImage2D';
procedure glCopyTexImage2D(target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); cdecl; external libOpenGLES name _PU + 'glCopyTexImage2D';
procedure glCopyTexSubImage2D(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); cdecl; external libOpenGLES name _PU + 'glCopyTexSubImage2D';
function glCreateProgram: GLuint; cdecl; external libOpenGLES name _PU + 'glCreateProgram';
function glCreateShader(type_: GLenum): GLuint; cdecl; external libOpenGLES name _PU + 'glCreateShader';
function glCreateShaderProgramvEXT(type_: GLenum; count: GLsizei; strings: PGLchar): GLuint; cdecl; external libOpenGLES name _PU + 'glCreateShaderProgramvEXT';
procedure glCullFace(mode: GLenum); cdecl; external libOpenGLES name _PU + 'glCullFace';
procedure glCurrentPaletteMatrixOES(matrixpaletteindex: GLuint); cdecl; external libOpenGLES name _PU + 'glCurrentPaletteMatrixOES';
procedure glDeleteBuffers(n: GLsizei; buffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteBuffers';
procedure glDeleteFramebuffers(n: GLsizei; framebuffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteFramebuffers';
procedure glDeleteFramebuffersOES(n: GLsizei; framebuffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteFramebuffersOES';
procedure glDeleteProgram(program_: GLuint); cdecl; external libOpenGLES name _PU + 'glDeleteProgram';
procedure glDeleteProgramPipelinesEXT(n: GLsizei; pipelines: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteProgramPipelinesEXT';
procedure glDeleteQueriesEXT(n: GLsizei; ids: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteQueriesEXT';
procedure glDeleteRenderbuffers(n: GLsizei; renderbuffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteRenderbuffers';
procedure glDeleteRenderbuffersOES(n: GLsizei; renderbuffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteRenderbuffersOES';
procedure glDeleteShader(shader: GLuint); cdecl; external libOpenGLES name _PU + 'glDeleteShader';
procedure glDeleteTextures(n: GLsizei; textures: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteTextures';
procedure glDeleteVertexArraysOES(n: GLsizei; arrays: PGLuint); cdecl; external libOpenGLES name _PU + 'glDeleteVertexArraysOES';
procedure glDepthFunc(func: GLenum); cdecl; external libOpenGLES name _PU + 'glDepthFunc';
procedure glDepthMask(flag: GLboolean); cdecl; external libOpenGLES name _PU + 'glDepthMask';
procedure glDepthRangef(zNear: GLclampf; zFar: GLclampf); cdecl; external libOpenGLES name _PU + 'glDepthRangef';
procedure glDepthRangex(zNear: GLclampx; zFar: GLclampx); cdecl; external libOpenGLES name _PU + 'glDepthRangex';
procedure glDetachShader(program_: GLuint; shader: GLuint); cdecl; external libOpenGLES name _PU + 'glDetachShader';
procedure glDisable(cap: GLenum); cdecl; external libOpenGLES name _PU + 'glDisable';
procedure glDisableClientState(array_: GLenum); cdecl; external libOpenGLES name _PU + 'glDisableClientState';
procedure glDisableVertexAttribArray(index: GLuint); cdecl; external libOpenGLES name _PU + 'glDisableVertexAttribArray';
procedure glDiscardFramebufferEXT(target: GLenum; numAttachments: GLsizei; attachments: PGLenum); cdecl; external libOpenGLES name _PU + 'glDiscardFramebufferEXT';
procedure glDrawArrays(mode: GLenum; first: GLint; count: GLsizei); cdecl; external libOpenGLES name _PU + 'glDrawArrays';
procedure glDrawElements(mode: GLenum; count: GLsizei; type_: GLenum; indices: PGLvoid); cdecl; external libOpenGLES name _PU + 'glDrawElements';
procedure glDrawTexfOES(x: GLfloat; y: GLfloat; z: GLfloat; width: GLfloat; height: GLfloat); cdecl; external libOpenGLES name _PU + 'glDrawTexfOES';
procedure glDrawTexfvOES(coords: PGLfloat); cdecl; external libOpenGLES name _PU + 'glDrawTexfvOES';
procedure glDrawTexiOES(x: GLint; y: GLint; z: GLint; width: GLint; height: GLint); cdecl; external libOpenGLES name _PU + 'glDrawTexiOES';
procedure glDrawTexivOES(coords: PGLint); cdecl; external libOpenGLES name _PU + 'glDrawTexivOES';
procedure glDrawTexsOES(x: GLshort; y: GLshort; z: GLshort; width: GLshort; height: GLshort); cdecl; external libOpenGLES name _PU + 'glDrawTexsOES';
procedure glDrawTexsvOES(coords: PGLshort); cdecl; external libOpenGLES name _PU + 'glDrawTexsvOES';
procedure glDrawTexxOES(x: GLfixed; y: GLfixed; z: GLfixed; width: GLfixed; height: GLfixed); cdecl; external libOpenGLES name _PU + 'glDrawTexxOES';
procedure glDrawTexxvOES(coords: PGLfixed); cdecl; external libOpenGLES name _PU + 'glDrawTexxvOES';
procedure glEnable(cap: GLenum); cdecl; external libOpenGLES name _PU + 'glEnable';
procedure glEnableClientState(array_: GLenum); cdecl; external libOpenGLES name _PU + 'glEnableClientState';
procedure glEnableVertexAttribArray(index: GLuint); cdecl; external libOpenGLES name _PU + 'glEnableVertexAttribArray';
procedure glEndQueryEXT(target: GLenum); cdecl; external libOpenGLES name _PU + 'glEndQueryEXT';
procedure glFinish; cdecl; external libOpenGLES name _PU + 'glFinish';
procedure glFlush; cdecl; external libOpenGLES name _PU + 'glFlush';
procedure glFogf(pname: GLenum; param: GLfloat); cdecl; external libOpenGLES name _PU + 'glFogf';
procedure glFogfv(pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glFogfv';
procedure glFogx(pname: GLenum; param: GLfixed); cdecl; external libOpenGLES name _PU + 'glFogx';
procedure glFogxv(pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glFogxv';
procedure glFramebufferRenderbuffer(target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); cdecl; external libOpenGLES name _PU + 'glFramebufferRenderbuffer';
procedure glFramebufferRenderbufferOES(target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); cdecl; external libOpenGLES name _PU + 'glFramebufferRenderbufferOES';
procedure glFramebufferTexture2D(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); cdecl; external libOpenGLES name _PU + 'glFramebufferTexture2D';
procedure glFramebufferTexture2DOES(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); cdecl; external libOpenGLES name _PU + 'glFramebufferTexture2DOES';
procedure glFrontFace(mode: GLenum); cdecl; external libOpenGLES name _PU + 'glFrontFace';
procedure glFrustumf(left: GLfloat; right: GLfloat; bottom: GLfloat; top: GLfloat; zNear: GLfloat; zFar: GLfloat); cdecl; external libOpenGLES name _PU + 'glFrustumf';
procedure glFrustumx(left: GLfixed; right: GLfixed; bottom: GLfixed; top: GLfixed; zNear: GLfixed; zFar: GLfixed); cdecl; external libOpenGLES name _PU + 'glFrustumx';
procedure glGenBuffers(n: GLsizei; buffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenBuffers';
procedure glGenFramebuffers(n: GLsizei; framebuffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenFramebuffers';
procedure glGenFramebuffersOES(n: GLsizei; framebuffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenFramebuffersOES';
procedure glGenProgramPipelinesEXT(n: GLsizei; pipelines: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenProgramPipelinesEXT';
procedure glGenQueriesEXT(n: GLsizei; ids: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenQueriesEXT';
procedure glGenRenderbuffers(n: GLsizei; renderbuffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenRenderbuffers';
procedure glGenRenderbuffersOES(n: GLsizei; renderbuffers: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenRenderbuffersOES';
procedure glGenTextures(n: GLsizei; textures: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenTextures';
procedure glGenVertexArraysOES(n: GLsizei; arrays: PGLuint); cdecl; external libOpenGLES name _PU + 'glGenVertexArraysOES';
procedure glGenerateMipmap(target: GLenum); cdecl; external libOpenGLES name _PU + 'glGenerateMipmap';
procedure glGenerateMipmapOES(target: GLenum); cdecl; external libOpenGLES name _PU + 'glGenerateMipmapOES';
procedure glGetActiveAttrib(program_: GLuint; index: GLuint; bufsize: GLsizei; length: PGLsizei; size: PGLint; type_: PGLenum; name: PGLchar); cdecl; external libOpenGLES name _PU + 'glGetActiveAttrib';
procedure glGetActiveUniform(program_: GLuint; index: GLuint; bufsize: GLsizei; length: PGLsizei; size: PGLint; type_: PGLenum; name: PGLchar); cdecl; external libOpenGLES name _PU + 'glGetActiveUniform';
procedure glGetAttachedShaders(program_: GLuint; maxcount: GLsizei; count: PGLsizei; shaders: PGLuint); cdecl; external libOpenGLES name _PU + 'glGetAttachedShaders';
function glGetAttribLocation(program_: GLuint; name: PGLchar): Integer; cdecl; external libOpenGLES name _PU + 'glGetAttribLocation';
procedure glGetBooleanv(pname: GLenum; params: PGLboolean); cdecl; external libOpenGLES name _PU + 'glGetBooleanv';
procedure glGetBufferParameteriv(target: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetBufferParameteriv';
procedure glGetBufferPointervOES(target: GLenum; pname: GLenum; params: PGLvoid); cdecl; external libOpenGLES name _PU + 'glGetBufferPointervOES';
procedure glGetClipPlanef(pname: GLenum; equation: PGLfloat); cdecl; external libOpenGLES name _PU + 'glGetClipPlanef';
procedure glGetClipPlanex(pname: GLenum; eqn: PGLfixed); cdecl; external libOpenGLES name _PU + 'glGetClipPlanex';
function glGetError: GLenum; cdecl; external libOpenGLES name _PU + 'glGetError';
procedure glGetFixedv(pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glGetFixedv';
procedure glGetFloatv(pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glGetFloatv';
procedure glGetFramebufferAttachmentParameteriv(target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetFramebufferAttachmentParameteriv';
procedure glGetFramebufferAttachmentParameterivOES(target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetFramebufferAttachmentParameterivOES';
procedure glGetIntegerv(pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetIntegerv';
procedure glGetLightfv(light: GLenum; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glGetLightfv';
procedure glGetLightxv(light: GLenum; pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glGetLightxv';
procedure glGetMaterialfv(face: GLenum; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glGetMaterialfv';
procedure glGetMaterialxv(face: GLenum; pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glGetMaterialxv';
procedure glGetObjectLabelEXT(type_: GLenum; object_: GLuint; bufSize: GLsizei; length: PGLsizei; label_: PGLchar); cdecl; external libOpenGLES name _PU + 'glGetObjectLabelEXT';
procedure glGetPointerv(pname: GLenum; params: Pvoid); cdecl; external libOpenGLES name _PU + 'glGetPointerv';
procedure glGetProgramInfoLog(program_: GLuint; bufsize: GLsizei; length: PGLsizei; infolog: PGLchar); cdecl; external libOpenGLES name _PU + 'glGetProgramInfoLog';
procedure glGetProgramPipelineInfoLogEXT(pipeline: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); cdecl; external libOpenGLES name _PU + 'glGetProgramPipelineInfoLogEXT';
procedure glGetProgramPipelineivEXT(pipeline: GLuint; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetProgramPipelineivEXT';
procedure glGetProgramiv(program_: GLuint; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetProgramiv';
procedure glGetQueryObjectivEXT(id: GLuint; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetQueryObjectivEXT';
procedure glGetQueryObjectuivEXT(id: GLuint; pname: GLenum; params: PGLuint); cdecl; external libOpenGLES name _PU + 'glGetQueryObjectuivEXT';
procedure glGetQueryivEXT(target: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetQueryivEXT';
procedure glGetRenderbufferParameteriv(target: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetRenderbufferParameteriv';
procedure glGetRenderbufferParameterivOES(target: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetRenderbufferParameterivOES';
procedure glGetShaderInfoLog(shader: GLuint; bufsize: GLsizei; length: PGLsizei; infolog: PGLchar); cdecl; external libOpenGLES name _PU + 'glGetShaderInfoLog';
procedure glGetShaderPrecisionFormat(shadertype: GLenum; precisiontype: GLenum; range: PGLint; precision: PGLint); cdecl; external libOpenGLES name _PU + 'glGetShaderPrecisionFormat';
procedure glGetShaderSource(shader: GLuint; bufsize: GLsizei; length: PGLsizei; source: PGLchar); cdecl; external libOpenGLES name _PU + 'glGetShaderSource';
procedure glGetShaderiv(shader: GLuint; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetShaderiv';
function glGetString(name: GLenum): PGLubyte; cdecl; external libOpenGLES name _PU + 'glGetString';
procedure glGetTexEnvfv(env: GLenum; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glGetTexEnvfv';
procedure glGetTexEnviv(env: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetTexEnviv';
procedure glGetTexEnvxv(env: GLenum; pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glGetTexEnvxv';
procedure glGetTexParameterfv(target: GLenum; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glGetTexParameterfv';
procedure glGetTexParameteriv(target: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetTexParameteriv';
procedure glGetTexParameterxv(target: GLenum; pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glGetTexParameterxv';
function glGetUniformLocation(program_: GLuint; name: PGLchar): Integer; cdecl; external libOpenGLES name _PU + 'glGetUniformLocation';
procedure glGetUniformfv(program_: GLuint; location: GLint; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glGetUniformfv';
procedure glGetUniformiv(program_: GLuint; location: GLint; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetUniformiv';
procedure glGetVertexAttribPointerv(index: GLuint; pname: GLenum; pointer: PGLvoid); cdecl; external libOpenGLES name _PU + 'glGetVertexAttribPointerv';
procedure glGetVertexAttribfv(index: GLuint; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glGetVertexAttribfv';
procedure glGetVertexAttribiv(index: GLuint; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glGetVertexAttribiv';
procedure glHint(target: GLenum; mode: GLenum); cdecl; external libOpenGLES name _PU + 'glHint';
procedure glInsertEventMarkerEXT(length: GLsizei; marker: PGLchar); cdecl; external libOpenGLES name _PU + 'glInsertEventMarkerEXT';
function glIsBuffer(buffer: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsBuffer';
function glIsEnabled(cap: GLenum): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsEnabled';
function glIsFramebuffer(framebuffer: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsFramebuffer';
function glIsFramebufferOES(framebuffer: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsFramebufferOES';
function glIsProgram(program_: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsProgram';
function glIsProgramPipelineEXT(pipeline: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsProgramPipelineEXT';
function glIsQueryEXT(id: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsQueryEXT';
function glIsRenderbuffer(renderbuffer: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsRenderbuffer';
function glIsRenderbufferOES(renderbuffer: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsRenderbufferOES';
function glIsShader(shader: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsShader';
function glIsTexture(texture: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsTexture';
function glIsVertexArrayOES(array_: GLuint): GLboolean; cdecl; external libOpenGLES name _PU + 'glIsVertexArrayOES';
procedure glLabelObjectEXT(type_: GLenum; object_: GLuint; length: GLsizei; label_: PGLchar); cdecl; external libOpenGLES name _PU + 'glLabelObjectEXT';
procedure glLightModelf(pname: GLenum; param: GLfloat); cdecl; external libOpenGLES name _PU + 'glLightModelf';
procedure glLightModelfv(pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glLightModelfv';
procedure glLightModelx(pname: GLenum; param: GLfixed); cdecl; external libOpenGLES name _PU + 'glLightModelx';
procedure glLightModelxv(pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glLightModelxv';
procedure glLightf(light: GLenum; pname: GLenum; param: GLfloat); cdecl; external libOpenGLES name _PU + 'glLightf';
procedure glLightfv(light: GLenum; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glLightfv';
procedure glLightx(light: GLenum; pname: GLenum; param: GLfixed); cdecl; external libOpenGLES name _PU + 'glLightx';
procedure glLightxv(light: GLenum; pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glLightxv';
procedure glLineWidth(width: GLfloat); cdecl; external libOpenGLES name _PU + 'glLineWidth';
procedure glLineWidthx(width: GLfixed); cdecl; external libOpenGLES name _PU + 'glLineWidthx';
procedure glLinkProgram(program_: GLuint); cdecl; external libOpenGLES name _PU + 'glLinkProgram';
procedure glLoadIdentity; cdecl; external libOpenGLES name _PU + 'glLoadIdentity';
procedure glLoadMatrixf(m: PGLfloat); cdecl; external libOpenGLES name _PU + 'glLoadMatrixf';
procedure glLoadMatrixx(m: PGLfixed); cdecl; external libOpenGLES name _PU + 'glLoadMatrixx';
procedure glLoadPaletteFromModelViewMatrixOES; cdecl; external libOpenGLES name _PU + 'glLoadPaletteFromModelViewMatrixOES';
procedure glLogicOp(opcode: GLenum); cdecl; external libOpenGLES name _PU + 'glLogicOp';
function glMapBufferOES(target: GLenum; access: GLenum): PGLvoid; cdecl; external libOpenGLES name _PU + 'glMapBufferOES';
procedure glMaterialf(face: GLenum; pname: GLenum; param: GLfloat); cdecl; external libOpenGLES name _PU + 'glMaterialf';
procedure glMaterialfv(face: GLenum; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glMaterialfv';
procedure glMaterialx(face: GLenum; pname: GLenum; param: GLfixed); cdecl; external libOpenGLES name _PU + 'glMaterialx';
procedure glMaterialxv(face: GLenum; pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glMaterialxv';
procedure glMatrixIndexPointerOES(size: GLint; type_: GLenum; stride: GLsizei; pointer: PGLvoid); cdecl; external libOpenGLES name _PU + 'glMatrixIndexPointerOES';
procedure glMatrixMode(mode: GLenum); cdecl; external libOpenGLES name _PU + 'glMatrixMode';
procedure glMultMatrixf(m: PGLfloat); cdecl; external libOpenGLES name _PU + 'glMultMatrixf';
procedure glMultMatrixx(m: PGLfixed); cdecl; external libOpenGLES name _PU + 'glMultMatrixx';
procedure glMultiTexCoord4f(target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat); cdecl; external libOpenGLES name _PU + 'glMultiTexCoord4f';
procedure glMultiTexCoord4x(target: GLenum; s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed); cdecl; external libOpenGLES name _PU + 'glMultiTexCoord4x';
procedure glNormal3f(nx: GLfloat; ny: GLfloat; nz: GLfloat); cdecl; external libOpenGLES name _PU + 'glNormal3f';
procedure glNormal3x(nx: GLfixed; ny: GLfixed; nz: GLfixed); cdecl; external libOpenGLES name _PU + 'glNormal3x';
procedure glNormalPointer(type_: GLenum; stride: GLsizei; pointer: PGLvoid); cdecl; external libOpenGLES name _PU + 'glNormalPointer';
procedure glOrthof(left: GLfloat; right: GLfloat; bottom: GLfloat; top: GLfloat; zNear: GLfloat; zFar: GLfloat); cdecl; external libOpenGLES name _PU + 'glOrthof';
procedure glOrthox(left: GLfixed; right: GLfixed; bottom: GLfixed; top: GLfixed; zNear: GLfixed; zFar: GLfixed); cdecl; external libOpenGLES name _PU + 'glOrthox';
procedure glPixelStorei(pname: GLenum; param: GLint); cdecl; external libOpenGLES name _PU + 'glPixelStorei';
procedure glPointParameterf(pname: GLenum; param: GLfloat); cdecl; external libOpenGLES name _PU + 'glPointParameterf';
procedure glPointParameterfv(pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glPointParameterfv';
procedure glPointParameterx(pname: GLenum; param: GLfixed); cdecl; external libOpenGLES name _PU + 'glPointParameterx';
procedure glPointParameterxv(pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glPointParameterxv';
procedure glPointSize(size: GLfloat); cdecl; external libOpenGLES name _PU + 'glPointSize';
procedure glPointSizePointerOES(type_: GLenum; stride: GLsizei; pointer: PGLvoid); cdecl; external libOpenGLES name _PU + 'glPointSizePointerOES';
procedure glPointSizex(size: GLfixed); cdecl; external libOpenGLES name _PU + 'glPointSizex';
procedure glPolygonOffset(factor: GLfloat; units: GLfloat); cdecl; external libOpenGLES name _PU + 'glPolygonOffset';
procedure glPolygonOffsetx(factor: GLfixed; units: GLfixed); cdecl; external libOpenGLES name _PU + 'glPolygonOffsetx';
procedure glPopGroupMarkerEXT; cdecl; external libOpenGLES name _PU + 'glPopGroupMarkerEXT';
procedure glPopMatrix; cdecl; external libOpenGLES name _PU + 'glPopMatrix';
procedure glProgramParameteriEXT(program_: GLuint; pname: GLenum; value: GLint); cdecl; external libOpenGLES name _PU + 'glProgramParameteriEXT';
procedure glProgramUniform1fEXT(program_: GLuint; location: GLint; x: GLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniform1fEXT';
procedure glProgramUniform1fvEXT(program_: GLuint; location: GLint; count: GLsizei; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniform1fvEXT';
procedure glProgramUniform1iEXT(program_: GLuint; location: GLint; x: GLint); cdecl; external libOpenGLES name _PU + 'glProgramUniform1iEXT';
procedure glProgramUniform1ivEXT(program_: GLuint; location: GLint; count: GLsizei; value: PGLint); cdecl; external libOpenGLES name _PU + 'glProgramUniform1ivEXT';
procedure glProgramUniform2fEXT(program_: GLuint; location: GLint; x: GLfloat; y: GLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniform2fEXT';
procedure glProgramUniform2fvEXT(program_: GLuint; location: GLint; count: GLsizei; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniform2fvEXT';
procedure glProgramUniform2iEXT(program_: GLuint; location: GLint; x: GLint; y: GLint); cdecl; external libOpenGLES name _PU + 'glProgramUniform2iEXT';
procedure glProgramUniform2ivEXT(program_: GLuint; location: GLint; count: GLsizei; value: PGLint); cdecl; external libOpenGLES name _PU + 'glProgramUniform2ivEXT';
procedure glProgramUniform3fEXT(program_: GLuint; location: GLint; x: GLfloat; y: GLfloat; z: GLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniform3fEXT';
procedure glProgramUniform3fvEXT(program_: GLuint; location: GLint; count: GLsizei; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniform3fvEXT';
procedure glProgramUniform3iEXT(program_: GLuint; location: GLint; x: GLint; y: GLint; z: GLint); cdecl; external libOpenGLES name _PU + 'glProgramUniform3iEXT';
procedure glProgramUniform3ivEXT(program_: GLuint; location: GLint; count: GLsizei; value: PGLint); cdecl; external libOpenGLES name _PU + 'glProgramUniform3ivEXT';
procedure glProgramUniform4fEXT(program_: GLuint; location: GLint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniform4fEXT';
procedure glProgramUniform4fvEXT(program_: GLuint; location: GLint; count: GLsizei; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniform4fvEXT';
procedure glProgramUniform4iEXT(program_: GLuint; location: GLint; x: GLint; y: GLint; z: GLint; w: GLint); cdecl; external libOpenGLES name _PU + 'glProgramUniform4iEXT';
procedure glProgramUniform4ivEXT(program_: GLuint; location: GLint; count: GLsizei; value: PGLint); cdecl; external libOpenGLES name _PU + 'glProgramUniform4ivEXT';
procedure glProgramUniformMatrix2fvEXT(program_: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniformMatrix2fvEXT';
procedure glProgramUniformMatrix3fvEXT(program_: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniformMatrix3fvEXT';
procedure glProgramUniformMatrix4fvEXT(program_: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glProgramUniformMatrix4fvEXT';
procedure glPushGroupMarkerEXT(length: GLsizei; marker: PGLchar); cdecl; external libOpenGLES name _PU + 'glPushGroupMarkerEXT';
procedure glPushMatrix; cdecl; external libOpenGLES name _PU + 'glPushMatrix';
procedure glReadPixels(x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; type_: GLenum; pixels: PGLvoid); cdecl; external libOpenGLES name _PU + 'glReadPixels';
procedure glReleaseShaderCompiler; cdecl; external libOpenGLES name _PU + 'glReleaseShaderCompiler';
procedure glRenderbufferStorage(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei); cdecl; external libOpenGLES name _PU + 'glRenderbufferStorage';
procedure glRenderbufferStorageMultisampleAPPLE(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); cdecl; external libOpenGLES name _PU + 'glRenderbufferStorageMultisampleAPPLE';
procedure glRenderbufferStorageOES(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei); cdecl; external libOpenGLES name _PU + 'glRenderbufferStorageOES';
procedure glResolveMultisampleFramebufferAPPLE; cdecl; external libOpenGLES name _PU + 'glResolveMultisampleFramebufferAPPLE';
procedure glRotatef(angle: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); cdecl; external libOpenGLES name _PU + 'glRotatef';
procedure glRotatex(angle: GLfixed; x: GLfixed; y: GLfixed; z: GLfixed); cdecl; external libOpenGLES name _PU + 'glRotatex';
procedure glSampleCoverage(value: GLclampf; invert: GLboolean); cdecl; external libOpenGLES name _PU + 'glSampleCoverage';
procedure glSampleCoveragex(value: GLclampx; invert: GLboolean); cdecl; external libOpenGLES name _PU + 'glSampleCoveragex';
procedure glScalef(x: GLfloat; y: GLfloat; z: GLfloat); cdecl; external libOpenGLES name _PU + 'glScalef';
procedure glScalex(x: GLfixed; y: GLfixed; z: GLfixed); cdecl; external libOpenGLES name _PU + 'glScalex';
procedure glScissor(x: GLint; y: GLint; width: GLsizei; height: GLsizei); cdecl; external libOpenGLES name _PU + 'glScissor';
procedure glShadeModel(mode: GLenum); cdecl; external libOpenGLES name _PU + 'glShadeModel';
procedure glShaderBinary(n: GLsizei; shaders: PGLuint; binaryformat: GLenum; binary: PGLvoid; length: GLsizei); cdecl; external libOpenGLES name _PU + 'glShaderBinary';
procedure glShaderSource(shader: GLuint; count: GLsizei; string_: PGLchar; length: PGLint); cdecl; external libOpenGLES name _PU + 'glShaderSource';
procedure glStencilFunc(func: GLenum; ref: GLint; mask: GLuint); cdecl; external libOpenGLES name _PU + 'glStencilFunc';
procedure glStencilFuncSeparate(face: GLenum; func: GLenum; ref: GLint; mask: GLuint); cdecl; external libOpenGLES name _PU + 'glStencilFuncSeparate';
procedure glStencilMask(mask: GLuint); cdecl; external libOpenGLES name _PU + 'glStencilMask';
procedure glStencilMaskSeparate(face: GLenum; mask: GLuint); cdecl; external libOpenGLES name _PU + 'glStencilMaskSeparate';
procedure glStencilOp(fail: GLenum; zfail: GLenum; zpass: GLenum); cdecl; external libOpenGLES name _PU + 'glStencilOp';
procedure glStencilOpSeparate(face: GLenum; fail: GLenum; zfail: GLenum; zpass: GLenum); cdecl; external libOpenGLES name _PU + 'glStencilOpSeparate';
procedure glTexCoordPointer(size: GLint; type_: GLenum; stride: GLsizei; pointer: PGLvoid); cdecl; external libOpenGLES name _PU + 'glTexCoordPointer';
procedure glTexEnvf(target: GLenum; pname: GLenum; param: GLfloat); cdecl; external libOpenGLES name _PU + 'glTexEnvf';
procedure glTexEnvfv(target: GLenum; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glTexEnvfv';
procedure glTexEnvi(target: GLenum; pname: GLenum; param: GLint); cdecl; external libOpenGLES name _PU + 'glTexEnvi';
procedure glTexEnviv(target: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glTexEnviv';
procedure glTexEnvx(target: GLenum; pname: GLenum; param: GLfixed); cdecl; external libOpenGLES name _PU + 'glTexEnvx';
procedure glTexEnvxv(target: GLenum; pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glTexEnvxv';
procedure glTexImage2D(target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; type_: GLenum; pixels: PGLvoid); cdecl; external libOpenGLES name _PU + 'glTexImage2D';
procedure glTexParameterf(target: GLenum; pname: GLenum; param: GLfloat); cdecl; external libOpenGLES name _PU + 'glTexParameterf';
procedure glTexParameterfv(target: GLenum; pname: GLenum; params: PGLfloat); cdecl; external libOpenGLES name _PU + 'glTexParameterfv';
procedure glTexParameteri(target: GLenum; pname: GLenum; param: GLint); cdecl; external libOpenGLES name _PU + 'glTexParameteri';
procedure glTexParameteriv(target: GLenum; pname: GLenum; params: PGLint); cdecl; external libOpenGLES name _PU + 'glTexParameteriv';
procedure glTexParameterx(target: GLenum; pname: GLenum; param: GLfixed); cdecl; external libOpenGLES name _PU + 'glTexParameterx';
procedure glTexParameterxv(target: GLenum; pname: GLenum; params: PGLfixed); cdecl; external libOpenGLES name _PU + 'glTexParameterxv';
procedure glTexSubImage2D(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; type_: GLenum; pixels: PGLvoid); cdecl; external libOpenGLES name _PU + 'glTexSubImage2D';
procedure glTranslatef(x: GLfloat; y: GLfloat; z: GLfloat); cdecl; external libOpenGLES name _PU + 'glTranslatef';
procedure glTranslatex(x: GLfixed; y: GLfixed; z: GLfixed); cdecl; external libOpenGLES name _PU + 'glTranslatex';
procedure glUniform1f(location: GLint; x: GLfloat); cdecl; external libOpenGLES name _PU + 'glUniform1f';
procedure glUniform1fv(location: GLint; count: GLsizei; v: PGLfloat); cdecl; external libOpenGLES name _PU + 'glUniform1fv';
procedure glUniform1i(location: GLint; x: GLint); cdecl; external libOpenGLES name _PU + 'glUniform1i';
procedure glUniform1iv(location: GLint; count: GLsizei; v: PGLint); cdecl; external libOpenGLES name _PU + 'glUniform1iv';
procedure glUniform2f(location: GLint; x: GLfloat; y: GLfloat); cdecl; external libOpenGLES name _PU + 'glUniform2f';
procedure glUniform2fv(location: GLint; count: GLsizei; v: PGLfloat); cdecl; external libOpenGLES name _PU + 'glUniform2fv';
procedure glUniform2i(location: GLint; x: GLint; y: GLint); cdecl; external libOpenGLES name _PU + 'glUniform2i';
procedure glUniform2iv(location: GLint; count: GLsizei; v: PGLint); cdecl; external libOpenGLES name _PU + 'glUniform2iv';
procedure glUniform3f(location: GLint; x: GLfloat; y: GLfloat; z: GLfloat); cdecl; external libOpenGLES name _PU + 'glUniform3f';
procedure glUniform3fv(location: GLint; count: GLsizei; v: PGLfloat); cdecl; external libOpenGLES name _PU + 'glUniform3fv';
procedure glUniform3i(location: GLint; x: GLint; y: GLint; z: GLint); cdecl; external libOpenGLES name _PU + 'glUniform3i';
procedure glUniform3iv(location: GLint; count: GLsizei; v: PGLint); cdecl; external libOpenGLES name _PU + 'glUniform3iv';
procedure glUniform4f(location: GLint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); cdecl; external libOpenGLES name _PU + 'glUniform4f';
procedure glUniform4fv(location: GLint; count: GLsizei; v: PGLfloat); cdecl; external libOpenGLES name _PU + 'glUniform4fv';
procedure glUniform4i(location: GLint; x: GLint; y: GLint; z: GLint; w: GLint); cdecl; external libOpenGLES name _PU + 'glUniform4i';
procedure glUniform4iv(location: GLint; count: GLsizei; v: PGLint); cdecl; external libOpenGLES name _PU + 'glUniform4iv';
procedure glUniformMatrix2fv(location: GLint; count: GLsizei; transpose: GLboolean; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glUniformMatrix2fv';
procedure glUniformMatrix3fv(location: GLint; count: GLsizei; transpose: GLboolean; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glUniformMatrix3fv';
procedure glUniformMatrix4fv(location: GLint; count: GLsizei; transpose: GLboolean; value: PGLfloat); cdecl; external libOpenGLES name _PU + 'glUniformMatrix4fv';
function glUnmapBufferOES(target: GLenum): GLboolean; cdecl; external libOpenGLES name _PU + 'glUnmapBufferOES';
procedure glUseProgram(program_: GLuint); cdecl; external libOpenGLES name _PU + 'glUseProgram';
procedure glUseProgramStagesEXT(pipeline: GLuint; stages: GLbitfield; program_: GLuint); cdecl; external libOpenGLES name _PU + 'glUseProgramStagesEXT';
procedure glValidateProgram(program_: GLuint); cdecl; external libOpenGLES name _PU + 'glValidateProgram';
procedure glValidateProgramPipelineEXT(pipeline: GLuint); cdecl; external libOpenGLES name _PU + 'glValidateProgramPipelineEXT';
procedure glVertexAttrib1f(indx: GLuint; x: GLfloat); cdecl; external libOpenGLES name _PU + 'glVertexAttrib1f';
procedure glVertexAttrib1fv(indx: GLuint; values: PGLfloat); cdecl; external libOpenGLES name _PU + 'glVertexAttrib1fv';
procedure glVertexAttrib2f(indx: GLuint; x: GLfloat; y: GLfloat); cdecl; external libOpenGLES name _PU + 'glVertexAttrib2f';
procedure glVertexAttrib2fv(indx: GLuint; values: PGLfloat); cdecl; external libOpenGLES name _PU + 'glVertexAttrib2fv';
procedure glVertexAttrib3f(indx: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); cdecl; external libOpenGLES name _PU + 'glVertexAttrib3f';
procedure glVertexAttrib3fv(indx: GLuint; values: PGLfloat); cdecl; external libOpenGLES name _PU + 'glVertexAttrib3fv';
procedure glVertexAttrib4f(indx: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); cdecl; external libOpenGLES name _PU + 'glVertexAttrib4f';
procedure glVertexAttrib4fv(indx: GLuint; values: PGLfloat); cdecl; external libOpenGLES name _PU + 'glVertexAttrib4fv';
procedure glVertexAttribPointer(indx: GLuint; size: GLint; type_: GLenum; normalized: GLboolean; stride: GLsizei; ptr: PGLvoid); cdecl; external libOpenGLES name _PU + 'glVertexAttribPointer';
procedure glVertexPointer(size: GLint; type_: GLenum; stride: GLsizei; pointer: PGLvoid); cdecl; external libOpenGLES name _PU + 'glVertexPointer';
procedure glViewport(x: GLint; y: GLint; width: GLsizei; height: GLsizei); cdecl; external libOpenGLES name _PU + 'glViewport';
procedure glWeightPointerOES(size: GLint; type_: GLenum; stride: GLsizei; pointer: PGLvoid); cdecl; external libOpenGLES name _PU + 'glWeightPointerOES';

type
{$M+}
// ===== Forward declarations =====


// ===== Protocol declarations =====

  EAGLDrawable = interface
    ['{6210BEF7-9C9F-4EED-AF96-4630097E8126}']
    function drawableProperties: NSDictionary; cdecl;
    procedure setDrawableProperties(drawableProperties: NSDictionary); cdecl;
  end;


type
{$M+}
// ===== Forward declarations =====

  EAGLContext = interface;

// ===== Interface declarations =====

  EAGLContextClass = interface(NSObjectClass)
    ['{323D4256-6B45-4D72-A8AF-F33A16682537}']
    {class} function currentContext: Pointer; cdecl;
    {class} function setCurrentContext(context: EAGLContext): Boolean; cdecl;
  end;
  EAGLContext = interface(NSObject)
    ['{880F106B-5A66-475F-8EBC-6F57A4378154}']
    function API: EAGLRenderingAPI; cdecl;
    function initWithAPI(api: EAGLRenderingAPI): Pointer; cdecl; overload;
    function initWithAPI(api: EAGLRenderingAPI; sharegroup: EAGLSharegroup): Pointer; cdecl; overload;
    function presentRenderbuffer(target: NSUInteger): Boolean; cdecl;
    function renderbufferStorage(target: NSUInteger; fromDrawable: Pointer): Boolean; cdecl;
    function sharegroup: EAGLSharegroup; cdecl;
  end;
  TEAGLContext = class(TOCGenericImport<EAGLContextClass, EAGLContext>)  end;



implementation

{$IF defined(IOS) and NOT defined(CPUARM)}
uses
  Posix.Dlfcn;

var
  GLESModule: THandle;

initialization
  GLESModule := dlopen(MarshaledAString(libOpenGLES), RTLD_LAZY);

finalization
  dlclose(GLESModule);
{$ENDIF IOS}

end.
