Changes since version 1.0b8

- Fixes for String uses (updates all source for Delphi 2009)


Changes since version 1.0b7
---------------------------

- Fixes possible hangup on shutdown

- CosTransactions now generated from idl


Changes since version 1.0b6
---------------------------

- idltopas writes parameters into generated file header

- Fixes in TStructDef.recursive_type (error leads to A/V when parsing TYPEVALUE with Struct member)

- Fixes in TOrb._destroy (releasing ValueFactories and destroying logger)

- Fixes in TOrb (moved interface releasing because of deadlock danger)

- Fixes in TRequest (releasing interface)

- Fixes in idl to pascal compiler (char sequences always leads to A/V)

- Fixes in idl to pascal compiler (idl's defines now can start with whitespaces)

- Heavy changes in build.xml

- Added clean task to build.xml

- Added generation of TimeService (now generated from idls), removed CosTime and CosTimerEvent

- Added generation of NameService, EventService

- Modified generation of IMR

- Possibility of building conversion inside application (no need to distribute MTDORB_UCUtils.dll)
  (check src/dorb.inc, build.properties.pattern and next - utils/unicode/compilation.txt)

- Fixed error [ 800832 ] Corba client hangs if server is stopped

- Generation of all idltests and demos during build

- Removed almost all sources, which should be generated by idltopas

- Abandoned jboss support

Changes since version 1.0b5
---------------------------

- Implement interaction with J2EE servers (see demo/jboss).

- Fixed several bugs in idl to pascal compiler.

- Added support of exceptions catch in attributes (by Oleg Bachin).

- Added support of BiDir connection (see demo/bidir).

- Added new options in idl to pascal compiler:
	guid - store generated guid for Delphi interface in ini files (use for prevent regenerate guid)
	ns - expanded namespace for file name and identifier name

- Fixed many major bugs in support of value types.

- Implement tc_null type code (by Gusev A.V.).

- Fixed a bug in GIOP connection implementation (some kind of fragmentation is wrong, fixed by Phillip Webb).

- Implement typeId directive in idl to pascal compiler.

- Implement typePrefix directive in idl to pascal compiler.

- Implement import directive in idl to pascal compiler.

- Fixed a bug in idl to pascal compiler (declaration of sequence types remove in interface section, fixed by Alex Andruschak).

- Fixed a bug in idl to pascal compiler (generate invalid repository id, fixed by Oleg Scopich).

Changes since version 1.0b4
---------------------------

- Fixed a bug in idl to pascal compiler (the attribute value is empty, fixed by Daniel Trinter).

- License change for FreeBSD.

- Parameter poa now is default in idl to pascal compiler.

- Fixed some bugs in idl to pascal compiler (invalid default value of struct in exception constructor, report by Alex Andruschak).

- Fixed a bug in TDecoder.get_wstring and TEncoder.put_wstring methods (incorrectly got and put widestrings, report by Sagi Peter).

- Fixed a bug on large data size receiving and sending (range check error, report by Sagi Peter).

- Implementation Repository for Linux platform Implemented.

- Fixed a bug in conversion of widestring (report by Sagi Peter).

- Fixed a bug in TTypeCodeChecker.union_selection (successful result was not set, report by Andreas Wellhausen).

- Improve close function of transport server.

- Fixed some bugs in idl to pascal compiler (widening list of safe name, double declaration,
  incorrect base sequencies name, forward declarations).

- Fixed a bug in idl to pascal compiler (declare type code constants move to interface section, report by Peter Sagi).

- Fixed a memory leak in TActiveMsgQueue.check_msg (fixed by Gelei Peter).

- Fixed a bug in TRequest.get_response (client side did not wait for response from the server).

- Fixed a bug in TGIOPCodec.get_locate_request (AV on handle locate message).

- Fixed a bug in TPOACurrent.get_object_id (AV beyond context, report by A.V. Gusev).

- Fixed a bug in TPOAObjectReference.decompose_ref (invalid poa name and object id).

- Added support of standart long double type.

- Added support of some standart sequences (long double, long long, unsigned long long).

- Behavior improved on failure connection (fixed by Gert Kello).

- Fixed a bug in demo/transervice (AV on client side).

- Fixed a bug in POA implementation (invalid minor code of OBJ_ADAPTER exception).

- Fixed a bug in support of IMR (IMR didn't stop created server process).

- Added support Win1251 codeset.

- Fixed a bug in codeset conversion (set invalid codeset converter for GIOP version 1.1).

- Fixed a bug in TInetAddress.resolve_host (incorrect resolve host with dots in name).

- Added support corbaloc format in IMR.

- Rewritten PI flow stack core.

- Fixed some compile problem in Delphi 5 (fixed by Gert Kello).

- Fixed a bug in TOrb.corbaname_to_object (incorrect convert to corbaloc, fixed by Jan Holst Jensen).

Changes since version 1.0b3
---------------------------

- Fixed some bugs in Implementation Repository.

- Fixed a bug in TInetAddress.resolve_host (sometimes incorrect resolve host).

- Added support of unsigned short and float sequences.

- Fixed a bug in TGIOPConnection.do_read (incorrect handle fragment GIOP messages, report by Rudiger Schmitz).

- Added support for corbaloc:ssliop (this is not standardized by the OMG, see demo\ssl).

- Fixed a bug in TPOA_impl._destroy method (incorrect order of destroy childs POA).

- Added support of Portable Interceptors (see demo/pi).

- Fixed a bug in idl to pascal compiler (error on demarshal ValueBase, fixed by Stefano Marocco).

- Fixed a bug in idl to pascal compiler (error on marshalling of a union, not encode discriminator, fixed by Stefano Marocco).

- Fixed a bug in TIOR.encode (bad IOR profile encoding, fixed by Stefano Marocco).

- Fixed a bug in TSSLComponentDecoder.decode (incorrect read data from target, report by Stefano Marocco).

- Fixed a bug in GIOP connection (AV in multithread enviroment on client side, report by Kolundin Vladimir).

- Fixed a bug in UnknownUserException.exception method (invalid transform static exception from exception).

- Fixed a bug in TAny.rewind method (did not restart type checker).

- Fixed a bug in idl to pascal compiler (safe name for exceptions members, fixed by Michael Richter).

- Fixed a bug in idl to pascal compiler (safe name for class reserved word, fixed by Michael Richter).

- Fixed a bug in method TPOAObjectReference.decompose_ref (AV if length of object key equal 1).

- Added standart minor codes for OBJECT_NOT_EXIST system exception.

- Added standart minor codes for BAD_PARAM system exception.

- Added thread safe to POA with SINGLE_THREAD_MODEL and MAIN_THREAD_MODEL policies.

- Added policy check in method TPOA_impl.set_servant_manager.

- Added standart minor codes for BAD_INV_ORDER system exception.

- Fixed a bug in POA manager (wrong exception raised during the change of state to INACTIVE  ).

- Added support native types.

- Fixed a bug in idl to pascal compiler (generate marshaler object for exceptions declared in local interface).

- Unit policies.pas was renamed into policy.pas.

- Interface ICurrent was renamed into ICORBA_Current.

- Fixed a bug in idl to pascal compiler (invalid type's repository id which is declared in interface,
  the declaration of which is inherited from another interface, report by Gusev A.V.).

- Fixed a bug in idl to pascal compiler (invalid implementation of _dispatch method of servant, report by Robin Sands).

- Fixed a bug in oneway methods implementation (client side process crashed after oneway invoke, report by Gusev A.V.).

- Fixed a leak resource (unload MTDORB_UCUtils.dll or MTDORB_UCUtils.so library).

- Fixed a leak memory (list of IOR profiles decoders does not destroy).

- Fixed a leak memory (TWorkerThread objects did not destroy).

- Fixed a leak memory (TORB object didn't destroy).

- Added thread safe to TThreadSpecificManager creator.

- Fixed a leak memory in struct's marshaler (idl to pascal compiler generates free code for struct without Finalize pascal record).

Changes since version 1.0b2
---------------------------

- Added -wp<module name> parameter in idl to pascal compiler (excludes namespace from types' names
  in specific module. More flexible than -without-prefix parameter).

- Added -without-prefix parameter in idl to pascal compiler (excludes namespace from types' names).

- Implement TimeEvent service (see demo timeevents).

- Added support of OpenORB OTS (see demo transervice).

- Implemented standart sequence of double.

- Fixed a bug in TStaticRequest.Invoke (client side gets invalid response on forwarded objects).

- Fixed a bug in TPOA_impl._destroy (the CPU was typically at 100% utilization).

- Method TORB.set_initial_reference renamed to TORB.register_initial_reference.

- Fixed a bug in TPOAMediator_impl.has_object (sometimes object is not found).

- Fixed a bug in idl to pascal compiler (support of complicated interfaces hierarchy).

- Fixed a bug in TInetAddress.resolve_host method (sometimes infinite looping).

- Added specific properties in CORBA system exception, reason and remote flag.

- Fixed a bug in TTCPTransport.write (sent huge data size was wrong).

- Fixed a bug in idl to pascal compiler (invalid behavior after 'include' directive).

- Fixed a bug in TIIOPProxy.handle_invoke_reply (after invalid demarshalling MARSHAL exception raises).

- Fixed a bug TORB.new_MessageID (added thread safe).

- Fixed a bug in codeset coder (wrong put string with zero length, for GIOP version 1.1, 1.2 only).

- Fixed a bug in TStatShort.

- Created new classes for representation of all CORBA system exception (UNKNOWN, BAD_PARAM and etc.).

- Added standart minor codes for OBJ_ADAPTER system exception.

- Fixed a bug in TPOA_impl (poa's children poa repository in multithread enviroment sometimes crashes).

- CORBA type Octet mapped to pascal type Byte.

- Fixed a bug in TIOR.decode (if count of profiles in IOR equals 0, then this method returns false).

- Fixed a bug in idl to pascal compiler (marshal and demarshal for bounded sequence types).

- Fixed a bug in idl to pascal compiler (check overloaded methods in base interfaces).

- Fixed a bug in implementation of GIOP 1.2 (incorrect write and read align).

- Implemented Local corba object.

- Added iordump utility (utils/visualior, Robert I. Griffin).

- Implemented LocateRequest, LocateReply, CloseConnection, MessageError, Fragment message type.

- Implemented unknown profile.

- Make -ORBNoCodeSets disable all codeset-related stuff, strings and
  wstrings are just copied (the latter as 16-bit shorts).

- Support GIOP 1.2 fragments.

- Fixed a bug in codeset (zero length of wide string in GIOP version 1.2).

- Fixed a compile problem in Delphi 5.

- Added version param in idl to pascal compiler (-v or -version).

- Fixed a bug in idl to pascal compiler (compile idl which contains exception defenition with -any option).

- Fixed a bug in idl to pascal compiler (corrupt get and put method names in array marshaller).

Changes since version 1.0b1
---------------------------

- Rewrote COSS/Event service to use the POA.

- Fixed a bug in Naming service (AV in nviewer).

- Fixed naming service for use in multi-threading environment.

- Fixed a bug in method resolve_ip (range check error for some IP addresses).

- Added support longlong type in Any.

- Fixed a bug in copy of Any (incorrect copy struct in any).

- Fixed a bug in method TAny.to_static_any.

- BOA now is not supported.

- Fixed a leak memory in TBootManager.

- Fixed a range check error in TBuffer.

- Fixed a bug in TGIOPCodec.setup_codeset_ids (AV if IOR doesn't content active profile. Yuichi Sugimura).

- Fixed managing of GIOPConn's active refs on client side (IIOPProxy).

- Changed thread-pool concurrency model, it doesn't use separate accept thread
  for incoming connections any more.

- Fixed ssl support.

- Implemented disabling of connection checking with using `-ORBConnectionsLimit 0',
  connection checking is disabled by default for thread-pool concurrency model.

- Fixed server scalability problem with thread-pool concurrency model
  which uses separate reader/writer threads for each GIOP connection.

- Implemented thread-per-request thread model. Please use `-ORBConcModel thread_per_request' option
  to turn it on.

- Implemented thread-per-connection thread model. Please use `-ORBConcModel thread_per_connection'
  option to turn it on.

- Implemented Implementation Repository (for Windows only, see demo/imr, don't forget to set correct path in start_imr.bat and db.txt).

- Implemented abstract interface (Shadrin Victor).

- Implemented Debug logger (mtdebug.pas).

- Fixed a bug in corbaloc_to_object method (Yuichi Sugimura).

- Fixed a bug in TStaticRequest.copy_out_args (result was always false if request contained exception).

- Fixed a range check error in marshaling and demarshaling of sequences.

- Fixed a bug in TTransport (IsBlocking flag was always true).

- Fixed a bug in IdlToPas compiler (keyword 'end' was missing, Tom Blume).

- Fixed a bug in IdlToPas compiler (compile idl which contains exception defenition with -any option).

- Fixed a compilation problem with USELIB directive.

Changes since last release from 21.09.2001
------------------------------------------

- Version 1.0 Beta1 is now released.

- ORB library was renamed to mtdorb.dll(Windows) and mtdorb.so(Linux).

- Improved performance under Windows(socket buffer size set to 65535 bytes).

- More checks (and less assertions) against ill-formed GIOP messages.

- Added -ORBGIOPMaxSize option to configure the maximum acceptable size
  for GIOP messages

- Assign default POAImplName ("Default"); so no need to use -POAImplName
  when testing persistent POAs.

- Maintain an "active profile" for each IOR, the one used for the connec-
  tion to the server. This allows correct object key handling (in case they
  differ between profiles) and correct code set handling.

- Handling of AddressingDisposition.

- New options -ORBIIOPVersion (to control the IIOP profile version of
  generated object references on the server side).

- Added support for corbaloc: and corbaname: URLs according to ptc/99-12-02(see demo demo\corbaloc).

- Added control on concurrency model(i.e., the value of the option of "-ORBConcModel",
  for example -ORBConcModel thread_per_client or -ORBConcModel thread_pool).

- Fixed a bug in TUniqueIdGenerator(added thread safe).

- Fixed a bug in TPOA_impl(added thread safe for chilred repository).

- Fixed a bug in poa repository(added thread safe).

- Fixed a bug in TServerRequest(server sometimes freezed).

- Fixed a bug in IIOPServer(server now recognizes LOCATION_FORWARD and LOCATION_FORWARD_PERM message types).

- Added a new invoke status - InvokeAddrDisp.

- Fixed a memory leak in interceptors.

- Fixed a bug in address parsers repository(added thread safe).

- Major change in thread library(osthread.pas).

	- Changed the monitor semantics to a mesa style monitor. This should
	result in higher performance for multi-CPU machines.

	- Re-implemented the TCondVar implementation under NT to have true condition
	variable semantics. Mutex is no longer implictly associated with the
	condition variable.

	- Fixed a bug where the return value of pthread_cond_wait and
	pthread_cond_timedwait was incorrectly checked potentially causing
	a succesful return from TThreadMonitor::wait() where an exception should
	have been thrown.

	- Added support for reader-writer locks.

- Fixed bugs in some examples.

- Fixed some memory leaks.

- Fixed a bug in IInetAddress.toString(always returned local address).

- Fixed a bug in IIOPProxy(shutdown operation sometimes freezed).

- Fixed a bug in time service(current timezone wasn't set correctly).

- Fixed a bug in implementation of GIOP protocol version 1.2(wasn't set alignment base).

- Fixed a bug in TIOR(method get_profile sometimes returned bad result).

- Fixed a bug in TORB.is_local(now unreachable profile is not used).

Changes since last release from 08.08.2001
------------------------------------------

- Fixed a bug in code set negotiation(wasn't set default TCS-W).

- Added support of the types wstring, wchar.

- Fixed a bug in MT demo(client application crash).

- Fixed a bug in threads pool (in Linux did not work timeout).

- Fixed a bug in TORBThread. The new thread has started immediately after creation.

- Fixed a bug where the return value of pthread_cond_wait and pthread_cond_timedwait was incorrectly
  checked potentially causing a succesful return from TCondVar.wait() where an exception should have been thrown.

- Fixed a bug in the idl compiler(wrong constant declaration).

- Fixed a bug in the idl compiler(invalid multi inheritance interface).

- Fixed a marshaling bug for sequences of Any.

- Fixed a bug in the idl compiler("assign" and "begin" names of interface method are not supported).

- Fixed a bug in the idl compiler(marshaller for union).

- Fixed a bug in the idl compiler(attributes does not correct dispatched).

- Fixed a bug in the idl compiler(default value of octet is was incorrect).

Changes since last release from 11.07.2001
------------------------------------------

- Delphi 6 now supported.

- Fixed bug in the TBuffer.put(o: Octet) method.

- Fixed bugs in the SelectDispatcher(the socket operation select did't interrupt under Linux).

- Fixed leak resource in the SelectDispatcher(the socket did't close).

- Fixed bug in the threads pool(the thread cound not stored in pool under Linux).

- Fixed bug in the TORB(the mutex FInitsRefLock should have been recursive).

- Class TAuto_lock is removed.

- Added new minor codes for BAD_PARAM and COMM_FAILURE exceptions.

- Fixed bugs in the idl compiler.

Changes since last release from 13.06.2001
------------------------------------------

- Idl to pascal compiler now implemented for Kylix.

- Added new params "-notabs" to the idl to pascal compiler. Compiler generate implementation
  in servants and skeletons(see demo \demo\notabstract).

- Class ORBException now derived from Delphi class Exception.

- Fixed bug in tcp transport. Method peer() do not return result after socket close.

- Fixed bug in time service. The flag _daylight was corrupt.

Changes since last release from 12.05.2001
------------------------------------------

- Kylix now supported(ORB tested on Mandrake 7.2 and RedHat 6.2. By the current moment for usage
  with Kylix the examples intercept and library is prepared only. Instead MTDORB_UCUtils.dll library use
  MTDORB_UCUtils.so).

- Unit "types" rename to "orbtypes"(the unit types conflict with the unit Types in Delphi6 and Kylix).

- Fixed bugs in buffer(sometimes the system did not invoke the remote method).

- Fixed marshaling bugs for 8 and 16 byte types.

- Methods "CORBA::ORB::Shutdown" and "CORBA::ORB::Destroy" now implemented.

- Fixed some memory leaks.

Changes since last release from 05.03.2001
------------------------------------------

- Added service contexts support(see detail comment in \demo\intercept).

- GIOP version 1.1 now supported(i.e., the value of the option of "-ORBGIOPVersion",
  for example -ORBGIOPVersion 1.1, default GIOP version is 1.0).

- Code set conversion now supported(see example \demo\codesets, don't forget to put
  MTDORB_UCUtils.dll library in search path).

- Fixed marshaling bugs for sequences of chars.

- Fixed marshaling bugs for chars.

Changes since last release from 03.22.2001
------------------------------------------

- Fixed some memory leaks in the IIOPServer.

- Added connections limit property(i.e., the value of  the property of "mtorb.orb.connections_limit").

- Fixed bug in the TWorkerThread. Sometimes system crashes.

- Added thread pool timeout property(i.e., the value of  the property of "mtorb.orb.thread_pool_timeout").
  After timeout the thread id removed from the pool.

- Added the function get_current_msgid in the IORB. It returns the current message identificator in thread context.

- Fixed some memory leaks in the ORB.do_shutdown.

- Fixed bugs in oneway methods implementation.

- Fixed some memory leak in the thread function.

- Fixed bug in the "longlong" type marshalling when use "USELIB" directive.
