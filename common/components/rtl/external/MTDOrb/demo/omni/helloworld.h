// This file is generated by omniidl (C++ backend)- omniORB_3_0. Do not edit.
#ifndef __helloworld_hh__
#define __helloworld_hh__

#ifndef USE_omniORB_logStream
#define USE_omniORB_logStream
#endif

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB3/CORBA.h>
#endif

#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_helloworld
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_helloworld
#endif

#ifdef USE_stub_in_nt_dll
#ifndef USE_core_stub_in_nt_dll
#define USE_core_stub_in_nt_dll
#endif
#ifndef USE_dyn_stub_in_nt_dll
#define USE_dyn_stub_in_nt_dll
#endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif

#ifndef __HelloWorld__
#define __HelloWorld__

class HelloWorld;
class _objref_HelloWorld;
class _impl_HelloWorld;

typedef _objref_HelloWorld* HelloWorld_ptr;
typedef HelloWorld_ptr HelloWorldRef;

class HelloWorld_Helper {
public:
  typedef HelloWorld_ptr _ptr_type;

  static _ptr_type _nil();
  static _CORBA_Boolean is_nil(_ptr_type);
  static void release(_ptr_type);
  static void duplicate(_ptr_type);
  static size_t NP_alignedSize(_ptr_type, size_t);
  static void marshalObjRef(_ptr_type, NetBufferedStream&);
  static _ptr_type unmarshalObjRef(NetBufferedStream&);
  static void marshalObjRef(_ptr_type, MemBufferedStream&);
  static _ptr_type unmarshalObjRef(MemBufferedStream&);
};

typedef _CORBA_ObjRef_Var<_objref_HelloWorld, HelloWorld_Helper> HelloWorld_var;
typedef _CORBA_ObjRef_OUT_arg<_objref_HelloWorld,HelloWorld_Helper > HelloWorld_out;

#endif

class HelloWorld {
public:
  // Declarations for this interface type.
  typedef HelloWorld_ptr _ptr_type;
  typedef HelloWorld_var _var_type;

  static _ptr_type _duplicate(_ptr_type);
  static _ptr_type _narrow(CORBA::Object_ptr);
  static _ptr_type _nil();

  static inline size_t _alignedSize(_ptr_type, size_t);
  static inline void _marshalObjRef(_ptr_type, NetBufferedStream&);
  static inline void _marshalObjRef(_ptr_type, MemBufferedStream&);

  static inline _ptr_type _unmarshalObjRef(NetBufferedStream& s) {
    CORBA::Object_ptr obj = CORBA::UnMarshalObjRef(_PD_repoId, s);
    _ptr_type result = _narrow(obj);
    CORBA::release(obj);
    return result;
  }

  static inline _ptr_type _unmarshalObjRef(MemBufferedStream& s) {
    CORBA::Object_ptr obj = CORBA::UnMarshalObjRef(_PD_repoId, s);
    _ptr_type result = _narrow(obj);
    CORBA::release(obj);
    return result;
  }

  static _core_attr const char* _PD_repoId;

  // Other IDL defined within this scope.
  
};

class _objref_HelloWorld :
  public virtual CORBA::Object, public virtual omniObjRef
{
public:
  void hello();
  
  inline _objref_HelloWorld() { _PR_setobj(0); }  // nil
  _objref_HelloWorld(const char*, IOP::TaggedProfileList*, omniIdentity*, omniLocalIdentity*);

protected:
  virtual ~_objref_HelloWorld();

private:
  virtual void* _ptrToObjRef(const char*);

  _objref_HelloWorld(const _objref_HelloWorld&);
  _objref_HelloWorld& operator = (const _objref_HelloWorld&);
  // not implemented
};

class _pof_HelloWorld : public proxyObjectFactory {
public:
  inline _pof_HelloWorld() : proxyObjectFactory(HelloWorld::_PD_repoId) {}
  virtual ~_pof_HelloWorld();

  virtual omniObjRef* newObjRef(const char*, IOP::TaggedProfileList*,
                                omniIdentity*, omniLocalIdentity*);
  virtual _CORBA_Boolean is_a(const char*) const;
};

class _impl_HelloWorld :
  public virtual omniServant
{
public:
  virtual ~_impl_HelloWorld();

  virtual void hello() = 0;
  
public:  // Really protected, workaround for xlC
  virtual _CORBA_Boolean _dispatch(GIOP_S&);

private:
  virtual void* _ptrToInterface(const char*);
  virtual const char* _mostDerivedRepoId();
};

class POA_HelloWorld :
  public virtual _impl_HelloWorld,
  public virtual PortableServer::ServantBase
{
public:
  virtual ~POA_HelloWorld();

  inline HelloWorld_ptr _this() {
    return (HelloWorld_ptr) _do_this(HelloWorld::_PD_repoId);
  }
};

#undef _core_attr
#undef _dyn_attr

inline size_t
HelloWorld::_alignedSize(HelloWorld_ptr obj, size_t offset) {
  return CORBA::AlignedObjRef(obj, _PD_repoId, 19, offset);
}

inline void
HelloWorld::_marshalObjRef(HelloWorld_ptr obj, NetBufferedStream& s) {
  CORBA::MarshalObjRef(obj, _PD_repoId, 19, s);
}

inline void
HelloWorld::_marshalObjRef(HelloWorld_ptr obj, MemBufferedStream& s) {
  CORBA::MarshalObjRef(obj, _PD_repoId, 19, s);
}

#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_helloworld
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_helloworld
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_helloworld
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_helloworld
#endif

#endif  // __helloworld_hh__

