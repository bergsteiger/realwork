// ***************************************************************************
//                                                                            
// Generated by the MTDORB IDL-to-Pascal Translator (1.0.1b1), 21.09.2010 13:27
//                                                                            
// Copyright (c) 2002 - 2004                                                  
// Millennium Group.                                                          
// Samara, Russia                                                             
//                                                                            
// All Rights Reserved                                                        
//                                                                            
// ***************************************************************************
// Compiled with parameters: " -i../..//idl -i./ ./\Test.idl" 
//                                                                            
unit Test_int;

{$MINENUMSIZE 4}

interface

uses
  orbtypes, code_int, orb_int, except_int;

type

  ITestIntf = interface;

  TTestStruct = record
    value_long : long;
    value_string : AnsiString;
  end;

  TTestEnum = (
    te_Valie1,
    te_Value2
  );

  TTestOctetSeq = Array of octet;

  ITestException = interface(IUserException)
  ['{989468DE-C0A7-41F2-8499-0D675525DD4F}']
    function message: AnsiString; overload;
    procedure message(const val : AnsiString); overload;
  end;

  ITestIntfFactory = interface
  ['{32D33F86-44A1-4F25-B8CB-12E8CDC3765E}']
    function create_test_intf: ITestIntf;
  end;

  ITestIntf = interface
  ['{65305CD2-D70E-41F9-9910-0B9C81488F3A}']
    function check_short(const value_in: Short; var value_inout: Short; out value_out: Short): Short;
    function check_long(const value_in: long; var value_inout: long; out value_out: long): long;
    function check_unsigned_short(const value_in: _ushort; var value_inout: _ushort; out value_out: _ushort): _ushort;
    function check_unsigned_long(const value_in: _ulong; var value_inout: _ulong; out value_out: _ulong): _ulong;
    function check_float(const value_in: Float; var value_inout: Float; out value_out: Float): Float;
    function check_double(const value_in: Double; var value_inout: Double; out value_out: Double): Double;
    function check_boolean(const value_in: Boolean; var value_inout: Boolean; out value_out: Boolean): Boolean;
    function check_char(const value_in: AnsiChar; var value_inout: AnsiChar; out value_out: AnsiChar): AnsiChar;
    function check_octet(const value_in: octet; var value_inout: octet; out value_out: octet): octet;
    function check_string(const value_in: AnsiString; var value_inout: AnsiString; out value_out: AnsiString): AnsiString;
    function check_longlong(const value_in: longlong; var value_inout: longlong; out value_out: longlong): longlong;
    function check_unsigned_longlong(const value_in: _ulonglong; var value_inout: _ulonglong; out value_out: _ulonglong): _ulonglong;
    function check_wchar(const value_in: WideChar; var value_inout: WideChar; out value_out: WideChar): WideChar;
    function check_wstring(const value_in: WideString; var value_inout: WideString; out value_out: WideString): WideString;
    function check_octet_seq(const value_in: TTestOctetSeq; var value_inout: TTestOctetSeq; out value_out: TTestOctetSeq): TTestOctetSeq;
    function check_struct(const value_in: TTestStruct; var value_inout: TTestStruct; out value_out: TTestStruct): TTestStruct;
    function check_enum(const value_in: TTestEnum; var value_inout: TTestEnum; out value_out: TTestEnum): TTestEnum;
    function check_obj(const value_in: ITestIntf; var value_inout: ITestIntf; out value_out: ITestIntf): ITestIntf;
    procedure check_exception(const mes: AnsiString);
    procedure deactivate;
  end;

implementation

end.
