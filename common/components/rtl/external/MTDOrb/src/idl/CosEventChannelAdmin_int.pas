// ***************************************************************************
//                                                                            
// Generated by the MTDORB IDL-to-Pascal Translator (1.0.1b1), 21.09.2010 13:25
//                                                                            
// Copyright (c) 2002 - 2004                                                  
// Millennium Group.                                                          
// Samara, Russia                                                             
//                                                                            
// All Rights Reserved                                                        
//                                                                            
// ***************************************************************************
// Compiled with parameters: " -without-prefix -i..\..\idl ..\..\idl\CosEventChannelAdmin.idl" 
//                                                                            
unit CosEventChannelAdmin_int;

{$MINENUMSIZE 4}

interface

uses
  orbtypes, code_int, orb_int, CosEventComm_int, except_int;

type

// module CosEventChannelAdmin types

  IAlreadyConnected = interface(IUserException)
  ['{28B5ED55-7AD0-4F90-BA8A-A133D85EDF5B}']
  end;

  ITypeError = interface(IUserException)
  ['{8D30BD60-824D-4C69-AA73-E8756AA66FD5}']
  end;

  IProxyPushConsumer = interface(IPushConsumer)
  ['{7D2738E9-3552-4D81-9EAC-913704C6C252}']
    procedure connect_push_supplier(const push_supplier: IPushSupplier);
  end;

  IProxyPullSupplier = interface(IPullSupplier)
  ['{D9E32D91-922A-427B-A1CD-2B8A4A249900}']
    procedure connect_pull_consumer(const pull_consumer: IPullConsumer);
  end;

  IProxyPullConsumer = interface(IPullConsumer)
  ['{446AD76B-DBE9-4D6B-BAD0-5D3DE53BF69C}']
    procedure connect_pull_supplier(const pull_supplier: IPullSupplier);
  end;

  IProxyPushSupplier = interface(IPushSupplier)
  ['{8FC1810D-8A6E-44BC-9CC7-FFC0E33EB305}']
    procedure connect_push_consumer(const push_consumer: IPushConsumer);
  end;

  IConsumerAdmin = interface
  ['{E5F8EF88-B643-4B29-8FDA-936822144A9A}']
    function obtain_push_supplier: IProxyPushSupplier;
    function obtain_pull_supplier: IProxyPullSupplier;
  end;

  ISupplierAdmin = interface
  ['{6EC6BD39-09DF-42E3-83B4-27EB191F17A8}']
    function obtain_push_consumer: IProxyPushConsumer;
    function obtain_pull_consumer: IProxyPullConsumer;
  end;

  IEventChannel = interface
  ['{431817F7-164C-4938-B30E-912268FA9871}']
    function for_consumers: IConsumerAdmin;
    function for_suppliers: ISupplierAdmin;
    procedure _destroy;
  end;

// module SimpleEventChannelAdmin types

  IEventChannelFactory = interface
  ['{CF51AF6A-9CD2-45E7-B683-5046A175ABF3}']
    function create_eventchannel: IEventChannel;
  end;

implementation

end.
