// ***************************************************************************
//                                                                            
// Generated by the MTDORB IDL-to-Pascal Translator (1.0.1b1), 21.09.2010 13:25
//                                                                            
// Copyright (c) 2002 - 2004                                                  
// Millennium Group.                                                          
// Samara, Russia                                                             
//                                                                            
// All Rights Reserved                                                        
//                                                                            
// ***************************************************************************
// Compiled with parameters: " -any -wpCosEventComm -i..\..\idl ..\..\idl\CosTimerEvent.idl" 
//                                                                            
unit CosTimerEvent_int;

{$MINENUMSIZE 4}

interface

uses
  orbtypes, code_int, orb_int, TimeBase_int, CosTime_int, except_int, CosEventComm_int;

type

// module CosTimerEvent types

  TCosTimerEvent_TimeType = (
    TTAbsolute,
    TTRelative,
    TTPeriodic
  );

  TCosTimerEvent_EventStatus = (
    ESTimeSet,
    ESTimeCleared,
    ESTriggered,
    ESFailedTrigger
  );

  TCosTimerEvent_TimerEventT = record
    utc : TTimeBase_UtcT;
    event_data : IAny;
  end;

  ICosTimerEvent_TimerEventHandler = interface
  ['{191DD060-A6B3-429D-BFA2-618D40842DD0}']
    function time_set(out uto: ICosTime_UTO): Boolean;
    procedure SetTimer(const time_type: TCosTimerEvent_TimeType; const trigger_time: ICosTime_UTO);
    function cancel_timer: Boolean;
    procedure set_data(const event_data: IAny);
    function _get_status: TCosTimerEvent_EventStatus;
    property status: TCosTimerEvent_EventStatus read _get_status;
  end;

  ICosTimerEvent_TimerEventService = interface
  ['{2C3A7661-87CB-41BF-8ED4-A12168410EF5}']
    function register(const event_interface: IPushConsumer; const data: IAny): ICosTimerEvent_TimerEventHandler;
    procedure unregister(const timer_event_handler: ICosTimerEvent_TimerEventHandler);
    function event_time(const timer_event: TCosTimerEvent_TimerEventT): ICosTime_UTO;
  end;

implementation

end.
