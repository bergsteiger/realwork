// ***************************************************************************
//                                                                            
// Generated by the MTDORB IDL-to-Pascal Translator (1.0.b6), 29.07.2004 16:36
//                                                                            
// Copyright (c) 2002 - 2004                                                  
// Millennium Group.                                                          
// Samara, Russia                                                             
//                                                                            
// All Rights Reserved                                                        
//                                                                            
// ***************************************************************************
unit EJB;

interface

uses
  Classes, orb_int, orb, req_int, code_int, imr, imr_int, env_int, stdstat, std_seq,
  orbtypes, exceptions, except_int, EJB_int, value_int, value, poa_int, poa;

type

  {** RMI:java.lang.StackTraceElement:CD38F9930EA8AAEC:6109C59A2636DD85 } 
  Tjava_lang_StackTraceElement = class(TValueBase,Ijava_lang_StackTraceElement,IValueBase)
  protected
    Fjava_lang_StackTraceElement_lineNumber : long;
    Fjava_lang_StackTraceElement_declaringClass : IWStringValue;
    Fjava_lang_StackTraceElement_fileName : IWStringValue;
    Fjava_lang_StackTraceElement_methodName : IWStringValue;
    function lineNumber : long; overload;
    procedure lineNumber(val : long); overload;
    function declaringClass : IWStringValue; overload;
    procedure declaringClass(val : IWStringValue); overload;
    function fileName : IWStringValue; overload;
    procedure fileName(val : IWStringValue); overload;
    function methodName : IWStringValue; overload;
    procedure methodName(val : IWStringValue); overload;
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_StackTraceElement;
  end;

  Tjava_lang_StackTraceElement_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  java_lang_StackTraceElement_seq = array of Ijava_lang_StackTraceElement;
  Pjava_lang_StackTraceElement_seq = ^java_lang_StackTraceElement_seq;

  Tjava_lang_StackTraceElement_seq_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:[Ljava.lang.StackTraceElement;:CD38F9930EA8AAEC:6109C59A2636DD85 } 
  Tjava_lang_seq1_StackTraceElement = class(TValueBase,Ijava_lang_seq1_StackTraceElement,IValueBase)
  protected
    FValue : Tjava_lang_StackTraceElementSeq;
    function _copy_value : IValueBase; override;
    function _value : Tjava_lang_StackTraceElementSeq; overload;
    procedure _value(val : Tjava_lang_StackTraceElementSeq); overload;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    constructor Create(val:Tjava_lang_StackTraceElementSeq); overload;
    constructor Create(val:Ijava_lang_seq1_StackTraceElement); overload;
    class function _downcast(const vb : IValueBase): Ijava_lang_seq1_StackTraceElement;
  end;

  Tjava_lang_seq1_StackTraceElement_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:java.lang.Throwable:F8678B4F4D2EB705:D5C635273977B8CB } 
  Tjava_lang_Throwable = class(TValueBase,Ijava_lang_Throwable,IValueBase)
  protected
    Fjava_lang_Throwable_cause : Ijava_lang_Throwable;
    Fjava_lang_Throwable_detailMessage : IWStringValue;
    Fjava_lang_Throwable_stackTrace : Ijava_lang_seq1_StackTraceElement;
    function cause : Ijava_lang_Throwable; overload;
    procedure cause(val : Ijava_lang_Throwable); overload;
    function detailMessage : IWStringValue; overload;
    procedure detailMessage(val : IWStringValue); overload;
    function stackTrace : Ijava_lang_seq1_StackTraceElement; overload;
    procedure stackTrace(val : Ijava_lang_seq1_StackTraceElement); overload;
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_Throwable;
  end;

  Tjava_lang_Throwable_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  Tjava_lang_ThrowableEx_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:java/lang/ThrowableEx:1.0 } 
  Tjava_lang_ThrowableEx = class(UserException,Ijava_lang_ThrowableEx)
  private
    Fvalue : Ijava_lang_Throwable;
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
    procedure value(const val : Ijava_lang_Throwable); overload;
  public
    function value: Ijava_lang_Throwable; overload;
    constructor Create(ex: Tjava_lang_ThrowableEx); overload;
    constructor Create(_value: Ijava_lang_Throwable = nil); overload;
  end;

  {** RMI:java.lang.Exception:77E8B62CD7E79AA2:D0FD1F3E1A3B1CC4 } 
  Tjava_lang_Exception = class(Tjava_lang_Throwable,Ijava_lang_Exception,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_Exception;
  end;

  Tjava_lang_Exception_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  Tjava_lang_Ex_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:java/lang/Ex:1.0 } 
  Tjava_lang_Ex = class(UserException,Ijava_lang_Ex)
  private
    Fvalue : Ijava_lang_Exception;
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
    procedure value(const val : Ijava_lang_Exception); overload;
  public
    function value: Ijava_lang_Exception; overload;
    constructor Create(ex: Tjava_lang_Ex); overload;
    constructor Create(_value: Ijava_lang_Exception = nil); overload;
  end;

  {** RMI:java.lang.Error:77E8B62CD7E79AA2:451D36568B820E56 } 
  Tjava_lang_Error = class(Tjava_lang_Throwable,Ijava_lang_Error,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_Error;
  end;

  Tjava_lang_Error_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  Tjava_lang_ErrorEx_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:java/lang/ErrorEx:1.0 } 
  Tjava_lang_ErrorEx = class(UserException,Ijava_lang_ErrorEx)
  private
    Fvalue : Ijava_lang_Error;
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
    procedure value(const val : Ijava_lang_Error); overload;
  public
    function value: Ijava_lang_Error; overload;
    constructor Create(ex: Tjava_lang_ErrorEx); overload;
    constructor Create(_value: Ijava_lang_Error = nil); overload;
  end;

  {** IDL:java/lang/Comparable:1.0 } 
  Tjava_lang_Comparable = class(TValueBase,Ijava_lang_Comparable,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_Comparable;
  end;

  Tjava_lang_Comparable_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:java.lang.Number:071DA8BE7F971128:86AC951D0B94E08B } 
  Tjava_lang_Number = class(TValueBase,Ijava_lang_Number,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_Number;
  end;

  Tjava_lang_Number_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:java.lang.Integer:47693FFB4FE579F4:12E2A0A4F7818738 } 
  Tjava_lang_Integer = class(Tjava_lang_Number,Ijava_lang_Integer,IValueBase)
  protected
    Fjava_lang_Integer_value : long;
    function value : long; overload;
    procedure value(val : long); overload;
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_Integer;
  end;

  Tjava_lang_Integer_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:java.lang.Long:205F6CCF002E6E90:3B8BE490CC8F23DF } 
  Tjava_lang_Long = class(Tjava_lang_Number,Ijava_lang_Long,IValueBase)
  protected
    Fjava_lang_Long_value : longlong;
    function value : longlong; overload;
    procedure value(val : longlong); overload;
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_Long;
  end;

  Tjava_lang_Long_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:java.lang.Boolean:FE070D6A7BD7419A:CD207280D59CFAEE } 
  Tjava_lang_Boolean = class(TValueBase,Ijava_lang_Boolean,IValueBase)
  protected
    Fjava_lang_Boolean_value : boolean;
    function value : boolean; overload;
    procedure value(val : boolean); overload;
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijava_lang_Boolean;
  end;

  Tjava_lang_Boolean_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:javax.ejb.CreateException:048A3675A6FD5463:575FB6C03D49AD6A } 
  Tjavax_ejb_CreateException = class(Tjava_lang_Exception,Ijavax_ejb_CreateException,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijavax_ejb_CreateException;
  end;

  Tjavax_ejb_CreateException_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  Tjavax_ejb_CreateEx_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:javax/ejb/CreateEx:1.0 } 
  Tjavax_ejb_CreateEx = class(UserException,Ijavax_ejb_CreateEx)
  private
    Fvalue : Ijavax_ejb_CreateException;
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
    procedure value(const val : Ijavax_ejb_CreateException); overload;
  public
    function value: Ijavax_ejb_CreateException; overload;
    constructor Create(ex: Tjavax_ejb_CreateEx); overload;
    constructor Create(_value: Ijavax_ejb_CreateException = nil); overload;
  end;

  {** RMI:javax.ejb.Handle:0000000000000000 } 
  Tjavax_ejb_Handle = class(TAbstractBase,Ijavax_ejb_Handle)
  protected
    function _get_EJBObject: Ijavax_ejb_EJBObject; virtual; abstract;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijavax_ejb_Handle; 
    class function _narrow(const obj : IORBObject): Ijavax_ejb_Handle; overload;
    class function _narrow(const obj : IAbstractBase): Ijavax_ejb_Handle; overload;
    class function narrow_helper2(const obj: IORBObject): Boolean;
  end;

  {** stub for interface RMI:javax.ejb.Handle:0000000000000000} 
  Tjavax_ejb_Handle_stub = class(Tjavax_ejb_Handle)
  protected
    function _get_EJBObject: Ijavax_ejb_EJBObject; override;
  end;

  {** POA stub for interface RMI:javax.ejb.Handle:0000000000000000} 
  Tjavax_ejb_Handle_stub_clp = class(TPOAStub,IPOAStub,Ijavax_ejb_Handle)
  protected
    function _get_EJBObject: Ijavax_ejb_EJBObject; virtual;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  end;

  {** servant for interface RMI:javax.ejb.Handle:0000000000000000} 
  Tjavax_ejb_Handle_serv = class(TPOAStaticImplementation,IPOAStaticImplementation,IServant,Ijavax_ejb_Handle)
  protected
    function _get_EJBObject: Ijavax_ejb_EJBObject; virtual; abstract;
    function _primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID; override;
    function _make_stub(const poa: IPOA; const obj : IORBObject): IORBObject; override;
    function _is_a(const repoid: RepositoryID): Boolean; override;
    procedure invoke(const serv: IStaticServerRequest); override;
    function _dispatch(const req: IStaticServerRequest): Boolean;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    function _this(): Ijavax_ejb_Handle;
    class function _narrow(const srv : IServant): Ijavax_ejb_Handle;
  end;

  Tjavax_ejb_Handle_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:javax.ejb.HomeHandle:0000000000000000 } 
  Tjavax_ejb_HomeHandle = class(TAbstractBase,Ijavax_ejb_HomeHandle)
  protected
    function _get_EJBHome: Ijavax_ejb_EJBHome; virtual; abstract;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijavax_ejb_HomeHandle; 
    class function _narrow(const obj : IORBObject): Ijavax_ejb_HomeHandle; overload;
    class function _narrow(const obj : IAbstractBase): Ijavax_ejb_HomeHandle; overload;
    class function narrow_helper2(const obj: IORBObject): Boolean;
  end;

  {** stub for interface RMI:javax.ejb.HomeHandle:0000000000000000} 
  Tjavax_ejb_HomeHandle_stub = class(Tjavax_ejb_HomeHandle)
  protected
    function _get_EJBHome: Ijavax_ejb_EJBHome; override;
  end;

  {** POA stub for interface RMI:javax.ejb.HomeHandle:0000000000000000} 
  Tjavax_ejb_HomeHandle_stub_clp = class(TPOAStub,IPOAStub,Ijavax_ejb_HomeHandle)
  protected
    function _get_EJBHome: Ijavax_ejb_EJBHome; virtual;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  end;

  {** servant for interface RMI:javax.ejb.HomeHandle:0000000000000000} 
  Tjavax_ejb_HomeHandle_serv = class(TPOAStaticImplementation,IPOAStaticImplementation,IServant,Ijavax_ejb_HomeHandle)
  protected
    function _get_EJBHome: Ijavax_ejb_EJBHome; virtual; abstract;
    function _primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID; override;
    function _make_stub(const poa: IPOA; const obj : IORBObject): IORBObject; override;
    function _is_a(const repoid: RepositoryID): Boolean; override;
    procedure invoke(const serv: IStaticServerRequest); override;
    function _dispatch(const req: IStaticServerRequest): Boolean;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    function _this(): Ijavax_ejb_HomeHandle;
    class function _narrow(const srv : IServant): Ijavax_ejb_HomeHandle;
  end;

  Tjavax_ejb_HomeHandle_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:javax/ejb/EJBMetaData:1.0 } 
  Tjavax_ejb_EJBMetaData = class(TValueBase,Ijavax_ejb_EJBMetaData,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijavax_ejb_EJBMetaData;
  end;

  Tjavax_ejb_EJBMetaData_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:javax.ejb.RemoveException:048A3675A6FD5463:C06A008FD05A462A } 
  Tjavax_ejb_RemoveException = class(Tjava_lang_Exception,Ijavax_ejb_RemoveException,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijavax_ejb_RemoveException;
  end;

  Tjavax_ejb_RemoveException_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  Tjavax_ejb_RemoveEx_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:javax/ejb/RemoveEx:1.0 } 
  Tjavax_ejb_RemoveEx = class(UserException,Ijavax_ejb_RemoveEx)
  private
    Fvalue : Ijavax_ejb_RemoveException;
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
    procedure value(const val : Ijavax_ejb_RemoveException); overload;
  public
    function value: Ijavax_ejb_RemoveException; overload;
    constructor Create(ex: Tjavax_ejb_RemoveEx); overload;
    constructor Create(_value: Ijavax_ejb_RemoveException = nil); overload;
  end;

  {** RMI:javax.ejb.FinderException:048A3675A6FD5463:79EE1514C8B7CA15 } 
  Tjavax_ejb_FinderException = class(Tjava_lang_Exception,Ijavax_ejb_FinderException,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijavax_ejb_FinderException;
  end;

  Tjavax_ejb_FinderException_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  Tjavax_ejb_FinderEx_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:javax/ejb/FinderEx:1.0 } 
  Tjavax_ejb_FinderEx = class(UserException,Ijavax_ejb_FinderEx)
  private
    Fvalue : Ijavax_ejb_FinderException;
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
    procedure value(const val : Ijavax_ejb_FinderException); overload;
  public
    function value: Ijavax_ejb_FinderException; overload;
    constructor Create(ex: Tjavax_ejb_FinderEx); overload;
    constructor Create(_value: Ijavax_ejb_FinderException = nil); overload;
  end;

  {** RMI:javax.ejb.ObjectNotFoundException:2E921E9DEB124A7F:00106DD5ADF01DDA } 
  Tjavax_ejb_ObjectNotFoundException = class(Tjavax_ejb_FinderException,Ijavax_ejb_ObjectNotFoundException,IValueBase)
  protected
    function _copy_value : IValueBase; override;
    procedure _copy_members(const v: TObject); override;
    procedure _marshal_members(const enc: IEncoder); override;
    procedure _get_marshal_info(const str: TStrings;out chunked: Boolean); override;
    function  _demarshal_members(const dec: Idecoder): Boolean; override;
    function narrow_helper(const repoid: RepositoryID): Pointer; override;
  public
    class function _downcast(const vb : IValueBase): Ijavax_ejb_ObjectNotFoundException;
  end;

  Tjavax_ejb_ObjectNotFoundException_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  Tjavax_ejb_ObjectNotFoundEx_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** IDL:javax/ejb/ObjectNotFoundEx:1.0 } 
  Tjavax_ejb_ObjectNotFoundEx = class(UserException,Ijavax_ejb_ObjectNotFoundEx)
  private
    Fvalue : Ijavax_ejb_ObjectNotFoundException;
  protected
    procedure throw; override;
    function clone(): IORBException; override;
    function repoid(): RepositoryID; override;
    procedure encode(const enc: IEncoder); override;
    procedure encode_any(const a: IAny); override;
    procedure value(const val : Ijavax_ejb_ObjectNotFoundException); overload;
  public
    function value: Ijavax_ejb_ObjectNotFoundException; overload;
    constructor Create(ex: Tjavax_ejb_ObjectNotFoundEx); overload;
    constructor Create(_value: Ijavax_ejb_ObjectNotFoundException = nil); overload;
  end;

  {** RMI:javax.ejb.EJBHome:0000000000000000 } 
  Tjavax_ejb_EJBHome = class(TORBObject,Ijavax_ejb_EJBHome)
  protected
    procedure remove__java_lang_Object(const arg0: Tjava_lang_Object); virtual; abstract;
    procedure remove__javax_ejb_Handle(const arg0: Ijavax_ejb_Handle); virtual; abstract;
    function _get_EJBMetaData: Ijavax_ejb_EJBMetaData; virtual; abstract;
    function _get_homeHandle: Ijavax_ejb_HomeHandle; virtual; abstract;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    class function _narrow(const obj : IORBObject): Ijavax_ejb_EJBHome;
    class function narrow_helper2(const obj: IORBObject): Boolean;
  end;

  {** stub for interface RMI:javax.ejb.EJBHome:0000000000000000} 
  Tjavax_ejb_EJBHome_stub = class(Tjavax_ejb_EJBHome)
  protected
    procedure remove__java_lang_Object(const arg0: Tjava_lang_Object); override;
    procedure remove__javax_ejb_Handle(const arg0: Ijavax_ejb_Handle); override;
    function _get_EJBMetaData: Ijavax_ejb_EJBMetaData; override;
    function _get_homeHandle: Ijavax_ejb_HomeHandle; override;
  end;

  {** POA stub for interface RMI:javax.ejb.EJBHome:0000000000000000} 
  Tjavax_ejb_EJBHome_stub_clp = class(TPOAStub,IPOAStub,Ijavax_ejb_EJBHome)
  protected
    procedure remove__java_lang_Object(const arg0: Tjava_lang_Object); virtual;
    procedure remove__javax_ejb_Handle(const arg0: Ijavax_ejb_Handle); virtual;
    function _get_EJBMetaData: Ijavax_ejb_EJBMetaData; virtual;
    function _get_homeHandle: Ijavax_ejb_HomeHandle; virtual;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  end;

  {** servant for interface RMI:javax.ejb.EJBHome:0000000000000000} 
  Tjavax_ejb_EJBHome_serv = class(TPOAStaticImplementation,IPOAStaticImplementation,IServant,Ijavax_ejb_EJBHome)
  protected
    procedure remove__java_lang_Object(const arg0: Tjava_lang_Object); virtual; abstract;
    procedure remove__javax_ejb_Handle(const arg0: Ijavax_ejb_Handle); virtual; abstract;
    function _get_EJBMetaData: Ijavax_ejb_EJBMetaData; virtual; abstract;
    function _get_homeHandle: Ijavax_ejb_HomeHandle; virtual; abstract;
    function _primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID; override;
    function _make_stub(const poa: IPOA; const obj : IORBObject): IORBObject; override;
    function _is_a(const repoid: RepositoryID): Boolean; override;
    procedure invoke(const serv: IStaticServerRequest); override;
    function _dispatch(const req: IStaticServerRequest): Boolean;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    function _this(): Ijavax_ejb_EJBHome;
    class function _narrow(const srv : IServant): Ijavax_ejb_EJBHome;
  end;

  Tjavax_ejb_EJBHome_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  {** RMI:javax.ejb.EJBObject:0000000000000000 } 
  Tjavax_ejb_EJBObject = class(TORBObject,Ijavax_ejb_EJBObject)
  protected
    function isIdentical(const arg0: Ijavax_ejb_EJBObject): boolean; virtual; abstract;
    procedure remove; virtual; abstract;
    function _get_EJBHome: Ijavax_ejb_EJBHome; virtual; abstract;
    function _get_handle: Ijavax_ejb_Handle; virtual; abstract;
    function _get_primaryKey: Tjava_lang_Object; virtual; abstract;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    class function _narrow(const obj : IORBObject): Ijavax_ejb_EJBObject;
    class function narrow_helper2(const obj: IORBObject): Boolean;
  end;

  {** stub for interface RMI:javax.ejb.EJBObject:0000000000000000} 
  Tjavax_ejb_EJBObject_stub = class(Tjavax_ejb_EJBObject)
  protected
    function isIdentical(const arg0: Ijavax_ejb_EJBObject): boolean; override;
    procedure remove; override;
    function _get_EJBHome: Ijavax_ejb_EJBHome; override;
    function _get_handle: Ijavax_ejb_Handle; override;
    function _get_primaryKey: Tjava_lang_Object; override;
  end;

  {** POA stub for interface RMI:javax.ejb.EJBObject:0000000000000000} 
  Tjavax_ejb_EJBObject_stub_clp = class(TPOAStub,IPOAStub,Ijavax_ejb_EJBObject)
  protected
    function isIdentical(const arg0: Ijavax_ejb_EJBObject): boolean; virtual;
    procedure remove; virtual;
    function _get_EJBHome: Ijavax_ejb_EJBHome; virtual;
    function _get_handle: Ijavax_ejb_Handle; virtual;
    function _get_primaryKey: Tjava_lang_Object; virtual;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  end;

  {** servant for interface RMI:javax.ejb.EJBObject:0000000000000000} 
  Tjavax_ejb_EJBObject_serv = class(TPOAStaticImplementation,IPOAStaticImplementation,IServant,Ijavax_ejb_EJBObject)
  protected
    function isIdentical(const arg0: Ijavax_ejb_EJBObject): boolean; virtual; abstract;
    procedure remove; virtual; abstract;
    function _get_EJBHome: Ijavax_ejb_EJBHome; virtual; abstract;
    function _get_handle: Ijavax_ejb_Handle; virtual; abstract;
    function _get_primaryKey: Tjava_lang_Object; virtual; abstract;
    function _primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID; override;
    function _make_stub(const poa: IPOA; const obj : IORBObject): IORBObject; override;
    function _is_a(const repoid: RepositoryID): Boolean; override;
    procedure invoke(const serv: IStaticServerRequest); override;
    function _dispatch(const req: IStaticServerRequest): Boolean;
    function narrow_helper(const str: RepositoryID): Pointer; override;
  public
    function _this(): Ijavax_ejb_EJBObject;
    class function _narrow(const srv : IServant): Ijavax_ejb_EJBObject;
  end;

  Tjavax_ejb_EJBObject_marshaller = class(TAbstractStat,IStaticTypeInfo)
  protected
    procedure _assign(dst,src: Pointer); override;
    function demarshal(dec: IDecoder;const addr : Pointer): Boolean;
    procedure marshal(enc: IEncoder; const addr : Pointer);
    procedure _create(var addr: Pointer); override;
    procedure _free(var addr: Pointer);
    function typecode: ITypeCode; override;
  end;

  function java_lang_StackTraceElement_to_any(const val: Ijava_lang_StackTraceElement): IAny;
  function any_to_java_lang_StackTraceElement(const a: IAny; var val: Ijava_lang_StackTraceElement): Boolean;

  function java_lang_StackTraceElement_seq_to_any(const val): IAny;
  function any_to_java_lang_StackTraceElement_seq(const a: IAny; var val): Boolean;

  function java_lang_seq1_StackTraceElement_to_any(const val: Ijava_lang_seq1_StackTraceElement): IAny;
  function any_to_java_lang_seq1_StackTraceElement(const a: IAny; var val: Ijava_lang_seq1_StackTraceElement): Boolean;

  function java_lang_Throwable_to_any(const val: Ijava_lang_Throwable): IAny;
  function any_to_java_lang_Throwable(const a: IAny; var val: Ijava_lang_Throwable): Boolean;

  function java_lang_ThrowableEx_to_any(const val: Ijava_lang_ThrowableEx): IAny;
  function any_to_java_lang_ThrowableEx(const a: IAny; var val: Ijava_lang_ThrowableEx): Boolean;

  function java_lang_Exception_to_any(const val: Ijava_lang_Exception): IAny;
  function any_to_java_lang_Exception(const a: IAny; var val: Ijava_lang_Exception): Boolean;

  function java_lang_Ex_to_any(const val: Ijava_lang_Ex): IAny;
  function any_to_java_lang_Ex(const a: IAny; var val: Ijava_lang_Ex): Boolean;

  function java_lang_Error_to_any(const val: Ijava_lang_Error): IAny;
  function any_to_java_lang_Error(const a: IAny; var val: Ijava_lang_Error): Boolean;

  function java_lang_ErrorEx_to_any(const val: Ijava_lang_ErrorEx): IAny;
  function any_to_java_lang_ErrorEx(const a: IAny; var val: Ijava_lang_ErrorEx): Boolean;

  function java_lang_Comparable_to_any(const val: Ijava_lang_Comparable): IAny;
  function any_to_java_lang_Comparable(const a: IAny; var val: Ijava_lang_Comparable): Boolean;

  function java_lang_Number_to_any(const val: Ijava_lang_Number): IAny;
  function any_to_java_lang_Number(const a: IAny; var val: Ijava_lang_Number): Boolean;

  function java_lang_Integer_to_any(const val: Ijava_lang_Integer): IAny;
  function any_to_java_lang_Integer(const a: IAny; var val: Ijava_lang_Integer): Boolean;

  function java_lang_Long_to_any(const val: Ijava_lang_Long): IAny;
  function any_to_java_lang_Long(const a: IAny; var val: Ijava_lang_Long): Boolean;

  function java_lang_Boolean_to_any(const val: Ijava_lang_Boolean): IAny;
  function any_to_java_lang_Boolean(const a: IAny; var val: Ijava_lang_Boolean): Boolean;

  function javax_ejb_CreateException_to_any(const val: Ijavax_ejb_CreateException): IAny;
  function any_to_javax_ejb_CreateException(const a: IAny; var val: Ijavax_ejb_CreateException): Boolean;

  function javax_ejb_CreateEx_to_any(const val: Ijavax_ejb_CreateEx): IAny;
  function any_to_javax_ejb_CreateEx(const a: IAny; var val: Ijavax_ejb_CreateEx): Boolean;

  function javax_ejb_Handle_to_any(const val: Ijavax_ejb_Handle): IAny;
  function any_to_javax_ejb_Handle(const a: IAny; var val: Ijavax_ejb_Handle): Boolean;

  function javax_ejb_HomeHandle_to_any(const val: Ijavax_ejb_HomeHandle): IAny;
  function any_to_javax_ejb_HomeHandle(const a: IAny; var val: Ijavax_ejb_HomeHandle): Boolean;

  function javax_ejb_EJBMetaData_to_any(const val: Ijavax_ejb_EJBMetaData): IAny;
  function any_to_javax_ejb_EJBMetaData(const a: IAny; var val: Ijavax_ejb_EJBMetaData): Boolean;

  function javax_ejb_RemoveException_to_any(const val: Ijavax_ejb_RemoveException): IAny;
  function any_to_javax_ejb_RemoveException(const a: IAny; var val: Ijavax_ejb_RemoveException): Boolean;

  function javax_ejb_RemoveEx_to_any(const val: Ijavax_ejb_RemoveEx): IAny;
  function any_to_javax_ejb_RemoveEx(const a: IAny; var val: Ijavax_ejb_RemoveEx): Boolean;

  function javax_ejb_FinderException_to_any(const val: Ijavax_ejb_FinderException): IAny;
  function any_to_javax_ejb_FinderException(const a: IAny; var val: Ijavax_ejb_FinderException): Boolean;

  function javax_ejb_FinderEx_to_any(const val: Ijavax_ejb_FinderEx): IAny;
  function any_to_javax_ejb_FinderEx(const a: IAny; var val: Ijavax_ejb_FinderEx): Boolean;

  function javax_ejb_ObjectNotFoundException_to_any(const val: Ijavax_ejb_ObjectNotFoundException): IAny;
  function any_to_javax_ejb_ObjectNotFoundException(const a: IAny; var val: Ijavax_ejb_ObjectNotFoundException): Boolean;

  function javax_ejb_ObjectNotFoundEx_to_any(const val: Ijavax_ejb_ObjectNotFoundEx): IAny;
  function any_to_javax_ejb_ObjectNotFoundEx(const a: IAny; var val: Ijavax_ejb_ObjectNotFoundEx): Boolean;

  function javax_ejb_EJBHome_to_any(const val: Ijavax_ejb_EJBHome): IAny;
  function any_to_javax_ejb_EJBHome(const a: IAny; var val: Ijavax_ejb_EJBHome): Boolean;

  function javax_ejb_EJBObject_to_any(const val: Ijavax_ejb_EJBObject): IAny;
  function any_to_javax_ejb_EJBObject(const a: IAny; var val: Ijavax_ejb_EJBObject): Boolean;

var
  java_lang_StackTraceElement_marshaller : IStaticTypeInfo;
  java_lang_StackTraceElement_seq_marshaller : IStaticTypeInfo;
  java_lang_seq1_StackTraceElement_marshaller : IStaticTypeInfo;
  java_lang_Throwable_marshaller : IStaticTypeInfo;
  java_lang_ThrowableEx_marshaller : IStaticTypeInfo;
  java_lang_Exception_marshaller : IStaticTypeInfo;
  java_lang_Ex_marshaller : IStaticTypeInfo;
  java_lang_Error_marshaller : IStaticTypeInfo;
  java_lang_ErrorEx_marshaller : IStaticTypeInfo;
  java_lang_Comparable_marshaller : IStaticTypeInfo;
  java_lang_Number_marshaller : IStaticTypeInfo;
  java_lang_Integer_marshaller : IStaticTypeInfo;
  java_lang_Long_marshaller : IStaticTypeInfo;
  java_lang_Boolean_marshaller : IStaticTypeInfo;
  javax_ejb_CreateException_marshaller : IStaticTypeInfo;
  javax_ejb_CreateEx_marshaller : IStaticTypeInfo;
  javax_ejb_Handle_marshaller : IStaticTypeInfo;
  javax_ejb_HomeHandle_marshaller : IStaticTypeInfo;
  javax_ejb_EJBMetaData_marshaller : IStaticTypeInfo;
  javax_ejb_RemoveException_marshaller : IStaticTypeInfo;
  javax_ejb_RemoveEx_marshaller : IStaticTypeInfo;
  javax_ejb_FinderException_marshaller : IStaticTypeInfo;
  javax_ejb_FinderEx_marshaller : IStaticTypeInfo;
  javax_ejb_ObjectNotFoundException_marshaller : IStaticTypeInfo;
  javax_ejb_ObjectNotFoundEx_marshaller : IStaticTypeInfo;
  javax_ejb_EJBHome_marshaller : IStaticTypeInfo;
  javax_ejb_EJBObject_marshaller : IStaticTypeInfo;
  _tc_java_lang_StackTraceElement : ITypeCodeConst;
  _tc_java_lang_StackTraceElement_seq : ITypeCodeConst;
  _tc_java_lang_seq1_StackTraceElement : ITypeCodeConst;
  _tc_java_lang_Throwable : ITypeCodeConst;
  _tc_java_lang_ThrowableEx : ITypeCodeConst;
  _tc_java_lang_Exception : ITypeCodeConst;
  _tc_java_lang_Ex : ITypeCodeConst;
  _tc_java_lang_Error : ITypeCodeConst;
  _tc_java_lang_ErrorEx : ITypeCodeConst;
  _tc_java_lang_Comparable : ITypeCodeConst;
  _tc_java_lang_Number : ITypeCodeConst;
  _tc_java_lang_Integer : ITypeCodeConst;
  _tc_java_lang_Long : ITypeCodeConst;
  _tc_java_lang_Boolean : ITypeCodeConst;
  _tc_javax_ejb_CreateException : ITypeCodeConst;
  _tc_javax_ejb_CreateEx : ITypeCodeConst;
  _tc_javax_ejb_Handle : ITypeCodeConst;
  _tc_javax_ejb_HomeHandle : ITypeCodeConst;
  _tc_javax_ejb_EJBMetaData : ITypeCodeConst;
  _tc_javax_ejb_RemoveException : ITypeCodeConst;
  _tc_javax_ejb_RemoveEx : ITypeCodeConst;
  _tc_javax_ejb_FinderException : ITypeCodeConst;
  _tc_javax_ejb_FinderEx : ITypeCodeConst;
  _tc_javax_ejb_ObjectNotFoundException : ITypeCodeConst;
  _tc_javax_ejb_ObjectNotFoundEx : ITypeCodeConst;
  _tc_javax_ejb_EJBHome : ITypeCodeConst;
  _tc_javax_ejb_EJBObject : ITypeCodeConst;

implementation

uses
  SysUtils, any, tcode, static, throw;

//***********************************************************
// Tjava_lang_StackTraceElement
//***********************************************************
function Tjava_lang_StackTraceElement.lineNumber: long;
begin
  result := Fjava_lang_StackTraceElement_lineNumber;
end;

procedure Tjava_lang_StackTraceElement.lineNumber(val : long);
begin
  Fjava_lang_StackTraceElement_lineNumber := val;
end;

function Tjava_lang_StackTraceElement.declaringClass: IWStringValue;
begin
  result := Fjava_lang_StackTraceElement_declaringClass;
end;

procedure Tjava_lang_StackTraceElement.declaringClass(val : IWStringValue);
begin
  Fjava_lang_StackTraceElement_declaringClass := val;
end;

function Tjava_lang_StackTraceElement.fileName: IWStringValue;
begin
  result := Fjava_lang_StackTraceElement_fileName;
end;

procedure Tjava_lang_StackTraceElement.fileName(val : IWStringValue);
begin
  Fjava_lang_StackTraceElement_fileName := val;
end;

function Tjava_lang_StackTraceElement.methodName: IWStringValue;
begin
  result := Fjava_lang_StackTraceElement_methodName;
end;

procedure Tjava_lang_StackTraceElement.methodName(val : IWStringValue);
begin
  Fjava_lang_StackTraceElement_methodName := val;
end;

function Tjava_lang_StackTraceElement.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:java.lang.StackTraceElement:CD38F9930EA8AAEC:6109C59A2636DD85') = 0 then
    result := Pointer(Self as Ijava_lang_StackTraceElement)
  else
    result := nil;
end;

class function Tjava_lang_StackTraceElement._downcast(const vb : IValueBase): Ijava_lang_StackTraceElement;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:java.lang.StackTraceElement:CD38F9930EA8AAEC:6109C59A2636DD85');
      if ptr <> nil then
        result := Ijava_lang_StackTraceElement(ptr);
    end;
end;

procedure Tjava_lang_StackTraceElement._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:java.lang.StackTraceElement:CD38F9930EA8AAEC:6109C59A2636DD85');
  chunked := false;
end;

procedure Tjava_lang_StackTraceElement._marshal_members(const enc: IEncoder);
begin
  stat_long.marshal(enc,@Fjava_lang_StackTraceElement_lineNumber);
  WStringValue_marshaller.marshal(enc,@Fjava_lang_StackTraceElement_declaringClass);
  WStringValue_marshaller.marshal(enc,@Fjava_lang_StackTraceElement_fileName);
  WStringValue_marshaller.marshal(enc,@Fjava_lang_StackTraceElement_methodName);
end;

function  Tjava_lang_StackTraceElement._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not stat_long.demarshal(dec,@Fjava_lang_StackTraceElement_lineNumber) then exit;
  if not WStringValue_marshaller.demarshal(dec,@Fjava_lang_StackTraceElement_declaringClass) then exit;
  if not WStringValue_marshaller.demarshal(dec,@Fjava_lang_StackTraceElement_fileName) then exit;
  if not WStringValue_marshaller.demarshal(dec,@Fjava_lang_StackTraceElement_methodName) then exit;
  result := true;
end;

procedure Tjava_lang_StackTraceElement._copy_members(const v: TObject);
var
  other : Tjava_lang_StackTraceElement;
begin
  inherited _copy_members(v);
  other := v as Tjava_lang_StackTraceElement;
  lineNumber(other.lineNumber);
  declaringClass(other.declaringClass);
  fileName(other.fileName);
  methodName(other.methodName);
end;

function  Tjava_lang_StackTraceElement._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:java.lang.StackTraceElement:CD38F9930EA8AAEC:6109C59A2636DD85');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_StackTraceElement_marshaller
//***********************************************************
procedure Tjava_lang_StackTraceElement_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_StackTraceElement(addr^) := Tjava_lang_StackTraceElement.Create as Ijava_lang_StackTraceElement;
end;

procedure Tjava_lang_StackTraceElement_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_StackTraceElement(dst^) := Ijava_lang_StackTraceElement(src^);
end;

procedure Tjava_lang_StackTraceElement_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_StackTraceElement(addr^) := nil;
end;

function Tjava_lang_StackTraceElement_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:java.lang.StackTraceElement:CD38F9930EA8AAEC:6109C59A2636DD85');
  if not result then exit;
  Ijava_lang_StackTraceElement(addr^) := Tjava_lang_StackTraceElement._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_StackTraceElement_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_StackTraceElement(addr^) as IValueBase);
end;

function Tjava_lang_StackTraceElement_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_StackTraceElement.typecode;
end;

//***********************************************************
// Tjava_lang_StackTraceElement_seq_marshaller
//***********************************************************

function Tjava_lang_StackTraceElement_seq_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  len: _ulong;
  i: integer;
  val: Ijava_lang_StackTraceElement;
begin
  result := false;
  if not dec.seq_begin(len) then exit;
  SetLength(java_lang_StackTraceElement_seq(addr^),len);
  if len <> 0 then
    for i := 0 to Pred(len) do
      begin
        if not java_lang_StackTraceElement_marshaller.demarshal(dec,@val) then exit;
        java_lang_StackTraceElement_seq(addr^)[i] := val; 
      end;
  if not dec.seq_end() then exit;
  result := true;
end;

procedure Tjava_lang_StackTraceElement_seq_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  len: _ulong;
  i: integer;
begin
  len := Length(java_lang_StackTraceElement_seq(addr^));
  enc.seq_begin(len);
  if len <> 0 then
    for i := 0 to Pred(len) do
      java_lang_StackTraceElement_marshaller.marshal(enc,@java_lang_StackTraceElement_seq(addr^)[i]);
  enc.seq_end;
end;

procedure Tjava_lang_StackTraceElement_seq_marshaller._free(var addr: Pointer);
begin
  setLength(java_lang_StackTraceElement_seq(addr^),0);
  freemem(addr);
end;

procedure Tjava_lang_StackTraceElement_seq_marshaller._create(var addr: Pointer);
begin
  addr := allocmem(sizeOf(_ulong));
end;

procedure Tjava_lang_StackTraceElement_seq_marshaller._assign(dst, src: Pointer);
begin
  _ulong(dst^) := _ulong(src^);
end;

function Tjava_lang_StackTraceElement_seq_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_StackTraceElement_seq.typecode;
end;

//***********************************************************
// Tjava_lang_seq1_StackTraceElement
//***********************************************************
constructor Tjava_lang_seq1_StackTraceElement.Create(val: Tjava_lang_StackTraceElementSeq);
begin
  inherited Create();
  FValue := val;
end;

constructor Tjava_lang_seq1_StackTraceElement.Create(val: Ijava_lang_seq1_StackTraceElement);
begin
  inherited Create();
  FValue := val._value;
end;

function Tjava_lang_seq1_StackTraceElement._value: Tjava_lang_StackTraceElementSeq;
begin
  result := FValue;
end;

procedure Tjava_lang_seq1_StackTraceElement._value(val : Tjava_lang_StackTraceElementSeq);
begin
  FValue := val;
end;

function Tjava_lang_seq1_StackTraceElement.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  result := nil;
  if strcomp(PAnsiChar(repoid),'RMI:[Ljava.lang.StackTraceElement;:CD38F9930EA8AAEC:6109C59A2636DD85') = 0 then
    result := Pointer(Self as Ijava_lang_seq1_StackTraceElement);
end;

class function Tjava_lang_seq1_StackTraceElement._downcast(const vb : IValueBase): Ijava_lang_seq1_StackTraceElement;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:[Ljava.lang.StackTraceElement;:CD38F9930EA8AAEC:6109C59A2636DD85');
      if ptr <> nil then
        result := Ijava_lang_seq1_StackTraceElement(ptr);
    end;
end;

procedure Tjava_lang_seq1_StackTraceElement._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:[Ljava.lang.StackTraceElement;:CD38F9930EA8AAEC:6109C59A2636DD85');
  chunked := false;
end;

procedure Tjava_lang_seq1_StackTraceElement._marshal_members(const enc: IEncoder);
begin
  java_lang_StackTraceElement_seq_marshaller.marshal(enc,@FValue);
end;

function  Tjava_lang_seq1_StackTraceElement._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not java_lang_StackTraceElement_seq_marshaller.demarshal(dec,@FValue) then exit;
  result := true;
end;

function  Tjava_lang_seq1_StackTraceElement._copy_value: IValueBase;
begin
  result := Tjava_lang_seq1_StackTraceElement.Create(self) as IValueBase;
end;

//***********************************************************
// Tjava_lang_seq1_StackTraceElement_marshaller
//***********************************************************
procedure Tjava_lang_seq1_StackTraceElement_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_seq1_StackTraceElement(addr^) := Tjava_lang_seq1_StackTraceElement.Create as Ijava_lang_seq1_StackTraceElement;
end;

procedure Tjava_lang_seq1_StackTraceElement_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_seq1_StackTraceElement(dst^) := Ijava_lang_seq1_StackTraceElement(src^);
end;

procedure Tjava_lang_seq1_StackTraceElement_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_seq1_StackTraceElement(addr^) := nil;
end;

function Tjava_lang_seq1_StackTraceElement_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:[Ljava.lang.StackTraceElement;:CD38F9930EA8AAEC:6109C59A2636DD85');
  if not result then exit;
  Ijava_lang_seq1_StackTraceElement(addr^) := Tjava_lang_seq1_StackTraceElement._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_seq1_StackTraceElement_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_seq1_StackTraceElement(addr^) as IValueBase);
end;

function Tjava_lang_seq1_StackTraceElement_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_seq1_StackTraceElement.typecode;
end;

//***********************************************************
// Tjava_lang_Throwable
//***********************************************************
function Tjava_lang_Throwable.cause: Ijava_lang_Throwable;
begin
  result := Fjava_lang_Throwable_cause;
end;

procedure Tjava_lang_Throwable.cause(val : Ijava_lang_Throwable);
begin
  Fjava_lang_Throwable_cause := val;
end;

function Tjava_lang_Throwable.detailMessage: IWStringValue;
begin
  result := Fjava_lang_Throwable_detailMessage;
end;

procedure Tjava_lang_Throwable.detailMessage(val : IWStringValue);
begin
  Fjava_lang_Throwable_detailMessage := val;
end;

function Tjava_lang_Throwable.stackTrace: Ijava_lang_seq1_StackTraceElement;
begin
  result := Fjava_lang_Throwable_stackTrace;
end;

procedure Tjava_lang_Throwable.stackTrace(val : Ijava_lang_seq1_StackTraceElement);
begin
  Fjava_lang_Throwable_stackTrace := val;
end;

function Tjava_lang_Throwable.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:java.lang.Throwable:F8678B4F4D2EB705:D5C635273977B8CB') = 0 then
    result := Pointer(Self as Ijava_lang_Throwable)
  else
    result := nil;
end;

class function Tjava_lang_Throwable._downcast(const vb : IValueBase): Ijava_lang_Throwable;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:java.lang.Throwable:F8678B4F4D2EB705:D5C635273977B8CB');
      if ptr <> nil then
        result := Ijava_lang_Throwable(ptr);
    end;
end;

procedure Tjava_lang_Throwable._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:java.lang.Throwable:F8678B4F4D2EB705:D5C635273977B8CB');
  chunked := false;
end;

procedure Tjava_lang_Throwable._marshal_members(const enc: IEncoder);
begin
  java_lang_Throwable_marshaller.marshal(enc,@Fjava_lang_Throwable_cause);
  WStringValue_marshaller.marshal(enc,@Fjava_lang_Throwable_detailMessage);
  java_lang_seq1_StackTraceElement_marshaller.marshal(enc,@Fjava_lang_Throwable_stackTrace);
end;

function  Tjava_lang_Throwable._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not java_lang_Throwable_marshaller.demarshal(dec,@Fjava_lang_Throwable_cause) then exit;
  if not WStringValue_marshaller.demarshal(dec,@Fjava_lang_Throwable_detailMessage) then exit;
  if not java_lang_seq1_StackTraceElement_marshaller.demarshal(dec,@Fjava_lang_Throwable_stackTrace) then exit;
  result := true;
end;

procedure Tjava_lang_Throwable._copy_members(const v: TObject);
var
  other : Tjava_lang_Throwable;
begin
  inherited _copy_members(v);
  other := v as Tjava_lang_Throwable;
  cause(other.cause);
  detailMessage(other.detailMessage);
  stackTrace(other.stackTrace);
end;

function  Tjava_lang_Throwable._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:java.lang.Throwable:F8678B4F4D2EB705:D5C635273977B8CB');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_Throwable_marshaller
//***********************************************************
procedure Tjava_lang_Throwable_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Throwable(addr^) := Tjava_lang_Throwable.Create as Ijava_lang_Throwable;
end;

procedure Tjava_lang_Throwable_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Throwable(dst^) := Ijava_lang_Throwable(src^);
end;

procedure Tjava_lang_Throwable_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Throwable(addr^) := nil;
end;

function Tjava_lang_Throwable_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:java.lang.Throwable:F8678B4F4D2EB705:D5C635273977B8CB');
  if not result then exit;
  Ijava_lang_Throwable(addr^) := Tjava_lang_Throwable._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_Throwable_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_Throwable(addr^) as IValueBase);
end;

function Tjava_lang_Throwable_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Throwable.typecode;
end;

//***********************************************************
// Tjava_lang_ThrowableEx_marshaller
//***********************************************************
function Tjava_lang_ThrowableEx_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryID;
  _value: Ijava_lang_Throwable;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not java_lang_Throwable_marshaller.demarshal(dec,@_value) then exit;
  Ijava_lang_ThrowableEx(addr^).value(_value);
  if not dec.except_end then exit;
  result := true;
end;

procedure Tjava_lang_ThrowableEx_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  _value: Ijava_lang_Throwable;
begin
  enc.except_begin('IDL:java/lang/ThrowableEx:1.0');
  _value:= Ijava_lang_ThrowableEx(addr^).value;
  java_lang_Throwable_marshaller.marshal(enc,@_value);
  enc.except_end;
end;

procedure Tjava_lang_ThrowableEx_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_ThrowableEx(addr^) := nil;
end;

procedure Tjava_lang_ThrowableEx_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_ThrowableEx(addr^) := Tjava_lang_ThrowableEx.Create();
end;

procedure Tjava_lang_ThrowableEx_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_ThrowableEx(dst^) := Ijava_lang_ThrowableEx(src^);
end;

function Tjava_lang_ThrowableEx_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_ThrowableEx.typecode;
end;

//***********************************************************
// Tjava_lang_ThrowableEx
//***********************************************************
constructor Tjava_lang_ThrowableEx.Create(ex: Tjava_lang_ThrowableEx);
begin
  Fvalue:= ex.value;
  inherited Create();
end;

procedure Tjava_lang_ThrowableEx.throw;
begin
  raise Tjava_lang_ThrowableEx.Create(self);
end;

function Tjava_lang_ThrowableEx.clone(): IORBException;
begin
  result := Tjava_lang_ThrowableEx.Create(self);
end;

procedure Tjava_lang_ThrowableEx.encode(const enc: IEncoder);
var
  int : Ijava_lang_ThrowableEx;
begin
  int := self;
  java_lang_ThrowableEx_marshaller.marshal(enc,@int);
end;

procedure Tjava_lang_ThrowableEx.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_ThrowableEx_marshaller, Self);
  a.from_static_any(stat);
end;

constructor Tjava_lang_ThrowableEx.Create(_value: Ijava_lang_Throwable);
begin
  Fvalue := _value;
  inherited Create();
end;

function Tjava_lang_ThrowableEx.repoid(): RepositoryID;
begin
  result := 'IDL:java/lang/ThrowableEx:1.0';
end;

procedure Tjava_lang_ThrowableEx.value(const val: Ijava_lang_Throwable);
begin
  Fvalue := val;
end;

function Tjava_lang_ThrowableEx.value: Ijava_lang_Throwable;
begin
  result := Fvalue;
end;

//***********************************************************
// Tjava_lang_Exception
//***********************************************************
function Tjava_lang_Exception.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:java.lang.Exception:77E8B62CD7E79AA2:D0FD1F3E1A3B1CC4') = 0 then
    result := Pointer(Self as Ijava_lang_Exception)
  else
    result := inherited narrow_helper(repoid);
end;

class function Tjava_lang_Exception._downcast(const vb : IValueBase): Ijava_lang_Exception;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:java.lang.Exception:77E8B62CD7E79AA2:D0FD1F3E1A3B1CC4');
      if ptr <> nil then
        result := Ijava_lang_Exception(ptr);
    end;
end;

procedure Tjava_lang_Exception._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:java.lang.Exception:77E8B62CD7E79AA2:D0FD1F3E1A3B1CC4');
  chunked := false;
end;

procedure Tjava_lang_Exception._marshal_members(const enc: IEncoder);
begin
  inherited _marshal_members(enc);
end;

function  Tjava_lang_Exception._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not inherited _demarshal_members(dec) then exit;
  result := true;
end;

procedure Tjava_lang_Exception._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjava_lang_Exception._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:java.lang.Exception:77E8B62CD7E79AA2:D0FD1F3E1A3B1CC4');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_Exception_marshaller
//***********************************************************
procedure Tjava_lang_Exception_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Exception(addr^) := Tjava_lang_Exception.Create as Ijava_lang_Exception;
end;

procedure Tjava_lang_Exception_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Exception(dst^) := Ijava_lang_Exception(src^);
end;

procedure Tjava_lang_Exception_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Exception(addr^) := nil;
end;

function Tjava_lang_Exception_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:java.lang.Exception:77E8B62CD7E79AA2:D0FD1F3E1A3B1CC4');
  if not result then exit;
  Ijava_lang_Exception(addr^) := Tjava_lang_Exception._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_Exception_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_Exception(addr^) as IValueBase);
end;

function Tjava_lang_Exception_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Exception.typecode;
end;

//***********************************************************
// Tjava_lang_Ex_marshaller
//***********************************************************
function Tjava_lang_Ex_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryID;
  _value: Ijava_lang_Exception;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not java_lang_Exception_marshaller.demarshal(dec,@_value) then exit;
  Ijava_lang_Ex(addr^).value(_value);
  if not dec.except_end then exit;
  result := true;
end;

procedure Tjava_lang_Ex_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  _value: Ijava_lang_Exception;
begin
  enc.except_begin('IDL:java/lang/Ex:1.0');
  _value:= Ijava_lang_Ex(addr^).value;
  java_lang_Exception_marshaller.marshal(enc,@_value);
  enc.except_end;
end;

procedure Tjava_lang_Ex_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Ex(addr^) := nil;
end;

procedure Tjava_lang_Ex_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Ex(addr^) := Tjava_lang_Ex.Create();
end;

procedure Tjava_lang_Ex_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Ex(dst^) := Ijava_lang_Ex(src^);
end;

function Tjava_lang_Ex_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Ex.typecode;
end;

//***********************************************************
// Tjava_lang_Ex
//***********************************************************
constructor Tjava_lang_Ex.Create(ex: Tjava_lang_Ex);
begin
  Fvalue:= ex.value;
  inherited Create();
end;

procedure Tjava_lang_Ex.throw;
begin
  raise Tjava_lang_Ex.Create(self);
end;

function Tjava_lang_Ex.clone(): IORBException;
begin
  result := Tjava_lang_Ex.Create(self);
end;

procedure Tjava_lang_Ex.encode(const enc: IEncoder);
var
  int : Ijava_lang_Ex;
begin
  int := self;
  java_lang_Ex_marshaller.marshal(enc,@int);
end;

procedure Tjava_lang_Ex.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Ex_marshaller, Self);
  a.from_static_any(stat);
end;

constructor Tjava_lang_Ex.Create(_value: Ijava_lang_Exception);
begin
  Fvalue := _value;
  inherited Create();
end;

function Tjava_lang_Ex.repoid(): RepositoryID;
begin
  result := 'IDL:java/lang/Ex:1.0';
end;

procedure Tjava_lang_Ex.value(const val: Ijava_lang_Exception);
begin
  Fvalue := val;
end;

function Tjava_lang_Ex.value: Ijava_lang_Exception;
begin
  result := Fvalue;
end;

//***********************************************************
// Tjava_lang_Error
//***********************************************************
function Tjava_lang_Error.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:java.lang.Error:77E8B62CD7E79AA2:451D36568B820E56') = 0 then
    result := Pointer(Self as Ijava_lang_Error)
  else
    result := inherited narrow_helper(repoid);
end;

class function Tjava_lang_Error._downcast(const vb : IValueBase): Ijava_lang_Error;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:java.lang.Error:77E8B62CD7E79AA2:451D36568B820E56');
      if ptr <> nil then
        result := Ijava_lang_Error(ptr);
    end;
end;

procedure Tjava_lang_Error._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:java.lang.Error:77E8B62CD7E79AA2:451D36568B820E56');
  chunked := false;
end;

procedure Tjava_lang_Error._marshal_members(const enc: IEncoder);
begin
  inherited _marshal_members(enc);
end;

function  Tjava_lang_Error._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not inherited _demarshal_members(dec) then exit;
  result := true;
end;

procedure Tjava_lang_Error._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjava_lang_Error._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:java.lang.Error:77E8B62CD7E79AA2:451D36568B820E56');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_Error_marshaller
//***********************************************************
procedure Tjava_lang_Error_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Error(addr^) := Tjava_lang_Error.Create as Ijava_lang_Error;
end;

procedure Tjava_lang_Error_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Error(dst^) := Ijava_lang_Error(src^);
end;

procedure Tjava_lang_Error_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Error(addr^) := nil;
end;

function Tjava_lang_Error_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:java.lang.Error:77E8B62CD7E79AA2:451D36568B820E56');
  if not result then exit;
  Ijava_lang_Error(addr^) := Tjava_lang_Error._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_Error_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_Error(addr^) as IValueBase);
end;

function Tjava_lang_Error_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Error.typecode;
end;

//***********************************************************
// Tjava_lang_ErrorEx_marshaller
//***********************************************************
function Tjava_lang_ErrorEx_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryID;
  _value: Ijava_lang_Error;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not java_lang_Error_marshaller.demarshal(dec,@_value) then exit;
  Ijava_lang_ErrorEx(addr^).value(_value);
  if not dec.except_end then exit;
  result := true;
end;

procedure Tjava_lang_ErrorEx_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  _value: Ijava_lang_Error;
begin
  enc.except_begin('IDL:java/lang/ErrorEx:1.0');
  _value:= Ijava_lang_ErrorEx(addr^).value;
  java_lang_Error_marshaller.marshal(enc,@_value);
  enc.except_end;
end;

procedure Tjava_lang_ErrorEx_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_ErrorEx(addr^) := nil;
end;

procedure Tjava_lang_ErrorEx_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_ErrorEx(addr^) := Tjava_lang_ErrorEx.Create();
end;

procedure Tjava_lang_ErrorEx_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_ErrorEx(dst^) := Ijava_lang_ErrorEx(src^);
end;

function Tjava_lang_ErrorEx_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_ErrorEx.typecode;
end;

//***********************************************************
// Tjava_lang_ErrorEx
//***********************************************************
constructor Tjava_lang_ErrorEx.Create(ex: Tjava_lang_ErrorEx);
begin
  Fvalue:= ex.value;
  inherited Create();
end;

procedure Tjava_lang_ErrorEx.throw;
begin
  raise Tjava_lang_ErrorEx.Create(self);
end;

function Tjava_lang_ErrorEx.clone(): IORBException;
begin
  result := Tjava_lang_ErrorEx.Create(self);
end;

procedure Tjava_lang_ErrorEx.encode(const enc: IEncoder);
var
  int : Ijava_lang_ErrorEx;
begin
  int := self;
  java_lang_ErrorEx_marshaller.marshal(enc,@int);
end;

procedure Tjava_lang_ErrorEx.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_ErrorEx_marshaller, Self);
  a.from_static_any(stat);
end;

constructor Tjava_lang_ErrorEx.Create(_value: Ijava_lang_Error);
begin
  Fvalue := _value;
  inherited Create();
end;

function Tjava_lang_ErrorEx.repoid(): RepositoryID;
begin
  result := 'IDL:java/lang/ErrorEx:1.0';
end;

procedure Tjava_lang_ErrorEx.value(const val: Ijava_lang_Error);
begin
  Fvalue := val;
end;

function Tjava_lang_ErrorEx.value: Ijava_lang_Error;
begin
  result := Fvalue;
end;

//***********************************************************
// Tjava_lang_Comparable
//***********************************************************
function Tjava_lang_Comparable.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'IDL:java/lang/Comparable:1.0') = 0 then
    result := Pointer(Self as Ijava_lang_Comparable)
  else
    result := nil;
end;

class function Tjava_lang_Comparable._downcast(const vb : IValueBase): Ijava_lang_Comparable;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('IDL:java/lang/Comparable:1.0');
      if ptr <> nil then
        result := Ijava_lang_Comparable(ptr);
    end;
end;

procedure Tjava_lang_Comparable._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('IDL:java/lang/Comparable:1.0');
  chunked := false;
end;

procedure Tjava_lang_Comparable._marshal_members(const enc: IEncoder);
begin
end;

function  Tjava_lang_Comparable._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := true;
end;

procedure Tjava_lang_Comparable._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjava_lang_Comparable._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'IDL:java/lang/Comparable:1.0');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_Comparable_marshaller
//***********************************************************
procedure Tjava_lang_Comparable_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Comparable(addr^) := Tjava_lang_Comparable.Create as Ijava_lang_Comparable;
end;

procedure Tjava_lang_Comparable_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Comparable(dst^) := Ijava_lang_Comparable(src^);
end;

procedure Tjava_lang_Comparable_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Comparable(addr^) := nil;
end;

function Tjava_lang_Comparable_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'IDL:java/lang/Comparable:1.0');
  if not result then exit;
  Ijava_lang_Comparable(addr^) := Tjava_lang_Comparable._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_Comparable_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_Comparable(addr^) as IValueBase);
end;

function Tjava_lang_Comparable_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Comparable.typecode;
end;

//***********************************************************
// Tjava_lang_Number
//***********************************************************
function Tjava_lang_Number.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:java.lang.Number:071DA8BE7F971128:86AC951D0B94E08B') = 0 then
    result := Pointer(Self as Ijava_lang_Number)
  else
    result := nil;
end;

class function Tjava_lang_Number._downcast(const vb : IValueBase): Ijava_lang_Number;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:java.lang.Number:071DA8BE7F971128:86AC951D0B94E08B');
      if ptr <> nil then
        result := Ijava_lang_Number(ptr);
    end;
end;

procedure Tjava_lang_Number._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:java.lang.Number:071DA8BE7F971128:86AC951D0B94E08B');
  chunked := false;
end;

procedure Tjava_lang_Number._marshal_members(const enc: IEncoder);
begin
end;

function  Tjava_lang_Number._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := true;
end;

procedure Tjava_lang_Number._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjava_lang_Number._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:java.lang.Number:071DA8BE7F971128:86AC951D0B94E08B');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_Number_marshaller
//***********************************************************
procedure Tjava_lang_Number_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Number(addr^) := Tjava_lang_Number.Create as Ijava_lang_Number;
end;

procedure Tjava_lang_Number_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Number(dst^) := Ijava_lang_Number(src^);
end;

procedure Tjava_lang_Number_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Number(addr^) := nil;
end;

function Tjava_lang_Number_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:java.lang.Number:071DA8BE7F971128:86AC951D0B94E08B');
  if not result then exit;
  Ijava_lang_Number(addr^) := Tjava_lang_Number._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_Number_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_Number(addr^) as IValueBase);
end;

function Tjava_lang_Number_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Number.typecode;
end;

//***********************************************************
// Tjava_lang_Integer
//***********************************************************
function Tjava_lang_Integer.value: long;
begin
  result := Fjava_lang_Integer_value;
end;

procedure Tjava_lang_Integer.value(val : long);
begin
  Fjava_lang_Integer_value := val;
end;

function Tjava_lang_Integer.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:java.lang.Integer:47693FFB4FE579F4:12E2A0A4F7818738') = 0 then
    result := Pointer(Self as Ijava_lang_Integer)
  else
    result := inherited narrow_helper(repoid);
end;

class function Tjava_lang_Integer._downcast(const vb : IValueBase): Ijava_lang_Integer;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:java.lang.Integer:47693FFB4FE579F4:12E2A0A4F7818738');
      if ptr <> nil then
        result := Ijava_lang_Integer(ptr);
    end;
end;

procedure Tjava_lang_Integer._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:java.lang.Integer:47693FFB4FE579F4:12E2A0A4F7818738');
  chunked := false;
end;

procedure Tjava_lang_Integer._marshal_members(const enc: IEncoder);
begin
  inherited _marshal_members(enc);
  stat_long.marshal(enc,@Fjava_lang_Integer_value);
end;

function  Tjava_lang_Integer._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not inherited _demarshal_members(dec) then exit;
  if not stat_long.demarshal(dec,@Fjava_lang_Integer_value) then exit;
  result := true;
end;

procedure Tjava_lang_Integer._copy_members(const v: TObject);
var
  other : Tjava_lang_Integer;
begin
  inherited _copy_members(v);
  other := v as Tjava_lang_Integer;
  value(other.value);
end;

function  Tjava_lang_Integer._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:java.lang.Integer:47693FFB4FE579F4:12E2A0A4F7818738');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_Integer_marshaller
//***********************************************************
procedure Tjava_lang_Integer_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Integer(addr^) := Tjava_lang_Integer.Create as Ijava_lang_Integer;
end;

procedure Tjava_lang_Integer_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Integer(dst^) := Ijava_lang_Integer(src^);
end;

procedure Tjava_lang_Integer_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Integer(addr^) := nil;
end;

function Tjava_lang_Integer_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:java.lang.Integer:47693FFB4FE579F4:12E2A0A4F7818738');
  if not result then exit;
  Ijava_lang_Integer(addr^) := Tjava_lang_Integer._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_Integer_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_Integer(addr^) as IValueBase);
end;

function Tjava_lang_Integer_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Integer.typecode;
end;

//***********************************************************
// Tjava_lang_Long
//***********************************************************
function Tjava_lang_Long.value: longlong;
begin
  result := Fjava_lang_Long_value;
end;

procedure Tjava_lang_Long.value(val : longlong);
begin
  Fjava_lang_Long_value := val;
end;

function Tjava_lang_Long.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:java.lang.Long:205F6CCF002E6E90:3B8BE490CC8F23DF') = 0 then
    result := Pointer(Self as Ijava_lang_Long)
  else
    result := inherited narrow_helper(repoid);
end;

class function Tjava_lang_Long._downcast(const vb : IValueBase): Ijava_lang_Long;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:java.lang.Long:205F6CCF002E6E90:3B8BE490CC8F23DF');
      if ptr <> nil then
        result := Ijava_lang_Long(ptr);
    end;
end;

procedure Tjava_lang_Long._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:java.lang.Long:205F6CCF002E6E90:3B8BE490CC8F23DF');
  chunked := false;
end;

procedure Tjava_lang_Long._marshal_members(const enc: IEncoder);
begin
  inherited _marshal_members(enc);
  stat_longlong.marshal(enc,@Fjava_lang_Long_value);
end;

function  Tjava_lang_Long._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not inherited _demarshal_members(dec) then exit;
  if not stat_longlong.demarshal(dec,@Fjava_lang_Long_value) then exit;
  result := true;
end;

procedure Tjava_lang_Long._copy_members(const v: TObject);
var
  other : Tjava_lang_Long;
begin
  inherited _copy_members(v);
  other := v as Tjava_lang_Long;
  value(other.value);
end;

function  Tjava_lang_Long._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:java.lang.Long:205F6CCF002E6E90:3B8BE490CC8F23DF');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_Long_marshaller
//***********************************************************
procedure Tjava_lang_Long_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Long(addr^) := Tjava_lang_Long.Create as Ijava_lang_Long;
end;

procedure Tjava_lang_Long_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Long(dst^) := Ijava_lang_Long(src^);
end;

procedure Tjava_lang_Long_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Long(addr^) := nil;
end;

function Tjava_lang_Long_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:java.lang.Long:205F6CCF002E6E90:3B8BE490CC8F23DF');
  if not result then exit;
  Ijava_lang_Long(addr^) := Tjava_lang_Long._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_Long_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_Long(addr^) as IValueBase);
end;

function Tjava_lang_Long_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Long.typecode;
end;

//***********************************************************
// Tjava_lang_Boolean
//***********************************************************
function Tjava_lang_Boolean.value: boolean;
begin
  result := Fjava_lang_Boolean_value;
end;

procedure Tjava_lang_Boolean.value(val : boolean);
begin
  Fjava_lang_Boolean_value := val;
end;

function Tjava_lang_Boolean.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:java.lang.Boolean:FE070D6A7BD7419A:CD207280D59CFAEE') = 0 then
    result := Pointer(Self as Ijava_lang_Boolean)
  else
    result := nil;
end;

class function Tjava_lang_Boolean._downcast(const vb : IValueBase): Ijava_lang_Boolean;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:java.lang.Boolean:FE070D6A7BD7419A:CD207280D59CFAEE');
      if ptr <> nil then
        result := Ijava_lang_Boolean(ptr);
    end;
end;

procedure Tjava_lang_Boolean._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:java.lang.Boolean:FE070D6A7BD7419A:CD207280D59CFAEE');
  chunked := false;
end;

procedure Tjava_lang_Boolean._marshal_members(const enc: IEncoder);
begin
  stat_boolean.marshal(enc,@Fjava_lang_Boolean_value);
end;

function  Tjava_lang_Boolean._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not stat_boolean.demarshal(dec,@Fjava_lang_Boolean_value) then exit;
  result := true;
end;

procedure Tjava_lang_Boolean._copy_members(const v: TObject);
var
  other : Tjava_lang_Boolean;
begin
  inherited _copy_members(v);
  other := v as Tjava_lang_Boolean;
  value(other.value);
end;

function  Tjava_lang_Boolean._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:java.lang.Boolean:FE070D6A7BD7419A:CD207280D59CFAEE');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjava_lang_Boolean_marshaller
//***********************************************************
procedure Tjava_lang_Boolean_marshaller._create(var addr: Pointer);
begin
  Ijava_lang_Boolean(addr^) := Tjava_lang_Boolean.Create as Ijava_lang_Boolean;
end;

procedure Tjava_lang_Boolean_marshaller._assign(dst, src: Pointer);
begin
  Ijava_lang_Boolean(dst^) := Ijava_lang_Boolean(src^);
end;

procedure Tjava_lang_Boolean_marshaller._free(var addr: Pointer);
begin
  Ijava_lang_Boolean(addr^) := nil;
end;

function Tjava_lang_Boolean_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:java.lang.Boolean:FE070D6A7BD7419A:CD207280D59CFAEE');
  if not result then exit;
  Ijava_lang_Boolean(addr^) := Tjava_lang_Boolean._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjava_lang_Boolean_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijava_lang_Boolean(addr^) as IValueBase);
end;

function Tjava_lang_Boolean_marshaller.typecode: ITypeCode;
begin
  result := _tc_java_lang_Boolean.typecode;
end;

//***********************************************************
// Tjavax_ejb_CreateException
//***********************************************************
function Tjavax_ejb_CreateException.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:javax.ejb.CreateException:048A3675A6FD5463:575FB6C03D49AD6A') = 0 then
    result := Pointer(Self as Ijavax_ejb_CreateException)
  else
    result := inherited narrow_helper(repoid);
end;

class function Tjavax_ejb_CreateException._downcast(const vb : IValueBase): Ijavax_ejb_CreateException;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:javax.ejb.CreateException:048A3675A6FD5463:575FB6C03D49AD6A');
      if ptr <> nil then
        result := Ijavax_ejb_CreateException(ptr);
    end;
end;

procedure Tjavax_ejb_CreateException._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:javax.ejb.CreateException:048A3675A6FD5463:575FB6C03D49AD6A');
  chunked := false;
end;

procedure Tjavax_ejb_CreateException._marshal_members(const enc: IEncoder);
begin
  inherited _marshal_members(enc);
end;

function  Tjavax_ejb_CreateException._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not inherited _demarshal_members(dec) then exit;
  result := true;
end;

procedure Tjavax_ejb_CreateException._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjavax_ejb_CreateException._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:javax.ejb.CreateException:048A3675A6FD5463:575FB6C03D49AD6A');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjavax_ejb_CreateException_marshaller
//***********************************************************
procedure Tjavax_ejb_CreateException_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_CreateException(addr^) := Tjavax_ejb_CreateException.Create as Ijavax_ejb_CreateException;
end;

procedure Tjavax_ejb_CreateException_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_CreateException(dst^) := Ijavax_ejb_CreateException(src^);
end;

procedure Tjavax_ejb_CreateException_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_CreateException(addr^) := nil;
end;

function Tjavax_ejb_CreateException_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:javax.ejb.CreateException:048A3675A6FD5463:575FB6C03D49AD6A');
  if not result then exit;
  Ijavax_ejb_CreateException(addr^) := Tjavax_ejb_CreateException._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_CreateException_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijavax_ejb_CreateException(addr^) as IValueBase);
end;

function Tjavax_ejb_CreateException_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_CreateException.typecode;
end;

//***********************************************************
// Tjavax_ejb_CreateEx_marshaller
//***********************************************************
function Tjavax_ejb_CreateEx_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryID;
  _value: Ijavax_ejb_CreateException;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not javax_ejb_CreateException_marshaller.demarshal(dec,@_value) then exit;
  Ijavax_ejb_CreateEx(addr^).value(_value);
  if not dec.except_end then exit;
  result := true;
end;

procedure Tjavax_ejb_CreateEx_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  _value: Ijavax_ejb_CreateException;
begin
  enc.except_begin('IDL:javax/ejb/CreateEx:1.0');
  _value:= Ijavax_ejb_CreateEx(addr^).value;
  javax_ejb_CreateException_marshaller.marshal(enc,@_value);
  enc.except_end;
end;

procedure Tjavax_ejb_CreateEx_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_CreateEx(addr^) := nil;
end;

procedure Tjavax_ejb_CreateEx_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_CreateEx(addr^) := Tjavax_ejb_CreateEx.Create();
end;

procedure Tjavax_ejb_CreateEx_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_CreateEx(dst^) := Ijavax_ejb_CreateEx(src^);
end;

function Tjavax_ejb_CreateEx_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_CreateEx.typecode;
end;

//***********************************************************
// Tjavax_ejb_CreateEx
//***********************************************************
constructor Tjavax_ejb_CreateEx.Create(ex: Tjavax_ejb_CreateEx);
begin
  Fvalue:= ex.value;
  inherited Create();
end;

procedure Tjavax_ejb_CreateEx.throw;
begin
  raise Tjavax_ejb_CreateEx.Create(self);
end;

function Tjavax_ejb_CreateEx.clone(): IORBException;
begin
  result := Tjavax_ejb_CreateEx.Create(self);
end;

procedure Tjavax_ejb_CreateEx.encode(const enc: IEncoder);
var
  int : Ijavax_ejb_CreateEx;
begin
  int := self;
  javax_ejb_CreateEx_marshaller.marshal(enc,@int);
end;

procedure Tjavax_ejb_CreateEx.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_CreateEx_marshaller, Self);
  a.from_static_any(stat);
end;

constructor Tjavax_ejb_CreateEx.Create(_value: Ijavax_ejb_CreateException);
begin
  Fvalue := _value;
  inherited Create();
end;

function Tjavax_ejb_CreateEx.repoid(): RepositoryID;
begin
  result := 'IDL:javax/ejb/CreateEx:1.0';
end;

procedure Tjavax_ejb_CreateEx.value(const val: Ijavax_ejb_CreateException);
begin
  Fvalue := val;
end;

function Tjavax_ejb_CreateEx.value: Ijavax_ejb_CreateException;
begin
  result := Fvalue;
end;

//***********************************************************
// Tjavax_ejb_Handle
//***********************************************************
function Tjavax_ejb_Handle.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.Handle:0000000000000000' then
    begin
      result := Pointer(self as Ijavax_ejb_Handle);
      exit;
    end;
end;

class function Tjavax_ejb_Handle._narrow(const obj : IAbstractBase): Ijavax_ejb_Handle;
begin
  result := _downcast(obj._to_value);
  if not assigned(result) then
    result := _narrow(obj._to_object);
end;

class function Tjavax_ejb_Handle._downcast(const vb : IValueBase): Ijavax_ejb_Handle;
begin
  result := nil;
  if assigned(vb) then
    result := Ijavax_ejb_Handle(vb.narrow_helper('RMI:javax.ejb.Handle:0000000000000000'));
end;

class function Tjavax_ejb_Handle._narrow(const obj : IORBObject): Ijavax_ejb_Handle;
var
  p: Pointer;
  stub: Tjavax_ejb_Handle_stub;
begin
  result := nil;
  if obj = nil then exit;
  p := obj.narrow_helper('RMI:javax.ejb.Handle:0000000000000000');
  if p <> nil then
    result := Ijavax_ejb_Handle(p)
  else
    begin
      if narrow_helper2(obj) or obj._is_a_remote('RMI:javax.ejb.Handle:0000000000000000') then
        begin
          stub := Tjavax_ejb_Handle_stub.Create();
          stub.assign(obj);
          result := stub;
        end;
    end;
end;

class function Tjavax_ejb_Handle.narrow_helper2(const obj: IORBObject): Boolean;
begin
  result := obj._repoid = 'RMI:javax.ejb.Handle:0000000000000000'
end;

//***********************************************************
// Tjavax_ejb_Handle_stub
//***********************************************************
function Tjavax_ejb_Handle_stub._get_EJBObject: Ijavax_ejb_EJBObject;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(javax_ejb_EJBObject_marshaller, @result);
  req := StaticRequest(self._to_object,'_get_EJBObject');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

//***********************************************************
// Tjavax_ejb_Handle_stub_clp
//***********************************************************
function Tjavax_ejb_Handle_stub_clp.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.Handle:0000000000000000' then
    begin
      result := Pointer(self as Ijavax_ejb_Handle);
      exit;
  end;
end;

function Tjavax_ejb_Handle_stub_clp._get_EJBObject: Ijavax_ejb_EJBObject;
var
  _srv: IServant;
  srv: Ijavax_ejb_Handle;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_Handle_serv._narrow(_srv);
      if srv <> nil then
        result := srv._get_EJBObject
    end;
  _postinvoke();
end;

//***********************************************************
// Tjavax_ejb_Handle_serv
//***********************************************************
function Tjavax_ejb_Handle_serv._this(): Ijavax_ejb_Handle;
var
  obj: IORBObject;
begin
  obj := this();
  result := Tjavax_ejb_Handle._narrow(obj);
end;

function Tjavax_ejb_Handle_serv._is_a(const repoid: RepositoryID): Boolean;
begin
  result := repoid = 'RMI:javax.ejb.Handle:0000000000000000';
end;

function Tjavax_ejb_Handle_serv._primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID;
begin
  result := 'RMI:javax.ejb.Handle:0000000000000000';
end;

function Tjavax_ejb_Handle_serv._make_stub(const poa: IPOA; const obj : IORBObject): IORBObject;
begin
  result := Tjavax_ejb_Handle_stub_clp.Create(poa,obj);
end;

procedure Tjavax_ejb_Handle_serv.invoke(const serv: IStaticServerRequest);
begin
  if not _dispatch(serv) then
    begin
      serv.set_exception(BAD_OPERATION.Create(0, COMPLETED_NO) as IORBException);
      serv.write_results();
    end;
end;

function Tjavax_ejb_Handle_serv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.Handle:0000000000000000' then
    begin
      result := Pointer(Ijavax_ejb_Handle(self));
      exit;
    end;
end;

class function Tjavax_ejb_Handle_serv._narrow(const srv : IServant): Ijavax_ejb_Handle;
var
  p: Pointer;
begin
  result := nil;
  if srv = nil then exit;
  p := srv.narrow_helper('RMI:javax.ejb.Handle:0000000000000000');
  if p <> nil then
    result := Ijavax_ejb_Handle(p)
end;

function Tjavax_ejb_Handle_serv._dispatch(const req: IStaticServerRequest): Boolean;
var
  EJBObject_get_value: Ijavax_ejb_EJBObject;
begin
  result := true;
  if req.op_name = '_get_EJBObject' then
    begin
      req.set_result(StaticAny(javax_ejb_EJBObject_marshaller,@EJBObject_get_value) as IStaticAny);
      if not req.read_args() then  exit;
      EJBObject_get_value := _get_EJBObject;
      req.write_results();
      exit;
    end;
  result := false;
end;

//***********************************************************
// Tjavax_ejb_Handle_marshaller
//***********************************************************
function Tjavax_ejb_Handle_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  ab: IAbstractBase;
begin
  result := false;
  if not TAbstractBase._demarshal(dec,ab) then exit;
  Ijavax_ejb_Handle(addr^) := Tjavax_ejb_Handle._narrow(ab);
  result := (ab = nil) or (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_Handle_marshaller.marshal(enc: IEncoder;const addr : Pointer);
begin
  TAbstractBase._marshal(enc,Ijavax_ejb_Handle(addr^) as IAbstractBase);
end;

procedure Tjavax_ejb_Handle_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_Handle(addr^) := nil;
end;

procedure Tjavax_ejb_Handle_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_Handle(addr^) := Tjavax_ejb_Handle_stub.Create();
end;

procedure Tjavax_ejb_Handle_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_Handle(dst^) := Ijavax_ejb_Handle(src^);
end;

function Tjavax_ejb_Handle_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_Handle.typecode;
end;

//***********************************************************
// Tjavax_ejb_HomeHandle
//***********************************************************
function Tjavax_ejb_HomeHandle.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.HomeHandle:0000000000000000' then
    begin
      result := Pointer(self as Ijavax_ejb_HomeHandle);
      exit;
    end;
end;

class function Tjavax_ejb_HomeHandle._narrow(const obj : IAbstractBase): Ijavax_ejb_HomeHandle;
begin
  result := _downcast(obj._to_value);
  if not assigned(result) then
    result := _narrow(obj._to_object);
end;

class function Tjavax_ejb_HomeHandle._downcast(const vb : IValueBase): Ijavax_ejb_HomeHandle;
begin
  result := nil;
  if assigned(vb) then
    result := Ijavax_ejb_HomeHandle(vb.narrow_helper('RMI:javax.ejb.HomeHandle:0000000000000000'));
end;

class function Tjavax_ejb_HomeHandle._narrow(const obj : IORBObject): Ijavax_ejb_HomeHandle;
var
  p: Pointer;
  stub: Tjavax_ejb_HomeHandle_stub;
begin
  result := nil;
  if obj = nil then exit;
  p := obj.narrow_helper('RMI:javax.ejb.HomeHandle:0000000000000000');
  if p <> nil then
    result := Ijavax_ejb_HomeHandle(p)
  else
    begin
      if narrow_helper2(obj) or obj._is_a_remote('RMI:javax.ejb.HomeHandle:0000000000000000') then
        begin
          stub := Tjavax_ejb_HomeHandle_stub.Create();
          stub.assign(obj);
          result := stub;
        end;
    end;
end;

class function Tjavax_ejb_HomeHandle.narrow_helper2(const obj: IORBObject): Boolean;
begin
  result := obj._repoid = 'RMI:javax.ejb.HomeHandle:0000000000000000'
end;

//***********************************************************
// Tjavax_ejb_HomeHandle_stub
//***********************************************************
function Tjavax_ejb_HomeHandle_stub._get_EJBHome: Ijavax_ejb_EJBHome;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(javax_ejb_EJBHome_marshaller, @result);
  req := StaticRequest(self._to_object,'_get_EJBHome');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

//***********************************************************
// Tjavax_ejb_HomeHandle_stub_clp
//***********************************************************
function Tjavax_ejb_HomeHandle_stub_clp.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.HomeHandle:0000000000000000' then
    begin
      result := Pointer(self as Ijavax_ejb_HomeHandle);
      exit;
  end;
end;

function Tjavax_ejb_HomeHandle_stub_clp._get_EJBHome: Ijavax_ejb_EJBHome;
var
  _srv: IServant;
  srv: Ijavax_ejb_HomeHandle;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_HomeHandle_serv._narrow(_srv);
      if srv <> nil then
        result := srv._get_EJBHome
    end;
  _postinvoke();
end;

//***********************************************************
// Tjavax_ejb_HomeHandle_serv
//***********************************************************
function Tjavax_ejb_HomeHandle_serv._this(): Ijavax_ejb_HomeHandle;
var
  obj: IORBObject;
begin
  obj := this();
  result := Tjavax_ejb_HomeHandle._narrow(obj);
end;

function Tjavax_ejb_HomeHandle_serv._is_a(const repoid: RepositoryID): Boolean;
begin
  result := repoid = 'RMI:javax.ejb.HomeHandle:0000000000000000';
end;

function Tjavax_ejb_HomeHandle_serv._primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID;
begin
  result := 'RMI:javax.ejb.HomeHandle:0000000000000000';
end;

function Tjavax_ejb_HomeHandle_serv._make_stub(const poa: IPOA; const obj : IORBObject): IORBObject;
begin
  result := Tjavax_ejb_HomeHandle_stub_clp.Create(poa,obj);
end;

procedure Tjavax_ejb_HomeHandle_serv.invoke(const serv: IStaticServerRequest);
begin
  if not _dispatch(serv) then
    begin
      serv.set_exception(BAD_OPERATION.Create(0, COMPLETED_NO) as IORBException);
      serv.write_results();
    end;
end;

function Tjavax_ejb_HomeHandle_serv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.HomeHandle:0000000000000000' then
    begin
      result := Pointer(Ijavax_ejb_HomeHandle(self));
      exit;
    end;
end;

class function Tjavax_ejb_HomeHandle_serv._narrow(const srv : IServant): Ijavax_ejb_HomeHandle;
var
  p: Pointer;
begin
  result := nil;
  if srv = nil then exit;
  p := srv.narrow_helper('RMI:javax.ejb.HomeHandle:0000000000000000');
  if p <> nil then
    result := Ijavax_ejb_HomeHandle(p)
end;

function Tjavax_ejb_HomeHandle_serv._dispatch(const req: IStaticServerRequest): Boolean;
var
  EJBHome_get_value: Ijavax_ejb_EJBHome;
begin
  result := true;
  if req.op_name = '_get_EJBHome' then
    begin
      req.set_result(StaticAny(javax_ejb_EJBHome_marshaller,@EJBHome_get_value) as IStaticAny);
      if not req.read_args() then  exit;
      EJBHome_get_value := _get_EJBHome;
      req.write_results();
      exit;
    end;
  result := false;
end;

//***********************************************************
// Tjavax_ejb_HomeHandle_marshaller
//***********************************************************
function Tjavax_ejb_HomeHandle_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  ab: IAbstractBase;
begin
  result := false;
  if not TAbstractBase._demarshal(dec,ab) then exit;
  Ijavax_ejb_HomeHandle(addr^) := Tjavax_ejb_HomeHandle._narrow(ab);
  result := (ab = nil) or (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_HomeHandle_marshaller.marshal(enc: IEncoder;const addr : Pointer);
begin
  TAbstractBase._marshal(enc,Ijavax_ejb_HomeHandle(addr^) as IAbstractBase);
end;

procedure Tjavax_ejb_HomeHandle_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_HomeHandle(addr^) := nil;
end;

procedure Tjavax_ejb_HomeHandle_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_HomeHandle(addr^) := Tjavax_ejb_HomeHandle_stub.Create();
end;

procedure Tjavax_ejb_HomeHandle_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_HomeHandle(dst^) := Ijavax_ejb_HomeHandle(src^);
end;

function Tjavax_ejb_HomeHandle_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_HomeHandle.typecode;
end;

//***********************************************************
// Tjavax_ejb_EJBMetaData
//***********************************************************
function Tjavax_ejb_EJBMetaData.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'IDL:javax/ejb/EJBMetaData:1.0') = 0 then
    result := Pointer(Self as Ijavax_ejb_EJBMetaData)
  else
    result := nil;
end;

class function Tjavax_ejb_EJBMetaData._downcast(const vb : IValueBase): Ijavax_ejb_EJBMetaData;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('IDL:javax/ejb/EJBMetaData:1.0');
      if ptr <> nil then
        result := Ijavax_ejb_EJBMetaData(ptr);
    end;
end;

procedure Tjavax_ejb_EJBMetaData._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('IDL:javax/ejb/EJBMetaData:1.0');
  chunked := false;
end;

procedure Tjavax_ejb_EJBMetaData._marshal_members(const enc: IEncoder);
begin
end;

function  Tjavax_ejb_EJBMetaData._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := true;
end;

procedure Tjavax_ejb_EJBMetaData._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjavax_ejb_EJBMetaData._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'IDL:javax/ejb/EJBMetaData:1.0');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjavax_ejb_EJBMetaData_marshaller
//***********************************************************
procedure Tjavax_ejb_EJBMetaData_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_EJBMetaData(addr^) := Tjavax_ejb_EJBMetaData.Create as Ijavax_ejb_EJBMetaData;
end;

procedure Tjavax_ejb_EJBMetaData_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_EJBMetaData(dst^) := Ijavax_ejb_EJBMetaData(src^);
end;

procedure Tjavax_ejb_EJBMetaData_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_EJBMetaData(addr^) := nil;
end;

function Tjavax_ejb_EJBMetaData_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'IDL:javax/ejb/EJBMetaData:1.0');
  if not result then exit;
  Ijavax_ejb_EJBMetaData(addr^) := Tjavax_ejb_EJBMetaData._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_EJBMetaData_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijavax_ejb_EJBMetaData(addr^) as IValueBase);
end;

function Tjavax_ejb_EJBMetaData_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_EJBMetaData.typecode;
end;

//***********************************************************
// Tjavax_ejb_RemoveException
//***********************************************************
function Tjavax_ejb_RemoveException.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:javax.ejb.RemoveException:048A3675A6FD5463:C06A008FD05A462A') = 0 then
    result := Pointer(Self as Ijavax_ejb_RemoveException)
  else
    result := inherited narrow_helper(repoid);
end;

class function Tjavax_ejb_RemoveException._downcast(const vb : IValueBase): Ijavax_ejb_RemoveException;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:javax.ejb.RemoveException:048A3675A6FD5463:C06A008FD05A462A');
      if ptr <> nil then
        result := Ijavax_ejb_RemoveException(ptr);
    end;
end;

procedure Tjavax_ejb_RemoveException._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:javax.ejb.RemoveException:048A3675A6FD5463:C06A008FD05A462A');
  chunked := false;
end;

procedure Tjavax_ejb_RemoveException._marshal_members(const enc: IEncoder);
begin
  inherited _marshal_members(enc);
end;

function  Tjavax_ejb_RemoveException._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not inherited _demarshal_members(dec) then exit;
  result := true;
end;

procedure Tjavax_ejb_RemoveException._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjavax_ejb_RemoveException._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:javax.ejb.RemoveException:048A3675A6FD5463:C06A008FD05A462A');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjavax_ejb_RemoveException_marshaller
//***********************************************************
procedure Tjavax_ejb_RemoveException_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_RemoveException(addr^) := Tjavax_ejb_RemoveException.Create as Ijavax_ejb_RemoveException;
end;

procedure Tjavax_ejb_RemoveException_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_RemoveException(dst^) := Ijavax_ejb_RemoveException(src^);
end;

procedure Tjavax_ejb_RemoveException_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_RemoveException(addr^) := nil;
end;

function Tjavax_ejb_RemoveException_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:javax.ejb.RemoveException:048A3675A6FD5463:C06A008FD05A462A');
  if not result then exit;
  Ijavax_ejb_RemoveException(addr^) := Tjavax_ejb_RemoveException._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_RemoveException_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijavax_ejb_RemoveException(addr^) as IValueBase);
end;

function Tjavax_ejb_RemoveException_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_RemoveException.typecode;
end;

//***********************************************************
// Tjavax_ejb_RemoveEx_marshaller
//***********************************************************
function Tjavax_ejb_RemoveEx_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryID;
  _value: Ijavax_ejb_RemoveException;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not javax_ejb_RemoveException_marshaller.demarshal(dec,@_value) then exit;
  Ijavax_ejb_RemoveEx(addr^).value(_value);
  if not dec.except_end then exit;
  result := true;
end;

procedure Tjavax_ejb_RemoveEx_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  _value: Ijavax_ejb_RemoveException;
begin
  enc.except_begin('IDL:javax/ejb/RemoveEx:1.0');
  _value:= Ijavax_ejb_RemoveEx(addr^).value;
  javax_ejb_RemoveException_marshaller.marshal(enc,@_value);
  enc.except_end;
end;

procedure Tjavax_ejb_RemoveEx_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_RemoveEx(addr^) := nil;
end;

procedure Tjavax_ejb_RemoveEx_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_RemoveEx(addr^) := Tjavax_ejb_RemoveEx.Create();
end;

procedure Tjavax_ejb_RemoveEx_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_RemoveEx(dst^) := Ijavax_ejb_RemoveEx(src^);
end;

function Tjavax_ejb_RemoveEx_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_RemoveEx.typecode;
end;

//***********************************************************
// Tjavax_ejb_RemoveEx
//***********************************************************
constructor Tjavax_ejb_RemoveEx.Create(ex: Tjavax_ejb_RemoveEx);
begin
  Fvalue:= ex.value;
  inherited Create();
end;

procedure Tjavax_ejb_RemoveEx.throw;
begin
  raise Tjavax_ejb_RemoveEx.Create(self);
end;

function Tjavax_ejb_RemoveEx.clone(): IORBException;
begin
  result := Tjavax_ejb_RemoveEx.Create(self);
end;

procedure Tjavax_ejb_RemoveEx.encode(const enc: IEncoder);
var
  int : Ijavax_ejb_RemoveEx;
begin
  int := self;
  javax_ejb_RemoveEx_marshaller.marshal(enc,@int);
end;

procedure Tjavax_ejb_RemoveEx.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_RemoveEx_marshaller, Self);
  a.from_static_any(stat);
end;

constructor Tjavax_ejb_RemoveEx.Create(_value: Ijavax_ejb_RemoveException);
begin
  Fvalue := _value;
  inherited Create();
end;

function Tjavax_ejb_RemoveEx.repoid(): RepositoryID;
begin
  result := 'IDL:javax/ejb/RemoveEx:1.0';
end;

procedure Tjavax_ejb_RemoveEx.value(const val: Ijavax_ejb_RemoveException);
begin
  Fvalue := val;
end;

function Tjavax_ejb_RemoveEx.value: Ijavax_ejb_RemoveException;
begin
  result := Fvalue;
end;

//***********************************************************
// Tjavax_ejb_FinderException
//***********************************************************
function Tjavax_ejb_FinderException.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:javax.ejb.FinderException:048A3675A6FD5463:79EE1514C8B7CA15') = 0 then
    result := Pointer(Self as Ijavax_ejb_FinderException)
  else
    result := inherited narrow_helper(repoid);
end;

class function Tjavax_ejb_FinderException._downcast(const vb : IValueBase): Ijavax_ejb_FinderException;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:javax.ejb.FinderException:048A3675A6FD5463:79EE1514C8B7CA15');
      if ptr <> nil then
        result := Ijavax_ejb_FinderException(ptr);
    end;
end;

procedure Tjavax_ejb_FinderException._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:javax.ejb.FinderException:048A3675A6FD5463:79EE1514C8B7CA15');
  chunked := false;
end;

procedure Tjavax_ejb_FinderException._marshal_members(const enc: IEncoder);
begin
  inherited _marshal_members(enc);
end;

function  Tjavax_ejb_FinderException._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not inherited _demarshal_members(dec) then exit;
  result := true;
end;

procedure Tjavax_ejb_FinderException._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjavax_ejb_FinderException._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:javax.ejb.FinderException:048A3675A6FD5463:79EE1514C8B7CA15');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjavax_ejb_FinderException_marshaller
//***********************************************************
procedure Tjavax_ejb_FinderException_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_FinderException(addr^) := Tjavax_ejb_FinderException.Create as Ijavax_ejb_FinderException;
end;

procedure Tjavax_ejb_FinderException_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_FinderException(dst^) := Ijavax_ejb_FinderException(src^);
end;

procedure Tjavax_ejb_FinderException_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_FinderException(addr^) := nil;
end;

function Tjavax_ejb_FinderException_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:javax.ejb.FinderException:048A3675A6FD5463:79EE1514C8B7CA15');
  if not result then exit;
  Ijavax_ejb_FinderException(addr^) := Tjavax_ejb_FinderException._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_FinderException_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijavax_ejb_FinderException(addr^) as IValueBase);
end;

function Tjavax_ejb_FinderException_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_FinderException.typecode;
end;

//***********************************************************
// Tjavax_ejb_FinderEx_marshaller
//***********************************************************
function Tjavax_ejb_FinderEx_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryID;
  _value: Ijavax_ejb_FinderException;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not javax_ejb_FinderException_marshaller.demarshal(dec,@_value) then exit;
  Ijavax_ejb_FinderEx(addr^).value(_value);
  if not dec.except_end then exit;
  result := true;
end;

procedure Tjavax_ejb_FinderEx_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  _value: Ijavax_ejb_FinderException;
begin
  enc.except_begin('IDL:javax/ejb/FinderEx:1.0');
  _value:= Ijavax_ejb_FinderEx(addr^).value;
  javax_ejb_FinderException_marshaller.marshal(enc,@_value);
  enc.except_end;
end;

procedure Tjavax_ejb_FinderEx_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_FinderEx(addr^) := nil;
end;

procedure Tjavax_ejb_FinderEx_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_FinderEx(addr^) := Tjavax_ejb_FinderEx.Create();
end;

procedure Tjavax_ejb_FinderEx_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_FinderEx(dst^) := Ijavax_ejb_FinderEx(src^);
end;

function Tjavax_ejb_FinderEx_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_FinderEx.typecode;
end;

//***********************************************************
// Tjavax_ejb_FinderEx
//***********************************************************
constructor Tjavax_ejb_FinderEx.Create(ex: Tjavax_ejb_FinderEx);
begin
  Fvalue:= ex.value;
  inherited Create();
end;

procedure Tjavax_ejb_FinderEx.throw;
begin
  raise Tjavax_ejb_FinderEx.Create(self);
end;

function Tjavax_ejb_FinderEx.clone(): IORBException;
begin
  result := Tjavax_ejb_FinderEx.Create(self);
end;

procedure Tjavax_ejb_FinderEx.encode(const enc: IEncoder);
var
  int : Ijavax_ejb_FinderEx;
begin
  int := self;
  javax_ejb_FinderEx_marshaller.marshal(enc,@int);
end;

procedure Tjavax_ejb_FinderEx.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_FinderEx_marshaller, Self);
  a.from_static_any(stat);
end;

constructor Tjavax_ejb_FinderEx.Create(_value: Ijavax_ejb_FinderException);
begin
  Fvalue := _value;
  inherited Create();
end;

function Tjavax_ejb_FinderEx.repoid(): RepositoryID;
begin
  result := 'IDL:javax/ejb/FinderEx:1.0';
end;

procedure Tjavax_ejb_FinderEx.value(const val: Ijavax_ejb_FinderException);
begin
  Fvalue := val;
end;

function Tjavax_ejb_FinderEx.value: Ijavax_ejb_FinderException;
begin
  result := Fvalue;
end;

//***********************************************************
// Tjavax_ejb_ObjectNotFoundException
//***********************************************************
function Tjavax_ejb_ObjectNotFoundException.narrow_helper(const repoid: RepositoryID): Pointer;
begin
  if strcomp(PAnsiChar(repoid),'RMI:javax.ejb.ObjectNotFoundException:2E921E9DEB124A7F:00106DD5ADF01DDA') = 0 then
    result := Pointer(Self as Ijavax_ejb_ObjectNotFoundException)
  else
    result := inherited narrow_helper(repoid);
end;

class function Tjavax_ejb_ObjectNotFoundException._downcast(const vb : IValueBase): Ijavax_ejb_ObjectNotFoundException;
var
  ptr: pointer;
begin
  result := nil;
  if vb <> nil then
    begin
      ptr := vb.narrow_helper('RMI:javax.ejb.ObjectNotFoundException:2E921E9DEB124A7F:00106DD5ADF01DDA');
      if ptr <> nil then
        result := Ijavax_ejb_ObjectNotFoundException(ptr);
    end;
end;

procedure Tjavax_ejb_ObjectNotFoundException._get_marshal_info(const str: TStrings; out chunked: Boolean);
begin
  str.Add('RMI:javax.ejb.ObjectNotFoundException:2E921E9DEB124A7F:00106DD5ADF01DDA');
  chunked := false;
end;

procedure Tjavax_ejb_ObjectNotFoundException._marshal_members(const enc: IEncoder);
begin
  inherited _marshal_members(enc);
end;

function  Tjavax_ejb_ObjectNotFoundException._demarshal_members(const dec: IDecoder): Boolean;
begin
  result := false;
  if not inherited _demarshal_members(dec) then exit;
  result := true;
end;

procedure Tjavax_ejb_ObjectNotFoundException._copy_members(const v: TObject);
begin
  inherited _copy_members(v);
end;

function  Tjavax_ejb_ObjectNotFoundException._copy_value: IValueBase;
var
  list: TStrings;
begin
  list := TStringList.Create;
  try
    result := _create(list,'RMI:javax.ejb.ObjectNotFoundException:2E921E9DEB124A7F:00106DD5ADF01DDA');
    result._copy_members(self);
  finally
    list.free;
  end;
end;

//***********************************************************
// Tjavax_ejb_ObjectNotFoundException_marshaller
//***********************************************************
procedure Tjavax_ejb_ObjectNotFoundException_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_ObjectNotFoundException(addr^) := Tjavax_ejb_ObjectNotFoundException.Create as Ijavax_ejb_ObjectNotFoundException;
end;

procedure Tjavax_ejb_ObjectNotFoundException_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_ObjectNotFoundException(dst^) := Ijavax_ejb_ObjectNotFoundException(src^);
end;

procedure Tjavax_ejb_ObjectNotFoundException_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_ObjectNotFoundException(addr^) := nil;
end;

function Tjavax_ejb_ObjectNotFoundException_marshaller.demarshal(dec: IDecoder;
  const addr: Pointer): Boolean;
var
  vb : IValueBase;
begin
  result := TValueBase._demarshal(dec,vb,'RMI:javax.ejb.ObjectNotFoundException:2E921E9DEB124A7F:00106DD5ADF01DDA');
  if not result then exit;
  Ijavax_ejb_ObjectNotFoundException(addr^) := Tjavax_ejb_ObjectNotFoundException._downcast(vb);
  result := (vb = nil) or (vb <> nil) and (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_ObjectNotFoundException_marshaller.marshal(enc: IEncoder; const addr: Pointer);
begin
  TValueBase._marshal(enc,Ijavax_ejb_ObjectNotFoundException(addr^) as IValueBase);
end;

function Tjavax_ejb_ObjectNotFoundException_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_ObjectNotFoundException.typecode;
end;

//***********************************************************
// Tjavax_ejb_ObjectNotFoundEx_marshaller
//***********************************************************
function Tjavax_ejb_ObjectNotFoundEx_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  repoid: RepositoryID;
  _value: Ijavax_ejb_ObjectNotFoundException;
begin
  result := false;
  if not dec.except_begin(repoid) then exit;
  if not javax_ejb_ObjectNotFoundException_marshaller.demarshal(dec,@_value) then exit;
  Ijavax_ejb_ObjectNotFoundEx(addr^).value(_value);
  if not dec.except_end then exit;
  result := true;
end;

procedure Tjavax_ejb_ObjectNotFoundEx_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  _value: Ijavax_ejb_ObjectNotFoundException;
begin
  enc.except_begin('IDL:javax/ejb/ObjectNotFoundEx:1.0');
  _value:= Ijavax_ejb_ObjectNotFoundEx(addr^).value;
  javax_ejb_ObjectNotFoundException_marshaller.marshal(enc,@_value);
  enc.except_end;
end;

procedure Tjavax_ejb_ObjectNotFoundEx_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_ObjectNotFoundEx(addr^) := nil;
end;

procedure Tjavax_ejb_ObjectNotFoundEx_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_ObjectNotFoundEx(addr^) := Tjavax_ejb_ObjectNotFoundEx.Create();
end;

procedure Tjavax_ejb_ObjectNotFoundEx_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_ObjectNotFoundEx(dst^) := Ijavax_ejb_ObjectNotFoundEx(src^);
end;

function Tjavax_ejb_ObjectNotFoundEx_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_ObjectNotFoundEx.typecode;
end;

//***********************************************************
// Tjavax_ejb_ObjectNotFoundEx
//***********************************************************
constructor Tjavax_ejb_ObjectNotFoundEx.Create(ex: Tjavax_ejb_ObjectNotFoundEx);
begin
  Fvalue:= ex.value;
  inherited Create();
end;

procedure Tjavax_ejb_ObjectNotFoundEx.throw;
begin
  raise Tjavax_ejb_ObjectNotFoundEx.Create(self);
end;

function Tjavax_ejb_ObjectNotFoundEx.clone(): IORBException;
begin
  result := Tjavax_ejb_ObjectNotFoundEx.Create(self);
end;

procedure Tjavax_ejb_ObjectNotFoundEx.encode(const enc: IEncoder);
var
  int : Ijavax_ejb_ObjectNotFoundEx;
begin
  int := self;
  javax_ejb_ObjectNotFoundEx_marshaller.marshal(enc,@int);
end;

procedure Tjavax_ejb_ObjectNotFoundEx.encode_any(const a: IAny);
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_ObjectNotFoundEx_marshaller, Self);
  a.from_static_any(stat);
end;

constructor Tjavax_ejb_ObjectNotFoundEx.Create(_value: Ijavax_ejb_ObjectNotFoundException);
begin
  Fvalue := _value;
  inherited Create();
end;

function Tjavax_ejb_ObjectNotFoundEx.repoid(): RepositoryID;
begin
  result := 'IDL:javax/ejb/ObjectNotFoundEx:1.0';
end;

procedure Tjavax_ejb_ObjectNotFoundEx.value(const val: Ijavax_ejb_ObjectNotFoundException);
begin
  Fvalue := val;
end;

function Tjavax_ejb_ObjectNotFoundEx.value: Ijavax_ejb_ObjectNotFoundException;
begin
  result := Fvalue;
end;

//***********************************************************
// Tjavax_ejb_EJBHome
//***********************************************************
function Tjavax_ejb_EJBHome.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.EJBHome:0000000000000000' then
    begin
      result := Pointer(self as Ijavax_ejb_EJBHome);
      exit;
    end;
end;

class function Tjavax_ejb_EJBHome._narrow(const obj : IORBObject): Ijavax_ejb_EJBHome;
var
  p: Pointer;
  stub: Tjavax_ejb_EJBHome_stub;
begin
  result := nil;
  if obj = nil then exit;
  p := obj.narrow_helper('RMI:javax.ejb.EJBHome:0000000000000000');
  if p <> nil then
    result := Ijavax_ejb_EJBHome(p)
  else
    begin
      if narrow_helper2(obj) or obj._is_a_remote('RMI:javax.ejb.EJBHome:0000000000000000') then
        begin
          stub := Tjavax_ejb_EJBHome_stub.Create();
          stub.assign(obj);
          result := stub;
        end;
    end;
end;

class function Tjavax_ejb_EJBHome.narrow_helper2(const obj: IORBObject): Boolean;
begin
  result := obj._repoid = 'RMI:javax.ejb.EJBHome:0000000000000000'
end;

//***********************************************************
// Tjavax_ejb_EJBHome_stub
//***********************************************************
procedure Tjavax_ejb_EJBHome_stub.remove__java_lang_Object(const arg0: Tjava_lang_Object);
var
  req: IStaticRequest;
  _arg0: IStaticAny;
begin
  _arg0 := StaticAny(stat_any,@arg0);
  req := StaticRequest(self,'remove__java_lang_Object');
  req.add_in_arg(_arg0);
  req.set_exceptions_tc([_tc_javax_ejb_RemoveEx.typecode]);
  req.invoke;
  dorb_static_throw(req,[javax_ejb_RemoveEx_marshaller, 'IDL:javax/ejb/RemoveEx:1.0']);
end;

procedure Tjavax_ejb_EJBHome_stub.remove__javax_ejb_Handle(const arg0: Ijavax_ejb_Handle);
var
  req: IStaticRequest;
  _arg0: IStaticAny;
begin
  _arg0 := StaticAny(javax_ejb_Handle_marshaller,@arg0);
  req := StaticRequest(self,'remove__javax_ejb_Handle');
  req.add_in_arg(_arg0);
  req.set_exceptions_tc([_tc_javax_ejb_RemoveEx.typecode]);
  req.invoke;
  dorb_static_throw(req,[javax_ejb_RemoveEx_marshaller, 'IDL:javax/ejb/RemoveEx:1.0']);
end;

function Tjavax_ejb_EJBHome_stub._get_EJBMetaData: Ijavax_ejb_EJBMetaData;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(javax_ejb_EJBMetaData_marshaller, @result);
  req := StaticRequest(self,'_get_EJBMetaData');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

function Tjavax_ejb_EJBHome_stub._get_homeHandle: Ijavax_ejb_HomeHandle;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(javax_ejb_HomeHandle_marshaller, @result);
  req := StaticRequest(self,'_get_homeHandle');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

//***********************************************************
// Tjavax_ejb_EJBHome_stub_clp
//***********************************************************
function Tjavax_ejb_EJBHome_stub_clp.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.EJBHome:0000000000000000' then
    begin
      result := Pointer(self as Ijavax_ejb_EJBHome);
      exit;
  end;
end;

procedure Tjavax_ejb_EJBHome_stub_clp.remove__java_lang_Object(const arg0: Tjava_lang_Object);
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBHome;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBHome_serv._narrow(_srv);
      if srv <> nil then
        srv.remove__java_lang_Object(arg0)
    end;
  _postinvoke();
end;

procedure Tjavax_ejb_EJBHome_stub_clp.remove__javax_ejb_Handle(const arg0: Ijavax_ejb_Handle);
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBHome;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBHome_serv._narrow(_srv);
      if srv <> nil then
        srv.remove__javax_ejb_Handle(arg0)
    end;
  _postinvoke();
end;

function Tjavax_ejb_EJBHome_stub_clp._get_EJBMetaData: Ijavax_ejb_EJBMetaData;
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBHome;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBHome_serv._narrow(_srv);
      if srv <> nil then
        result := srv._get_EJBMetaData
    end;
  _postinvoke();
end;

function Tjavax_ejb_EJBHome_stub_clp._get_homeHandle: Ijavax_ejb_HomeHandle;
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBHome;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBHome_serv._narrow(_srv);
      if srv <> nil then
        result := srv._get_homeHandle
    end;
  _postinvoke();
end;

//***********************************************************
// Tjavax_ejb_EJBHome_serv
//***********************************************************
function Tjavax_ejb_EJBHome_serv._this(): Ijavax_ejb_EJBHome;
var
  obj: IORBObject;
begin
  obj := this();
  result := Tjavax_ejb_EJBHome._narrow(obj);
end;

function Tjavax_ejb_EJBHome_serv._is_a(const repoid: RepositoryID): Boolean;
begin
  result := repoid = 'RMI:javax.ejb.EJBHome:0000000000000000';
end;

function Tjavax_ejb_EJBHome_serv._primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID;
begin
  result := 'RMI:javax.ejb.EJBHome:0000000000000000';
end;

function Tjavax_ejb_EJBHome_serv._make_stub(const poa: IPOA; const obj : IORBObject): IORBObject;
begin
  result := Tjavax_ejb_EJBHome_stub_clp.Create(poa,obj);
end;

procedure Tjavax_ejb_EJBHome_serv.invoke(const serv: IStaticServerRequest);
begin
  if not _dispatch(serv) then
    begin
      serv.set_exception(BAD_OPERATION.Create(0, COMPLETED_NO) as IORBException);
      serv.write_results();
    end;
end;

function Tjavax_ejb_EJBHome_serv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.EJBHome:0000000000000000' then
    begin
      result := Pointer(Ijavax_ejb_EJBHome(self));
      exit;
    end;
end;

class function Tjavax_ejb_EJBHome_serv._narrow(const srv : IServant): Ijavax_ejb_EJBHome;
var
  p: Pointer;
begin
  result := nil;
  if srv = nil then exit;
  p := srv.narrow_helper('RMI:javax.ejb.EJBHome:0000000000000000');
  if p <> nil then
    result := Ijavax_ejb_EJBHome(p)
end;

function Tjavax_ejb_EJBHome_serv._dispatch(const req: IStaticServerRequest): Boolean;
var
  remove__java_lang_Object_arg0: Tjava_lang_Object;
  remove__javax_ejb_Handle_arg0: Ijavax_ejb_Handle;
  EJBMetaData_get_value: Ijavax_ejb_EJBMetaData;
  homeHandle_get_value: Ijavax_ejb_HomeHandle;
begin
  result := true;
  if req.op_name = 'remove__java_lang_Object' then
    begin
      req.add_in_arg(StaticAny(stat_any,@remove__java_lang_Object_arg0) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_javax_ejb_RemoveEx.typecode]);
      try
        remove__java_lang_Object(remove__java_lang_Object_arg0);
      except
        on RemoveEx: Tjavax_ejb_RemoveEx do
          req.set_exception(Tjavax_ejb_RemoveEx.Create(RemoveEx) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = 'remove__javax_ejb_Handle' then
    begin
      req.add_in_arg(StaticAny(javax_ejb_Handle_marshaller,@remove__javax_ejb_Handle_arg0) as IStaticAny);
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_javax_ejb_RemoveEx.typecode]);
      try
        remove__javax_ejb_Handle(remove__javax_ejb_Handle_arg0);
      except
        on RemoveEx: Tjavax_ejb_RemoveEx do
          req.set_exception(Tjavax_ejb_RemoveEx.Create(RemoveEx) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = '_get_EJBMetaData' then
    begin
      req.set_result(StaticAny(javax_ejb_EJBMetaData_marshaller,@EJBMetaData_get_value) as IStaticAny);
      if not req.read_args() then  exit;
      EJBMetaData_get_value := _get_EJBMetaData;
      req.write_results();
      exit;
    end
  else if req.op_name = '_get_homeHandle' then
    begin
      req.set_result(StaticAny(javax_ejb_HomeHandle_marshaller,@homeHandle_get_value) as IStaticAny);
      if not req.read_args() then  exit;
      homeHandle_get_value := _get_homeHandle;
      req.write_results();
      exit;
    end;
  result := false;
end;

//***********************************************************
// Tjavax_ejb_EJBHome_marshaller
//***********************************************************
function Tjavax_ejb_EJBHome_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  obj: IORBObject;
begin
  result := false;
  if not stat_Object.demarshal(dec,@obj) then exit;
  Ijavax_ejb_EJBHome(addr^) := Tjavax_ejb_EJBHome._narrow(obj);
  result := (obj = nil) or (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_EJBHome_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  obj: IORBObject;
begin
  obj := Ijavax_ejb_EJBHome(addr^) as IORBObject;
  stat_Object.marshal(enc,@Pointer(obj));
end;

procedure Tjavax_ejb_EJBHome_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_EJBHome(addr^) := nil;
end;

procedure Tjavax_ejb_EJBHome_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_EJBHome(addr^) := Tjavax_ejb_EJBHome_stub.Create();
end;

procedure Tjavax_ejb_EJBHome_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_EJBHome(dst^) := Ijavax_ejb_EJBHome(src^);
end;

function Tjavax_ejb_EJBHome_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_EJBHome.typecode;
end;

//***********************************************************
// Tjavax_ejb_EJBObject
//***********************************************************
function Tjavax_ejb_EJBObject.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.EJBObject:0000000000000000' then
    begin
      result := Pointer(self as Ijavax_ejb_EJBObject);
      exit;
    end;
end;

class function Tjavax_ejb_EJBObject._narrow(const obj : IORBObject): Ijavax_ejb_EJBObject;
var
  p: Pointer;
  stub: Tjavax_ejb_EJBObject_stub;
begin
  result := nil;
  if obj = nil then exit;
  p := obj.narrow_helper('RMI:javax.ejb.EJBObject:0000000000000000');
  if p <> nil then
    result := Ijavax_ejb_EJBObject(p)
  else
    begin
      if narrow_helper2(obj) or obj._is_a_remote('RMI:javax.ejb.EJBObject:0000000000000000') then
        begin
          stub := Tjavax_ejb_EJBObject_stub.Create();
          stub.assign(obj);
          result := stub;
        end;
    end;
end;

class function Tjavax_ejb_EJBObject.narrow_helper2(const obj: IORBObject): Boolean;
begin
  result := obj._repoid = 'RMI:javax.ejb.EJBObject:0000000000000000'
end;

//***********************************************************
// Tjavax_ejb_EJBObject_stub
//***********************************************************
function Tjavax_ejb_EJBObject_stub.isIdentical(const arg0: Ijavax_ejb_EJBObject): boolean;
var
  req: IStaticRequest;
  _arg0: IStaticAny;
  _result: IStaticAny;
begin
  _arg0 := StaticAny(javax_ejb_EJBObject_marshaller,@arg0);
  _result := StaticAny(stat_boolean, @result);
  req := StaticRequest(self,'isIdentical');
  req.add_in_arg(_arg0);
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

procedure Tjavax_ejb_EJBObject_stub.remove;
var
  req: IStaticRequest;
begin
  req := StaticRequest(self,'remove');
  req.set_exceptions_tc([_tc_javax_ejb_RemoveEx.typecode]);
  req.invoke;
  dorb_static_throw(req,[javax_ejb_RemoveEx_marshaller, 'IDL:javax/ejb/RemoveEx:1.0']);
end;

function Tjavax_ejb_EJBObject_stub._get_EJBHome: Ijavax_ejb_EJBHome;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(javax_ejb_EJBHome_marshaller, @result);
  req := StaticRequest(self,'_get_EJBHome');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

function Tjavax_ejb_EJBObject_stub._get_handle: Ijavax_ejb_Handle;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(javax_ejb_Handle_marshaller, @result);
  req := StaticRequest(self,'_get_handle');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

function Tjavax_ejb_EJBObject_stub._get_primaryKey: Tjava_lang_Object;
var
  req: IStaticRequest;
  _result: IStaticAny;
begin
  _result := StaticAny(stat_any, @result);
  req := StaticRequest(self,'_get_primaryKey');
  req.set_result(_result);
  req.invoke;
  dorb_static_throw(req);
end;

//***********************************************************
// Tjavax_ejb_EJBObject_stub_clp
//***********************************************************
function Tjavax_ejb_EJBObject_stub_clp.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.EJBObject:0000000000000000' then
    begin
      result := Pointer(self as Ijavax_ejb_EJBObject);
      exit;
  end;
end;

function Tjavax_ejb_EJBObject_stub_clp.isIdentical(const arg0: Ijavax_ejb_EJBObject): boolean;
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBObject;
begin
  result := false;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBObject_serv._narrow(_srv);
      if srv <> nil then
        result := srv.isIdentical(arg0)
    end;
  _postinvoke();
end;

procedure Tjavax_ejb_EJBObject_stub_clp.remove;
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBObject;
begin
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBObject_serv._narrow(_srv);
      if srv <> nil then
        srv.remove
    end;
  _postinvoke();
end;

function Tjavax_ejb_EJBObject_stub_clp._get_EJBHome: Ijavax_ejb_EJBHome;
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBObject;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBObject_serv._narrow(_srv);
      if srv <> nil then
        result := srv._get_EJBHome
    end;
  _postinvoke();
end;

function Tjavax_ejb_EJBObject_stub_clp._get_handle: Ijavax_ejb_Handle;
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBObject;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBObject_serv._narrow(_srv);
      if srv <> nil then
        result := srv._get_handle
    end;
  _postinvoke();
end;

function Tjavax_ejb_EJBObject_stub_clp._get_primaryKey: Tjava_lang_Object;
var
  _srv: IServant;
  srv: Ijavax_ejb_EJBObject;
begin
  result := nil;
  _srv := _preinvoke();
  if _srv <> nil then
    begin
      srv := Tjavax_ejb_EJBObject_serv._narrow(_srv);
      if srv <> nil then
        result := srv._get_primaryKey
    end;
  _postinvoke();
end;

//***********************************************************
// Tjavax_ejb_EJBObject_serv
//***********************************************************
function Tjavax_ejb_EJBObject_serv._this(): Ijavax_ejb_EJBObject;
var
  obj: IORBObject;
begin
  obj := this();
  result := Tjavax_ejb_EJBObject._narrow(obj);
end;

function Tjavax_ejb_EJBObject_serv._is_a(const repoid: RepositoryID): Boolean;
begin
  result := repoid = 'RMI:javax.ejb.EJBObject:0000000000000000';
end;

function Tjavax_ejb_EJBObject_serv._primary_interface(const objid: ObjectID; const poa: IPOA): RepositoryID;
begin
  result := 'RMI:javax.ejb.EJBObject:0000000000000000';
end;

function Tjavax_ejb_EJBObject_serv._make_stub(const poa: IPOA; const obj : IORBObject): IORBObject;
begin
  result := Tjavax_ejb_EJBObject_stub_clp.Create(poa,obj);
end;

procedure Tjavax_ejb_EJBObject_serv.invoke(const serv: IStaticServerRequest);
begin
  if not _dispatch(serv) then
    begin
      serv.set_exception(BAD_OPERATION.Create(0, COMPLETED_NO) as IORBException);
      serv.write_results();
    end;
end;

function Tjavax_ejb_EJBObject_serv.narrow_helper(const str: RepositoryID): Pointer;
begin
  result := nil;
  if str = 'RMI:javax.ejb.EJBObject:0000000000000000' then
    begin
      result := Pointer(Ijavax_ejb_EJBObject(self));
      exit;
    end;
end;

class function Tjavax_ejb_EJBObject_serv._narrow(const srv : IServant): Ijavax_ejb_EJBObject;
var
  p: Pointer;
begin
  result := nil;
  if srv = nil then exit;
  p := srv.narrow_helper('RMI:javax.ejb.EJBObject:0000000000000000');
  if p <> nil then
    result := Ijavax_ejb_EJBObject(p)
end;

function Tjavax_ejb_EJBObject_serv._dispatch(const req: IStaticServerRequest): Boolean;
var
  isIdentical_result: boolean;
  isIdentical_arg0: Ijavax_ejb_EJBObject;
  EJBHome_get_value: Ijavax_ejb_EJBHome;
  handle_get_value: Ijavax_ejb_Handle;
  primaryKey_get_value: Tjava_lang_Object;
begin
  result := true;
  if req.op_name = 'isIdentical' then
    begin
      req.add_in_arg(StaticAny(javax_ejb_EJBObject_marshaller,@isIdentical_arg0) as IStaticAny);
      req.set_result(StaticAny(stat_boolean,@isIdentical_result) as IStaticAny);
      if not req.read_args() then  exit;
      isIdentical_result := isIdentical(isIdentical_arg0);
      req.write_results();
      exit;
    end
  else if req.op_name = 'remove' then
    begin
      if not req.read_args() then  exit;
      req.set_exceptions_tc([_tc_javax_ejb_RemoveEx.typecode]);
      try
        remove;
      except
        on RemoveEx: Tjavax_ejb_RemoveEx do
          req.set_exception(Tjavax_ejb_RemoveEx.Create(RemoveEx) as IORBException);
      end;
      req.write_results();
      exit;
    end
  else if req.op_name = '_get_EJBHome' then
    begin
      req.set_result(StaticAny(javax_ejb_EJBHome_marshaller,@EJBHome_get_value) as IStaticAny);
      if not req.read_args() then  exit;
      EJBHome_get_value := _get_EJBHome;
      req.write_results();
      exit;
    end
  else if req.op_name = '_get_handle' then
    begin
      req.set_result(StaticAny(javax_ejb_Handle_marshaller,@handle_get_value) as IStaticAny);
      if not req.read_args() then  exit;
      handle_get_value := _get_handle;
      req.write_results();
      exit;
    end
  else if req.op_name = '_get_primaryKey' then
    begin
      req.set_result(StaticAny(stat_any,@primaryKey_get_value) as IStaticAny);
      if not req.read_args() then  exit;
      primaryKey_get_value := _get_primaryKey;
      req.write_results();
      exit;
    end;
  result := false;
end;

//***********************************************************
// Tjavax_ejb_EJBObject_marshaller
//***********************************************************
function Tjavax_ejb_EJBObject_marshaller.demarshal(dec: IDecoder;const addr : Pointer): Boolean;
var
  obj: IORBObject;
begin
  result := false;
  if not stat_Object.demarshal(dec,@obj) then exit;
  Ijavax_ejb_EJBObject(addr^) := Tjavax_ejb_EJBObject._narrow(obj);
  result := (obj = nil) or (Pointer(addr^) <> nil);
end;

procedure Tjavax_ejb_EJBObject_marshaller.marshal(enc: IEncoder;const addr : Pointer);
var
  obj: IORBObject;
begin
  obj := Ijavax_ejb_EJBObject(addr^) as IORBObject;
  stat_Object.marshal(enc,@Pointer(obj));
end;

procedure Tjavax_ejb_EJBObject_marshaller._free(var addr: Pointer);
begin
  Ijavax_ejb_EJBObject(addr^) := nil;
end;

procedure Tjavax_ejb_EJBObject_marshaller._create(var addr: Pointer);
begin
  Ijavax_ejb_EJBObject(addr^) := Tjavax_ejb_EJBObject_stub.Create();
end;

procedure Tjavax_ejb_EJBObject_marshaller._assign(dst, src: Pointer);
begin
  Ijavax_ejb_EJBObject(dst^) := Ijavax_ejb_EJBObject(src^);
end;

function Tjavax_ejb_EJBObject_marshaller.typecode: ITypeCode;
begin
  result := _tc_javax_ejb_EJBObject.typecode;
end;

function any_to_java_lang_StackTraceElement(const a: IAny; var val: Ijava_lang_StackTraceElement): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_StackTraceElement_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_StackTraceElement_to_any(const val: Ijava_lang_StackTraceElement): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_StackTraceElement_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_StackTraceElement_seq(const a: IAny; var val): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_StackTraceElement_seq_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_StackTraceElement_seq_to_any(const val): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_StackTraceElement_seq_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_seq1_StackTraceElement(const a: IAny; var val: Ijava_lang_seq1_StackTraceElement): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_seq1_StackTraceElement_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_seq1_StackTraceElement_to_any(const val: Ijava_lang_seq1_StackTraceElement): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_seq1_StackTraceElement_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Throwable(const a: IAny; var val: Ijava_lang_Throwable): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Throwable_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Throwable_to_any(const val: Ijava_lang_Throwable): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Throwable_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_ThrowableEx(const a: IAny; var val: Ijava_lang_ThrowableEx): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_ThrowableEx_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_ThrowableEx_to_any(const val: Ijava_lang_ThrowableEx): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_ThrowableEx_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Exception(const a: IAny; var val: Ijava_lang_Exception): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Exception_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Exception_to_any(const val: Ijava_lang_Exception): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Exception_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Ex(const a: IAny; var val: Ijava_lang_Ex): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Ex_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Ex_to_any(const val: Ijava_lang_Ex): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Ex_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Error(const a: IAny; var val: Ijava_lang_Error): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Error_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Error_to_any(const val: Ijava_lang_Error): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Error_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_ErrorEx(const a: IAny; var val: Ijava_lang_ErrorEx): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_ErrorEx_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_ErrorEx_to_any(const val: Ijava_lang_ErrorEx): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_ErrorEx_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Comparable(const a: IAny; var val: Ijava_lang_Comparable): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Comparable_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Comparable_to_any(const val: Ijava_lang_Comparable): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Comparable_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Number(const a: IAny; var val: Ijava_lang_Number): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Number_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Number_to_any(const val: Ijava_lang_Number): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Number_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Integer(const a: IAny; var val: Ijava_lang_Integer): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Integer_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Integer_to_any(const val: Ijava_lang_Integer): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Integer_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Long(const a: IAny; var val: Ijava_lang_Long): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Long_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Long_to_any(const val: Ijava_lang_Long): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Long_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_java_lang_Boolean(const a: IAny; var val: Ijava_lang_Boolean): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Boolean_marshaller,@val);
  result := a.to_static_any(stat);
end;

function java_lang_Boolean_to_any(const val: Ijava_lang_Boolean): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(java_lang_Boolean_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_CreateException(const a: IAny; var val: Ijavax_ejb_CreateException): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_CreateException_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_CreateException_to_any(const val: Ijavax_ejb_CreateException): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_CreateException_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_CreateEx(const a: IAny; var val: Ijavax_ejb_CreateEx): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_CreateEx_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_CreateEx_to_any(const val: Ijavax_ejb_CreateEx): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_CreateEx_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_Handle(const a: IAny; var val: Ijavax_ejb_Handle): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_Handle_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_Handle_to_any(const val: Ijavax_ejb_Handle): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_Handle_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_HomeHandle(const a: IAny; var val: Ijavax_ejb_HomeHandle): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_HomeHandle_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_HomeHandle_to_any(const val: Ijavax_ejb_HomeHandle): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_HomeHandle_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_EJBMetaData(const a: IAny; var val: Ijavax_ejb_EJBMetaData): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_EJBMetaData_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_EJBMetaData_to_any(const val: Ijavax_ejb_EJBMetaData): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_EJBMetaData_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_RemoveException(const a: IAny; var val: Ijavax_ejb_RemoveException): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_RemoveException_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_RemoveException_to_any(const val: Ijavax_ejb_RemoveException): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_RemoveException_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_RemoveEx(const a: IAny; var val: Ijavax_ejb_RemoveEx): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_RemoveEx_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_RemoveEx_to_any(const val: Ijavax_ejb_RemoveEx): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_RemoveEx_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_FinderException(const a: IAny; var val: Ijavax_ejb_FinderException): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_FinderException_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_FinderException_to_any(const val: Ijavax_ejb_FinderException): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_FinderException_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_FinderEx(const a: IAny; var val: Ijavax_ejb_FinderEx): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_FinderEx_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_FinderEx_to_any(const val: Ijavax_ejb_FinderEx): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_FinderEx_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_ObjectNotFoundException(const a: IAny; var val: Ijavax_ejb_ObjectNotFoundException): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_ObjectNotFoundException_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_ObjectNotFoundException_to_any(const val: Ijavax_ejb_ObjectNotFoundException): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_ObjectNotFoundException_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_ObjectNotFoundEx(const a: IAny; var val: Ijavax_ejb_ObjectNotFoundEx): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_ObjectNotFoundEx_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_ObjectNotFoundEx_to_any(const val: Ijavax_ejb_ObjectNotFoundEx): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_ObjectNotFoundEx_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_EJBHome(const a: IAny; var val: Ijavax_ejb_EJBHome): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_EJBHome_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_EJBHome_to_any(const val: Ijavax_ejb_EJBHome): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_EJBHome_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

function any_to_javax_ejb_EJBObject(const a: IAny; var val: Ijavax_ejb_EJBObject): Boolean;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_EJBObject_marshaller,@val);
  result := a.to_static_any(stat);
end;

function javax_ejb_EJBObject_to_any(const val: Ijavax_ejb_EJBObject): IAny;
var
  stat: IStaticAny;
begin
  stat := StaticAny(javax_ejb_EJBObject_marshaller,@val);
  result := CreateAny;
  result.from_static_any(stat);
end;

initialization
  java_lang_StackTraceElement_marshaller := Tjava_lang_StackTraceElement_marshaller.Create();
  java_lang_StackTraceElement_seq_marshaller := Tjava_lang_StackTraceElement_seq_marshaller.Create();
  java_lang_seq1_StackTraceElement_marshaller := Tjava_lang_seq1_StackTraceElement_marshaller.Create();
  java_lang_Throwable_marshaller := Tjava_lang_Throwable_marshaller.Create();
  java_lang_ThrowableEx_marshaller := Tjava_lang_ThrowableEx_marshaller.Create();
  java_lang_Exception_marshaller := Tjava_lang_Exception_marshaller.Create();
  java_lang_Ex_marshaller := Tjava_lang_Ex_marshaller.Create();
  java_lang_Error_marshaller := Tjava_lang_Error_marshaller.Create();
  java_lang_ErrorEx_marshaller := Tjava_lang_ErrorEx_marshaller.Create();
  java_lang_Comparable_marshaller := Tjava_lang_Comparable_marshaller.Create();
  java_lang_Number_marshaller := Tjava_lang_Number_marshaller.Create();
  java_lang_Integer_marshaller := Tjava_lang_Integer_marshaller.Create();
  java_lang_Long_marshaller := Tjava_lang_Long_marshaller.Create();
  java_lang_Boolean_marshaller := Tjava_lang_Boolean_marshaller.Create();
  javax_ejb_CreateException_marshaller := Tjavax_ejb_CreateException_marshaller.Create();
  javax_ejb_CreateEx_marshaller := Tjavax_ejb_CreateEx_marshaller.Create();
  javax_ejb_Handle_marshaller := Tjavax_ejb_Handle_marshaller.Create();
  javax_ejb_HomeHandle_marshaller := Tjavax_ejb_HomeHandle_marshaller.Create();
  javax_ejb_EJBMetaData_marshaller := Tjavax_ejb_EJBMetaData_marshaller.Create();
  javax_ejb_RemoveException_marshaller := Tjavax_ejb_RemoveException_marshaller.Create();
  javax_ejb_RemoveEx_marshaller := Tjavax_ejb_RemoveEx_marshaller.Create();
  javax_ejb_FinderException_marshaller := Tjavax_ejb_FinderException_marshaller.Create();
  javax_ejb_FinderEx_marshaller := Tjavax_ejb_FinderEx_marshaller.Create();
  javax_ejb_ObjectNotFoundException_marshaller := Tjavax_ejb_ObjectNotFoundException_marshaller.Create();
  javax_ejb_ObjectNotFoundEx_marshaller := Tjavax_ejb_ObjectNotFoundEx_marshaller.Create();
  javax_ejb_EJBHome_marshaller := Tjavax_ejb_EJBHome_marshaller.Create();
  javax_ejb_EJBObject_marshaller := Tjavax_ejb_EJBObject_marshaller.Create();
  _tc_java_lang_StackTraceElement := CreateTypeCodeConst('010000001d00000092010000010000002400000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e743a312e30'+
    '0012000000537461636b5472616365456c656d656e7400000000000000040000000b0000006c696e654e756d6265720000030000000000'+
    '00000f0000006465636c6172696e67436c61737300001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f524241'+
    '2f57537472696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b000000000000000000000009000000'+
    '66696c654e616d65000000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e675661'+
    '6c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b0000006d6574686f644e616d65'+
    '00001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d'+
    '00000057537472696e6756616c7565000000001b000000000000000000');
  _tc_java_lang_StackTraceElement_seq := CreateTypeCodeConst('0100000013000000a4010000010000001d00000092010000010000002400000049444c3a6a6176612f6c616e672f537461636b54726163'+
    '65456c656d656e743a312e300012000000537461636b5472616365456c656d656e7400000000000000040000000b0000006c696e654e75'+
    '6d626572000003000000000000000f0000006465636c6172696e67436c61737300001e00000048000000010000002300000049444c3a6f'+
    '6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b000000'+
    '00000000000000000900000066696c654e616d65000000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f52'+
    '42412f57537472696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b00'+
    '00006d6574686f644e616d6500001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b000000000000000000000000000000');
  _tc_java_lang_seq1_StackTraceElement := CreateTypeCodeConst('010000001e0000006c0200000100000045000000524d493a5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b3a'+
    '434433384639393330454138414145433a363130394335394132363336444438350000000017000000736571315f537461636b54726163'+
    '65456c656d656e74000015000000f8010000010000002700000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d65'+
    '6e745365713a312e30000015000000537461636b5472616365456c656d656e745365710000000013000000a4010000010000001d000000'+
    '92010000010000002400000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e743a312e300012000000537461'+
    '636b5472616365456c656d656e7400000000000000040000000b0000006c696e654e756d626572000003000000000000000f0000006465'+
    '636c6172696e67436c61737300001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000900000066696c654e616d65'+
    '000000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000'+
    '000d00000057537472696e6756616c7565000000001b00000000000000000000000b0000006d6574686f644e616d6500001e0000004800'+
    '0000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d0000005753747269'+
    '6e6756616c7565000000001b000000000000000000000000000000');
  _tc_java_lang_Throwable := CreateTypeCodeConst('010000001d00000062030000010000003a000000524d493a6a6176612e6c616e672e5468726f7761626c653a4638363738423446344432'+
    '45423730353a443543363335323733393737423843420000000a0000005468726f7761626c650000000000000003000000060000006361'+
    '757365000000ff0000008cffffff000000000e00000064657461696c4d6573736167650000001e00000048000000010000002300000049'+
    '444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d00000057537472696e6756616c756500000000'+
    '1b00000000000000000000000b000000737461636b547261636500001e0000006c0200000100000045000000524d493a5b4c6a6176612e'+
    '6c616e672e537461636b5472616365456c656d656e743b3a434433384639393330454138414145433a3631303943353941323633364444'+
    '38350000000017000000736571315f537461636b5472616365456c656d656e74000015000000f8010000010000002700000049444c3a6a'+
    '6176612f6c616e672f537461636b5472616365456c656d656e745365713a312e30000015000000537461636b5472616365456c656d656e'+
    '745365710000000013000000a4010000010000001d00000092010000010000002400000049444c3a6a6176612f6c616e672f537461636b'+
    '5472616365456c656d656e743a312e300012000000537461636b5472616365456c656d656e7400000000000000040000000b0000006c69'+
    '6e654e756d626572000003000000000000000f0000006465636c6172696e67436c61737300001e00000048000000010000002300000049'+
    '444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d00000057537472696e6756616c756500000000'+
    '1b00000000000000000000000900000066696c654e616d65000000001e00000048000000010000002300000049444c3a6f6d672e6f7267'+
    '2f434f5242412f57537472696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b000000000000000000'+
    '00000b0000006d6574686f644e616d6500001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f575374'+
    '72696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b0000000000000000000000000000000000');
  _tc_java_lang_ThrowableEx := CreateTypeCodeConst('01000000160000003c000000010000001e00000049444c3a6a6176612f6c616e672f5468726f7761626c6545783a312e300000000c0000'+
    '005468726f7761626c6545780000000000');
  _tc_java_lang_Exception := CreateTypeCodeConst('010000001d000000c4030000010000003a000000524d493a6a6176612e6c616e672e457863657074696f6e3a3737453842363243443745'+
    '37394141323a443046443146334531413342314343340000000a000000457863657074696f6e0000001d00000062030000010000003a00'+
    '0000524d493a6a6176612e6c616e672e5468726f7761626c653a463836373842344634443245423730353a443543363335323733393737'+
    '423843420000000a0000005468726f7761626c650000000000000003000000060000006361757365000000ff0000008cffffff00000000'+
    '0e00000064657461696c4d6573736167650000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57'+
    '537472696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b0000007374'+
    '61636b547261636500001e0000006c0200000100000045000000524d493a5b4c6a6176612e6c616e672e537461636b5472616365456c65'+
    '6d656e743b3a434433384639393330454138414145433a363130394335394132363336444438350000000017000000736571315f537461'+
    '636b5472616365456c656d656e74000015000000f8010000010000002700000049444c3a6a6176612f6c616e672f537461636b54726163'+
    '65456c656d656e745365713a312e30000015000000537461636b5472616365456c656d656e745365710000000013000000a40100000100'+
    '00001d00000092010000010000002400000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e743a312e300012'+
    '000000537461636b5472616365456c656d656e7400000000000000040000000b0000006c696e654e756d62657200000300000000000000'+
    '0f0000006465636c6172696e67436c61737300001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57'+
    '537472696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b0000000000000000000000090000006669'+
    '6c654e616d65000000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75'+
    '653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b0000006d6574686f644e616d650000'+
    '1e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d0000'+
    '0057537472696e6756616c7565000000001b0000000000000000000000000000000000000000000000');
  _tc_java_lang_Ex := CreateTypeCodeConst('01000000160000002c000000010000001500000049444c3a6a6176612f6c616e672f45783a312e3000000000030000004578000000000000');
  _tc_java_lang_Error := CreateTypeCodeConst('010000001d000000bc0300000100000036000000524d493a6a6176612e6c616e672e4572726f723a373745384236324344374537394141'+
    '323a34353144333635363842383230453536000000060000004572726f720000001d00000062030000010000003a000000524d493a6a61'+
    '76612e6c616e672e5468726f7761626c653a463836373842344634443245423730353a443543363335323733393737423843420000000a'+
    '0000005468726f7761626c650000000000000003000000060000006361757365000000ff0000008cffffff000000000e00000064657461'+
    '696c4d6573736167650000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e675661'+
    '6c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b000000737461636b5472616365'+
    '00001e0000006c0200000100000045000000524d493a5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b3a4344'+
    '33384639393330454138414145433a363130394335394132363336444438350000000017000000736571315f537461636b547261636545'+
    '6c656d656e74000015000000f8010000010000002700000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e74'+
    '5365713a312e30000015000000537461636b5472616365456c656d656e745365710000000013000000a4010000010000001d0000009201'+
    '0000010000002400000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e743a312e300012000000537461636b'+
    '5472616365456c656d656e7400000000000000040000000b0000006c696e654e756d626572000003000000000000000f0000006465636c'+
    '6172696e67436c61737300001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e675661'+
    '6c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000900000066696c654e616d650000'+
    '00001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d'+
    '00000057537472696e6756616c7565000000001b00000000000000000000000b0000006d6574686f644e616d6500001e00000048000000'+
    '010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d00000057537472696e67'+
    '56616c7565000000001b0000000000000000000000000000000000000000000000');
  _tc_java_lang_ErrorEx := CreateTypeCodeConst('010000001600000034000000010000001a00000049444c3a6a6176612f6c616e672f4572726f7245783a312e3000000008000000457272'+
    '6f7245780000000000');
  _tc_java_lang_Comparable := CreateTypeCodeConst('010000001d00000044000000010000001d00000049444c3a6a6176612f6c616e672f436f6d70617261626c653a312e30000000000b0000'+
    '00436f6d70617261626c650000000000000000000000000000');
  _tc_java_lang_Number := CreateTypeCodeConst('010000001d000000580000000100000037000000524d493a6a6176612e6c616e672e4e756d6265723a3037314441384245374639373131'+
    '32383a383641433935314430423934453038420000070000004e756d6265720000000000000000000000000000');
  _tc_java_lang_Integer := CreateTypeCodeConst('010000001d000000c60000000100000038000000524d493a6a6176612e6c616e672e496e74656765723a34373639334646423446453537'+
    '3946343a313245324130413446373831383733380008000000496e746567657200000000001d000000580000000100000037000000524d'+
    '493a6a6176612e6c616e672e4e756d6265723a303731444138424537463937313132383a38364143393531443042393445303842000007'+
    '0000004e756d6265720000000000000000000000000000010000000600000076616c7565000000030000000000');
  _tc_java_lang_Long := CreateTypeCodeConst('010000001d000000c20000000100000035000000524d493a6a6176612e6c616e672e4c6f6e673a32303546364343463030324536453930'+
    '3a3342384245343930434338463233444600000000050000004c6f6e67000000001d000000580000000100000037000000524d493a6a61'+
    '76612e6c616e672e4e756d6265723a303731444138424537463937313132383a383641433935314430423934453038420000070000004e'+
    '756d6265720000000000000000000000000000010000000600000076616c7565000000170000000000');
  _tc_java_lang_Boolean := CreateTypeCodeConst('010000001d0000006a0000000100000038000000524d493a6a6176612e6c616e672e426f6f6c65616e3a46453037304436413742443734'+
    '3139413a434432303732383044353943464145450008000000426f6f6c65616e000000000000000000010000000600000076616c756500'+
    '0000080000000000');
  _tc_javax_ejb_CreateException := CreateTypeCodeConst('010000001d000000300400000100000040000000524d493a6a617661782e656a622e437265617465457863657074696f6e3a3034384133'+
    '36373541364644353436333a353735464236433033443439414436410010000000437265617465457863657074696f6e00000000001d00'+
    '0000c4030000010000003a000000524d493a6a6176612e6c616e672e457863657074696f6e3a373745384236324344374537394141323a'+
    '443046443146334531413342314343340000000a000000457863657074696f6e0000001d00000062030000010000003a000000524d493a'+
    '6a6176612e6c616e672e5468726f7761626c653a463836373842344634443245423730353a443543363335323733393737423843420000'+
    '000a0000005468726f7761626c650000000000000003000000060000006361757365000000ff0000008cffffff000000000e0000006465'+
    '7461696c4d6573736167650000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b000000737461636b547261'+
    '636500001e0000006c0200000100000045000000524d493a5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b3a'+
    '434433384639393330454138414145433a363130394335394132363336444438350000000017000000736571315f537461636b54726163'+
    '65456c656d656e74000015000000f8010000010000002700000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d65'+
    '6e745365713a312e30000015000000537461636b5472616365456c656d656e745365710000000013000000a4010000010000001d000000'+
    '92010000010000002400000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e743a312e300012000000537461'+
    '636b5472616365456c656d656e7400000000000000040000000b0000006c696e654e756d626572000003000000000000000f0000006465'+
    '636c6172696e67436c61737300001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000900000066696c654e616d65'+
    '000000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000'+
    '000d00000057537472696e6756616c7565000000001b00000000000000000000000b0000006d6574686f644e616d6500001e0000004800'+
    '0000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d0000005753747269'+
    '6e6756616c7565000000001b000000000000000000000000000000000000000000000000000000');
  _tc_javax_ejb_CreateEx := CreateTypeCodeConst('010000001600000038000000010000001b00000049444c3a6a617661782f656a622f43726561746545783a312e30000009000000437265'+
    '61746545780000000000000000');
  _tc_javax_ejb_Handle := CreateTypeCodeConst('010000000e0000002f000000010000001900000049444c3a6a617661782f656a622f48616e646c653a312e30000000000700000048616e646c6500');
  _tc_javax_ejb_HomeHandle := CreateTypeCodeConst('010000000e00000037000000010000001d00000049444c3a6a617661782f656a622f486f6d6548616e646c653a312e30000000000b0000'+
    '00486f6d6548616e646c6500');
  _tc_javax_ejb_EJBMetaData := CreateTypeCodeConst('010000001d00000044000000010000001e00000049444c3a6a617661782f656a622f454a424d657461446174613a312e300000000c0000'+
    '00454a424d6574614461746100000000000000000000000000');
  _tc_javax_ejb_RemoveException := CreateTypeCodeConst('010000001d000000300400000100000040000000524d493a6a617661782e656a622e52656d6f7665457863657074696f6e3a3034384133'+
    '36373541364644353436333a43303641303038464430354134363241001000000052656d6f7665457863657074696f6e00000000001d00'+
    '0000c4030000010000003a000000524d493a6a6176612e6c616e672e457863657074696f6e3a373745384236324344374537394141323a'+
    '443046443146334531413342314343340000000a000000457863657074696f6e0000001d00000062030000010000003a000000524d493a'+
    '6a6176612e6c616e672e5468726f7761626c653a463836373842344634443245423730353a443543363335323733393737423843420000'+
    '000a0000005468726f7761626c650000000000000003000000060000006361757365000000ff0000008cffffff000000000e0000006465'+
    '7461696c4d6573736167650000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b000000737461636b547261'+
    '636500001e0000006c0200000100000045000000524d493a5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b3a'+
    '434433384639393330454138414145433a363130394335394132363336444438350000000017000000736571315f537461636b54726163'+
    '65456c656d656e74000015000000f8010000010000002700000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d65'+
    '6e745365713a312e30000015000000537461636b5472616365456c656d656e745365710000000013000000a4010000010000001d000000'+
    '92010000010000002400000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e743a312e300012000000537461'+
    '636b5472616365456c656d656e7400000000000000040000000b0000006c696e654e756d626572000003000000000000000f0000006465'+
    '636c6172696e67436c61737300001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000900000066696c654e616d65'+
    '000000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000'+
    '000d00000057537472696e6756616c7565000000001b00000000000000000000000b0000006d6574686f644e616d6500001e0000004800'+
    '0000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d0000005753747269'+
    '6e6756616c7565000000001b000000000000000000000000000000000000000000000000000000');
  _tc_javax_ejb_RemoveEx := CreateTypeCodeConst('010000001600000038000000010000001b00000049444c3a6a617661782f656a622f52656d6f766545783a312e3000000900000052656d'+
    '6f766545780000000000000000');
  _tc_javax_ejb_FinderException := CreateTypeCodeConst('010000001d000000300400000100000040000000524d493a6a617661782e656a622e46696e646572457863657074696f6e3a3034384133'+
    '36373541364644353436333a37394545313531344338423743413135001000000046696e646572457863657074696f6e00000000001d00'+
    '0000c4030000010000003a000000524d493a6a6176612e6c616e672e457863657074696f6e3a373745384236324344374537394141323a'+
    '443046443146334531413342314343340000000a000000457863657074696f6e0000001d00000062030000010000003a000000524d493a'+
    '6a6176612e6c616e672e5468726f7761626c653a463836373842344634443245423730353a443543363335323733393737423843420000'+
    '000a0000005468726f7761626c650000000000000003000000060000006361757365000000ff0000008cffffff000000000e0000006465'+
    '7461696c4d6573736167650000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b000000737461636b547261'+
    '636500001e0000006c0200000100000045000000524d493a5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b3a'+
    '434433384639393330454138414145433a363130394335394132363336444438350000000017000000736571315f537461636b54726163'+
    '65456c656d656e74000015000000f8010000010000002700000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d65'+
    '6e745365713a312e30000015000000537461636b5472616365456c656d656e745365710000000013000000a4010000010000001d000000'+
    '92010000010000002400000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e743a312e300012000000537461'+
    '636b5472616365456c656d656e7400000000000000040000000b0000006c696e654e756d626572000003000000000000000f0000006465'+
    '636c6172696e67436c61737300001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000900000066696c654e616d65'+
    '000000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000'+
    '000d00000057537472696e6756616c7565000000001b00000000000000000000000b0000006d6574686f644e616d6500001e0000004800'+
    '0000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000d0000005753747269'+
    '6e6756616c7565000000001b000000000000000000000000000000000000000000000000000000');
  _tc_javax_ejb_FinderEx := CreateTypeCodeConst('010000001600000038000000010000001b00000049444c3a6a617661782f656a622f46696e64657245783a312e3000000900000046696e'+
    '64657245780000000000000000');
  _tc_javax_ejb_ObjectNotFoundException := CreateTypeCodeConst('010000001d000000ac0400000100000048000000524d493a6a617661782e656a622e4f626a6563744e6f74466f756e6445786365707469'+
    '6f6e3a324539323145394445423132344137463a3030313036444435414446303144444100180000004f626a6563744e6f74466f756e64'+
    '457863657074696f6e00000000001d000000300400000100000040000000524d493a6a617661782e656a622e46696e6465724578636570'+
    '74696f6e3a303438413336373541364644353436333a37394545313531344338423743413135001000000046696e646572457863657074'+
    '696f6e00000000001d000000c4030000010000003a000000524d493a6a6176612e6c616e672e457863657074696f6e3a37374538423632'+
    '4344374537394141323a443046443146334531413342314343340000000a000000457863657074696f6e0000001d000000620300000100'+
    '00003a000000524d493a6a6176612e6c616e672e5468726f7761626c653a463836373842344634443245423730353a4435433633353237'+
    '33393737423843420000000a0000005468726f7761626c650000000000000003000000060000006361757365000000ff0000008cffffff'+
    '000000000e00000064657461696c4d6573736167650000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f52'+
    '42412f57537472696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b00'+
    '0000737461636b547261636500001e0000006c0200000100000045000000524d493a5b4c6a6176612e6c616e672e537461636b54726163'+
    '65456c656d656e743b3a434433384639393330454138414145433a36313039433539413236333644443835000000001700000073657131'+
    '5f537461636b5472616365456c656d656e74000015000000f8010000010000002700000049444c3a6a6176612f6c616e672f537461636b'+
    '5472616365456c656d656e745365713a312e30000015000000537461636b5472616365456c656d656e745365710000000013000000a401'+
    '0000010000001d00000092010000010000002400000049444c3a6a6176612f6c616e672f537461636b5472616365456c656d656e743a31'+
    '2e300012000000537461636b5472616365456c656d656e7400000000000000040000000b0000006c696e654e756d626572000003000000'+
    '000000000f0000006465636c6172696e67436c61737300001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f52'+
    '42412f57537472696e6756616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000900'+
    '000066696c654e616d65000000001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e67'+
    '56616c75653a312e3000000d00000057537472696e6756616c7565000000001b00000000000000000000000b0000006d6574686f644e61'+
    '6d6500001e00000048000000010000002300000049444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000'+
    '000d00000057537472696e6756616c7565000000001b00000000000000000000000000000000000000000000000000000000000000');
  _tc_javax_ejb_ObjectNotFoundEx := CreateTypeCodeConst('010000001600000048000000010000002300000049444c3a6a617661782f656a622f4f626a6563744e6f74466f756e6445783a312e3000'+
    '00110000004f626a6563744e6f74466f756e6445780000000000000000');
  _tc_javax_ejb_EJBHome := CreateTypeCodeConst('010000000e00000030000000010000001a00000049444c3a6a617661782f656a622f454a42486f6d653a312e3000000008000000454a42486f6d6500');
  _tc_javax_ejb_EJBObject := CreateTypeCodeConst('010000000e00000032000000010000001c00000049444c3a6a617661782f656a622f454a424f626a6563743a312e30000a000000454a42'+
    '4f626a65637400');
end.
