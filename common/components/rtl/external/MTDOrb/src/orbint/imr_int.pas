// ***************************************************************************
//                                                                            
// Generated by the MTDORB IDL-to-Pascal Translator (1.0.b5), 27.04.2004 15:52
//                                                                            
// Copyright (c) 2002 - 2003                                                  
// Millennium Group.                                                          
// Samara, Russia                                                             
//                                                                            
// All Rights Reserved                                                        
//                                                                            
// ***************************************************************************
unit imr_int;

{$MINENUMSIZE 4}

interface

uses
  code_int, orb_int, orbtypes;

type

// module CORBA types

  TActivationMode = (
    ActivateShared,
    ActivateUnshared,
    ActivatePerMethod,
    ActivatePersistent,
    ActivateLibrary,
    ActivatePOA
  );

  TObjectTag = array of octet;

  TObjectInfo = record
    repoid : RepositoryId;
    tag : TObjectTag;
  end;

  TObjectInfoList = array of TObjectInfo;

  IImplementationDef = interface
  ['{6FFFA47B-DEA6-4C4F-90E6-6868FC5FCD54}']
    procedure _set_mode(const val: TActivationMode);
    function _get_mode: TActivationMode;
    procedure _set_objs(const val: TObjectInfoList);
    function _get_objs: TObjectInfoList;
    function _get_name: Identifier;
    procedure _set_command(const val: string);
    function _get_command: string;
    function _get_tostring: string;
    property mode: TActivationMode read _get_mode write _set_mode;
    property objs: TObjectInfoList read _get_objs write _set_objs;
    property name: Identifier read _get_name;
    property command: string read _get_command write _set_command;
    property tostring: string read _get_tostring;
  end;

  TImplDefSeq = array of IImplementationDef;

  IImplRepository = interface
  ['{C592ED70-8A42-486D-90DF-12CF149F3FCC}']
    function restore(const asstring: string): IImplementationDef;
    function _create(const mode: TActivationMode; const objs: TObjectInfoList; const name: RepositoryId; const command: string): IImplementationDef;
    procedure _destroy(const impl_def: IImplementationDef);
    function find_by_name(const name: Identifier): TImplDefSeq;
    function find_by_repoid(const repoid: RepositoryId): TImplDefSeq;
    function find_by_repoid_tag(const repoid: RepositoryId; const tag: TObjectTag): TImplDefSeq;
    function find_all: TImplDefSeq;
  end;

  TObjSeq = array of IORBObject;

  IOAServer = interface
  ['{5BE7F8FA-120C-4AFC-ADC8-E856C1E7A6DC}']
    procedure restore_request(const objs: TObjSeq);
    procedure obj_inactive(const obj: IORBObject);
    procedure impl_inactive;
  end;

  TRefData = array of octet;

  TServerId = _ulong;

  IOAMediator = interface
  ['{A1D4DE11-8064-4226-AF3C-B2C4BA983E86}']
    procedure create_obj(const objref: IORBObject; const id: TRefData; out remote_objref: IORBObject; const svid: TServerId);
    procedure restore_obj(const objref: IORBObject; var remote_objref: IORBObject; out id: TRefData; const svid: TServerId);
    procedure activate_obj(const objref: IORBObject; const svid: TServerId);
    procedure deactivate_obj(const objref: IORBObject; const svid: TServerId);
    procedure migrate_obj(const objref: IORBObject; const svid: TServerId; const impl: IImplementationDef);
    procedure orphan_obj(const objref: IORBObject; const svid: TServerId);
    procedure dispose_obj(const objref: IORBObject; const svid: TServerId);
    procedure create_impl(const impl: IImplementationDef; const server: IOAServer; var id: TServerId);
    procedure activate_impl(const id: TServerId);
    procedure deactivate_impl(const id: TServerId);
    function get_remote_object(const key: TRefData): IORBObject;
    procedure dispose_impl(const id: TServerId);
    function get_restore_objs(const id: TServerId): TObjSeq;
    function force_activation(const impl: IImplementationDef): boolean;
  end;

  IPOAMediator = interface
  ['{5A33E83B-4660-422A-AC6E-04961CD51140}']
    function create_impl(const svid: AnsiString; const ior: AnsiString): AnsiString;
    procedure activate_impl(const svid: AnsiString);
    procedure deactivate_impl(const svid: AnsiString);
    function force_activation(const impl: IImplementationDef): boolean;
    function hold(const impl: IImplementationDef): boolean;
    function stop(const impl: IImplementationDef): boolean;
    function continue(const impl: IImplementationDef): boolean;
  end;

implementation

end.
