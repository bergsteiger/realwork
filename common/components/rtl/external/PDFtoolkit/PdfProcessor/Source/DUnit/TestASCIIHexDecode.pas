unit TestASCIIHexDecode;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Stream, gtObject, DecodeIntf, Classes, ASCIIHexDecode, gtTypes,
  FileStream, ASCIIHexStream, SysUtils, DUnitAssert, Dialogs;

type
  // Test methods for class TgtASCIIHexDecode
  
  TestTgtASCIIHexDecode = class(TAssertTestCase)

  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestLookChar;
    procedure TestGetChar;
    procedure TestReset;
  end;

implementation
Var
    FgtASCIIHexDecode: TgtASCIIHexDecode;
    FInFile, FOutFile: TFileStream;
    FgtInFile,FgtOutFile: TgtFileStream;
    FOutStream: TgtStream;
    Lbuffer : Bytes;
    OutValue,i : Integer;

procedure TestTgtASCIIHexDecode.SetUp;
begin
  FInFile := TFileStream.Create('Filters\ASCIIHexDecode\HexEncode.txt', fmOpenRead);
  FgtInFile := TgtFileStream.Create(FInFile, 0, 0, False);
  FgtASCIIHexDecode := TgtASCIIHexDecode.create(FgtInFile);

  FOutFile := TFileStream.Create('Filters\ASCIIHexDecode\HexDecode.txt', fmOpenRead);
  FgtOutFile := TgtFileStream.Create(FOutFile, 0, 0, False);
end;

procedure TestTgtASCIIHexDecode.TearDown;
begin
  FreeAndNil(FgtASCIIHexDecode);
  FreeAndNil(FgtInFile);
  FreeAndNil(FInFile);
  FreeAndNil(FOutFile);
  FreeAndNil(FgtOutFile);
  FreeAndNil(FOutStream);
end;

procedure TestTgtASCIIHexDecode.TestLookChar;
var
  ReturnValue: Integer;
  OutValue : Integer;
begin
   FgtASCIIHexDecode.Reset;
   ReturnValue:= FgtAsciiHexDecode.LookChar;
   OutValue := FgtOutFile.LookChar;
   Assert.AreEqual(ReturnValue, OutValue);
end;

procedure TestTgtASCIIHexDecode.TestGetChar;
var
  LSin, LSout: string;
  LI: Integer;
begin
  LSin := '';
  LSout := '';
  FgtASCIIHexDecode.Reset;
  for LI := 0 to 10 do
  begin
    LSin := LSin + Char(FgtASCIIHexDecode.GetChar);
    LSout := LSout + Char(FgtOutFile.GetChar);
  end;

  Assert.AreEqualString(LSin, LSout);
end;

procedure TestTgtASCIIHexDecode.TestReset;
begin
  FgtASCIIHexDecode.Reset;
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtASCIIHexDecode.Suite);
end.

