unit TestDCTEncode;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Stream, gtObject, Classes, DCTEncode, EncodeIntf, gtTypes,
  Predictor, FileStream, DCTStream, SysUtils, DUnitAssert, Dialogs;

type
  // Test methods for class TgtDCTEncode
  
  TestTgtDCTEncode = class(TAssertTestCase)
  strict private
    FgtDCTEncode: TgtDCTEncode;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestWrite;
  end;

implementation
 var
    FgtDCTDecode: TgtDCTEncode;
    FInFile, FOutFile: TFileStream;
    FgtInFile,FgtOutFile: TgtFileStream;
    FOutStream: TgtStream;
    Lbuffer : Bytes;
    OutValue,i : Integer;

procedure TestTgtDCTEncode.SetUp;
begin
  //FgtDCTEncode := TgtDCTEncode.Create(nil);
   FInFile := TFileStream.Create('Filters\DCTDecode\DCTDecodeout.txt', fmOpenRead);
  FgtInFile := TgtFileStream.Create(FInFile, 0, 0, False);
  FgtDCTDecode := TgtDCTEncode.create(FgtInFile);

  FOutFile := TFileStream.Create('Filters\DCTDecode\DCTEncodeoutput.txt', fmCreate);
  FgtOutFile := TgtFileStream.Create(FOutFile, 0, 0, False);
end;

procedure TestTgtDCTEncode.TearDown;
begin
//  FgtDCTEncode.Free;
//  FgtDCTEncode := nil;
  FreeAndNil(FgtDCTDecode);
  FreeAndNil(FgtInFile);
  FreeAndNil(FInFile);
  FreeAndNil(FOutFile);
  FreeAndNil(FgtOutFile);
  FreeAndNil(FOutStream);
end;

procedure TestTgtDCTEncode.TestWrite;
var
  ReturnValue: Cardinal;
  Count: Cardinal;
  OutStream: TgtStream;
  InStream: TgtStream;
begin
  // TODO: Setup method call parameters
  count := 10;
  ReturnValue := FgtDCTEncode.Write(OutStream, Count);
  assert.AreEqual(10,ReturnValue);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtDCTEncode.Suite);
end.

