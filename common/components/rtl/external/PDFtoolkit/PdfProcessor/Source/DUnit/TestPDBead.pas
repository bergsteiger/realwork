unit TestPDBead;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, PDTypes, PDPage, gtObject, PDBead, PDElement, PDBaseObject, PDRect;

type
  // Test methods for class TgtPDBead
  
  TestTgtPDBead = class(TTestCase)
  strict private
    FgtPDBead: TgtPDBead;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestUpdate;
    procedure TestGetPage;
    procedure TestGetIndex;
    procedure TestGetRect;
    procedure TestGetThread;
    procedure TestInsert;
    procedure TestSetPage;
    procedure TestSetRect;
    procedure TestNext;
    procedure TestPrev;
    procedure TestIsEqual;
  end;

implementation

procedure TestTgtPDBead.SetUp;
begin
  FgtPDBead := TgtPDBead.Create(nil, nil, nil);
end;

procedure TestTgtPDBead.TearDown;
begin
  FgtPDBead.Free;
  FgtPDBead := nil;
end;

procedure TestTgtPDBead.TestUpdate;
begin
  FgtPDBead.Update;
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestGetPage;
var
  ReturnValue: TgtPDPage;
begin
  ReturnValue := FgtPDBead.GetPage;
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestGetIndex;
var
  ReturnValue: Integer;
begin
  ReturnValue := FgtPDBead.GetIndex;
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestGetRect;
var
  ReturnValue: TgtPDRect;
begin
  ReturnValue := FgtPDBead.GetRect;
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestGetThread;
var
  ReturnValue: TgtPDElement;
begin
  ReturnValue := FgtPDBead.GetThread;
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestInsert;
var
  NewNext: TgtPDBead;
begin
  // TODO: Setup method call parameters
  FgtPDBead.Insert(NewNext);
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestSetPage;
var
  Page: TgtPDPage;
begin
  // TODO: Setup method call parameters
  FgtPDBead.SetPage(Page);
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestSetRect;
var
  Rect: TgtPDRect;
begin
  // TODO: Setup method call parameters
  FgtPDBead.SetRect(Rect);
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestNext;
var
  ReturnValue: TgtPDBead;
begin
  ReturnValue := FgtPDBead.Next;
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestPrev;
var
  ReturnValue: TgtPDBead;
begin
  ReturnValue := FgtPDBead.Prev;
  // TODO: Validate method results
end;

procedure TestTgtPDBead.TestIsEqual;
var
  ReturnValue: Boolean;
  Bead: TgtPDBead;
begin
  // TODO: Setup method call parameters
  ReturnValue := FgtPDBead.IsEqual(Bead);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtPDBead.Suite);
end.

