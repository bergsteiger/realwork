unit TestPDBoolean;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Classes, PDBaseObject, PDBoolean, gtObject, Stream,
  SysUtils, DUnitAssert, Dialogs, FileStream, gtTypes;

type
  // Test methods for class TgtPDBoolean
  
  TestTgtPDBoolean = class(TAssertTestCase)
  strict private
    FgtPDBoolean: TgtPDBoolean;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestClone;
    procedure TestIsBoolean;
    procedure TestSaveToStream;
    procedure TestAssign;
    procedure TestValue;
  end;

implementation

procedure TestTgtPDBoolean.SetUp;
begin
  FgtPDBoolean := TgtPDBoolean.Create(False, 0, 0);
end;

procedure TestTgtPDBoolean.TearDown;
begin
  FgtPDBoolean.Free;
  FgtPDBoolean := nil;
end;

procedure TestTgtPDBoolean.TestClone;
var
  ReturnValue: TgtPDBaseObject;
begin
  ReturnValue := FgtPDBoolean.Clone;
  Assert.IsTrue(ReturnValue.IsBoolean);
  Assert.IsFalse(TgtPDBoolean(ReturnValue).GetValue);
  FreeAndNil(ReturnValue);
  
  // TODO: Validate method results
end;

procedure TestTgtPDBoolean.TestIsBoolean;
var
  ReturnValue: Boolean;
begin
  ReturnValue := FgtPDBoolean.IsBoolean;
  Assert.IsTrue(ReturnValue);
  // TODO: Validate method results
end;

procedure TestTgtPDBoolean.TestSaveToStream;
var
  ReturnValue: Cardinal;
  XRef: TgtObject;
  OnlyChanged: Boolean;
  Stream: TgtStream;
begin
  // TODO: Setup method call parameters
  ReturnValue := FgtPDBoolean.SaveToStream(Stream, OnlyChanged, XRef);
  // TODO: Validate method results
end;

procedure TestTgtPDBoolean.TestAssign;
var
  FgtPDBoolSrc : TgtPDBoolean;
begin
  FgtPDBoolSrc := TgtPDBoolean.Create(True, 0, 0); 
  FgtPDBoolean.Assign(FgtPDBoolSrc);

  Assert.IsTrue(FgtPDBoolean.GetValue);
  FreeAndNil(FgtPDBoolSrc);
  // TODO: Validate method results
end;

procedure TestTgtPDBoolean.TestValue;
var
  ReturnValue: Boolean;
begin
  ReturnValue := FgtPDBoolean.Value;
  Assert.IsFalse(ReturnValue);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtPDBoolean.Suite);
end.

