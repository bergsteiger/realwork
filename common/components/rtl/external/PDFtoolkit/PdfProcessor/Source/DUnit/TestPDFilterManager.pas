unit TestPDFilterManager;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Stream, PDDictionary, gtObject, PDFilterManager, PDBaseObject, PDStream,
  SysUtils, DUnitAssert, Dialogs, FileStream, gtTypes, PDInteger, PDBoolean, PDName, Classes;

type
  // Test methods for class TgtPDFilterManager
  
  TestTgtPDFilterManager = class(TAssertTestCase)
  strict private
    FgtPDFilterManager: TgtPDFilterManager;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestGetFilter;
  end;

implementation

procedure TestTgtPDFilterManager.SetUp;
begin
  //FgtPDFilterManager := TgtPDFilterManager.Create;
end;

procedure TestTgtPDFilterManager.TearDown;
begin
  FgtPDFilterManager.Free;
  FgtPDFilterManager := nil;
end;

procedure TestTgtPDFilterManager.TestGetFilter;
var
  ReturnValue: TgtPDStream;
  FInFile: TFileStream;
  FgtInFile: TgtStream;
  ADict: TgtPDDictionary;
begin
  // TODO: Setup method call parameters
  Adict := TgtPDDictionary.Create(TgtObject(nil));   //Length 384/C 535/Filter/FlateDecode/I 557/S 227
  Adict.Add('Length', TgtPDInteger.Create(384));
  ADict.Add('C', TgtPDInteger.Create(535));
  Adict.Add('Filter', TgtPDName.Create('FlateDecode'));
  Adict.Add('I', TgtPDInteger.Create(557));
  ADict.Add('S', TgtPDInteger.Create(227));

  FInFile := TFileStream.Create('Filters\CollectionTest.txt', fmOpenRead);
  FgtInFile := TgtFileStream.Create(FInFile, 0, 0, False);

  ReturnValue := TgtPDFilterManager.GetFilter(ADict, FgtInFile);

  FreeAndNil(FInFile);
  FreeAndNil(FgtInFile);
  FreeAndNil(ReturnValue);

  
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtPDFilterManager.Suite);
end.

