unit TestPDLexer;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Classes, Stream, gtObject, PDLexer, PDBaseObject,
  SysUtils, DUnitAssert, Dialogs, FileStream;

type
  // Test methods for class TgtPDLexer
  
  TestTgtPDLexer = class(TAssertTestCase)
  strict private
    FgtPDLexer: TgtPDLexer;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestGetObject;
    procedure TestSkiptoNextLine;
    procedure TestSkipChar;
    procedure TestGetStream;
    procedure TestGetPosition;
    procedure TestSetPosition;
  end;

implementation
var
  FInFile : TFileStream;
  FgtInFile: TgtFileStream;

procedure TestTgtPDLexer.SetUp;
begin
  FInFile := TFileStream.Create('Filters\PDF\data(116).pdf', fmOpenRead);
  FgtInFile := TgtFileStream.Create(FinFile, 0, 0, False);
  FgtPDLexer := TgtPDLexer.Create(FgtInFile);
end;

procedure TestTgtPDLexer.TearDown;
begin
  FreeAndNil(FgtPDLexer);  
//  FreeAndNil(FgtInFile);
  FreeAndNil(FInFile);
end;

procedure TestTgtPDLexer.TestGetObject;
var
  ReturnValue: TgtPDBaseObject;
begin

  ReturnValue := FgtPDLexer.GetObject;

  Assert.IsTrue(ReturnValue.IsInteger);
  FreeAndNil(ReturnValue);
  // TODO: Validate method results
end;

procedure TestTgtPDLexer.TestSkipChar;
begin
  FgtPDLexer.SetPosition(16);
//  ShowMessage(InttoStr(FgtPDLexer.GetPosition));
  FgtPDLexer.SkipChar;
  Assert.AreEqual(17, FgtPDLexer.GetPosition);
  // TODO: Validate method results
end;

procedure TestTgtPDLexer.TestSkiptoNextLine;
var
  ReturnValue: TgtPDBaseObject;
begin
  FgtPDLexer.SetPosition(16);
  FgtPDLexer.SkiptoNextLine;

  ReturnValue := FgtPDLexer.GetObject;

  Assert.IsTrue(ReturnValue.IsCommand);
  FreeAndNil(ReturnValue);

  // TODO: Validate method results
end;

procedure TestTgtPDLexer.TestGetStream;
var
  ReturnValue: TgtStream;
begin
  ReturnValue := FgtPDLexer.GetStream;

  Assert.AreEqual('TgtFileStream', ReturnValue.ClassName);
  // TODO: Validate method results
end;

procedure TestTgtPDLexer.TestGetPosition;
var
  ReturnValue: Cardinal;
begin
  ReturnValue := FgtPDLexer.GetPosition;
  // TODO: Validate method results
end;

procedure TestTgtPDLexer.TestSetPosition;
var
  APosition: Cardinal;
begin
  // TODO: Setup method call parameters
  FgtPDLexer.SetPosition(APosition);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtPDLexer.Suite);
end.

