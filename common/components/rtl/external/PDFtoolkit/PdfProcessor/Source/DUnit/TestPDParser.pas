unit TestPDParser;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Stream, PDLexer, EncryptionSettings, gtObject, PDStream, Classes, PDParser, 
  PDBaseObject, BaseStream, PDXRef, SysUtils, DUnitAssert, Dialogs, FileStream;

type
  // Test methods for class TgtPDParser
  
  TestTgtPDParser = class(TAssertTestCase)
  strict private
    FgtPDParser: TgtPDParser;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestGetObject;
    procedure TestGetStream;
    procedure TestGetPosition;
  end;

implementation
var
  FInFile : TFileStream;
  FgtInFile: TgtFileStream;
  FgtPDLexer: TgtPDLexer;

procedure TestTgtPDParser.SetUp;
begin
  FInFile := TFileStream.Create('Filters\PDF\data(116).pdf', fmOpenRead);
  FgtInFile := TgtFileStream.Create(FinFile, 0, 0, False);
  FgtPDLexer := TgtPDLexer.Create(FgtInFile);
  FgtPDParser := TgtPDParser.Create(nil, FgtPDLexer);
end;

procedure TestTgtPDParser.TearDown;
begin
  FgtPDParser.Free;
  FgtPDParser := nil;
  FreeAndNil(FInFile);
end;

procedure TestTgtPDParser.TestGetObject;
var
  ReturnValue: TgtPDBaseObject;
  AGenNum: Integer;
  AObjNum: Integer;
  AKeyLength: Integer;
  AEncryptAlg: TgtCryptAlgorithm;
  AFileKey: string;
begin
  // TODO: Setup method call parameters
  FgtPDLexer.SetPosition(24);

  ReturnValue := FgtPDParser.GetObject();

  Assert.IsTrue(ReturnValue.IsInteger);
  FreeAndNil(ReturnValue);

  // TODO: Validate method results
end;

procedure TestTgtPDParser.TestGetStream;
var
  ReturnValue: TgtStream;
begin
  ReturnValue := FgtPDParser.GetStream;
  Assert.AreEqual('TgtFileStream', ReturnValue.ClassName);
  // TODO: Validate method results
end;

procedure TestTgtPDParser.TestGetPosition;
var
  ReturnValue: Integer;
begin
  ReturnValue := FgtPDParser.GetPosition;
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtPDParser.Suite);
end.

