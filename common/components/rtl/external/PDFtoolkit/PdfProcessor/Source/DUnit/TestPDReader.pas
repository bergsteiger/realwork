unit TestPDReader;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, gtObject, PDReader, Classes, PDXRef, PDBaseObject, BaseStream,
  SysUtils, DUnitAssert, Dialogs, FileStream, PDXRefEntry, PDDictionary;

type
  // Test methods for class TgtPDReader
  
  TestTgtPDReader = class(TAssertTestCase)
  strict private
    FgtPDReader: TgtPDReader;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestLoadFromFile;
    procedure TestLoadFromStream;
    procedure TestFetch;
    procedure TestGetTrailer;
  end;

implementation

procedure TestTgtPDReader.SetUp;
begin
  FgtPDReader := TgtPDReader.Create(TgtObject(nil));
end;

procedure TestTgtPDReader.TearDown;
begin
  FgtPDReader.Free;
  FgtPDReader := nil;
end;

procedure TestTgtPDReader.TestLoadFromFile;
var
  Filename: string;
  XRefEntry: TgtPDXRefEntry;
begin
  FileName := 'Filters\PDF\data(116).pdf';
  FgtPDReader.LoadFromFile(Filename);
  XRefEntry := FgtPDReader.GetXRef.GetEntry(2);
  Assert.AreEqual(16, XRefEntry.Offset);
  // TODO: Validate method results
end;

procedure TestTgtPDReader.TestLoadFromStream;
var
//  Stream: TStream;
  FInFile : TStream;
  XRefEntry: TgtPDXRefEntry;
begin
  FInFile := TFileStream.Create('Filters\PDF\data(116).pdf', fmOpenRead);
  FgtPDReader.LoadFromStream(FInFile);
  XRefEntry := FgtPDReader.GetXRef.GetEntry(2);
  Assert.AreEqual(16, XRefEntry.Offset);
  // TODO: Validate method results
end;

procedure TestTgtPDReader.TestFetch;
var
  ReturnValue: TgtPDBaseObject;
  ObjectNumber: Cardinal;
begin
  FgtPDReader.LoadFromFile('Filters\PDF\data(116).pdf');
  ReturnValue := FgtPDReader.Fetch(2);
  Assert.IsTrue(ReturnValue.IsStream);
  // TODO: Validate method results
end;

procedure TestTgtPDReader.TestGetTrailer;
var
  ReturnValue : TgtPDBaseObject;
begin
  FgtPDReader.LoadFromFile('Filters\PDF\data(116).pdf');
  ReturnValue := FgtPDReader.GetTrailer;
  Assert.IsTrue(ReturnValue.IsDict);
//  TgtPDDictionary(ReturnValue).LookUp('Root');
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtPDReader.Suite);
end.

