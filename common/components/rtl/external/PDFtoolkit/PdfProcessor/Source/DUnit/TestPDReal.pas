unit TestPDReal;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, PDReal, PDBaseObject, Stream, gtObject,
  SysUtils, DUnitAssert, Dialogs, FileStream, gtTypes;

type
  // Test methods for class TgtPDReal
  
  TestTgtPDReal = class(TAssertTestCase)
  strict private
    FgtPDReal: TgtPDReal;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestIsReal;
    procedure TestClone;
    procedure TestSaveToStream;
    procedure TestAssign;
  end;

implementation

procedure TestTgtPDReal.SetUp;
begin
  FgtPDReal := TgtPDReal.Create(2.5);
end;

procedure TestTgtPDReal.TearDown;
begin
  FgtPDReal.Free;
  FgtPDReal := nil;
end;

procedure TestTgtPDReal.TestIsReal;
var
  ReturnValue: Boolean;
begin
  ReturnValue := FgtPDReal.IsReal;
  Assert.IsTrue(ReturnValue);
  // TODO: Validate method results
end;

procedure TestTgtPDReal.TestClone;
var
  ReturnValue: TgtPDBaseObject;
begin
  ReturnValue := FgtPDReal.Clone;
  Assert.IsTrue(ReturnValue.IsReal);
  Assert.AreEqual(2.5, TgtPDReal(ReturnValue).Value);
  FreeAndNil(ReturnValue);
  // TODO: Validate method results
end;

procedure TestTgtPDReal.TestSaveToStream;
var
  ReturnValue: Cardinal;
  XRef: TgtObject;
  OnlyChanged: Boolean;
  Stream: TgtStream;
begin
  // TODO: Setup method call parameters
  ReturnValue := FgtPDReal.SaveToStream(Stream, OnlyChanged, XRef);
  // TODO: Validate method results
end;

procedure TestTgtPDReal.TestAssign;
var
  ASourceObj: TgtPDReal;
begin
  ASourceObj := TgtPDReal.Create(3.33);
  FgtPDReal.Assign(ASourceObj);
  Assert.AreEqual(3.33, FgtPDReal.Value);
  FreeAndNil(ASourceObj);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTgtPDReal.Suite);
end.

