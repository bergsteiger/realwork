__asm=<B>;</B>
_asm=<B>;</B>
asm=<B>;</B>
auto=<B>;</B>
__automated=<B>;</B>
bool=<B>;</B>
break=<B>;</B>
case=<B>;</B>
catch=<B>;</B>
__cdecl=<B>;</B>
_cdecl=<B>;</B>
cdecl=<B>;</B>
char=<B>;</B>
class=<B>;</B>
__classid=<B>;</B>
__closure=<B>;</B>
const=<B>;</B>
const_cast=<B>;</B>
continue=<B>;</B>
__declspec=<B>;</B>
default=<B>;</B>
delete=<B>;</B>
__dispid=<B>;</B>
do=<B>;</B>
double=<B>;</B>
dynamic_cast=<B>;</B>
else=<B>;</B>
enum=<B>;</B>
__except=<B>;</B>
explicit=<B>;</B>
__export=<B>;</B>
_export=<B>;</B>
export=<B>;</B>
extern=<B>;</B>
false=<B>;</B>
__fastcall=<B>;</B>
_fastcall=<B>;</B>
fastcall=<B>;</B>
__finally=<B>;</B>
float=<B>;</B>
for=<B>;</B>
friend=<B>;</B>
goto=<B>;</B>
if=<B>;</B>
__import=<B>;</B>
__inline=<B>;</B>
inline=<B>;</B>
int=<B>;</B>
__int16=<B>;</B>
__int32=<B>;</B>
__int64=<B>;</B>
__int8=<B>;</B>
long=<B>;</B>
mutable=<B>;</B>
namespace=<B>;</B>
new=<B>;</B>
operator=<B>;</B>
__pascal=<B>;</B>
pascal=<B>;</B>
private=<B>;</B>
__property=<B>;</B>
protected=<B>;</B>
public=<B>;</B>
__published=<B>;</B>
register=<B>;</B>
reinterpret_cast=<B>;</B>
return=<B>;</B>
__rtti=<B>;</B>
short=<B>;</B>
signed=<B>;</B>
sizeof=<B>;</B>
static_cast=<B>;</B>
__stdcall=<B>;</B>
_stdcall=<B>;</B>
struct=<B>;</B>
switch=<B>;</B>
template=<B>;</B>
this=<B>;</B>
__thread=<B>;</B>
throw=<B>;</B>
true=<B>;</B>
__try=<B>;</B>
try=<B>;</B>
typedef=<B>;</B>
typeid=<B>;</B>
typename=<B>;</B>
union=<B>;</B>
unsigned__int64=<B>;</B>
unsigned=<B>;</B>
using=<B>;</B>
virtual=<B>;</B>
void=<B>;</B>
volatile=<B>;</B>
wchar_t=<B>;</B>t=<B>;</B>
while=<B>;</B>

