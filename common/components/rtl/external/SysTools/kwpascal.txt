and=<B>;</B>
array=<B>;</B>
as=<B>;</B>
asm=<B>;</B>
begin=<B>;</B>
case=<B>;</B>
class=<B>;</B>
const=<B>;</B>
constructor=<B>;</B>
destructor=<B>;</B>
dispinterface=<B>;</B>
div=<B>;</B>
do=<B>;</B>
downto=<B>;</B>
else=<B>;</B>
end=<B>;</B>
except=<B>;</B>
exports=<B>;</B>
file=<B>;</B>
finalization=<B>;</B>
finally=<B>;</B>
for=<B>;</B>
function=<B>;</B>
goto=<B>;</B>
if=<B>;</B>
implementation=<B>;</B>
in=<B>;</B>
inherited=<B>;</B>
initialization=<B>;</B>
inline=<B>;</B>
interface=<B>;</B>
is=<B>;</B>
label=<B>;</B>
library=<B>;</B>
mod=<B>;</B>
nil=<B>;</B>
not=<B>;</B>
object=<B>;</B>
of=<B>;</B>
or=<B>;</B>
out=<B>;</B>
packed=<B>;</B>
procedure=<B>;</B>
program=<B>;</B>
property=<B>;</B>
protected=<B>;</B>
public=<B>;</B>
raise=<B>;</B>
record=<B>;</B>
repeat=<B>;</B>
resourcestring=<B>;</B>
set=<B>;</B>
shl=<B>;</B>
shr=<B>;</B>
string=<B>;</B>
then=<B>;</B>
thread=<B>;</B>
var=<B>;</B>
to=<B>;</B>
try=<B>;</B>
type=<B>;</B>
unit=<B>;</B>
until=<B>;</B>
uses=<B>;</B>
var=<B>;</B>
while=<B>;</B>
with=<B>;</B>
