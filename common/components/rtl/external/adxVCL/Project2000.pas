{*********************************************************************}
{                                                                     }
{             Add-In Express Component Library                        }
{                  Add-in Express for VCL                             }
{                                                                     }
{             Copyright (C) Add-in Express Ltd.                       }
{             ALL RIGHTS RESERVED                                     }
{                                                                     }
{    The entire contents of this file is protected by U.S. and        }
{    International Copyright Laws. Unauthorized reproduction,         }
{    reverse-engineering, and distribution of all or any portion of   } 
{    the code contained in this file is strictly prohibited and may   }
{    result in severe civil and criminal penalties and will be        }
{    prosecuted to the maximum extent possible under the law.         }
{                                                                     }
{    RESTRICTIONS                                                     }
{                                                                     }
{    THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE        }
{    CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF ADD-IN EXPRESS     }
{    LTD.                                                             }
{    THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE Add-in    }
{    Express VCL AND ALL ACCOMPANYING VCL COMPONENTS AS PART          }
{    OF AN EXECUTABLE PROGRAM ONLY.                                   }
{                                                                     }
{    THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED       }
{    FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE         }
{    COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE        }
{    AVAILABLE TO OTHER INDIVIDUALS WITHOUT WRITTEN CONSENT           }
{    AND PERMISSION FROM ADD-IN EXPRESS LTD.                          }
{                                                                     }
{    CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON        }
{    ADDITIONAL RESTRICTIONS.                                         }
{                                                                     }
{*********************************************************************}

unit Project2000;

// ************************************************************************ //
// WARNING
// -------
// The types declared in this file were generated from data read from a
// Type Library. If this type library is explicitly or indirectly (via
// another type library referring to this type library) re-imported, or the
// 'Refresh' command of the Type Library Editor activated while editing the
// Type Library, the contents of this file will be regenerated and all
// manual modifications will be lost.
// ************************************************************************ //

// PASTLWTR : $Revision: 1.1 $
// File generated on 22.12.2002 20:45:39 from Type Library described below.

// *************************************************************************//
// NOTE:
// Items guarded by $IFDEF_LIVE_SERVER_AT_DESIGN_TIME are used by properties
// which return objects that may need to be explicitly created via a function
// call prior to any access via the property. These items have been disabled
// in order to prevent accidental use from within the object inspector. You
// may enable them by defining LIVE_SERVER_AT_DESIGN_TIME or by selectively
// removing them from the $IFDEF blocks. However, such items must still be
// programmatically created via a method of the appropriate CoClass before
// they can be used.
// ************************************************************************ //
// Type Lib: F:\Program Files\Microsoft Office\Office\MSPRJ9.OLB (1)
// IID\LCID: {A7107640-94DF-1068-855E-00DD01075445}\0
// Helpfile: F:\Program Files\Microsoft Office\Office\VBAPJ9.CHM
// DepndLst:
//   (1) v2.0 stdole, (F:\WINDOWS\system32\stdole2.tlb)
//   (2) v2.1 Office, (F:\Program Files\Microsoft Office\Office\MSO9.DLL)
//   (3) v5.3 VBIDE, (F:\Program Files\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB)
//   (4) v4.0 StdVCL, (F:\WINDOWS\System32\STDVCL40.DLL)
// Errors:
//   Hint: Member 'Type' of 'Task' changed to 'Type_'
//   Hint: Parameter 'Type' of Task.TimeScaleData changed to 'Type_'
//   Hint: Parameter 'Type' of Resource.TimeScaleData changed to 'Type_'
//   Hint: Member 'Type' of 'Resource' changed to 'Type_'
//   Hint: Parameter 'Type' of Assignment.TimeScaleData changed to 'Type_'
//   Hint: Member 'To' of 'TaskDependency' changed to 'To_'
//   Hint: Member 'Type' of 'TaskDependency' changed to 'Type_'
//   Hint: Parameter 'Type' of TaskDependencies.Add changed to 'Type_'
//   Hint: Parameter 'Type' of _Global.TimescaledData changed to 'Type_'
//   Hint: Parameter 'Type' of _Global.Message changed to 'Type_'
//   Hint: Parameter 'To' of _Global.MailSend changed to 'To_'
//   Hint: Parameter 'To' of _Global.MailRoutingSlip changed to 'To_'
//   Hint: Parameter 'Object' of _Global.EditCopyPicture changed to 'Object_'
//   Hint: Parameter 'Type' of _Global.EditPasteSpecial changed to 'Type_'
//   Hint: Parameter 'To' of _Global.LinkTasksEdit changed to 'To_'
//   Hint: Parameter 'Type' of _Global.LinkTasksEdit changed to 'Type_'
//   Hint: Parameter 'With' of _Global.ResourceAssignment changed to 'With_'
//   Hint: Parameter 'On' of _Global.BarRounding changed to 'On_'
//   Hint: Parameter 'To' of _Global.GanttBarStyleEdit changed to 'To_'
//   Hint: Parameter 'Type' of _Global.Organizer changed to 'Type_'
//   Hint: Parameter 'Type' of _Global.OrganizerMoveItem changed to 'Type_'
//   Hint: Parameter 'Type' of _Global.OrganizerDeleteItem changed to 'Type_'
//   Hint: Parameter 'Type' of _Global.OrganizerRenameItem changed to 'Type_'
//   Hint: Parameter 'Type' of _Global.DrawingCreate changed to 'Type_'
//   Hint: Parameter 'Set' of _Global.FontBold changed to 'Set_'
//   Hint: Parameter 'Set' of _Global.FontItalic changed to 'Set_'
//   Hint: Parameter 'Set' of _Global.FontUnderLine changed to 'Set_'
//   Hint: Parameter 'Type' of _Global.WebHelp changed to 'Type_'
//   Hint: Parameter 'Label' of _Global.BoxCellEdit changed to 'Label_'
//   Hint: Parameter 'Unit' of _Global.SetRowHeight changed to 'Unit_'
//   Hint: Parameter 'Type' of _MSProject.TimescaledData changed to 'Type_'
//   Hint: Parameter 'Type' of _MSProject.Message changed to 'Type_'
//   Hint: Parameter 'To' of _MSProject.MailSend changed to 'To_'
//   Hint: Parameter 'To' of _MSProject.MailRoutingSlip changed to 'To_'
//   Hint: Parameter 'Object' of _MSProject.EditCopyPicture changed to 'Object_'
//   Hint: Parameter 'Type' of _MSProject.EditPasteSpecial changed to 'Type_'
//   Hint: Parameter 'To' of _MSProject.LinkTasksEdit changed to 'To_'
//   Hint: Parameter 'Type' of _MSProject.LinkTasksEdit changed to 'Type_'
//   Hint: Parameter 'With' of _MSProject.ResourceAssignment changed to 'With_'
//   Hint: Parameter 'On' of _MSProject.BarRounding changed to 'On_'
//   Hint: Parameter 'To' of _MSProject.GanttBarStyleEdit changed to 'To_'
//   Hint: Parameter 'Type' of _MSProject.Organizer changed to 'Type_'
//   Hint: Parameter 'Type' of _MSProject.OrganizerMoveItem changed to 'Type_'
//   Hint: Parameter 'Type' of _MSProject.OrganizerDeleteItem changed to 'Type_'
//   Hint: Parameter 'Type' of _MSProject.OrganizerRenameItem changed to 'Type_'
//   Hint: Parameter 'Type' of _MSProject.DrawingCreate changed to 'Type_'
//   Hint: Parameter 'Set' of _MSProject.FontBold changed to 'Set_'
//   Hint: Parameter 'Set' of _MSProject.FontItalic changed to 'Set_'
//   Hint: Parameter 'Set' of _MSProject.FontUnderLine changed to 'Set_'
//   Hint: Parameter 'Type' of _MSProject.WebHelp changed to 'Type_'
//   Hint: Parameter 'Label' of _MSProject.BoxCellEdit changed to 'Label_'
//   Hint: Parameter 'Unit' of _MSProject.SetRowHeight changed to 'Unit_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.

{$I adxDefs.inc}

interface

uses Windows, ActiveX, Classes, Graphics, OleServer, OleCtrls, Office2000, VBIDE2000;

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:
//   Type Libraries     : LIBID_xxxx
//   CoClasses          : CLASS_xxxx
//   DISPInterfaces     : DIID_xxxx
//   Non-DISP interfaces: IID_xxxx
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  MSProjectMajorVersion = 4;
  MSProjectMinorVersion = 3;

  LIBID_MSProject: TGUID = '{A7107640-94DF-1068-855E-00DD01075445}';

  IID_Task: TGUID = '{000C0C3F-0000-0000-C000-000000000046}';
  IID_Resource: TGUID = '{000C0C41-0000-0000-C000-000000000046}';
  IID_Calendar: TGUID = '{000C0C43-0000-0000-C000-000000000046}';
  IID_Assignment: TGUID = '{000C0C45-0000-0000-C000-000000000046}';
  IID_Years: TGUID = '{000C0C4A-0000-0000-C000-000000000046}';
  IID_Months: TGUID = '{000C0C4C-0000-0000-C000-000000000046}';
  IID_Days: TGUID = '{000C0C51-0000-0000-C000-000000000046}';
  DIID_List: TGUID = '{00020B17-0000-0000-C000-000000000046}';
  DIID_Selection: TGUID = '{00020B18-0000-0000-C000-000000000046}';
  DIID_Cell: TGUID = '{00020B19-0000-0000-C000-000000000046}';
  IID_Subproject: TGUID = '{00020B1C-0000-0000-C000-000000000046}';
  IID_Subprojects: TGUID = '{00020B1B-0000-0000-C000-000000000046}';
  IID_TaskGroups: TGUID = '{11589054-69F0-11D2-B889-00C04FB90729}';
  IID_ResourceGroups: TGUID = '{11589055-69F0-11D2-B889-00C04FB90729}';
  IID_Group: TGUID = '{11589051-69F0-11D2-B889-00C04FB90729}';
  IID_GroupCriteria: TGUID = '{11589052-69F0-11D2-B889-00C04FB90729}';
  IID_GroupCriterion: TGUID = '{11589053-69F0-11D2-B889-00C04FB90729}';
  IID_WeekDays: TGUID = '{000C0C4E-0000-0000-C000-000000000046}';
  IID_WeekDay: TGUID = '{000C0C4F-0000-0000-C000-000000000046}';
  IID_Shift: TGUID = '{000C0C50-0000-0000-C000-000000000046}';
  IID_Period: TGUID = '{000C0C49-0000-0000-C000-000000000046}';
  IID_Year: TGUID = '{000C0C4B-0000-0000-C000-000000000046}';
  IID_Month: TGUID = '{000C0C4D-0000-0000-C000-000000000046}';
  IID_Day: TGUID = '{000C0C52-0000-0000-C000-000000000046}';
  IID_TimeScaleValue: TGUID = '{000C0C54-0000-0000-C000-000000000046}';
  IID_TimeScaleValues: TGUID = '{000C0C53-0000-0000-C000-000000000046}';
  IID_CostRateTable: TGUID = '{000C0C56-0000-0000-C000-000000000046}';
  IID_CostRateTables: TGUID = '{000C0C55-0000-0000-C000-000000000046}';
  IID_PayRate: TGUID = '{000C0C58-0000-0000-C000-000000000046}';
  IID_PayRates: TGUID = '{000C0C57-0000-0000-C000-000000000046}';
  IID_Availability: TGUID = '{1251566D-2BDF-11D2-9EAC-00C04FB92E6F}';
  IID_Availabilities: TGUID = '{1251566C-2BDF-11D2-9EAC-00C04FB92E6F}';
  IID_TaskDependency: TGUID = '{A7C6ACB0-58C6-11D2-AE5A-00C04FB6F701}';
  IID_TaskDependencies: TGUID = '{A7C6ACB1-58C6-11D2-AE5A-00C04FB6F701}';
  DIID_Pane: TGUID = '{00020B04-0000-0000-C000-000000000046}';
  DIID_Window: TGUID = '{00020B02-0000-0000-C000-000000000046}';
  DIID_Windows: TGUID = '{00020B03-0000-0000-C000-000000000046}';
  IID_SplitPart: TGUID = '{000C0C48-0000-0000-C000-000000000046}';
  IID_SplitParts: TGUID = '{000C0C47-0000-0000-C000-000000000046}';
  IID_Tasks: TGUID = '{000C0C40-0000-0000-C000-000000000046}';
  IID_Resources: TGUID = '{000C0C42-0000-0000-C000-000000000046}';
  IID_Assignments: TGUID = '{000C0C46-0000-0000-C000-000000000046}';
  IID_Calendars: TGUID = '{000C0C44-0000-0000-C000-000000000046}';
  DIID__IProjectDoc: TGUID = '{00020B00-0000-0000-C000-000000000046}';
  DIID__EProjectDoc: TGUID = '{F81DD3C0-5089-11CF-A49D-00AA00574C74}';
  CLASS_Project: TGUID = '{1019A320-508A-11CF-A49D-00AA00574C74}';
  DIID_Projects: TGUID = '{00020B01-0000-0000-C000-000000000046}';
  DIID__Global: TGUID = '{78E9F620-EBC0-11CF-A523-00A0C904DE55}';
  DIID__MSProject: TGUID = '{00020AFF-0000-0000-C000-000000000046}';
  DIID__EProjectApp: TGUID = '{7B7597D0-0C9F-11D0-8C43-00A0C904DCD4}';
  CLASS_Application: TGUID = '{36D27C48-A1E8-11D3-BA55-00C04F72F325}';
  CLASS_Global: TGUID = '{7742AF30-EBC0-11CF-A523-00A0C904DE55}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library
// *********************************************************************//
// Constants for enum PjMonth
type
  PjMonth = TOleEnum;
const
  pjJanuary = $00000001;
  pjFebruary = $00000002;
  pjMarch = $00000003;
  pjApril = $00000004;
  pjMay = $00000005;
  pjJune = $00000006;
  pjJuly = $00000007;
  pjAugust = $00000008;
  pjSeptember = $00000009;
  pjOctober = $0000000A;
  pjNovember = $0000000B;
  pjDecember = $0000000C;

// Constants for enum PjAccrueAt
type
  PjAccrueAt = TOleEnum;
const
  pjStart = $00000001;
  pjEnd = $00000002;
  pjProrated = $00000003;

// Constants for enum PjDateFormat
type
  PjDateFormat = TOleEnum;
const
  pjDateDefault = $000000FF;
  pjDate_mm_dd_yy_hh_mmAM = $00000000;
  pjDate_mm_dd_yy = $00000001;
  pjDate_mmmm_dd_yyyy_hh_mmAM = $00000002;
  pjDate_mmmm_dd_yyyy = $00000003;
  pjDate_mmm_dd_hh_mmAM = $00000004;
  pjDate_mmm_dd_yyy = $00000005;
  pjDate_mmmm_dd = $00000006;
  pjDate_mmm_dd = $00000007;
  pjDate_ddd_mm_dd_yy_hh_mmAM = $00000008;
  pjDate_ddd_mm_dd_yy = $00000009;
  pjDate_ddd_mmm_dd_yyy = $0000000A;
  pjDate_ddd_hh_mmAM = $0000000B;
  pjDate_mm_dd = $0000000C;
  pjDate_dd = $0000000D;
  pjDate_hh_mmAM = $0000000E;
  pjDate_ddd_mmm_dd = $0000000F;
  pjDate_ddd_mm_dd = $00000010;
  pjDate_ddd_dd = $00000011;
  pjDate_Www_dd = $00000012;
  pjDate_Www_dd_yy_hh_mmAM = $00000013;
  pjDate_mm_dd_yyyy = $00000014;

// Constants for enum PjConstraint
type
  PjConstraint = TOleEnum;
const
  pjASAP = $00000000;
  pjALAP = $00000001;
  pjFNET = $00000006;
  pjFNLT = $00000007;
  pjMFO = $00000003;
  pjMSO = $00000002;
  pjSNET = $00000004;
  pjSNLT = $00000005;

// Constants for enum PjGridline
type
  PjGridline = TOleEnum;
const
  pjBarRows = $00000001;
  pjCalendarDays = $00000000;
  pjCalendarTitleHorizontal = $00000003;
  pjCalendarTitleVertical = $00000002;
  pjCalendarWeeks = $00000001;
  pjDateBoxBottom = $00000005;
  pjDateBoxTop = $00000004;
  pjGanttRows = $00000000;
  pjSheetRows = $00000000;
  pjGanttCurrentDate = $00000004;
  pjGanttPageBreaks = $00000009;
  pjGanttProjectFinish = $0000000B;
  pjGanttProjectStart = $0000000A;
  pjGanttSheetColumns = $00000006;
  pjGanttSheetRows = $00000005;
  pjGanttTitleHorizontal = $00000008;
  pjGanttTitleVertical = $00000007;
  pjGanttStatusDate = $0000000C;
  pjGraphCurrentDate = $00000003;
  pjGraphProjectFinish = $00000007;
  pjGraphProjectStart = $00000006;
  pjGraphTitleHorizontal = $00000005;
  pjGraphTitleVertical = $00000004;
  pjGraphStatusDate = $00000008;
  pjHorizontal = $00000002;
  pjMajorColumns = $00000002;
  pjMinorColumns = $00000003;
  pjMajorVertical = $00000000;
  pjMinorVertical = $00000001;
  pjSheetColumns = $00000001;
  pjSheetPageBreaks = $00000004;
  pjSheetTitleHorizontal = $00000003;
  pjSheetTitleVertical = $00000002;
  pjUsagePageBreaks = $00000006;
  pjUsageSheetColumns = $00000001;
  pjUsageSheetRows = $00000000;
  pjUsageTitleHorizontal = $00000003;
  pjUsageTitleVertical = $00000002;
  pjUsageRows = $00000005;
  pjUsageColumns = $00000004;

// Constants for enum PjBarSize
type
  PjBarSize = TOleEnum;
const
  pjBarSize6 = $00000006;
  pjBarSize8 = $00000008;
  pjBarSize10 = $0000000A;
  pjBarSize12 = $0000000C;
  pjBarSize14 = $0000000E;
  pjBarSize18 = $00000012;
  pjBarSize24 = $00000018;

// Constants for enum PjAlignment
type
  PjAlignment = TOleEnum;
const
  pjLeft = $00000000;
  pjCenter = $00000001;
  pjRight = $00000002;

// Constants for enum PjVerticalAlignment
type
  PjVerticalAlignment = TOleEnum;
const
  pjTop = $00000000;
  pjMiddle = $00000001;
  pjBottom = $00000002;

// Constants for enum PjBarEndShape
type
  PjBarEndShape = TOleEnum;
const
  pjNoBarEndShape = $00000000;
  pjHouseUp = $00000001;
  pjHouseDown = $00000002;
  pjDiamond = $00000003;
  pjCircleDiamond = $0000000D;
  pjTriangleUp = $00000004;
  pjTriangleDown = $00000005;
  pjTriangleRight = $00000006;
  pjTriangleLeft = $00000007;
  pjCircleTriangleUp = $0000000F;
  pjCircleTriangleDown = $00000010;
  pjArrowUp = $00000008;
  pjArrowDown = $0000000E;
  pjCircleArrowUp = $00000011;
  pjCircleArrowDown = $00000012;
  pjCaretDownTop = $00000009;
  pjCaretUpBottom = $0000000A;
  pjLineShape = $0000000B;
  pjSquare = $0000000C;
  pjCircle = $00000013;
  pjStar = $00000014;

// Constants for enum PjBarItem
type
  PjBarItem = TOleEnum;
const
  pjBarNoncritical = $00000000;
  pjBarCritical = $00000001;
  pjBarSummary = $00000002;
  pjBarMilestone = $00000003;
  pjBarMarked = $00000005;
  pjBarHighlighted = $00000006;
  pjBarProjectSummary = $00000007;
  pjBarExternalTask = $00000008;

// Constants for enum PjBarShape
type
  PjBarShape = TOleEnum;
const
  pjNone = $00000000;
  pjRectangleBar = $00000001;
  pjRectangleTop = $00000002;
  pjRectangleMiddle = $00000003;
  pjRectangleBottom = $00000004;
  pjLineTop = $00000005;
  pjLineMiddle = $00000006;
  pjLineBottom = $00000007;

// Constants for enum PjBarType
type
  PjBarType = TOleEnum;
const
  pjDashed = $00000002;
  pjFramed = $00000001;
  pjSolid = $00000000;

// Constants for enum PjBorder
type
  PjBorder = TOleEnum;
const
  pjNoBorder = $00000000;
  pjAroundEveryPage = $00000001;
  pjOutsidePages = $00000002;

// Constants for enum PjCalculation
type
  PjCalculation = TOleEnum;
const
  pjAutomatic = $FFFFFFFF;
  pjManual = $00000000;

// Constants for enum PjCalendarBarType
type
  PjCalendarBarType = TOleEnum;
const
  pjNormalBar = $00000000;
  pjLineBar = $00000001;
  pjNoBar = $00000002;

// Constants for enum PjCalendarDateLabel
type
  PjCalendarDateLabel = TOleEnum;
const
  pjCalendarLabelDay_mm_dd = $0000001B;
  pjCalendarLabelDay_mm_dd_yy = $0000001A;
  pjCalendarLabelDay_m_dd = $00000073;
  pjCalendarLabelDay_mmm_dd = $00000019;
  pjCalendarLabelDay_mmm_dd_yyy = $00000018;
  pjCalendarLabelDay_di = $00000014;
  pjCalendarLabelDay_di_mm_dd = $0000006E;
  pjCalendarLabelDay_di_dd = $0000006B;
  pjCalendarLabelDay_di_m_dd = $00000072;
  pjCalendarLabelDay_didd = $00000079;
  pjCalendarLabelDay_ddi = $00000077;
  pjCalendarLabelDay_ddi_mm_dd = $0000006D;
  pjCalendarLabelDay_ddi_dd = $0000006A;
  pjCalendarLabelDay_ddi_m_dd = $00000071;
  pjCalendarLabelDay_ddd = $00000013;
  pjCalendarLabelDay_ddd_mm_dd = $0000006C;
  pjCalendarLabelDay_ddd_mm_dd_yy = $00000034;
  pjCalendarLabelDay_ddd_dd = $00000069;
  pjCalendarLabelDay_ddd_m_dd = $00000070;
  pjCalendarLabelDay_ddd_mmm_dd = $00000017;
  pjCalendarLabelDay_ddd_mmm_dd_yyy = $00000016;
  pjCalendarLabelDay_ddd_mmmm_dd = $0000006F;
  pjCalendarLabelDay_dddd = $00000012;
  pjCalendarLabelDayFromEnd_dd = $00000036;
  pjCalendarLabelDayFromEnd_Ddd = $00000035;
  pjCalendarLabelDayFromEnd_Day_dd = $00000029;
  pjCalendarLabelDayFromStart_dd = $00000038;
  pjCalendarLabelDayFromStart_Ddd = $00000037;
  pjCalendarLabelDayFromStart_Day_dd = $00000028;
  pjCalendarLabelDayOfMonth_dd = $00000015;
  pjCalendarLabelDayOfYear_dd = $00000076;
  pjCalendarLabelDayOfYear_dd_yyyy = $00000075;
  pjCalendarLabelDayOfYear_dd_yyy = $00000074;
  pjNoDateFormat = $00000023;
  pjOverflowIndicator = $0000007A;

// Constants for enum PjCalendarShading
type
  PjCalendarShading = TOleEnum;
const
  pjBaseWorking = $00000000;
  pjBaseNonworking = $00000001;
  pjBaseNondefaultWorking = $00000002;
  pjResourceWorking = $00000003;
  pjResourceNonworking = $00000004;
  pjResourceNondefaultWorking = $00000005;

// Constants for enum PjColor
type
  PjColor = TOleEnum;
const
  pjBlack = $00000000;
  pjRed = $00000001;
  pjYellow = $00000002;
  pjLime = $00000003;
  pjAqua = $00000004;
  pjBlue = $00000005;
  pjFuchsia = $00000006;
  pjWhite = $00000007;
  pjMaroon = $00000008;
  pjGreen = $00000009;
  pjOlive = $0000000A;
  pjNavy = $0000000B;
  pjPurple = $0000000C;
  pjTeal = $0000000D;
  pjGray = $0000000E;
  pjSilver = $0000000F;
  pjColorAutomatic = $00000010;

// Constants for enum PjCreatePublisher
type
  PjCreatePublisher = TOleEnum;
const
  pjPublishAll = $00000000;
  pjPictureOnly = $00000001;

// Constants for enum PjCustomizeMailAction
type
  PjCustomizeMailAction = TOleEnum;
const
  pjMailStartFields = $00000001;
  pjMailDefineField = $00000002;
  pjMailEndFields = $00000000;

// Constants for enum PjDateLabel
type
  PjDateLabel = TOleEnum;
const
  pjDay_mm_dd = $0000001B;
  pjDay_mm_dd_yy = $0000001A;
  pjDay_m_dd = $00000073;
  pjDay_mmm_dd = $00000019;
  pjDay_mmm_dd_yyy = $00000018;
  pjDay_di = $00000014;
  pjDay_di_mm_dd = $0000006E;
  pjDay_di_dd = $0000006B;
  pjDay_di_m_dd = $00000072;
  pjDay_didd = $00000079;
  pjDay_ddi = $00000077;
  pjDay_ddi_mm_dd = $0000006D;
  pjDay_ddi_dd = $0000006A;
  pjDay_ddi_m_dd = $00000071;
  pjDay_ddd = $00000013;
  pjDay_ddd_mm_dd = $0000006C;
  pjDay_ddd_mm_dd_yy = $00000034;
  pjDay_ddd_dd = $00000069;
  pjDay_ddd_m_dd = $00000070;
  pjDay_ddd_mmm_dd = $00000017;
  pjDay_ddd_mmm_dd_yyy = $00000016;
  pjDay_ddd_mmmm_dd = $0000006F;
  pjDay_dddd = $00000012;
  pjDayFromEnd_dd = $00000036;
  pjDayFromEnd_Ddd = $00000035;
  pjDayFromEnd_Day_dd = $00000029;
  pjDayFromStart_dd = $00000038;
  pjDayFromStart_Ddd = $00000037;
  pjDayFromStart_Day_dd = $00000028;
  pjDayOfMonth_dd = $00000015;
  pjDayOfYear_dd = $00000076;
  pjDayOfYear_dd_yyyy = $00000075;
  pjDayOfYear_dd_yyy = $00000074;
  pjHour_mm_dd_hhAM = $00000078;
  pjHour_hh = $00000020;
  pjHour_hh_mmAM = $0000001E;
  pjHour_hhAM = $0000001F;
  pjHour_mmm_dd_hhAM = $0000001D;
  pjHour_ddd_mmm_dd_hhAM = $0000001C;
  pjHourFromEnd_hh = $0000004D;
  pjHourFromEnd_Hhh = $0000004C;
  pjHourFromEnd_Hour_hh = $00000027;
  pjHourFromStart_hh = $0000004F;
  pjHourFromStart_Hhh = $0000004E;
  pjHourFromStart_Hour_hh = $00000026;
  pjMinute_hh_mmAM = $00000021;
  pjMinute_mm = $00000022;
  pjMinuteFromEnd_mm = $00000051;
  pjMinuteFromEnd_Mmm = $00000050;
  pjMinuteFromEnd_Minute_mm = $00000025;
  pjMinuteFromStart_mm = $00000053;
  pjMinuteFromStart_Mmm = $00000052;
  pjMinuteFromStart_Minute_mm = $00000024;
  pjMonth_mm = $00000039;
  pjMonth_mm_yy = $00000056;
  pjMonth_mm_yyy = $00000055;
  pjMonth_m = $0000000B;
  pjMonth_mmm = $0000000A;
  pjMonth_mmm_yyy = $00000008;
  pjMonth_mmmm = $00000009;
  pjMonth_mmmm_yyyy = $00000007;
  pjMonthFromEnd_mm = $0000003B;
  pjMonthFromEnd_Mmm = $0000003A;
  pjMonthFromEnd_Month_mm = $0000002D;
  pjMonthFromStart_mm = $0000003D;
  pjMonthFromStart_Mmm = $0000003C;
  pjMonthFromStart_Month_mm = $0000002C;
  pjQuarter_q = $0000003E;
  pjQuarter_qQyy = $00000033;
  pjQuarter_qqq_Quarter = $00000002;
  pjQuarter_Qq = $00000006;
  pjQuarter_Qq_yyy = $00000004;
  pjQuarter_Qtr_q = $00000005;
  pjQuarter_Qtr_q_yyyy = $00000003;
  pjQuarterFromEnd_q = $00000040;
  pjQuarterFromEnd_Qq = $0000003F;
  pjQuarterFromEnd_Quarter_q = $0000002F;
  pjQuarterFromStart_q = $00000042;
  pjQuarterFromStart_Qq = $00000041;
  pjQuarterFromStart_Quarter_q = $0000002E;
  pjWeek_mm_dd = $00000011;
  pjWeek_mm_dd_yy = $00000010;
  pjWeek_m_dd = $00000059;
  pjWeek_mmm_dd = $0000000F;
  pjWeek_mmm_dd_yyy = $0000000D;
  pjWeek_mmmm_dd = $0000000E;
  pjWeek_mmmm_dd_yyyy = $0000000C;
  pjWeek_di_mm_dd = $0000005C;
  pjWeek_di_m_dd = $00000063;
  pjWeek_di_mmm_dd = $0000005F;
  pjWeek_ddi_mm_dd = $0000005B;
  pjWeek_ddi_m_dd = $00000062;
  pjWeek_ddi_mmm_dd = $0000005E;
  pjWeek_ddd_mm_dd = $0000005A;
  pjWeek_ddd_mm_dd_yy = $00000064;
  pjWeek_ddd_dd = $00000058;
  pjWeek_ddd_ww = $00000067;
  pjWeek_ddd_m_dd = $00000061;
  pjWeek_ddd_mmm_dd = $0000005D;
  pjWeek_ddd_mmm_dd_yyy = $00000065;
  pjWeek_ddd_mmmm_dd = $00000060;
  pjWeek_ddd_mmmm_dd_yyy = $00000066;
  pjWeekDayOfMonth_dd = $00000057;
  pjWeekFromEnd_ww = $00000044;
  pjWeekFromEnd_Www = $00000043;
  pjWeekFromEnd_Week_ww = $0000002B;
  pjWeekFromStart_ww = $00000046;
  pjWeekFromStart_Www = $00000045;
  pjWeekFromStart_Week_ww = $0000002A;
  pjWeekNumber_dd_ww = $00000068;
  pjWeekNumber_ww = $00000032;
  pjYear_yyyy = $00000000;
  pjYear_yyy = $00000001;
  pjYear_yy = $0000004B;
  pjYearFromEnd_yy = $00000048;
  pjYearFromEnd_Yyy = $00000047;
  pjYearFromEnd_Year_yy = $00000031;
  pjYearFromStart_yy = $0000004A;
  pjYearFromStart_Yyy = $00000049;
  pjYearFromStart_Year_yy = $00000030;
  pjHalfYear_hhh_Half = $0000007B;
  pjHalfYear_Hlf_h_yyyy = $0000007C;
  pjHalfYear_Hlf_h = $0000007D;
  pjHalfYear_Hh_yyy = $0000007E;
  pjHalfYear_Hh = $0000007F;
  pjHalfYear_h = $00000080;
  pjHalfYear_hHyy = $00000081;
  pjHalfYearFromStart_Half_h = $00000082;
  pjHalfYearFromStart_Hh = $00000083;
  pjHalfYearFromStart_h = $00000084;
  pjHalfYearFromEnd_Half_h = $00000085;
  pjHalfYearFromEnd_Hh = $00000086;
  pjHalfYearFromEnd_h = $00000087;
  pjThirdsOfMonths_dd = $00000088;
  pjThirdsOfMonths_ddd = $00000089;
  pjThirdsOfMonths_dddd = $0000008A;
  pjThirdsOfMonths_mm_dd = $0000008B;
  pjThirdsOfMonths_mm_ddd = $0000008C;
  pjThirdsOfMonths_mmmm_dddd = $0000008D;
  pjThirdsOfMonths_mmm_dd = $0000008E;
  pjThirdsOfMonths_mmm_ddd = $0000008F;
  pjThirdsOfMonths_mmmm_dd = $00000090;
  pjThirdsOfMonths_mm_dd_yy = $00000091;
  pjThirdsOfMonths_mm_ddd_yy = $00000092;
  pjThirdsOfMonths_mmm_dd_yy = $00000093;
  pjThirdsOfMonths_mmm_ddd_yy = $00000094;
  pjThirdsOfMonths_mmmm_dd_yyyy = $00000095;
  pjThirdsOfMonths_mmmm_dddd_yyyy = $00000096;

// Constants for enum PjDateOrder
type
  PjDateOrder = TOleEnum;
const
  pjDayMonthYear = $00000000;
  pjMonthDayYear = $00000001;
  pjYearMonthDay = $00000002;

// Constants for enum PjDayLabel
type
  PjDayLabel = TOleEnum;
const
  pjDayLabelDay_di = $00000014;
  pjDayLabelDay_ddi = $00000077;
  pjDayLabelDay_ddd = $00000013;
  pjDayLabelDay_dddd = $00000012;
  pjDayLabelNoDateFormat = $00000023;

// Constants for enum PjDialog
type
  PjDialog = TOleEnum;
const
  pjResourceAssignment = $00000FF7;

// Constants for enum PjAssignmentField
type
  PjAssignmentField = TOleEnum;
const
  pjAssignmentUniqueID = $0F400000;
  pjAssignmentTaskUniqueID = $0F400001;
  pjAssignmentResourceUniqueID = $0F400002;
  pjAssignmentTaskID = $0F400003;
  pjAssignmentResourceID = $0F400004;
  pjAssignmentTaskName = $0F400005;
  pjAssignmentResourceName = $0F400006;
  pjAssignmentAssignmentUnits = $0F400007;
  pjAssignmentWork = $0F400008;
  pjAssignmentOvertimeWork = $0F400009;
  pjAssignmentActualWork = $0F40000A;
  pjAssignmentRegularWork = $0F40000B;
  pjAssignmentRemainingWork = $0F40000C;
  pjAssignmentActualOvertimeWork = $0F40000D;
  pjAssignmentRemainingOvertimeWork = $0F40000E;
  pjAssignmentBaselineWork = $0F400010;
  pjAssignmentPeak = $0F400013;
  pjAssignmentStart = $0F400014;
  pjAssignmentFinish = $0F400015;
  pjAssignmentActualStart = $0F400016;
  pjAssignmentActualFinish = $0F400017;
  pjAssignmentDelay = $0F400019;
  pjAssignmentCost = $0F40001A;
  pjAssignmentOvertimeCost = $0F40001B;
  pjAssignmentActualCost = $0F40001C;
  pjAssignmentRemainingCost = $0F40001D;
  pjAssignmentActualOvertimeCost = $0F40001E;
  pjAssignmentRemainingOvertimeCost = $0F40001F;
  pjAssignmentBaselineCost = $0F400020;
  pjAssignmentBCWS = $0F400022;
  pjAssignmentBCWP = $0F400023;
  pjAssignmentACWP = $0F400024;
  pjAssignmentSV = $0F400025;
  pjAssignmentCostVariance = $0F400026;
  pjAssignmentWorkContour = $0F400027;
  pjAssignmentPercentWorkComplete = $0F40002B;
  pjAssignmentProject = $0F40002C;
  pjAssignmentNotes = $0F400047;
  pjAssignmentConfirmed = $0F400048;
  pjAssignmentResponsePending = $0F400049;
  pjAssignmentUpdateNeeded = $0F40004A;
  pjAssignmentTeamStatusPending = $0F40004B;
  pjAssignmentCostRateTable = $0F400050;
  pjAssignmentText1 = $0F400058;
  pjAssignmentText2 = $0F400059;
  pjAssignmentText3 = $0F40005A;
  pjAssignmentText4 = $0F40005B;
  pjAssignmentText5 = $0F40005C;
  pjAssignmentText6 = $0F40005D;
  pjAssignmentText7 = $0F40005E;
  pjAssignmentText8 = $0F40005F;
  pjAssignmentText9 = $0F400060;
  pjAssignmentText10 = $0F400061;
  pjAssignmentStart1 = $0F400062;
  pjAssignmentStart2 = $0F400063;
  pjAssignmentStart3 = $0F400064;
  pjAssignmentStart4 = $0F400065;
  pjAssignmentStart5 = $0F400066;
  pjAssignmentFinish1 = $0F400067;
  pjAssignmentFinish2 = $0F400068;
  pjAssignmentFinish3 = $0F400069;
  pjAssignmentFinish4 = $0F40006A;
  pjAssignmentFinish5 = $0F40006B;
  pjAssignmentNumber1 = $0F40006C;
  pjAssignmentNumber2 = $0F40006D;
  pjAssignmentNumber3 = $0F40006E;
  pjAssignmentNumber4 = $0F40006F;
  pjAssignmentNumber5 = $0F400070;
  pjAssignmentDuration1 = $0F400071;
  pjAssignmentDuration2 = $0F400072;
  pjAssignmentDuration3 = $0F400073;
  pjAssignmentCost1 = $0F400077;
  pjAssignmentCost2 = $0F400078;
  pjAssignmentCost3 = $0F400079;
  pjAssignmentFlag10 = $0F40007A;
  pjAssignmentFlag1 = $0F40007B;
  pjAssignmentFlag2 = $0F40007C;
  pjAssignmentFlag3 = $0F40007D;
  pjAssignmentFlag4 = $0F40007E;
  pjAssignmentFlag5 = $0F40007F;
  pjAssignmentFlag6 = $0F400080;
  pjAssignmentFlag7 = $0F400081;
  pjAssignmentFlag8 = $0F400082;
  pjAssignmentFlag9 = $0F400083;
  pjAssignmentLinkedFields = $0F400084;
  pjAssignmentOverallocated = $0F400087;
  pjAssignmentTaskSummaryName = $0F40008E;
  pjAssignmentLevelingDelay = $0F400091;
  pjAssignmentBaselineStart = $0F400092;
  pjAssignmentBaselineFinish = $0F400093;
  pjAssignmentHyperlink = $0F400098;
  pjAssignmentHyperlinkAddress = $0F400099;
  pjAssignmentHyperlinkSubAddress = $0F40009A;
  pjAssignmentHyperlinkHREF = $0F40009B;
  pjAssignmentCost4 = $0F40009F;
  pjAssignmentCost5 = $0F4000A0;
  pjAssignmentCost6 = $0F4000A1;
  pjAssignmentCost7 = $0F4000A2;
  pjAssignmentCost8 = $0F4000A3;
  pjAssignmentCost9 = $0F4000A4;
  pjAssignmentCost10 = $0F4000A5;
  pjAssignmentDate1 = $0F4000A6;
  pjAssignmentDate2 = $0F4000A7;
  pjAssignmentDate3 = $0F4000A8;
  pjAssignmentDate4 = $0F4000A9;
  pjAssignmentDate5 = $0F4000AA;
  pjAssignmentDate6 = $0F4000AB;
  pjAssignmentDate7 = $0F4000AC;
  pjAssignmentDate8 = $0F4000AD;
  pjAssignmentDate9 = $0F4000AE;
  pjAssignmentDate10 = $0F4000AF;
  pjAssignmentDuration4 = $0F4000B0;
  pjAssignmentDuration5 = $0F4000B1;
  pjAssignmentDuration6 = $0F4000B2;
  pjAssignmentDuration7 = $0F4000B3;
  pjAssignmentDuration8 = $0F4000B4;
  pjAssignmentDuration9 = $0F4000B5;
  pjAssignmentDuration10 = $0F4000B6;
  pjAssignmentFinish6 = $0F4000B7;
  pjAssignmentFinish7 = $0F4000B8;
  pjAssignmentFinish8 = $0F4000B9;
  pjAssignmentFinish9 = $0F4000BA;
  pjAssignmentFinish10 = $0F4000BB;
  pjAssignmentFlag11 = $0F4000BC;
  pjAssignmentFlag12 = $0F4000BD;
  pjAssignmentFlag13 = $0F4000BE;
  pjAssignmentFlag14 = $0F4000BF;
  pjAssignmentFlag15 = $0F4000C0;
  pjAssignmentFlag16 = $0F4000C1;
  pjAssignmentFlag17 = $0F4000C2;
  pjAssignmentFlag18 = $0F4000C3;
  pjAssignmentFlag19 = $0F4000C4;
  pjAssignmentFlag20 = $0F4000C5;
  pjAssignmentNumber6 = $0F4000C6;
  pjAssignmentNumber7 = $0F4000C7;
  pjAssignmentNumber8 = $0F4000C8;
  pjAssignmentNumber9 = $0F4000C9;
  pjAssignmentNumber10 = $0F4000CA;
  pjAssignmentNumber11 = $0F4000CB;
  pjAssignmentNumber12 = $0F4000CC;
  pjAssignmentNumber13 = $0F4000CD;
  pjAssignmentNumber14 = $0F4000CE;
  pjAssignmentNumber15 = $0F4000CF;
  pjAssignmentNumber16 = $0F4000D0;
  pjAssignmentNumber17 = $0F4000D1;
  pjAssignmentNumber18 = $0F4000D2;
  pjAssignmentNumber19 = $0F4000D3;
  pjAssignmentNumber20 = $0F4000D4;
  pjAssignmentStart6 = $0F4000D5;
  pjAssignmentStart7 = $0F4000D6;
  pjAssignmentStart8 = $0F4000D7;
  pjAssignmentStart9 = $0F4000D8;
  pjAssignmentStart10 = $0F4000D9;
  pjAssignmentText11 = $0F4000DA;
  pjAssignmentText12 = $0F4000DB;
  pjAssignmentText13 = $0F4000DC;
  pjAssignmentText14 = $0F4000DD;
  pjAssignmentText15 = $0F4000DE;
  pjAssignmentText16 = $0F4000DF;
  pjAssignmentText17 = $0F4000E0;
  pjAssignmentText18 = $0F4000E1;
  pjAssignmentText19 = $0F4000E2;
  pjAssignmentText20 = $0F4000E3;
  pjAssignmentText21 = $0F4000E4;
  pjAssignmentText22 = $0F4000E5;
  pjAssignmentText23 = $0F4000E6;
  pjAssignmentText24 = $0F4000E7;
  pjAssignmentText25 = $0F4000E8;
  pjAssignmentText26 = $0F4000E9;
  pjAssignmentText27 = $0F4000EA;
  pjAssignmentText28 = $0F4000EB;
  pjAssignmentText29 = $0F4000EC;
  pjAssignmentText30 = $0F4000ED;
  pjAssignmentIndex = $0F4000F6;
  pjAssignmentCV = $0F4000F7;
  pjAssignmentWorkVariance = $0F4000F8;
  pjAssignmentStartVariance = $0F400106;
  pjAssignmentFinishVariance = $0F400107;
  pjAssignmentVAC = $0F40010F;
  pjAssignmentFixedMaterialAssignment = $0F400113;
  pjAssignmentResourceType = $0F400114;
  pjAssignmentHyperlinkScreenTip = $0F400117;

// Constants for enum PjField
type
  PjField = TOleEnum;
const
  pjTaskWork = $0B400000;
  pjTaskBaselineWork = $0B400001;
  pjTaskActualWork = $0B400002;
  pjTaskWorkVariance = $0B400003;
  pjTaskRemainingWork = $0B400004;
  pjTaskCost = $0B400005;
  pjTaskBaselineCost = $0B400006;
  pjTaskActualCost = $0B400007;
  pjTaskFixedCost = $0B400008;
  pjTaskCostVariance = $0B400009;
  pjTaskRemainingCost = $0B40000A;
  pjTaskBCWP = $0B40000B;
  pjTaskBCWS = $0B40000C;
  pjTaskSV = $0B40000D;
  pjTaskName = $0B40000E;
  pjTaskNotes = $0B40000F;
  pjTaskWBS = $0B400010;
  pjTaskConstraintType = $0B400011;
  pjTaskConstraintDate = $0B400012;
  pjTaskCritical = $0B400013;
  pjTaskLevelDelay = $0B400014;
  pjTaskFreeSlack = $0B400015;
  pjTaskTotalSlack = $0B400016;
  pjTaskID = $0B400017;
  pjTaskMilestone = $0B400018;
  pjTaskPriority = $0B400019;
  pjTaskSubproject = $0B40001A;
  pjTaskBaselineDuration = $0B40001B;
  pjTaskActualDuration = $0B40001C;
  pjTaskDuration = $0B40001D;
  pjTaskDurationVariance = $0B40001E;
  pjTaskRemainingDuration = $0B40001F;
  pjTaskPercentComplete = $0B400020;
  pjTaskPercentWorkComplete = $0B400021;
  pjTaskFixedDuration = $0B400022;
  pjTaskStart = $0B400023;
  pjTaskFinish = $0B400024;
  pjTaskEarlyStart = $0B400025;
  pjTaskEarlyFinish = $0B400026;
  pjTaskLateStart = $0B400027;
  pjTaskLateFinish = $0B400028;
  pjTaskActualStart = $0B400029;
  pjTaskActualFinish = $0B40002A;
  pjTaskBaselineStart = $0B40002B;
  pjTaskBaselineFinish = $0B40002C;
  pjTaskStartVariance = $0B40002D;
  pjTaskFinishVariance = $0B40002E;
  pjTaskPredecessors = $0B40002F;
  pjTaskSuccessors = $0B400030;
  pjTaskResourceNames = $0B400031;
  pjTaskResourceInitials = $0B400032;
  pjTaskText1 = $0B400033;
  pjTaskStart1 = $0B400034;
  pjTaskFinish1 = $0B400035;
  pjTaskText2 = $0B400036;
  pjTaskStart2 = $0B400037;
  pjTaskFinish2 = $0B400038;
  pjTaskText3 = $0B400039;
  pjTaskStart3 = $0B40003A;
  pjTaskFinish3 = $0B40003B;
  pjTaskText4 = $0B40003C;
  pjTaskStart4 = $0B40003D;
  pjTaskFinish4 = $0B40003E;
  pjTaskText5 = $0B40003F;
  pjTaskStart5 = $0B400040;
  pjTaskFinish5 = $0B400041;
  pjTaskText6 = $0B400042;
  pjTaskText7 = $0B400043;
  pjTaskText8 = $0B400044;
  pjTaskText9 = $0B400045;
  pjTaskText10 = $0B400046;
  pjTaskMarked = $0B400047;
  pjTaskFlag1 = $0B400048;
  pjTaskFlag2 = $0B400049;
  pjTaskFlag3 = $0B40004A;
  pjTaskFlag4 = $0B40004B;
  pjTaskFlag5 = $0B40004C;
  pjTaskFlag6 = $0B40004D;
  pjTaskFlag7 = $0B40004E;
  pjTaskFlag8 = $0B40004F;
  pjTaskFlag9 = $0B400050;
  pjTaskFlag10 = $0B400051;
  pjTaskRollup = $0B400052;
  pjTaskCV = $0B400053;
  pjTaskProject = $0B400054;
  pjTaskOutlineLevel = $0B400055;
  pjTaskUniqueID = $0B400056;
  pjTaskNumber1 = $0B400057;
  pjTaskNumber2 = $0B400058;
  pjTaskNumber3 = $0B400059;
  pjTaskNumber4 = $0B40005A;
  pjTaskNumber5 = $0B40005B;
  pjTaskSummary = $0B40005C;
  pjTaskCreated = $0B40005D;
  pjTaskSheetNotes = $0B40005E;
  pjTaskUniquePredecessors = $0B40005F;
  pjTaskUniqueSuccessors = $0B400060;
  pjTaskObjects = $0B400061;
  pjTaskLinkedFields = $0B400062;
  pjTaskResume = $0B400063;
  pjTaskStop = $0B400064;
  pjTaskResumeNoEarlierThan = $0B400065;
  pjTaskOutlineNumber = $0B400066;
  pjTaskDuration1 = $0B400067;
  pjTaskDuration2 = $0B400068;
  pjTaskDuration3 = $0B400069;
  pjTaskCost1 = $0B40006A;
  pjTaskCost2 = $0B40006B;
  pjTaskCost3 = $0B40006C;
  pjTaskHideBar = $0B40006D;
  pjTaskConfirmed = $0B40006E;
  pjTaskUpdateNeeded = $0B40006F;
  pjTaskContact = $0B400070;
  pjTaskResourceGroup = $0B400071;
  pjTaskACWP = $0B400078;
  pjTaskType = $0B400080;
  pjTaskRecurring = $0B400081;
  pjTaskEffortDriven = $0B400084;
  pjTaskParentTask = $0B400087;
  pjTaskOvertimeWork = $0B4000A3;
  pjTaskActualOvertimeWork = $0B4000A4;
  pjTaskRemainingOvertimeWork = $0B4000A5;
  pjTaskRegularWork = $0B4000A6;
  pjTaskOvertimeCost = $0B4000A8;
  pjTaskActualOvertimeCost = $0B4000A9;
  pjTaskRemainingOvertimeCost = $0B4000AA;
  pjTaskFixedCostAccrual = $0B4000C8;
  pjTaskIndicators = $0B4000CD;
  pjTaskHyperlink = $0B4000D9;
  pjTaskHyperlinkAddress = $0B4000DA;
  pjTaskHyperlinkSubAddress = $0B4000DB;
  pjTaskHyperlinkHref = $0B4000DC;
  pjTaskIsAssignment = $0B4000E0;
  pjTaskOverallocated = $0B4000E1;
  pjTaskExternalTask = $0B4000E8;
  pjTaskSubprojectReadOnly = $0B4000F6;
  pjTaskResponsePending = $0B4000FA;
  pjTaskTeamStatusPending = $0B4000FB;
  pjTaskLevelCanSplit = $0B4000FC;
  pjTaskLevelAssignments = $0B4000FD;
  pjTaskWorkContour = $0B400100;
  pjTaskCost4 = $0B400102;
  pjTaskCost5 = $0B400103;
  pjTaskCost6 = $0B400104;
  pjTaskCost7 = $0B400105;
  pjTaskCost8 = $0B400106;
  pjTaskCost9 = $0B400107;
  pjTaskCost10 = $0B400108;
  pjTaskDate1 = $0B400109;
  pjTaskDate2 = $0B40010A;
  pjTaskDate3 = $0B40010B;
  pjTaskDate4 = $0B40010C;
  pjTaskDate5 = $0B40010D;
  pjTaskDate6 = $0B40010E;
  pjTaskDate7 = $0B40010F;
  pjTaskDate8 = $0B400110;
  pjTaskDate9 = $0B400111;
  pjTaskDate10 = $0B400112;
  pjTaskDuration4 = $0B400113;
  pjTaskDuration5 = $0B400114;
  pjTaskDuration6 = $0B400115;
  pjTaskDuration7 = $0B400116;
  pjTaskDuration8 = $0B400117;
  pjTaskDuration9 = $0B400118;
  pjTaskDuration10 = $0B400119;
  pjTaskStart6 = $0B40011A;
  pjTaskFinish6 = $0B40011B;
  pjTaskStart7 = $0B40011C;
  pjTaskFinish7 = $0B40011D;
  pjTaskStart8 = $0B40011E;
  pjTaskFinish8 = $0B40011F;
  pjTaskStart9 = $0B400120;
  pjTaskFinish9 = $0B400121;
  pjTaskStart10 = $0B400122;
  pjTaskFinish10 = $0B400123;
  pjTaskFlag11 = $0B400124;
  pjTaskFlag12 = $0B400125;
  pjTaskFlag13 = $0B400126;
  pjTaskFlag14 = $0B400127;
  pjTaskFlag15 = $0B400128;
  pjTaskFlag16 = $0B400129;
  pjTaskFlag17 = $0B40012A;
  pjTaskFlag18 = $0B40012B;
  pjTaskFlag19 = $0B40012C;
  pjTaskFlag20 = $0B40012D;
  pjTaskNumber6 = $0B40012E;
  pjTaskNumber7 = $0B40012F;
  pjTaskNumber8 = $0B400130;
  pjTaskNumber9 = $0B400131;
  pjTaskNumber10 = $0B400132;
  pjTaskNumber11 = $0B400133;
  pjTaskNumber12 = $0B400134;
  pjTaskNumber13 = $0B400135;
  pjTaskNumber14 = $0B400136;
  pjTaskNumber15 = $0B400137;
  pjTaskNumber16 = $0B400138;
  pjTaskNumber17 = $0B400139;
  pjTaskNumber18 = $0B40013A;
  pjTaskNumber19 = $0B40013B;
  pjTaskNumber20 = $0B40013C;
  pjTaskText11 = $0B40013D;
  pjTaskText12 = $0B40013E;
  pjTaskText13 = $0B40013F;
  pjTaskText14 = $0B400140;
  pjTaskText15 = $0B400141;
  pjTaskText16 = $0B400142;
  pjTaskText17 = $0B400143;
  pjTaskText18 = $0B400144;
  pjTaskText19 = $0B400145;
  pjTaskText20 = $0B400146;
  pjTaskText21 = $0B400147;
  pjTaskText22 = $0B400148;
  pjTaskText23 = $0B400149;
  pjTaskText24 = $0B40014A;
  pjTaskText25 = $0B40014B;
  pjTaskText26 = $0B40014C;
  pjTaskText27 = $0B40014D;
  pjTaskText28 = $0B40014E;
  pjTaskText29 = $0B40014F;
  pjTaskText30 = $0B400150;
  pjTaskResourcePhonetics = $0B40015D;
  pjTaskIndex = $0B400168;
  pjTaskAssignmentDelay = $0B40016E;
  pjTaskAssignmentUnits = $0B40016F;
  pjTaskCostRateTable = $0B400170;
  pjTaskPreleveledStart = $0B400171;
  pjTaskPreleveledFinish = $0B400172;
  pjTaskEstimated = $0B40018C;
  pjTaskIgnoreResourceCalendar = $0B40018F;
  pjTaskCalendar = $0B400192;
  pjTaskDuration1Estimated = $0B400193;
  pjTaskDuration2Estimated = $0B400194;
  pjTaskDuration3Estimated = $0B400195;
  pjTaskDuration4Estimated = $0B400196;
  pjTaskDuration5Estimated = $0B400197;
  pjTaskDuration6Estimated = $0B400198;
  pjTaskDuration7Estimated = $0B400199;
  pjTaskDuration8Estimated = $0B40019A;
  pjTaskDuration9Estimated = $0B40019B;
  pjTaskDuration10Estimated = $0B40019C;
  pjTaskBaselineDurationEstimated = $0B40019D;
  pjTaskOutlineCode1 = $0B4001A0;
  pjTaskOutlineCode2 = $0B4001A2;
  pjTaskOutlineCode3 = $0B4001A4;
  pjTaskOutlineCode4 = $0B4001A6;
  pjTaskOutlineCode5 = $0B4001A8;
  pjTaskOutlineCode6 = $0B4001AA;
  pjTaskOutlineCode7 = $0B4001AC;
  pjTaskOutlineCode8 = $0B4001AE;
  pjTaskOutlineCode9 = $0B4001B0;
  pjTaskOutlineCode10 = $0B4001B2;
  pjTaskDeadline = $0B4001B5;
  pjTaskStartSlack = $0B4001B6;
  pjTaskFinishSlack = $0B4001B7;
  pjTaskVAC = $0B4001B9;
  pjTaskGroupBySummary = $0B4001BE;
  pjTaskWBSPredecessors = $0B4001C1;
  pjTaskWBSSuccessors = $0B4001C2;
  pjTaskResourceType = $0B4001C3;
  pjTaskHyperlinkScreenTip = $0B4001C4;
  pjResourceID = $0C400000;
  pjResourceName = $0C400001;
  pjResourceInitials = $0C400002;
  pjResourceGroup = $0C400003;
  pjResourceMaxUnits = $0C400004;
  pjResourceBaseCalendar = $0C400005;
  pjResourceStandardRate = $0C400006;
  pjResourceOvertimeRate = $0C400007;
  pjResourceText1 = $0C400008;
  pjResourceText2 = $0C400009;
  pjResourceCode = $0C40000A;
  pjResourceActualCost = $0C40000B;
  pjResourceCost = $0C40000C;
  pjResourceWork = $0C40000D;
  pjResourceActualWork = $0C40000E;
  pjResourceBaselineWork = $0C40000F;
  pjResourceOvertimeWork = $0C400010;
  pjResourceBaselineCost = $0C400011;
  pjResourceCostPerUse = $0C400012;
  pjResourceAccrueAt = $0C400013;
  pjResourceNotes = $0C400014;
  pjResourceRemainingCost = $0C400015;
  pjResourceRemainingWork = $0C400016;
  pjResourceWorkVariance = $0C400017;
  pjResourceCostVariance = $0C400018;
  pjResourceOverallocated = $0C400019;
  pjResourcePeakUnits = $0C40001A;
  pjResourceUniqueID = $0C40001B;
  pjResourceSheetNotes = $0C40001C;
  pjResourcePercentWorkComplete = $0C40001D;
  pjResourceText3 = $0C40001E;
  pjResourceText4 = $0C40001F;
  pjResourceText5 = $0C400020;
  pjResourceObjects = $0C400021;
  pjResourceLinkedFields = $0C400022;
  pjResourceEMailAddress = $0C400023;
  pjResourceRegularWork = $0C400026;
  pjResourceActualOvertimeWork = $0C400027;
  pjResourceRemainingOvertimeWork = $0C400028;
  pjResourceOvertimeCost = $0C40002F;
  pjResourceActualOvertimeCost = $0C400030;
  pjResourceRemainingOvertimeCost = $0C400031;
  pjResourceBCWS = $0C400033;
  pjResourceBCWP = $0C400034;
  pjResourceACWP = $0C400035;
  pjResourceSV = $0C400036;
  pjResourceAvailableFrom = $0C400039;
  pjResourceAvailableTo = $0C40003A;
  pjResourceIndicators = $0C400056;
  pjResourceText6 = $0C400061;
  pjResourceText7 = $0C400062;
  pjResourceText8 = $0C400063;
  pjResourceText9 = $0C400064;
  pjResourceText10 = $0C400065;
  pjResourceStart1 = $0C400066;
  pjResourceStart2 = $0C400067;
  pjResourceStart3 = $0C400068;
  pjResourceStart4 = $0C400069;
  pjResourceStart5 = $0C40006A;
  pjResourceFinish1 = $0C40006B;
  pjResourceFinish2 = $0C40006C;
  pjResourceFinish3 = $0C40006D;
  pjResourceFinish4 = $0C40006E;
  pjResourceFinish5 = $0C40006F;
  pjResourceNumber1 = $0C400070;
  pjResourceNumber2 = $0C400071;
  pjResourceNumber3 = $0C400072;
  pjResourceNumber4 = $0C400073;
  pjResourceNumber5 = $0C400074;
  pjResourceDuration1 = $0C400075;
  pjResourceDuration2 = $0C400076;
  pjResourceDuration3 = $0C400077;
  pjResourceCost1 = $0C40007B;
  pjResourceCost2 = $0C40007C;
  pjResourceCost3 = $0C40007D;
  pjResourceFlag10 = $0C40007E;
  pjResourceFlag1 = $0C40007F;
  pjResourceFlag2 = $0C400080;
  pjResourceFlag3 = $0C400081;
  pjResourceFlag4 = $0C400082;
  pjResourceFlag5 = $0C400083;
  pjResourceFlag6 = $0C400084;
  pjResourceFlag7 = $0C400085;
  pjResourceFlag8 = $0C400086;
  pjResourceFlag9 = $0C400087;
  pjResourceHyperlink = $0C40008A;
  pjResourceHyperlinkAddress = $0C40008B;
  pjResourceHyperlinkSubAddress = $0C40008C;
  pjResourceHyperlinkHref = $0C40008D;
  pjResourceIsAssignment = $0C400090;
  pjResourceTaskSummaryName = $0C40009F;
  pjResourceCanLevel = $0C4000A3;
  pjResourceWorkContour = $0C4000A4;
  pjResourceCost4 = $0C4000A6;
  pjResourceCost5 = $0C4000A7;
  pjResourceCost6 = $0C4000A8;
  pjResourceCost7 = $0C4000A9;
  pjResourceCost8 = $0C4000AA;
  pjResourceCost9 = $0C4000AB;
  pjResourceCost10 = $0C4000AC;
  pjResourceDate1 = $0C4000AD;
  pjResourceDate2 = $0C4000AE;
  pjResourceDate3 = $0C4000AF;
  pjResourceDate4 = $0C4000B0;
  pjResourceDate5 = $0C4000B1;
  pjResourceDate6 = $0C4000B2;
  pjResourceDate7 = $0C4000B3;
  pjResourceDate8 = $0C4000B4;
  pjResourceDate9 = $0C4000B5;
  pjResourceDate10 = $0C4000B6;
  pjResourceDuration4 = $0C4000B7;
  pjResourceDuration5 = $0C4000B8;
  pjResourceDuration6 = $0C4000B9;
  pjResourceDuration7 = $0C4000BA;
  pjResourceDuration8 = $0C4000BB;
  pjResourceDuration9 = $0C4000BC;
  pjResourceDuration10 = $0C4000BD;
  pjResourceFinish6 = $0C4000BE;
  pjResourceFinish7 = $0C4000BF;
  pjResourceFinish8 = $0C4000C0;
  pjResourceFinish9 = $0C4000C1;
  pjResourceFinish10 = $0C4000C2;
  pjResourceFlag11 = $0C4000C3;
  pjResourceFlag12 = $0C4000C4;
  pjResourceFlag13 = $0C4000C5;
  pjResourceFlag14 = $0C4000C6;
  pjResourceFlag15 = $0C4000C7;
  pjResourceFlag16 = $0C4000C8;
  pjResourceFlag17 = $0C4000C9;
  pjResourceFlag18 = $0C4000CA;
  pjResourceFlag19 = $0C4000CB;
  pjResourceFlag20 = $0C4000CC;
  pjResourceNumber6 = $0C4000CD;
  pjResourceNumber7 = $0C4000CE;
  pjResourceNumber8 = $0C4000CF;
  pjResourceNumber9 = $0C4000D0;
  pjResourceNumber10 = $0C4000D1;
  pjResourceNumber11 = $0C4000D2;
  pjResourceNumber12 = $0C4000D3;
  pjResourceNumber13 = $0C4000D4;
  pjResourceNumber14 = $0C4000D5;
  pjResourceNumber15 = $0C4000D6;
  pjResourceNumber16 = $0C4000D7;
  pjResourceNumber17 = $0C4000D8;
  pjResourceNumber18 = $0C4000D9;
  pjResourceNumber19 = $0C4000DA;
  pjResourceNumber20 = $0C4000DB;
  pjResourceStart6 = $0C4000DC;
  pjResourceStart7 = $0C4000DD;
  pjResourceStart8 = $0C4000DE;
  pjResourceStart9 = $0C4000DF;
  pjResourceStart10 = $0C4000E0;
  pjResourceText11 = $0C4000E1;
  pjResourceText12 = $0C4000E2;
  pjResourceText13 = $0C4000E3;
  pjResourceText14 = $0C4000E4;
  pjResourceText15 = $0C4000E5;
  pjResourceText16 = $0C4000E6;
  pjResourceText17 = $0C4000E7;
  pjResourceText18 = $0C4000E8;
  pjResourceText19 = $0C4000E9;
  pjResourceText20 = $0C4000EA;
  pjResourceText21 = $0C4000EB;
  pjResourceText22 = $0C4000EC;
  pjResourceText23 = $0C4000ED;
  pjResourceText24 = $0C4000EE;
  pjResourceText25 = $0C4000EF;
  pjResourceText26 = $0C4000F0;
  pjResourceText27 = $0C4000F1;
  pjResourceText28 = $0C4000F2;
  pjResourceText29 = $0C4000F3;
  pjResourceText30 = $0C4000F4;
  pjResourcePhonetics = $0C4000FC;
  pjResourceIndex = $0C4000FD;
  pjResourceAssignmentDelay = $0C400101;
  pjResourceAssignmentUnits = $0C400102;
  pjResourceBaselineStart = $0C400103;
  pjResourceBaselineFinish = $0C400104;
  pjResourceConfirmed = $0C400105;
  pjResourceFinish = $0C400106;
  pjResourceLevelingDelay = $0C400107;
  pjResourceResponsePending = $0C400108;
  pjResourceStart = $0C400109;
  pjResourceTeamStatusPending = $0C40010A;
  pjResourceUpdateNeeded = $0C40010B;
  pjResourceCV = $0C40010C;
  pjResourceCostRateTable = $0C40010D;
  pjResourceWorkgroup = $0C400110;
  pjResourceProject = $0C400111;
  pjResourceOutlineCode1 = $0C400116;
  pjResourceOutlineCode2 = $0C400118;
  pjResourceOutlineCode3 = $0C40011A;
  pjResourceOutlineCode4 = $0C40011C;
  pjResourceOutlineCode5 = $0C40011E;
  pjResourceOutlineCode6 = $0C400120;
  pjResourceOutlineCode7 = $0C400122;
  pjResourceOutlineCode8 = $0C400124;
  pjResourceOutlineCode9 = $0C400126;
  pjResourceOutlineCode10 = $0C400128;
  pjResourceMaterialLabel = $0C40012B;
  pjResourceType = $0C40012C;
  pjResourceVAC = $0C40012D;
  pjResourceGroupbySummary = $0C400132;
  pjResourceWindowsUserAccount = $0C400137;
  pjResourceHyperlinkScreenTip = $0C400138;
  pjTaskDelay = $0B400014;

// Constants for enum PjCustomField
type
  PjCustomField = TOleEnum;
const
  pjCustomTaskCost1 = $0B40006A;
  pjCustomTaskCost2 = $0B40006B;
  pjCustomTaskCost3 = $0B40006C;
  pjCustomTaskCost4 = $0B400102;
  pjCustomTaskCost5 = $0B400103;
  pjCustomTaskCost6 = $0B400104;
  pjCustomTaskCost7 = $0B400105;
  pjCustomTaskCost8 = $0B400106;
  pjCustomTaskCost9 = $0B400107;
  pjCustomTaskCost10 = $0B400108;
  pjCustomTaskDate1 = $0B400109;
  pjCustomTaskDate2 = $0B40010A;
  pjCustomTaskDate3 = $0B40010B;
  pjCustomTaskDate4 = $0B40010C;
  pjCustomTaskDate5 = $0B40010D;
  pjCustomTaskDate6 = $0B40010E;
  pjCustomTaskDate7 = $0B40010F;
  pjCustomTaskDate8 = $0B400110;
  pjCustomTaskDate9 = $0B400111;
  pjCustomTaskDate10 = $0B400112;
  pjCustomTaskDuration1 = $0B400067;
  pjCustomTaskDuration2 = $0B400068;
  pjCustomTaskDuration3 = $0B400069;
  pjCustomTaskDuration4 = $0B400113;
  pjCustomTaskDuration5 = $0B400114;
  pjCustomTaskDuration6 = $0B400115;
  pjCustomTaskDuration7 = $0B400116;
  pjCustomTaskDuration8 = $0B400117;
  pjCustomTaskDuration9 = $0B400118;
  pjCustomTaskDuration10 = $0B400119;
  pjCustomTaskFinish1 = $0B400035;
  pjCustomTaskFinish2 = $0B400038;
  pjCustomTaskFinish3 = $0B40003B;
  pjCustomTaskFinish4 = $0B40003E;
  pjCustomTaskFinish5 = $0B400041;
  pjCustomTaskFinish6 = $0B40011B;
  pjCustomTaskFinish7 = $0B40011D;
  pjCustomTaskFinish8 = $0B40011F;
  pjCustomTaskFinish9 = $0B400121;
  pjCustomTaskFinish10 = $0B400123;
  pjCustomTaskFlag1 = $0B400048;
  pjCustomTaskFlag10 = $0B400051;
  pjCustomTaskFlag2 = $0B400049;
  pjCustomTaskFlag3 = $0B40004A;
  pjCustomTaskFlag4 = $0B40004B;
  pjCustomTaskFlag5 = $0B40004C;
  pjCustomTaskFlag6 = $0B40004D;
  pjCustomTaskFlag7 = $0B40004E;
  pjCustomTaskFlag8 = $0B40004F;
  pjCustomTaskFlag9 = $0B400050;
  pjCustomTaskFlag11 = $0B400124;
  pjCustomTaskFlag12 = $0B400125;
  pjCustomTaskFlag13 = $0B400126;
  pjCustomTaskFlag14 = $0B400127;
  pjCustomTaskFlag15 = $0B400128;
  pjCustomTaskFlag16 = $0B400129;
  pjCustomTaskFlag17 = $0B40012A;
  pjCustomTaskFlag18 = $0B40012B;
  pjCustomTaskFlag19 = $0B40012C;
  pjCustomTaskFlag20 = $0B40012D;
  pjCustomTaskNumber1 = $0B400057;
  pjCustomTaskNumber2 = $0B400058;
  pjCustomTaskNumber3 = $0B400059;
  pjCustomTaskNumber4 = $0B40005A;
  pjCustomTaskNumber5 = $0B40005B;
  pjCustomTaskNumber6 = $0B40012E;
  pjCustomTaskNumber7 = $0B40012F;
  pjCustomTaskNumber8 = $0B400130;
  pjCustomTaskNumber9 = $0B400131;
  pjCustomTaskNumber10 = $0B400132;
  pjCustomTaskNumber11 = $0B400133;
  pjCustomTaskNumber12 = $0B400134;
  pjCustomTaskNumber13 = $0B400135;
  pjCustomTaskNumber14 = $0B400136;
  pjCustomTaskNumber15 = $0B400137;
  pjCustomTaskNumber16 = $0B400138;
  pjCustomTaskNumber17 = $0B400139;
  pjCustomTaskNumber18 = $0B40013A;
  pjCustomTaskNumber19 = $0B40013B;
  pjCustomTaskNumber20 = $0B40013C;
  pjCustomTaskOutlineCode1 = $0B4001A0;
  pjCustomTaskOutlineCode2 = $0B4001A2;
  pjCustomTaskOutlineCode3 = $0B4001A4;
  pjCustomTaskOutlineCode4 = $0B4001A6;
  pjCustomTaskOutlineCode5 = $0B4001A8;
  pjCustomTaskOutlineCode6 = $0B4001AA;
  pjCustomTaskOutlineCode7 = $0B4001AC;
  pjCustomTaskOutlineCode8 = $0B4001AE;
  pjCustomTaskOutlineCode9 = $0B4001B0;
  pjCustomTaskOutlineCode10 = $0B4001B2;
  pjCustomTaskStart1 = $0B400034;
  pjCustomTaskStart2 = $0B400037;
  pjCustomTaskStart3 = $0B40003A;
  pjCustomTaskStart4 = $0B40003D;
  pjCustomTaskStart5 = $0B400040;
  pjCustomTaskStart6 = $0B40011A;
  pjCustomTaskStart7 = $0B40011C;
  pjCustomTaskStart8 = $0B40011E;
  pjCustomTaskStart9 = $0B400120;
  pjCustomTaskStart10 = $0B400122;
  pjCustomTaskText1 = $0B400033;
  pjCustomTaskText10 = $0B400046;
  pjCustomTaskText2 = $0B400036;
  pjCustomTaskText3 = $0B400039;
  pjCustomTaskText4 = $0B40003C;
  pjCustomTaskText5 = $0B40003F;
  pjCustomTaskText6 = $0B400042;
  pjCustomTaskText7 = $0B400043;
  pjCustomTaskText8 = $0B400044;
  pjCustomTaskText9 = $0B400045;
  pjCustomTaskText11 = $0B40013D;
  pjCustomTaskText12 = $0B40013E;
  pjCustomTaskText13 = $0B40013F;
  pjCustomTaskText14 = $0B400140;
  pjCustomTaskText15 = $0B400141;
  pjCustomTaskText16 = $0B400142;
  pjCustomTaskText17 = $0B400143;
  pjCustomTaskText18 = $0B400144;
  pjCustomTaskText19 = $0B400145;
  pjCustomTaskText20 = $0B400146;
  pjCustomTaskText21 = $0B400147;
  pjCustomTaskText22 = $0B400148;
  pjCustomTaskText23 = $0B400149;
  pjCustomTaskText24 = $0B40014A;
  pjCustomTaskText25 = $0B40014B;
  pjCustomTaskText26 = $0B40014C;
  pjCustomTaskText27 = $0B40014D;
  pjCustomTaskText28 = $0B40014E;
  pjCustomTaskText29 = $0B40014F;
  pjCustomTaskText30 = $0B400150;
  pjCustomResourceText1 = $0C400008;
  pjCustomResourceText2 = $0C400009;
  pjCustomResourceText3 = $0C40001E;
  pjCustomResourceText4 = $0C40001F;
  pjCustomResourceText5 = $0C400020;
  pjCustomResourceText6 = $0C400061;
  pjCustomResourceText7 = $0C400062;
  pjCustomResourceText8 = $0C400063;
  pjCustomResourceText9 = $0C400064;
  pjCustomResourceText10 = $0C400065;
  pjCustomResourceText11 = $0C4000E1;
  pjCustomResourceText12 = $0C4000E2;
  pjCustomResourceText13 = $0C4000E3;
  pjCustomResourceText14 = $0C4000E4;
  pjCustomResourceText15 = $0C4000E5;
  pjCustomResourceText16 = $0C4000E6;
  pjCustomResourceText17 = $0C4000E7;
  pjCustomResourceText18 = $0C4000E8;
  pjCustomResourceText19 = $0C4000E9;
  pjCustomResourceText20 = $0C4000EA;
  pjCustomResourceText21 = $0C4000EB;
  pjCustomResourceText22 = $0C4000EC;
  pjCustomResourceText23 = $0C4000ED;
  pjCustomResourceText24 = $0C4000EE;
  pjCustomResourceText25 = $0C4000EF;
  pjCustomResourceText26 = $0C4000F0;
  pjCustomResourceText27 = $0C4000F1;
  pjCustomResourceText28 = $0C4000F2;
  pjCustomResourceText29 = $0C4000F3;
  pjCustomResourceText30 = $0C4000F4;
  pjCustomResourceStart1 = $0C400066;
  pjCustomResourceStart2 = $0C400067;
  pjCustomResourceStart3 = $0C400068;
  pjCustomResourceStart4 = $0C400069;
  pjCustomResourceStart5 = $0C40006A;
  pjCustomResourceStart6 = $0C4000DC;
  pjCustomResourceStart7 = $0C4000DD;
  pjCustomResourceStart8 = $0C4000DE;
  pjCustomResourceStart9 = $0C4000DF;
  pjCustomResourceStart10 = $0C4000E0;
  pjCustomResourceFinish1 = $0C40006B;
  pjCustomResourceFinish2 = $0C40006C;
  pjCustomResourceFinish3 = $0C40006D;
  pjCustomResourceFinish4 = $0C40006E;
  pjCustomResourceFinish5 = $0C40006F;
  pjCustomResourceFinish6 = $0C4000BE;
  pjCustomResourceFinish7 = $0C4000BF;
  pjCustomResourceFinish8 = $0C4000C0;
  pjCustomResourceFinish9 = $0C4000C1;
  pjCustomResourceFinish10 = $0C4000C2;
  pjCustomResourceNumber1 = $0C400070;
  pjCustomResourceNumber2 = $0C400071;
  pjCustomResourceNumber3 = $0C400072;
  pjCustomResourceNumber4 = $0C400073;
  pjCustomResourceNumber5 = $0C400074;
  pjCustomResourceNumber6 = $0C4000CD;
  pjCustomResourceNumber7 = $0C4000CE;
  pjCustomResourceNumber8 = $0C4000CF;
  pjCustomResourceNumber9 = $0C4000D0;
  pjCustomResourceNumber10 = $0C4000D1;
  pjCustomResourceNumber11 = $0C4000D2;
  pjCustomResourceNumber12 = $0C4000D3;
  pjCustomResourceNumber13 = $0C4000D4;
  pjCustomResourceNumber14 = $0C4000D5;
  pjCustomResourceNumber15 = $0C4000D6;
  pjCustomResourceNumber16 = $0C4000D7;
  pjCustomResourceNumber17 = $0C4000D8;
  pjCustomResourceNumber18 = $0C4000D9;
  pjCustomResourceNumber19 = $0C4000DA;
  pjCustomResourceNumber20 = $0C4000DB;
  pjCustomResourceDuration1 = $0C400075;
  pjCustomResourceDuration2 = $0C400076;
  pjCustomResourceDuration3 = $0C400077;
  pjCustomResourceDuration4 = $0C4000B7;
  pjCustomResourceDuration5 = $0C4000B8;
  pjCustomResourceDuration6 = $0C4000B9;
  pjCustomResourceDuration7 = $0C4000BA;
  pjCustomResourceDuration8 = $0C4000BB;
  pjCustomResourceDuration9 = $0C4000BC;
  pjCustomResourceDuration10 = $0C4000BD;
  pjCustomResourceCost1 = $0C40007B;
  pjCustomResourceCost2 = $0C40007C;
  pjCustomResourceCost3 = $0C40007D;
  pjCustomResourceCost4 = $0C4000A6;
  pjCustomResourceCost5 = $0C4000A7;
  pjCustomResourceCost6 = $0C4000A8;
  pjCustomResourceCost7 = $0C4000A9;
  pjCustomResourceCost8 = $0C4000AA;
  pjCustomResourceCost9 = $0C4000AB;
  pjCustomResourceCost10 = $0C4000AC;
  pjCustomResourceFlag10 = $0C40007E;
  pjCustomResourceFlag1 = $0C40007F;
  pjCustomResourceFlag2 = $0C400080;
  pjCustomResourceFlag3 = $0C400081;
  pjCustomResourceFlag4 = $0C400082;
  pjCustomResourceFlag5 = $0C400083;
  pjCustomResourceFlag6 = $0C400084;
  pjCustomResourceFlag7 = $0C400085;
  pjCustomResourceFlag8 = $0C400086;
  pjCustomResourceFlag9 = $0C400087;
  pjCustomResourceFlag11 = $0C4000C3;
  pjCustomResourceFlag12 = $0C4000C4;
  pjCustomResourceFlag13 = $0C4000C5;
  pjCustomResourceFlag14 = $0C4000C6;
  pjCustomResourceFlag15 = $0C4000C7;
  pjCustomResourceFlag16 = $0C4000C8;
  pjCustomResourceFlag17 = $0C4000C9;
  pjCustomResourceFlag18 = $0C4000CA;
  pjCustomResourceFlag19 = $0C4000CB;
  pjCustomResourceFlag20 = $0C4000CC;
  pjCustomResourceDate1 = $0C4000AD;
  pjCustomResourceDate2 = $0C4000AE;
  pjCustomResourceDate3 = $0C4000AF;
  pjCustomResourceDate4 = $0C4000B0;
  pjCustomResourceDate5 = $0C4000B1;
  pjCustomResourceDate6 = $0C4000B2;
  pjCustomResourceDate7 = $0C4000B3;
  pjCustomResourceDate8 = $0C4000B4;
  pjCustomResourceDate9 = $0C4000B5;
  pjCustomResourceDate10 = $0C4000B6;
  pjCustomResourceOutlineCode1 = $0C400116;
  pjCustomResourceOutlineCode2 = $0C400118;
  pjCustomResourceOutlineCode3 = $0C40011A;
  pjCustomResourceOutlineCode4 = $0C40011C;
  pjCustomResourceOutlineCode5 = $0C40011E;
  pjCustomResourceOutlineCode6 = $0C400120;
  pjCustomResourceOutlineCode7 = $0C400122;
  pjCustomResourceOutlineCode8 = $0C400124;
  pjCustomResourceOutlineCode9 = $0C400126;
  pjCustomResourceOutlineCode10 = $0C400128;

// Constants for enum PjCustomFieldAttribute
type
  PjCustomFieldAttribute = TOleEnum;
const
  pjFieldAttributeNone = $00000000;
  pjFieldAttributeFormula = $00000001;
  pjFieldAttributeValueList = $00000002;

// Constants for enum PjSummaryCalc
type
  PjSummaryCalc = TOleEnum;
const
  pjCalcNone = $0000000A;
  pjCalcFormula = $0000000B;
  pjCalcRollupAverage = $00000004;
  pjCalcRollupAverageFirstSublevel = $00000005;
  pjCalcRollupCountAll = $00000002;
  pjCalcRollupCountFirstSublevel = $00000006;
  pjCalcRollupCountNonsummaries = $00000007;
  pjCalcRollupMax = $00000000;
  pjCalcRollupMin = $00000001;
  pjCalcRollupAnd = $00000001;
  pjCalcRollupOr = $00000000;
  pjCalcRollupSum = $00000003;

// Constants for enum PjCriteriaList
type
  PjCriteriaList = TOleEnum;
const
  pjCriteriaNonSummary = $00000000;
  pjCriteriaSummary = $00000001;
  pjCriteriaProjectSummary = $00000002;

// Constants for enum PjIndicator
type
  PjIndicator = TOleEnum;
const
  pjIndicatorNone = $00000000;
  pjIndicatorSphereLime = $00000001;
  pjIndicatorSphereYellow = $00000002;
  pjIndicatorSphereRed = $00000003;
  pjIndicatorSphereBlack = $00000004;
  pjIndicatorSphereWhite = $00000005;
  pjIndicatorSphereAqua = $00000006;
  pjIndicatorSphereGreen = $00000007;
  pjIndicatorSphereBlue = $00000008;
  pjIndicatorSphereFuschia = $00000009;
  pjIndicatorSpherePurple = $0000000A;
  pjIndicatorSphereMaroon = $0000000B;
  pjIndicatorSphereGray = $0000000C;
  pjIndicatorSphereSilver = $0000000D;
  pjIndicatorFlagLime = $0000000E;
  pjIndicatorFlagYellow = $0000000F;
  pjIndicatorFlagRed = $00000010;
  pjIndicatorFlagWhite = $00000011;
  pjIndicatorFlagAqua = $00000012;
  pjIndicatorFlagBlue = $00000013;
  pjIndicatorFlagFuschia = $00000014;
  pjIndicatorFlagSilver = $00000015;
  pjIndicatorSquareLime = $00000016;
  pjIndicatorSquareYellow = $00000017;
  pjIndicatorSquareRed = $00000018;
  pjIndicatorSquareBlack = $00000019;
  pjIndicatorSquareWhite = $0000001A;
  pjIndicatorPlusLime = $0000001B;
  pjIndicatorPlusYellow = $0000001C;
  pjIndicatorPlusRed = $0000001D;
  pjIndicatorPlusBlack = $0000001E;
  pjIndicatorPlusWhite = $0000001F;
  pjIndicatorMinusLime = $00000020;
  pjIndicatorMinusYellow = $00000021;
  pjIndicatorMinusRed = $00000022;
  pjIndicatorMinusBlack = $00000023;
  pjIndicatorMinusWhite = $00000024;
  pjIndicatorDiamondLime = $00000025;
  pjIndicatorDiamondYellow = $00000026;
  pjIndicatorDiamondRed = $00000027;
  pjIndicatorArrowLeft = $00000028;
  pjIndicatorArrowRight = $00000029;
  pjIndicatorArrowDouble = $0000002A;
  pjIndicatorArrowUp = $0000002B;
  pjIndicatorArrowDown = $0000002C;
  pjIndicatorCircleSolidFill = $0000002D;
  pjIndicatorCircleBottomFill = $0000002E;
  pjIndicatorCircleLeftFill = $0000002F;
  pjIndicatorCircleTopFill = $00000030;
  pjIndicatorCircleRightFill = $00000031;
  pjIndicatorCircleRoundFill = $00000032;
  pjIndicatorCircleHollow = $00000033;
  pjIndicatorLightBulbOff = $00000034;
  pjIndicatorLightBulbOn = $00000035;
  pjIndicatorCheckMark = $00000036;
  pjIndicatorDeleteMark = $00000037;
  pjIndicatorQuestionMark = $00000038;
  pjIndicatorClock = $00000039;
  pjIndicatorPushPin = $0000003A;
  pjIndicatorFaceHappyYellow = $0000003B;
  pjIndicatorFaceHappyLime = $0000003C;
  pjIndicatorFaceStraightYellow = $0000003D;
  pjIndicatorFaceStraightAqua = $0000003E;
  pjIndicatorFaceSadYellow = $0000003F;
  pjIndicatorFaceSadRed = $00000040;
  pjIndicatorDashGray = $00000041;

// Constants for enum PjComparison
type
  PjComparison = TOleEnum;
const
  pjCompareAnyValue = $0000000B;
  pjCompareEquals = $00000005;
  pjCompareNotEqual = $00000006;
  pjCompareGreaterThan = $00000001;
  pjCompareGreaterThanOrEqual = $00000003;
  pjCompareLessThan = $00000002;
  pjCompareLessThanOrEqual = $00000004;
  pjCompareWithin = $00000000;
  pjCompareNotWithin = $00000008;
  pjCompareContains = $00000007;
  pjCompareNotContains = $00000009;
  pjCompareContainsExactly = $0000000A;

// Constants for enum PjListOrder
type
  PjListOrder = TOleEnum;
const
  pjListOrderDefault = $00000000;
  pjListOrderAscending = $00000001;
  pjListOrderDescending = $00000002;

// Constants for enum PjValueListItem
type
  PjValueListItem = TOleEnum;
const
  pjValueListValue = $00000000;
  pjValueListDescription = $00000001;
  pjValueListPhonetics = $00000002;

// Constants for enum PjFileFormat
type
  PjFileFormat = TOleEnum;
const
  pjMPP = $00000000;
  pjTXT = $00000003;
  pjCSV = $00000004;
  pjXLS = $00000005;
  pjMPT = $0000000B;

// Constants for enum PjFillPattern
type
  PjFillPattern = TOleEnum;
const
  pjHollowPattern = $00000000;
  pjSolidFillPattern = $00000001;
  pjLightFillPattern = $00000002;
  pjMediumFillPattern = $00000003;
  pjDarkFillPattern = $00000004;
  pjDiagonalLeftPattern = $00000005;
  pjDiagonalRightPattern = $00000006;
  pjDiagonalCrossPattern = $00000007;
  pjLineVerticalPattern = $00000008;
  pjLineHorizontalPattern = $00000009;
  pjLineCrossPattern = $0000000A;

// Constants for enum PjFormatUnit
type
  PjFormatUnit = TOleEnum;
const
  pjMinutes = $00000003;
  pjHours = $00000005;
  pjDays = $00000007;
  pjWeeks = $00000009;
  pjMonths = $0000000B;
  pjElapsedMinutes = $00000004;
  pjElapsedHours = $00000006;
  pjElapsedDays = $00000008;
  pjElapsedWeeks = $0000000A;
  pjElapsedMonths = $0000000C;
  pjMinutesEstimated = $00000023;
  pjHoursEstimated = $00000025;
  pjDaysEstimated = $00000027;
  pjWeeksEstimated = $00000029;
  pjMonthsEstimated = $00000031;
  pjElapsedMinutesEstimated = $00000024;
  pjElapsedHoursEstimated = $00000026;
  pjElapsedDaysEstimated = $00000028;
  pjElapsedWeeksEstimated = $00000030;
  pjElapsedMonthsEstimated = $00000032;

// Constants for enum PjGanttBarLink
type
  PjGanttBarLink = TOleEnum;
const
  pjNoGanttBarLinks = $00000000;
  pjToTop = $00000001;
  pjToEnd = $00000002;

// Constants for enum PjLegend
type
  PjLegend = TOleEnum;
const
  pjNoLegend = $00000000;
  pjAfterLastPage = $00000001;
  pjOnEveryPage = $00000002;

// Constants for enum PjLevelOrder
type
  PjLevelOrder = TOleEnum;
const
  pjLevelID = $00000000;
  pjLevelStandard = $00000001;
  pjLevelPriority = $00000002;

// Constants for enum PjCostRateTable
type
  PjCostRateTable = TOleEnum;
const
  pjCostRateTableA = $00000000;
  pjCostRateTableB = $00000001;
  pjCostRateTableC = $00000002;
  pjCostRateTableD = $00000003;
  pjCostRateTableE = $00000004;

// Constants for enum PjLevelPeriodBasis
type
  PjLevelPeriodBasis = TOleEnum;
const
  pjMinuteByMinute = $00000000;
  pjHourByHour = $00000001;
  pjDayByDay = $00000002;
  pjWeekByWeek = $00000003;
  pjMonthByMonth = $00000004;

// Constants for enum PjMailField
type
  PjMailField = TOleEnum;
const
  pjMailTaskContact = $0B400070;
  pjMailTaskCost = $0B400005;
  pjMailTaskCost1 = $0B40006A;
  pjMailTaskCost10 = $0B400108;
  pjMailTaskCost2 = $0B40006B;
  pjMailTaskCost3 = $0B40006C;
  pjMailTaskCost4 = $0B400102;
  pjMailTaskCost5 = $0B400103;
  pjMailTaskCost6 = $0B400104;
  pjMailTaskCost7 = $0B400105;
  pjMailTaskCost8 = $0B400106;
  pjMailTaskCost9 = $0B400107;
  pjMailTaskCritical = $0B400013;
  pjMailTaskDate1 = $0B400109;
  pjMailTaskDate10 = $0B400112;
  pjMailTaskDate2 = $0B40010A;
  pjMailTaskDate3 = $0B40010B;
  pjMailTaskDate4 = $0B40010C;
  pjMailTaskDate5 = $0B40010D;
  pjMailTaskDate6 = $0B40010E;
  pjMailTaskDate7 = $0B40010F;
  pjMailTaskDate8 = $0B400110;
  pjMailTaskDate9 = $0B400111;
  pjMailTaskDuration = $0B40001D;
  pjMailTaskDuration1 = $0B400067;
  pjMailTaskDuration10 = $0B400119;
  pjMailTaskDuration2 = $0B400068;
  pjMailTaskDuration3 = $0B400069;
  pjMailTaskDuration4 = $0B400113;
  pjMailTaskDuration5 = $0B400114;
  pjMailTaskDuration6 = $0B400115;
  pjMailTaskDuration7 = $0B400116;
  pjMailTaskDuration8 = $0B400117;
  pjMailTaskDuration9 = $0B400118;
  pjMailTaskEarlyFinish = $0B400026;
  pjMailTaskEarlyStart = $0B400025;
  pjMailTaskFinish1 = $0B400035;
  pjMailTaskFinish10 = $0B400123;
  pjMailTaskFinish2 = $0B400038;
  pjMailTaskFinish3 = $0B40003B;
  pjMailTaskFinish4 = $0B40003E;
  pjMailTaskFinish5 = $0B400041;
  pjMailTaskFinish6 = $0B40011B;
  pjMailTaskFinish7 = $0B40011D;
  pjMailTaskFinish8 = $0B40011F;
  pjMailTaskFinish9 = $0B400121;
  pjMailTaskFixedCost = $0B400008;
  pjMailTaskFlag1 = $0B400048;
  pjMailTaskFlag10 = $0B400051;
  pjMailTaskFlag11 = $0B400124;
  pjMailTaskFlag12 = $0B400125;
  pjMailTaskFlag13 = $0B400126;
  pjMailTaskFlag14 = $0B400127;
  pjMailTaskFlag15 = $0B400128;
  pjMailTaskFlag16 = $0B400129;
  pjMailTaskFlag17 = $0B40012A;
  pjMailTaskFlag18 = $0B40012B;
  pjMailTaskFlag19 = $0B40012C;
  pjMailTaskFlag2 = $0B400049;
  pjMailTaskFlag20 = $0B40012D;
  pjMailTaskFlag3 = $0B40004A;
  pjMailTaskFlag4 = $0B40004B;
  pjMailTaskFlag5 = $0B40004C;
  pjMailTaskFlag6 = $0B40004D;
  pjMailTaskFlag7 = $0B40004E;
  pjMailTaskFlag8 = $0B40004F;
  pjMailTaskFlag9 = $0B400050;
  pjMailTaskFreeSlack = $0B400015;
  pjMailTaskLateFinish = $0B400028;
  pjMailTaskLateStart = $0B400027;
  pjMailTaskMarked = $0B400047;
  pjMailTaskName = $0B40000E;
  pjMailTaskNumber1 = $0B400057;
  pjMailTaskNumber10 = $0B400132;
  pjMailTaskNumber11 = $0B400133;
  pjMailTaskNumber12 = $0B400134;
  pjMailTaskNumber13 = $0B400135;
  pjMailTaskNumber14 = $0B400136;
  pjMailTaskNumber15 = $0B400137;
  pjMailTaskNumber16 = $0B400138;
  pjMailTaskNumber17 = $0B400139;
  pjMailTaskNumber18 = $0B40013A;
  pjMailTaskNumber19 = $0B40013B;
  pjMailTaskNumber2 = $0B400058;
  pjMailTaskNumber20 = $0B40013C;
  pjMailTaskNumber3 = $0B400059;
  pjMailTaskNumber4 = $0B40005A;
  pjMailTaskNumber5 = $0B40005B;
  pjMailTaskNumber6 = $0B40012E;
  pjMailTaskNumber7 = $0B40012F;
  pjMailTaskNumber8 = $0B400130;
  pjMailTaskNumber9 = $0B400131;
  pjMailTaskPercentComplete = $0B400020;
  pjMailTaskPercentWorkComplete = $0B400021;
  pjMailTaskPriority = $0B400019;
  pjMailTaskProject = $0B400054;
  pjMailTaskResourceNames = $0B400031;
  pjMailTaskStart1 = $0B400034;
  pjMailTaskStart10 = $0B400122;
  pjMailTaskStart2 = $0B400037;
  pjMailTaskStart3 = $0B40003A;
  pjMailTaskStart4 = $0B40003D;
  pjMailTaskStart5 = $0B400040;
  pjMailTaskStart6 = $0B40011A;
  pjMailTaskStart7 = $0B40011C;
  pjMailTaskStart8 = $0B40011E;
  pjMailTaskStart9 = $0B400120;
  pjMailTaskText1 = $0B400033;
  pjMailTaskText10 = $0B400046;
  pjMailTaskText11 = $0B40013D;
  pjMailTaskText12 = $0B40013E;
  pjMailTaskText13 = $0B40013F;
  pjMailTaskText14 = $0B400140;
  pjMailTaskText15 = $0B400141;
  pjMailTaskText16 = $0B400142;
  pjMailTaskText17 = $0B400143;
  pjMailTaskText18 = $0B400144;
  pjMailTaskText19 = $0B400145;
  pjMailTaskText2 = $0B400036;
  pjMailTaskText20 = $0B400146;
  pjMailTaskText21 = $0B400147;
  pjMailTaskText22 = $0B400148;
  pjMailTaskText23 = $0B400149;
  pjMailTaskText24 = $0B40014A;
  pjMailTaskText25 = $0B40014B;
  pjMailTaskText26 = $0B40014C;
  pjMailTaskText27 = $0B40014D;
  pjMailTaskText28 = $0B40014E;
  pjMailTaskText29 = $0B40014F;
  pjMailTaskText3 = $0B400039;
  pjMailTaskText30 = $0B400150;
  pjMailTaskText4 = $0B40003C;
  pjMailTaskText5 = $0B40003F;
  pjMailTaskText6 = $0B400042;
  pjMailTaskText7 = $0B400043;
  pjMailTaskText8 = $0B400044;
  pjMailTaskText9 = $0B400045;
  pjMailTaskTotalSlack = $0B400016;
  pjMailTaskWBS = $0B400010;
  pjMailActualWork = $00008005;
  pjMailWork = $00008004;
  pjMailComments = $00008001;
  pjMailStart = $00008002;
  pjMailFinish = $00008003;

// Constants for enum PjMailSystem
type
  PjMailSystem = TOleEnum;
const
  pjNoMailSystem = $00000000;
  pjMAPI = $00000001;
  pjMAPICompatible = $00000002;

// Constants for enum PjMergeType
type
  PjMergeType = TOleEnum;
const
  pjDoNotMerge = $00000000;
  pjMerge = $00000001;
  pjPrompt = $00000002;
  pjAppend = $00000003;

// Constants for enum PjMessageType
type
  PjMessageType = TOleEnum;
const
  pjOKOnly = $00000000;
  pjOKCancel = $00000001;
  pjYesNo = $00000002;
  pjYesNoCancel = $00000003;

// Constants for enum PjMonthLabel
type
  PjMonthLabel = TOleEnum;
const
  pjMonthLabelMonth_mm = $00000039;
  pjMonthLabelMonth_mm_yy = $00000056;
  pjMonthLabelMonth_mm_yyy = $00000055;
  pjMonthLabelMonth_m = $0000000B;
  pjMonthLabelMonth_mmm = $0000000A;
  pjMonthLabelMonth_mmm_yyy = $00000008;
  pjMonthLabelMonth_mmmm = $00000009;
  pjMonthLabelMonth_mmmm_yyyy = $00000007;
  pjMonthLabelMonthFromEnd_mm = $0000003B;
  pjMonthLabelMonthFromEnd_Mmm = $0000003A;
  pjMonthLabelMonthFromEnd_Month_mm = $0000002D;
  pjMonthLabelMonthFromStart_mm = $0000003D;
  pjMonthLabelMonthFromStart_Mmm = $0000003C;
  pjMonthLabelMonthFromStart_Month_mm = $0000002C;
  pjMonthLabelNoDateFormat = $00000023;

// Constants for enum PjNonWorkingPlacement
type
  PjNonWorkingPlacement = TOleEnum;
const
  pjBehind = $00000000;
  pjInFront = $00000001;
  pjDoNotDraw = $00000002;

// Constants for enum PjYesNoAutomatic
type
  PjYesNoAutomatic = TOleEnum;
const
  pjNo = $00000000;
  pjYes = $00000001;
  pjAuto = $00000002;

// Constants for enum PjOrganizer
type
  PjOrganizer = TOleEnum;
const
  pjViews = $00000000;
  pjTables = $00000001;
  pjFilters = $00000002;
  pjModules = $00000003;
  pjReports = $00000004;
  pjCalendars = $00000005;
  pjToolbars = $00000006;
  pjMaps = $00000007;
  pjForms = $00000008;
  pjFields = $00000009;
  pjGroups = $0000000A;

// Constants for enum PjPageSetupCalendarItem
type
  PjPageSetupCalendarItem = TOleEnum;
const
  pjAllCalendarItems = $00000000;
  pjMonthlyTitles = $00000001;
  pjPreviousNextMonths = $00000002;
  pjAdditionalTasks = $00000003;

// Constants for enum PjPERTField
type
  PjPERTField = TOleEnum;
const
  pjPERTTaskWork = $0B400000;
  pjPERTTaskBaselineWork = $0B400001;
  pjPERTTaskActualWork = $0B400002;
  pjPERTTaskWorkVariance = $0B400003;
  pjPERTTaskRemainingWork = $0B400004;
  pjPERTTaskCost = $0B400005;
  pjPERTTaskBaselineCost = $0B400006;
  pjPERTTaskActualCost = $0B400007;
  pjPERTTaskFixedCost = $0B400008;
  pjPERTTaskCostVariance = $0B400009;
  pjPERTTaskRemainingCost = $0B40000A;
  pjPERTTaskBCWP = $0B40000B;
  pjPERTTaskBCWS = $0B40000C;
  pjPERTTaskSV = $0B40000D;
  pjPERTTaskName = $0B40000E;
  pjPERTTaskWBS = $0B400010;
  pjPERTTaskConstraintType = $0B400011;
  pjPERTTaskConstraintDate = $0B400012;
  pjPERTTaskCritical = $0B400013;
  pjPERTTaskLevelingDelay = $0B400014;
  pjPERTTaskFreeSlack = $0B400015;
  pjPERTTaskTotalSlack = $0B400016;
  pjPERTTaskID = $0B400017;
  pjPERTTaskMilestone = $0B400018;
  pjPERTTaskPriority = $0B400019;
  pjPERTTaskSubproject = $0B40001A;
  pjPERTTaskBaselineDuration = $0B40001B;
  pjPERTTaskActualDuration = $0B40001C;
  pjPERTTaskDuration = $0B40001D;
  pjPERTTaskDurationVariance = $0B40001E;
  pjPERTTaskRemainingDuration = $0B40001F;
  pjPERTTaskPercentComplete = $0B400020;
  pjPERTTaskPercentWorkComplete = $0B400021;
  pjPERTTaskStart = $0B400023;
  pjPERTTaskFinish = $0B400024;
  pjPERTTaskEarlyStart = $0B400025;
  pjPERTTaskEarlyFinish = $0B400026;
  pjPERTTaskLateStart = $0B400027;
  pjPERTTaskLateFinish = $0B400028;
  pjPERTTaskActualStart = $0B400029;
  pjPERTTaskActualFinish = $0B40002A;
  pjPERTTaskBaselineStart = $0B40002B;
  pjPERTTaskBaselineFinish = $0B40002C;
  pjPERTTaskStartVariance = $0B40002D;
  pjPERTTaskFinishVariance = $0B40002E;
  pjPERTTaskPredecessors = $0B40002F;
  pjPERTTaskSuccessors = $0B400030;
  pjPERTTaskResourceNames = $0B400031;
  pjPERTTaskResourceInitials = $0B400032;
  pjPERTTaskText1 = $0B400033;
  pjPERTTaskStart1 = $0B400034;
  pjPERTTaskFinish1 = $0B400035;
  pjPERTTaskText2 = $0B400036;
  pjPERTTaskStart2 = $0B400037;
  pjPERTTaskFinish2 = $0B400038;
  pjPERTTaskText3 = $0B400039;
  pjPERTTaskStart3 = $0B40003A;
  pjPERTTaskFinish3 = $0B40003B;
  pjPERTTaskText4 = $0B40003C;
  pjPERTTaskStart4 = $0B40003D;
  pjPERTTaskFinish4 = $0B40003E;
  pjPERTTaskText5 = $0B40003F;
  pjPERTTaskStart5 = $0B400040;
  pjPERTTaskFinish5 = $0B400041;
  pjPERTTaskText6 = $0B400042;
  pjPERTTaskText7 = $0B400043;
  pjPERTTaskText8 = $0B400044;
  pjPERTTaskText9 = $0B400045;
  pjPERTTaskText10 = $0B400046;
  pjPERTTaskMarked = $0B400047;
  pjPERTTaskFlag1 = $0B400048;
  pjPERTTaskFlag2 = $0B400049;
  pjPERTTaskFlag3 = $0B40004A;
  pjPERTTaskFlag4 = $0B40004B;
  pjPERTTaskFlag5 = $0B40004C;
  pjPERTTaskFlag6 = $0B40004D;
  pjPERTTaskFlag7 = $0B40004E;
  pjPERTTaskFlag8 = $0B40004F;
  pjPERTTaskFlag9 = $0B400050;
  pjPERTTaskFlag10 = $0B400051;
  pjPERTTaskRollup = $0B400052;
  pjPERTTaskCV = $0B400053;
  pjPERTTaskProject = $0B400054;
  pjPERTTaskOutlineLevel = $0B400055;
  pjPERTTaskUniqueID = $0B400056;
  pjPERTTaskNumber1 = $0B400057;
  pjPERTTaskNumber2 = $0B400058;
  pjPERTTaskNumber3 = $0B400059;
  pjPERTTaskNumber4 = $0B40005A;
  pjPERTTaskNumber5 = $0B40005B;
  pjPERTTaskSummary = $0B40005C;
  pjPERTTaskCreated = $0B40005D;
  pjPERTTaskSheetNotes = $0B40005E;
  pjPERTTaskUniquePredecessors = $0B40005F;
  pjPERTTaskUniqueSuccessors = $0B400060;
  pjPERTTaskObjects = $0B400061;
  pjPERTTaskLinkedFields = $0B400062;
  pjPERTTaskResume = $0B400063;
  pjPERTTaskStop = $0B400064;
  pjPERTTaskOutlineNumber = $0B400066;
  pjPERTTaskDuration1 = $0B400067;
  pjPERTTaskDuration2 = $0B400068;
  pjPERTTaskDuration3 = $0B400069;
  pjPERTTaskCost1 = $0B40006A;
  pjPERTTaskCost2 = $0B40006B;
  pjPERTTaskCost3 = $0B40006C;
  pjPERTTaskHideBar = $0B40006D;
  pjPERTTaskConfirmed = $0B40006E;
  pjPERTTaskUpdateNeeded = $0B40006F;
  pjPERTTaskContact = $0B400070;
  pjPERTTaskResourceGroup = $0B400071;
  pjPERTTaskACWP = $0B400078;
  pjPERTTaskType = $0B400080;
  pjPERTTaskRecurring = $0B400081;
  pjPERTTaskEffortDriven = $0B400084;
  pjPERTTaskOvertimeWork = $0B4000A3;
  pjPERTTaskActualOvertimeWork = $0B4000A4;
  pjPERTTaskRemainingOvertimeWork = $0B4000A5;
  pjPERTTaskRegularWork = $0B4000A6;
  pjPERTTaskOvertimeCost = $0B4000A8;
  pjPERTTaskActualOvertimeCost = $0B4000A9;
  pjPERTTaskRemainingOvertimeCost = $0B4000AA;
  pjPERTTaskFixedCostAccrual = $0B4000C8;
  pjPERTTaskHyperlink = $0B4000D9;
  pjPERTTaskHyperlinkAddress = $0B4000DA;
  pjPERTTaskHyperlinkSubAddress = $0B4000DB;
  pjPERTTaskHyperlinkHref = $0B4000DC;
  pjPERTTaskIsAssn = $0B4000E0;
  pjPERTTaskOverallocated = $0B4000E1;
  pjPERTTaskExternalTask = $0B4000E8;
  pjPERTTaskSubprojectReadOnly = $0B4000F6;
  pjPERTTaskResponsePending = $0B4000FA;
  pjPERTTaskTeamStatusPending = $0B4000FB;
  pjPERTTaskLevelingCanSplit = $0B4000FC;
  pjPERTTaskLevelAssignments = $0B4000FD;
  pjPERTTaskWorkContour = $0B400100;
  pjPERTTaskCost4 = $0B400102;
  pjPERTTaskCost5 = $0B400103;
  pjPERTTaskCost6 = $0B400104;
  pjPERTTaskCost7 = $0B400105;
  pjPERTTaskCost8 = $0B400106;
  pjPERTTaskCost9 = $0B400107;
  pjPERTTaskCost10 = $0B400108;
  pjPERTTaskDate1 = $0B400109;
  pjPERTTaskDate2 = $0B40010A;
  pjPERTTaskDate3 = $0B40010B;
  pjPERTTaskDate4 = $0B40010C;
  pjPERTTaskDate5 = $0B40010D;
  pjPERTTaskDate6 = $0B40010E;
  pjPERTTaskDate7 = $0B40010F;
  pjPERTTaskDate8 = $0B400110;
  pjPERTTaskDate9 = $0B400111;
  pjPERTTaskDate10 = $0B400112;
  pjPERTTaskDuration4 = $0B400113;
  pjPERTTaskDuration5 = $0B400114;
  pjPERTTaskDuration6 = $0B400115;
  pjPERTTaskDuration7 = $0B400116;
  pjPERTTaskDuration8 = $0B400117;
  pjPERTTaskDuration9 = $0B400118;
  pjPERTTaskDuration10 = $0B400119;
  pjPERTTaskStart6 = $0B40011A;
  pjPERTTaskFinish6 = $0B40011B;
  pjPERTTaskStart7 = $0B40011C;
  pjPERTTaskFinish7 = $0B40011D;
  pjPERTTaskStart8 = $0B40011E;
  pjPERTTaskFinish8 = $0B40011F;
  pjPERTTaskStart9 = $0B400120;
  pjPERTTaskFinish9 = $0B400121;
  pjPERTTaskStart10 = $0B400122;
  pjPERTTaskFinish10 = $0B400123;
  pjPERTTaskFlag11 = $0B400124;
  pjPERTTaskFlag12 = $0B400125;
  pjPERTTaskFlag13 = $0B400126;
  pjPERTTaskFlag14 = $0B400127;
  pjPERTTaskFlag15 = $0B400128;
  pjPERTTaskFlag16 = $0B400129;
  pjPERTTaskFlag17 = $0B40012A;
  pjPERTTaskFlag18 = $0B40012B;
  pjPERTTaskFlag19 = $0B40012C;
  pjPERTTaskFlag20 = $0B40012D;
  pjPERTTaskNumber6 = $0B40012E;
  pjPERTTaskNumber7 = $0B40012F;
  pjPERTTaskNumber8 = $0B400130;
  pjPERTTaskNumber9 = $0B400131;
  pjPERTTaskNumber10 = $0B400132;
  pjPERTTaskNumber11 = $0B400133;
  pjPERTTaskNumber12 = $0B400134;
  pjPERTTaskNumber13 = $0B400135;
  pjPERTTaskNumber14 = $0B400136;
  pjPERTTaskNumber15 = $0B400137;
  pjPERTTaskNumber16 = $0B400138;
  pjPERTTaskNumber17 = $0B400139;
  pjPERTTaskNumber18 = $0B40013A;
  pjPERTTaskNumber19 = $0B40013B;
  pjPERTTaskNumber20 = $0B40013C;
  pjPERTTaskText11 = $0B40013D;
  pjPERTTaskText12 = $0B40013E;
  pjPERTTaskText13 = $0B40013F;
  pjPERTTaskText14 = $0B400140;
  pjPERTTaskText15 = $0B400141;
  pjPERTTaskText16 = $0B400142;
  pjPERTTaskText17 = $0B400143;
  pjPERTTaskText18 = $0B400144;
  pjPERTTaskText19 = $0B400145;
  pjPERTTaskText20 = $0B400146;
  pjPERTTaskText21 = $0B400147;
  pjPERTTaskText22 = $0B400148;
  pjPERTTaskText23 = $0B400149;
  pjPERTTaskText24 = $0B40014A;
  pjPERTTaskText25 = $0B40014B;
  pjPERTTaskText26 = $0B40014C;
  pjPERTTaskText27 = $0B40014D;
  pjPERTTaskText28 = $0B40014E;
  pjPERTTaskText29 = $0B40014F;
  pjPERTTaskText30 = $0B400150;
  pjPERTTaskResourcePhonetics = $0B40015D;
  pjPERTTaskAssignmentDelay = $0B40016E;
  pjPERTTaskAssignmentUnits = $0B40016F;
  pjPERTTaskCostRateTable = $0B400170;
  pjPERTTaskPreLeveledStart = $0B400171;
  pjPERTTaskPreLeveledFinish = $0B400172;
  pjPERTTaskEstimated = $0B40018C;
  pjPERTTaskIgnoreResourceCalendar = $0B40018F;
  pjPERTTaskCalendar = $0B400192;
  pjPERTTaskOutlineCode1 = $0B4001A0;
  pjPERTTaskOutlineCode2 = $0B4001A2;
  pjPERTTaskOutlineCode3 = $0B4001A4;
  pjPERTTaskOutlineCode4 = $0B4001A6;
  pjPERTTaskOutlineCode5 = $0B4001A8;
  pjPERTTaskOutlineCode6 = $0B4001AA;
  pjPERTTaskOutlineCode7 = $0B4001AC;
  pjPERTTaskOutlineCode8 = $0B4001AE;
  pjPERTTaskOutlineCode9 = $0B4001B0;
  pjPERTTaskOutlineCode10 = $0B4001B2;
  pjPERTTaskDeadline = $0B4001B5;
  pjPERTTaskStartSlack = $0B4001B6;
  pjPERTTaskFinishSlack = $0B4001B7;
  pjPERTTaskVAC = $0B4001B9;
  pjPERTTaskGroupBySummary = $0B4001BE;
  pjPERTTaskWBSPredecessors = $0B4001C1;
  pjPERTTaskWBSSuccessors = $0B4001C2;
  pjPERTTaskResourceType = $0B4001C3;
  pjPERTTaskNotes = $0B40000F;

// Constants for enum PjPERTBoxSize
type
  PjPERTBoxSize = TOleEnum;
const
  pjIDOnly = $00000000;
  pjSmall = $00000001;
  pjMedium = $00000002;
  pjLarge = $00000003;

// Constants for enum PjPERTBoxStyle
type
  PjPERTBoxStyle = TOleEnum;
const
  pjPlainBox = $00000000;
  pjThickBox = $00000001;
  pjShadowBox = $00000002;
  pjDottedBox = $00000003;
  pjFrame = $00000004;
  pjGrayFrame = $00000005;
  pjPatternFrame = $00000006;
  pjMarquee = $00000007;

// Constants for enum PjPlacement
type
  PjPlacement = TOleEnum;
const
  pjBefore = $00000000;
  pjAfter = $00000001;
  pjBeforeWithSpace = $00000002;
  pjAfterWithSpace = $00000003;

// Constants for enum PjPoolAction
type
  PjPoolAction = TOleEnum;
const
  pjPoolTakesPrecedence = $00000001;
  pjSharersTakePrecedence = $00000002;
  pjOpenSharer = $00000003;
  pjOpenAllSharers = $00000004;
  pjUnlinkSharer = $00000005;

// Constants for enum PjPriority
type
  PjPriority = TOleEnum;
const
  pjPriorityDoNotLevel = $00000009;
  pjPriorityHighest = $00000008;
  pjPriorityVeryHigh = $00000007;
  pjPriorityHigher = $00000006;
  pjPriorityHigh = $00000005;
  pjPriorityMedium = $00000004;
  pjPriorityLow = $00000003;
  pjPriorityLower = $00000002;
  pjPriorityVeryLow = $00000001;
  pjPriorityLowest = $00000000;

// Constants for enum PjProjectUpdate
type
  PjProjectUpdate = TOleEnum;
const
  pj0or100Percent = $00000000;
  pj0to100Percent = $00000001;
  pjReschedule = $00000002;

// Constants for enum PjPublishAction
type
  PjPublishAction = TOleEnum;
const
  pjCancel = $00000001;
  pjSendPublisher = $00000002;

// Constants for enum PjEditionUpdate
type
  PjEditionUpdate = TOleEnum;
const
  pjAutomaticUpdate = $00000004;
  pjManualUpdate = $00000005;

// Constants for enum PjResAssignOperation
type
  PjResAssignOperation = TOleEnum;
const
  pjAssign = $00000000;
  pjRemove = $00000001;
  pjReplace = $00000002;
  pjChange = $00000003;

// Constants for enum PjResourceGraphStyle
type
  PjResourceGraphStyle = TOleEnum;
const
  pjBar = $00000000;
  pjArea = $00000001;
  pjStep = $00000002;
  pjLineGraph = $00000003;
  pjStepLine = $00000004;
  pjDoNotShow = $00000005;

// Constants for enum PjSaveType
type
  PjSaveType = TOleEnum;
const
  pjDoNotSave = $00000000;
  pjSave = $00000001;
  pjPromptSave = $00000002;

// Constants for enum PjSaveBaselineFrom
type
  PjSaveBaselineFrom = TOleEnum;
const
  pjCopyCurrent = $00000000;
  pjCopyBaseline = $00000001;
  pjCopyStart_Finish1 = $00000002;
  pjCopyStart_Finish2 = $00000003;
  pjCopyStart_Finish3 = $00000004;
  pjCopyStart_Finish4 = $00000005;
  pjCopyStart_Finish5 = $00000006;
  pjCopyStart_Finish6 = $00000007;
  pjCopyStart_Finish7 = $00000008;
  pjCopyStart_Finish8 = $00000009;
  pjCopyStart_Finish9 = $0000000A;
  pjCopyStart_Finish10 = $0000000B;

// Constants for enum PjSaveBaselineTo
type
  PjSaveBaselineTo = TOleEnum;
const
  pjIntoBaseline = $00000000;
  pjIntoStart_Finish1 = $00000001;
  pjIntoStart_Finish2 = $00000002;
  pjIntoStart_Finish3 = $00000003;
  pjIntoStart_Finish4 = $00000004;
  pjIntoStart_Finish5 = $00000005;
  pjIntoStart_Finish6 = $00000006;
  pjIntoStart_Finish7 = $00000007;
  pjIntoStart_Finish8 = $00000008;
  pjIntoStart_Finish9 = $00000009;
  pjIntoStart_Finish10 = $0000000A;

// Constants for enum PjScheduleProjectFrom
type
  PjScheduleProjectFrom = TOleEnum;
const
  pjProjectStart = $00000001;
  pjProjectFinish = $00000002;

// Constants for enum PjViewScreen
type
  PjViewScreen = TOleEnum;
const
  pjGantt = $00000001;
  pjNetworkDiagram = $00000002;
  pjRelationshipDiagram = $00000003;
  pjTaskForm = $00000004;
  pjTaskSheet = $00000005;
  pjResourceForm = $00000006;
  pjResourceSheet = $00000007;
  pjResourceGraph = $00000008;
  pjTaskDetailsForm = $0000000A;
  pjTaskNameForm = $0000000B;
  pjResourceNameForm = $0000000C;
  pjCalendar = $0000000D;
  pjTaskUsage = $0000000E;
  pjResourceUsage = $0000000F;

// Constants for enum PjShape
type
  PjShape = TOleEnum;
const
  pjOLEObject = $00000001;
  pjLine = $00000002;
  pjArrow = $00000003;
  pjRectangle = $00000004;
  pjEllipse = $00000005;
  pjArc = $00000006;
  pjPolygon = $00000007;
  pjTextBox = $00000008;

// Constants for enum PjSubscribeAction
type
  PjSubscribeAction = TOleEnum;
const
  pjCancelSubscribe = $00000001;
  pjUpdateSubscriber = $00000002;

// Constants for enum PjSubscribeFormat
type
  PjSubscribeFormat = TOleEnum;
const
  pjSubscribeToText = $00000001;
  pjSubscribeToPicture = $00000002;

// Constants for enum PjTaskLinkType
type
  PjTaskLinkType = TOleEnum;
const
  pjFinishToFinish = $00000000;
  pjFinishToStart = $00000001;
  pjStartToFinish = $00000002;
  pjStartToStart = $00000003;

// Constants for enum PjTaskFixedType
type
  PjTaskFixedType = TOleEnum;
const
  pjFixedUnits = $00000000;
  pjFixedDuration = $00000001;
  pjFixedWork = $00000002;

// Constants for enum PjWorkContourType
type
  PjWorkContourType = TOleEnum;
const
  pjFlat = $00000000;
  pjBackLoaded = $00000001;
  pjFrontLoaded = $00000002;
  pjDoublePeak = $00000003;
  pjEarlyPeak = $00000004;
  pjLatePeak = $00000005;
  pjBell = $00000006;
  pjTurtle = $00000007;
  pjContour = $00000008;

// Constants for enum PjInformationTab
type
  PjInformationTab = TOleEnum;
const
  pjTaskGeneralTab = $00000000;
  pjTaskPredecessorsTab = $00000001;
  pjTaskResourcesTab = $00000002;
  pjTaskAdvancedTab = $00000003;
  pjTaskNotesTab = $00000004;
  pjResourceGeneralTab = $00000000;
  pjResourceWorkingTimeTab = $00000001;
  pjResourceCostsTab = $00000002;
  pjResourceNotesTab = $00000003;
  pjAssignmentGeneralTab = $00000000;
  pjAssignmentTrackingTab = $00000001;
  pjAssignmentNotesTab = $00000002;

// Constants for enum PjTextItem
type
  PjTextItem = TOleEnum;
const
  pjAll = $00000000;
  pjNoncritical = $00000001;
  pjCritical = $00000002;
  pjMilestone = $00000003;
  pjSummary = $00000004;
  pjProjectSummary = $00000005;
  pjMarked = $00000006;
  pjTaskFilterHighlight = $00000007;
  pjTaskRowColumnTitles = $00000008;
  pjGanttMajorTimescale = $00000009;
  pjGanttMinorTimescale = $0000000A;
  pjGanttExternalTask = $00000010;
  pjBarTextLeft = $0000000B;
  pjBarTextRight = $0000000C;
  pjBarTextTop = $0000000D;
  pjBarTextBottom = $0000000E;
  pjBarTextInside = $0000000F;
  pjCalendarMonthlyTitles = $00000008;
  pjCalendarExternalTask = $00000011;
  pjDailyTitles = $00000009;
  pjWeeklyTitles = $0000000A;
  pjMonthPreviews = $0000000B;
  pjDateBoxTopRight = $0000000C;
  pjDateBoxTopLeft = $0000000D;
  pjDateBoxBottomRight = $0000000E;
  pjDateBoxBottomLeft = $0000000F;
  pjTaskSheetExternalTask = $00000009;
  pjTaskUsageExternalTask = $0000000B;
  pjAllocated = $00000001;
  pjOverallocated = $00000002;
  pjGraphMajorTimescale = $00000003;
  pjGraphMinorTimescale = $00000004;
  pjTickLabels = $00000005;
  pjLegendLabels = $00000006;
  pjResourceFilterHighlight = $00000003;
  pjResourceRowColumnTitles = $00000004;
  pjTaskUsageAssignmentRow = $00000009;
  pjTaskMajorTimescale = $0000000A;
  pjTaskMinorTimescale = $0000000B;
  pjResourceUsageAssignmentRow = $00000005;
  pjResourceMajorTimescale = $00000006;
  pjResourceMinorTimescale = $00000007;

// Constants for enum PjTimescaledData
type
  PjTimescaledData = TOleEnum;
const
  pjWork = $00000000;
  pjCost = $00000001;
  pjCumulativeWork = $00000002;
  pjCumulativeCost = $00000003;
  pjActualWork = $00000004;
  pjActualOvertimeWork = $00000005;
  pjOvertimeWork = $00000006;
  pjBaselineWork = $00000007;
  pjOverallocation = $00000008;
  pjFixedCost = $00000009;
  pjActualCost = $0000000A;
  pjBaselineCost = $0000000B;
  pjRegularWork = $0000000C;
  pjBCWS = $0000000D;
  pjBCWP = $0000000E;
  pjACWP = $0000000F;
  pjSV = $00000010;
  pjCV = $00000011;
  pjPercentAllocation = $00000012;
  pjPeakUnits = $00000013;
  pjRemainingAvailability = $00000014;
  pjPctComplete = $00000015;
  pjCumPctComplete = $00000016;
  pjAllTaskRows = $00000017;
  pjAllResourceRows = $00000017;
  pjAllAssignmentRows = $00000018;
  pjUnitAvailability = $00000019;
  pjWorkAvailability = $0000001A;

// Constants for enum PjTimescaleUnit
type
  PjTimescaleUnit = TOleEnum;
const
  pjTimescaleYears = $00000000;
  pjTimescaleQuarters = $00000001;
  pjTimescaleMonths = $00000002;
  pjTimescaleWeeks = $00000003;
  pjTimescaleDays = $00000004;
  pjTimescaleHours = $00000005;
  pjTimescaleMinutes = $00000006;
  pjTimescaleThirdsOfMonths = $00000007;
  pjTimescaleHalfYears = $00000008;
  pjTimescaleNone = $000000FF;

// Constants for enum PjTaskTimescaledData
type
  PjTaskTimescaledData = TOleEnum;
const
  pjTaskTimescaledWork = $00000000;
  pjTaskTimescaledRegularWork = $000000A6;
  pjTaskTimescaledOvertimeWork = $000000A3;
  pjTaskTimescaledActualWork = $00000002;
  pjTaskTimescaledActualOvertimeWork = $000000A4;
  pjTaskTimescaledCumulativeWork = $000000B0;
  pjTaskTimescaledBaselineWork = $00000001;
  pjTaskTimescaledOverallocation = $000000A7;
  pjTaskTimescaledCost = $00000005;
  pjTaskTimescaledFixedCost = $00000008;
  pjTaskTimescaledActualCost = $00000007;
  pjTaskTimescaledBaselineCost = $00000006;
  pjTaskTimescaledCumulativeCost = $000000B1;
  pjTaskTimescaledBCWS = $0000000C;
  pjTaskTimescaledBCWP = $0000000B;
  pjTaskTimescaledACWP = $00000078;
  pjTaskTimescaledSV = $0000000D;
  pjTaskTimescaledCV = $00000053;
  pjTaskTimescaledPercentComplete = $00000020;
  pjTaskTimescaledCumulativePercentComplete = $000000F0;

// Constants for enum PjResourceTimescaledData
type
  PjResourceTimescaledData = TOleEnum;
const
  pjResourceTimescaledWork = $0000000D;
  pjResourceTimescaledRegularWork = $00000026;
  pjResourceTimescaledOvertimeWork = $00000010;
  pjResourceTimescaledActualWork = $0000000E;
  pjResourceTimescaledActualOvertimeWork = $00000027;
  pjResourceTimescaledCumulativeWork = $00000029;
  pjResourceTimescaledBaselineWork = $0000000F;
  pjResourceTimescaledOverallocation = $0000002A;
  pjResourceTimescaledPercentAllocation = $0000002B;
  pjResourceTimescaledPeakUnits = $0000001A;
  pjResourceTimescaledRemainingAvailability = $0000002C;
  pjResourceTimescaledCost = $0000000C;
  pjResourceTimescaledActualCost = $0000000B;
  pjResourceTimescaledBaselineCost = $00000011;
  pjResourceTimescaledCumulativeCost = $00000032;
  pjResourceTimescaledBCWS = $00000033;
  pjResourceTimescaledBCWP = $00000034;
  pjResourceTimescaledACWP = $00000035;
  pjResourceTimescaledSV = $00000036;
  pjResourceTimescaledCV = $0000010C;
  pjResourceTimescaledWorkAvailability = $0000002D;
  pjResourceTimescaledUnitAvailability = $00000004;

// Constants for enum PjAssignmentTimescaledData
type
  PjAssignmentTimescaledData = TOleEnum;
const
  pjAssignmentTimescaledWork = $00000008;
  pjAssignmentTimescaledRegularWork = $0000000B;
  pjAssignmentTimescaledOvertimeWork = $00000009;
  pjAssignmentTimescaledActualWork = $0000000A;
  pjAssignmentTimescaledActualOvertimeWork = $0000000D;
  pjAssignmentTimescaledCumulativeWork = $0000000F;
  pjAssignmentTimescaledBaselineWork = $00000010;
  pjAssignmentTimescaledOverallocation = $00000011;
  pjAssignmentTimescaledPercentAllocation = $00000012;
  pjAssignmentTimescaledPeakUnits = $00000013;
  pjAssignmentTimescaledCost = $0000001A;
  pjAssignmentTimescaledActualCost = $0000001C;
  pjAssignmentTimescaledBaselineCost = $00000020;
  pjAssignmentTimescaledCumulativeCost = $00000021;
  pjAssignmentTimescaledBCWS = $00000022;
  pjAssignmentTimescaledBCWP = $00000023;
  pjAssignmentTimescaledACWP = $00000024;
  pjAssignmentTimescaledSV = $00000025;
  pjAssignmentTimescaledCV = $000000F7;

// Constants for enum PjToolbarAction
type
  PjToolbarAction = TOleEnum;
const
  pjToggle = $00000001;
  pjDelete = $00000002;
  pjReset = $00000002;
  pjNew = $00000003;
  pjCopy = $00000004;
  pjRename = $00000005;
  pjShow = $00000006;
  pjHide = $00000007;

// Constants for enum PjUnit
type
  PjUnit = TOleEnum;
const
  pjMinute = $00000003;
  pjHour = $00000005;
  pjDay = $00000007;
  pjWeek = $00000009;
  pjMonthUnit = $0000000B;

// Constants for enum PjWeekday
type
  PjWeekday = TOleEnum;
const
  pjSunday = $00000001;
  pjMonday = $00000002;
  pjTuesday = $00000003;
  pjWednesday = $00000004;
  pjThursday = $00000005;
  pjFriday = $00000006;
  pjSaturday = $00000007;

// Constants for enum PjWeekLabel
type
  PjWeekLabel = TOleEnum;
const
  pjWeekLabelWeek_mm_dd = $00000011;
  pjWeekLabelWeek_mm_dd_yy = $00000010;
  pjWeekLabelWeek_m_dd = $00000059;
  pjWeekLabelWeek_mmm_dd = $0000000F;
  pjWeekLabelWeek_mmm_dd_yyy = $0000000D;
  pjWeekLabelWeek_mmmm_dd = $0000000E;
  pjWeekLabelWeek_mmmm_dd_yyyy = $0000000C;
  pjWeekLabelWeek_di_mm_dd = $0000005C;
  pjWeekLabelWeek_di_m_dd = $00000063;
  pjWeekLabelWeek_di_mmm_dd = $0000005F;
  pjWeekLabelWeek_ddi_mm_dd = $0000005B;
  pjWeekLabelWeek_ddi_m_dd = $00000062;
  pjWeekLabelWeek_ddi_mmm_dd = $0000005E;
  pjWeekLabelWeek_ddd_mm_dd = $0000005A;
  pjWeekLabelWeek_ddd_mm_dd_yy = $00000064;
  pjWeekLabelWeek_ddd_dd = $00000058;
  pjWeekLabelWeek_ddd_ww = $00000067;
  pjWeekLabelWeek_ddd_m_dd = $00000061;
  pjWeekLabelWeek_ddd_mmm_dd = $0000005D;
  pjWeekLabelWeek_ddd_mmm_dd_yyy = $00000065;
  pjWeekLabelWeek_ddd_mmmm_dd = $00000060;
  pjWeekLabelWeek_ddd_mmmm_dd_yyy = $00000066;
  pjWeekLabelWeekDayOfMonth_dd = $00000057;
  pjWeekLabelWeekFromEnd_ww = $00000044;
  pjWeekLabelWeekFromEnd_Www = $00000043;
  pjWeekLabelWeekFromEnd_Week_ww = $0000002B;
  pjWeekLabelWeekFromStart_ww = $00000046;
  pjWeekLabelWeekFromStart_Www = $00000045;
  pjWeekLabelWeekFromStart_Week_ww = $0000002A;
  pjWeekLabelWeekNumber_dd_ww = $00000068;
  pjWeekLabelWeekNumber_ww = $00000032;
  pjWeekLabelNoDateFormat = $00000023;

// Constants for enum PjWindowState
type
  PjWindowState = TOleEnum;
const
  pjNormal = $00000001;
  pjMinimized = $00000002;
  pjMaximized = $00000003;

// Constants for enum PjResourceGraphPattern
type
  PjResourceGraphPattern = TOleEnum;
const
  pjHollow = $00000000;
  pjSolidFill = $00000001;
  pjLightFill = $00000002;
  pjMediumFill = $00000003;
  pjDarkFill = $00000004;
  pjDiagonalLeft = $00000005;
  pjDiagonalRight = $00000006;
  pjDiagonalCross = $00000007;
  pjLineVertical = $00000008;
  pjLineHorizontal = $00000009;
  pjLineCross = $0000000A;
  pjNoGraphLine = $00000000;
  pjGraphContinuous = $00000001;
  pjGraphDash = $00000002;
  pjGraphDot = $00000003;
  pjDashDot = $00000004;
  pjDashDotDot = $00000005;

// Constants for enum PjLineType
type
  PjLineType = TOleEnum;
const
  pjNoLines = $00000000;
  pjDash = $00000004;
  pjCloseDot = $00000002;
  pjDot = $00000003;
  pjContinuous = $00000001;

// Constants for enum PjPasteSpecialType
type
  PjPasteSpecialType = TOleEnum;
const
  pjEmbedObject = $00000000;
  pjPicture = $00000001;
  pjTextData = $00000002;
  pjProjectData = $00000003;

// Constants for enum PjFieldType
type
  PjFieldType = TOleEnum;
const
  pjTask = $00000000;
  pjResource = $00000001;

// Constants for enum PjEnableCancelKey
type
  PjEnableCancelKey = TOleEnum;
const
  pjDisabled = $00000000;
  pjInterrupt = $00000001;
  pjErrorHandler = $00000002;

// Constants for enum PjPhoneticType
type
  PjPhoneticType = TOleEnum;
const
  pjKatakanaHalf = $00000000;
  pjKatakana = $00000001;
  pjHiragana = $00000002;

// Constants for enum PjAssignmentUnits
type
  PjAssignmentUnits = TOleEnum;
const
  pjPercentageAssignmentUnits = $00000000;
  pjDecimalAssignmentUnits = $00000001;

// Constants for enum PjPoolOpen
type
  PjPoolOpen = TOleEnum;
const
  pjPromptPool = $00000000;
  pjPoolReadOnly = $00000001;
  pjPoolReadWrite = $00000002;
  pjPoolAndSharers = $00000003;
  pjDoNotOpenPool = $00000004;

// Constants for enum PjOldConstants
type
  PjOldConstants = TOleEnum;
const
  pjUsageMinorTimescale = $00000007;
  pjUsageMajorTimescale = $00000006;
  pjMenuBars = $00000006;
  pjGeneralTab = $00000000;
  pjPredecessorsTab = $00000001;
  pjResourcesTab = $00000002;
  pjAdvancedTab = $00000003;
  pjNotesTab = $00000004;
  pjUsageProjectStart = $FFFFFFFF;
  pjUsageProjectFinish = $FFFFFFFF;
  pjUsageMajorColumns = $00000004;
  pjUsageMinorColumns = $00000004;
  pjMacMail = $00000004;
  pjSubscriber = $00000009;
  pjMPX4 = $0000000C;
  pjPERT = $00000002;
  pjTaskPERT = $00000003;

// Constants for enum PjCopyPictureFor
type
  PjCopyPictureFor = TOleEnum;
const
  pjScreen = $00000000;
  pjPrinter = $00000001;
  pjGIF = $00000002;

// Constants for enum PjIMEMode
type
  PjIMEMode = TOleEnum;
const
  pjIMEModeNoControl = $00000000;
  pjIMEModeOn = $00000001;
  pjIMEModeOff = $00000002;
  pjIMEModeDisable = $00000003;
  pjIMEModeHiragana = $00000004;
  pjIMEModeKatakana = $00000005;
  pjIMEModeKatakanaHalf = $00000006;
  pjIMEModeAlphaFull = $00000007;
  pjIMEModeAlpha = $00000008;
  pjIMEModeHangulFull = $00000009;
  pjIMEModeHangul = $0000000A;

// Constants for enum PjCopyPictureRows
type
  PjCopyPictureRows = TOleEnum;
const
  pjCopyOnScreen = $00000000;
  pjCopySelected = $00000001;

// Constants for enum PjWorkgroupMessages
type
  PjWorkgroupMessages = TOleEnum;
const
  pjDefaultMessages = $00000000;
  pjNoWorkgroupMessages = $00000001;
  pjWorkgroupViaEmail = $00000002;
  pjWorkgroupViaWeb = $00000003;
  pjWorkgroupViaEmailAndWeb = $00000004;

// Constants for enum PjImportMethods
type
  PjImportMethods = TOleEnum;
const
  pjImportNew = $00000000;
  pjImportAppend = $00000001;
  pjImportMerge = $00000002;

// Constants for enum PjTextFileOrigin
type
  PjTextFileOrigin = TOleEnum;
const
  pjTextOriginWin = $00000000;
  pjTextOriginDOS = $00000001;
  pjTextOriginMac = $00000002;
  pjTextOriginUnicode = $00000003;

// Constants for enum PjDataCategories
type
  PjDataCategories = TOleEnum;
const
  pjMapTasks = $00000000;
  pjMapResources = $00000001;
  pjMapAssignments = $00000002;

// Constants for enum PjTeamStatusCompletedWork
type
  PjTeamStatusCompletedWork = TOleEnum;
const
  pjTotalForEntirePeriod = $00000000;
  pjBrokenDownByDay = $00000001;
  pjBrokenDownByWeek = $00000002;

// Constants for enum PjMSApplication
type
  PjMSApplication = TOleEnum;
const
  pjMicrosoftWord = $00000000;
  pjMicrosoftPowerPoint = $00000001;
  pjMicrosoftMail = $00000002;
  pjMicrosoftAccess = $00000003;
  pjMicrosoftFoxPro = $00000004;
  pjMicrosoftExcel = $00000005;
  pjMicrosoftSchedulePlus = $00000006;

// Constants for enum PjWBSSequence
type
  PjWBSSequence = TOleEnum;
const
  pjWBSOrderedNumbers = $00000000;
  pjWBSOrderedUppercaseLetters = $00000001;
  pjWBSOrderedLowercaseLetters = $00000002;
  pjWBSUnorderedCharacters = $00000003;

// Constants for enum PjCustomOutlineCodeSequence
type
  PjCustomOutlineCodeSequence = TOleEnum;
const
  pjCustomOutlineCodeNumbers = $00000000;
  pjCustomOutlineCodeUppercaseLetters = $00000001;
  pjCustomOutlineCodeLowercaseLetters = $00000002;
  pjCustomOutlineCodeCharacters = $00000003;

// Constants for enum PjResourceTypes
type
  PjResourceTypes = TOleEnum;
const
  pjResourceTypeWork = $00000000;
  pjResourceTypeMaterial = $00000001;

// Constants for enum PjBoxStyle
type
  PjBoxStyle = TOleEnum;
const
  pjBoxCritical = $00000000;
  pjBoxNoncritical = $00000001;
  pjBoxCriticalMilestone = $00000002;
  pjBoxNoncriticalMilestone = $00000003;
  pjBoxCriticalSummary = $00000004;
  pjBoxNoncriticalSummary = $00000005;
  pjBoxCriticalInsertedProject = $00000006;
  pjBoxNoncriticalInsertedProject = $00000007;
  pjBoxCriticalMarked = $00000008;
  pjBoxNoncriticalMarked = $00000009;
  pjBoxCriticalExternalTask = $0000000A;
  pjBoxNoncriticalExternalTask = $0000000B;
  pjBoxProjectSummaryTask = $0000000C;
  pjBoxHighlightedTasks = $0000000D;

// Constants for enum PjBoxShape
type
  PjBoxShape = TOleEnum;
const
  pjBoxRectangle = $00000000;
  pjBoxWideRectangle = $00000001;
  pjBoxRoundedRectangle = $00000002;
  pjBoxWideRoundedRectangle = $00000003;
  pjBoxCapsule = $00000004;
  pjBoxPointedEnds = $00000005;
  pjBoxRightParallelogram = $00000006;
  pjBoxLeftParallelogram = $00000007;
  pjBoxUpTrapezoid = $00000008;
  pjBoxDownTrapezoid = $00000009;

// Constants for enum PjDataTemplate
type
  PjDataTemplate = TOleEnum;
const
  pjDataTemplateNew = $00000000;
  pjDataTemplateCopy = $00000001;
  pjDataTemplateRename = $00000002;
  pjDataTemplateDelete = $00000003;

// Constants for enum PjCell
type
  PjCell = TOleEnum;
const
  pjCell1_1 = $00000000;
  pjCell2_1 = $00000001;
  pjCell3_1 = $00000002;
  pjCell4_1 = $00000003;
  pjCell1_2 = $00000004;
  pjCell2_2 = $00000005;
  pjCell3_2 = $00000006;
  pjCell4_2 = $00000007;
  pjCell1_3 = $00000008;
  pjCell2_3 = $00000009;
  pjCell3_3 = $0000000A;
  pjCell4_3 = $0000000B;
  pjCell1_4 = $0000000C;
  pjCell2_4 = $0000000D;
  pjCell3_4 = $0000000E;
  pjCell4_4 = $0000000F;

// Constants for enum PjBoxSet
type
  PjBoxSet = TOleEnum;
const
  pjBoxAddToSelection = $00000000;
  pjBoxCreate = $00000001;
  pjBoxMoveAbsolute = $00000002;
  pjBoxMoveRelative = $00000003;
  pjBoxSelect = $00000004;
  pjBoxUnselect = $00000005;

// Constants for enum PjGroupOn
type
  PjGroupOn = TOleEnum;
const
  pjGroupOnEachValue = $00000000;
  pjGroupOnInterval = $00000001;
  pjGroupOnDateEachValue = $0000000A;
  pjGroupOnDateMinute = $0000000B;
  pjGroupOnDateHour = $0000000C;
  pjGroupOnDateDay = $0000000D;
  pjGroupOnDateWeek = $0000000E;
  pjGroupOnDateThirdOfMonth = $0000000F;
  pjGroupOnDateMonth = $00000010;
  pjGroupOnDateQtr = $00000011;
  pjGroupOnDateYear = $00000012;
  pjGroupOnDurationEachValue = $00000014;
  pjGroupOnDurationMinutes = $00000015;
  pjGroupOnDurationHours = $00000016;
  pjGroupOnDurationDays = $00000017;
  pjGroupOnDurationWeeks = $00000018;
  pjGroupOnDurationMonths = $00000019;
  pjGroupOnOutlineEachValue = $0000001E;
  pjGroupOnOutlineLevel = $0000001F;
  pjGroupOnPctEachValue = $00000028;
  pjGroupOnPctInterval = $00000029;
  pjGroupOnPct1_99 = $0000002A;
  pjGroupOnPct1_50 = $0000002B;
  pjGroupOnPct1_25 = $0000002C;
  pjGroupOnPct1_10 = $0000002D;
  pjGroupOnTextEachValue = $00000032;
  pjGroupOnTextPrefix = $00000033;

// Constants for enum PjAuthentication
type
  PjAuthentication = TOleEnum;
const
  pjUserName = $00000000;
  pjWindowsUserAccount = $00000001;

// Constants for enum PjAccountType
type
  PjAccountType = TOleEnum;
const
  pjResourceAccount = $00000000;
  pjManagerAccount = $00000001;

// Constants for enum PjBackgroundPattern
type
  PjBackgroundPattern = TOleEnum;
const
  pjBackgroundHollow = $00000000;
  pjBackgroundSolidFill = $00000001;
  pjBackgroundLightFill = $00000002;
  pjBackgroundMediumFill = $00000003;
  pjBackgroundDarkFill = $00000004;
  pjBackgroundDiagonalLeft = $00000005;
  pjBackgroundDiagonalRight = $00000006;
  pjBackgroundDarkDiagonalLeft = $00000007;
  pjBackgroundDarkDiagonalRight = $00000008;
  pjBackgroundThinVerticalStripe = $00000009;
  pjBackgroundMediumVerticalStripe = $0000000A;
  pjBackgroundLightDither = $0000000B;
  pjBackgroundMediumDither = $0000000C;
  pjBackgroundDarkDither = $0000000D;

// Constants for enum PjAutomaticSaveOptions
type
  PjAutomaticSaveOptions = TOleEnum;
const
  pjAutomaticSaveActiveProjectOnly = $00000001;
  pjAutomaticSaveAllOpenProjectFiles = $00000002;

// Constants for enum PJTaskOutlineShowLevel
type
  PJTaskOutlineShowLevel = TOleEnum;
const
  pjTaskOutlineShowLevel1 = $00000001;
  pjTaskOutlineShowLevel2 = $00000002;
  pjTaskOutlineShowLevel3 = $00000003;
  pjTaskOutlineShowLevel4 = $00000004;
  pjTaskOutlineShowLevel5 = $00000005;
  pjTaskOutlineShowLevel6 = $00000006;
  pjTaskOutlineShowLevel7 = $00000007;
  pjTaskOutlineShowLevel8 = $00000008;
  pjTaskOutlineShowLevel9 = $00000009;
  pjTaskOutlineShowLevelMax = $0000FFFF;

// Constants for enum PjLayoutMode
type
  PjLayoutMode = TOleEnum;
const
  pjLayoutAutomatic = $00000001;
  pjLayoutManual = $00000002;

// Constants for enum PjLayoutScheme
type
  PjLayoutScheme = TOleEnum;
const
  pjLayoutTopDownFromLeft = $00000000;
  pjLayoutTopDownByDay = $00000001;
  pjLayoutTopDownByWeek = $00000002;
  pjLayoutTopDownByMonth = $00000003;
  pjLayoutTopDownCriticalFirst = $00000004;
  pjLayoutCenteredFromLeft = $00000005;
  pjLayoutCenteredFromTop = $00000006;

// Constants for enum PjRowColSize
type
  PjRowColSize = TOleEnum;
const
  pjSizeBestFit = $00000000;
  pjSizeFixed = $00000001;

// Constants for enum PjLinkStyle
type
  PjLinkStyle = TOleEnum;
const
  pjLinkStraight = $00000001;
  pjLinkRectilinear = $00000002;

// Constants for enum PjLinkColorMode
type
  PjLinkColorMode = TOleEnum;
const
  pjColorModeCustom = $00000001;
  pjColorModePredecessor = $00000002;

// Constants for enum PjAlign
type
  PjAlign = TOleEnum;
const
  pjAlignLefts = $00000000;
  pjAlignCenters = $00000001;
  pjAlignRights = $00000002;
  pjAlignTops = $00000003;
  pjAlignMiddles = $00000004;
  pjAlignBottoms = $00000005;

// Constants for enum PjCopyPictureScaleOption
type
  PjCopyPictureScaleOption = TOleEnum;
const
  pjCopyPictureShowOptions = $00000000;
  pjCopyPictureKeepRange = $00000001;
  pjCopyPictureScale = $00000002;
  pjCopyPictureScaleWRatio = $00000003;
  pjCopyPictureTimescale = $00000004;
  pjCopyPictureTruncate = $00000005;

// Constants for enum PjPaperSize
type
  PjPaperSize = TOleEnum;
const
  pjPaper10x14 = $00000010;
  pjPaper11x17 = $00000011;
  pjPaperA3 = $00000008;
  pjPaperA4 = $00000009;
  pjPaperA4Small = $0000000A;
  pjPaperA5 = $0000000B;
  pjPaperB4 = $0000000C;
  pjPaperB5 = $0000000D;
  pjPaperCsheet = $00000018;
  pjPaperDsheet = $00000019;
  pjPaperEnvelop10 = $00000014;
  pjPaperEnvelope11 = $00000015;
  pjPaperEnvelope12 = $00000016;
  pjPaperEnvelope14 = $00000017;
  pjPaperEnvelope9 = $00000013;
  pjPaperEnvelopeB4 = $00000021;
  pjPaperEnvelopeB5 = $00000022;
  pjPaperEnvelopB6 = $00000023;
  pjPaperEnvelopeC3 = $0000001D;
  pjPaperEnvelopeC4 = $0000001E;
  pjPaperEnvelopeC5 = $0000001C;
  pjPaperEnvelopeC6 = $0000001F;
  pjPaperEnvelopeC65 = $00000020;
  pjPaperEnvelopeDL = $0000001B;
  pjPaperEnvelopeItaly = $00000024;
  pjPaperEnvelopeMonarch = $00000025;
  pjPaperEnvelopePersonal = $00000026;
  pjPaperEsheet = $0000001A;
  pjPaperExecutive = $00000007;
  pjPaperFanfoldLegalGerman = $00000029;
  pjPaperFanfoldStdGerman = $00000028;
  pjPaperFanfoldUS = $00000027;
  pjPaperFolio = $0000000E;
  pjPaperLedger = $00000004;
  pjPaperLegal = $00000005;
  pjPaperLetter = $00000001;
  pjPaperLetterSmall = $00000002;
  pjPaperNote = $00000012;
  pjPaperQuarto = $0000000F;
  pjPaperStatement = $00000006;
  pjPaperTabloid = $00000003;
  pjPaperUser = $000000FF;
  pjPaperDefault = $00000000;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary
// *********************************************************************//
  Task = interface;
  TaskDisp = dispinterface;
  Resource = interface;
  ResourceDisp = dispinterface;
  Calendar = interface;
  CalendarDisp = dispinterface;
  Assignment = interface;
  AssignmentDisp = dispinterface;
  Years = interface;
  YearsDisp = dispinterface;
  Months = interface;
  MonthsDisp = dispinterface;
  Days = interface;
  DaysDisp = dispinterface;
  List = dispinterface;
  Selection = dispinterface;
  Cell = dispinterface;
  Subproject = interface;
  SubprojectDisp = dispinterface;
  Subprojects = interface;
  SubprojectsDisp = dispinterface;
  TaskGroups = interface;
  TaskGroupsDisp = dispinterface;
  ResourceGroups = interface;
  ResourceGroupsDisp = dispinterface;
  Group = interface;
  GroupDisp = dispinterface;
  GroupCriteria = interface;
  GroupCriteriaDisp = dispinterface;
  GroupCriterion = interface;
  GroupCriterionDisp = dispinterface;
  WeekDays = interface;
  WeekDaysDisp = dispinterface;
  WeekDay = interface;
  WeekDayDisp = dispinterface;
  Shift = interface;
  ShiftDisp = dispinterface;
  Period = interface;
  PeriodDisp = dispinterface;
  Year = interface;
  YearDisp = dispinterface;
  Month = interface;
  MonthDisp = dispinterface;
  Day = interface;
  DayDisp = dispinterface;
  TimeScaleValue = interface;
  TimeScaleValueDisp = dispinterface;
  TimeScaleValues = interface;
  TimeScaleValuesDisp = dispinterface;
  CostRateTable = interface;
  CostRateTableDisp = dispinterface;
  CostRateTables = interface;
  CostRateTablesDisp = dispinterface;
  PayRate = interface;
  PayRateDisp = dispinterface;
  PayRates = interface;
  PayRatesDisp = dispinterface;
  Availability = interface;
  AvailabilityDisp = dispinterface;
  Availabilities = interface;
  AvailabilitiesDisp = dispinterface;
  TaskDependency = interface;
  TaskDependencyDisp = dispinterface;
  TaskDependencies = interface;
  TaskDependenciesDisp = dispinterface;
  Pane = dispinterface;
  Window = dispinterface;
  Windows = dispinterface;
  SplitPart = interface;
  SplitPartDisp = dispinterface;
  SplitParts = interface;
  SplitPartsDisp = dispinterface;
  Tasks = interface;
  TasksDisp = dispinterface;
  Resources = interface;
  ResourcesDisp = dispinterface;
  Assignments = interface;
  AssignmentsDisp = dispinterface;
  Calendars = interface;
  CalendarsDisp = dispinterface;
  _IProjectDoc = dispinterface;
  _EProjectDoc = dispinterface;
  Projects = dispinterface;
  _Global = dispinterface;
  _MSProject = dispinterface;
  _EProjectApp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library
// (NOTE: Here we map each CoClass to its Default Interface)
// *********************************************************************//
  Project = _IProjectDoc;
  Application = _MSProject;
  Global = _Global;


// *********************************************************************//
// Declaration of structures, unions and aliases.
// *********************************************************************//
  PWordBool1 = ^WordBool; {*}


// *********************************************************************//
// Interface: Task
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C3F-0000-0000-C000-000000000046}
// *********************************************************************//
  Task = interface(IDispatch)
    ['{000C0C3F-0000-0000-C000-000000000046}']
    function  Get_Work: OleVariant; safecall;
    procedure Set_Work(retval: OleVariant); safecall;
    function  Get_BaselineWork: OleVariant; safecall;
    procedure Set_BaselineWork(retval: OleVariant); safecall;
    function  Get_ActualWork: OleVariant; safecall;
    procedure Set_ActualWork(retval: OleVariant); safecall;
    function  Get_WorkVariance: OleVariant; safecall;
    function  Get_RemainingWork: OleVariant; safecall;
    procedure Set_RemainingWork(retval: OleVariant); safecall;
    function  Get_Cost: OleVariant; safecall;
    procedure Set_Cost(retval: OleVariant); safecall;
    function  Get_BaselineCost: OleVariant; safecall;
    procedure Set_BaselineCost(retval: OleVariant); safecall;
    function  Get_ActualCost: OleVariant; safecall;
    procedure Set_ActualCost(retval: OleVariant); safecall;
    function  Get_FixedCost: OleVariant; safecall;
    procedure Set_FixedCost(retval: OleVariant); safecall;
    function  Get_CostVariance: OleVariant; safecall;
    function  Get_RemainingCost: OleVariant; safecall;
    function  Get_BCWP: OleVariant; safecall;
    function  Get_BCWS: OleVariant; safecall;
    function  Get_SV: OleVariant; safecall;
    function  Get_Name: WideString; safecall;
    procedure Set_Name(const retval: WideString); safecall;
    function  Get_Notes: WideString; safecall;
    procedure Set_Notes(const retval: WideString); safecall;
    function  Get_WBS: WideString; safecall;
    procedure Set_WBS(const retval: WideString); safecall;
    function  Get_ConstraintType: OleVariant; safecall;
    procedure Set_ConstraintType(retval: OleVariant); safecall;
    function  Get_ConstraintDate: OleVariant; safecall;
    procedure Set_ConstraintDate(retval: OleVariant); safecall;
    function  Get_Critical: OleVariant; safecall;
    function  Get_LevelingDelay: OleVariant; safecall;
    procedure Set_LevelingDelay(retval: OleVariant); safecall;
    function  Get_FreeSlack: OleVariant; safecall;
    function  Get_TotalSlack: OleVariant; safecall;
    function  Get_ID: Integer; safecall;
    function  Get_Milestone: OleVariant; safecall;
    procedure Set_Milestone(retval: OleVariant); safecall;
    function  Get_Priority: OleVariant; safecall;
    procedure Set_Priority(retval: OleVariant); safecall;
    function  Get_Subproject: WideString; safecall;
    procedure Set_Subproject(const retval: WideString); safecall;
    function  Get_BaselineDuration: OleVariant; safecall;
    procedure Set_BaselineDuration(retval: OleVariant); safecall;
    function  Get_ActualDuration: OleVariant; safecall;
    procedure Set_ActualDuration(retval: OleVariant); safecall;
    function  Get_Duration: OleVariant; safecall;
    procedure Set_Duration(retval: OleVariant); safecall;
    function  Get_DurationVariance: OleVariant; safecall;
    function  Get_RemainingDuration: OleVariant; safecall;
    procedure Set_RemainingDuration(retval: OleVariant); safecall;
    function  Get_PercentComplete: OleVariant; safecall;
    procedure Set_PercentComplete(retval: OleVariant); safecall;
    function  Get_PercentWorkComplete: OleVariant; safecall;
    procedure Set_PercentWorkComplete(retval: OleVariant); safecall;
    function  Get_FixedDuration: OleVariant; safecall;
    procedure Set_FixedDuration(retval: OleVariant); safecall;
    function  Get_Start: OleVariant; safecall;
    procedure Set_Start(retval: OleVariant); safecall;
    function  Get_Finish: OleVariant; safecall;
    procedure Set_Finish(retval: OleVariant); safecall;
    function  Get_EarlyStart: OleVariant; safecall;
    function  Get_EarlyFinish: OleVariant; safecall;
    function  Get_LateStart: OleVariant; safecall;
    function  Get_LateFinish: OleVariant; safecall;
    function  Get_ActualStart: OleVariant; safecall;
    procedure Set_ActualStart(retval: OleVariant); safecall;
    function  Get_ActualFinish: OleVariant; safecall;
    procedure Set_ActualFinish(retval: OleVariant); safecall;
    function  Get_BaselineStart: OleVariant; safecall;
    procedure Set_BaselineStart(retval: OleVariant); safecall;
    function  Get_BaselineFinish: OleVariant; safecall;
    procedure Set_BaselineFinish(retval: OleVariant); safecall;
    function  Get_StartVariance: OleVariant; safecall;
    function  Get_FinishVariance: OleVariant; safecall;
    function  Get_Text1: WideString; safecall;
    procedure Set_Text1(const retval: WideString); safecall;
    function  Get_Start1: OleVariant; safecall;
    procedure Set_Start1(retval: OleVariant); safecall;
    function  Get_Finish1: OleVariant; safecall;
    procedure Set_Finish1(retval: OleVariant); safecall;
    function  Get_Text2: WideString; safecall;
    procedure Set_Text2(const retval: WideString); safecall;
    function  Get_Start2: OleVariant; safecall;
    procedure Set_Start2(retval: OleVariant); safecall;
    function  Get_Finish2: OleVariant; safecall;
    procedure Set_Finish2(retval: OleVariant); safecall;
    function  Get_Text3: WideString; safecall;
    procedure Set_Text3(const retval: WideString); safecall;
    function  Get_Start3: OleVariant; safecall;
    procedure Set_Start3(retval: OleVariant); safecall;
    function  Get_Finish3: OleVariant; safecall;
    procedure Set_Finish3(retval: OleVariant); safecall;
    function  Get_Text4: WideString; safecall;
    procedure Set_Text4(const retval: WideString); safecall;
    function  Get_Start4: OleVariant; safecall;
    procedure Set_Start4(retval: OleVariant); safecall;
    function  Get_Finish4: OleVariant; safecall;
    procedure Set_Finish4(retval: OleVariant); safecall;
    function  Get_Text5: WideString; safecall;
    procedure Set_Text5(const retval: WideString); safecall;
    function  Get_Start5: OleVariant; safecall;
    procedure Set_Start5(retval: OleVariant); safecall;
    function  Get_Finish5: OleVariant; safecall;
    procedure Set_Finish5(retval: OleVariant); safecall;
    function  Get_Text6: WideString; safecall;
    procedure Set_Text6(const retval: WideString); safecall;
    function  Get_Text7: WideString; safecall;
    procedure Set_Text7(const retval: WideString); safecall;
    function  Get_Text8: WideString; safecall;
    procedure Set_Text8(const retval: WideString); safecall;
    function  Get_Text9: WideString; safecall;
    procedure Set_Text9(const retval: WideString); safecall;
    function  Get_Text10: WideString; safecall;
    procedure Set_Text10(const retval: WideString); safecall;
    function  Get_Marked: OleVariant; safecall;
    procedure Set_Marked(retval: OleVariant); safecall;
    function  Get_Flag1: OleVariant; safecall;
    procedure Set_Flag1(retval: OleVariant); safecall;
    function  Get_Flag2: OleVariant; safecall;
    procedure Set_Flag2(retval: OleVariant); safecall;
    function  Get_Flag3: OleVariant; safecall;
    procedure Set_Flag3(retval: OleVariant); safecall;
    function  Get_Flag4: OleVariant; safecall;
    procedure Set_Flag4(retval: OleVariant); safecall;
    function  Get_Flag5: OleVariant; safecall;
    procedure Set_Flag5(retval: OleVariant); safecall;
    function  Get_Flag6: OleVariant; safecall;
    procedure Set_Flag6(retval: OleVariant); safecall;
    function  Get_Flag7: OleVariant; safecall;
    procedure Set_Flag7(retval: OleVariant); safecall;
    function  Get_Flag8: OleVariant; safecall;
    procedure Set_Flag8(retval: OleVariant); safecall;
    function  Get_Flag9: OleVariant; safecall;
    procedure Set_Flag9(retval: OleVariant); safecall;
    function  Get_Flag10: OleVariant; safecall;
    procedure Set_Flag10(retval: OleVariant); safecall;
    function  Get_Rollup: OleVariant; safecall;
    procedure Set_Rollup(retval: OleVariant); safecall;
    function  Get_CV: OleVariant; safecall;
    function  Get_Project: WideString; safecall;
    function  Get_OutlineLevel: Smallint; safecall;
    function  Get_UniqueID: Integer; safecall;
    function  Get_Number1: Double; safecall;
    procedure Set_Number1(retval: Double); safecall;
    function  Get_Number2: Double; safecall;
    procedure Set_Number2(retval: Double); safecall;
    function  Get_Number3: Double; safecall;
    procedure Set_Number3(retval: Double); safecall;
    function  Get_Number4: Double; safecall;
    procedure Set_Number4(retval: Double); safecall;
    function  Get_Number5: Double; safecall;
    procedure Set_Number5(retval: Double); safecall;
    function  Get_Summary: OleVariant; safecall;
    function  Get_Created: OleVariant; safecall;
    function  Get_UniqueIDPredecessors: WideString; safecall;
    procedure Set_UniqueIDPredecessors(const retval: WideString); safecall;
    function  Get_UniqueIDSuccessors: WideString; safecall;
    procedure Set_UniqueIDSuccessors(const retval: WideString); safecall;
    function  Get_Objects: Integer; safecall;
    function  Get_LinkedFields: OleVariant; safecall;
    function  Get_Resume: OleVariant; safecall;
    procedure Set_Resume(retval: OleVariant); safecall;
    function  Get_Stop: OleVariant; safecall;
    procedure Set_Stop(retval: OleVariant); safecall;
    function  Get_ResumeNoEarlierThan: OleVariant; safecall;
    procedure Set_ResumeNoEarlierThan(retval: OleVariant); safecall;
    function  Get_OutlineNumber: WideString; safecall;
    function  Get_Duration1: OleVariant; safecall;
    procedure Set_Duration1(retval: OleVariant); safecall;
    function  Get_Duration2: OleVariant; safecall;
    procedure Set_Duration2(retval: OleVariant); safecall;
    function  Get_Duration3: OleVariant; safecall;
    procedure Set_Duration3(retval: OleVariant); safecall;
    function  Get_Cost1: OleVariant; safecall;
    procedure Set_Cost1(retval: OleVariant); safecall;
    function  Get_Cost2: OleVariant; safecall;
    procedure Set_Cost2(retval: OleVariant); safecall;
    function  Get_Cost3: OleVariant; safecall;
    procedure Set_Cost3(retval: OleVariant); safecall;
    function  Get_HideBar: OleVariant; safecall;
    procedure Set_HideBar(retval: OleVariant); safecall;
    function  Get_Confirmed: OleVariant; safecall;
    function  Get_UpdateNeeded: OleVariant; safecall;
    function  Get_Contact: WideString; safecall;
    procedure Set_Contact(const retval: WideString); safecall;
    function  Get_ResourceGroup: WideString; safecall;
    function  Get_ACWP: OleVariant; safecall;
    function  Get_Type_: PjTaskFixedType; safecall;
    procedure Set_Type_(retval: PjTaskFixedType); safecall;
    function  Get_Recurring: OleVariant; safecall;
    function  Get_EffortDriven: OleVariant; safecall;
    procedure Set_EffortDriven(retval: OleVariant); safecall;
    function  Get_OutlineChildren: Tasks; safecall;
    function  Get_PredecessorTasks: Tasks; safecall;
    function  Get_SuccessorTasks: Tasks; safecall;
    function  Get_OvertimeWork: OleVariant; safecall;
    function  Get_ActualOvertimeWork: OleVariant; safecall;
    function  Get_RemainingOvertimeWork: OleVariant; safecall;
    function  Get_RegularWork: OleVariant; safecall;
    function  Get_OvertimeCost: OleVariant; safecall;
    function  Get_ActualOvertimeCost: OleVariant; safecall;
    function  Get_RemainingOvertimeCost: OleVariant; safecall;
    function  Get_FixedCostAccrual: PjAccrueAt; safecall;
    procedure Set_FixedCostAccrual(retval: PjAccrueAt); safecall;
    function  Get_Assignments: Assignments; safecall;
    function  Get_Parent: IDispatch; safecall;
    procedure Set_Parent(const retval: IDispatch); safecall;
    function  Get_Application: Application; safecall;
    function  Get_Hyperlink: WideString; safecall;
    procedure Set_Hyperlink(const retval: WideString); safecall;
    function  Get_HyperlinkAddress: WideString; safecall;
    procedure Set_HyperlinkAddress(const retval: WideString); safecall;
    function  Get_HyperlinkSubAddress: WideString; safecall;
    procedure Set_HyperlinkSubAddress(const retval: WideString); safecall;
    function  Get_HyperlinkHREF: WideString; safecall;
    procedure Set_HyperlinkHREF(const retval: WideString); safecall;
    function  Get_Overallocated: OleVariant; safecall;
    function  Get_SplitParts: SplitParts; safecall;
    function  GetField(FieldID: PjField): WideString; safecall;
    procedure SetField(FieldID: PjField; const Value: WideString); safecall;
    function  Get_ExternalTask: OleVariant; safecall;
    procedure Delete; safecall;
    procedure AppendNotes(const Value: WideString); safecall;
    function  Get_OutlineParent: Task; safecall;
    function  Get_Resources: Resources; safecall;
    function  TimeScaleData(StartDate: OleVariant; EndDate: OleVariant;
                            Type_: PjTaskTimescaledData; TimeScaleUnit: PjTimescaleUnit;
                            Count: Integer): TimeScaleValues; safecall;
    function  Get_SubProjectReadOnly: OleVariant; safecall;
    procedure Set_SubProjectReadOnly(retval: OleVariant); safecall;
    function  Get_ResponsePending: OleVariant; safecall;
    function  Get_TeamStatusPending: OleVariant; safecall;
    function  Get_LevelingCanSplit: OleVariant; safecall;
    procedure Set_LevelingCanSplit(retval: OleVariant); safecall;
    function  Get_LevelIndividualAssignments: OleVariant; safecall;
    procedure Set_LevelIndividualAssignments(retval: OleVariant); safecall;
    function  Get_Cost4: OleVariant; safecall;
    procedure Set_Cost4(retval: OleVariant); safecall;
    function  Get_Cost5: OleVariant; safecall;
    procedure Set_Cost5(retval: OleVariant); safecall;
    function  Get_Cost6: OleVariant; safecall;
    procedure Set_Cost6(retval: OleVariant); safecall;
    function  Get_Cost7: OleVariant; safecall;
    procedure Set_Cost7(retval: OleVariant); safecall;
    function  Get_Cost8: OleVariant; safecall;
    procedure Set_Cost8(retval: OleVariant); safecall;
    function  Get_Cost9: OleVariant; safecall;
    procedure Set_Cost9(retval: OleVariant); safecall;
    function  Get_Cost10: OleVariant; safecall;
    procedure Set_Cost10(retval: OleVariant); safecall;
    function  Get_Date1: OleVariant; safecall;
    procedure Set_Date1(retval: OleVariant); safecall;
    function  Get_Date2: OleVariant; safecall;
    procedure Set_Date2(retval: OleVariant); safecall;
    function  Get_Date3: OleVariant; safecall;
    procedure Set_Date3(retval: OleVariant); safecall;
    function  Get_Date4: OleVariant; safecall;
    procedure Set_Date4(retval: OleVariant); safecall;
    function  Get_Date5: OleVariant; safecall;
    procedure Set_Date5(retval: OleVariant); safecall;
    function  Get_Date6: OleVariant; safecall;
    procedure Set_Date6(retval: OleVariant); safecall;
    function  Get_Date7: OleVariant; safecall;
    procedure Set_Date7(retval: OleVariant); safecall;
    function  Get_Date8: OleVariant; safecall;
    procedure Set_Date8(retval: OleVariant); safecall;
    function  Get_Date9: OleVariant; safecall;
    procedure Set_Date9(retval: OleVariant); safecall;
    function  Get_Date10: OleVariant; safecall;
    procedure Set_Date10(retval: OleVariant); safecall;
    function  Get_Duration4: OleVariant; safecall;
    procedure Set_Duration4(retval: OleVariant); safecall;
    function  Get_Duration5: OleVariant; safecall;
    procedure Set_Duration5(retval: OleVariant); safecall;
    function  Get_Duration6: OleVariant; safecall;
    procedure Set_Duration6(retval: OleVariant); safecall;
    function  Get_Duration7: OleVariant; safecall;
    procedure Set_Duration7(retval: OleVariant); safecall;
    function  Get_Duration8: OleVariant; safecall;
    procedure Set_Duration8(retval: OleVariant); safecall;
    function  Get_Duration9: OleVariant; safecall;
    procedure Set_Duration9(retval: OleVariant); safecall;
    function  Get_Duration10: OleVariant; safecall;
    procedure Set_Duration10(retval: OleVariant); safecall;
    function  Get_Start6: OleVariant; safecall;
    procedure Set_Start6(retval: OleVariant); safecall;
    function  Get_Finish6: OleVariant; safecall;
    procedure Set_Finish6(retval: OleVariant); safecall;
    function  Get_Start7: OleVariant; safecall;
    procedure Set_Start7(retval: OleVariant); safecall;
    function  Get_Finish7: OleVariant; safecall;
    procedure Set_Finish7(retval: OleVariant); safecall;
    function  Get_Start8: OleVariant; safecall;
    procedure Set_Start8(retval: OleVariant); safecall;
    function  Get_Finish8: OleVariant; safecall;
    procedure Set_Finish8(retval: OleVariant); safecall;
    function  Get_Start9: OleVariant; safecall;
    procedure Set_Start9(retval: OleVariant); safecall;
    function  Get_Finish9: OleVariant; safecall;
    procedure Set_Finish9(retval: OleVariant); safecall;
    function  Get_Start10: OleVariant; safecall;
    procedure Set_Start10(retval: OleVariant); safecall;
    function  Get_Finish10: OleVariant; safecall;
    procedure Set_Finish10(retval: OleVariant); safecall;
    function  Get_Flag11: OleVariant; safecall;
    procedure Set_Flag11(retval: OleVariant); safecall;
    function  Get_Flag12: OleVariant; safecall;
    procedure Set_Flag12(retval: OleVariant); safecall;
    function  Get_Flag13: OleVariant; safecall;
    procedure Set_Flag13(retval: OleVariant); safecall;
    function  Get_Flag14: OleVariant; safecall;
    procedure Set_Flag14(retval: OleVariant); safecall;
    function  Get_Flag15: OleVariant; safecall;
    procedure Set_Flag15(retval: OleVariant); safecall;
    function  Get_Flag16: OleVariant; safecall;
    procedure Set_Flag16(retval: OleVariant); safecall;
    function  Get_Flag17: OleVariant; safecall;
    procedure Set_Flag17(retval: OleVariant); safecall;
    function  Get_Flag18: OleVariant; safecall;
    procedure Set_Flag18(retval: OleVariant); safecall;
    function  Get_Flag19: OleVariant; safecall;
    procedure Set_Flag19(retval: OleVariant); safecall;
    function  Get_Flag20: OleVariant; safecall;
    procedure Set_Flag20(retval: OleVariant); safecall;
    function  Get_Number6: Double; safecall;
    procedure Set_Number6(retval: Double); safecall;
    function  Get_Number7: Double; safecall;
    procedure Set_Number7(retval: Double); safecall;
    function  Get_Number8: Double; safecall;
    procedure Set_Number8(retval: Double); safecall;
    function  Get_Number9: Double; safecall;
    procedure Set_Number9(retval: Double); safecall;
    function  Get_Number10: Double; safecall;
    procedure Set_Number10(retval: Double); safecall;
    function  Get_Number11: Double; safecall;
    procedure Set_Number11(retval: Double); safecall;
    function  Get_Number12: Double; safecall;
    procedure Set_Number12(retval: Double); safecall;
    function  Get_Number13: Double; safecall;
    procedure Set_Number13(retval: Double); safecall;
    function  Get_Number14: Double; safecall;
    procedure Set_Number14(retval: Double); safecall;
    function  Get_Number15: Double; safecall;
    procedure Set_Number15(retval: Double); safecall;
    function  Get_Number16: Double; safecall;
    procedure Set_Number16(retval: Double); safecall;
    function  Get_Number17: Double; safecall;
    procedure Set_Number17(retval: Double); safecall;
    function  Get_Number18: Double; safecall;
    procedure Set_Number18(retval: Double); safecall;
    function  Get_Number19: Double; safecall;
    procedure Set_Number19(retval: Double); safecall;
    function  Get_Number20: Double; safecall;
    procedure Set_Number20(retval: Double); safecall;
    function  Get_Text11: WideString; safecall;
    procedure Set_Text11(const retval: WideString); safecall;
    function  Get_Text12: WideString; safecall;
    procedure Set_Text12(const retval: WideString); safecall;
    function  Get_Text13: WideString; safecall;
    procedure Set_Text13(const retval: WideString); safecall;
    function  Get_Text14: WideString; safecall;
    procedure Set_Text14(const retval: WideString); safecall;
    function  Get_Text15: WideString; safecall;
    procedure Set_Text15(const retval: WideString); safecall;
    function  Get_Text16: WideString; safecall;
    procedure Set_Text16(const retval: WideString); safecall;
    function  Get_Text17: WideString; safecall;
    procedure Set_Text17(const retval: WideString); safecall;
    function  Get_Text18: WideString; safecall;
    procedure Set_Text18(const retval: WideString); safecall;
    function  Get_Text19: WideString; safecall;
    procedure Set_Text19(const retval: WideString); safecall;
    function  Get_Text20: WideString; safecall;
    procedure Set_Text20(const retval: WideString); safecall;
    function  Get_Text21: WideString; safecall;
    procedure Set_Text21(const retval: WideString); safecall;
    function  Get_Text22: WideString; safecall;
    procedure Set_Text22(const retval: WideString); safecall;
    function  Get_Text23: WideString; safecall;
    procedure Set_Text23(const retval: WideString); safecall;
    function  Get_Text24: WideString; safecall;
    procedure Set_Text24(const retval: WideString); safecall;
    function  Get_Text25: WideString; safecall;
    procedure Set_Text25(const retval: WideString); safecall;
    function  Get_Text26: WideString; safecall;
    procedure Set_Text26(const retval: WideString); safecall;
    function  Get_Text27: WideString; safecall;
    procedure Set_Text27(const retval: WideString); safecall;
    function  Get_Text28: WideString; safecall;
    procedure Set_Text28(const retval: WideString); safecall;
    function  Get_Text29: WideString; safecall;
    procedure Set_Text29(const retval: WideString); safecall;
    function  Get_Text30: WideString; safecall;
    procedure Set_Text30(const retval: WideString); safecall;
    function  Get_ResourcePhonetics: WideString; safecall;
    procedure LinkPredecessors(const Tasks: IDispatch; Link: PjTaskLinkType; Lag: OleVariant); safecall;
    procedure LinkSuccessors(const Tasks: IDispatch; Link: PjTaskLinkType; Lag: OleVariant); safecall;
    procedure UnlinkPredecessors(const Tasks: IDispatch); safecall;
    procedure UnlinkSuccessors(const Tasks: IDispatch); safecall;
    procedure OutlineIndent; safecall;
    procedure OutlineOutdent; safecall;
    procedure OutlineHideSubTasks; safecall;
    procedure OutlineShowSubTasks; safecall;
    procedure OutlineShowAllTasks; safecall;
    function  Get_Index: Integer; safecall;
    function  Get_PreleveledStart: OleVariant; safecall;
    function  Get_PreleveledFinish: OleVariant; safecall;
    procedure Split(StartSplitOn: OleVariant; EndSplitOn: OleVariant); safecall;
    function  Get_Predecessors: WideString; safecall;
    procedure Set_Predecessors(const retval: WideString); safecall;
    function  Get_Successors: WideString; safecall;
    procedure Set_Successors(const retval: WideString); safecall;
    function  Get_ResourceNames: WideString; safecall;
    procedure Set_ResourceNames(const retval: WideString); safecall;
    function  Get_ResourceInitials: WideString; safecall;
    procedure Set_ResourceInitials(const retval: WideString); safecall;
    procedure Set_OutlineLevel(const retval: WideString); safecall;
    function  Get_Estimated: OleVariant; safecall;
    procedure Set_Estimated(retval: OleVariant); safecall;
    function  Get_IgnoreResourceCalendar: OleVariant; safecall;
    procedure Set_IgnoreResourceCalendar(retval: OleVariant); safecall;
    function  Get_Calendar: WideString; safecall;
    procedure Set_Calendar(const retval: WideString); safecall;
    function  Get_Duration1Estimated: OleVariant; safecall;
    procedure Set_Duration1Estimated(retval: OleVariant); safecall;
    function  Get_Duration2Estimated: OleVariant; safecall;
    procedure Set_Duration2Estimated(retval: OleVariant); safecall;
    function  Get_Duration3Estimated: OleVariant; safecall;
    procedure Set_Duration3Estimated(retval: OleVariant); safecall;
    function  Get_Duration4Estimated: OleVariant; safecall;
    procedure Set_Duration4Estimated(retval: OleVariant); safecall;
    function  Get_Duration5Estimated: OleVariant; safecall;
    procedure Set_Duration5Estimated(retval: OleVariant); safecall;
    function  Get_Duration6Estimated: OleVariant; safecall;
    procedure Set_Duration6Estimated(retval: OleVariant); safecall;
    function  Get_Duration7Estimated: OleVariant; safecall;
    procedure Set_Duration7Estimated(retval: OleVariant); safecall;
    function  Get_Duration8Estimated: OleVariant; safecall;
    procedure Set_Duration8Estimated(retval: OleVariant); safecall;
    function  Get_Duration9Estimated: OleVariant; safecall;
    procedure Set_Duration9Estimated(retval: OleVariant); safecall;
    function  Get_Duration10Estimated: OleVariant; safecall;
    procedure Set_Duration10Estimated(retval: OleVariant); safecall;
    function  Get_BaselineDurationEstimated: OleVariant; safecall;
    procedure Set_BaselineDurationEstimated(retval: OleVariant); safecall;
    function  Get_OutlineCode1: WideString; safecall;
    procedure Set_OutlineCode1(const retval: WideString); safecall;
    function  Get_OutlineCode2: WideString; safecall;
    procedure Set_OutlineCode2(const retval: WideString); safecall;
    function  Get_OutlineCode3: WideString; safecall;
    procedure Set_OutlineCode3(const retval: WideString); safecall;
    function  Get_OutlineCode4: WideString; safecall;
    procedure Set_OutlineCode4(const retval: WideString); safecall;
    function  Get_OutlineCode5: WideString; safecall;
    procedure Set_OutlineCode5(const retval: WideString); safecall;
    function  Get_OutlineCode6: WideString; safecall;
    procedure Set_OutlineCode6(const retval: WideString); safecall;
    function  Get_OutlineCode7: WideString; safecall;
    procedure Set_OutlineCode7(const retval: WideString); safecall;
    function  Get_OutlineCode8: WideString; safecall;
    procedure Set_OutlineCode8(const retval: WideString); safecall;
    function  Get_OutlineCode9: WideString; safecall;
    procedure Set_OutlineCode9(const retval: WideString); safecall;
    function  Get_OutlineCode10: WideString; safecall;
    procedure Set_OutlineCode10(const retval: WideString); safecall;
    function  Get_Deadline: OleVariant; safecall;
    procedure Set_Deadline(retval: OleVariant); safecall;
    function  Get_StartSlack: OleVariant; safecall;
    function  Get_FinishSlack: OleVariant; safecall;
    function  Get_VAC: OleVariant; safecall;
    function  Get_TaskDependencies: TaskDependencies; safecall;
    function  Get_GroupBySummary: OleVariant; safecall;
    function  Get_WBSPredecessors: WideString; safecall;
    function  Get_WBSSuccessors: WideString; safecall;
    function  Get_HyperlinkScreenTip: WideString; safecall;
    procedure Set_HyperlinkScreenTip(const retval: WideString); safecall;
    property Work: OleVariant read Get_Work write Set_Work;
    property BaselineWork: OleVariant read Get_BaselineWork write Set_BaselineWork;
    property ActualWork: OleVariant read Get_ActualWork write Set_ActualWork;
    property WorkVariance: OleVariant read Get_WorkVariance;
    property RemainingWork: OleVariant read Get_RemainingWork write Set_RemainingWork;
    property Cost: OleVariant read Get_Cost write Set_Cost;
    property BaselineCost: OleVariant read Get_BaselineCost write Set_BaselineCost;
    property ActualCost: OleVariant read Get_ActualCost write Set_ActualCost;
    property FixedCost: OleVariant read Get_FixedCost write Set_FixedCost;
    property CostVariance: OleVariant read Get_CostVariance;
    property RemainingCost: OleVariant read Get_RemainingCost;
    property BCWP: OleVariant read Get_BCWP;
    property BCWS: OleVariant read Get_BCWS;
    property SV: OleVariant read Get_SV;
    property Name: WideString read Get_Name write Set_Name;
    property Notes: WideString read Get_Notes write Set_Notes;
    property WBS: WideString read Get_WBS write Set_WBS;
    property ConstraintType: OleVariant read Get_ConstraintType write Set_ConstraintType;
    property ConstraintDate: OleVariant read Get_ConstraintDate write Set_ConstraintDate;
    property Critical: OleVariant read Get_Critical;
    property LevelingDelay: OleVariant read Get_LevelingDelay write Set_LevelingDelay;
    property FreeSlack: OleVariant read Get_FreeSlack;
    property TotalSlack: OleVariant read Get_TotalSlack;
    property ID: Integer read Get_ID;
    property Milestone: OleVariant read Get_Milestone write Set_Milestone;
    property Priority: OleVariant read Get_Priority write Set_Priority;
    property Subproject: WideString read Get_Subproject write Set_Subproject;
    property BaselineDuration: OleVariant read Get_BaselineDuration write Set_BaselineDuration;
    property ActualDuration: OleVariant read Get_ActualDuration write Set_ActualDuration;
    property Duration: OleVariant read Get_Duration write Set_Duration;
    property DurationVariance: OleVariant read Get_DurationVariance;
    property RemainingDuration: OleVariant read Get_RemainingDuration write Set_RemainingDuration;
    property PercentComplete: OleVariant read Get_PercentComplete write Set_PercentComplete;
    property PercentWorkComplete: OleVariant read Get_PercentWorkComplete write Set_PercentWorkComplete;
    property FixedDuration: OleVariant read Get_FixedDuration write Set_FixedDuration;
    property Start: OleVariant read Get_Start write Set_Start;
    property Finish: OleVariant read Get_Finish write Set_Finish;
    property EarlyStart: OleVariant read Get_EarlyStart;
    property EarlyFinish: OleVariant read Get_EarlyFinish;
    property LateStart: OleVariant read Get_LateStart;
    property LateFinish: OleVariant read Get_LateFinish;
    property ActualStart: OleVariant read Get_ActualStart write Set_ActualStart;
    property ActualFinish: OleVariant read Get_ActualFinish write Set_ActualFinish;
    property BaselineStart: OleVariant read Get_BaselineStart write Set_BaselineStart;
    property BaselineFinish: OleVariant read Get_BaselineFinish write Set_BaselineFinish;
    property StartVariance: OleVariant read Get_StartVariance;
    property FinishVariance: OleVariant read Get_FinishVariance;
    property Text1: WideString read Get_Text1 write Set_Text1;
    property Start1: OleVariant read Get_Start1 write Set_Start1;
    property Finish1: OleVariant read Get_Finish1 write Set_Finish1;
    property Text2: WideString read Get_Text2 write Set_Text2;
    property Start2: OleVariant read Get_Start2 write Set_Start2;
    property Finish2: OleVariant read Get_Finish2 write Set_Finish2;
    property Text3: WideString read Get_Text3 write Set_Text3;
    property Start3: OleVariant read Get_Start3 write Set_Start3;
    property Finish3: OleVariant read Get_Finish3 write Set_Finish3;
    property Text4: WideString read Get_Text4 write Set_Text4;
    property Start4: OleVariant read Get_Start4 write Set_Start4;
    property Finish4: OleVariant read Get_Finish4 write Set_Finish4;
    property Text5: WideString read Get_Text5 write Set_Text5;
    property Start5: OleVariant read Get_Start5 write Set_Start5;
    property Finish5: OleVariant read Get_Finish5 write Set_Finish5;
    property Text6: WideString read Get_Text6 write Set_Text6;
    property Text7: WideString read Get_Text7 write Set_Text7;
    property Text8: WideString read Get_Text8 write Set_Text8;
    property Text9: WideString read Get_Text9 write Set_Text9;
    property Text10: WideString read Get_Text10 write Set_Text10;
    property Marked: OleVariant read Get_Marked write Set_Marked;
    property Flag1: OleVariant read Get_Flag1 write Set_Flag1;
    property Flag2: OleVariant read Get_Flag2 write Set_Flag2;
    property Flag3: OleVariant read Get_Flag3 write Set_Flag3;
    property Flag4: OleVariant read Get_Flag4 write Set_Flag4;
    property Flag5: OleVariant read Get_Flag5 write Set_Flag5;
    property Flag6: OleVariant read Get_Flag6 write Set_Flag6;
    property Flag7: OleVariant read Get_Flag7 write Set_Flag7;
    property Flag8: OleVariant read Get_Flag8 write Set_Flag8;
    property Flag9: OleVariant read Get_Flag9 write Set_Flag9;
    property Flag10: OleVariant read Get_Flag10 write Set_Flag10;
    property Rollup: OleVariant read Get_Rollup write Set_Rollup;
    property CV: OleVariant read Get_CV;
    property Project: WideString read Get_Project;
    property UniqueID: Integer read Get_UniqueID;
    property Number1: Double read Get_Number1 write Set_Number1;
    property Number2: Double read Get_Number2 write Set_Number2;
    property Number3: Double read Get_Number3 write Set_Number3;
    property Number4: Double read Get_Number4 write Set_Number4;
    property Number5: Double read Get_Number5 write Set_Number5;
    property Summary: OleVariant read Get_Summary;
    property Created: OleVariant read Get_Created;
    property UniqueIDPredecessors: WideString read Get_UniqueIDPredecessors write Set_UniqueIDPredecessors;
    property UniqueIDSuccessors: WideString read Get_UniqueIDSuccessors write Set_UniqueIDSuccessors;
    property Objects: Integer read Get_Objects;
    property LinkedFields: OleVariant read Get_LinkedFields;
    property Resume: OleVariant read Get_Resume write Set_Resume;
    property Stop: OleVariant read Get_Stop write Set_Stop;
    property ResumeNoEarlierThan: OleVariant read Get_ResumeNoEarlierThan write Set_ResumeNoEarlierThan;
    property OutlineNumber: WideString read Get_OutlineNumber;
    property Duration1: OleVariant read Get_Duration1 write Set_Duration1;
    property Duration2: OleVariant read Get_Duration2 write Set_Duration2;
    property Duration3: OleVariant read Get_Duration3 write Set_Duration3;
    property Cost1: OleVariant read Get_Cost1 write Set_Cost1;
    property Cost2: OleVariant read Get_Cost2 write Set_Cost2;
    property Cost3: OleVariant read Get_Cost3 write Set_Cost3;
    property HideBar: OleVariant read Get_HideBar write Set_HideBar;
    property Confirmed: OleVariant read Get_Confirmed;
    property UpdateNeeded: OleVariant read Get_UpdateNeeded;
    property Contact: WideString read Get_Contact write Set_Contact;
    property ResourceGroup: WideString read Get_ResourceGroup;
    property ACWP: OleVariant read Get_ACWP;
    property Type_: PjTaskFixedType read Get_Type_ write Set_Type_;
    property Recurring: OleVariant read Get_Recurring;
    property EffortDriven: OleVariant read Get_EffortDriven write Set_EffortDriven;
    property OutlineChildren: Tasks read Get_OutlineChildren;
    property PredecessorTasks: Tasks read Get_PredecessorTasks;
    property SuccessorTasks: Tasks read Get_SuccessorTasks;
    property OvertimeWork: OleVariant read Get_OvertimeWork;
    property ActualOvertimeWork: OleVariant read Get_ActualOvertimeWork;
    property RemainingOvertimeWork: OleVariant read Get_RemainingOvertimeWork;
    property RegularWork: OleVariant read Get_RegularWork;
    property OvertimeCost: OleVariant read Get_OvertimeCost;
    property ActualOvertimeCost: OleVariant read Get_ActualOvertimeCost;
    property RemainingOvertimeCost: OleVariant read Get_RemainingOvertimeCost;
    property FixedCostAccrual: PjAccrueAt read Get_FixedCostAccrual write Set_FixedCostAccrual;
    property Assignments: Assignments read Get_Assignments;
    property Parent: IDispatch read Get_Parent write Set_Parent;
    property Application: Application read Get_Application;
    property Hyperlink: WideString read Get_Hyperlink write Set_Hyperlink;
    property HyperlinkAddress: WideString read Get_HyperlinkAddress write Set_HyperlinkAddress;
    property HyperlinkSubAddress: WideString read Get_HyperlinkSubAddress write Set_HyperlinkSubAddress;
    property HyperlinkHREF: WideString read Get_HyperlinkHREF write Set_HyperlinkHREF;
    property Overallocated: OleVariant read Get_Overallocated;
    property SplitParts: SplitParts read Get_SplitParts;
    property ExternalTask: OleVariant read Get_ExternalTask;
    property OutlineParent: Task read Get_OutlineParent;
    property Resources: Resources read Get_Resources;
    property SubProjectReadOnly: OleVariant read Get_SubProjectReadOnly write Set_SubProjectReadOnly;
    property ResponsePending: OleVariant read Get_ResponsePending;
    property TeamStatusPending: OleVariant read Get_TeamStatusPending;
    property LevelingCanSplit: OleVariant read Get_LevelingCanSplit write Set_LevelingCanSplit;
    property LevelIndividualAssignments: OleVariant read Get_LevelIndividualAssignments write Set_LevelIndividualAssignments;
    property Cost4: OleVariant read Get_Cost4 write Set_Cost4;
    property Cost5: OleVariant read Get_Cost5 write Set_Cost5;
    property Cost6: OleVariant read Get_Cost6 write Set_Cost6;
    property Cost7: OleVariant read Get_Cost7 write Set_Cost7;
    property Cost8: OleVariant read Get_Cost8 write Set_Cost8;
    property Cost9: OleVariant read Get_Cost9 write Set_Cost9;
    property Cost10: OleVariant read Get_Cost10 write Set_Cost10;
    property Date1: OleVariant read Get_Date1 write Set_Date1;
    property Date2: OleVariant read Get_Date2 write Set_Date2;
    property Date3: OleVariant read Get_Date3 write Set_Date3;
    property Date4: OleVariant read Get_Date4 write Set_Date4;
    property Date5: OleVariant read Get_Date5 write Set_Date5;
    property Date6: OleVariant read Get_Date6 write Set_Date6;
    property Date7: OleVariant read Get_Date7 write Set_Date7;
    property Date8: OleVariant read Get_Date8 write Set_Date8;
    property Date9: OleVariant read Get_Date9 write Set_Date9;
    property Date10: OleVariant read Get_Date10 write Set_Date10;
    property Duration4: OleVariant read Get_Duration4 write Set_Duration4;
    property Duration5: OleVariant read Get_Duration5 write Set_Duration5;
    property Duration6: OleVariant read Get_Duration6 write Set_Duration6;
    property Duration7: OleVariant read Get_Duration7 write Set_Duration7;
    property Duration8: OleVariant read Get_Duration8 write Set_Duration8;
    property Duration9: OleVariant read Get_Duration9 write Set_Duration9;
    property Duration10: OleVariant read Get_Duration10 write Set_Duration10;
    property Start6: OleVariant read Get_Start6 write Set_Start6;
    property Finish6: OleVariant read Get_Finish6 write Set_Finish6;
    property Start7: OleVariant read Get_Start7 write Set_Start7;
    property Finish7: OleVariant read Get_Finish7 write Set_Finish7;
    property Start8: OleVariant read Get_Start8 write Set_Start8;
    property Finish8: OleVariant read Get_Finish8 write Set_Finish8;
    property Start9: OleVariant read Get_Start9 write Set_Start9;
    property Finish9: OleVariant read Get_Finish9 write Set_Finish9;
    property Start10: OleVariant read Get_Start10 write Set_Start10;
    property Finish10: OleVariant read Get_Finish10 write Set_Finish10;
    property Flag11: OleVariant read Get_Flag11 write Set_Flag11;
    property Flag12: OleVariant read Get_Flag12 write Set_Flag12;
    property Flag13: OleVariant read Get_Flag13 write Set_Flag13;
    property Flag14: OleVariant read Get_Flag14 write Set_Flag14;
    property Flag15: OleVariant read Get_Flag15 write Set_Flag15;
    property Flag16: OleVariant read Get_Flag16 write Set_Flag16;
    property Flag17: OleVariant read Get_Flag17 write Set_Flag17;
    property Flag18: OleVariant read Get_Flag18 write Set_Flag18;
    property Flag19: OleVariant read Get_Flag19 write Set_Flag19;
    property Flag20: OleVariant read Get_Flag20 write Set_Flag20;
    property Number6: Double read Get_Number6 write Set_Number6;
    property Number7: Double read Get_Number7 write Set_Number7;
    property Number8: Double read Get_Number8 write Set_Number8;
    property Number9: Double read Get_Number9 write Set_Number9;
    property Number10: Double read Get_Number10 write Set_Number10;
    property Number11: Double read Get_Number11 write Set_Number11;
    property Number12: Double read Get_Number12 write Set_Number12;
    property Number13: Double read Get_Number13 write Set_Number13;
    property Number14: Double read Get_Number14 write Set_Number14;
    property Number15: Double read Get_Number15 write Set_Number15;
    property Number16: Double read Get_Number16 write Set_Number16;
    property Number17: Double read Get_Number17 write Set_Number17;
    property Number18: Double read Get_Number18 write Set_Number18;
    property Number19: Double read Get_Number19 write Set_Number19;
    property Number20: Double read Get_Number20 write Set_Number20;
    property Text11: WideString read Get_Text11 write Set_Text11;
    property Text12: WideString read Get_Text12 write Set_Text12;
    property Text13: WideString read Get_Text13 write Set_Text13;
    property Text14: WideString read Get_Text14 write Set_Text14;
    property Text15: WideString read Get_Text15 write Set_Text15;
    property Text16: WideString read Get_Text16 write Set_Text16;
    property Text17: WideString read Get_Text17 write Set_Text17;
    property Text18: WideString read Get_Text18 write Set_Text18;
    property Text19: WideString read Get_Text19 write Set_Text19;
    property Text20: WideString read Get_Text20 write Set_Text20;
    property Text21: WideString read Get_Text21 write Set_Text21;
    property Text22: WideString read Get_Text22 write Set_Text22;
    property Text23: WideString read Get_Text23 write Set_Text23;
    property Text24: WideString read Get_Text24 write Set_Text24;
    property Text25: WideString read Get_Text25 write Set_Text25;
    property Text26: WideString read Get_Text26 write Set_Text26;
    property Text27: WideString read Get_Text27 write Set_Text27;
    property Text28: WideString read Get_Text28 write Set_Text28;
    property Text29: WideString read Get_Text29 write Set_Text29;
    property Text30: WideString read Get_Text30 write Set_Text30;
    property ResourcePhonetics: WideString read Get_ResourcePhonetics;
    property Index: Integer read Get_Index;
    property PreleveledStart: OleVariant read Get_PreleveledStart;
    property PreleveledFinish: OleVariant read Get_PreleveledFinish;
    property Predecessors: WideString read Get_Predecessors write Set_Predecessors;
    property Successors: WideString read Get_Successors write Set_Successors;
    property ResourceNames: WideString read Get_ResourceNames write Set_ResourceNames;
    property ResourceInitials: WideString read Get_ResourceInitials write Set_ResourceInitials;
    property Estimated: OleVariant read Get_Estimated write Set_Estimated;
    property IgnoreResourceCalendar: OleVariant read Get_IgnoreResourceCalendar write Set_IgnoreResourceCalendar;
    property Calendar: WideString read Get_Calendar write Set_Calendar;
    property Duration1Estimated: OleVariant read Get_Duration1Estimated write Set_Duration1Estimated;
    property Duration2Estimated: OleVariant read Get_Duration2Estimated write Set_Duration2Estimated;
    property Duration3Estimated: OleVariant read Get_Duration3Estimated write Set_Duration3Estimated;
    property Duration4Estimated: OleVariant read Get_Duration4Estimated write Set_Duration4Estimated;
    property Duration5Estimated: OleVariant read Get_Duration5Estimated write Set_Duration5Estimated;
    property Duration6Estimated: OleVariant read Get_Duration6Estimated write Set_Duration6Estimated;
    property Duration7Estimated: OleVariant read Get_Duration7Estimated write Set_Duration7Estimated;
    property Duration8Estimated: OleVariant read Get_Duration8Estimated write Set_Duration8Estimated;
    property Duration9Estimated: OleVariant read Get_Duration9Estimated write Set_Duration9Estimated;
    property Duration10Estimated: OleVariant read Get_Duration10Estimated write Set_Duration10Estimated;
    property BaselineDurationEstimated: OleVariant read Get_BaselineDurationEstimated write Set_BaselineDurationEstimated;
    property OutlineCode1: WideString read Get_OutlineCode1 write Set_OutlineCode1;
    property OutlineCode2: WideString read Get_OutlineCode2 write Set_OutlineCode2;
    property OutlineCode3: WideString read Get_OutlineCode3 write Set_OutlineCode3;
    property OutlineCode4: WideString read Get_OutlineCode4 write Set_OutlineCode4;
    property OutlineCode5: WideString read Get_OutlineCode5 write Set_OutlineCode5;
    property OutlineCode6: WideString read Get_OutlineCode6 write Set_OutlineCode6;
    property OutlineCode7: WideString read Get_OutlineCode7 write Set_OutlineCode7;
    property OutlineCode8: WideString read Get_OutlineCode8 write Set_OutlineCode8;
    property OutlineCode9: WideString read Get_OutlineCode9 write Set_OutlineCode9;
    property OutlineCode10: WideString read Get_OutlineCode10 write Set_OutlineCode10;
    property Deadline: OleVariant read Get_Deadline write Set_Deadline;
    property StartSlack: OleVariant read Get_StartSlack;
    property FinishSlack: OleVariant read Get_FinishSlack;
    property VAC: OleVariant read Get_VAC;
    property TaskDependencies: TaskDependencies read Get_TaskDependencies;
    property GroupBySummary: OleVariant read Get_GroupBySummary;
    property WBSPredecessors: WideString read Get_WBSPredecessors;
    property WBSSuccessors: WideString read Get_WBSSuccessors;
    property HyperlinkScreenTip: WideString read Get_HyperlinkScreenTip write Set_HyperlinkScreenTip;
  end;

// *********************************************************************//
// DispIntf:  TaskDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C3F-0000-0000-C000-000000000046}
// *********************************************************************//
  TaskDisp = dispinterface
    ['{000C0C3F-0000-0000-C000-000000000046}']
    property Work: OleVariant dispid 188743680;
    property BaselineWork: OleVariant dispid 188743681;
    property ActualWork: OleVariant dispid 188743682;
    property WorkVariance: OleVariant readonly dispid 188743683;
    property RemainingWork: OleVariant dispid 188743684;
    property Cost: OleVariant dispid 188743685;
    property BaselineCost: OleVariant dispid 188743686;
    property ActualCost: OleVariant dispid 188743687;
    property FixedCost: OleVariant dispid 188743688;
    property CostVariance: OleVariant readonly dispid 188743689;
    property RemainingCost: OleVariant readonly dispid 188743690;
    property BCWP: OleVariant readonly dispid 188743691;
    property BCWS: OleVariant readonly dispid 188743692;
    property SV: OleVariant readonly dispid 188743693;
    property Name: WideString dispid 188743694;
    property Notes: WideString dispid 188743695;
    property WBS: WideString dispid 188743696;
    property ConstraintType: OleVariant dispid 188743697;
    property ConstraintDate: OleVariant dispid 188743698;
    property Critical: OleVariant readonly dispid 188743699;
    property LevelingDelay: OleVariant dispid 188743700;
    property FreeSlack: OleVariant readonly dispid 188743701;
    property TotalSlack: OleVariant readonly dispid 188743702;
    property ID: Integer readonly dispid 188743703;
    property Milestone: OleVariant dispid 188743704;
    property Priority: OleVariant dispid 188743705;
    property Subproject: WideString dispid 188743706;
    property BaselineDuration: OleVariant dispid 188743707;
    property ActualDuration: OleVariant dispid 188743708;
    property Duration: OleVariant dispid 188743709;
    property DurationVariance: OleVariant readonly dispid 188743710;
    property RemainingDuration: OleVariant dispid 188743711;
    property PercentComplete: OleVariant dispid 188743712;
    property PercentWorkComplete: OleVariant dispid 188743713;
    property FixedDuration: OleVariant dispid 188743714;
    property Start: OleVariant dispid 188743715;
    property Finish: OleVariant dispid 188743716;
    property EarlyStart: OleVariant readonly dispid 188743717;
    property EarlyFinish: OleVariant readonly dispid 188743718;
    property LateStart: OleVariant readonly dispid 188743719;
    property LateFinish: OleVariant readonly dispid 188743720;
    property ActualStart: OleVariant dispid 188743721;
    property ActualFinish: OleVariant dispid 188743722;
    property BaselineStart: OleVariant dispid 188743723;
    property BaselineFinish: OleVariant dispid 188743724;
    property StartVariance: OleVariant readonly dispid 188743725;
    property FinishVariance: OleVariant readonly dispid 188743726;
    property Text1: WideString dispid 188743731;
    property Start1: OleVariant dispid 188743732;
    property Finish1: OleVariant dispid 188743733;
    property Text2: WideString dispid 188743734;
    property Start2: OleVariant dispid 188743735;
    property Finish2: OleVariant dispid 188743736;
    property Text3: WideString dispid 188743737;
    property Start3: OleVariant dispid 188743738;
    property Finish3: OleVariant dispid 188743739;
    property Text4: WideString dispid 188743740;
    property Start4: OleVariant dispid 188743741;
    property Finish4: OleVariant dispid 188743742;
    property Text5: WideString dispid 188743743;
    property Start5: OleVariant dispid 188743744;
    property Finish5: OleVariant dispid 188743745;
    property Text6: WideString dispid 188743746;
    property Text7: WideString dispid 188743747;
    property Text8: WideString dispid 188743748;
    property Text9: WideString dispid 188743749;
    property Text10: WideString dispid 188743750;
    property Marked: OleVariant dispid 188743751;
    property Flag1: OleVariant dispid 188743752;
    property Flag2: OleVariant dispid 188743753;
    property Flag3: OleVariant dispid 188743754;
    property Flag4: OleVariant dispid 188743755;
    property Flag5: OleVariant dispid 188743756;
    property Flag6: OleVariant dispid 188743757;
    property Flag7: OleVariant dispid 188743758;
    property Flag8: OleVariant dispid 188743759;
    property Flag9: OleVariant dispid 188743760;
    property Flag10: OleVariant dispid 188743761;
    property Rollup: OleVariant dispid 188743762;
    property CV: OleVariant readonly dispid 188743763;
    property Project: WideString readonly dispid 188743764;
    function  OutlineLevel: Smallint; dispid 188743765;
    property UniqueID: Integer readonly dispid 0;
    property Number1: Double dispid 188743767;
    property Number2: Double dispid 188743768;
    property Number3: Double dispid 188743769;
    property Number4: Double dispid 188743770;
    property Number5: Double dispid 188743771;
    property Summary: OleVariant readonly dispid 188743772;
    property Created: OleVariant readonly dispid 188743773;
    property UniqueIDPredecessors: WideString dispid 188743775;
    property UniqueIDSuccessors: WideString dispid 188743776;
    property Objects: Integer readonly dispid 188743777;
    property LinkedFields: OleVariant readonly dispid 188743778;
    property Resume: OleVariant dispid 188743779;
    property Stop: OleVariant dispid 188743780;
    property ResumeNoEarlierThan: OleVariant dispid 188743781;
    property OutlineNumber: WideString readonly dispid 188743782;
    property Duration1: OleVariant dispid 188743783;
    property Duration2: OleVariant dispid 188743784;
    property Duration3: OleVariant dispid 188743785;
    property Cost1: OleVariant dispid 188743786;
    property Cost2: OleVariant dispid 188743787;
    property Cost3: OleVariant dispid 188743788;
    property HideBar: OleVariant dispid 188743789;
    property Confirmed: OleVariant readonly dispid 188743790;
    property UpdateNeeded: OleVariant readonly dispid 188743791;
    property Contact: WideString dispid 188743792;
    property ResourceGroup: WideString readonly dispid 188743793;
    property ACWP: OleVariant readonly dispid 188743800;
    property Type_: PjTaskFixedType dispid 188743808;
    property Recurring: OleVariant readonly dispid 188743809;
    property EffortDriven: OleVariant dispid 188743812;
    property OutlineChildren: Tasks readonly dispid 188743817;
    property PredecessorTasks: Tasks readonly dispid 188743819;
    property SuccessorTasks: Tasks readonly dispid 188743821;
    property OvertimeWork: OleVariant readonly dispid 188743843;
    property ActualOvertimeWork: OleVariant readonly dispid 188743844;
    property RemainingOvertimeWork: OleVariant readonly dispid 188743845;
    property RegularWork: OleVariant readonly dispid 188743846;
    property OvertimeCost: OleVariant readonly dispid 188743848;
    property ActualOvertimeCost: OleVariant readonly dispid 188743849;
    property RemainingOvertimeCost: OleVariant readonly dispid 188743850;
    property FixedCostAccrual: PjAccrueAt dispid 188743880;
    property Assignments: Assignments readonly dispid 188743886;
    property Parent: IDispatch dispid 188743893;
    property Application: Application readonly dispid 188743894;
    property Hyperlink: WideString dispid 188743897;
    property HyperlinkAddress: WideString dispid 188743898;
    property HyperlinkSubAddress: WideString dispid 188743899;
    property HyperlinkHREF: WideString dispid 188743900;
    property Overallocated: OleVariant readonly dispid 188743905;
    property SplitParts: SplitParts readonly dispid 188743906;
    function  GetField(FieldID: PjField): WideString; dispid 188743909;
    procedure SetField(FieldID: PjField; const Value: WideString); dispid 188743910;
    property ExternalTask: OleVariant readonly dispid 188743912;
    procedure Delete; dispid 188743916;
    procedure AppendNotes(const Value: WideString); dispid 188743917;
    property OutlineParent: Task readonly dispid 188743918;
    property Resources: Resources readonly dispid 188743919;
    function  TimeScaleData(StartDate: OleVariant; EndDate: OleVariant;
                            Type_: PjTaskTimescaledData; TimeScaleUnit: PjTimescaleUnit;
                            Count: Integer): TimeScaleValues; dispid 188743925;
    property SubProjectReadOnly: OleVariant dispid 188743926;
    property ResponsePending: OleVariant readonly dispid 188743930;
    property TeamStatusPending: OleVariant readonly dispid 188743931;
    property LevelingCanSplit: OleVariant dispid 188743932;
    property LevelIndividualAssignments: OleVariant dispid 188743933;
    property Cost4: OleVariant dispid 188743938;
    property Cost5: OleVariant dispid 188743939;
    property Cost6: OleVariant dispid 188743940;
    property Cost7: OleVariant dispid 188743941;
    property Cost8: OleVariant dispid 188743942;
    property Cost9: OleVariant dispid 188743943;
    property Cost10: OleVariant dispid 188743944;
    property Date1: OleVariant dispid 188743945;
    property Date2: OleVariant dispid 188743946;
    property Date3: OleVariant dispid 188743947;
    property Date4: OleVariant dispid 188743948;
    property Date5: OleVariant dispid 188743949;
    property Date6: OleVariant dispid 188743950;
    property Date7: OleVariant dispid 188743951;
    property Date8: OleVariant dispid 188743952;
    property Date9: OleVariant dispid 188743953;
    property Date10: OleVariant dispid 188743954;
    property Duration4: OleVariant dispid 188743955;
    property Duration5: OleVariant dispid 188743956;
    property Duration6: OleVariant dispid 188743957;
    property Duration7: OleVariant dispid 188743958;
    property Duration8: OleVariant dispid 188743959;
    property Duration9: OleVariant dispid 188743960;
    property Duration10: OleVariant dispid 188743961;
    property Start6: OleVariant dispid 188743962;
    property Finish6: OleVariant dispid 188743963;
    property Start7: OleVariant dispid 188743964;
    property Finish7: OleVariant dispid 188743965;
    property Start8: OleVariant dispid 188743966;
    property Finish8: OleVariant dispid 188743967;
    property Start9: OleVariant dispid 188743968;
    property Finish9: OleVariant dispid 188743969;
    property Start10: OleVariant dispid 188743970;
    property Finish10: OleVariant dispid 188743971;
    property Flag11: OleVariant dispid 188743972;
    property Flag12: OleVariant dispid 188743973;
    property Flag13: OleVariant dispid 188743974;
    property Flag14: OleVariant dispid 188743975;
    property Flag15: OleVariant dispid 188743976;
    property Flag16: OleVariant dispid 188743977;
    property Flag17: OleVariant dispid 188743978;
    property Flag18: OleVariant dispid 188743979;
    property Flag19: OleVariant dispid 188743980;
    property Flag20: OleVariant dispid 188743981;
    property Number6: Double dispid 188743982;
    property Number7: Double dispid 188743983;
    property Number8: Double dispid 188743984;
    property Number9: Double dispid 188743985;
    property Number10: Double dispid 188743986;
    property Number11: Double dispid 188743987;
    property Number12: Double dispid 188743988;
    property Number13: Double dispid 188743989;
    property Number14: Double dispid 188743990;
    property Number15: Double dispid 188743991;
    property Number16: Double dispid 188743992;
    property Number17: Double dispid 188743993;
    property Number18: Double dispid 188743994;
    property Number19: Double dispid 188743995;
    property Number20: Double dispid 188743996;
    property Text11: WideString dispid 188743997;
    property Text12: WideString dispid 188743998;
    property Text13: WideString dispid 188743999;
    property Text14: WideString dispid 188744000;
    property Text15: WideString dispid 188744001;
    property Text16: WideString dispid 188744002;
    property Text17: WideString dispid 188744003;
    property Text18: WideString dispid 188744004;
    property Text19: WideString dispid 188744005;
    property Text20: WideString dispid 188744006;
    property Text21: WideString dispid 188744007;
    property Text22: WideString dispid 188744008;
    property Text23: WideString dispid 188744009;
    property Text24: WideString dispid 188744010;
    property Text25: WideString dispid 188744011;
    property Text26: WideString dispid 188744012;
    property Text27: WideString dispid 188744013;
    property Text28: WideString dispid 188744014;
    property Text29: WideString dispid 188744015;
    property Text30: WideString dispid 188744016;
    property ResourcePhonetics: WideString readonly dispid 188744029;
    procedure LinkPredecessors(const Tasks: IDispatch; Link: PjTaskLinkType; Lag: OleVariant); dispid 188744031;
    procedure LinkSuccessors(const Tasks: IDispatch; Link: PjTaskLinkType; Lag: OleVariant); dispid 188744032;
    procedure UnlinkPredecessors(const Tasks: IDispatch); dispid 188744033;
    procedure UnlinkSuccessors(const Tasks: IDispatch); dispid 188744034;
    procedure OutlineIndent; dispid 188744035;
    procedure OutlineOutdent; dispid 188744036;
    procedure OutlineHideSubTasks; dispid 188744037;
    procedure OutlineShowSubTasks; dispid 188744038;
    procedure OutlineShowAllTasks; dispid 188744039;
    property Index: Integer readonly dispid 188744040;
    property PreleveledStart: OleVariant readonly dispid 188744049;
    property PreleveledFinish: OleVariant readonly dispid 188744050;
    procedure Split(StartSplitOn: OleVariant; EndSplitOn: OleVariant); dispid 188744054;
    property Predecessors: WideString dispid 188744070;
    property Successors: WideString dispid 188744071;
    property ResourceNames: WideString dispid 188744074;
    property ResourceInitials: WideString dispid 188744075;
    property Estimated: OleVariant dispid 188744076;
    property IgnoreResourceCalendar: OleVariant dispid 188744079;
    property Calendar: WideString dispid 188744082;
    property Duration1Estimated: OleVariant dispid 188744083;
    property Duration2Estimated: OleVariant dispid 188744084;
    property Duration3Estimated: OleVariant dispid 188744085;
    property Duration4Estimated: OleVariant dispid 188744086;
    property Duration5Estimated: OleVariant dispid 188744087;
    property Duration6Estimated: OleVariant dispid 188744088;
    property Duration7Estimated: OleVariant dispid 188744089;
    property Duration8Estimated: OleVariant dispid 188744090;
    property Duration9Estimated: OleVariant dispid 188744091;
    property Duration10Estimated: OleVariant dispid 188744092;
    property BaselineDurationEstimated: OleVariant dispid 188744093;
    property OutlineCode1: WideString dispid 188744096;
    property OutlineCode2: WideString dispid 188744098;
    property OutlineCode3: WideString dispid 188744100;
    property OutlineCode4: WideString dispid 188744102;
    property OutlineCode5: WideString dispid 188744104;
    property OutlineCode6: WideString dispid 188744106;
    property OutlineCode7: WideString dispid 188744108;
    property OutlineCode8: WideString dispid 188744110;
    property OutlineCode9: WideString dispid 188744112;
    property OutlineCode10: WideString dispid 188744114;
    property Deadline: OleVariant dispid 188744117;
    property StartSlack: OleVariant readonly dispid 188744118;
    property FinishSlack: OleVariant readonly dispid 188744119;
    property VAC: OleVariant readonly dispid 188744121;
    property TaskDependencies: TaskDependencies readonly dispid 188744125;
    property GroupBySummary: OleVariant readonly dispid 188744126;
    property WBSPredecessors: WideString readonly dispid 188744129;
    property WBSSuccessors: WideString readonly dispid 188744130;
    property HyperlinkScreenTip: WideString dispid 188744132;
  end;

// *********************************************************************//
// Interface: Resource
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C41-0000-0000-C000-000000000046}
// *********************************************************************//
  Resource = interface(IDispatch)
    ['{000C0C41-0000-0000-C000-000000000046}']
    function  Get_ID: Integer; safecall;
    function  Get_Name: WideString; safecall;
    procedure Set_Name(const retval: WideString); safecall;
    function  Get_Initials: WideString; safecall;
    procedure Set_Initials(const retval: WideString); safecall;
    function  Get_Group: WideString; safecall;
    procedure Set_Group(const retval: WideString); safecall;
    function  Get_MaxUnits: OleVariant; safecall;
    procedure Set_MaxUnits(retval: OleVariant); safecall;
    function  Get_BaseCalendar: WideString; safecall;
    procedure Set_BaseCalendar(const retval: WideString); safecall;
    function  Get_StandardRate: OleVariant; safecall;
    procedure Set_StandardRate(retval: OleVariant); safecall;
    function  Get_OvertimeRate: OleVariant; safecall;
    procedure Set_OvertimeRate(retval: OleVariant); safecall;
    function  Get_Text1: WideString; safecall;
    procedure Set_Text1(const retval: WideString); safecall;
    function  Get_Text2: WideString; safecall;
    procedure Set_Text2(const retval: WideString); safecall;
    function  Get_Code: WideString; safecall;
    procedure Set_Code(const retval: WideString); safecall;
    function  Get_ActualCost: OleVariant; safecall;
    function  Get_Cost: OleVariant; safecall;
    function  Get_Work: OleVariant; safecall;
    function  Get_ActualWork: OleVariant; safecall;
    function  Get_BaselineWork: OleVariant; safecall;
    procedure Set_BaselineWork(retval: OleVariant); safecall;
    function  Get_OvertimeWork: OleVariant; safecall;
    function  Get_BaselineCost: OleVariant; safecall;
    procedure Set_BaselineCost(retval: OleVariant); safecall;
    function  Get_CostPerUse: OleVariant; safecall;
    procedure Set_CostPerUse(retval: OleVariant); safecall;
    function  Get_AccrueAt: OleVariant; safecall;
    procedure Set_AccrueAt(retval: OleVariant); safecall;
    function  Get_Notes: WideString; safecall;
    procedure Set_Notes(const retval: WideString); safecall;
    function  Get_RemainingCost: OleVariant; safecall;
    function  Get_RemainingWork: OleVariant; safecall;
    function  Get_WorkVariance: OleVariant; safecall;
    function  Get_CostVariance: OleVariant; safecall;
    function  Get_Overallocated: OleVariant; safecall;
    function  Get_PeakUnits: OleVariant; safecall;
    function  Get_UniqueID: Integer; safecall;
    function  Get_PercentWorkComplete: OleVariant; safecall;
    function  Get_Text3: WideString; safecall;
    procedure Set_Text3(const retval: WideString); safecall;
    function  Get_Text4: WideString; safecall;
    procedure Set_Text4(const retval: WideString); safecall;
    function  Get_Text5: WideString; safecall;
    procedure Set_Text5(const retval: WideString); safecall;
    function  Get_Objects: Integer; safecall;
    function  Get_LinkedFields: OleVariant; safecall;
    function  Get_EMailAddress: WideString; safecall;
    procedure Set_EMailAddress(const retval: WideString); safecall;
    function  Get_RegularWork: OleVariant; safecall;
    function  Get_ActualOvertimeWork: OleVariant; safecall;
    function  Get_RemainingOvertimeWork: OleVariant; safecall;
    function  Get_OvertimeCost: OleVariant; safecall;
    function  Get_ActualOvertimeCost: OleVariant; safecall;
    function  Get_RemainingOvertimeCost: OleVariant; safecall;
    function  Get_BCWS: OleVariant; safecall;
    function  Get_BCWP: OleVariant; safecall;
    function  Get_ACWP: OleVariant; safecall;
    function  Get_SV: OleVariant; safecall;
    function  Get_Assignments: Assignments; safecall;
    function  Get_AvailableFrom: OleVariant; safecall;
    procedure Set_AvailableFrom(retval: OleVariant); safecall;
    function  Get_AvailableTo: OleVariant; safecall;
    procedure Set_AvailableTo(retval: OleVariant); safecall;
    function  Get_Parent: IDispatch; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Text6: WideString; safecall;
    procedure Set_Text6(const retval: WideString); safecall;
    function  Get_Text7: WideString; safecall;
    procedure Set_Text7(const retval: WideString); safecall;
    function  Get_Text8: WideString; safecall;
    procedure Set_Text8(const retval: WideString); safecall;
    function  Get_Text9: WideString; safecall;
    procedure Set_Text9(const retval: WideString); safecall;
    function  Get_Text10: WideString; safecall;
    procedure Set_Text10(const retval: WideString); safecall;
    function  Get_Start1: OleVariant; safecall;
    procedure Set_Start1(retval: OleVariant); safecall;
    function  Get_Start2: OleVariant; safecall;
    procedure Set_Start2(retval: OleVariant); safecall;
    function  Get_Start3: OleVariant; safecall;
    procedure Set_Start3(retval: OleVariant); safecall;
    function  Get_Start4: OleVariant; safecall;
    procedure Set_Start4(retval: OleVariant); safecall;
    function  Get_Start5: OleVariant; safecall;
    procedure Set_Start5(retval: OleVariant); safecall;
    function  Get_Finish1: OleVariant; safecall;
    procedure Set_Finish1(retval: OleVariant); safecall;
    function  Get_Finish2: OleVariant; safecall;
    procedure Set_Finish2(retval: OleVariant); safecall;
    function  Get_Finish3: OleVariant; safecall;
    procedure Set_Finish3(retval: OleVariant); safecall;
    function  Get_Finish4: OleVariant; safecall;
    procedure Set_Finish4(retval: OleVariant); safecall;
    function  Get_Finish5: OleVariant; safecall;
    procedure Set_Finish5(retval: OleVariant); safecall;
    function  Get_Number1: Double; safecall;
    procedure Set_Number1(retval: Double); safecall;
    function  Get_Number2: Double; safecall;
    procedure Set_Number2(retval: Double); safecall;
    function  Get_Number3: Double; safecall;
    procedure Set_Number3(retval: Double); safecall;
    function  Get_Number4: Double; safecall;
    procedure Set_Number4(retval: Double); safecall;
    function  Get_Number5: Double; safecall;
    procedure Set_Number5(retval: Double); safecall;
    function  Get_Duration1: OleVariant; safecall;
    procedure Set_Duration1(retval: OleVariant); safecall;
    function  Get_Duration2: OleVariant; safecall;
    procedure Set_Duration2(retval: OleVariant); safecall;
    function  Get_Duration3: OleVariant; safecall;
    procedure Set_Duration3(retval: OleVariant); safecall;
    function  Get_Cost1: OleVariant; safecall;
    procedure Set_Cost1(retval: OleVariant); safecall;
    function  Get_Cost2: OleVariant; safecall;
    procedure Set_Cost2(retval: OleVariant); safecall;
    function  Get_Cost3: OleVariant; safecall;
    procedure Set_Cost3(retval: OleVariant); safecall;
    function  Get_Flag10: OleVariant; safecall;
    procedure Set_Flag10(retval: OleVariant); safecall;
    function  Get_Flag1: OleVariant; safecall;
    procedure Set_Flag1(retval: OleVariant); safecall;
    function  Get_Flag2: OleVariant; safecall;
    procedure Set_Flag2(retval: OleVariant); safecall;
    function  Get_Flag3: OleVariant; safecall;
    procedure Set_Flag3(retval: OleVariant); safecall;
    function  Get_Flag4: OleVariant; safecall;
    procedure Set_Flag4(retval: OleVariant); safecall;
    function  Get_Flag5: OleVariant; safecall;
    procedure Set_Flag5(retval: OleVariant); safecall;
    function  Get_Flag6: OleVariant; safecall;
    procedure Set_Flag6(retval: OleVariant); safecall;
    function  Get_Flag7: OleVariant; safecall;
    procedure Set_Flag7(retval: OleVariant); safecall;
    function  Get_Flag8: OleVariant; safecall;
    procedure Set_Flag8(retval: OleVariant); safecall;
    function  Get_Flag9: OleVariant; safecall;
    procedure Set_Flag9(retval: OleVariant); safecall;
    function  Get_Hyperlink: WideString; safecall;
    procedure Set_Hyperlink(const retval: WideString); safecall;
    function  Get_HyperlinkAddress: WideString; safecall;
    procedure Set_HyperlinkAddress(const retval: WideString); safecall;
    function  Get_HyperlinkSubAddress: WideString; safecall;
    procedure Set_HyperlinkSubAddress(const retval: WideString); safecall;
    function  Get_HyperlinkHREF: WideString; safecall;
    procedure Set_HyperlinkHREF(const retval: WideString); safecall;
    function  GetField(FieldID: PjField): WideString; safecall;
    procedure SetField(FieldID: PjField; const Value: WideString); safecall;
    function  Get_Calendar: Calendar; safecall;
    procedure Delete; safecall;
    procedure AppendNotes(const Value: WideString); safecall;
    function  TimeScaleData(StartDate: OleVariant; EndDate: OleVariant;
                            Type_: PjResourceTimescaledData; TimeScaleUnit: PjTimescaleUnit;
                            Count: Integer): TimeScaleValues; safecall;
    function  Get_CostRateTables: CostRateTables; safecall;
    function  Get_PayRates: PayRates; safecall;
    function  Get_CanLevel: OleVariant; safecall;
    procedure Set_CanLevel(retval: OleVariant); safecall;
    function  Get_Cost4: OleVariant; safecall;
    procedure Set_Cost4(retval: OleVariant); safecall;
    function  Get_Cost5: OleVariant; safecall;
    procedure Set_Cost5(retval: OleVariant); safecall;
    function  Get_Cost6: OleVariant; safecall;
    procedure Set_Cost6(retval: OleVariant); safecall;
    function  Get_Cost7: OleVariant; safecall;
    procedure Set_Cost7(retval: OleVariant); safecall;
    function  Get_Cost8: OleVariant; safecall;
    procedure Set_Cost8(retval: OleVariant); safecall;
    function  Get_Cost9: OleVariant; safecall;
    procedure Set_Cost9(retval: OleVariant); safecall;
    function  Get_Cost10: OleVariant; safecall;
    procedure Set_Cost10(retval: OleVariant); safecall;
    function  Get_Date1: OleVariant; safecall;
    procedure Set_Date1(retval: OleVariant); safecall;
    function  Get_Date2: OleVariant; safecall;
    procedure Set_Date2(retval: OleVariant); safecall;
    function  Get_Date3: OleVariant; safecall;
    procedure Set_Date3(retval: OleVariant); safecall;
    function  Get_Date4: OleVariant; safecall;
    procedure Set_Date4(retval: OleVariant); safecall;
    function  Get_Date5: OleVariant; safecall;
    procedure Set_Date5(retval: OleVariant); safecall;
    function  Get_Date6: OleVariant; safecall;
    procedure Set_Date6(retval: OleVariant); safecall;
    function  Get_Date7: OleVariant; safecall;
    procedure Set_Date7(retval: OleVariant); safecall;
    function  Get_Date8: OleVariant; safecall;
    procedure Set_Date8(retval: OleVariant); safecall;
    function  Get_Date9: OleVariant; safecall;
    procedure Set_Date9(retval: OleVariant); safecall;
    function  Get_Date10: OleVariant; safecall;
    procedure Set_Date10(retval: OleVariant); safecall;
    function  Get_Duration4: OleVariant; safecall;
    procedure Set_Duration4(retval: OleVariant); safecall;
    function  Get_Duration5: OleVariant; safecall;
    procedure Set_Duration5(retval: OleVariant); safecall;
    function  Get_Duration6: OleVariant; safecall;
    procedure Set_Duration6(retval: OleVariant); safecall;
    function  Get_Duration7: OleVariant; safecall;
    procedure Set_Duration7(retval: OleVariant); safecall;
    function  Get_Duration8: OleVariant; safecall;
    procedure Set_Duration8(retval: OleVariant); safecall;
    function  Get_Duration9: OleVariant; safecall;
    procedure Set_Duration9(retval: OleVariant); safecall;
    function  Get_Duration10: OleVariant; safecall;
    procedure Set_Duration10(retval: OleVariant); safecall;
    function  Get_Finish6: OleVariant; safecall;
    procedure Set_Finish6(retval: OleVariant); safecall;
    function  Get_Finish7: OleVariant; safecall;
    procedure Set_Finish7(retval: OleVariant); safecall;
    function  Get_Finish8: OleVariant; safecall;
    procedure Set_Finish8(retval: OleVariant); safecall;
    function  Get_Finish9: OleVariant; safecall;
    procedure Set_Finish9(retval: OleVariant); safecall;
    function  Get_Finish10: OleVariant; safecall;
    procedure Set_Finish10(retval: OleVariant); safecall;
    function  Get_Flag11: OleVariant; safecall;
    procedure Set_Flag11(retval: OleVariant); safecall;
    function  Get_Flag12: OleVariant; safecall;
    procedure Set_Flag12(retval: OleVariant); safecall;
    function  Get_Flag13: OleVariant; safecall;
    procedure Set_Flag13(retval: OleVariant); safecall;
    function  Get_Flag14: OleVariant; safecall;
    procedure Set_Flag14(retval: OleVariant); safecall;
    function  Get_Flag15: OleVariant; safecall;
    procedure Set_Flag15(retval: OleVariant); safecall;
    function  Get_Flag16: OleVariant; safecall;
    procedure Set_Flag16(retval: OleVariant); safecall;
    function  Get_Flag17: OleVariant; safecall;
    procedure Set_Flag17(retval: OleVariant); safecall;
    function  Get_Flag18: OleVariant; safecall;
    procedure Set_Flag18(retval: OleVariant); safecall;
    function  Get_Flag19: OleVariant; safecall;
    procedure Set_Flag19(retval: OleVariant); safecall;
    function  Get_Flag20: OleVariant; safecall;
    procedure Set_Flag20(retval: OleVariant); safecall;
    function  Get_Number6: Double; safecall;
    procedure Set_Number6(retval: Double); safecall;
    function  Get_Number7: Double; safecall;
    procedure Set_Number7(retval: Double); safecall;
    function  Get_Number8: Double; safecall;
    procedure Set_Number8(retval: Double); safecall;
    function  Get_Number9: Double; safecall;
    procedure Set_Number9(retval: Double); safecall;
    function  Get_Number10: Double; safecall;
    procedure Set_Number10(retval: Double); safecall;
    function  Get_Number11: Double; safecall;
    procedure Set_Number11(retval: Double); safecall;
    function  Get_Number12: Double; safecall;
    procedure Set_Number12(retval: Double); safecall;
    function  Get_Number13: Double; safecall;
    procedure Set_Number13(retval: Double); safecall;
    function  Get_Number14: Double; safecall;
    procedure Set_Number14(retval: Double); safecall;
    function  Get_Number15: Double; safecall;
    procedure Set_Number15(retval: Double); safecall;
    function  Get_Number16: Double; safecall;
    procedure Set_Number16(retval: Double); safecall;
    function  Get_Number17: Double; safecall;
    procedure Set_Number17(retval: Double); safecall;
    function  Get_Number18: Double; safecall;
    procedure Set_Number18(retval: Double); safecall;
    function  Get_Number19: Double; safecall;
    procedure Set_Number19(retval: Double); safecall;
    function  Get_Number20: Double; safecall;
    procedure Set_Number20(retval: Double); safecall;
    function  Get_Start6: OleVariant; safecall;
    procedure Set_Start6(retval: OleVariant); safecall;
    function  Get_Start7: OleVariant; safecall;
    procedure Set_Start7(retval: OleVariant); safecall;
    function  Get_Start8: OleVariant; safecall;
    procedure Set_Start8(retval: OleVariant); safecall;
    function  Get_Start9: OleVariant; safecall;
    procedure Set_Start9(retval: OleVariant); safecall;
    function  Get_Start10: OleVariant; safecall;
    procedure Set_Start10(retval: OleVariant); safecall;
    function  Get_Text11: WideString; safecall;
    procedure Set_Text11(const retval: WideString); safecall;
    function  Get_Text12: WideString; safecall;
    procedure Set_Text12(const retval: WideString); safecall;
    function  Get_Text13: WideString; safecall;
    procedure Set_Text13(const retval: WideString); safecall;
    function  Get_Text14: WideString; safecall;
    procedure Set_Text14(const retval: WideString); safecall;
    function  Get_Text15: WideString; safecall;
    procedure Set_Text15(const retval: WideString); safecall;
    function  Get_Text16: WideString; safecall;
    procedure Set_Text16(const retval: WideString); safecall;
    function  Get_Text17: WideString; safecall;
    procedure Set_Text17(const retval: WideString); safecall;
    function  Get_Text18: WideString; safecall;
    procedure Set_Text18(const retval: WideString); safecall;
    function  Get_Text19: WideString; safecall;
    procedure Set_Text19(const retval: WideString); safecall;
    function  Get_Text20: WideString; safecall;
    procedure Set_Text20(const retval: WideString); safecall;
    function  Get_Text21: WideString; safecall;
    procedure Set_Text21(const retval: WideString); safecall;
    function  Get_Text22: WideString; safecall;
    procedure Set_Text22(const retval: WideString); safecall;
    function  Get_Text23: WideString; safecall;
    procedure Set_Text23(const retval: WideString); safecall;
    function  Get_Text24: WideString; safecall;
    procedure Set_Text24(const retval: WideString); safecall;
    function  Get_Text25: WideString; safecall;
    procedure Set_Text25(const retval: WideString); safecall;
    function  Get_Text26: WideString; safecall;
    procedure Set_Text26(const retval: WideString); safecall;
    function  Get_Text27: WideString; safecall;
    procedure Set_Text27(const retval: WideString); safecall;
    function  Get_Text28: WideString; safecall;
    procedure Set_Text28(const retval: WideString); safecall;
    function  Get_Text29: WideString; safecall;
    procedure Set_Text29(const retval: WideString); safecall;
    function  Get_Text30: WideString; safecall;
    procedure Set_Text30(const retval: WideString); safecall;
    function  Get_Phonetics: WideString; safecall;
    procedure Set_Phonetics(const retval: WideString); safecall;
    function  Get_Index: Integer; safecall;
    procedure Level; safecall;
    function  Get_Confirmed: OleVariant; safecall;
    function  Get_ResponsePending: OleVariant; safecall;
    function  Get_TeamStatusPending: OleVariant; safecall;
    function  Get_UpdateNeeded: OleVariant; safecall;
    function  Get_CV: OleVariant; safecall;
    function  Get_Workgroup: PjWorkgroupMessages; safecall;
    procedure Set_Workgroup(retval: PjWorkgroupMessages); safecall;
    function  Get_Project: WideString; safecall;
    function  Get_Availabilities: Availabilities; safecall;
    function  Get_OutlineCode1: WideString; safecall;
    procedure Set_OutlineCode1(const retval: WideString); safecall;
    function  Get_OutlineCode2: WideString; safecall;
    procedure Set_OutlineCode2(const retval: WideString); safecall;
    function  Get_OutlineCode3: WideString; safecall;
    procedure Set_OutlineCode3(const retval: WideString); safecall;
    function  Get_OutlineCode4: WideString; safecall;
    procedure Set_OutlineCode4(const retval: WideString); safecall;
    function  Get_OutlineCode5: WideString; safecall;
    procedure Set_OutlineCode5(const retval: WideString); safecall;
    function  Get_OutlineCode6: WideString; safecall;
    procedure Set_OutlineCode6(const retval: WideString); safecall;
    function  Get_OutlineCode7: WideString; safecall;
    procedure Set_OutlineCode7(const retval: WideString); safecall;
    function  Get_OutlineCode8: WideString; safecall;
    procedure Set_OutlineCode8(const retval: WideString); safecall;
    function  Get_OutlineCode9: WideString; safecall;
    procedure Set_OutlineCode9(const retval: WideString); safecall;
    function  Get_OutlineCode10: WideString; safecall;
    procedure Set_OutlineCode10(const retval: WideString); safecall;
    function  Get_MaterialLabel: WideString; safecall;
    procedure Set_MaterialLabel(const retval: WideString); safecall;
    function  Get_Type_: PjResourceTypes; safecall;
    procedure Set_Type_(retval: PjResourceTypes); safecall;
    function  Get_VAC: OleVariant; safecall;
    function  Get_GroupBySummary: OleVariant; safecall;
    function  Get_WindowsUserAccount: WideString; safecall;
    procedure Set_WindowsUserAccount(const retval: WideString); safecall;
    function  Get_HyperlinkScreenTip: WideString; safecall;
    procedure Set_HyperlinkScreenTip(const retval: WideString); safecall;
    property ID: Integer read Get_ID;
    property Name: WideString read Get_Name write Set_Name;
    property Initials: WideString read Get_Initials write Set_Initials;
    property Group: WideString read Get_Group write Set_Group;
    property MaxUnits: OleVariant read Get_MaxUnits write Set_MaxUnits;
    property BaseCalendar: WideString read Get_BaseCalendar write Set_BaseCalendar;
    property StandardRate: OleVariant read Get_StandardRate write Set_StandardRate;
    property OvertimeRate: OleVariant read Get_OvertimeRate write Set_OvertimeRate;
    property Text1: WideString read Get_Text1 write Set_Text1;
    property Text2: WideString read Get_Text2 write Set_Text2;
    property Code: WideString read Get_Code write Set_Code;
    property ActualCost: OleVariant read Get_ActualCost;
    property Cost: OleVariant read Get_Cost;
    property Work: OleVariant read Get_Work;
    property ActualWork: OleVariant read Get_ActualWork;
    property BaselineWork: OleVariant read Get_BaselineWork write Set_BaselineWork;
    property OvertimeWork: OleVariant read Get_OvertimeWork;
    property BaselineCost: OleVariant read Get_BaselineCost write Set_BaselineCost;
    property CostPerUse: OleVariant read Get_CostPerUse write Set_CostPerUse;
    property AccrueAt: OleVariant read Get_AccrueAt write Set_AccrueAt;
    property Notes: WideString read Get_Notes write Set_Notes;
    property RemainingCost: OleVariant read Get_RemainingCost;
    property RemainingWork: OleVariant read Get_RemainingWork;
    property WorkVariance: OleVariant read Get_WorkVariance;
    property CostVariance: OleVariant read Get_CostVariance;
    property Overallocated: OleVariant read Get_Overallocated;
    property PeakUnits: OleVariant read Get_PeakUnits;
    property UniqueID: Integer read Get_UniqueID;
    property PercentWorkComplete: OleVariant read Get_PercentWorkComplete;
    property Text3: WideString read Get_Text3 write Set_Text3;
    property Text4: WideString read Get_Text4 write Set_Text4;
    property Text5: WideString read Get_Text5 write Set_Text5;
    property Objects: Integer read Get_Objects;
    property LinkedFields: OleVariant read Get_LinkedFields;
    property EMailAddress: WideString read Get_EMailAddress write Set_EMailAddress;
    property RegularWork: OleVariant read Get_RegularWork;
    property ActualOvertimeWork: OleVariant read Get_ActualOvertimeWork;
    property RemainingOvertimeWork: OleVariant read Get_RemainingOvertimeWork;
    property OvertimeCost: OleVariant read Get_OvertimeCost;
    property ActualOvertimeCost: OleVariant read Get_ActualOvertimeCost;
    property RemainingOvertimeCost: OleVariant read Get_RemainingOvertimeCost;
    property BCWS: OleVariant read Get_BCWS;
    property BCWP: OleVariant read Get_BCWP;
    property ACWP: OleVariant read Get_ACWP;
    property SV: OleVariant read Get_SV;
    property Assignments: Assignments read Get_Assignments;
    property AvailableFrom: OleVariant read Get_AvailableFrom write Set_AvailableFrom;
    property AvailableTo: OleVariant read Get_AvailableTo write Set_AvailableTo;
    property Parent: IDispatch read Get_Parent;
    property Application: Application read Get_Application;
    property Text6: WideString read Get_Text6 write Set_Text6;
    property Text7: WideString read Get_Text7 write Set_Text7;
    property Text8: WideString read Get_Text8 write Set_Text8;
    property Text9: WideString read Get_Text9 write Set_Text9;
    property Text10: WideString read Get_Text10 write Set_Text10;
    property Start1: OleVariant read Get_Start1 write Set_Start1;
    property Start2: OleVariant read Get_Start2 write Set_Start2;
    property Start3: OleVariant read Get_Start3 write Set_Start3;
    property Start4: OleVariant read Get_Start4 write Set_Start4;
    property Start5: OleVariant read Get_Start5 write Set_Start5;
    property Finish1: OleVariant read Get_Finish1 write Set_Finish1;
    property Finish2: OleVariant read Get_Finish2 write Set_Finish2;
    property Finish3: OleVariant read Get_Finish3 write Set_Finish3;
    property Finish4: OleVariant read Get_Finish4 write Set_Finish4;
    property Finish5: OleVariant read Get_Finish5 write Set_Finish5;
    property Number1: Double read Get_Number1 write Set_Number1;
    property Number2: Double read Get_Number2 write Set_Number2;
    property Number3: Double read Get_Number3 write Set_Number3;
    property Number4: Double read Get_Number4 write Set_Number4;
    property Number5: Double read Get_Number5 write Set_Number5;
    property Duration1: OleVariant read Get_Duration1 write Set_Duration1;
    property Duration2: OleVariant read Get_Duration2 write Set_Duration2;
    property Duration3: OleVariant read Get_Duration3 write Set_Duration3;
    property Cost1: OleVariant read Get_Cost1 write Set_Cost1;
    property Cost2: OleVariant read Get_Cost2 write Set_Cost2;
    property Cost3: OleVariant read Get_Cost3 write Set_Cost3;
    property Flag10: OleVariant read Get_Flag10 write Set_Flag10;
    property Flag1: OleVariant read Get_Flag1 write Set_Flag1;
    property Flag2: OleVariant read Get_Flag2 write Set_Flag2;
    property Flag3: OleVariant read Get_Flag3 write Set_Flag3;
    property Flag4: OleVariant read Get_Flag4 write Set_Flag4;
    property Flag5: OleVariant read Get_Flag5 write Set_Flag5;
    property Flag6: OleVariant read Get_Flag6 write Set_Flag6;
    property Flag7: OleVariant read Get_Flag7 write Set_Flag7;
    property Flag8: OleVariant read Get_Flag8 write Set_Flag8;
    property Flag9: OleVariant read Get_Flag9 write Set_Flag9;
    property Hyperlink: WideString read Get_Hyperlink write Set_Hyperlink;
    property HyperlinkAddress: WideString read Get_HyperlinkAddress write Set_HyperlinkAddress;
    property HyperlinkSubAddress: WideString read Get_HyperlinkSubAddress write Set_HyperlinkSubAddress;
    property HyperlinkHREF: WideString read Get_HyperlinkHREF write Set_HyperlinkHREF;
    property Calendar: Calendar read Get_Calendar;
    property CostRateTables: CostRateTables read Get_CostRateTables;
    property PayRates: PayRates read Get_PayRates;
    property CanLevel: OleVariant read Get_CanLevel write Set_CanLevel;
    property Cost4: OleVariant read Get_Cost4 write Set_Cost4;
    property Cost5: OleVariant read Get_Cost5 write Set_Cost5;
    property Cost6: OleVariant read Get_Cost6 write Set_Cost6;
    property Cost7: OleVariant read Get_Cost7 write Set_Cost7;
    property Cost8: OleVariant read Get_Cost8 write Set_Cost8;
    property Cost9: OleVariant read Get_Cost9 write Set_Cost9;
    property Cost10: OleVariant read Get_Cost10 write Set_Cost10;
    property Date1: OleVariant read Get_Date1 write Set_Date1;
    property Date2: OleVariant read Get_Date2 write Set_Date2;
    property Date3: OleVariant read Get_Date3 write Set_Date3;
    property Date4: OleVariant read Get_Date4 write Set_Date4;
    property Date5: OleVariant read Get_Date5 write Set_Date5;
    property Date6: OleVariant read Get_Date6 write Set_Date6;
    property Date7: OleVariant read Get_Date7 write Set_Date7;
    property Date8: OleVariant read Get_Date8 write Set_Date8;
    property Date9: OleVariant read Get_Date9 write Set_Date9;
    property Date10: OleVariant read Get_Date10 write Set_Date10;
    property Duration4: OleVariant read Get_Duration4 write Set_Duration4;
    property Duration5: OleVariant read Get_Duration5 write Set_Duration5;
    property Duration6: OleVariant read Get_Duration6 write Set_Duration6;
    property Duration7: OleVariant read Get_Duration7 write Set_Duration7;
    property Duration8: OleVariant read Get_Duration8 write Set_Duration8;
    property Duration9: OleVariant read Get_Duration9 write Set_Duration9;
    property Duration10: OleVariant read Get_Duration10 write Set_Duration10;
    property Finish6: OleVariant read Get_Finish6 write Set_Finish6;
    property Finish7: OleVariant read Get_Finish7 write Set_Finish7;
    property Finish8: OleVariant read Get_Finish8 write Set_Finish8;
    property Finish9: OleVariant read Get_Finish9 write Set_Finish9;
    property Finish10: OleVariant read Get_Finish10 write Set_Finish10;
    property Flag11: OleVariant read Get_Flag11 write Set_Flag11;
    property Flag12: OleVariant read Get_Flag12 write Set_Flag12;
    property Flag13: OleVariant read Get_Flag13 write Set_Flag13;
    property Flag14: OleVariant read Get_Flag14 write Set_Flag14;
    property Flag15: OleVariant read Get_Flag15 write Set_Flag15;
    property Flag16: OleVariant read Get_Flag16 write Set_Flag16;
    property Flag17: OleVariant read Get_Flag17 write Set_Flag17;
    property Flag18: OleVariant read Get_Flag18 write Set_Flag18;
    property Flag19: OleVariant read Get_Flag19 write Set_Flag19;
    property Flag20: OleVariant read Get_Flag20 write Set_Flag20;
    property Number6: Double read Get_Number6 write Set_Number6;
    property Number7: Double read Get_Number7 write Set_Number7;
    property Number8: Double read Get_Number8 write Set_Number8;
    property Number9: Double read Get_Number9 write Set_Number9;
    property Number10: Double read Get_Number10 write Set_Number10;
    property Number11: Double read Get_Number11 write Set_Number11;
    property Number12: Double read Get_Number12 write Set_Number12;
    property Number13: Double read Get_Number13 write Set_Number13;
    property Number14: Double read Get_Number14 write Set_Number14;
    property Number15: Double read Get_Number15 write Set_Number15;
    property Number16: Double read Get_Number16 write Set_Number16;
    property Number17: Double read Get_Number17 write Set_Number17;
    property Number18: Double read Get_Number18 write Set_Number18;
    property Number19: Double read Get_Number19 write Set_Number19;
    property Number20: Double read Get_Number20 write Set_Number20;
    property Start6: OleVariant read Get_Start6 write Set_Start6;
    property Start7: OleVariant read Get_Start7 write Set_Start7;
    property Start8: OleVariant read Get_Start8 write Set_Start8;
    property Start9: OleVariant read Get_Start9 write Set_Start9;
    property Start10: OleVariant read Get_Start10 write Set_Start10;
    property Text11: WideString read Get_Text11 write Set_Text11;
    property Text12: WideString read Get_Text12 write Set_Text12;
    property Text13: WideString read Get_Text13 write Set_Text13;
    property Text14: WideString read Get_Text14 write Set_Text14;
    property Text15: WideString read Get_Text15 write Set_Text15;
    property Text16: WideString read Get_Text16 write Set_Text16;
    property Text17: WideString read Get_Text17 write Set_Text17;
    property Text18: WideString read Get_Text18 write Set_Text18;
    property Text19: WideString read Get_Text19 write Set_Text19;
    property Text20: WideString read Get_Text20 write Set_Text20;
    property Text21: WideString read Get_Text21 write Set_Text21;
    property Text22: WideString read Get_Text22 write Set_Text22;
    property Text23: WideString read Get_Text23 write Set_Text23;
    property Text24: WideString read Get_Text24 write Set_Text24;
    property Text25: WideString read Get_Text25 write Set_Text25;
    property Text26: WideString read Get_Text26 write Set_Text26;
    property Text27: WideString read Get_Text27 write Set_Text27;
    property Text28: WideString read Get_Text28 write Set_Text28;
    property Text29: WideString read Get_Text29 write Set_Text29;
    property Text30: WideString read Get_Text30 write Set_Text30;
    property Phonetics: WideString read Get_Phonetics write Set_Phonetics;
    property Index: Integer read Get_Index;
    property Confirmed: OleVariant read Get_Confirmed;
    property ResponsePending: OleVariant read Get_ResponsePending;
    property TeamStatusPending: OleVariant read Get_TeamStatusPending;
    property UpdateNeeded: OleVariant read Get_UpdateNeeded;
    property CV: OleVariant read Get_CV;
    property Workgroup: PjWorkgroupMessages read Get_Workgroup write Set_Workgroup;
    property Project: WideString read Get_Project;
    property Availabilities: Availabilities read Get_Availabilities;
    property OutlineCode1: WideString read Get_OutlineCode1 write Set_OutlineCode1;
    property OutlineCode2: WideString read Get_OutlineCode2 write Set_OutlineCode2;
    property OutlineCode3: WideString read Get_OutlineCode3 write Set_OutlineCode3;
    property OutlineCode4: WideString read Get_OutlineCode4 write Set_OutlineCode4;
    property OutlineCode5: WideString read Get_OutlineCode5 write Set_OutlineCode5;
    property OutlineCode6: WideString read Get_OutlineCode6 write Set_OutlineCode6;
    property OutlineCode7: WideString read Get_OutlineCode7 write Set_OutlineCode7;
    property OutlineCode8: WideString read Get_OutlineCode8 write Set_OutlineCode8;
    property OutlineCode9: WideString read Get_OutlineCode9 write Set_OutlineCode9;
    property OutlineCode10: WideString read Get_OutlineCode10 write Set_OutlineCode10;
    property MaterialLabel: WideString read Get_MaterialLabel write Set_MaterialLabel;
    property Type_: PjResourceTypes read Get_Type_ write Set_Type_;
    property VAC: OleVariant read Get_VAC;
    property GroupBySummary: OleVariant read Get_GroupBySummary;
    property WindowsUserAccount: WideString read Get_WindowsUserAccount write Set_WindowsUserAccount;
    property HyperlinkScreenTip: WideString read Get_HyperlinkScreenTip write Set_HyperlinkScreenTip;
  end;

// *********************************************************************//
// DispIntf:  ResourceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C41-0000-0000-C000-000000000046}
// *********************************************************************//
  ResourceDisp = dispinterface
    ['{000C0C41-0000-0000-C000-000000000046}']
    property ID: Integer readonly dispid 205520896;
    property Name: WideString dispid 205520897;
    property Initials: WideString dispid 205520898;
    property Group: WideString dispid 205520899;
    property MaxUnits: OleVariant dispid 205520900;
    property BaseCalendar: WideString dispid 205520901;
    property StandardRate: OleVariant dispid 205520902;
    property OvertimeRate: OleVariant dispid 205520903;
    property Text1: WideString dispid 205520904;
    property Text2: WideString dispid 205520905;
    property Code: WideString dispid 205520906;
    property ActualCost: OleVariant readonly dispid 205520907;
    property Cost: OleVariant readonly dispid 205520908;
    property Work: OleVariant readonly dispid 205520909;
    property ActualWork: OleVariant readonly dispid 205520910;
    property BaselineWork: OleVariant dispid 205520911;
    property OvertimeWork: OleVariant readonly dispid 205520912;
    property BaselineCost: OleVariant dispid 205520913;
    property CostPerUse: OleVariant dispid 205520914;
    property AccrueAt: OleVariant dispid 205520915;
    property Notes: WideString dispid 205520916;
    property RemainingCost: OleVariant readonly dispid 205520917;
    property RemainingWork: OleVariant readonly dispid 205520918;
    property WorkVariance: OleVariant readonly dispid 205520919;
    property CostVariance: OleVariant readonly dispid 205520920;
    property Overallocated: OleVariant readonly dispid 205520921;
    property PeakUnits: OleVariant readonly dispid 205520922;
    property UniqueID: Integer readonly dispid 0;
    property PercentWorkComplete: OleVariant readonly dispid 205520925;
    property Text3: WideString dispid 205520926;
    property Text4: WideString dispid 205520927;
    property Text5: WideString dispid 205520928;
    property Objects: Integer readonly dispid 205520929;
    property LinkedFields: OleVariant readonly dispid 205520930;
    property EMailAddress: WideString dispid 205520931;
    property RegularWork: OleVariant readonly dispid 205520934;
    property ActualOvertimeWork: OleVariant readonly dispid 205520935;
    property RemainingOvertimeWork: OleVariant readonly dispid 205520936;
    property OvertimeCost: OleVariant readonly dispid 205520943;
    property ActualOvertimeCost: OleVariant readonly dispid 205520944;
    property RemainingOvertimeCost: OleVariant readonly dispid 205520945;
    property BCWS: OleVariant readonly dispid 205520947;
    property BCWP: OleVariant readonly dispid 205520948;
    property ACWP: OleVariant readonly dispid 205520949;
    property SV: OleVariant readonly dispid 205520950;
    property Assignments: Assignments readonly dispid 205520951;
    property AvailableFrom: OleVariant dispid 205520953;
    property AvailableTo: OleVariant dispid 205520954;
    property Parent: IDispatch readonly dispid 205520991;
    property Application: Application readonly dispid 205520992;
    property Text6: WideString dispid 205520993;
    property Text7: WideString dispid 205520994;
    property Text8: WideString dispid 205520995;
    property Text9: WideString dispid 205520996;
    property Text10: WideString dispid 205520997;
    property Start1: OleVariant dispid 205520998;
    property Start2: OleVariant dispid 205520999;
    property Start3: OleVariant dispid 205521000;
    property Start4: OleVariant dispid 205521001;
    property Start5: OleVariant dispid 205521002;
    property Finish1: OleVariant dispid 205521003;
    property Finish2: OleVariant dispid 205521004;
    property Finish3: OleVariant dispid 205521005;
    property Finish4: OleVariant dispid 205521006;
    property Finish5: OleVariant dispid 205521007;
    property Number1: Double dispid 205521008;
    property Number2: Double dispid 205521009;
    property Number3: Double dispid 205521010;
    property Number4: Double dispid 205521011;
    property Number5: Double dispid 205521012;
    property Duration1: OleVariant dispid 205521013;
    property Duration2: OleVariant dispid 205521014;
    property Duration3: OleVariant dispid 205521015;
    property Cost1: OleVariant dispid 205521019;
    property Cost2: OleVariant dispid 205521020;
    property Cost3: OleVariant dispid 205521021;
    property Flag10: OleVariant dispid 205521022;
    property Flag1: OleVariant dispid 205521023;
    property Flag2: OleVariant dispid 205521024;
    property Flag3: OleVariant dispid 205521025;
    property Flag4: OleVariant dispid 205521026;
    property Flag5: OleVariant dispid 205521027;
    property Flag6: OleVariant dispid 205521028;
    property Flag7: OleVariant dispid 205521029;
    property Flag8: OleVariant dispid 205521030;
    property Flag9: OleVariant dispid 205521031;
    property Hyperlink: WideString dispid 205521034;
    property HyperlinkAddress: WideString dispid 205521035;
    property HyperlinkSubAddress: WideString dispid 205521036;
    property HyperlinkHREF: WideString dispid 205521037;
    function  GetField(FieldID: PjField): WideString; dispid 205521043;
    procedure SetField(FieldID: PjField; const Value: WideString); dispid 205521044;
    property Calendar: Calendar readonly dispid 205521046;
    procedure Delete; dispid 205521049;
    procedure AppendNotes(const Value: WideString); dispid 205521050;
    function  TimeScaleData(StartDate: OleVariant; EndDate: OleVariant;
                            Type_: PjResourceTimescaledData; TimeScaleUnit: PjTimescaleUnit;
                            Count: Integer): TimeScaleValues; dispid 205521053;
    property CostRateTables: CostRateTables readonly dispid 205521056;
    property PayRates: PayRates readonly dispid 205521057;
    property CanLevel: OleVariant dispid 205521059;
    property Cost4: OleVariant dispid 205521062;
    property Cost5: OleVariant dispid 205521063;
    property Cost6: OleVariant dispid 205521064;
    property Cost7: OleVariant dispid 205521065;
    property Cost8: OleVariant dispid 205521066;
    property Cost9: OleVariant dispid 205521067;
    property Cost10: OleVariant dispid 205521068;
    property Date1: OleVariant dispid 205521069;
    property Date2: OleVariant dispid 205521070;
    property Date3: OleVariant dispid 205521071;
    property Date4: OleVariant dispid 205521072;
    property Date5: OleVariant dispid 205521073;
    property Date6: OleVariant dispid 205521074;
    property Date7: OleVariant dispid 205521075;
    property Date8: OleVariant dispid 205521076;
    property Date9: OleVariant dispid 205521077;
    property Date10: OleVariant dispid 205521078;
    property Duration4: OleVariant dispid 205521079;
    property Duration5: OleVariant dispid 205521080;
    property Duration6: OleVariant dispid 205521081;
    property Duration7: OleVariant dispid 205521082;
    property Duration8: OleVariant dispid 205521083;
    property Duration9: OleVariant dispid 205521084;
    property Duration10: OleVariant dispid 205521085;
    property Finish6: OleVariant dispid 205521086;
    property Finish7: OleVariant dispid 205521087;
    property Finish8: OleVariant dispid 205521088;
    property Finish9: OleVariant dispid 205521089;
    property Finish10: OleVariant dispid 205521090;
    property Flag11: OleVariant dispid 205521091;
    property Flag12: OleVariant dispid 205521092;
    property Flag13: OleVariant dispid 205521093;
    property Flag14: OleVariant dispid 205521094;
    property Flag15: OleVariant dispid 205521095;
    property Flag16: OleVariant dispid 205521096;
    property Flag17: OleVariant dispid 205521097;
    property Flag18: OleVariant dispid 205521098;
    property Flag19: OleVariant dispid 205521099;
    property Flag20: OleVariant dispid 205521100;
    property Number6: Double dispid 205521101;
    property Number7: Double dispid 205521102;
    property Number8: Double dispid 205521103;
    property Number9: Double dispid 205521104;
    property Number10: Double dispid 205521105;
    property Number11: Double dispid 205521106;
    property Number12: Double dispid 205521107;
    property Number13: Double dispid 205521108;
    property Number14: Double dispid 205521109;
    property Number15: Double dispid 205521110;
    property Number16: Double dispid 205521111;
    property Number17: Double dispid 205521112;
    property Number18: Double dispid 205521113;
    property Number19: Double dispid 205521114;
    property Number20: Double dispid 205521115;
    property Start6: OleVariant dispid 205521116;
    property Start7: OleVariant dispid 205521117;
    property Start8: OleVariant dispid 205521118;
    property Start9: OleVariant dispid 205521119;
    property Start10: OleVariant dispid 205521120;
    property Text11: WideString dispid 205521121;
    property Text12: WideString dispid 205521122;
    property Text13: WideString dispid 205521123;
    property Text14: WideString dispid 205521124;
    property Text15: WideString dispid 205521125;
    property Text16: WideString dispid 205521126;
    property Text17: WideString dispid 205521127;
    property Text18: WideString dispid 205521128;
    property Text19: WideString dispid 205521129;
    property Text20: WideString dispid 205521130;
    property Text21: WideString dispid 205521131;
    property Text22: WideString dispid 205521132;
    property Text23: WideString dispid 205521133;
    property Text24: WideString dispid 205521134;
    property Text25: WideString dispid 205521135;
    property Text26: WideString dispid 205521136;
    property Text27: WideString dispid 205521137;
    property Text28: WideString dispid 205521138;
    property Text29: WideString dispid 205521139;
    property Text30: WideString dispid 205521140;
    property Phonetics: WideString dispid 205521148;
    property Index: Integer readonly dispid 205521149;
    procedure Level; dispid 205521150;
    property Confirmed: OleVariant readonly dispid 205521157;
    property ResponsePending: OleVariant readonly dispid 205521160;
    property TeamStatusPending: OleVariant readonly dispid 205521162;
    property UpdateNeeded: OleVariant readonly dispid 205521163;
    property CV: OleVariant readonly dispid 205521164;
    property Workgroup: PjWorkgroupMessages dispid 205521168;
    property Project: WideString readonly dispid 205521169;
    property Availabilities: Availabilities readonly dispid 205521173;
    property OutlineCode1: WideString dispid 205521174;
    property OutlineCode2: WideString dispid 205521176;
    property OutlineCode3: WideString dispid 205521178;
    property OutlineCode4: WideString dispid 205521180;
    property OutlineCode5: WideString dispid 205521182;
    property OutlineCode6: WideString dispid 205521184;
    property OutlineCode7: WideString dispid 205521186;
    property OutlineCode8: WideString dispid 205521188;
    property OutlineCode9: WideString dispid 205521190;
    property OutlineCode10: WideString dispid 205521192;
    property MaterialLabel: WideString dispid 205521195;
    property Type_: PjResourceTypes dispid 205521196;
    property VAC: OleVariant readonly dispid 205521197;
    property GroupBySummary: OleVariant readonly dispid 205521202;
    property WindowsUserAccount: WideString dispid 205521207;
    property HyperlinkScreenTip: WideString dispid 205521208;
  end;

// *********************************************************************//
// Interface: Calendar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C43-0000-0000-C000-000000000046}
// *********************************************************************//
  Calendar = interface(IDispatch)
    ['{000C0C43-0000-0000-C000-000000000046}']
    function  Get_Name: WideString; safecall;
    procedure Set_Name(const retval: WideString); safecall;
    function  Get_Parent: IDispatch; safecall;
    function  Get_Application: Application; safecall;
    function  Period(Start: OleVariant; Finish: OleVariant): Period; safecall;
    function  Get_Years: Years; safecall;
    function  Get_WeekDays: WeekDays; safecall;
    procedure Reset; safecall;
    function  Get_BaseCalendar: Calendar; safecall;
    procedure Delete; safecall;
    function  Get_Index: Integer; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property Parent: IDispatch read Get_Parent;
    property Application: Application read Get_Application;
    property Years: Years read Get_Years;
    property WeekDays: WeekDays read Get_WeekDays;
    property BaseCalendar: Calendar read Get_BaseCalendar;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  CalendarDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C43-0000-0000-C000-000000000046}
// *********************************************************************//
  CalendarDisp = dispinterface
    ['{000C0C43-0000-0000-C000-000000000046}']
    property Name: WideString dispid 0;
    property Parent: IDispatch readonly dispid 222298124;
    property Application: Application readonly dispid 222298125;
    function  Period(Start: OleVariant; Finish: OleVariant): Period; dispid 222298126;
    property Years: Years readonly dispid 222298127;
    property WeekDays: WeekDays readonly dispid 222298128;
    procedure Reset; dispid 222298129;
    property BaseCalendar: Calendar readonly dispid 222298130;
    procedure Delete; dispid 222298132;
    property Index: Integer readonly dispid 222298134;
  end;

// *********************************************************************//
// Interface: Assignment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C45-0000-0000-C000-000000000046}
// *********************************************************************//
  Assignment = interface(IDispatch)
    ['{000C0C45-0000-0000-C000-000000000046}']
    function  Get_UniqueID: Integer; safecall;
    function  Get_TaskUniqueID: Integer; safecall;
    procedure Set_TaskUniqueID(retval: Integer); safecall;
    function  Get_ResourceUniqueID: Integer; safecall;
    procedure Set_ResourceUniqueID(retval: Integer); safecall;
    function  Get_TaskID: Integer; safecall;
    procedure Set_TaskID(retval: Integer); safecall;
    function  Get_ResourceID: Integer; safecall;
    procedure Set_ResourceID(retval: Integer); safecall;
    function  Get_TaskName: WideString; safecall;
    procedure Set_TaskName(const retval: WideString); safecall;
    function  Get_ResourceName: WideString; safecall;
    procedure Set_ResourceName(const retval: WideString); safecall;
    function  Get_Units: OleVariant; safecall;
    procedure Set_Units(retval: OleVariant); safecall;
    function  Get_Work: OleVariant; safecall;
    procedure Set_Work(retval: OleVariant); safecall;
    function  Get_OvertimeWork: OleVariant; safecall;
    procedure Set_OvertimeWork(retval: OleVariant); safecall;
    function  Get_ActualWork: OleVariant; safecall;
    procedure Set_ActualWork(retval: OleVariant); safecall;
    function  Get_RegularWork: OleVariant; safecall;
    procedure Set_RegularWork(retval: OleVariant); safecall;
    function  Get_RemainingWork: OleVariant; safecall;
    procedure Set_RemainingWork(retval: OleVariant); safecall;
    function  Get_ActualOvertimeWork: OleVariant; safecall;
    procedure Set_ActualOvertimeWork(retval: OleVariant); safecall;
    function  Get_RemainingOvertimeWork: OleVariant; safecall;
    procedure Set_RemainingOvertimeWork(retval: OleVariant); safecall;
    function  Get_BaselineWork: OleVariant; safecall;
    procedure Set_BaselineWork(retval: OleVariant); safecall;
    function  Get_Peak: OleVariant; safecall;
    function  Get_Start: OleVariant; safecall;
    procedure Set_Start(retval: OleVariant); safecall;
    function  Get_Finish: OleVariant; safecall;
    procedure Set_Finish(retval: OleVariant); safecall;
    function  Get_ActualStart: OleVariant; safecall;
    procedure Set_ActualStart(retval: OleVariant); safecall;
    function  Get_ActualFinish: OleVariant; safecall;
    procedure Set_ActualFinish(retval: OleVariant); safecall;
    function  Get_Delay: OleVariant; safecall;
    procedure Set_Delay(retval: OleVariant); safecall;
    function  Get_Cost: OleVariant; safecall;
    procedure Set_Cost(retval: OleVariant); safecall;
    function  Get_OvertimeCost: OleVariant; safecall;
    function  Get_ActualCost: OleVariant; safecall;
    procedure Set_ActualCost(retval: OleVariant); safecall;
    function  Get_RemainingCost: OleVariant; safecall;
    function  Get_ActualOvertimeCost: OleVariant; safecall;
    function  Get_RemainingOvertimeCost: OleVariant; safecall;
    function  Get_BaselineCost: OleVariant; safecall;
    procedure Set_BaselineCost(retval: OleVariant); safecall;
    function  Get_BCWS: OleVariant; safecall;
    function  Get_BCWP: OleVariant; safecall;
    function  Get_ACWP: OleVariant; safecall;
    function  Get_SV: OleVariant; safecall;
    function  Get_CostVariance: OleVariant; safecall;
    function  Get_WorkContour: PjWorkContourType; safecall;
    procedure Set_WorkContour(retval: PjWorkContourType); safecall;
    function  Get_PercentWorkComplete: OleVariant; safecall;
    procedure Set_PercentWorkComplete(retval: OleVariant); safecall;
    function  Get_Project: WideString; safecall;
    function  Get_Notes: WideString; safecall;
    procedure Set_Notes(const retval: WideString); safecall;
    function  Get_Confirmed: OleVariant; safecall;
    procedure Set_Confirmed(retval: OleVariant); safecall;
    function  Get_ResponsePending: OleVariant; safecall;
    procedure Set_ResponsePending(retval: OleVariant); safecall;
    function  Get_UpdateNeeded: OleVariant; safecall;
    function  Get_TeamStatusPending: OleVariant; safecall;
    procedure Set_TeamStatusPending(retval: OleVariant); safecall;
    function  Get_CostRateTable: OleVariant; safecall;
    procedure Set_CostRateTable(retval: OleVariant); safecall;
    function  Get_Parent: IDispatch; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Text1: WideString; safecall;
    procedure Set_Text1(const retval: WideString); safecall;
    function  Get_Text2: WideString; safecall;
    procedure Set_Text2(const retval: WideString); safecall;
    function  Get_Text3: WideString; safecall;
    procedure Set_Text3(const retval: WideString); safecall;
    function  Get_Text4: WideString; safecall;
    procedure Set_Text4(const retval: WideString); safecall;
    function  Get_Text5: WideString; safecall;
    procedure Set_Text5(const retval: WideString); safecall;
    function  Get_Text6: WideString; safecall;
    procedure Set_Text6(const retval: WideString); safecall;
    function  Get_Text7: WideString; safecall;
    procedure Set_Text7(const retval: WideString); safecall;
    function  Get_Text8: WideString; safecall;
    procedure Set_Text8(const retval: WideString); safecall;
    function  Get_Text9: WideString; safecall;
    procedure Set_Text9(const retval: WideString); safecall;
    function  Get_Text10: WideString; safecall;
    procedure Set_Text10(const retval: WideString); safecall;
    function  Get_Start1: OleVariant; safecall;
    procedure Set_Start1(retval: OleVariant); safecall;
    function  Get_Start2: OleVariant; safecall;
    procedure Set_Start2(retval: OleVariant); safecall;
    function  Get_Start3: OleVariant; safecall;
    procedure Set_Start3(retval: OleVariant); safecall;
    function  Get_Start4: OleVariant; safecall;
    procedure Set_Start4(retval: OleVariant); safecall;
    function  Get_Start5: OleVariant; safecall;
    procedure Set_Start5(retval: OleVariant); safecall;
    function  Get_Finish1: OleVariant; safecall;
    procedure Set_Finish1(retval: OleVariant); safecall;
    function  Get_Finish2: OleVariant; safecall;
    procedure Set_Finish2(retval: OleVariant); safecall;
    function  Get_Finish3: OleVariant; safecall;
    procedure Set_Finish3(retval: OleVariant); safecall;
    function  Get_Finish4: OleVariant; safecall;
    procedure Set_Finish4(retval: OleVariant); safecall;
    function  Get_Finish5: OleVariant; safecall;
    procedure Set_Finish5(retval: OleVariant); safecall;
    function  Get_Number1: Double; safecall;
    procedure Set_Number1(retval: Double); safecall;
    function  Get_Number2: Double; safecall;
    procedure Set_Number2(retval: Double); safecall;
    function  Get_Number3: Double; safecall;
    procedure Set_Number3(retval: Double); safecall;
    function  Get_Number4: Double; safecall;
    procedure Set_Number4(retval: Double); safecall;
    function  Get_Number5: Double; safecall;
    procedure Set_Number5(retval: Double); safecall;
    function  Get_Duration1: OleVariant; safecall;
    procedure Set_Duration1(retval: OleVariant); safecall;
    function  Get_Duration2: OleVariant; safecall;
    procedure Set_Duration2(retval: OleVariant); safecall;
    function  Get_Duration3: OleVariant; safecall;
    procedure Set_Duration3(retval: OleVariant); safecall;
    function  Get_Cost1: OleVariant; safecall;
    procedure Set_Cost1(retval: OleVariant); safecall;
    function  Get_Cost2: OleVariant; safecall;
    procedure Set_Cost2(retval: OleVariant); safecall;
    function  Get_Cost3: OleVariant; safecall;
    procedure Set_Cost3(retval: OleVariant); safecall;
    function  Get_Flag10: OleVariant; safecall;
    procedure Set_Flag10(retval: OleVariant); safecall;
    function  Get_Flag1: OleVariant; safecall;
    procedure Set_Flag1(retval: OleVariant); safecall;
    function  Get_Flag2: OleVariant; safecall;
    procedure Set_Flag2(retval: OleVariant); safecall;
    function  Get_Flag3: OleVariant; safecall;
    procedure Set_Flag3(retval: OleVariant); safecall;
    function  Get_Flag4: OleVariant; safecall;
    procedure Set_Flag4(retval: OleVariant); safecall;
    function  Get_Flag5: OleVariant; safecall;
    procedure Set_Flag5(retval: OleVariant); safecall;
    function  Get_Flag6: OleVariant; safecall;
    procedure Set_Flag6(retval: OleVariant); safecall;
    function  Get_Flag7: OleVariant; safecall;
    procedure Set_Flag7(retval: OleVariant); safecall;
    function  Get_Flag8: OleVariant; safecall;
    procedure Set_Flag8(retval: OleVariant); safecall;
    function  Get_Flag9: OleVariant; safecall;
    procedure Set_Flag9(retval: OleVariant); safecall;
    function  Get_LinkedFields: OleVariant; safecall;
    function  Get_Overallocated: OleVariant; safecall;
    procedure Delete; safecall;
    procedure AppendNotes(const Value: WideString); safecall;
    function  TimeScaleData(StartDate: OleVariant; EndDate: OleVariant;
                            Type_: PjAssignmentTimescaledData; TimeScaleUnit: PjTimescaleUnit;
                            Count: Integer): TimeScaleValues; safecall;
    function  Get_TaskSummaryName: WideString; safecall;
    function  Get_LevelingDelay: OleVariant; safecall;
    procedure Set_LevelingDelay(retval: OleVariant); safecall;
    function  Get_BaselineStart: OleVariant; safecall;
    procedure Set_BaselineStart(retval: OleVariant); safecall;
    function  Get_BaselineFinish: OleVariant; safecall;
    procedure Set_BaselineFinish(retval: OleVariant); safecall;
    function  Get_Hyperlink: WideString; safecall;
    procedure Set_Hyperlink(const retval: WideString); safecall;
    function  Get_HyperlinkAddress: WideString; safecall;
    procedure Set_HyperlinkAddress(const retval: WideString); safecall;
    function  Get_HyperlinkSubAddress: WideString; safecall;
    procedure Set_HyperlinkSubAddress(const retval: WideString); safecall;
    function  Get_HyperlinkHREF: WideString; safecall;
    procedure Set_HyperlinkHREF(const retval: WideString); safecall;
    function  Get_Cost4: OleVariant; safecall;
    procedure Set_Cost4(retval: OleVariant); safecall;
    function  Get_Cost5: OleVariant; safecall;
    procedure Set_Cost5(retval: OleVariant); safecall;
    function  Get_Cost6: OleVariant; safecall;
    procedure Set_Cost6(retval: OleVariant); safecall;
    function  Get_Cost7: OleVariant; safecall;
    procedure Set_Cost7(retval: OleVariant); safecall;
    function  Get_Cost8: OleVariant; safecall;
    procedure Set_Cost8(retval: OleVariant); safecall;
    function  Get_Cost9: OleVariant; safecall;
    procedure Set_Cost9(retval: OleVariant); safecall;
    function  Get_Cost10: OleVariant; safecall;
    procedure Set_Cost10(retval: OleVariant); safecall;
    function  Get_Date1: OleVariant; safecall;
    procedure Set_Date1(retval: OleVariant); safecall;
    function  Get_Date2: OleVariant; safecall;
    procedure Set_Date2(retval: OleVariant); safecall;
    function  Get_Date3: OleVariant; safecall;
    procedure Set_Date3(retval: OleVariant); safecall;
    function  Get_Date4: OleVariant; safecall;
    procedure Set_Date4(retval: OleVariant); safecall;
    function  Get_Date5: OleVariant; safecall;
    procedure Set_Date5(retval: OleVariant); safecall;
    function  Get_Date6: OleVariant; safecall;
    procedure Set_Date6(retval: OleVariant); safecall;
    function  Get_Date7: OleVariant; safecall;
    procedure Set_Date7(retval: OleVariant); safecall;
    function  Get_Date8: OleVariant; safecall;
    procedure Set_Date8(retval: OleVariant); safecall;
    function  Get_Date9: OleVariant; safecall;
    procedure Set_Date9(retval: OleVariant); safecall;
    function  Get_Date10: OleVariant; safecall;
    procedure Set_Date10(retval: OleVariant); safecall;
    function  Get_Duration4: OleVariant; safecall;
    procedure Set_Duration4(retval: OleVariant); safecall;
    function  Get_Duration5: OleVariant; safecall;
    procedure Set_Duration5(retval: OleVariant); safecall;
    function  Get_Duration6: OleVariant; safecall;
    procedure Set_Duration6(retval: OleVariant); safecall;
    function  Get_Duration7: OleVariant; safecall;
    procedure Set_Duration7(retval: OleVariant); safecall;
    function  Get_Duration8: OleVariant; safecall;
    procedure Set_Duration8(retval: OleVariant); safecall;
    function  Get_Duration9: OleVariant; safecall;
    procedure Set_Duration9(retval: OleVariant); safecall;
    function  Get_Duration10: OleVariant; safecall;
    procedure Set_Duration10(retval: OleVariant); safecall;
    function  Get_Finish6: OleVariant; safecall;
    procedure Set_Finish6(retval: OleVariant); safecall;
    function  Get_Finish7: OleVariant; safecall;
    procedure Set_Finish7(retval: OleVariant); safecall;
    function  Get_Finish8: OleVariant; safecall;
    procedure Set_Finish8(retval: OleVariant); safecall;
    function  Get_Finish9: OleVariant; safecall;
    procedure Set_Finish9(retval: OleVariant); safecall;
    function  Get_Finish10: OleVariant; safecall;
    procedure Set_Finish10(retval: OleVariant); safecall;
    function  Get_Flag11: OleVariant; safecall;
    procedure Set_Flag11(retval: OleVariant); safecall;
    function  Get_Flag12: OleVariant; safecall;
    procedure Set_Flag12(retval: OleVariant); safecall;
    function  Get_Flag13: OleVariant; safecall;
    procedure Set_Flag13(retval: OleVariant); safecall;
    function  Get_Flag14: OleVariant; safecall;
    procedure Set_Flag14(retval: OleVariant); safecall;
    function  Get_Flag15: OleVariant; safecall;
    procedure Set_Flag15(retval: OleVariant); safecall;
    function  Get_Flag16: OleVariant; safecall;
    procedure Set_Flag16(retval: OleVariant); safecall;
    function  Get_Flag17: OleVariant; safecall;
    procedure Set_Flag17(retval: OleVariant); safecall;
    function  Get_Flag18: OleVariant; safecall;
    procedure Set_Flag18(retval: OleVariant); safecall;
    function  Get_Flag19: OleVariant; safecall;
    procedure Set_Flag19(retval: OleVariant); safecall;
    function  Get_Flag20: OleVariant; safecall;
    procedure Set_Flag20(retval: OleVariant); safecall;
    function  Get_Number6: Double; safecall;
    procedure Set_Number6(retval: Double); safecall;
    function  Get_Number7: Double; safecall;
    procedure Set_Number7(retval: Double); safecall;
    function  Get_Number8: Double; safecall;
    procedure Set_Number8(retval: Double); safecall;
    function  Get_Number9: Double; safecall;
    procedure Set_Number9(retval: Double); safecall;
    function  Get_Number10: Double; safecall;
    procedure Set_Number10(retval: Double); safecall;
    function  Get_Number11: Double; safecall;
    procedure Set_Number11(retval: Double); safecall;
    function  Get_Number12: Double; safecall;
    procedure Set_Number12(retval: Double); safecall;
    function  Get_Number13: Double; safecall;
    procedure Set_Number13(retval: Double); safecall;
    function  Get_Number14: Double; safecall;
    procedure Set_Number14(retval: Double); safecall;
    function  Get_Number15: Double; safecall;
    procedure Set_Number15(retval: Double); safecall;
    function  Get_Number16: Double; safecall;
    procedure Set_Number16(retval: Double); safecall;
    function  Get_Number17: Double; safecall;
    procedure Set_Number17(retval: Double); safecall;
    function  Get_Number18: Double; safecall;
    procedure Set_Number18(retval: Double); safecall;
    function  Get_Number19: Double; safecall;
    procedure Set_Number19(retval: Double); safecall;
    function  Get_Number20: Double; safecall;
    procedure Set_Number20(retval: Double); safecall;
    function  Get_Start6: OleVariant; safecall;
    procedure Set_Start6(retval: OleVariant); safecall;
    function  Get_Start7: OleVariant; safecall;
    procedure Set_Start7(retval: OleVariant); safecall;
    function  Get_Start8: OleVariant; safecall;
    procedure Set_Start8(retval: OleVariant); safecall;
    function  Get_Start9: OleVariant; safecall;
    procedure Set_Start9(retval: OleVariant); safecall;
    function  Get_Start10: OleVariant; safecall;
    procedure Set_Start10(retval: OleVariant); safecall;
    function  Get_Text11: WideString; safecall;
    procedure Set_Text11(const retval: WideString); safecall;
    function  Get_Text12: WideString; safecall;
    procedure Set_Text12(const retval: WideString); safecall;
    function  Get_Text13: WideString; safecall;
    procedure Set_Text13(const retval: WideString); safecall;
    function  Get_Text14: WideString; safecall;
    procedure Set_Text14(const retval: WideString); safecall;
    function  Get_Text15: WideString; safecall;
    procedure Set_Text15(const retval: WideString); safecall;
    function  Get_Text16: WideString; safecall;
    procedure Set_Text16(const retval: WideString); safecall;
    function  Get_Text17: WideString; safecall;
    procedure Set_Text17(const retval: WideString); safecall;
    function  Get_Text18: WideString; safecall;
    procedure Set_Text18(const retval: WideString); safecall;
    function  Get_Text19: WideString; safecall;
    procedure Set_Text19(const retval: WideString); safecall;
    function  Get_Text20: WideString; safecall;
    procedure Set_Text20(const retval: WideString); safecall;
    function  Get_Text21: WideString; safecall;
    procedure Set_Text21(const retval: WideString); safecall;
    function  Get_Text22: WideString; safecall;
    procedure Set_Text22(const retval: WideString); safecall;
    function  Get_Text23: WideString; safecall;
    procedure Set_Text23(const retval: WideString); safecall;
    function  Get_Text24: WideString; safecall;
    procedure Set_Text24(const retval: WideString); safecall;
    function  Get_Text25: WideString; safecall;
    procedure Set_Text25(const retval: WideString); safecall;
    function  Get_Text26: WideString; safecall;
    procedure Set_Text26(const retval: WideString); safecall;
    function  Get_Text27: WideString; safecall;
    procedure Set_Text27(const retval: WideString); safecall;
    function  Get_Text28: WideString; safecall;
    procedure Set_Text28(const retval: WideString); safecall;
    function  Get_Text29: WideString; safecall;
    procedure Set_Text29(const retval: WideString); safecall;
    function  Get_Text30: WideString; safecall;
    procedure Set_Text30(const retval: WideString); safecall;
    function  Get_Index: Integer; safecall;
    function  Get_CV: OleVariant; safecall;
    function  Get_WorkVariance: OleVariant; safecall;
    function  Get_StartVariance: OleVariant; safecall;
    function  Get_FinishVariance: OleVariant; safecall;
    function  Get_VAC: OleVariant; safecall;
    function  Get_FixedMaterialAssignment: OleVariant; safecall;
    function  Get_ResourceType: PjResourceTypes; safecall;
    function  Get_HyperlinkScreenTip: WideString; safecall;
    procedure Set_HyperlinkScreenTip(const retval: WideString); safecall;
    property UniqueID: Integer read Get_UniqueID;
    property TaskUniqueID: Integer read Get_TaskUniqueID write Set_TaskUniqueID;
    property ResourceUniqueID: Integer read Get_ResourceUniqueID write Set_ResourceUniqueID;
    property TaskID: Integer read Get_TaskID write Set_TaskID;
    property ResourceID: Integer read Get_ResourceID write Set_ResourceID;
    property TaskName: WideString read Get_TaskName write Set_TaskName;
    property ResourceName: WideString read Get_ResourceName write Set_ResourceName;
    property Units: OleVariant read Get_Units write Set_Units;
    property Work: OleVariant read Get_Work write Set_Work;
    property OvertimeWork: OleVariant read Get_OvertimeWork write Set_OvertimeWork;
    property ActualWork: OleVariant read Get_ActualWork write Set_ActualWork;
    property RegularWork: OleVariant read Get_RegularWork write Set_RegularWork;
    property RemainingWork: OleVariant read Get_RemainingWork write Set_RemainingWork;
    property ActualOvertimeWork: OleVariant read Get_ActualOvertimeWork write Set_ActualOvertimeWork;
    property RemainingOvertimeWork: OleVariant read Get_RemainingOvertimeWork write Set_RemainingOvertimeWork;
    property BaselineWork: OleVariant read Get_BaselineWork write Set_BaselineWork;
    property Peak: OleVariant read Get_Peak;
    property Start: OleVariant read Get_Start write Set_Start;
    property Finish: OleVariant read Get_Finish write Set_Finish;
    property ActualStart: OleVariant read Get_ActualStart write Set_ActualStart;
    property ActualFinish: OleVariant read Get_ActualFinish write Set_ActualFinish;
    property Delay: OleVariant read Get_Delay write Set_Delay;
    property Cost: OleVariant read Get_Cost write Set_Cost;
    property OvertimeCost: OleVariant read Get_OvertimeCost;
    property ActualCost: OleVariant read Get_ActualCost write Set_ActualCost;
    property RemainingCost: OleVariant read Get_RemainingCost;
    property ActualOvertimeCost: OleVariant read Get_ActualOvertimeCost;
    property RemainingOvertimeCost: OleVariant read Get_RemainingOvertimeCost;
    property BaselineCost: OleVariant read Get_BaselineCost write Set_BaselineCost;
    property BCWS: OleVariant read Get_BCWS;
    property BCWP: OleVariant read Get_BCWP;
    property ACWP: OleVariant read Get_ACWP;
    property SV: OleVariant read Get_SV;
    property CostVariance: OleVariant read Get_CostVariance;
    property WorkContour: PjWorkContourType read Get_WorkContour write Set_WorkContour;
    property PercentWorkComplete: OleVariant read Get_PercentWorkComplete write Set_PercentWorkComplete;
    property Project: WideString read Get_Project;
    property Notes: WideString read Get_Notes write Set_Notes;
    property Confirmed: OleVariant read Get_Confirmed write Set_Confirmed;
    property ResponsePending: OleVariant read Get_ResponsePending write Set_ResponsePending;
    property UpdateNeeded: OleVariant read Get_UpdateNeeded;
    property TeamStatusPending: OleVariant read Get_TeamStatusPending write Set_TeamStatusPending;
    property CostRateTable: OleVariant read Get_CostRateTable write Set_CostRateTable;
    property Parent: IDispatch read Get_Parent;
    property Application: Application read Get_Application;
    property Text1: WideString read Get_Text1 write Set_Text1;
    property Text2: WideString read Get_Text2 write Set_Text2;
    property Text3: WideString read Get_Text3 write Set_Text3;
    property Text4: WideString read Get_Text4 write Set_Text4;
    property Text5: WideString read Get_Text5 write Set_Text5;
    property Text6: WideString read Get_Text6 write Set_Text6;
    property Text7: WideString read Get_Text7 write Set_Text7;
    property Text8: WideString read Get_Text8 write Set_Text8;
    property Text9: WideString read Get_Text9 write Set_Text9;
    property Text10: WideString read Get_Text10 write Set_Text10;
    property Start1: OleVariant read Get_Start1 write Set_Start1;
    property Start2: OleVariant read Get_Start2 write Set_Start2;
    property Start3: OleVariant read Get_Start3 write Set_Start3;
    property Start4: OleVariant read Get_Start4 write Set_Start4;
    property Start5: OleVariant read Get_Start5 write Set_Start5;
    property Finish1: OleVariant read Get_Finish1 write Set_Finish1;
    property Finish2: OleVariant read Get_Finish2 write Set_Finish2;
    property Finish3: OleVariant read Get_Finish3 write Set_Finish3;
    property Finish4: OleVariant read Get_Finish4 write Set_Finish4;
    property Finish5: OleVariant read Get_Finish5 write Set_Finish5;
    property Number1: Double read Get_Number1 write Set_Number1;
    property Number2: Double read Get_Number2 write Set_Number2;
    property Number3: Double read Get_Number3 write Set_Number3;
    property Number4: Double read Get_Number4 write Set_Number4;
    property Number5: Double read Get_Number5 write Set_Number5;
    property Duration1: OleVariant read Get_Duration1 write Set_Duration1;
    property Duration2: OleVariant read Get_Duration2 write Set_Duration2;
    property Duration3: OleVariant read Get_Duration3 write Set_Duration3;
    property Cost1: OleVariant read Get_Cost1 write Set_Cost1;
    property Cost2: OleVariant read Get_Cost2 write Set_Cost2;
    property Cost3: OleVariant read Get_Cost3 write Set_Cost3;
    property Flag10: OleVariant read Get_Flag10 write Set_Flag10;
    property Flag1: OleVariant read Get_Flag1 write Set_Flag1;
    property Flag2: OleVariant read Get_Flag2 write Set_Flag2;
    property Flag3: OleVariant read Get_Flag3 write Set_Flag3;
    property Flag4: OleVariant read Get_Flag4 write Set_Flag4;
    property Flag5: OleVariant read Get_Flag5 write Set_Flag5;
    property Flag6: OleVariant read Get_Flag6 write Set_Flag6;
    property Flag7: OleVariant read Get_Flag7 write Set_Flag7;
    property Flag8: OleVariant read Get_Flag8 write Set_Flag8;
    property Flag9: OleVariant read Get_Flag9 write Set_Flag9;
    property LinkedFields: OleVariant read Get_LinkedFields;
    property Overallocated: OleVariant read Get_Overallocated;
    property TaskSummaryName: WideString read Get_TaskSummaryName;
    property LevelingDelay: OleVariant read Get_LevelingDelay write Set_LevelingDelay;
    property BaselineStart: OleVariant read Get_BaselineStart write Set_BaselineStart;
    property BaselineFinish: OleVariant read Get_BaselineFinish write Set_BaselineFinish;
    property Hyperlink: WideString read Get_Hyperlink write Set_Hyperlink;
    property HyperlinkAddress: WideString read Get_HyperlinkAddress write Set_HyperlinkAddress;
    property HyperlinkSubAddress: WideString read Get_HyperlinkSubAddress write Set_HyperlinkSubAddress;
    property HyperlinkHREF: WideString read Get_HyperlinkHREF write Set_HyperlinkHREF;
    property Cost4: OleVariant read Get_Cost4 write Set_Cost4;
    property Cost5: OleVariant read Get_Cost5 write Set_Cost5;
    property Cost6: OleVariant read Get_Cost6 write Set_Cost6;
    property Cost7: OleVariant read Get_Cost7 write Set_Cost7;
    property Cost8: OleVariant read Get_Cost8 write Set_Cost8;
    property Cost9: OleVariant read Get_Cost9 write Set_Cost9;
    property Cost10: OleVariant read Get_Cost10 write Set_Cost10;
    property Date1: OleVariant read Get_Date1 write Set_Date1;
    property Date2: OleVariant read Get_Date2 write Set_Date2;
    property Date3: OleVariant read Get_Date3 write Set_Date3;
    property Date4: OleVariant read Get_Date4 write Set_Date4;
    property Date5: OleVariant read Get_Date5 write Set_Date5;
    property Date6: OleVariant read Get_Date6 write Set_Date6;
    property Date7: OleVariant read Get_Date7 write Set_Date7;
    property Date8: OleVariant read Get_Date8 write Set_Date8;
    property Date9: OleVariant read Get_Date9 write Set_Date9;
    property Date10: OleVariant read Get_Date10 write Set_Date10;
    property Duration4: OleVariant read Get_Duration4 write Set_Duration4;
    property Duration5: OleVariant read Get_Duration5 write Set_Duration5;
    property Duration6: OleVariant read Get_Duration6 write Set_Duration6;
    property Duration7: OleVariant read Get_Duration7 write Set_Duration7;
    property Duration8: OleVariant read Get_Duration8 write Set_Duration8;
    property Duration9: OleVariant read Get_Duration9 write Set_Duration9;
    property Duration10: OleVariant read Get_Duration10 write Set_Duration10;
    property Finish6: OleVariant read Get_Finish6 write Set_Finish6;
    property Finish7: OleVariant read Get_Finish7 write Set_Finish7;
    property Finish8: OleVariant read Get_Finish8 write Set_Finish8;
    property Finish9: OleVariant read Get_Finish9 write Set_Finish9;
    property Finish10: OleVariant read Get_Finish10 write Set_Finish10;
    property Flag11: OleVariant read Get_Flag11 write Set_Flag11;
    property Flag12: OleVariant read Get_Flag12 write Set_Flag12;
    property Flag13: OleVariant read Get_Flag13 write Set_Flag13;
    property Flag14: OleVariant read Get_Flag14 write Set_Flag14;
    property Flag15: OleVariant read Get_Flag15 write Set_Flag15;
    property Flag16: OleVariant read Get_Flag16 write Set_Flag16;
    property Flag17: OleVariant read Get_Flag17 write Set_Flag17;
    property Flag18: OleVariant read Get_Flag18 write Set_Flag18;
    property Flag19: OleVariant read Get_Flag19 write Set_Flag19;
    property Flag20: OleVariant read Get_Flag20 write Set_Flag20;
    property Number6: Double read Get_Number6 write Set_Number6;
    property Number7: Double read Get_Number7 write Set_Number7;
    property Number8: Double read Get_Number8 write Set_Number8;
    property Number9: Double read Get_Number9 write Set_Number9;
    property Number10: Double read Get_Number10 write Set_Number10;
    property Number11: Double read Get_Number11 write Set_Number11;
    property Number12: Double read Get_Number12 write Set_Number12;
    property Number13: Double read Get_Number13 write Set_Number13;
    property Number14: Double read Get_Number14 write Set_Number14;
    property Number15: Double read Get_Number15 write Set_Number15;
    property Number16: Double read Get_Number16 write Set_Number16;
    property Number17: Double read Get_Number17 write Set_Number17;
    property Number18: Double read Get_Number18 write Set_Number18;
    property Number19: Double read Get_Number19 write Set_Number19;
    property Number20: Double read Get_Number20 write Set_Number20;
    property Start6: OleVariant read Get_Start6 write Set_Start6;
    property Start7: OleVariant read Get_Start7 write Set_Start7;
    property Start8: OleVariant read Get_Start8 write Set_Start8;
    property Start9: OleVariant read Get_Start9 write Set_Start9;
    property Start10: OleVariant read Get_Start10 write Set_Start10;
    property Text11: WideString read Get_Text11 write Set_Text11;
    property Text12: WideString read Get_Text12 write Set_Text12;
    property Text13: WideString read Get_Text13 write Set_Text13;
    property Text14: WideString read Get_Text14 write Set_Text14;
    property Text15: WideString read Get_Text15 write Set_Text15;
    property Text16: WideString read Get_Text16 write Set_Text16;
    property Text17: WideString read Get_Text17 write Set_Text17;
    property Text18: WideString read Get_Text18 write Set_Text18;
    property Text19: WideString read Get_Text19 write Set_Text19;
    property Text20: WideString read Get_Text20 write Set_Text20;
    property Text21: WideString read Get_Text21 write Set_Text21;
    property Text22: WideString read Get_Text22 write Set_Text22;
    property Text23: WideString read Get_Text23 write Set_Text23;
    property Text24: WideString read Get_Text24 write Set_Text24;
    property Text25: WideString read Get_Text25 write Set_Text25;
    property Text26: WideString read Get_Text26 write Set_Text26;
    property Text27: WideString read Get_Text27 write Set_Text27;
    property Text28: WideString read Get_Text28 write Set_Text28;
    property Text29: WideString read Get_Text29 write Set_Text29;
    property Text30: WideString read Get_Text30 write Set_Text30;
    property Index: Integer read Get_Index;
    property CV: OleVariant read Get_CV;
    property WorkVariance: OleVariant read Get_WorkVariance;
    property StartVariance: OleVariant read Get_StartVariance;
    property FinishVariance: OleVariant read Get_FinishVariance;
    property VAC: OleVariant read Get_VAC;
    property FixedMaterialAssignment: OleVariant read Get_FixedMaterialAssignment;
    property ResourceType: PjResourceTypes read Get_ResourceType;
    property HyperlinkScreenTip: WideString read Get_HyperlinkScreenTip write Set_HyperlinkScreenTip;
  end;

// *********************************************************************//
// DispIntf:  AssignmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C45-0000-0000-C000-000000000046}
// *********************************************************************//
  AssignmentDisp = dispinterface
    ['{000C0C45-0000-0000-C000-000000000046}']
    property UniqueID: Integer readonly dispid 0;
    property TaskUniqueID: Integer dispid 255852545;
    property ResourceUniqueID: Integer dispid 255852546;
    property TaskID: Integer dispid 255852547;
    property ResourceID: Integer dispid 255852548;
    property TaskName: WideString dispid 255852549;
    property ResourceName: WideString dispid 255852550;
    property Units: OleVariant dispid 255852551;
    property Work: OleVariant dispid 255852552;
    property OvertimeWork: OleVariant dispid 255852553;
    property ActualWork: OleVariant dispid 255852554;
    property RegularWork: OleVariant dispid 255852555;
    property RemainingWork: OleVariant dispid 255852556;
    property ActualOvertimeWork: OleVariant dispid 255852557;
    property RemainingOvertimeWork: OleVariant dispid 255852558;
    property BaselineWork: OleVariant dispid 255852560;
    property Peak: OleVariant readonly dispid 255852563;
    property Start: OleVariant dispid 255852564;
    property Finish: OleVariant dispid 255852565;
    property ActualStart: OleVariant dispid 255852566;
    property ActualFinish: OleVariant dispid 255852567;
    property Delay: OleVariant dispid 255852569;
    property Cost: OleVariant dispid 255852570;
    property OvertimeCost: OleVariant readonly dispid 255852571;
    property ActualCost: OleVariant dispid 255852572;
    property RemainingCost: OleVariant readonly dispid 255852573;
    property ActualOvertimeCost: OleVariant readonly dispid 255852574;
    property RemainingOvertimeCost: OleVariant readonly dispid 255852575;
    property BaselineCost: OleVariant dispid 255852576;
    property BCWS: OleVariant readonly dispid 255852578;
    property BCWP: OleVariant readonly dispid 255852579;
    property ACWP: OleVariant readonly dispid 255852580;
    property SV: OleVariant readonly dispid 255852581;
    property CostVariance: OleVariant readonly dispid 255852582;
    property WorkContour: PjWorkContourType dispid 255852583;
    property PercentWorkComplete: OleVariant dispid 255852587;
    property Project: WideString readonly dispid 255852588;
    property Notes: WideString dispid 255852615;
    property Confirmed: OleVariant dispid 255852616;
    property ResponsePending: OleVariant dispid 255852617;
    property UpdateNeeded: OleVariant readonly dispid 255852618;
    property TeamStatusPending: OleVariant dispid 255852619;
    property CostRateTable: OleVariant dispid 255852624;
    property Parent: IDispatch readonly dispid 255852629;
    property Application: Application readonly dispid 255852630;
    property Text1: WideString dispid 255852632;
    property Text2: WideString dispid 255852633;
    property Text3: WideString dispid 255852634;
    property Text4: WideString dispid 255852635;
    property Text5: WideString dispid 255852636;
    property Text6: WideString dispid 255852637;
    property Text7: WideString dispid 255852638;
    property Text8: WideString dispid 255852639;
    property Text9: WideString dispid 255852640;
    property Text10: WideString dispid 255852641;
    property Start1: OleVariant dispid 255852642;
    property Start2: OleVariant dispid 255852643;
    property Start3: OleVariant dispid 255852644;
    property Start4: OleVariant dispid 255852645;
    property Start5: OleVariant dispid 255852646;
    property Finish1: OleVariant dispid 255852647;
    property Finish2: OleVariant dispid 255852648;
    property Finish3: OleVariant dispid 255852649;
    property Finish4: OleVariant dispid 255852650;
    property Finish5: OleVariant dispid 255852651;
    property Number1: Double dispid 255852652;
    property Number2: Double dispid 255852653;
    property Number3: Double dispid 255852654;
    property Number4: Double dispid 255852655;
    property Number5: Double dispid 255852656;
    property Duration1: OleVariant dispid 255852657;
    property Duration2: OleVariant dispid 255852658;
    property Duration3: OleVariant dispid 255852659;
    property Cost1: OleVariant dispid 255852663;
    property Cost2: OleVariant dispid 255852664;
    property Cost3: OleVariant dispid 255852665;
    property Flag10: OleVariant dispid 255852666;
    property Flag1: OleVariant dispid 255852667;
    property Flag2: OleVariant dispid 255852668;
    property Flag3: OleVariant dispid 255852669;
    property Flag4: OleVariant dispid 255852670;
    property Flag5: OleVariant dispid 255852671;
    property Flag6: OleVariant dispid 255852672;
    property Flag7: OleVariant dispid 255852673;
    property Flag8: OleVariant dispid 255852674;
    property Flag9: OleVariant dispid 255852675;
    property LinkedFields: OleVariant readonly dispid 255852676;
    property Overallocated: OleVariant readonly dispid 255852679;
    procedure Delete; dispid 255852680;
    procedure AppendNotes(const Value: WideString); dispid 255852681;
    function  TimeScaleData(StartDate: OleVariant; EndDate: OleVariant;
                            Type_: PjAssignmentTimescaledData; TimeScaleUnit: PjTimescaleUnit;
                            Count: Integer): TimeScaleValues; dispid 255852684;
    property TaskSummaryName: WideString readonly dispid 255852686;
    property LevelingDelay: OleVariant dispid 255852689;
    property BaselineStart: OleVariant dispid 255852690;
    property BaselineFinish: OleVariant dispid 255852691;
    property Hyperlink: WideString dispid 255852696;
    property HyperlinkAddress: WideString dispid 255852697;
    property HyperlinkSubAddress: WideString dispid 255852698;
    property HyperlinkHREF: WideString dispid 255852699;
    property Cost4: OleVariant dispid 255852703;
    property Cost5: OleVariant dispid 255852704;
    property Cost6: OleVariant dispid 255852705;
    property Cost7: OleVariant dispid 255852706;
    property Cost8: OleVariant dispid 255852707;
    property Cost9: OleVariant dispid 255852708;
    property Cost10: OleVariant dispid 255852709;
    property Date1: OleVariant dispid 255852710;
    property Date2: OleVariant dispid 255852711;
    property Date3: OleVariant dispid 255852712;
    property Date4: OleVariant dispid 255852713;
    property Date5: OleVariant dispid 255852714;
    property Date6: OleVariant dispid 255852715;
    property Date7: OleVariant dispid 255852716;
    property Date8: OleVariant dispid 255852717;
    property Date9: OleVariant dispid 255852718;
    property Date10: OleVariant dispid 255852719;
    property Duration4: OleVariant dispid 255852720;
    property Duration5: OleVariant dispid 255852721;
    property Duration6: OleVariant dispid 255852722;
    property Duration7: OleVariant dispid 255852723;
    property Duration8: OleVariant dispid 255852724;
    property Duration9: OleVariant dispid 255852725;
    property Duration10: OleVariant dispid 255852726;
    property Finish6: OleVariant dispid 255852727;
    property Finish7: OleVariant dispid 255852728;
    property Finish8: OleVariant dispid 255852729;
    property Finish9: OleVariant dispid 255852730;
    property Finish10: OleVariant dispid 255852731;
    property Flag11: OleVariant dispid 255852732;
    property Flag12: OleVariant dispid 255852733;
    property Flag13: OleVariant dispid 255852734;
    property Flag14: OleVariant dispid 255852735;
    property Flag15: OleVariant dispid 255852736;
    property Flag16: OleVariant dispid 255852737;
    property Flag17: OleVariant dispid 255852738;
    property Flag18: OleVariant dispid 255852739;
    property Flag19: OleVariant dispid 255852740;
    property Flag20: OleVariant dispid 255852741;
    property Number6: Double dispid 255852742;
    property Number7: Double dispid 255852743;
    property Number8: Double dispid 255852744;
    property Number9: Double dispid 255852745;
    property Number10: Double dispid 255852746;
    property Number11: Double dispid 255852747;
    property Number12: Double dispid 255852748;
    property Number13: Double dispid 255852749;
    property Number14: Double dispid 255852750;
    property Number15: Double dispid 255852751;
    property Number16: Double dispid 255852752;
    property Number17: Double dispid 255852753;
    property Number18: Double dispid 255852754;
    property Number19: Double dispid 255852755;
    property Number20: Double dispid 255852756;
    property Start6: OleVariant dispid 255852757;
    property Start7: OleVariant dispid 255852758;
    property Start8: OleVariant dispid 255852759;
    property Start9: OleVariant dispid 255852760;
    property Start10: OleVariant dispid 255852761;
    property Text11: WideString dispid 255852762;
    property Text12: WideString dispid 255852763;
    property Text13: WideString dispid 255852764;
    property Text14: WideString dispid 255852765;
    property Text15: WideString dispid 255852766;
    property Text16: WideString dispid 255852767;
    property Text17: WideString dispid 255852768;
    property Text18: WideString dispid 255852769;
    property Text19: WideString dispid 255852770;
    property Text20: WideString dispid 255852771;
    property Text21: WideString dispid 255852772;
    property Text22: WideString dispid 255852773;
    property Text23: WideString dispid 255852774;
    property Text24: WideString dispid 255852775;
    property Text25: WideString dispid 255852776;
    property Text26: WideString dispid 255852777;
    property Text27: WideString dispid 255852778;
    property Text28: WideString dispid 255852779;
    property Text29: WideString dispid 255852780;
    property Text30: WideString dispid 255852781;
    property Index: Integer readonly dispid 255852790;
    property CV: OleVariant readonly dispid 255852791;
    property WorkVariance: OleVariant readonly dispid 255852792;
    property StartVariance: OleVariant readonly dispid 255852806;
    property FinishVariance: OleVariant readonly dispid 255852807;
    property VAC: OleVariant readonly dispid 255852815;
    property FixedMaterialAssignment: OleVariant readonly dispid 255852819;
    property ResourceType: PjResourceTypes readonly dispid 255852820;
    property HyperlinkScreenTip: WideString dispid 255852823;
  end;

// *********************************************************************//
// Interface: Years
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4A-0000-0000-C000-000000000046}
// *********************************************************************//
  Years = interface(IDispatch)
    ['{000C0C4A-0000-0000-C000-000000000046}']
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Calendar; safecall;
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): Year; safecall;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Calendar read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: Year read Get_Item; default;
  end;

// *********************************************************************//
// DispIntf:  YearsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4A-0000-0000-C000-000000000046}
// *********************************************************************//
  YearsDisp = dispinterface
    ['{000C0C4A-0000-0000-C000-000000000046}']
    property Count: Smallint readonly dispid 65525;
    property Application: Application readonly dispid 65524;
    property Parent: Calendar readonly dispid 65523;
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: Year readonly dispid 0; default;
  end;

// *********************************************************************//
// Interface: Months
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4C-0000-0000-C000-000000000046}
// *********************************************************************//
  Months = interface(IDispatch)
    ['{000C0C4C-0000-0000-C000-000000000046}']
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Year; safecall;
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): Month; safecall;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Year read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: Month read Get_Item; default;
  end;

// *********************************************************************//
// DispIntf:  MonthsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4C-0000-0000-C000-000000000046}
// *********************************************************************//
  MonthsDisp = dispinterface
    ['{000C0C4C-0000-0000-C000-000000000046}']
    property Count: Smallint readonly dispid 65525;
    property Application: Application readonly dispid 65524;
    property Parent: Year readonly dispid 65523;
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: Month readonly dispid 0; default;
  end;

// *********************************************************************//
// Interface: Days
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C51-0000-0000-C000-000000000046}
// *********************************************************************//
  Days = interface(IDispatch)
    ['{000C0C51-0000-0000-C000-000000000046}']
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Month; safecall;
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): Day; safecall;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Month read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: Day read Get_Item; default;
  end;

// *********************************************************************//
// DispIntf:  DaysDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C51-0000-0000-C000-000000000046}
// *********************************************************************//
  DaysDisp = dispinterface
    ['{000C0C51-0000-0000-C000-000000000046}']
    property Count: Smallint readonly dispid 65525;
    property Application: Application readonly dispid 65524;
    property Parent: Month readonly dispid 65523;
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: Day readonly dispid 0; default;
  end;

// *********************************************************************//
// DispIntf:  List
// Flags:     (4096) Dispatchable
// GUID:      {00020B17-0000-0000-C000-000000000046}
// *********************************************************************//
  List = dispinterface
    ['{00020B17-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
    property Count: Integer readonly dispid 65525;
    property Item[Index: OleVariant]: WideString readonly dispid 0; default;
    property _NewEnum: IUnknown readonly dispid -4;
  end;

// *********************************************************************//
// DispIntf:  Selection
// Flags:     (4096) Dispatchable
// GUID:      {00020B18-0000-0000-C000-000000000046}
// *********************************************************************//
  Selection = dispinterface
    ['{00020B18-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
    property Tasks: Tasks readonly dispid 1;
    property Resources: Resources readonly dispid 2;
    property FieldNameList: List readonly dispid 3;
    property FieldIDList: List readonly dispid 4;
  end;

// *********************************************************************//
// DispIntf:  Cell
// Flags:     (4096) Dispatchable
// GUID:      {00020B19-0000-0000-C000-000000000046}
// *********************************************************************//
  Cell = dispinterface
    ['{00020B19-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
    property Task: Task readonly dispid 1;
    property Resource: Resource readonly dispid 2;
    property FieldName: WideString readonly dispid 3;
    property FieldID: PjField readonly dispid 4;
    property Text: WideString readonly dispid 0;
  end;

// *********************************************************************//
// Interface: Subproject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00020B1C-0000-0000-C000-000000000046}
// *********************************************************************//
  Subproject = interface(IDispatch)
    ['{00020B1C-0000-0000-C000-000000000046}']
    function  Get_LinkToSource: WordBool; safecall;
    procedure Set_LinkToSource(fLinkToSource: WordBool); safecall;
    function  Get_Path: WideString; safecall;
    procedure Set_Path(const szPath: WideString); safecall;
    function  Get_ReadOnly: WordBool; safecall;
    procedure Set_ReadOnly(fReadOnly: WordBool); safecall;
    function  Get_Parent: Project; safecall;
    function  Get_Application: Application; safecall;
    function  Get_SourceProject: Project; safecall;
    function  Get_InsertedProjectSummary: Task; safecall;
    function  Get_Index: Integer; safecall;
    property LinkToSource: WordBool read Get_LinkToSource write Set_LinkToSource;
    property Path: WideString read Get_Path write Set_Path;
    property ReadOnly: WordBool read Get_ReadOnly write Set_ReadOnly;
    property Parent: Project read Get_Parent;
    property Application: Application read Get_Application;
    property SourceProject: Project read Get_SourceProject;
    property InsertedProjectSummary: Task read Get_InsertedProjectSummary;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  SubprojectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00020B1C-0000-0000-C000-000000000046}
// *********************************************************************//
  SubprojectDisp = dispinterface
    ['{00020B1C-0000-0000-C000-000000000046}']
    property LinkToSource: WordBool dispid 1;
    property Path: WideString dispid 2;
    property ReadOnly: WordBool dispid 3;
    property Parent: Project readonly dispid 65523;
    property Application: Application readonly dispid 65524;
    property SourceProject: Project readonly dispid 4;
    property InsertedProjectSummary: Task readonly dispid 5;
    property Index: Integer readonly dispid 65527;
  end;

// *********************************************************************//
// Interface: Subprojects
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00020B1B-0000-0000-C000-000000000046}
// *********************************************************************//
  Subprojects = interface(IDispatch)
    ['{00020B1B-0000-0000-C000-000000000046}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): Subproject; safecall;
    function  Get_Parent: Project; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Count: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: Subproject read Get_Item; default;
    property Parent: Project read Get_Parent;
    property Application: Application read Get_Application;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  SubprojectsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00020B1B-0000-0000-C000-000000000046}
// *********************************************************************//
  SubprojectsDisp = dispinterface
    ['{00020B1B-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: Subproject readonly dispid 0; default;
    property Parent: Project readonly dispid 65523;
    property Application: Application readonly dispid 65524;
    property Count: Integer readonly dispid 65525;
  end;

// *********************************************************************//
// Interface: TaskGroups
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589054-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  TaskGroups = interface(IDispatch)
    ['{11589054-69F0-11D2-B889-00C04FB90729}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): Group; safecall;
    function  Get_Count: Integer; safecall;
    function  Add(const Name: WideString; const FieldName: WideString): Group; safecall;
    function  Copy(const Name: WideString; const NewName: WideString): Group; safecall;
    function  Get_Parent: Project; safecall;
    function  Get_Application: Application; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: Group read Get_Item; default;
    property Count: Integer read Get_Count;
    property Parent: Project read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  TaskGroupsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589054-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  TaskGroupsDisp = dispinterface
    ['{11589054-69F0-11D2-B889-00C04FB90729}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: Group readonly dispid 0; default;
    property Count: Integer readonly dispid 65525;
    function  Add(const Name: WideString; const FieldName: WideString): Group; dispid 65526;
    function  Copy(const Name: WideString; const NewName: WideString): Group; dispid 1;
    property Parent: Project readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: ResourceGroups
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589055-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  ResourceGroups = interface(IDispatch)
    ['{11589055-69F0-11D2-B889-00C04FB90729}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): Group; safecall;
    function  Get_Count: Integer; safecall;
    function  Add(const Name: WideString; const FieldName: WideString): Group; safecall;
    function  Copy(const Name: WideString; const NewName: WideString): Group; safecall;
    function  Get_Parent: Project; safecall;
    function  Get_Application: Application; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: Group read Get_Item; default;
    property Count: Integer read Get_Count;
    property Parent: Project read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  ResourceGroupsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589055-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  ResourceGroupsDisp = dispinterface
    ['{11589055-69F0-11D2-B889-00C04FB90729}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: Group readonly dispid 0; default;
    property Count: Integer readonly dispid 65525;
    function  Add(const Name: WideString; const FieldName: WideString): Group; dispid 65526;
    function  Copy(const Name: WideString; const NewName: WideString): Group; dispid 1;
    property Parent: Project readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: Group
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589051-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  Group = interface(IDispatch)
    ['{11589051-69F0-11D2-B889-00C04FB90729}']
    function  Get_Application: Application; safecall;
    function  Get_Name: WideString; safecall;
    procedure Set_Name(const szName: WideString); safecall;
    function  Get_Index: Integer; safecall;
    function  Get_Parent: Project; safecall;
    function  Get_GroupCriteria: GroupCriteria; safecall;
    procedure Set_GroupCriteria(const ppDispatch: GroupCriteria); safecall;
    function  Get_ShowSummary: WordBool; safecall;
    procedure Set_ShowSummary(fShowSummary: WordBool); safecall;
    procedure Delete; safecall;
    property Application: Application read Get_Application;
    property Name: WideString read Get_Name write Set_Name;
    property Index: Integer read Get_Index;
    property Parent: Project read Get_Parent;
    property GroupCriteria: GroupCriteria read Get_GroupCriteria write Set_GroupCriteria;
    property ShowSummary: WordBool read Get_ShowSummary write Set_ShowSummary;
  end;

// *********************************************************************//
// DispIntf:  GroupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589051-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  GroupDisp = dispinterface
    ['{11589051-69F0-11D2-B889-00C04FB90729}']
    property Application: Application readonly dispid 65524;
    property Name: WideString dispid 1;
    property Index: Integer readonly dispid 65527;
    property Parent: Project readonly dispid 65523;
    property GroupCriteria: GroupCriteria dispid 2;
    property ShowSummary: WordBool dispid 3;
    procedure Delete; dispid 4;
  end;

// *********************************************************************//
// Interface: GroupCriteria
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589052-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  GroupCriteria = interface(IDispatch)
    ['{11589052-69F0-11D2-B889-00C04FB90729}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: Integer): GroupCriterion; safecall;
    function  Get_Count: Integer; safecall;
    function  Add(const FieldName: WideString; Ascending: WordBool; const FontName: WideString;
                  FontSize: SYSINT; FontBold: WordBool; FontItalic: WordBool;
                  FontUnderLine: WordBool; FontColor: PjColor; CellColor: PjColor;
                  Pattern: PjBackgroundPattern; GroupOn: PjGroupOn; StartAt: OleVariant;
                  GroupInterval: OleVariant): GroupCriterion; safecall;
    function  Get_Parent: Group; safecall;
    function  Get_Application: Application; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: Integer]: GroupCriterion read Get_Item; default;
    property Count: Integer read Get_Count;
    property Parent: Group read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  GroupCriteriaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589052-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  GroupCriteriaDisp = dispinterface
    ['{11589052-69F0-11D2-B889-00C04FB90729}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: Integer]: GroupCriterion readonly dispid 0; default;
    property Count: Integer readonly dispid 65525;
    function  Add(const FieldName: WideString; Ascending: WordBool; const FontName: WideString;
                  FontSize: SYSINT; FontBold: WordBool; FontItalic: WordBool;
                  FontUnderLine: WordBool; FontColor: PjColor; CellColor: PjColor;
                  Pattern: PjBackgroundPattern; GroupOn: PjGroupOn; StartAt: OleVariant;
                  GroupInterval: OleVariant): GroupCriterion; dispid 1;
    property Parent: Group readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: GroupCriterion
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589053-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  GroupCriterion = interface(IDispatch)
    ['{11589053-69F0-11D2-B889-00C04FB90729}']
    function  Get_Application: Application; safecall;
    function  Get_FieldName: WideString; safecall;
    procedure Set_FieldName(const szName: WideString); safecall;
    function  Get_Index: Integer; safecall;
    function  Get_Parent: Group; safecall;
    function  Get_Ascending: WordBool; safecall;
    procedure Set_Ascending(fAscending: WordBool); safecall;
    function  Get_FontName: WideString; safecall;
    procedure Set_FontName(const FontName: WideString); safecall;
    function  Get_FontSize: SYSINT; safecall;
    procedure Set_FontSize(FontSize: SYSINT); safecall;
    function  Get_FontBold: WordBool; safecall;
    procedure Set_FontBold(FontBold: WordBool); safecall;
    function  Get_FontItalic: WordBool; safecall;
    procedure Set_FontItalic(FontItalic: WordBool); safecall;
    function  Get_FontUnderLine: WordBool; safecall;
    procedure Set_FontUnderLine(FontUnderLine: WordBool); safecall;
    function  Get_FontColor: PjColor; safecall;
    procedure Set_FontColor(FontColor: PjColor); safecall;
    function  Get_CellColor: PjColor; safecall;
    procedure Set_CellColor(CellColor: PjColor); safecall;
    function  Get_Pattern: PjBackgroundPattern; safecall;
    procedure Set_Pattern(CellColor: PjBackgroundPattern); safecall;
    function  Get_GroupOn: PjGroupOn; safecall;
    procedure Set_GroupOn(GroupOn: PjGroupOn); safecall;
    function  Get_StartAt: OleVariant; safecall;
    procedure Set_StartAt(StartAt: OleVariant); safecall;
    function  Get_GroupInterval: OleVariant; safecall;
    procedure Set_GroupInterval(GroupInterval: OleVariant); safecall;
    procedure Delete; safecall;
    property Application: Application read Get_Application;
    property FieldName: WideString read Get_FieldName write Set_FieldName;
    property Index: Integer read Get_Index;
    property Parent: Group read Get_Parent;
    property Ascending: WordBool read Get_Ascending write Set_Ascending;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: SYSINT read Get_FontSize write Set_FontSize;
    property FontBold: WordBool read Get_FontBold write Set_FontBold;
    property FontItalic: WordBool read Get_FontItalic write Set_FontItalic;
    property FontUnderLine: WordBool read Get_FontUnderLine write Set_FontUnderLine;
    property FontColor: PjColor read Get_FontColor write Set_FontColor;
    property CellColor: PjColor read Get_CellColor write Set_CellColor;
    property Pattern: PjBackgroundPattern read Get_Pattern write Set_Pattern;
    property GroupOn: PjGroupOn read Get_GroupOn write Set_GroupOn;
    property StartAt: OleVariant read Get_StartAt write Set_StartAt;
    property GroupInterval: OleVariant read Get_GroupInterval write Set_GroupInterval;
  end;

// *********************************************************************//
// DispIntf:  GroupCriterionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11589053-69F0-11D2-B889-00C04FB90729}
// *********************************************************************//
  GroupCriterionDisp = dispinterface
    ['{11589053-69F0-11D2-B889-00C04FB90729}']
    property Application: Application readonly dispid 65524;
    property FieldName: WideString dispid 1;
    property Index: Integer readonly dispid 65527;
    property Parent: Group readonly dispid 65523;
    property Ascending: WordBool dispid 2;
    property FontName: WideString dispid 3;
    property FontSize: SYSINT dispid 4;
    property FontBold: WordBool dispid 5;
    property FontItalic: WordBool dispid 6;
    property FontUnderLine: WordBool dispid 7;
    property FontColor: PjColor dispid 8;
    property CellColor: PjColor dispid 9;
    property Pattern: PjBackgroundPattern dispid 10;
    property GroupOn: PjGroupOn dispid 11;
    property StartAt: OleVariant dispid 12;
    property GroupInterval: OleVariant dispid 13;
    procedure Delete; dispid 14;
  end;

// *********************************************************************//
// Interface: WeekDays
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4E-0000-0000-C000-000000000046}
// *********************************************************************//
  WeekDays = interface(IDispatch)
    ['{000C0C4E-0000-0000-C000-000000000046}']
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Calendar; safecall;
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): WeekDay; safecall;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Calendar read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: WeekDay read Get_Item; default;
  end;

// *********************************************************************//
// DispIntf:  WeekDaysDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4E-0000-0000-C000-000000000046}
// *********************************************************************//
  WeekDaysDisp = dispinterface
    ['{000C0C4E-0000-0000-C000-000000000046}']
    property Count: Smallint readonly dispid 65525;
    property Application: Application readonly dispid 65524;
    property Parent: Calendar readonly dispid 65523;
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: WeekDay readonly dispid 0; default;
  end;

// *********************************************************************//
// Interface: WeekDay
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4F-0000-0000-C000-000000000046}
// *********************************************************************//
  WeekDay = interface(IDispatch)
    ['{000C0C4F-0000-0000-C000-000000000046}']
    function  Get_Calendar: Calendar; safecall;
    function  Get_Shift1: Shift; safecall;
    function  Get_Shift2: Shift; safecall;
    function  Get_Shift3: Shift; safecall;
    function  Get_Working: WordBool; safecall;
    procedure Set_Working(fWorking: OleVariant); safecall;
    procedure Default; safecall;
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Calendar; safecall;
    function  Get_Index: Smallint; safecall;
    function  Get_Name: WideString; safecall;
    function  Get_Shift4: Shift; safecall;
    function  Get_Shift5: Shift; safecall;
    property Calendar: Calendar read Get_Calendar;
    property Shift1: Shift read Get_Shift1;
    property Shift2: Shift read Get_Shift2;
    property Shift3: Shift read Get_Shift3;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Calendar read Get_Parent;
    property Index: Smallint read Get_Index;
    property Name: WideString read Get_Name;
    property Shift4: Shift read Get_Shift4;
    property Shift5: Shift read Get_Shift5;
  end;

// *********************************************************************//
// DispIntf:  WeekDayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4F-0000-0000-C000-000000000046}
// *********************************************************************//
  WeekDayDisp = dispinterface
    ['{000C0C4F-0000-0000-C000-000000000046}']
    property Calendar: Calendar readonly dispid 1;
    property Shift1: Shift readonly dispid 2;
    property Shift2: Shift readonly dispid 3;
    property Shift3: Shift readonly dispid 4;
    function  Working: WordBool; dispid 5;
    procedure Default; dispid 6;
    property Count: Smallint readonly dispid 65525;
    property Application: Application readonly dispid 65524;
    property Parent: Calendar readonly dispid 65523;
    property Index: Smallint readonly dispid 65527;
    property Name: WideString readonly dispid 0;
    property Shift4: Shift readonly dispid 7;
    property Shift5: Shift readonly dispid 8;
  end;

// *********************************************************************//
// Interface: Shift
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C50-0000-0000-C000-000000000046}
// *********************************************************************//
  Shift = interface(IDispatch)
    ['{000C0C50-0000-0000-C000-000000000046}']
    function  Get_Start: OleVariant; safecall;
    procedure Set_Start(pdt: OleVariant); safecall;
    function  Get_Finish: OleVariant; safecall;
    procedure Set_Finish(pdt: OleVariant); safecall;
    procedure Clear; safecall;
    function  Get_Index: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: IDispatch; safecall;
    property Start: OleVariant read Get_Start write Set_Start;
    property Finish: OleVariant read Get_Finish write Set_Finish;
    property Index: Smallint read Get_Index;
    property Application: Application read Get_Application;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ShiftDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C50-0000-0000-C000-000000000046}
// *********************************************************************//
  ShiftDisp = dispinterface
    ['{000C0C50-0000-0000-C000-000000000046}']
    property Start: OleVariant dispid 1;
    property Finish: OleVariant dispid 2;
    procedure Clear; dispid 3;
    property Index: Smallint readonly dispid 0;
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
  end;

// *********************************************************************//
// Interface: Period
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C49-0000-0000-C000-000000000046}
// *********************************************************************//
  Period = interface(IDispatch)
    ['{000C0C49-0000-0000-C000-000000000046}']
    function  Get_Calendar: Calendar; safecall;
    function  Get_Shift1: Shift; safecall;
    function  Get_Shift2: Shift; safecall;
    function  Get_Shift3: Shift; safecall;
    function  Get_Working: WordBool; safecall;
    procedure Set_Working(fWorking: OleVariant); safecall;
    procedure Default; safecall;
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Calendar; safecall;
    function  Get_Shift4: Shift; safecall;
    function  Get_Shift5: Shift; safecall;
    property Calendar: Calendar read Get_Calendar;
    property Shift1: Shift read Get_Shift1;
    property Shift2: Shift read Get_Shift2;
    property Shift3: Shift read Get_Shift3;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Calendar read Get_Parent;
    property Shift4: Shift read Get_Shift4;
    property Shift5: Shift read Get_Shift5;
  end;

// *********************************************************************//
// DispIntf:  PeriodDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C49-0000-0000-C000-000000000046}
// *********************************************************************//
  PeriodDisp = dispinterface
    ['{000C0C49-0000-0000-C000-000000000046}']
    property Calendar: Calendar readonly dispid 1;
    property Shift1: Shift readonly dispid 2;
    property Shift2: Shift readonly dispid 3;
    property Shift3: Shift readonly dispid 4;
    function  Working: WordBool; dispid 5;
    procedure Default; dispid 6;
    property Count: Smallint readonly dispid 0;
    property Application: Application readonly dispid 65524;
    property Parent: Calendar readonly dispid 65523;
    property Shift4: Shift readonly dispid 7;
    property Shift5: Shift readonly dispid 8;
  end;

// *********************************************************************//
// Interface: Year
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4B-0000-0000-C000-000000000046}
// *********************************************************************//
  Year = interface(IDispatch)
    ['{000C0C4B-0000-0000-C000-000000000046}']
    function  Get_Calendar: Calendar; safecall;
    function  Get_Shift1: Shift; safecall;
    function  Get_Shift2: Shift; safecall;
    function  Get_Shift3: Shift; safecall;
    function  Get_Working: WordBool; safecall;
    procedure Set_Working(fWorking: OleVariant); safecall;
    procedure Default; safecall;
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Calendar; safecall;
    function  Get_Index: Smallint; safecall;
    function  Get_Name: WideString; safecall;
    function  Get_Months: Months; safecall;
    function  Get_Shift4: Shift; safecall;
    function  Get_Shift5: Shift; safecall;
    property Calendar: Calendar read Get_Calendar;
    property Shift1: Shift read Get_Shift1;
    property Shift2: Shift read Get_Shift2;
    property Shift3: Shift read Get_Shift3;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Calendar read Get_Parent;
    property Index: Smallint read Get_Index;
    property Name: WideString read Get_Name;
    property Months: Months read Get_Months;
    property Shift4: Shift read Get_Shift4;
    property Shift5: Shift read Get_Shift5;
  end;

// *********************************************************************//
// DispIntf:  YearDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4B-0000-0000-C000-000000000046}
// *********************************************************************//
  YearDisp = dispinterface
    ['{000C0C4B-0000-0000-C000-000000000046}']
    property Calendar: Calendar readonly dispid 1;
    property Shift1: Shift readonly dispid 2;
    property Shift2: Shift readonly dispid 3;
    property Shift3: Shift readonly dispid 4;
    function  Working: WordBool; dispid 5;
    procedure Default; dispid 6;
    property Count: Smallint readonly dispid 65525;
    property Application: Application readonly dispid 65524;
    property Parent: Calendar readonly dispid 65523;
    property Index: Smallint readonly dispid 65527;
    property Name: WideString readonly dispid 0;
    property Months: Months readonly dispid 10;
    property Shift4: Shift readonly dispid 11;
    property Shift5: Shift readonly dispid 12;
  end;

// *********************************************************************//
// Interface: Month
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4D-0000-0000-C000-000000000046}
// *********************************************************************//
  Month = interface(IDispatch)
    ['{000C0C4D-0000-0000-C000-000000000046}']
    function  Get_Calendar: Calendar; safecall;
    function  Get_Shift1: Shift; safecall;
    function  Get_Shift2: Shift; safecall;
    function  Get_Shift3: Shift; safecall;
    function  Get_Working: WordBool; safecall;
    procedure Set_Working(fWorking: OleVariant); safecall;
    procedure Default; safecall;
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Year; safecall;
    function  Get_Index: Smallint; safecall;
    function  Get_Name: WideString; safecall;
    function  Get_Days: Days; safecall;
    function  Get_Shift4: Shift; safecall;
    function  Get_Shift5: Shift; safecall;
    property Calendar: Calendar read Get_Calendar;
    property Shift1: Shift read Get_Shift1;
    property Shift2: Shift read Get_Shift2;
    property Shift3: Shift read Get_Shift3;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Year read Get_Parent;
    property Index: Smallint read Get_Index;
    property Name: WideString read Get_Name;
    property Days: Days read Get_Days;
    property Shift4: Shift read Get_Shift4;
    property Shift5: Shift read Get_Shift5;
  end;

// *********************************************************************//
// DispIntf:  MonthDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C4D-0000-0000-C000-000000000046}
// *********************************************************************//
  MonthDisp = dispinterface
    ['{000C0C4D-0000-0000-C000-000000000046}']
    property Calendar: Calendar readonly dispid 1;
    property Shift1: Shift readonly dispid 2;
    property Shift2: Shift readonly dispid 3;
    property Shift3: Shift readonly dispid 4;
    function  Working: WordBool; dispid 5;
    procedure Default; dispid 6;
    property Count: Smallint readonly dispid 65525;
    property Application: Application readonly dispid 65524;
    property Parent: Year readonly dispid 65523;
    property Index: Smallint readonly dispid 65527;
    property Name: WideString readonly dispid 0;
    property Days: Days readonly dispid 10;
    property Shift4: Shift readonly dispid 11;
    property Shift5: Shift readonly dispid 12;
  end;

// *********************************************************************//
// Interface: Day
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C52-0000-0000-C000-000000000046}
// *********************************************************************//
  Day = interface(IDispatch)
    ['{000C0C52-0000-0000-C000-000000000046}']
    function  Get_Calendar: Calendar; safecall;
    function  Get_Shift1: Shift; safecall;
    function  Get_Shift2: Shift; safecall;
    function  Get_Shift3: Shift; safecall;
    function  Get_Working: WordBool; safecall;
    procedure Set_Working(fWorking: OleVariant); safecall;
    procedure Default; safecall;
    function  Get_Count: Smallint; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: Month; safecall;
    function  Get_Index: Smallint; safecall;
    function  Get_Name: WideString; safecall;
    function  Get_Shift4: Shift; safecall;
    function  Get_Shift5: Shift; safecall;
    property Calendar: Calendar read Get_Calendar;
    property Shift1: Shift read Get_Shift1;
    property Shift2: Shift read Get_Shift2;
    property Shift3: Shift read Get_Shift3;
    property Count: Smallint read Get_Count;
    property Application: Application read Get_Application;
    property Parent: Month read Get_Parent;
    property Index: Smallint read Get_Index;
    property Name: WideString read Get_Name;
    property Shift4: Shift read Get_Shift4;
    property Shift5: Shift read Get_Shift5;
  end;

// *********************************************************************//
// DispIntf:  DayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C52-0000-0000-C000-000000000046}
// *********************************************************************//
  DayDisp = dispinterface
    ['{000C0C52-0000-0000-C000-000000000046}']
    property Calendar: Calendar readonly dispid 1;
    property Shift1: Shift readonly dispid 2;
    property Shift2: Shift readonly dispid 3;
    property Shift3: Shift readonly dispid 4;
    function  Working: WordBool; dispid 5;
    procedure Default; dispid 6;
    property Count: Smallint readonly dispid 65525;
    property Application: Application readonly dispid 65524;
    property Parent: Month readonly dispid 65523;
    property Index: Smallint readonly dispid 65527;
    property Name: WideString readonly dispid 0;
    property Shift4: Shift readonly dispid 7;
    property Shift5: Shift readonly dispid 8;
  end;

// *********************************************************************//
// Interface: TimeScaleValue
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C54-0000-0000-C000-000000000046}
// *********************************************************************//
  TimeScaleValue = interface(IDispatch)
    ['{000C0C54-0000-0000-C000-000000000046}']
    function  Get_StartDate: OleVariant; safecall;
    function  Get_EndDate: OleVariant; safecall;
    function  Get_Value: OleVariant; safecall;
    procedure Set_Value(pvar: OleVariant); safecall;
    function  Get_Index: Integer; safecall;
    procedure Clear; safecall;
    procedure Delete; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: IDispatch; safecall;
    property StartDate: OleVariant read Get_StartDate;
    property EndDate: OleVariant read Get_EndDate;
    property Value: OleVariant read Get_Value write Set_Value;
    property Index: Integer read Get_Index;
    property Application: Application read Get_Application;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  TimeScaleValueDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C54-0000-0000-C000-000000000046}
// *********************************************************************//
  TimeScaleValueDisp = dispinterface
    ['{000C0C54-0000-0000-C000-000000000046}']
    property StartDate: OleVariant readonly dispid 1;
    property EndDate: OleVariant readonly dispid 2;
    property Value: OleVariant dispid 0;
    property Index: Integer readonly dispid 65527;
    procedure Clear; dispid 3;
    procedure Delete; dispid 4;
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
  end;

// *********************************************************************//
// Interface: TimeScaleValues
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C53-0000-0000-C000-000000000046}
// *********************************************************************//
  TimeScaleValues = interface(IDispatch)
    ['{000C0C53-0000-0000-C000-000000000046}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: Integer): TimeScaleValue; safecall;
    function  Get_Count: Integer; safecall;
    function  Add(Value: OleVariant; Position: OleVariant): TimeScaleValue; safecall;
    function  Get_Application: Application; safecall;
    function  Get_Parent: IDispatch; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: Integer]: TimeScaleValue read Get_Item; default;
    property Count: Integer read Get_Count;
    property Application: Application read Get_Application;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  TimeScaleValuesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C53-0000-0000-C000-000000000046}
// *********************************************************************//
  TimeScaleValuesDisp = dispinterface
    ['{000C0C53-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: Integer]: TimeScaleValue readonly dispid 0; default;
    property Count: Integer readonly dispid 65525;
    function  Add(Value: OleVariant; Position: OleVariant): TimeScaleValue; dispid 65526;
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
  end;

// *********************************************************************//
// Interface: CostRateTable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C56-0000-0000-C000-000000000046}
// *********************************************************************//
  CostRateTable = interface(IDispatch)
    ['{000C0C56-0000-0000-C000-000000000046}']
    function  Get_Index: Integer; safecall;
    function  Get_Name: WideString; safecall;
    function  Get_PayRates: PayRates; safecall;
    function  Get_Parent: Resource; safecall;
    function  Get_Application: Application; safecall;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
    property PayRates: PayRates read Get_PayRates;
    property Parent: Resource read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  CostRateTableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C56-0000-0000-C000-000000000046}
// *********************************************************************//
  CostRateTableDisp = dispinterface
    ['{000C0C56-0000-0000-C000-000000000046}']
    property Index: Integer readonly dispid 0;
    property Name: WideString readonly dispid 1;
    property PayRates: PayRates readonly dispid 2;
    property Parent: Resource readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: CostRateTables
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C55-0000-0000-C000-000000000046}
// *********************************************************************//
  CostRateTables = interface(IDispatch)
    ['{000C0C55-0000-0000-C000-000000000046}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): CostRateTable; safecall;
    function  Get_Count: Integer; safecall;
    function  Get_Parent: Resource; safecall;
    function  Get_Application: Application; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: CostRateTable read Get_Item; default;
    property Count: Integer read Get_Count;
    property Parent: Resource read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  CostRateTablesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C55-0000-0000-C000-000000000046}
// *********************************************************************//
  CostRateTablesDisp = dispinterface
    ['{000C0C55-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: CostRateTable readonly dispid 0; default;
    property Count: Integer readonly dispid 65525;
    property Parent: Resource readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: PayRate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C58-0000-0000-C000-000000000046}
// *********************************************************************//
  PayRate = interface(IDispatch)
    ['{000C0C58-0000-0000-C000-000000000046}']
    function  Get_Index: Integer; safecall;
    function  Get_EffectiveDate: OleVariant; safecall;
    function  Get_StandardRate: OleVariant; safecall;
    procedure Set_StandardRate(pvar: OleVariant); safecall;
    function  Get_OvertimeRate: OleVariant; safecall;
    procedure Set_OvertimeRate(pvar: OleVariant); safecall;
    function  Get_CostPerUse: OleVariant; safecall;
    procedure Set_CostPerUse(pvar: OleVariant); safecall;
    procedure Delete; safecall;
    function  Get_Parent: Resource; safecall;
    function  Get_Application: Application; safecall;
    property Index: Integer read Get_Index;
    property EffectiveDate: OleVariant read Get_EffectiveDate;
    property StandardRate: OleVariant read Get_StandardRate write Set_StandardRate;
    property OvertimeRate: OleVariant read Get_OvertimeRate write Set_OvertimeRate;
    property CostPerUse: OleVariant read Get_CostPerUse write Set_CostPerUse;
    property Parent: Resource read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  PayRateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C58-0000-0000-C000-000000000046}
// *********************************************************************//
  PayRateDisp = dispinterface
    ['{000C0C58-0000-0000-C000-000000000046}']
    property Index: Integer readonly dispid 0;
    property EffectiveDate: OleVariant readonly dispid 1;
    property StandardRate: OleVariant dispid 2;
    property OvertimeRate: OleVariant dispid 3;
    property CostPerUse: OleVariant dispid 4;
    procedure Delete; dispid 5;
    property Parent: Resource readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: PayRates
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C57-0000-0000-C000-000000000046}
// *********************************************************************//
  PayRates = interface(IDispatch)
    ['{000C0C57-0000-0000-C000-000000000046}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): PayRate; safecall;
    function  Get_Count: Integer; safecall;
    function  Add(EffectiveDate: OleVariant; StdRate: OleVariant; OvtRate: OleVariant;
                  CostPerUse: OleVariant): PayRate; safecall;
    function  Get_Parent: Resource; safecall;
    function  Get_Application: Application; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: PayRate read Get_Item; default;
    property Count: Integer read Get_Count;
    property Parent: Resource read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  PayRatesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C57-0000-0000-C000-000000000046}
// *********************************************************************//
  PayRatesDisp = dispinterface
    ['{000C0C57-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: PayRate readonly dispid 0; default;
    property Count: Integer readonly dispid 65525;
    function  Add(EffectiveDate: OleVariant; StdRate: OleVariant; OvtRate: OleVariant;
                  CostPerUse: OleVariant): PayRate; dispid 65526;
    property Parent: Resource readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: Availability
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1251566D-2BDF-11D2-9EAC-00C04FB92E6F}
// *********************************************************************//
  Availability = interface(IDispatch)
    ['{1251566D-2BDF-11D2-9EAC-00C04FB92E6F}']
    function  Get_Index: Integer; safecall;
    function  Get_AvailableFrom: OleVariant; safecall;
    procedure Set_AvailableFrom(pFromDate: OleVariant); safecall;
    function  Get_AvailableTo: OleVariant; safecall;
    procedure Set_AvailableTo(pToDate: OleVariant); safecall;
    function  Get_AvailableUnit: Double; safecall;
    procedure Set_AvailableUnit(pUnit: Double); safecall;
    procedure Delete; safecall;
    function  Get_Parent: Resource; safecall;
    function  Get_Application: Application; safecall;
    property Index: Integer read Get_Index;
    property AvailableFrom: OleVariant read Get_AvailableFrom write Set_AvailableFrom;
    property AvailableTo: OleVariant read Get_AvailableTo write Set_AvailableTo;
    property AvailableUnit: Double read Get_AvailableUnit write Set_AvailableUnit;
    property Parent: Resource read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  AvailabilityDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1251566D-2BDF-11D2-9EAC-00C04FB92E6F}
// *********************************************************************//
  AvailabilityDisp = dispinterface
    ['{1251566D-2BDF-11D2-9EAC-00C04FB92E6F}']
    property Index: Integer readonly dispid 65527;
    property AvailableFrom: OleVariant dispid 1;
    property AvailableTo: OleVariant dispid 2;
    property AvailableUnit: Double dispid 3;
    procedure Delete; dispid 4;
    property Parent: Resource readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: Availabilities
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1251566C-2BDF-11D2-9EAC-00C04FB92E6F}
// *********************************************************************//
  Availabilities = interface(IDispatch)
    ['{1251566C-2BDF-11D2-9EAC-00C04FB92E6F}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: OleVariant): Availability; safecall;
    function  Get_Count: Integer; safecall;
    function  Add(AvailableFrom: OleVariant; AvailableTo: OleVariant; AvailableUnit: Double): Availability; safecall;
    function  Get_Parent: Resource; safecall;
    function  Get_Application: Application; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: OleVariant]: Availability read Get_Item; default;
    property Count: Integer read Get_Count;
    property Parent: Resource read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  AvailabilitiesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1251566C-2BDF-11D2-9EAC-00C04FB92E6F}
// *********************************************************************//
  AvailabilitiesDisp = dispinterface
    ['{1251566C-2BDF-11D2-9EAC-00C04FB92E6F}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: OleVariant]: Availability readonly dispid 0; default;
    property Count: Integer readonly dispid 65525;
    function  Add(AvailableFrom: OleVariant; AvailableTo: OleVariant; AvailableUnit: Double): Availability; dispid 65526;
    property Parent: Resource readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: TaskDependency
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7C6ACB0-58C6-11D2-AE5A-00C04FB6F701}
// *********************************************************************//
  TaskDependency = interface(IDispatch)
    ['{A7C6ACB0-58C6-11D2-AE5A-00C04FB6F701}']
    procedure Delete; safecall;
    function  Get_From: Task; safecall;
    function  Get_To_: Task; safecall;
    function  Get_Type_: PjTaskLinkType; safecall;
    procedure Set_Type_(retval: PjTaskLinkType); safecall;
    function  Get_Lag: OleVariant; safecall;
    procedure Set_Lag(retval: OleVariant); safecall;
    function  Get_Path: WideString; safecall;
    procedure Set_Path(pbstrVal: OleVariant); safecall;
    function  Get_Index: Integer; safecall;
    function  Get_Parent: Task; safecall;
    function  Get_Application: Application; safecall;
    property From: Task read Get_From;
    property To_: Task read Get_To_;
    property Type_: PjTaskLinkType read Get_Type_ write Set_Type_;
    property Lag: OleVariant read Get_Lag write Set_Lag;
    property Index: Integer read Get_Index;
    property Parent: Task read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  TaskDependencyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7C6ACB0-58C6-11D2-AE5A-00C04FB6F701}
// *********************************************************************//
  TaskDependencyDisp = dispinterface
    ['{A7C6ACB0-58C6-11D2-AE5A-00C04FB6F701}']
    procedure Delete; dispid 1;
    property From: Task readonly dispid 2;
    property To_: Task readonly dispid 3;
    property Type_: PjTaskLinkType dispid 4;
    property Lag: OleVariant dispid 5;
    function  Path: WideString; dispid 6;
    property Index: Integer readonly dispid 65527;
    property Parent: Task readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: TaskDependencies
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7C6ACB1-58C6-11D2-AE5A-00C04FB6F701}
// *********************************************************************//
  TaskDependencies = interface(IDispatch)
    ['{A7C6ACB1-58C6-11D2-AE5A-00C04FB6F701}']
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: Integer): TaskDependency; safecall;
    function  Get_Count: Integer; safecall;
    function  Add(const From: Task; Type_: PjTaskLinkType; Lag: OleVariant): TaskDependency; safecall;
    function  Get_Parent: Task; safecall;
    function  Get_Application: Application; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: Integer]: TaskDependency read Get_Item; default;
    property Count: Integer read Get_Count;
    property Parent: Task read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  TaskDependenciesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7C6ACB1-58C6-11D2-AE5A-00C04FB6F701}
// *********************************************************************//
  TaskDependenciesDisp = dispinterface
    ['{A7C6ACB1-58C6-11D2-AE5A-00C04FB6F701}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: Integer]: TaskDependency readonly dispid 0; default;
    property Count: Integer readonly dispid 65525;
    function  Add(const From: Task; Type_: PjTaskLinkType; Lag: OleVariant): TaskDependency; dispid 65526;
    property Parent: Task readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// DispIntf:  Pane
// Flags:     (4096) Dispatchable
// GUID:      {00020B04-0000-0000-C000-000000000046}
// *********************************************************************//
  Pane = dispinterface
    ['{00020B04-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
    property Index: OleVariant readonly dispid 0;
    procedure Activate; dispid 3;
    procedure Close; dispid 4;
  end;

// *********************************************************************//
// DispIntf:  Window
// Flags:     (4096) Dispatchable
// GUID:      {00020B02-0000-0000-C000-000000000046}
// *********************************************************************//
  Window = dispinterface
    ['{00020B02-0000-0000-C000-000000000046}']
    property Caption: WideString dispid 0;
    property Visible: WordBool dispid 3;
    property WindowState: PjWindowState dispid 2;
    property Left: Integer dispid 4;
    property Top: Integer dispid 5;
    property Width: Integer dispid 6;
    property Height: Integer dispid 7;
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
    property Index: OleVariant readonly dispid 65527;
    property ActivePane: Pane readonly dispid 11;
    property TopPane: Pane readonly dispid 12;
    property BottomPane: Pane readonly dispid 13;
    procedure Close; dispid 9;
    procedure Activate; dispid 10;
  end;

// *********************************************************************//
// DispIntf:  Windows
// Flags:     (4096) Dispatchable
// GUID:      {00020B03-0000-0000-C000-000000000046}
// *********************************************************************//
  Windows = dispinterface
    ['{00020B03-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
    property ActiveWindow: Window readonly dispid 51;
    property Count: Integer readonly dispid 65525;
    property Item[Index: OleVariant]: Window readonly dispid 0; default;
  end;

// *********************************************************************//
// Interface: SplitPart
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C48-0000-0000-C000-000000000046}
// *********************************************************************//
  SplitPart = interface(IDispatch)
    ['{000C0C48-0000-0000-C000-000000000046}']
    function  Get_Start: OleVariant; safecall;
    procedure Set_Start(retval: OleVariant); safecall;
    function  Get_Finish: OleVariant; safecall;
    procedure Set_Finish(retval: OleVariant); safecall;
    function  Get_Index: Integer; safecall;
    function  Get_Parent: IDispatch; safecall;
    function  Get_Application: Application; safecall;
    procedure Delete; safecall;
    property Start: OleVariant read Get_Start write Set_Start;
    property Finish: OleVariant read Get_Finish write Set_Finish;
    property Index: Integer read Get_Index;
    property Parent: IDispatch read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  SplitPartDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C48-0000-0000-C000-000000000046}
// *********************************************************************//
  SplitPartDisp = dispinterface
    ['{000C0C48-0000-0000-C000-000000000046}']
    property Start: OleVariant dispid 1;
    property Finish: OleVariant dispid 2;
    property Index: Integer readonly dispid 0;
    property Parent: IDispatch readonly dispid 65523;
    property Application: Application readonly dispid 65524;
    procedure Delete; dispid 3;
  end;

// *********************************************************************//
// Interface: SplitParts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C47-0000-0000-C000-000000000046}
// *********************************************************************//
  SplitParts = interface(IDispatch)
    ['{000C0C47-0000-0000-C000-000000000046}']
    function  Get_Count: Integer; safecall;
    procedure Add(StartSplitPartOn: OleVariant; EndSplitPartOn: OleVariant); safecall;
    function  Get__NewEnum: IUnknown; safecall;
    function  Get_Item(Index: Integer): SplitPart; safecall;
    function  Get_Parent: IDispatch; safecall;
    function  Get_Application: Application; safecall;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[Index: Integer]: SplitPart read Get_Item; default;
    property Parent: IDispatch read Get_Parent;
    property Application: Application read Get_Application;
  end;

// *********************************************************************//
// DispIntf:  SplitPartsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C47-0000-0000-C000-000000000046}
// *********************************************************************//
  SplitPartsDisp = dispinterface
    ['{000C0C47-0000-0000-C000-000000000046}']
    property Count: Integer readonly dispid 65525;
    procedure Add(StartSplitPartOn: OleVariant; EndSplitPartOn: OleVariant); dispid 65526;
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[Index: Integer]: SplitPart readonly dispid 0; default;
    property Parent: IDispatch readonly dispid 65523;
    property Application: Application readonly dispid 65524;
  end;

// *********************************************************************//
// Interface: Tasks
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C40-0000-0000-C000-000000000046}
// *********************************************************************//
  Tasks = interface(IDispatch)
    ['{000C0C40-0000-0000-C000-000000000046}']
    function  Get_Application: Application; safecall;
    function  Get_Parent: Project; safecall;
    function  Get_Count: Integer; safecall;
    function  Get_UniqueID(Index: Integer): Task; safecall;
    function  Add(Name: OleVariant; Before: OleVariant): Task; safecall;
    function  Get_Item(Index: OleVariant): Task; safecall;
    function  Get__NewEnum: IUnknown; safecall;
    property Application: Application read Get_Application;
    property Parent: Project read Get_Parent;
    property Count: Integer read Get_Count;
    property UniqueID[Index: Integer]: Task read Get_UniqueID;
    property Item[Index: OleVariant]: Task read Get_Item; default;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  TasksDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C40-0000-0000-C000-000000000046}
// *********************************************************************//
  TasksDisp = dispinterface
    ['{000C0C40-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: Project readonly dispid 65523;
    property Count: Integer readonly dispid 65525;
    property UniqueID[Index: Integer]: Task readonly dispid 65521;
    function  Add(Name: OleVariant; Before: OleVariant): Task; dispid 65526;
    property Item[Index: OleVariant]: Task readonly dispid 0; default;
    property _NewEnum: IUnknown readonly dispid -4;
  end;

// *********************************************************************//
// Interface: Resources
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C42-0000-0000-C000-000000000046}
// *********************************************************************//
  Resources = interface(IDispatch)
    ['{000C0C42-0000-0000-C000-000000000046}']
    function  Get_Application: Application; safecall;
    function  Get_Parent: Project; safecall;
    function  Get_Count: Integer; safecall;
    function  Get_UniqueID(Index: Integer): Resource; safecall;
    function  Add(Name: OleVariant; Before: OleVariant): Resource; safecall;
    function  Get_Item(Index: OleVariant): Resource; safecall;
    function  Get__NewEnum: IUnknown; safecall;
    property Application: Application read Get_Application;
    property Parent: Project read Get_Parent;
    property Count: Integer read Get_Count;
    property UniqueID[Index: Integer]: Resource read Get_UniqueID;
    property Item[Index: OleVariant]: Resource read Get_Item; default;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  ResourcesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C42-0000-0000-C000-000000000046}
// *********************************************************************//
  ResourcesDisp = dispinterface
    ['{000C0C42-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: Project readonly dispid 65523;
    property Count: Integer readonly dispid 65525;
    property UniqueID[Index: Integer]: Resource readonly dispid 65521;
    function  Add(Name: OleVariant; Before: OleVariant): Resource; dispid 65526;
    property Item[Index: OleVariant]: Resource readonly dispid 0; default;
    property _NewEnum: IUnknown readonly dispid -4;
  end;

// *********************************************************************//
// Interface: Assignments
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C46-0000-0000-C000-000000000046}
// *********************************************************************//
  Assignments = interface(IDispatch)
    ['{000C0C46-0000-0000-C000-000000000046}']
    function  Get_Application: Application; safecall;
    function  Get_Parent: Project; safecall;
    function  Get_Count: Integer; safecall;
    function  Get_UniqueID(Index: Integer): Assignment; safecall;
    function  Add(TaskID: OleVariant; ResourceID: OleVariant; Units: OleVariant): Assignment; safecall;
    function  Get_Item(Index: OleVariant): Assignment; safecall;
    function  Get__NewEnum: IUnknown; safecall;
    property Application: Application read Get_Application;
    property Parent: Project read Get_Parent;
    property Count: Integer read Get_Count;
    property UniqueID[Index: Integer]: Assignment read Get_UniqueID;
    property Item[Index: OleVariant]: Assignment read Get_Item; default;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  AssignmentsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C46-0000-0000-C000-000000000046}
// *********************************************************************//
  AssignmentsDisp = dispinterface
    ['{000C0C46-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: Project readonly dispid 65523;
    property Count: Integer readonly dispid 65525;
    property UniqueID[Index: Integer]: Assignment readonly dispid 65521;
    function  Add(TaskID: OleVariant; ResourceID: OleVariant; Units: OleVariant): Assignment; dispid 65526;
    property Item[Index: OleVariant]: Assignment readonly dispid 0; default;
    property _NewEnum: IUnknown readonly dispid -4;
  end;

// *********************************************************************//
// Interface: Calendars
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C44-0000-0000-C000-000000000046}
// *********************************************************************//
  Calendars = interface(IDispatch)
    ['{000C0C44-0000-0000-C000-000000000046}']
    function  Get_Application: Application; safecall;
    function  Get_Parent: Project; safecall;
    function  Get_Count: Integer; safecall;
    function  Get_Item(Index: OleVariant): Calendar; safecall;
    function  Get__NewEnum: IUnknown; safecall;
    property Application: Application read Get_Application;
    property Parent: Project read Get_Parent;
    property Count: Integer read Get_Count;
    property Item[Index: OleVariant]: Calendar read Get_Item; default;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  CalendarsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000C0C44-0000-0000-C000-000000000046}
// *********************************************************************//
  CalendarsDisp = dispinterface
    ['{000C0C44-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: Project readonly dispid 65523;
    property Count: Integer readonly dispid 65525;
    property Item[Index: OleVariant]: Calendar readonly dispid 0; default;
    property _NewEnum: IUnknown readonly dispid -4;
  end;

// *********************************************************************//
// DispIntf:  _IProjectDoc
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00020B00-0000-0000-C000-000000000046}
// *********************************************************************//
  _IProjectDoc = dispinterface
    ['{00020B00-0000-0000-C000-000000000046}']
    property Manager: OleVariant dispid 5;
    property Company: OleVariant dispid 4;
    property Author: OleVariant dispid 48;
    property Keywords: OleVariant dispid 49;
    property ProjectNotes: WideString dispid 6;
    property ProjectStart: OleVariant dispid 7;
    property ProjectFinish: OleVariant dispid 8;
    property CurrentDate: OleVariant dispid 9;
    property StatusDate: OleVariant dispid 75;
    property ScheduleFromStart: WordBool dispid 12;
    property Comments: OleVariant dispid 14;
    property Title: OleVariant dispid 27;
    property Subject: OleVariant dispid 28;
    property Windows: Windows dispid 30;
    property MinuteLabelDisplay: Smallint dispid 56;
    property HourLabelDisplay: Smallint dispid 57;
    property DayLabelDisplay: Smallint dispid 58;
    property WeekLabelDisplay: Smallint dispid 59;
    property YearLabelDisplay: Smallint dispid 60;
    property MonthLabelDisplay: Smallint dispid 6015;
    property SpaceBeforeTimeLabels: WordBool dispid 61;
    property DefaultTaskType: PjTaskFixedType dispid 67;
    property DefaultEffortDriven: WordBool dispid 63;
    property UseFYStartYear: WordBool dispid 64;
    property AutoFilter: WordBool dispid 66;
    property HonorConstraints: WordBool dispid 73;
    property MultipleCriticalPaths: WordBool dispid 74;
    property LevelFromDate: OleVariant dispid 76;
    property LevelToDate: OleVariant dispid 77;
    property LevelEntireProject: WordBool dispid 91;
    property DefaultFixedCostAccrual: PjAccrueAt dispid 81;
    property SpreadCostsToStatusDate: WordBool dispid 83;
    property SpreadPercentCompleteToStatusDate: WordBool dispid 90;
    property AutoCalcCosts: WordBool dispid 84;
    property ShowExternalSuccessors: WordBool dispid 85;
    property ShowExternalPredecessors: WordBool dispid 86;
    property ShowCrossProjectLinksInfo: WordBool dispid 87;
    property AcceptNewExternalData: WordBool dispid 88;
    property PhoneticType: PjPhoneticType dispid 89;
    property WorkgroupMessages: PjWorkgroupMessages dispid 92;
    property ServerURL: WideString dispid 93;
    property ServerPath: WideString dispid 94;
    property ReceiveNotifications: WordBool dispid 95;
    property SendHyperlinkNote: WordBool dispid 96;
    property HyperlinkColor: PjColor dispid 97;
    property FollowedHyperlinkColor: PjColor dispid 98;
    property UnderlineHyperlinks: WordBool dispid 99;
    property AskForCompletedWork: PjTeamStatusCompletedWork dispid 6000;
    property TrackOvertimeWork: WordBool dispid 6001;
    property TeamMembersCanDeclineTasks: WordBool dispid 6002;
    property ShowEstimatedDuration: WordBool dispid 6004;
    property NewTasksEstimated: WordBool dispid 6005;
    property WBSCodeGenerate: WordBool dispid 6013;
    property WBSVerifyUniqueness: WordBool dispid 6014;
    property UpdateProjOnSave: WordBool dispid 6017;
    property ServerIdentification: PjAuthentication dispid 6016;
    property VBASigned: WordBool dispid 6018;
    property ExpandDatabaseTimephasedData: WordBool dispid 6020;
    property DatabaseProjectUniqueID: OleVariant dispid 6019;
    property ActualWork: OleVariant dispid 102;
    property Cost1: OleVariant dispid 206;
    property Cost2: OleVariant dispid 207;
    property Cost3: OleVariant dispid 208;
    property BaselineWork: OleVariant dispid 101;
    property BaselineCost: OleVariant dispid 106;
    property FixedCost: OleVariant dispid 108;
    property WBS: WideString dispid 116;
    property Delay: OleVariant dispid 120;
    property Priority: OleVariant dispid 125;
    property Duration1: OleVariant dispid 203;
    property Duration2: OleVariant dispid 204;
    property Duration3: OleVariant dispid 205;
    property PercentWorkComplete: OleVariant dispid 133;
    property FixedDuration: OleVariant dispid 134;
    property BaselineStart: OleVariant dispid 143;
    property BaselineFinish: OleVariant dispid 144;
    property Text1: WideString dispid 151;
    property Start1: OleVariant dispid 152;
    property Finish1: OleVariant dispid 153;
    property Text2: WideString dispid 154;
    property Start2: OleVariant dispid 155;
    property Finish2: OleVariant dispid 156;
    property Text3: WideString dispid 157;
    property Start3: OleVariant dispid 158;
    property Finish3: OleVariant dispid 159;
    property Text4: WideString dispid 160;
    property Start4: OleVariant dispid 161;
    property Finish4: OleVariant dispid 162;
    property Text5: WideString dispid 163;
    property Start5: OleVariant dispid 164;
    property Finish5: OleVariant dispid 165;
    property Text6: WideString dispid 166;
    property Text7: WideString dispid 167;
    property Text8: WideString dispid 168;
    property Text9: WideString dispid 169;
    property Text10: WideString dispid 170;
    property Marked: OleVariant dispid 171;
    property Flag1: OleVariant dispid 172;
    property Flag2: OleVariant dispid 173;
    property Flag3: OleVariant dispid 174;
    property Flag4: OleVariant dispid 175;
    property Flag5: OleVariant dispid 176;
    property Flag6: OleVariant dispid 177;
    property Flag7: OleVariant dispid 178;
    property Flag8: OleVariant dispid 179;
    property Flag9: OleVariant dispid 180;
    property Flag10: OleVariant dispid 181;
    property Rollup: OleVariant dispid 182;
    property Number1: Double dispid 187;
    property Number2: Double dispid 188;
    property Number3: Double dispid 189;
    property Number4: Double dispid 190;
    property Number5: Double dispid 191;
    property Notes: WideString dispid 115;
    property Contact: WideString dispid 212;
    property HideBar: OleVariant dispid 209;
    property CurrencySymbol: WideString dispid 5101;
    property CurrencySymbolPosition: PjPlacement dispid 5102;
    property CurrencyDigits: Smallint dispid 5103;
    property ShowCriticalSlack: Integer dispid 5107;
    property DefaultDurationUnits: PjUnit dispid 5108;
    property DefaultWorkUnits: PjUnit dispid 5109;
    property StartOnCurrentDate: WordBool dispid 5110;
    property AutoTrack: WordBool dispid 5112;
    property AutoSplitTasks: WordBool dispid 5113;
    property AutoLinkTasks: WordBool dispid 5114;
    property DefaultStartTime: OleVariant dispid 5115;
    property DefaultFinishTime: OleVariant dispid 5123;
    property HoursPerDay: Double dispid 5117;
    property HoursPerWeek: Double dispid 5118;
    property DaysPerMonth: Double dispid 5128;
    property DefaultResourceStandardRate: OleVariant dispid 5119;
    property DefaultResourceOvertimeRate: OleVariant dispid 5120;
    property DisplayProjectSummaryTask: WordBool dispid 5121;
    property AutoAddResources: WordBool dispid 5122;
    property StartWeekOn: PjWeekday dispid 5126;
    property StartYearIn: PjMonth dispid 5127;
    property AllowTaskDelegation: WordBool dispid 5129;
    property Name: WideString dispid 0;
    property _CodeName: WideString dispid -2147418112;
    property CodeName: WideString readonly dispid 72;
    property OutlineChildren: Tasks readonly dispid 52;
    property CostVariance: OleVariant readonly dispid 109;
    property ProjectSummaryTask: Task readonly dispid 80;
    property RemainingCost: OleVariant readonly dispid 110;
    property BCWP: OleVariant readonly dispid 111;
    property BCWS: OleVariant readonly dispid 112;
    property SV: OleVariant readonly dispid 113;
    property CV: OleVariant readonly dispid 183;
    property OutlineNumber: WideString readonly dispid 202;
    property Critical: OleVariant readonly dispid 119;
    property FreeSlack: OleVariant readonly dispid 121;
    property TotalSlack: OleVariant readonly dispid 122;
    property UniqueID: Integer readonly dispid 186;
    property OutlineLevel: SYSINT readonly dispid 185;
    property BaselineDuration: OleVariant readonly dispid 127;
    property DurationVariance: OleVariant readonly dispid 130;
    property EarlyStart: OleVariant readonly dispid 137;
    property EarlyFinish: OleVariant readonly dispid 138;
    property LateStart: OleVariant readonly dispid 139;
    property StartVariance: OleVariant readonly dispid 145;
    property FinishVariance: OleVariant readonly dispid 146;
    property Project: OleVariant readonly dispid 184;
    property Milestone: OleVariant readonly dispid 124;
    property RemainingDuration: OleVariant readonly dispid 131;
    property PercentComplete: OleVariant readonly dispid 132;
    property Start: OleVariant readonly dispid 135;
    property Finish: OleVariant readonly dispid 136;
    property ResourceNames: OleVariant readonly dispid 149;
    property ResourceInitials: OleVariant readonly dispid 150;
    property Resume: OleVariant readonly dispid 199;
    property Stop: OleVariant readonly dispid 200;
    property ResumeNoEarlierThan: OleVariant readonly dispid 201;
    property ConstraintType: OleVariant readonly dispid 117;
    property ConstraintDate: OleVariant readonly dispid 118;
    property ActualCost: OleVariant readonly dispid 107;
    property Cost: OleVariant readonly dispid 105;
    property Created: OleVariant readonly dispid 193;
    property ActualDuration: OleVariant readonly dispid 128;
    property Duration: OleVariant readonly dispid 129;
    property LateFinish: OleVariant readonly dispid 140;
    property ActualFinish: OleVariant readonly dispid 142;
    property Objects: Integer readonly dispid 197;
    property RemainingWork: OleVariant readonly dispid 104;
    property ResourceGroup: OleVariant readonly dispid 213;
    property ActualStart: OleVariant readonly dispid 141;
    property Summary: OleVariant readonly dispid 192;
    property Template: WideString readonly dispid 29;
    property UpdateNeeded: OleVariant readonly dispid 211;
    property Work: OleVariant readonly dispid 100;
    property WorkVariance: OleVariant readonly dispid 103;
    property LinkedFields: OleVariant readonly dispid 198;
    property Confirmed: OleVariant readonly dispid 210;
    property ReadOnly: WordBool readonly dispid 5104;
    property HasPassword: WordBool readonly dispid 5105;
    property WriteReserved: WordBool readonly dispid 5106;
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
    property Index: OleVariant readonly dispid 65527;
    procedure SaveAs(Name: OleVariant; Format: PjFileFormat; Backup: OleVariant;
                     ReadOnly: OleVariant; TaskInformation: OleVariant; Filtered: OleVariant;
                     Table: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                     FormatID: OleVariant; Map: OleVariant; ClearBaseline: OleVariant;
                     ClearActuals: OleVariant; ClearResourceRates: OleVariant;
                     ClearFixedCosts: OleVariant); dispid 6003;
    property MapList: List readonly dispid 6006;
    property Tasks: Tasks readonly dispid 1;
    property Resources: Resources readonly dispid 2;
    property BaseCalendars: Calendars readonly dispid 10;
    property BuiltinDocumentProperties: IDispatch readonly dispid 53;
    property CustomDocumentProperties: IDispatch readonly dispid 54;
    property Container: IDispatch readonly dispid 55;
    property Calendar: Calendar readonly dispid 51;
    property NumberOfTasks: Integer readonly dispid 40;
    property NumberOfResources: Integer readonly dispid 41;
    property FullName: WideString readonly dispid 42;
    property Path: WideString readonly dispid 11;
    property ResourcePoolName: WideString readonly dispid 43;
    property Saved: WordBool readonly dispid 50;
    property CreationDate: OleVariant readonly dispid 22;
    property LastPrintedDate: OleVariant readonly dispid 23;
    property LastSaveDate: OleVariant readonly dispid 24;
    property LastSavedBy: WideString readonly dispid 25;
    property RevisionNumber: WideString readonly dispid 26;
    property ViewList: List readonly dispid 31;
    property TaskViewList: List readonly dispid 44;
    property ResourceViewList: List readonly dispid 45;
    property ReadOnlyRecommended: WordBool readonly dispid 46;
    property ReportList: List readonly dispid 32;
    property TaskFilterList: List readonly dispid 33;
    property ResourceFilterList: List readonly dispid 34;
    property TaskTableList: List readonly dispid 35;
    property ResourceTableList: List readonly dispid 36;
    property CurrentView: WideString readonly dispid 37;
    property CurrentTable: WideString readonly dispid 38;
    property CurrentFilter: WideString readonly dispid 39;
    property ID: Integer readonly dispid 47;
    property CommandBars: CommandBars readonly dispid 68;
    property UserControl: WordBool readonly dispid 70;
    property VBProject: VBProject readonly dispid 69;
    procedure Activate; dispid 13;
    procedure LevelClearDates; dispid 78;
    procedure AppendNotes(const Value: WideString); dispid 79;
    property Subprojects: Subprojects readonly dispid 6007;
    property CurrentGroup: WideString readonly dispid 6008;
    property TaskGroupList: List readonly dispid 6009;
    property ResourceGroupList: List readonly dispid 6010;
    property TaskGroups: TaskGroups readonly dispid 6011;
    property ResourceGroups: ResourceGroups readonly dispid 6012;
  end;

// *********************************************************************//
// DispIntf:  _EProjectDoc
// Flags:     (4112) Hidden Dispatchable
// GUID:      {F81DD3C0-5089-11CF-A49D-00AA00574C74}
// *********************************************************************//
  _EProjectDoc = dispinterface
    ['{F81DD3C0-5089-11CF-A49D-00AA00574C74}']
    procedure Open(const pj: Project); dispid 1;
    procedure BeforeClose(const pj: Project); dispid 2;
    procedure BeforeSave(const pj: Project); dispid 3;
    procedure BeforePrint(const pj: Project); dispid 4;
    procedure Calculate(const pj: Project); dispid 5;
    procedure Change(const pj: Project); dispid 6;
    procedure Activate(const pj: Project); dispid 7;
    procedure Deactivate(const pj: Project); dispid 8;
  end;

// *********************************************************************//
// DispIntf:  Projects
// Flags:     (4096) Dispatchable
// GUID:      {00020B01-0000-0000-C000-000000000046}
// *********************************************************************//
  Projects = dispinterface
    ['{00020B01-0000-0000-C000-000000000046}']
    property Application: Application readonly dispid 65524;
    property Parent: IDispatch readonly dispid 65523;
    property Count: Integer readonly dispid 65525;
    function  Add(DisplayProjectInfo: OleVariant; Template: OleVariant; FileNewDialog: OleVariant): Project; dispid 65526;
    property Item[Index: OleVariant]: Project readonly dispid 0; default;
    property _NewEnum: IUnknown readonly dispid -4;
  end;

// *********************************************************************//
// DispIntf:  _Global
// Flags:     (4096) Dispatchable
// GUID:      {78E9F620-EBC0-11CF-A523-00A0C904DE55}
// *********************************************************************//
  _Global = dispinterface
    ['{78E9F620-EBC0-11CF-A523-00A0C904DE55}']
    property Application: Application dispid 65524;
    property Parent: Application dispid 65523;
    property ActiveSelection: Selection dispid 5032;
    property ActiveCell: Cell dispid 5033;
    property ActiveProject: Project dispid 5002;
    property ActiveWindow: Window dispid 5003;
    property SupportsMultipleDocuments: WordBool dispid 5004;
    property SupportsMultipleWindows: WordBool dispid 5005;
    property Visible: WordBool dispid 5006;
    property PathSeparator: WideString dispid 5007;
    property Caption: WideString dispid 5010;
    property Name: WideString dispid 0;
    property Path: WideString dispid 5015;
    property Version: WideString dispid 5020;
    property WindowState: PjWindowState dispid 5022;
    property DateOrder: PjDateOrder dispid 5103;
    property DateSeparator: WideString dispid 5104;
    property ThousandSeparator: WideString dispid 5105;
    property DecimalSeparator: WideString dispid 5106;
    property ListSeparator: WideString dispid 5107;
    property TimeSeparator: WideString dispid 5108;
    property TwelveHourTimeFormat: WordBool dispid 5109;
    property AMText: WideString dispid 5110;
    property PMText: WideString dispid 5111;
    property DefaultView: WideString dispid 5112;
    property DisplayStatusBar: WordBool dispid 5113;
    property DisplayAlerts: WordBool dispid 5157;
    property DisplayEntryBar: WordBool dispid 5114;
    property DisplayScrollBars: WordBool dispid 5115;
    property DisplayWindowsInTaskbar: WordBool dispid 5172;
    property Calculation: PjCalculation dispid 5121;
    property AutoLevel: WordBool dispid 5127;
    property AutoClearLeveling: WordBool dispid 5128;
    property LevelWithinSlack: WordBool dispid 5129;
    property LevelOrder: PjLevelOrder dispid 5130;
    property LevelPeriodBasis: PjLevelPeriodBasis dispid 5167;
    property LevelIndividualAssignments: WordBool dispid 5168;
    property LevelingCanSplit: WordBool dispid 5169;
    property MoveAfterReturn: WordBool dispid 5131;
    property DisplayScheduleMessages: WordBool dispid 5133;
    property StartWeekOn: PjWeekday dispid 5135;
    property StartYearIn: PjMonth dispid 5137;
    property CellDragAndDrop: WordBool dispid 5139;
    property UserName: WideString dispid 5150;
    property DisplayNotesIndicator: WordBool dispid 5153;
    property AskToUpdateLinks: WordBool dispid 5155;
    property DisplayPlanningWizard: WordBool dispid 5142;
    property DisplayWizardUsage: WordBool dispid 5144;
    property DisplayWizardErrors: WordBool dispid 5145;
    property DisplayWizardScheduling: WordBool dispid 5143;
    property ShowTipOfDay: WordBool dispid 5147;
    property ShowToolTips: WordBool dispid 5148;
    property ShowWelcome: WordBool dispid 5156;
    property LoadLastFile: WordBool dispid 5136;
    property PromptForSummaryInfo: WordBool dispid 5149;
    property DisplayOLEIndicator: WordBool dispid 5154;
    property DefaultDateFormat: PjDateFormat dispid 5125;
    property DayLeadingZero: WordBool dispid 5158;
    property MonthLeadingZero: WordBool dispid 5159;
    property TimeLeadingZero: WordBool dispid 5160;
    property CopyResourceUsageHeader: WordBool dispid 5138;
    property RecentFilesMaximum: Integer dispid 5162;
    property DisplayRecentFiles: WordBool dispid 5161;
    property MacroVirusProtection: WordBool dispid 5163;
    property ShowAssignmentUnitsAs: PjAssignmentUnits dispid 5164;
    property AutomaticallyFillPhoneticFields: WordBool dispid 5165;
    property DefaultAutoFilter: WordBool dispid 5166;
    property ShowEstimatedDuration: WordBool dispid 5170;
    property NewTasksEstimated: WordBool dispid 5171;
    property Assistant: Assistant dispid 5042;
    property DisplayViewBar: WordBool dispid 5047;
    property VBE: VBE dispid 5043;
    property EnableCancelKey: PjEnableCancelKey dispid 5044;
    property UserControl: WordBool dispid 5046;
    property UsableWidth: Double dispid 5018;
    property UsableHeight: Double dispid 5017;
    property Windows: Windows readonly dispid 5001;
    property CommandBars: CommandBars readonly dispid 5041;
    property AnswerWizard: AnswerWizard readonly dispid 5056;
    property Projects: Projects readonly dispid 5000;
    procedure Quit(SaveChanges: PjSaveType); dispid 5008;
    property OperatingSystem: WideString readonly dispid 5030;
    function  DateSubtract(FinishDate: OleVariant; Duration: OleVariant; Calendar: OleVariant): OleVariant; dispid 5024;
    function  DurationFormat(Duration: OleVariant; Units: OleVariant): WideString; dispid 5026;
    function  DurationValue(const Duration: WideString): OleVariant; dispid 5027;
    function  DateFormat(Date: OleVariant; Format: OleVariant): OleVariant; dispid 5031;
    procedure MailLogon(Name: OleVariant; Password: OleVariant; DownloadNewMail: OleVariant); dispid 5034;
    procedure MailLogoff; dispid 5035;
    function  MailSession: OleVariant; dispid 5036;
    function  MailSystem: OleVariant; dispid 5037;
    function  TimescaledData(TaskID: Integer; ResourceID: Integer; StartDate: OleVariant;
                             EndDate: OleVariant; Type_: PjTimescaledData;
                             TimeScaleUnit: PjTimescaleUnit; Count: OleVariant): OleVariant; dispid 4900;
    function  CustomFieldGetName(FieldID: PjCustomField): WideString; dispid 5039;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                  Arg28: OleVariant; Arg29: OleVariant; Arg30: OleVariant); dispid 5049;
    property FileFormatID[const Name: WideString; UserID: OleVariant; DatabasePassWord: OleVariant]: WideString readonly dispid 5053;
    property FileBuildID[const Name: WideString; UserID: OleVariant; DatabasePassWord: OleVariant]: WideString readonly dispid 5054;
    property COMAddIns: COMAddIns readonly dispid 5055;
    function  BoxGetXPosition(TaskID: Integer; ProjectName: OleVariant): Integer; dispid 5057;
    function  BoxGetYPosition(TaskID: Integer; ProjectName: OleVariant): Integer; dispid 5058;
    function  CustomFieldGetFormula(FieldID: PjCustomField): WideString; dispid 5059;
    function  CustomFieldValueListGetItem(FieldID: PjCustomField; Item: PjValueListItem;
                                          Index: Integer): WideString; dispid 5060;
    function  Message(const Message: WideString; Type_: PjMessageType; YesText: OleVariant;
                      NoText: OleVariant): WordBool; dispid 2;
    function  Alerts(Show: OleVariant): WordBool; dispid 10;
    function  FileNew(SummaryInfo: OleVariant; Template: OleVariant; FileNewDialog: OleVariant): WordBool; dispid 101;
    function  FileProperties: WordBool; dispid 626;
    function  FileOpen(Name: OleVariant; ReadOnly: OleVariant; Merge: OleVariant;
                       TaskInformation: OleVariant; Table: OleVariant; Sheet: OleVariant;
                       NoAuto: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                       FormatID: OleVariant; Map: OleVariant; openPool: PjPoolOpen;
                       Password: OleVariant; WriteResPassword: OleVariant;
                       IgnoreReadOnlyRecommended: OleVariant): WordBool; dispid 102;
    function  Zoom: WordBool; dispid 306;
    function  ZoomTimescale(Duration: OleVariant; Entire: OleVariant; Selection: OleVariant;
                            Reset: OleVariant): WordBool; dispid 307;
    function  BoxZoom(Percent: OleVariant; Entire: OleVariant): WordBool; dispid 308;
    function  FileClose(Save: PjSaveType; NoAuto: OleVariant): WordBool; dispid 103;
    function  FileCloseAll(Save: PjSaveType): WordBool; dispid 104;
    function  ResourceSharing(Share: OleVariant; Name: OleVariant; Pool: OleVariant): WordBool; dispid 105;
    function  FileSave: WordBool; dispid 106;
    function  FileSaveAs(Name: OleVariant; Format: PjFileFormat; Backup: OleVariant;
                         ReadOnly: OleVariant; TaskInformation: OleVariant; Filtered: OleVariant;
                         Table: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                         FormatID: OleVariant; Map: OleVariant; Password: OleVariant;
                         WriteResPassword: OleVariant; ClearBaseline: OleVariant;
                         ClearActuals: OleVariant; ClearResourceRates: OleVariant;
                         ClearFixedCosts: OleVariant): WordBool; dispid 107;
    function  FileSaveWorkspace(Name: OleVariant): WordBool; dispid 108;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant; OnePageWide: OleVariant; Preview: OleVariant;
                        Color: OleVariant): WordBool; dispid 109;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant; ToDate: OleVariant; Preview: OleVariant;
                          Color: OleVariant): WordBool; dispid 110;
    function  FilePrintPreview: WordBool; dispid 111;
    function  ReportPrintPreview(Name: OleVariant): WordBool; dispid 112;
    function  FilePrintSetup(Printer: OleVariant): WordBool; dispid 113;
    function  FilePageSetup(Name: OleVariant): WordBool; dispid 116;
    function  FilePageSetupPage(Name: OleVariant; Portrait: OleVariant; PercentScale: OleVariant;
                                PagesTall: OleVariant; PagesWide: OleVariant;
                                PaperSize: PjPaperSize; FirstPageNumber: OleVariant): WordBool; dispid 2355;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                   Left: OleVariant; Right: OleVariant; Borders: OleVariant): WordBool; dispid 2356;
    function  FilePageSetupHeader(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool; dispid 2357;
    function  FilePageSetupFooter(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool; dispid 2358;
    function  FilePageSetupLegend(Name: OleVariant; TextWidth: OleVariant; LegendOn: OleVariant;
                                  Alignment: PjAlignment; Text: OleVariant;
                                  LabelFontName: OleVariant; LabelFontSize: OleVariant;
                                  LabelFontBold: OleVariant; LabelFontItalic: OleVariant;
                                  LabelFontUnderline: OleVariant; LabelFontColor: PjColor): WordBool; dispid 2359;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                PrintBlankPages: OleVariant; BestPageFitTimescale: OleVariant): WordBool; dispid 2360;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                    AdditionalTasks: OleVariant; GroupAdditionalTasks: OleVariant;
                                    PrintNotes: OleVariant): WordBool; dispid 2361;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                                        Underline: OleVariant; Color: OleVariant): WordBool; dispid 2371;
    function  MailOpen(Any: OleVariant): WordBool; dispid 119;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant;
                       SaveCopy: OleVariant; AddRecipient: OleVariant): WordBool; dispid 120;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant; IncludePicture: OleVariant;
                                   Body: OleVariant; Subject: OleVariant): WordBool; dispid 129;
    function  MailPostDocument: WordBool; dispid 131;
    function  ODBCManageDataSources: WordBool; dispid 132;
    function  ODBCCreateDataSource: WordBool; dispid 133;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                              TrackStatus: OleVariant; Clear: OleVariant; SendNow: OleVariant): WordBool; dispid 125;
    function  FileLoadLast(Number: OleVariant): WordBool; dispid 117;
    function  FileExit(Save: PjSaveType): WordBool; dispid 114;
    function  MenuBars: WordBool; dispid 2072;
    function  MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant;
                          NewName: OleVariant): WordBool; dispid 2075;
    function  MenuBarApply(const Name: WideString; Default: OleVariant; NoFiles: OleVariant): WordBool; dispid 2076;
    function  EditCut: WordBool; dispid 202;
    function  EditCopy: WordBool; dispid 203;
    function  EditCopyPicture(Object_: OleVariant; ForPrinter: OleVariant;
                              SelectedRows: OleVariant; FromDate: OleVariant; ToDate: OleVariant;
                              FileName: OleVariant; ScaleOption: PjCopyPictureScaleOption): WordBool; dispid 204;
    function  EditPaste: WordBool; dispid 206;
    function  EditPasteSpecial(Link: OleVariant; Type_: OleVariant; DisplayAsIcon: OleVariant): WordBool; dispid 232;
    function  EditClearFormats: WordBool; dispid 240;
    function  EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant;
                        Hyperlinks: OleVariant): WordBool; dispid 205;
    function  RowClear: WordBool; dispid 239;
    function  DDEPasteLink: WordBool; dispid 207;
    function  EditDelete: WordBool; dispid 208;
    function  ColumnDelete: WordBool; dispid 230;
    function  RowDelete: WordBool; dispid 231;
    function  ObjectVerb(Verb: OleVariant): WordBool; dispid 237;
    function  ObjectLinks: WordBool; dispid 238;
    function  ObjectChangeIcon: WordBool; dispid 235;
    function  ObjectConvert: WordBool; dispid 236;
    function  EditInsert: WordBool; dispid 209;
    function  ColumnInsert: WordBool; dispid 228;
    function  RowInsert: WordBool; dispid 229;
    function  LinkTasks: WordBool; dispid 210;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                            Lag: OleVariant; PredecessorProjectName: OleVariant;
                            SuccessorProjectName: OleVariant): WordBool; dispid 2052;
    function  UnlinkTasks: WordBool; dispid 211;
    function  ResourceAssignment(Resources: OleVariant; Operation: PjResAssignOperation;
                                 With_: OleVariant): WordBool; dispid 212;
    function  EditGoTo(ID: OleVariant; Date: OleVariant): WordBool; dispid 213;
    function  GotoNextOverAllocation: WordBool; dispid 214;
    function  InsertNotes: WordBool; dispid 2078;
    function  Find(Field: OleVariant; Test: OleVariant; Value: OleVariant; Next: OleVariant;
                   MatchCase: OleVariant): WordBool; dispid 215;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant; ReplaceAll: OleVariant; Next: OleVariant;
                      MatchCase: OleVariant): WordBool; dispid 241;
    function  SelectAll: WordBool; dispid 216;
    function  ObjectInsert: WordBool; dispid 221;
    function  SubscribeTo(Edition: OleVariant; Format: PjSubscribeFormat): WordBool; dispid 223;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                Field: OleVariant; Automatically: OleVariant; Action: OleVariant): WordBool; dispid 225;
    function  CreatePublisher(Edition: OleVariant; Contains: OleVariant): WordBool; dispid 222;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant; Field: OleVariant; OnSave: OleVariant;
                               Action: OleVariant): WordBool; dispid 226;
    function  EditionStopAll(Stop: OleVariant): WordBool; dispid 224;
    function  ClipboardShow: WordBool; dispid 707;
    function  ViewApply(Name: OleVariant; SinglePane: OleVariant; Toggle: OleVariant): WordBool; dispid 302;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant;
                             HighlightFilter: OleVariant; Table: OleVariant; Filter: OleVariant;
                             Group: OleVariant): WordBool; dispid 303;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                  TopView: OleVariant; BottomView: OleVariant;
                                  ShowInMenu: OleVariant): WordBool; dispid 304;
    function  TableApply(Name: OleVariant): WordBool; dispid 402;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant; RowHeight: OleVariant; ColumnPosition: OleVariant;
                        AlignTitle: OleVariant): WordBool; dispid 403;
    function  FilterApply(Name: OleVariant; Highlight: OleVariant; Value1: OleVariant;
                          Value2: OleVariant): WordBool; dispid 502;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant; Operation: OleVariant;
                         ShowInMenu: OleVariant; ShowSummaryTasks: OleVariant): WordBool; dispid 503;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant; Calendar: OleVariant;
                                 StatusDate: OleVariant; Priority: OleVariant): WordBool; dispid 601;
    function  ProjectStatistics(Project: OleVariant): WordBool; dispid 602;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant; StartWeekOn: OleVariant;
                              UseFYStartYear: OleVariant; DaysPerMonth: OleVariant): WordBool; dispid 649;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                          SetDefaultsHyperlink: OleVariant; InCellEditing: OleVariant): WordBool; dispid 641;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant;
                             DisplayRecentFiles: OleVariant; RecentFilesMaximum: OleVariant;
                             FontConversion: OleVariant): WordBool; dispid 642;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                              HonorConstraints: OleVariant; ShowEstimated: OleVariant;
                              NewTasksEstimated: OleVariant): WordBool; dispid 644;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant;
                          CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant;
                          DisplayWindowsInTaskbar: OleVariant; DisplayScreentips: OleVariant): WordBool; dispid 646;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant;
                               SetDefaultsMessaging: OleVariant; SetDefaultsWebServer: OleVariant): WordBool; dispid 2380;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant;
                                 CalcMultipleCriticalPaths: OleVariant; CriticalSlack: OleVariant;
                                 SetDefaults: OleVariant; CalcInsProjLikeSummTask: OleVariant): WordBool; dispid 606;
    function  CalculateAll: WordBool; dispid 607;
    function  OptionsPreferences: WordBool; dispid 603;
    function  ChangeWorkingTime: WordBool; dispid 625;
    function  BaseCalendars: WordBool; dispid 604;
    function  BaseCalendarCreate(const Name: WideString; FromName: OleVariant): WordBool; dispid 618;
    function  BaseCalendarRename(const FromName: WideString; const ToName: WideString): WordBool; dispid 624;
    function  BaseCalendarDelete(const Name: WideString): WordBool; dispid 619;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant; To4: OleVariant;
                                   From5: OleVariant; To5: OleVariant): WordBool; dispid 615;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant;
                                       To4: OleVariant; From5: OleVariant; To5: OleVariant): WordBool; dispid 620;
    function  BaseCalendarReset(const Name: WideString): WordBool; dispid 617;
    function  ResourceCalendarReset(const ProjectName: WideString; const ResourceName: WideString;
                                    BaseCalendar: OleVariant): WordBool; dispid 621;
    function  ResourceCalendars: WordBool; dispid 605;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant; PeriodBasis: OleVariant;
                              LevelIndividualAssignments: OleVariant; LevelingCanSplit: OleVariant): WordBool; dispid 608;
    function  LevelNow(All: OleVariant): WordBool; dispid 609;
    function  BaselineSave(All: OleVariant; Copy: OleVariant; Into: OleVariant): WordBool; dispid 610;
    function  UpdateProject(All: OleVariant; UpdateDate: OleVariant; Action: OleVariant): WordBool; dispid 611;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant; ActualStart: OleVariant;
                          ActualFinish: OleVariant; Notes: OleVariant): WordBool; dispid 2350;
    function  WindowNewWindow(Projects: OleVariant; View: OleVariant; AllProjects: OleVariant;
                              ShowDialog: OleVariant): WordBool; dispid 701;
    function  WindowArrangeAll: WordBool; dispid 702;
    function  WindowHide(Name: OleVariant): WordBool; dispid 703;
    function  WindowUnhide(Name: OleVariant): WordBool; dispid 704;
    function  WindowActivate(WindowName: OleVariant; DialogID: OleVariant; TopPane: OleVariant): WordBool; dispid 705;
    function  PageBreakSet: WordBool; dispid 934;
    function  PageBreakRemove: WordBool; dispid 935;
    function  PageBreaksRemoveAll: WordBool; dispid 936;
    function  ViewShowResourcesPredecessors: WordBool; dispid 915;
    function  ViewShowResourcesSuccessors: WordBool; dispid 916;
    function  ViewShowPredecessorsSuccessors: WordBool; dispid 917;
    function  ViewShowNotes: WordBool; dispid 919;
    function  ViewShowObjects: WordBool; dispid 920;
    function  ViewShowOverallocation: WordBool; dispid 925;
    function  ViewShowPercentAllocation: WordBool; dispid 926;
    function  ViewShowWork: WordBool; dispid 922;
    function  ViewShowCost: WordBool; dispid 921;
    function  ViewShowSchedule: WordBool; dispid 918;
    function  ViewShowPeakUnits: WordBool; dispid 923;
    function  ViewShowAvailability: WordBool; dispid 927;
    function  ViewShowRemainingAvailability: WordBool; dispid 929;
    function  ViewShowCumulativeWork: WordBool; dispid 924;
    function  ViewShowCumulativeCost: WordBool; dispid 928;
    function  PaneNext: WordBool; dispid 2002;
    function  PaneCreate: WordBool; dispid 2003;
    function  FormViewShow: WordBool; dispid 2074;
    function  PaneClose: WordBool; dispid 2004;
    function  WindowSplit: WordBool; dispid 2073;
    function  WindowNext(NoWrap: OleVariant): WordBool; dispid 2005;
    function  WindowPrev(NoWrap: OleVariant): WordBool; dispid 2006;
    function  DocClose: WordBool; dispid 2007;
    function  AppMaximize: WordBool; dispid 2008;
    function  AppMinimize: WordBool; dispid 2009;
    function  AppMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool; dispid 2010;
    function  AppRestore: WordBool; dispid 2011;
    function  AppSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool; dispid 2012;
    function  DocMaximize: WordBool; dispid 2013;
    function  DocMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool; dispid 2015;
    function  DocRestore: WordBool; dispid 2016;
    function  DocSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool; dispid 2017;
    function  OutlineOutdent(Levels: OleVariant): WordBool; dispid 2018;
    function  OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel;
                               ExpandInsertedProjects: OleVariant): WordBool; dispid 27;
    function  OutlineIndent(Levels: OleVariant): WordBool; dispid 2019;
    function  OutlineHideSubTasks: WordBool; dispid 2020;
    function  OutlineShowSubTasks: WordBool; dispid 2021;
    function  OutlineShowAllTasks: WordBool; dispid 2022;
    function  SelectBeginning(Extend: OleVariant): WordBool; dispid 2041;
    function  SelectEnd(Extend: OleVariant): WordBool; dispid 2042;
    function  SelectRowStart(Extend: OleVariant): WordBool; dispid 2043;
    function  SelectRowEnd(Extend: OleVariant): WordBool; dispid 2044;
    function  SelectCellLeft(NumCells: OleVariant; Extend: OleVariant): WordBool; dispid 2047;
    function  SelectCellRight(NumCells: OleVariant; Extend: OleVariant): WordBool; dispid 2048;
    function  SelectCellUp(NumCells: OleVariant; Extend: OleVariant): WordBool; dispid 2049;
    function  SelectCellDown(NumCells: OleVariant; Extend: OleVariant): WordBool; dispid 2050;
    function  SelectionExtend(Extend: OleVariant; Add: OleVariant): WordBool; dispid 2051;
    function  ColumnBestFit(Column: OleVariant): WordBool; dispid 2037;
    function  ColumnEdit(Column: OleVariant): WordBool; dispid 2038;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                          Width: OleVariant; Height: OleVariant; Extend: OleVariant; Add: OleVariant): WordBool; dispid 2062;
    function  SelectTimescaleRange(Row: Integer; const StartTime: WideString; Width: Smallint;
                                   Height: Integer): WordBool; dispid 954;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                              Add: OleVariant): WordBool; dispid 2063;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                                  Add: OleVariant): WordBool; dispid 2064;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant;
                        Extend: OleVariant; Add: OleVariant): WordBool; dispid 2045;
    function  SelectColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                           Add: OleVariant): WordBool; dispid 2046;
    function  SelectTaskColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                               Add: OleVariant): WordBool; dispid 2065;
    function  SelectResourceColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                                   Add: OleVariant): WordBool; dispid 2066;
    function  SelectTaskCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; dispid 2068;
    function  SelectResourceCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; dispid 2069;
    function  SelectCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; dispid 2070;
    function  SelectSheet: WordBool; dispid 2067;
    function  DDEInitiate(const App: WideString; const Topic: WideString): WordBool; dispid 1201;
    function  DDEExecute(const Command: WideString; TimeOut: OleVariant): WordBool; dispid 1202;
    function  DDETerminate: WordBool; dispid 1203;
    function  InformationDialog(Tab: OleVariant): WordBool; dispid 217;
    function  Form(Name: OleVariant): WordBool; dispid 1004;
    function  CustomForms: WordBool; dispid 1003;
    function  Tables: WordBool; dispid 401;
    function  Filters: WordBool; dispid 501;
    function  Macro(Name: OleVariant): WordBool; dispid 1001;
    function  FillDown(Down: OleVariant): WordBool; dispid 218;
    function  Views: WordBool; dispid 301;
    function  CalculateProject: WordBool; dispid 2034;
    function  LevelingClear(All: OleVariant): WordBool; dispid 612;
    function  SpellingCheck: WordBool; dispid 613;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant;
                              AlwaysSuggest: OleVariant; UseCustomDictionary: OleVariant): WordBool; dispid 614;
    function  WindowMoreWindows: WordBool; dispid 706;
    function  HelpContents: WordBool; dispid 804;
    function  HelpSearch: WordBool; dispid 808;
    function  HelpOnlineIndex: WordBool; dispid 809;
    function  HelpAbout: WordBool; dispid 806;
    function  HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant; Search: OleVariant;
                         SearchKey: OleVariant): WordBool; dispid 810;
    function  HelpCueCards(FileName: OleVariant; ContextNumber: OleVariant): WordBool; dispid 813;
    function  HelpTopics: WordBool; dispid 815;
    function  HelpAnswerWizard: WordBool; dispid 816;
    function  HelpMSProjectFundamentals: WordBool; dispid 817;
    function  AutoCorrect: WordBool; dispid 627;
    function  HelpQuickPreview: WordBool; dispid 811;
    function  HelpTechnicalSupport: WordBool; dispid 812;
    function  HelpCreateYourProject: WordBool; dispid 2374;
    function  HelpContextHelp: WordBool; dispid 814;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant;
                         Italic: OleVariant; Underline: OleVariant; Color: OleVariant): WordBool; dispid 901;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant; CellColor: OleVariant; Pattern: OleVariant;
                                 ShowInMenu: OleVariant): WordBool; dispid 962;
    function  DetailStylesAdd(Item: PjTimescaledData; Position: OleVariant): WordBool; dispid 963;
    function  DetailStylesRemove(Item: PjTimescaledData): WordBool; dispid 964;
    function  DetailStylesRemoveAll: WordBool; dispid 965;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                   Underline: OleVariant; Color: OleVariant; Reset: OleVariant): WordBool; dispid 937;
    function  Timescale: WordBool; dispid 942;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant; Separator: OleVariant;
                            MajorUseFY: OleVariant; MinorUseFY: OleVariant): WordBool; dispid 902;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant;
                   Renumber: OleVariant; Outline: OleVariant): WordBool; dispid 903;
    function  BarBoxStyles: WordBool; dispid 904;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant; InsideText: OleVariant;
                             Reset: OleVariant; ProjectName: OleVariant): WordBool; dispid 938;
    function  TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant; Color: OleVariant;
                                  Pattern: OleVariant): WordBool; dispid 914;
    function  BoxShowHideFields(Show: OleVariant): WordBool; dispid 905;
    function  Layout: WordBool; dispid 941;
    function  PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                         AdjustForPageBreaks: OleVariant; DisplayPageBreaks: OleVariant): WordBool; dispid 906;
    function  LayoutNow: WordBool; dispid 907;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant;
                          CriticalExternalTaskStyle: OleVariant;
                          CriticalExternalTaskColor: OleVariant;
                          NoncriticalExternalTaskStyle: OleVariant;
                          NoncriticalExternalTaskColor: OleVariant): WordBool; dispid 908;
    function  Gridlines: WordBool; dispid 912;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                            Interval: OleVariant; IntervalType: OleVariant;
                            IntervalColor: OleVariant): WordBool; dispid 2061;
    function  ViewShowSelectedTasks(Show: OleVariant): WordBool; dispid 932;
    function  PageBreaksShow(Show: OleVariant): WordBool; dispid 933;
    function  FindNext: WordBool; dispid 2032;
    function  FindPrevious: WordBool; dispid 2033;
    function  ZoomOut: WordBool; dispid 2035;
    function  ZoomIn: WordBool; dispid 2036;
    function  SetField(const Field: WideString; const Value: WideString; Create: OleVariant): WordBool; dispid 3;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant; Create: OleVariant; TaskID: OleVariant;
                           ProjectName: OleVariant): WordBool; dispid 4;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant; Create: OleVariant;
                               ResourceID: OleVariant; ProjectName: OleVariant): WordBool; dispid 5;
    function  SetActiveCell(const Value: WideString; Create: OleVariant): WordBool; dispid 6;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant; Field2: OleVariant; Value2: OleVariant; Test2: OleVariant): OleVariant; dispid 7;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant;
                               CheckField2: OleVariant; CheckValue2: OleVariant;
                               CheckTest2: OleVariant): WordBool; dispid 11;
    function  AppExecute(Window: OleVariant; Command: OleVariant; Minimize: OleVariant;
                         Activate: OleVariant): WordBool; dispid 8;
    function  AppLaunch(const Application: WideString; Document: OleVariant; Activate: OleVariant): WordBool; dispid 20;
    function  DDELinksUpdate: WordBool; dispid 2053;
    function  GotoTaskDates: WordBool; dispid 2054;
    function  GanttBarLinks(Display: PjGanttBarLink): WordBool; dispid 2071;
    function  GanttShowDrawings(Display: OleVariant): WordBool; dispid 2079;
    function  BarRounding(On_: OleVariant): WordBool; dispid 2080;
    function  GanttRollup(AlwaysRollup: OleVariant; HideWhenSummaryExpanded: OleVariant): WordBool; dispid 2119;
    function  GanttBarTextDateFormat(DateFormat: PjDateFormat): WordBool; dispid 2081;
    function  GanttBarSize(Size: PjBarSize): WordBool; dispid 2058;
    function  GanttBarStyleDelete(const Item: WideString): WordBool; dispid 2059;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant;
                                LeftText: OleVariant; RightText: OleVariant; InsideText: OleVariant): WordBool; dispid 2060;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                            Field3: OleVariant; Field4: OleVariant; Field5: OleVariant): WordBool; dispid 2056;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                          XPosition: OleVariant; YPosition: OleVariant): WordBool; dispid 2055;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant;
                                     ShowValues: OleVariant; ShowAvailabilityLine: OleVariant;
                                     PercentBarOverlap: OleVariant): WordBool; dispid 2057;
    function  ConsolidateProjects(Filenames: OleVariant; NewWindow: OleVariant;
                                  AttachToSources: OleVariant; PoolResources: OleVariant;
                                  HideSubtasks: OleVariant; openPool: PjPoolOpen;
                                  UserID: OleVariant; Password: OleVariant): WordBool; dispid 124;
    function  Organizer(Type_: PjOrganizer; Task: OleVariant): WordBool; dispid 126;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant;
                                Name: OleVariant; Task: OleVariant): WordBool; dispid 127;
    function  OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  Task: OleVariant): WordBool; dispid 128;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  NewName: OleVariant; Task: OleVariant): WordBool; dispid 130;
    function  RecurringTaskInsert: WordBool; dispid 2303;
    function  CalendarTimescale: WordBool; dispid 2345;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant;
                                BottomColor: OleVariant; TopPattern: OleVariant;
                                BottomPattern: OleVariant): WordBool; dispid 2340;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                   DayTitle: OleVariant; ShowPreview: OleVariant;
                                   DaysPerWeek: OleVariant): WordBool; dispid 2341;
    function  CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant;
                                      Color: OleVariant): WordBool; dispid 2343;
    function  CalendarDateShading(BaseCalendarName: OleVariant; ResourceUniqueID: OleVariant;
                                  ProjectIndex: OleVariant): WordBool; dispid 2344;
    function  ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant; EndDate: OleVariant): WordBool; dispid 2347;
    function  CalendarLayout(SortOrder: OleVariant; AutoLayout: OleVariant): WordBool; dispid 2346;
    function  CalendarBarStyles(BarRounding: OleVariant): WordBool; dispid 2326;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant; Field4: OleVariant; Field5: OleVariant;
                                    SplitPattern: OleVariant): WordBool; dispid 2339;
    function  CalendarBestFitWeekHeight: WordBool; dispid 2327;
    function  DrawingCreate(Type_: PjShape; Behind: OleVariant): WordBool; dispid 2306;
    function  DrawingMove(Forward: OleVariant; Full: OleVariant): WordBool; dispid 2311;
    function  DrawingReshape: WordBool; dispid 2314;
    function  DrawingProperties(SizePositionTab: OleVariant): WordBool; dispid 2307;
    function  DrawingCycleColor: WordBool; dispid 2315;
    function  FormatCopy: WordBool; dispid 2312;
    function  FormatPaste: WordBool; dispid 2313;
    function  FormatPainter: WordBool; dispid 2333;
    function  Toolbars(Action: OleVariant; ToolbarName: OleVariant; NewToolbarName: OleVariant): WordBool; dispid 2308;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant; FaceIndex: OleVariant;
                                Description: OleVariant; ToolTip: OleVariant): WordBool; dispid 2348;
    function  ToolbarDeleteTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool; dispid 2349;
    function  ToolbarsCustomize: WordBool; dispid 2309;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant; FaceIndex: OleVariant;
                                   Description: OleVariant; ToolTip: OleVariant): WordBool; dispid 2316;
    function  ToolbarCopyToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool; dispid 2318;
    function  ToolbarPasteToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool; dispid 2319;
    function  FontBold(Set_: OleVariant): WordBool; dispid 2320;
    function  FontItalic(Set_: OleVariant): WordBool; dispid 2321;
    function  FontUnderLine(Set_: OleVariant): WordBool; dispid 2324;
    function  ColumnAlignment(Align: PjAlignment): WordBool; dispid 2325;
    function  Reports: WordBool; dispid 2334;
    function  TipOfTheDay: WordBool; dispid 2335;
    function  FindFile: WordBool; dispid 2338;
    function  MailUpdateProject(const DataFile: WideString): WordBool; dispid 2372;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant;
                                  ShowDialog: OleVariant; InstallationMessage: OleVariant;
                                  UpdateFrom: OleVariant): WordBool; dispid 2351;
    function  WebInbox: WordBool; dispid 2377;
    function  GanttChartWizard: WordBool; dispid 2500;
    function  DrawingToolbarShow: WordBool; dispid 2352;
    function  ReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool; dispid 2383;
    function  SchedulePlusReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool; dispid 2353;
    function  CalendarTaskList(Date: OleVariant): WordBool; dispid 2354;
    function  OutlineSymbolsToggle(Show: OleVariant): WordBool; dispid 2082;
    function  ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant;
                                        ReadOnly: OleVariant): WordBool; dispid 2083;
    function  ResourceAddressBook: WordBool; dispid 2115;
    function  ResourceDetails(Name: OleVariant): WordBool; dispid 2116;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                       FieldID: OleVariant; Title: OleVariant;
                                       IncludeInTeamStatus: OleVariant; Editable: OleVariant): WordBool; dispid 2373;
    function  FileQuit(Save: PjSaveType): WordBool; dispid 2375;
    function  About: WordBool; dispid 2376;
    function  DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant;
                                     ShortLabels: OleVariant; DisplayDetailsColumn: OleVariant): WordBool; dispid 952;
    function  DetailStylesToggleItem(Item: PjTimescaledData): WordBool; dispid 960;
    function  AutoFilter: WordBool; dispid 22;
    function  ViewBar: WordBool; dispid 966;
    function  MacroShowVba: WordBool; dispid 2245;
    function  MacroShowCode: WordBool; dispid 2246;
    function  WebGoBack: WordBool; dispid 1300;
    function  WebGoForward: WordBool; dispid 1301;
    function  WebStopLoading: WordBool; dispid 1302;
    function  WebRefresh: WordBool; dispid 1303;
    function  WebOpenStartPage: WordBool; dispid 1304;
    function  WebOpenSearchPage: WordBool; dispid 1305;
    function  WebHideToolbars(Hide: OleVariant): WordBool; dispid 1306;
    function  FollowHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant;
                              NewWindow: OleVariant): WordBool; dispid 1307;
    function  EditPasteAsHyperlink: WordBool; dispid 1308;
    function  InsertHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                              ScreenTip: OleVariant): WordBool; dispid 1309;
    function  EditHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                            ScreenTip: OleVariant): WordBool; dispid 1310;
    function  WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant;
                               NewWindow: OleVariant): WordBool; dispid 1311;
    function  WebCopyHyperlink: WordBool; dispid 1313;
    function  WebAddToFavorites(CurrentLink: OleVariant): WordBool; dispid 1314;
    function  EditClearHyperlink: WordBool; dispid 1316;
    function  WebSetStartPage(Address: OleVariant): WordBool; dispid 1317;
    function  WebSetSearchPage(Address: OleVariant): WordBool; dispid 1318;
    function  WebOpenFavorites: WordBool; dispid 1320;
    function  WebToolbar(Show: OleVariant): WordBool; dispid 1321;
    function  SplitTask(Lock: OleVariant): WordBool; dispid 1011;
    function  CustomFieldRename(FieldID: PjCustomField; const NewName: WideString;
                                Phonetic: OleVariant): WordBool; dispid 2378;
    function  CustomizeField: WordBool; dispid 2379;
    function  GanttShowBarSplits(Display: OleVariant): WordBool; dispid 2381;
    function  CalendarShowBarSplits(Display: OleVariant): WordBool; dispid 2382;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant;
                      TemplateFile: OleVariant; IncludeImage: OleVariant; ImageFile: OleVariant): WordBool; dispid 243;
    function  FillAcross(Right: OleVariant): WordBool; dispid 244;
    function  LinksBetweenProjects(AcceptAll: OleVariant): WordBool; dispid 245;
    function  ToggleAssignments: WordBool; dispid 246;
    function  ProgressLines: WordBool; dispid 247;
    function  ResourceSharingPoolUpdate(allSharers: OleVariant): WordBool; dispid 248;
    function  ResourceSharingPoolRefresh: WordBool; dispid 249;
    function  WebHelp(Type_: OleVariant): WordBool; dispid 251;
    function  AddProgressLine: WordBool; dispid 252;
    function  CustomizeIMEMode(FieldID: PjField; IMEMode: PjIMEMode): WordBool; dispid 254;
    function  DeleteFromDatabase(Name: OleVariant; UserID: OleVariant;
                                 DatabasePassWord: OleVariant; FormatID: OleVariant): WordBool; dispid 135;
    function  WBSCodeRenumber(All: OleVariant): WordBool; dispid 629;
    function  WBSCodeMaskEdit(CodePrefix: OleVariant; Level: OleVariant; Sequence: PjWBSSequence;
                              Length: OleVariant; Separator: OleVariant; CodeGenerate: OleVariant;
                              VerifyUniqueness: OleVariant): WordBool; dispid 630;
    function  CustomOutlineCodeEdit(FieldID: PjCustomField; Level: OleVariant;
                                    Sequence: PjCustomOutlineCodeSequence; Length: OleVariant;
                                    Separator: OleVariant; OnlyLookUpTableCodes: OleVariant;
                                    OnlyCompleteCodes: OleVariant): WordBool; dispid 631;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant;
                          AutomaticSavePrompt: OleVariant; SetDefaultsDatabase: OleVariant): WordBool; dispid 650;
    function  OfficeOnTheWeb: WordBool; dispid 1322;
    function  FixMe: WordBool; dispid 1323;
    function  ViewShowWorkAvailability: WordBool; dispid 930;
    function  ViewShowUnitAvailability: WordBool; dispid 931;
    function  BaselineClear(All: OleVariant; From: OleVariant): WordBool; dispid 2384;
    function  Groups: WordBool; dispid 511;
    function  GroupApply(Name: OleVariant): WordBool; dispid 512;
    function  GroupBy: WordBool; dispid 513;
    function  LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant; Code: OleVariant;
                             Description: OleVariant): WordBool; dispid 635;
    function  BoxStylesEdit(Style: PjBoxStyle; DataTemplate: OleVariant;
                            HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                            BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                            BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern): WordBool; dispid 2387;
    function  BoxFormat(ProjectName: OleVariant; TaskID: OleVariant; DataTemplate: OleVariant;
                        HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                        BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                        BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern;
                        Reset: OleVariant): WordBool; dispid 2388;
    function  BarBoxFormat: WordBool; dispid 2389;
    function  CreateWebAccount(ServerURL: OleVariant; Name: OleVariant;
                               AuthenticationType: PjAuthentication; AccountType: PjAccountType;
                               ShowDialog: OleVariant): WordBool; dispid 2390;
    function  BoxDataTemplate(const Name: WideString; Action: PjDataTemplate; NewName: OleVariant;
                              Overwrite: OleVariant): WordBool; dispid 2391;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant; CellColumns: OleVariant;
                            CellWidth: OleVariant; MergeCells: OleVariant): WordBool; dispid 2392;
    function  BoxCellEdit(const Name: WideString; Cell: PjCell; FieldName: PjField;
                          Font: OleVariant; FontSize: OleVariant; FontColor: PjColor;
                          Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                          HorizontalAlignment: PjAlignment; VerticalAlignment: PjVerticalAlignment;
                          TextLineLimit: OleVariant; ShowLabel: OleVariant; Label_: OleVariant;
                          DateFormat: PjDateFormat): WordBool; dispid 2393;
    function  ResourceWindowsAccount(Name: OleVariant; ShowDialog: OleVariant): WordBool; dispid 2394;
    function  SetRowHeight(Unit_: OleVariant; Rows: OleVariant; UseUniqueID: OleVariant): WordBool; dispid 2118;
    function  ComAddInsDialog: WordBool; dispid 2395;
    function  MacroSecurity: WordBool; dispid 2396;
    function  LayoutSelectionNow: WordBool; dispid 2399;
    function  BoxAlign(Alignment: PjAlign): WordBool; dispid 29;
    function  ConvertHangulToHanja: WordBool; dispid 28;
    function  UpdateProjectToWeb(ServerURL: OleVariant): WordBool; dispid 2247;
    function  CustomFieldProperties(FieldID: PjCustomField; Attribute: PjCustomFieldAttribute;
                                    SummaryCalc: PjSummaryCalc; GraphicalIndicators: OleVariant): WordBool; dispid 35;
    function  CustomFieldSetFormula(FieldID: PjCustomField; Formula: OleVariant): WordBool; dispid 36;
    function  CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                      const Value: WideString; IndicatorID: PjIndicator;
                                      CriteriaList: PjCriteriaList; Index: OleVariant): WordBool; dispid 38;
    function  CustomFieldIndicators(FieldID: PjCustomField; SummaryInheritsNonsummary: OleVariant;
                                    ProjectInheritsSummary: OleVariant; ShowToolTips: OleVariant): WordBool; dispid 37;
    function  CustomFieldIndicatorDelete(FieldID: PjCustomField; Index: Smallint;
                                         CriteriaList: PjCriteriaList): WordBool; dispid 39;
    function  CustomFieldValueList(FieldID: PjCustomField; ListDefault: OleVariant;
                                   DefaultValue: OleVariant; RestrictToList: OleVariant;
                                   AppendNew: OleVariant; PromptOnNew: OleVariant;
                                   DisplayOrder: PjListOrder): WordBool; dispid 40;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant; Phonetic: OleVariant;
                                      Index: OleVariant; FieldDefault: OleVariant): WordBool; dispid 41;
    function  CustomFieldValueListDelete(FieldID: PjCustomField; Index: Smallint): WordBool; dispid 42;
    function  BoxLayout(LayoutMode: PjLayoutMode; LayoutScheme: PjLayoutScheme;
                        SummaryPrecedence: OleVariant; RowAlignment: PjVerticalAlignment;
                        ColumnAlignment: PjAlignment; RowSpacing: OleVariant;
                        ColumnSpacing: OleVariant; RowHeight: PjRowColSize;
                        ColumnWidth: PjRowColSize; AdjustForPageBreaks: OleVariant;
                        ShowSummaryTasks: OleVariant; ViewBackgroundColor: PjColor;
                        ViewBackgroundPattern: PjBackgroundPattern; ShowProgressMarks: OleVariant;
                        ShowPageBreaks: OleVariant; ShowIDOnly: OleVariant): WordBool; dispid 43;
    function  BoxLinks(Style: PjLinkStyle; ShowArrows: OleVariant; ShowLabels: OleVariant;
                       ColorMode: PjLinkColorMode; CriticalColor: PjColor; NoncriticalColor: PjColor): WordBool; dispid 44;
    function  SummaryTasksShow(Show: OleVariant): WordBool; dispid 45;
    function  BoxProgressMarksShow(Show: OleVariant): WordBool; dispid 46;
    function  BoxLinkLabelsShow(Show: OleVariant): WordBool; dispid 47;
    function  BoxLinkStyleToggle(StraightLinks: OleVariant): WordBool; dispid 48;
    function  LayoutRelatedNow: WordBool; dispid 30;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                     YPosition: OleVariant; ProjectName: OleVariant): WordBool; dispid 49;
    function  SetSplitBar(ShowColumns: OleVariant): WordBool; dispid 31;
  end;

// *********************************************************************//
// DispIntf:  _MSProject
// Flags:     (4096) Dispatchable
// GUID:      {00020AFF-0000-0000-C000-000000000046}
// *********************************************************************//
  _MSProject = dispinterface
    ['{00020AFF-0000-0000-C000-000000000046}']
    property Application: Application dispid 65524;
    property Parent: Application dispid 65523;
    property Projects: Projects dispid 5000;
    property ActiveSelection: Selection dispid 5032;
    property ActiveCell: Cell dispid 5033;
    property ActiveProject: Project dispid 5002;
    property ActiveWindow: Window dispid 5003;
    property SupportsMultipleDocuments: WordBool dispid 5004;
    property SupportsMultipleWindows: WordBool dispid 5005;
    property Visible: WordBool dispid 5006;
    property PathSeparator: WideString dispid 5007;
    property Caption: WideString dispid 5010;
    property Name: WideString dispid 0;
    property Path: WideString dispid 5015;
    property Version: WideString dispid 5020;
    property WindowState: PjWindowState dispid 5022;
    property Left: Integer dispid 5012;
    property Top: Integer dispid 5016;
    property Width: Integer dispid 5021;
    property Height: Integer dispid 5011;
    property DateOrder: PjDateOrder dispid 5103;
    property DateSeparator: WideString dispid 5104;
    property ThousandSeparator: WideString dispid 5105;
    property DecimalSeparator: WideString dispid 5106;
    property ListSeparator: WideString dispid 5107;
    property TimeSeparator: WideString dispid 5108;
    property TwelveHourTimeFormat: WordBool dispid 5109;
    property AMText: WideString dispid 5110;
    property PMText: WideString dispid 5111;
    property DefaultView: WideString dispid 5112;
    property DisplayStatusBar: WordBool dispid 5113;
    property DisplayAlerts: WordBool dispid 5157;
    property DisplayEntryBar: WordBool dispid 5114;
    property DisplayScrollBars: WordBool dispid 5115;
    property DisplayWindowsInTaskbar: WordBool dispid 5172;
    property Calculation: PjCalculation dispid 5121;
    property AutoLevel: WordBool dispid 5127;
    property AutoClearLeveling: WordBool dispid 5128;
    property LevelWithinSlack: WordBool dispid 5129;
    property LevelOrder: PjLevelOrder dispid 5130;
    property LevelPeriodBasis: PjLevelPeriodBasis dispid 5167;
    property LevelIndividualAssignments: WordBool dispid 5168;
    property LevelingCanSplit: WordBool dispid 5169;
    property MoveAfterReturn: WordBool dispid 5131;
    property DisplayScheduleMessages: WordBool dispid 5133;
    property StartWeekOn: PjWeekday dispid 5135;
    property StartYearIn: PjMonth dispid 5137;
    property CellDragAndDrop: WordBool dispid 5139;
    property UserName: WideString dispid 5150;
    property DisplayNotesIndicator: WordBool dispid 5153;
    property AskToUpdateLinks: WordBool dispid 5155;
    property DisplayPlanningWizard: WordBool dispid 5142;
    property DisplayWizardUsage: WordBool dispid 5144;
    property DisplayWizardErrors: WordBool dispid 5145;
    property DisplayWizardScheduling: WordBool dispid 5143;
    property ShowTipOfDay: WordBool dispid 5147;
    property ShowToolTips: WordBool dispid 5148;
    property ShowWelcome: WordBool dispid 5156;
    property LoadLastFile: WordBool dispid 5136;
    property PromptForSummaryInfo: WordBool dispid 5149;
    property DisplayOLEIndicator: WordBool dispid 5154;
    property DefaultDateFormat: PjDateFormat dispid 5125;
    property DayLeadingZero: WordBool dispid 5158;
    property MonthLeadingZero: WordBool dispid 5159;
    property TimeLeadingZero: WordBool dispid 5160;
    property CopyResourceUsageHeader: WordBool dispid 5138;
    property RecentFilesMaximum: Integer dispid 5162;
    property DisplayRecentFiles: WordBool dispid 5161;
    property MacroVirusProtection: WordBool dispid 5163;
    property ShowAssignmentUnitsAs: PjAssignmentUnits dispid 5164;
    property AutomaticallyFillPhoneticFields: WordBool dispid 5165;
    property DefaultAutoFilter: WordBool dispid 5166;
    property ShowEstimatedDuration: WordBool dispid 5170;
    property NewTasksEstimated: WordBool dispid 5171;
    property Assistant: Assistant dispid 5042;
    property DisplayViewBar: WordBool dispid 5047;
    property VBE: VBE dispid 5043;
    property EnableCancelKey: PjEnableCancelKey dispid 5044;
    property UserControl: WordBool dispid 5046;
    property UsableWidth: Double dispid 5018;
    property UsableHeight: Double dispid 5017;
    property StatusBar: OleVariant dispid 5050;
    property FileSearch: FileSearch dispid 5051;
    property Windows: Windows readonly dispid 5001;
    property CommandBars: CommandBars readonly dispid 5041;
    property AnswerWizard: AnswerWizard readonly dispid 5056;
    procedure Quit(SaveChanges: PjSaveType); dispid 5008;
    property OperatingSystem: WideString readonly dispid 5030;
    function  DateAdd(StartDate: OleVariant; Duration: OleVariant; Calendar: OleVariant): OleVariant; dispid 5023;
    function  DateSubtract(FinishDate: OleVariant; Duration: OleVariant; Calendar: OleVariant): OleVariant; dispid 5024;
    function  DateDifference(StartDate: OleVariant; FinishDate: OleVariant; Calendar: OleVariant): OleVariant; dispid 5025;
    function  DurationFormat(Duration: OleVariant; Units: OleVariant): WideString; dispid 5026;
    function  DurationValue(const Duration: WideString): OleVariant; dispid 5027;
    function  DateFormat(Date: OleVariant; Format: OleVariant): OleVariant; dispid 5031;
    procedure MailLogon(Name: OleVariant; Password: OleVariant; DownloadNewMail: OleVariant); dispid 5034;
    procedure MailLogoff; dispid 5035;
    function  MailSession: WideString; dispid 5036;
    function  MailSystem: PjMailSystem; dispid 5037;
    function  TimescaledData(TaskID: Integer; ResourceID: Integer; StartDate: OleVariant;
                             EndDate: OleVariant; Type_: PjTimescaledData;
                             TimeScaleUnit: PjTimescaleUnit; Count: OleVariant): OleVariant; dispid 4900;
    function  CustomFieldGetName(FieldID: PjCustomField): WideString; dispid 5039;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                  Arg28: OleVariant; Arg29: OleVariant; Arg30: OleVariant); dispid 5049;
    procedure ActivateMicrosoftApp(Index: PjMSApplication); dispid 5052;
    property FileFormatID[const Name: WideString; UserID: OleVariant; DatabasePassWord: OleVariant]: WideString readonly dispid 5053;
    property FileBuildID[const Name: WideString; UserID: OleVariant; DatabasePassWord: OleVariant]: WideString readonly dispid 5054;
    property COMAddIns: COMAddIns readonly dispid 5055;
    function  BoxGetXPosition(TaskID: Integer; ProjectName: OleVariant): Integer; dispid 5057;
    function  BoxGetYPosition(TaskID: Integer; ProjectName: OleVariant): Integer; dispid 5058;
    function  CustomFieldGetFormula(FieldID: PjCustomField): WideString; dispid 5059;
    function  CustomFieldValueListGetItem(FieldID: PjCustomField; Item: PjValueListItem;
                                          Index: Integer): WideString; dispid 5060;
    function  Message(const Message: WideString; Type_: PjMessageType; YesText: OleVariant;
                      NoText: OleVariant): WordBool; dispid 2;
    function  Alerts(Show: OleVariant): WordBool; dispid 10;
    function  FileNew(SummaryInfo: OleVariant; Template: OleVariant; FileNewDialog: OleVariant): WordBool; dispid 101;
    function  FileProperties: WordBool; dispid 626;
    function  FileOpen(Name: OleVariant; ReadOnly: OleVariant; Merge: OleVariant;
                       TaskInformation: OleVariant; Table: OleVariant; Sheet: OleVariant;
                       NoAuto: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                       FormatID: OleVariant; Map: OleVariant; openPool: PjPoolOpen;
                       Password: OleVariant; WriteResPassword: OleVariant;
                       IgnoreReadOnlyRecommended: OleVariant): WordBool; dispid 102;
    function  Zoom: WordBool; dispid 306;
    function  ZoomTimescale(Duration: OleVariant; Entire: OleVariant; Selection: OleVariant;
                            Reset: OleVariant): WordBool; dispid 307;
    function  BoxZoom(Percent: OleVariant; Entire: OleVariant): WordBool; dispid 308;
    function  FileClose(Save: PjSaveType; NoAuto: OleVariant): WordBool; dispid 103;
    function  FileCloseAll(Save: PjSaveType): WordBool; dispid 104;
    function  ResourceSharing(Share: OleVariant; Name: OleVariant; Pool: OleVariant): WordBool; dispid 105;
    function  FileSave: WordBool; dispid 106;
    function  FileSaveAs(Name: OleVariant; Format: PjFileFormat; Backup: OleVariant;
                         ReadOnly: OleVariant; TaskInformation: OleVariant; Filtered: OleVariant;
                         Table: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                         FormatID: OleVariant; Map: OleVariant; Password: OleVariant;
                         WriteResPassword: OleVariant; ClearBaseline: OleVariant;
                         ClearActuals: OleVariant; ClearResourceRates: OleVariant;
                         ClearFixedCosts: OleVariant): WordBool; dispid 107;
    function  FileSaveWorkspace(Name: OleVariant): WordBool; dispid 108;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant; OnePageWide: OleVariant; Preview: OleVariant;
                        Color: OleVariant): WordBool; dispid 109;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant; ToDate: OleVariant; Preview: OleVariant;
                          Color: OleVariant): WordBool; dispid 110;
    function  FilePrintPreview: WordBool; dispid 111;
    function  ReportPrintPreview(Name: OleVariant): WordBool; dispid 112;
    function  FilePrintSetup(Printer: OleVariant): WordBool; dispid 113;
    function  FilePageSetup(Name: OleVariant): WordBool; dispid 116;
    function  FilePageSetupPage(Name: OleVariant; Portrait: OleVariant; PercentScale: OleVariant;
                                PagesTall: OleVariant; PagesWide: OleVariant;
                                PaperSize: PjPaperSize; FirstPageNumber: OleVariant): WordBool; dispid 2355;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                   Left: OleVariant; Right: OleVariant; Borders: OleVariant): WordBool; dispid 2356;
    function  FilePageSetupHeader(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool; dispid 2357;
    function  FilePageSetupFooter(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool; dispid 2358;
    function  FilePageSetupLegend(Name: OleVariant; TextWidth: OleVariant; LegendOn: OleVariant;
                                  Alignment: PjAlignment; Text: OleVariant;
                                  LabelFontName: OleVariant; LabelFontSize: OleVariant;
                                  LabelFontBold: OleVariant; LabelFontItalic: OleVariant;
                                  LabelFontUnderline: OleVariant; LabelFontColor: PjColor): WordBool; dispid 2359;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                PrintBlankPages: OleVariant; BestPageFitTimescale: OleVariant): WordBool; dispid 2360;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                    AdditionalTasks: OleVariant; GroupAdditionalTasks: OleVariant;
                                    PrintNotes: OleVariant): WordBool; dispid 2361;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                                        Underline: OleVariant; Color: OleVariant): WordBool; dispid 2371;
    function  MailOpen(Any: OleVariant): WordBool; dispid 119;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant;
                       SaveCopy: OleVariant; AddRecipient: OleVariant): WordBool; dispid 120;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant; IncludePicture: OleVariant;
                                   Body: OleVariant; Subject: OleVariant): WordBool; dispid 129;
    function  MailPostDocument: WordBool; dispid 131;
    function  ODBCManageDataSources: WordBool; dispid 132;
    function  ODBCCreateDataSource: WordBool; dispid 133;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                              TrackStatus: OleVariant; Clear: OleVariant; SendNow: OleVariant): WordBool; dispid 125;
    function  FileLoadLast(Number: OleVariant): WordBool; dispid 117;
    function  FileExit(Save: PjSaveType): WordBool; dispid 114;
    function  MenuBars: WordBool; dispid 2072;
    function  MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant;
                          NewName: OleVariant): WordBool; dispid 2075;
    function  MenuBarApply(const Name: WideString; Default: OleVariant; NoFiles: OleVariant): WordBool; dispid 2076;
    function  EditCut: WordBool; dispid 202;
    function  EditCopy: WordBool; dispid 203;
    function  EditCopyPicture(Object_: OleVariant; ForPrinter: OleVariant;
                              SelectedRows: OleVariant; FromDate: OleVariant; ToDate: OleVariant;
                              FileName: OleVariant; ScaleOption: PjCopyPictureScaleOption): WordBool; dispid 204;
    function  EditPaste: WordBool; dispid 206;
    function  EditPasteSpecial(Link: OleVariant; Type_: OleVariant; DisplayAsIcon: OleVariant): WordBool; dispid 232;
    function  EditClearFormats: WordBool; dispid 240;
    function  EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant;
                        Hyperlinks: OleVariant): WordBool; dispid 205;
    function  RowClear: WordBool; dispid 239;
    function  DDEPasteLink: WordBool; dispid 207;
    function  EditDelete: WordBool; dispid 208;
    function  ColumnDelete: WordBool; dispid 230;
    function  RowDelete: WordBool; dispid 231;
    function  ObjectVerb(Verb: OleVariant): WordBool; dispid 237;
    function  ObjectLinks: WordBool; dispid 238;
    function  ObjectChangeIcon: WordBool; dispid 235;
    function  ObjectConvert: WordBool; dispid 236;
    function  EditInsert: WordBool; dispid 209;
    function  ColumnInsert: WordBool; dispid 228;
    function  RowInsert: WordBool; dispid 229;
    function  LinkTasks: WordBool; dispid 210;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                            Lag: OleVariant; PredecessorProjectName: OleVariant;
                            SuccessorProjectName: OleVariant): WordBool; dispid 2052;
    function  UnlinkTasks: WordBool; dispid 211;
    function  ResourceAssignment(Resources: OleVariant; Operation: PjResAssignOperation;
                                 With_: OleVariant): WordBool; dispid 212;
    function  EditGoTo(ID: OleVariant; Date: OleVariant): WordBool; dispid 213;
    function  GotoNextOverAllocation: WordBool; dispid 214;
    function  InsertNotes: WordBool; dispid 2078;
    function  Find(Field: OleVariant; Test: OleVariant; Value: OleVariant; Next: OleVariant;
                   MatchCase: OleVariant): WordBool; dispid 215;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant; ReplaceAll: OleVariant; Next: OleVariant;
                      MatchCase: OleVariant): WordBool; dispid 241;
    function  SelectAll: WordBool; dispid 216;
    function  ObjectInsert: WordBool; dispid 221;
    function  SubscribeTo(Edition: OleVariant; Format: PjSubscribeFormat): WordBool; dispid 223;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                Field: OleVariant; Automatically: OleVariant; Action: OleVariant): WordBool; dispid 225;
    function  CreatePublisher(Edition: OleVariant; Contains: OleVariant): WordBool; dispid 222;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant; Field: OleVariant; OnSave: OleVariant;
                               Action: OleVariant): WordBool; dispid 226;
    function  EditionStopAll(Stop: OleVariant): WordBool; dispid 224;
    function  ClipboardShow: WordBool; dispid 707;
    function  ViewApply(Name: OleVariant; SinglePane: OleVariant; Toggle: OleVariant): WordBool; dispid 302;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant;
                             HighlightFilter: OleVariant; Table: OleVariant; Filter: OleVariant;
                             Group: OleVariant): WordBool; dispid 303;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                  TopView: OleVariant; BottomView: OleVariant;
                                  ShowInMenu: OleVariant): WordBool; dispid 304;
    function  TableApply(Name: OleVariant): WordBool; dispid 402;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant; RowHeight: OleVariant; ColumnPosition: OleVariant;
                        AlignTitle: OleVariant): WordBool; dispid 403;
    function  FilterApply(Name: OleVariant; Highlight: OleVariant; Value1: OleVariant;
                          Value2: OleVariant): WordBool; dispid 502;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant; Operation: OleVariant;
                         ShowInMenu: OleVariant; ShowSummaryTasks: OleVariant): WordBool; dispid 503;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant; Calendar: OleVariant;
                                 StatusDate: OleVariant; Priority: OleVariant): WordBool; dispid 601;
    function  ProjectStatistics(Project: OleVariant): WordBool; dispid 602;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant; StartWeekOn: OleVariant;
                              UseFYStartYear: OleVariant; DaysPerMonth: OleVariant): WordBool; dispid 649;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                          SetDefaultsHyperlink: OleVariant; InCellEditing: OleVariant): WordBool; dispid 641;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant;
                             DisplayRecentFiles: OleVariant; RecentFilesMaximum: OleVariant;
                             FontConversion: OleVariant): WordBool; dispid 642;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                              HonorConstraints: OleVariant; ShowEstimated: OleVariant;
                              NewTasksEstimated: OleVariant): WordBool; dispid 644;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant;
                          CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant;
                          DisplayWindowsInTaskbar: OleVariant; DisplayScreentips: OleVariant): WordBool; dispid 646;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant;
                               SetDefaultsMessaging: OleVariant; SetDefaultsWebServer: OleVariant): WordBool; dispid 2380;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant;
                                 CalcMultipleCriticalPaths: OleVariant; CriticalSlack: OleVariant;
                                 SetDefaults: OleVariant; CalcInsProjLikeSummTask: OleVariant): WordBool; dispid 606;
    function  CalculateAll: WordBool; dispid 607;
    function  OptionsPreferences: WordBool; dispid 603;
    function  ChangeWorkingTime: WordBool; dispid 625;
    function  BaseCalendars: WordBool; dispid 604;
    function  BaseCalendarCreate(const Name: WideString; FromName: OleVariant): WordBool; dispid 618;
    function  BaseCalendarRename(const FromName: WideString; const ToName: WideString): WordBool; dispid 624;
    function  BaseCalendarDelete(const Name: WideString): WordBool; dispid 619;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant; To4: OleVariant;
                                   From5: OleVariant; To5: OleVariant): WordBool; dispid 615;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant;
                                       To4: OleVariant; From5: OleVariant; To5: OleVariant): WordBool; dispid 620;
    function  BaseCalendarReset(const Name: WideString): WordBool; dispid 617;
    function  ResourceCalendarReset(const ProjectName: WideString; const ResourceName: WideString;
                                    BaseCalendar: OleVariant): WordBool; dispid 621;
    function  ResourceCalendars: WordBool; dispid 605;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant; PeriodBasis: OleVariant;
                              LevelIndividualAssignments: OleVariant; LevelingCanSplit: OleVariant): WordBool; dispid 608;
    function  LevelNow(All: OleVariant): WordBool; dispid 609;
    function  BaselineSave(All: OleVariant; Copy: OleVariant; Into: OleVariant): WordBool; dispid 610;
    function  UpdateProject(All: OleVariant; UpdateDate: OleVariant; Action: OleVariant): WordBool; dispid 611;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant; ActualStart: OleVariant;
                          ActualFinish: OleVariant; Notes: OleVariant): WordBool; dispid 2350;
    function  WindowNewWindow(Projects: OleVariant; View: OleVariant; AllProjects: OleVariant;
                              ShowDialog: OleVariant): WordBool; dispid 701;
    function  WindowArrangeAll: WordBool; dispid 702;
    function  WindowHide(Name: OleVariant): WordBool; dispid 703;
    function  WindowUnhide(Name: OleVariant): WordBool; dispid 704;
    function  WindowActivate(WindowName: OleVariant; DialogID: OleVariant; TopPane: OleVariant): WordBool; dispid 705;
    function  PageBreakSet: WordBool; dispid 934;
    function  PageBreakRemove: WordBool; dispid 935;
    function  PageBreaksRemoveAll: WordBool; dispid 936;
    function  ViewShowResourcesPredecessors: WordBool; dispid 915;
    function  ViewShowResourcesSuccessors: WordBool; dispid 916;
    function  ViewShowPredecessorsSuccessors: WordBool; dispid 917;
    function  ViewShowNotes: WordBool; dispid 919;
    function  ViewShowObjects: WordBool; dispid 920;
    function  ViewShowOverallocation: WordBool; dispid 925;
    function  ViewShowPercentAllocation: WordBool; dispid 926;
    function  ViewShowWork: WordBool; dispid 922;
    function  ViewShowCost: WordBool; dispid 921;
    function  ViewShowSchedule: WordBool; dispid 918;
    function  ViewShowPeakUnits: WordBool; dispid 923;
    function  ViewShowAvailability: WordBool; dispid 927;
    function  ViewShowRemainingAvailability: WordBool; dispid 929;
    function  ViewShowCumulativeWork: WordBool; dispid 924;
    function  ViewShowCumulativeCost: WordBool; dispid 928;
    function  PaneNext: WordBool; dispid 2002;
    function  PaneCreate: WordBool; dispid 2003;
    function  FormViewShow: WordBool; dispid 2074;
    function  PaneClose: WordBool; dispid 2004;
    function  WindowSplit: WordBool; dispid 2073;
    function  WindowNext(NoWrap: OleVariant): WordBool; dispid 2005;
    function  WindowPrev(NoWrap: OleVariant): WordBool; dispid 2006;
    function  DocClose: WordBool; dispid 2007;
    function  AppMaximize: WordBool; dispid 2008;
    function  AppMinimize: WordBool; dispid 2009;
    function  AppMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool; dispid 2010;
    function  AppRestore: WordBool; dispid 2011;
    function  AppSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool; dispid 2012;
    function  DocMaximize: WordBool; dispid 2013;
    function  DocMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool; dispid 2015;
    function  DocRestore: WordBool; dispid 2016;
    function  DocSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool; dispid 2017;
    function  OutlineOutdent(Levels: OleVariant): WordBool; dispid 2018;
    function  OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel;
                               ExpandInsertedProjects: OleVariant): WordBool; dispid 27;
    function  OutlineIndent(Levels: OleVariant): WordBool; dispid 2019;
    function  OutlineHideSubTasks: WordBool; dispid 2020;
    function  OutlineShowSubTasks: WordBool; dispid 2021;
    function  OutlineShowAllTasks: WordBool; dispid 2022;
    function  SelectBeginning(Extend: OleVariant): WordBool; dispid 2041;
    function  SelectEnd(Extend: OleVariant): WordBool; dispid 2042;
    function  SelectRowStart(Extend: OleVariant): WordBool; dispid 2043;
    function  SelectRowEnd(Extend: OleVariant): WordBool; dispid 2044;
    function  SelectCellLeft(NumCells: OleVariant; Extend: OleVariant): WordBool; dispid 2047;
    function  SelectCellRight(NumCells: OleVariant; Extend: OleVariant): WordBool; dispid 2048;
    function  SelectCellUp(NumCells: OleVariant; Extend: OleVariant): WordBool; dispid 2049;
    function  SelectCellDown(NumCells: OleVariant; Extend: OleVariant): WordBool; dispid 2050;
    function  SelectionExtend(Extend: OleVariant; Add: OleVariant): WordBool; dispid 2051;
    function  ColumnBestFit(Column: OleVariant): WordBool; dispid 2037;
    function  ColumnEdit(Column: OleVariant): WordBool; dispid 2038;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                          Width: OleVariant; Height: OleVariant; Extend: OleVariant; Add: OleVariant): WordBool; dispid 2062;
    function  SelectTimescaleRange(Row: Integer; const StartTime: WideString; Width: Smallint;
                                   Height: Integer): WordBool; dispid 954;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                              Add: OleVariant): WordBool; dispid 2063;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                                  Add: OleVariant): WordBool; dispid 2064;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant;
                        Extend: OleVariant; Add: OleVariant): WordBool; dispid 2045;
    function  SelectColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                           Add: OleVariant): WordBool; dispid 2046;
    function  SelectTaskColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                               Add: OleVariant): WordBool; dispid 2065;
    function  SelectResourceColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                                   Add: OleVariant): WordBool; dispid 2066;
    function  SelectTaskCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; dispid 2068;
    function  SelectResourceCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; dispid 2069;
    function  SelectCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; dispid 2070;
    function  SelectSheet: WordBool; dispid 2067;
    function  DDEInitiate(const App: WideString; const Topic: WideString): WordBool; dispid 1201;
    function  DDEExecute(const Command: WideString; TimeOut: OleVariant): WordBool; dispid 1202;
    function  DDETerminate: WordBool; dispid 1203;
    function  InformationDialog(Tab: OleVariant): WordBool; dispid 217;
    function  Form(Name: OleVariant): WordBool; dispid 1004;
    function  CustomForms: WordBool; dispid 1003;
    function  Tables: WordBool; dispid 401;
    function  Filters: WordBool; dispid 501;
    function  Macro(Name: OleVariant): WordBool; dispid 1001;
    function  FillDown(Down: OleVariant): WordBool; dispid 218;
    function  Views: WordBool; dispid 301;
    function  CalculateProject: WordBool; dispid 2034;
    function  LevelingClear(All: OleVariant): WordBool; dispid 612;
    function  SpellingCheck: WordBool; dispid 613;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant;
                              AlwaysSuggest: OleVariant; UseCustomDictionary: OleVariant): WordBool; dispid 614;
    function  WindowMoreWindows: WordBool; dispid 706;
    function  HelpContents: WordBool; dispid 804;
    function  HelpSearch: WordBool; dispid 808;
    function  HelpOnlineIndex: WordBool; dispid 809;
    function  HelpAbout: WordBool; dispid 806;
    function  HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant; Search: OleVariant;
                         SearchKey: OleVariant): WordBool; dispid 810;
    function  HelpCueCards(FileName: OleVariant; ContextNumber: OleVariant): WordBool; dispid 813;
    function  HelpTopics: WordBool; dispid 815;
    function  HelpAnswerWizard: WordBool; dispid 816;
    function  HelpMSProjectFundamentals: WordBool; dispid 817;
    function  AutoCorrect: WordBool; dispid 627;
    function  HelpQuickPreview: WordBool; dispid 811;
    function  HelpTechnicalSupport: WordBool; dispid 812;
    function  HelpCreateYourProject: WordBool; dispid 2374;
    function  HelpContextHelp: WordBool; dispid 814;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant;
                         Italic: OleVariant; Underline: OleVariant; Color: OleVariant): WordBool; dispid 901;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant; CellColor: OleVariant; Pattern: OleVariant;
                                 ShowInMenu: OleVariant): WordBool; dispid 962;
    function  DetailStylesAdd(Item: PjTimescaledData; Position: OleVariant): WordBool; dispid 963;
    function  DetailStylesRemove(Item: PjTimescaledData): WordBool; dispid 964;
    function  DetailStylesRemoveAll: WordBool; dispid 965;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                   Underline: OleVariant; Color: OleVariant; Reset: OleVariant): WordBool; dispid 937;
    function  Timescale: WordBool; dispid 942;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant; Separator: OleVariant;
                            MajorUseFY: OleVariant; MinorUseFY: OleVariant): WordBool; dispid 902;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant;
                   Renumber: OleVariant; Outline: OleVariant): WordBool; dispid 903;
    function  BarBoxStyles: WordBool; dispid 904;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant; InsideText: OleVariant;
                             Reset: OleVariant; ProjectName: OleVariant): WordBool; dispid 938;
    function  TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant; Color: OleVariant;
                                  Pattern: OleVariant): WordBool; dispid 914;
    function  BoxShowHideFields(Show: OleVariant): WordBool; dispid 905;
    function  Layout: WordBool; dispid 941;
    function  PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                         AdjustForPageBreaks: OleVariant; DisplayPageBreaks: OleVariant): WordBool; dispid 906;
    function  LayoutNow: WordBool; dispid 907;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant;
                          CriticalExternalTaskStyle: OleVariant;
                          CriticalExternalTaskColor: OleVariant;
                          NoncriticalExternalTaskStyle: OleVariant;
                          NoncriticalExternalTaskColor: OleVariant): WordBool; dispid 908;
    function  Gridlines: WordBool; dispid 912;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                            Interval: OleVariant; IntervalType: OleVariant;
                            IntervalColor: OleVariant): WordBool; dispid 2061;
    function  ViewShowSelectedTasks(Show: OleVariant): WordBool; dispid 932;
    function  PageBreaksShow(Show: OleVariant): WordBool; dispid 933;
    function  FindNext: WordBool; dispid 2032;
    function  FindPrevious: WordBool; dispid 2033;
    function  ZoomOut: WordBool; dispid 2035;
    function  ZoomIn: WordBool; dispid 2036;
    function  SetField(const Field: WideString; const Value: WideString; Create: OleVariant): WordBool; dispid 3;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant; Create: OleVariant; TaskID: OleVariant;
                           ProjectName: OleVariant): WordBool; dispid 4;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant; Create: OleVariant;
                               ResourceID: OleVariant; ProjectName: OleVariant): WordBool; dispid 5;
    function  SetActiveCell(const Value: WideString; Create: OleVariant): WordBool; dispid 6;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant; Field2: OleVariant; Value2: OleVariant; Test2: OleVariant): OleVariant; dispid 7;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant;
                               CheckField2: OleVariant; CheckValue2: OleVariant;
                               CheckTest2: OleVariant): WordBool; dispid 11;
    function  AppExecute(Window: OleVariant; Command: OleVariant; Minimize: OleVariant;
                         Activate: OleVariant): WordBool; dispid 8;
    function  AppLaunch(const Application: WideString; Document: OleVariant; Activate: OleVariant): WordBool; dispid 20;
    function  DDELinksUpdate: WordBool; dispid 2053;
    function  GotoTaskDates: WordBool; dispid 2054;
    function  GanttBarLinks(Display: PjGanttBarLink): WordBool; dispid 2071;
    function  GanttShowDrawings(Display: OleVariant): WordBool; dispid 2079;
    function  BarRounding(On_: OleVariant): WordBool; dispid 2080;
    function  GanttRollup(AlwaysRollup: OleVariant; HideWhenSummaryExpanded: OleVariant): WordBool; dispid 2119;
    function  GanttBarTextDateFormat(DateFormat: PjDateFormat): WordBool; dispid 2081;
    function  GanttBarSize(Size: PjBarSize): WordBool; dispid 2058;
    function  GanttBarStyleDelete(const Item: WideString): WordBool; dispid 2059;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant;
                                LeftText: OleVariant; RightText: OleVariant; InsideText: OleVariant): WordBool; dispid 2060;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                            Field3: OleVariant; Field4: OleVariant; Field5: OleVariant): WordBool; dispid 2056;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                          XPosition: OleVariant; YPosition: OleVariant): WordBool; dispid 2055;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant;
                                     ShowValues: OleVariant; ShowAvailabilityLine: OleVariant;
                                     PercentBarOverlap: OleVariant): WordBool; dispid 2057;
    function  ConsolidateProjects(Filenames: OleVariant; NewWindow: OleVariant;
                                  AttachToSources: OleVariant; PoolResources: OleVariant;
                                  HideSubtasks: OleVariant; openPool: PjPoolOpen;
                                  UserID: OleVariant; Password: OleVariant): WordBool; dispid 124;
    function  Organizer(Type_: PjOrganizer; Task: OleVariant): WordBool; dispid 126;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant;
                                Name: OleVariant; Task: OleVariant): WordBool; dispid 127;
    function  OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  Task: OleVariant): WordBool; dispid 128;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  NewName: OleVariant; Task: OleVariant): WordBool; dispid 130;
    function  RecurringTaskInsert: WordBool; dispid 2303;
    function  CalendarTimescale: WordBool; dispid 2345;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant;
                                BottomColor: OleVariant; TopPattern: OleVariant;
                                BottomPattern: OleVariant): WordBool; dispid 2340;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                   DayTitle: OleVariant; ShowPreview: OleVariant;
                                   DaysPerWeek: OleVariant): WordBool; dispid 2341;
    function  CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant;
                                      Color: OleVariant): WordBool; dispid 2343;
    function  CalendarDateShading(BaseCalendarName: OleVariant; ResourceUniqueID: OleVariant;
                                  ProjectIndex: OleVariant): WordBool; dispid 2344;
    function  ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant; EndDate: OleVariant): WordBool; dispid 2347;
    function  CalendarLayout(SortOrder: OleVariant; AutoLayout: OleVariant): WordBool; dispid 2346;
    function  CalendarBarStyles(BarRounding: OleVariant): WordBool; dispid 2326;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant; Field4: OleVariant; Field5: OleVariant;
                                    SplitPattern: OleVariant): WordBool; dispid 2339;
    function  CalendarBestFitWeekHeight: WordBool; dispid 2327;
    function  DrawingCreate(Type_: PjShape; Behind: OleVariant): WordBool; dispid 2306;
    function  DrawingMove(Forward: OleVariant; Full: OleVariant): WordBool; dispid 2311;
    function  DrawingReshape: WordBool; dispid 2314;
    function  DrawingProperties(SizePositionTab: OleVariant): WordBool; dispid 2307;
    function  DrawingCycleColor: WordBool; dispid 2315;
    function  FormatCopy: WordBool; dispid 2312;
    function  FormatPaste: WordBool; dispid 2313;
    function  FormatPainter: WordBool; dispid 2333;
    function  Toolbars(Action: OleVariant; ToolbarName: OleVariant; NewToolbarName: OleVariant): WordBool; dispid 2308;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant; FaceIndex: OleVariant;
                                Description: OleVariant; ToolTip: OleVariant): WordBool; dispid 2348;
    function  ToolbarDeleteTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool; dispid 2349;
    function  ToolbarsCustomize: WordBool; dispid 2309;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant; FaceIndex: OleVariant;
                                   Description: OleVariant; ToolTip: OleVariant): WordBool; dispid 2316;
    function  ToolbarCopyToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool; dispid 2318;
    function  ToolbarPasteToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool; dispid 2319;
    function  FontBold(Set_: OleVariant): WordBool; dispid 2320;
    function  FontItalic(Set_: OleVariant): WordBool; dispid 2321;
    function  FontUnderLine(Set_: OleVariant): WordBool; dispid 2324;
    function  ColumnAlignment(Align: PjAlignment): WordBool; dispid 2325;
    function  Reports: WordBool; dispid 2334;
    function  TipOfTheDay: WordBool; dispid 2335;
    function  FindFile: WordBool; dispid 2338;
    function  MailUpdateProject(const DataFile: WideString): WordBool; dispid 2372;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant;
                                  ShowDialog: OleVariant; InstallationMessage: OleVariant;
                                  UpdateFrom: OleVariant): WordBool; dispid 2351;
    function  WebInbox: WordBool; dispid 2377;
    function  GanttChartWizard: WordBool; dispid 2500;
    function  DrawingToolbarShow: WordBool; dispid 2352;
    function  ReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool; dispid 2383;
    function  SchedulePlusReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool; dispid 2353;
    function  CalendarTaskList(Date: OleVariant): WordBool; dispid 2354;
    function  OutlineSymbolsToggle(Show: OleVariant): WordBool; dispid 2082;
    function  ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant;
                                        ReadOnly: OleVariant): WordBool; dispid 2083;
    function  ResourceAddressBook: WordBool; dispid 2115;
    function  ResourceDetails(Name: OleVariant): WordBool; dispid 2116;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                       FieldID: OleVariant; Title: OleVariant;
                                       IncludeInTeamStatus: OleVariant; Editable: OleVariant): WordBool; dispid 2373;
    function  FileQuit(Save: PjSaveType): WordBool; dispid 2375;
    function  About: WordBool; dispid 2376;
    function  DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant;
                                     ShortLabels: OleVariant; DisplayDetailsColumn: OleVariant): WordBool; dispid 952;
    function  DetailStylesToggleItem(Item: PjTimescaledData): WordBool; dispid 960;
    function  AutoFilter: WordBool; dispid 22;
    function  ViewBar: WordBool; dispid 966;
    function  MacroShowVba: WordBool; dispid 2245;
    function  MacroShowCode: WordBool; dispid 2246;
    function  WebGoBack: WordBool; dispid 1300;
    function  WebGoForward: WordBool; dispid 1301;
    function  WebStopLoading: WordBool; dispid 1302;
    function  WebRefresh: WordBool; dispid 1303;
    function  WebOpenStartPage: WordBool; dispid 1304;
    function  WebOpenSearchPage: WordBool; dispid 1305;
    function  WebHideToolbars(Hide: OleVariant): WordBool; dispid 1306;
    function  FollowHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant;
                              NewWindow: OleVariant): WordBool; dispid 1307;
    function  EditPasteAsHyperlink: WordBool; dispid 1308;
    function  InsertHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                              ScreenTip: OleVariant): WordBool; dispid 1309;
    function  EditHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                            ScreenTip: OleVariant): WordBool; dispid 1310;
    function  WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant;
                               NewWindow: OleVariant): WordBool; dispid 1311;
    function  WebCopyHyperlink: WordBool; dispid 1313;
    function  WebAddToFavorites(CurrentLink: OleVariant): WordBool; dispid 1314;
    function  EditClearHyperlink: WordBool; dispid 1316;
    function  WebSetStartPage(Address: OleVariant): WordBool; dispid 1317;
    function  WebSetSearchPage(Address: OleVariant): WordBool; dispid 1318;
    function  WebOpenFavorites: WordBool; dispid 1320;
    function  WebToolbar(Show: OleVariant): WordBool; dispid 1321;
    function  SplitTask(Lock: OleVariant): WordBool; dispid 1011;
    function  CustomFieldRename(FieldID: PjCustomField; const NewName: WideString;
                                Phonetic: OleVariant): WordBool; dispid 2378;
    function  CustomizeField: WordBool; dispid 2379;
    function  GanttShowBarSplits(Display: OleVariant): WordBool; dispid 2381;
    function  CalendarShowBarSplits(Display: OleVariant): WordBool; dispid 2382;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant;
                      TemplateFile: OleVariant; IncludeImage: OleVariant; ImageFile: OleVariant): WordBool; dispid 243;
    function  FillAcross(Right: OleVariant): WordBool; dispid 244;
    function  LinksBetweenProjects(AcceptAll: OleVariant): WordBool; dispid 245;
    function  ToggleAssignments: WordBool; dispid 246;
    function  ProgressLines: WordBool; dispid 247;
    function  ResourceSharingPoolUpdate(allSharers: OleVariant): WordBool; dispid 248;
    function  ResourceSharingPoolRefresh: WordBool; dispid 249;
    function  WebHelp(Type_: OleVariant): WordBool; dispid 251;
    function  AddProgressLine: WordBool; dispid 252;
    function  CustomizeIMEMode(FieldID: PjField; IMEMode: PjIMEMode): WordBool; dispid 254;
    function  DeleteFromDatabase(Name: OleVariant; UserID: OleVariant;
                                 DatabasePassWord: OleVariant; FormatID: OleVariant): WordBool; dispid 135;
    function  WBSCodeRenumber(All: OleVariant): WordBool; dispid 629;
    function  WBSCodeMaskEdit(CodePrefix: OleVariant; Level: OleVariant; Sequence: PjWBSSequence;
                              Length: OleVariant; Separator: OleVariant; CodeGenerate: OleVariant;
                              VerifyUniqueness: OleVariant): WordBool; dispid 630;
    function  CustomOutlineCodeEdit(FieldID: PjCustomField; Level: OleVariant;
                                    Sequence: PjCustomOutlineCodeSequence; Length: OleVariant;
                                    Separator: OleVariant; OnlyLookUpTableCodes: OleVariant;
                                    OnlyCompleteCodes: OleVariant): WordBool; dispid 631;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant;
                          AutomaticSavePrompt: OleVariant; SetDefaultsDatabase: OleVariant): WordBool; dispid 650;
    function  OfficeOnTheWeb: WordBool; dispid 1322;
    function  FixMe: WordBool; dispid 1323;
    function  ViewShowWorkAvailability: WordBool; dispid 930;
    function  ViewShowUnitAvailability: WordBool; dispid 931;
    function  BaselineClear(All: OleVariant; From: OleVariant): WordBool; dispid 2384;
    function  Groups: WordBool; dispid 511;
    function  GroupApply(Name: OleVariant): WordBool; dispid 512;
    function  GroupBy: WordBool; dispid 513;
    function  LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant; Code: OleVariant;
                             Description: OleVariant): WordBool; dispid 635;
    function  BoxStylesEdit(Style: PjBoxStyle; DataTemplate: OleVariant;
                            HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                            BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                            BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern): WordBool; dispid 2387;
    function  BoxFormat(ProjectName: OleVariant; TaskID: OleVariant; DataTemplate: OleVariant;
                        HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                        BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                        BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern;
                        Reset: OleVariant): WordBool; dispid 2388;
    function  BarBoxFormat: WordBool; dispid 2389;
    function  CreateWebAccount(ServerURL: OleVariant; Name: OleVariant;
                               AuthenticationType: PjAuthentication; AccountType: PjAccountType;
                               ShowDialog: OleVariant): WordBool; dispid 2390;
    function  BoxDataTemplate(const Name: WideString; Action: PjDataTemplate; NewName: OleVariant;
                              Overwrite: OleVariant): WordBool; dispid 2391;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant; CellColumns: OleVariant;
                            CellWidth: OleVariant; MergeCells: OleVariant): WordBool; dispid 2392;
    function  BoxCellEdit(const Name: WideString; Cell: PjCell; FieldName: PjField;
                          Font: OleVariant; FontSize: OleVariant; FontColor: PjColor;
                          Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                          HorizontalAlignment: PjAlignment; VerticalAlignment: PjVerticalAlignment;
                          TextLineLimit: OleVariant; ShowLabel: OleVariant; Label_: OleVariant;
                          DateFormat: PjDateFormat): WordBool; dispid 2393;
    function  ResourceWindowsAccount(Name: OleVariant; ShowDialog: OleVariant): WordBool; dispid 2394;
    function  SetRowHeight(Unit_: OleVariant; Rows: OleVariant; UseUniqueID: OleVariant): WordBool; dispid 2118;
    function  ComAddInsDialog: WordBool; dispid 2395;
    function  MacroSecurity: WordBool; dispid 2396;
    function  LayoutSelectionNow: WordBool; dispid 2399;
    function  BoxAlign(Alignment: PjAlign): WordBool; dispid 29;
    function  ConvertHangulToHanja: WordBool; dispid 28;
    function  UpdateProjectToWeb(ServerURL: OleVariant): WordBool; dispid 2247;
    function  CustomFieldProperties(FieldID: PjCustomField; Attribute: PjCustomFieldAttribute;
                                    SummaryCalc: PjSummaryCalc; GraphicalIndicators: OleVariant): WordBool; dispid 35;
    function  CustomFieldSetFormula(FieldID: PjCustomField; Formula: OleVariant): WordBool; dispid 36;
    function  CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                      const Value: WideString; IndicatorID: PjIndicator;
                                      CriteriaList: PjCriteriaList; Index: OleVariant): WordBool; dispid 38;
    function  CustomFieldIndicators(FieldID: PjCustomField; SummaryInheritsNonsummary: OleVariant;
                                    ProjectInheritsSummary: OleVariant; ShowToolTips: OleVariant): WordBool; dispid 37;
    function  CustomFieldIndicatorDelete(FieldID: PjCustomField; Index: Smallint;
                                         CriteriaList: PjCriteriaList): WordBool; dispid 39;
    function  CustomFieldValueList(FieldID: PjCustomField; ListDefault: OleVariant;
                                   DefaultValue: OleVariant; RestrictToList: OleVariant;
                                   AppendNew: OleVariant; PromptOnNew: OleVariant;
                                   DisplayOrder: PjListOrder): WordBool; dispid 40;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant; Phonetic: OleVariant;
                                      Index: OleVariant; FieldDefault: OleVariant): WordBool; dispid 41;
    function  CustomFieldValueListDelete(FieldID: PjCustomField; Index: Smallint): WordBool; dispid 42;
    function  BoxLayout(LayoutMode: PjLayoutMode; LayoutScheme: PjLayoutScheme;
                        SummaryPrecedence: OleVariant; RowAlignment: PjVerticalAlignment;
                        ColumnAlignment: PjAlignment; RowSpacing: OleVariant;
                        ColumnSpacing: OleVariant; RowHeight: PjRowColSize;
                        ColumnWidth: PjRowColSize; AdjustForPageBreaks: OleVariant;
                        ShowSummaryTasks: OleVariant; ViewBackgroundColor: PjColor;
                        ViewBackgroundPattern: PjBackgroundPattern; ShowProgressMarks: OleVariant;
                        ShowPageBreaks: OleVariant; ShowIDOnly: OleVariant): WordBool; dispid 43;
    function  BoxLinks(Style: PjLinkStyle; ShowArrows: OleVariant; ShowLabels: OleVariant;
                       ColorMode: PjLinkColorMode; CriticalColor: PjColor; NoncriticalColor: PjColor): WordBool; dispid 44;
    function  SummaryTasksShow(Show: OleVariant): WordBool; dispid 45;
    function  BoxProgressMarksShow(Show: OleVariant): WordBool; dispid 46;
    function  BoxLinkLabelsShow(Show: OleVariant): WordBool; dispid 47;
    function  BoxLinkStyleToggle(StraightLinks: OleVariant): WordBool; dispid 48;
    function  LayoutRelatedNow: WordBool; dispid 30;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                     YPosition: OleVariant; ProjectName: OleVariant): WordBool; dispid 49;
    function  SetSplitBar(ShowColumns: OleVariant): WordBool; dispid 31;
  end;

// *********************************************************************//
// DispIntf:  _EProjectApp
// Flags:     (4112) Hidden Dispatchable
// GUID:      {7B7597D0-0C9F-11D0-8C43-00A0C904DCD4}
// *********************************************************************//
  _EProjectApp = dispinterface
    ['{7B7597D0-0C9F-11D0-8C43-00A0C904DCD4}']
    procedure NewProject(const pj: Project); dispid 1;
    procedure ProjectBeforeTaskDelete(const tsk: Task; var Cancel: WordBool); dispid 6;
    procedure ProjectBeforeResourceDelete(const res: Resource; var Cancel: WordBool); dispid 7;
    procedure ProjectBeforeAssignmentDelete(const asg: Assignment; var Cancel: WordBool); dispid 8;
    procedure ProjectBeforeTaskChange(const tsk: Task; Field: PjField; NewVal: OleVariant;
                                      var Cancel: WordBool); dispid 9;
    procedure ProjectBeforeResourceChange(const res: Resource; Field: PjField; NewVal: OleVariant;
                                          var Cancel: WordBool); dispid 10;
    procedure ProjectBeforeAssignmentChange(const asg: Assignment; Field: PjAssignmentField;
                                            NewVal: OleVariant; var Cancel: WordBool); dispid 11;
    procedure ProjectBeforeTaskNew(const pj: Project; var Cancel: WordBool); dispid 12;
    procedure ProjectBeforeResourceNew(const pj: Project; var Cancel: WordBool); dispid 13;
    procedure ProjectBeforeAssignmentNew(const pj: Project; var Cancel: WordBool); dispid 14;
    procedure ProjectBeforeClose(const pj: Project; var Cancel: WordBool); dispid 2;
    procedure ProjectBeforePrint(const pj: Project; var Cancel: WordBool); dispid 4;
    procedure ProjectBeforeSave(const pj: Project; SaveAsUi: WordBool; var Cancel: WordBool); dispid 3;
    procedure ProjectCalculate(const pj: Project); dispid 5;
  end;

// *********************************************************************//
// The Class CoProject provides a Create and CreateRemote method to
// create instances of the default interface _IProjectDoc exposed by
// the CoClass Project. The functions are intended to be used by
// clients wishing to automate the CoClass objects exposed by the
// server of this typelibrary.
// *********************************************************************//
  CoProject = class
    class function Create: _IProjectDoc;
    class function CreateRemote(const MachineName: string): _IProjectDoc;
  end;

  TProjectOpen = procedure(Sender: TObject; var pj: OleVariant) of object;
  TProjectBeforeClose = procedure(Sender: TObject; var pj: OleVariant) of object;
  TProjectBeforeSave = procedure(Sender: TObject; var pj: OleVariant) of object;
  TProjectBeforePrint = procedure(Sender: TObject; var pj: OleVariant) of object;
  TProjectCalculate = procedure(Sender: TObject; var pj: OleVariant) of object;
  TProjectChange = procedure(Sender: TObject; var pj: OleVariant) of object;
  TProjectActivate = procedure(Sender: TObject; var pj: OleVariant) of object;
  TProjectDeactivate = procedure(Sender: TObject; var pj: OleVariant) of object;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TProject
// Help String      :
// Default Interface: _IProjectDoc
// Def. Intf. DISP? : Yes
// Event   Interface: _EProjectDoc
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TProjectProperties= class;
{$ENDIF}
  TProject = class(TOleServer)
  private
    FOnOpen: TProjectOpen;
    FOnBeforeClose: TProjectBeforeClose;
    FOnBeforeSave: TProjectBeforeSave;
    FOnBeforePrint: TProjectBeforePrint;
    FOnCalculate: TProjectCalculate;
    FOnChange: TProjectChange;
    FOnActivate: TProjectActivate;
    FOnDeactivate: TProjectDeactivate;
    FIntf:        _IProjectDoc;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TProjectProperties;
    function      GetServerProperties: TProjectProperties;
{$ENDIF}
    function      GetDefaultInterface: _IProjectDoc;
  protected
    procedure InitServerData; override;
    procedure InvokeEvent(DispID: TDispID; var Params: TVariantArray); override;
    function Get_Manager: OleVariant;
    procedure Set_Manager(Value: OleVariant);
    function Get_Company: OleVariant;
    procedure Set_Company(Value: OleVariant);
    function Get_Author: OleVariant;
    procedure Set_Author(Value: OleVariant);
    function Get_Keywords: OleVariant;
    procedure Set_Keywords(Value: OleVariant);
    function Get_ProjectNotes: WideString;
    procedure Set_ProjectNotes(const Value: WideString);
    function Get_ProjectStart: OleVariant;
    procedure Set_ProjectStart(Value: OleVariant);
    function Get_ProjectFinish: OleVariant;
    procedure Set_ProjectFinish(Value: OleVariant);
    function Get_CurrentDate: OleVariant;
    procedure Set_CurrentDate(Value: OleVariant);
    function Get_StatusDate: OleVariant;
    procedure Set_StatusDate(Value: OleVariant);
    function Get_ScheduleFromStart: WordBool;
    procedure Set_ScheduleFromStart(Value: WordBool);
    function Get_Comments: OleVariant;
    procedure Set_Comments(Value: OleVariant);
    function Get_Title: OleVariant;
    procedure Set_Title(Value: OleVariant);
    function Get_Subject: OleVariant;
    procedure Set_Subject(Value: OleVariant);
    function Get_Windows: Windows;
    procedure Set_Windows(const Value: Windows);
    function Get_MinuteLabelDisplay: Smallint;
    procedure Set_MinuteLabelDisplay(Value: Smallint);
    function Get_HourLabelDisplay: Smallint;
    procedure Set_HourLabelDisplay(Value: Smallint);
    function Get_DayLabelDisplay: Smallint;
    procedure Set_DayLabelDisplay(Value: Smallint);
    function Get_WeekLabelDisplay: Smallint;
    procedure Set_WeekLabelDisplay(Value: Smallint);
    function Get_YearLabelDisplay: Smallint;
    procedure Set_YearLabelDisplay(Value: Smallint);
    function Get_MonthLabelDisplay: Smallint;
    procedure Set_MonthLabelDisplay(Value: Smallint);
    function Get_SpaceBeforeTimeLabels: WordBool;
    procedure Set_SpaceBeforeTimeLabels(Value: WordBool);
    function Get_DefaultTaskType: PjTaskFixedType;
    procedure Set_DefaultTaskType(Value: PjTaskFixedType);
    function Get_DefaultEffortDriven: WordBool;
    procedure Set_DefaultEffortDriven(Value: WordBool);
    function Get_UseFYStartYear: WordBool;
    procedure Set_UseFYStartYear(Value: WordBool);
    function Get_AutoFilter: WordBool;
    procedure Set_AutoFilter(Value: WordBool);
    function Get_HonorConstraints: WordBool;
    procedure Set_HonorConstraints(Value: WordBool);
    function Get_MultipleCriticalPaths: WordBool;
    procedure Set_MultipleCriticalPaths(Value: WordBool);
    function Get_LevelFromDate: OleVariant;
    procedure Set_LevelFromDate(Value: OleVariant);
    function Get_LevelToDate: OleVariant;
    procedure Set_LevelToDate(Value: OleVariant);
    function Get_LevelEntireProject: WordBool;
    procedure Set_LevelEntireProject(Value: WordBool);
    function Get_DefaultFixedCostAccrual: PjAccrueAt;
    procedure Set_DefaultFixedCostAccrual(Value: PjAccrueAt);
    function Get_SpreadCostsToStatusDate: WordBool;
    procedure Set_SpreadCostsToStatusDate(Value: WordBool);
    function Get_SpreadPercentCompleteToStatusDate: WordBool;
    procedure Set_SpreadPercentCompleteToStatusDate(Value: WordBool);
    function Get_AutoCalcCosts: WordBool;
    procedure Set_AutoCalcCosts(Value: WordBool);
    function Get_ShowExternalSuccessors: WordBool;
    procedure Set_ShowExternalSuccessors(Value: WordBool);
    function Get_ShowExternalPredecessors: WordBool;
    procedure Set_ShowExternalPredecessors(Value: WordBool);
    function Get_ShowCrossProjectLinksInfo: WordBool;
    procedure Set_ShowCrossProjectLinksInfo(Value: WordBool);
    function Get_AcceptNewExternalData: WordBool;
    procedure Set_AcceptNewExternalData(Value: WordBool);
    function Get_PhoneticType: PjPhoneticType;
    procedure Set_PhoneticType(Value: PjPhoneticType);
    function Get_WorkgroupMessages: PjWorkgroupMessages;
    procedure Set_WorkgroupMessages(Value: PjWorkgroupMessages);
    function Get_ServerURL: WideString;
    procedure Set_ServerURL(const Value: WideString);
    function Get_ServerPath: WideString;
    procedure Set_ServerPath(const Value: WideString);
    function Get_ReceiveNotifications: WordBool;
    procedure Set_ReceiveNotifications(Value: WordBool);
    function Get_SendHyperlinkNote: WordBool;
    procedure Set_SendHyperlinkNote(Value: WordBool);
    function Get_HyperlinkColor: PjColor;
    procedure Set_HyperlinkColor(Value: PjColor);
    function Get_FollowedHyperlinkColor: PjColor;
    procedure Set_FollowedHyperlinkColor(Value: PjColor);
    function Get_UnderlineHyperlinks: WordBool;
    procedure Set_UnderlineHyperlinks(Value: WordBool);
    function Get_AskForCompletedWork: PjTeamStatusCompletedWork;
    procedure Set_AskForCompletedWork(Value: PjTeamStatusCompletedWork);
    function Get_TrackOvertimeWork: WordBool;
    procedure Set_TrackOvertimeWork(Value: WordBool);
    function Get_TeamMembersCanDeclineTasks: WordBool;
    procedure Set_TeamMembersCanDeclineTasks(Value: WordBool);
    function Get_ShowEstimatedDuration: WordBool;
    procedure Set_ShowEstimatedDuration(Value: WordBool);
    function Get_NewTasksEstimated: WordBool;
    procedure Set_NewTasksEstimated(Value: WordBool);
    function Get_WBSCodeGenerate: WordBool;
    procedure Set_WBSCodeGenerate(Value: WordBool);
    function Get_WBSVerifyUniqueness: WordBool;
    procedure Set_WBSVerifyUniqueness(Value: WordBool);
    function Get_UpdateProjOnSave: WordBool;
    procedure Set_UpdateProjOnSave(Value: WordBool);
    function Get_ServerIdentification: PjAuthentication;
    procedure Set_ServerIdentification(Value: PjAuthentication);
    function Get_VBASigned: WordBool;
    procedure Set_VBASigned(Value: WordBool);
    function Get_ExpandDatabaseTimephasedData: WordBool;
    procedure Set_ExpandDatabaseTimephasedData(Value: WordBool);
    function Get_DatabaseProjectUniqueID: OleVariant;
    procedure Set_DatabaseProjectUniqueID(Value: OleVariant);
    function Get_ActualWork: OleVariant;
    procedure Set_ActualWork(Value: OleVariant);
    function Get_Cost1: OleVariant;
    procedure Set_Cost1(Value: OleVariant);
    function Get_Cost2: OleVariant;
    procedure Set_Cost2(Value: OleVariant);
    function Get_Cost3: OleVariant;
    procedure Set_Cost3(Value: OleVariant);
    function Get_BaselineWork: OleVariant;
    procedure Set_BaselineWork(Value: OleVariant);
    function Get_BaselineCost: OleVariant;
    procedure Set_BaselineCost(Value: OleVariant);
    function Get_FixedCost: OleVariant;
    procedure Set_FixedCost(Value: OleVariant);
    function Get_WBS: WideString;
    procedure Set_WBS(const Value: WideString);
    function Get_Delay: OleVariant;
    procedure Set_Delay(Value: OleVariant);
    function Get_Priority: OleVariant;
    procedure Set_Priority(Value: OleVariant);
    function Get_Duration1: OleVariant;
    procedure Set_Duration1(Value: OleVariant);
    function Get_Duration2: OleVariant;
    procedure Set_Duration2(Value: OleVariant);
    function Get_Duration3: OleVariant;
    procedure Set_Duration3(Value: OleVariant);
    function Get_PercentWorkComplete: OleVariant;
    procedure Set_PercentWorkComplete(Value: OleVariant);
    function Get_FixedDuration: OleVariant;
    procedure Set_FixedDuration(Value: OleVariant);
    function Get_BaselineStart: OleVariant;
    procedure Set_BaselineStart(Value: OleVariant);
    function Get_BaselineFinish: OleVariant;
    procedure Set_BaselineFinish(Value: OleVariant);
    function Get_Text1: WideString;
    procedure Set_Text1(const Value: WideString);
    function Get_Start1: OleVariant;
    procedure Set_Start1(Value: OleVariant);
    function Get_Finish1: OleVariant;
    procedure Set_Finish1(Value: OleVariant);
    function Get_Text2: WideString;
    procedure Set_Text2(const Value: WideString);
    function Get_Start2: OleVariant;
    procedure Set_Start2(Value: OleVariant);
    function Get_Finish2: OleVariant;
    procedure Set_Finish2(Value: OleVariant);
    function Get_Text3: WideString;
    procedure Set_Text3(const Value: WideString);
    function Get_Start3: OleVariant;
    procedure Set_Start3(Value: OleVariant);
    function Get_Finish3: OleVariant;
    procedure Set_Finish3(Value: OleVariant);
    function Get_Text4: WideString;
    procedure Set_Text4(const Value: WideString);
    function Get_Start4: OleVariant;
    procedure Set_Start4(Value: OleVariant);
    function Get_Finish4: OleVariant;
    procedure Set_Finish4(Value: OleVariant);
    function Get_Text5: WideString;
    procedure Set_Text5(const Value: WideString);
    function Get_Start5: OleVariant;
    procedure Set_Start5(Value: OleVariant);
    function Get_Finish5: OleVariant;
    procedure Set_Finish5(Value: OleVariant);
    function Get_Text6: WideString;
    procedure Set_Text6(const Value: WideString);
    function Get_Text7: WideString;
    procedure Set_Text7(const Value: WideString);
    function Get_Text8: WideString;
    procedure Set_Text8(const Value: WideString);
    function Get_Text9: WideString;
    procedure Set_Text9(const Value: WideString);
    function Get_Text10: WideString;
    procedure Set_Text10(const Value: WideString);
    function Get_Marked: OleVariant;
    procedure Set_Marked(Value: OleVariant);
    function Get_Flag1: OleVariant;
    procedure Set_Flag1(Value: OleVariant);
    function Get_Flag2: OleVariant;
    procedure Set_Flag2(Value: OleVariant);
    function Get_Flag3: OleVariant;
    procedure Set_Flag3(Value: OleVariant);
    function Get_Flag4: OleVariant;
    procedure Set_Flag4(Value: OleVariant);
    function Get_Flag5: OleVariant;
    procedure Set_Flag5(Value: OleVariant);
    function Get_Flag6: OleVariant;
    procedure Set_Flag6(Value: OleVariant);
    function Get_Flag7: OleVariant;
    procedure Set_Flag7(Value: OleVariant);
    function Get_Flag8: OleVariant;
    procedure Set_Flag8(Value: OleVariant);
    function Get_Flag9: OleVariant;
    procedure Set_Flag9(Value: OleVariant);
    function Get_Flag10: OleVariant;
    procedure Set_Flag10(Value: OleVariant);
    function Get_Rollup: OleVariant;
    procedure Set_Rollup(Value: OleVariant);
    function Get_Number1: Double;
    procedure Set_Number1(Value: Double);
    function Get_Number2: Double;
    procedure Set_Number2(Value: Double);
    function Get_Number3: Double;
    procedure Set_Number3(Value: Double);
    function Get_Number4: Double;
    procedure Set_Number4(Value: Double);
    function Get_Number5: Double;
    procedure Set_Number5(Value: Double);
    function Get_Notes: WideString;
    procedure Set_Notes(const Value: WideString);
    function Get_Contact: WideString;
    procedure Set_Contact(const Value: WideString);
    function Get_HideBar: OleVariant;
    procedure Set_HideBar(Value: OleVariant);
    function Get_CurrencySymbol: WideString;
    procedure Set_CurrencySymbol(const Value: WideString);
    function Get_CurrencySymbolPosition: PjPlacement;
    procedure Set_CurrencySymbolPosition(Value: PjPlacement);
    function Get_CurrencyDigits: Smallint;
    procedure Set_CurrencyDigits(Value: Smallint);
    function Get_ShowCriticalSlack: Integer;
    procedure Set_ShowCriticalSlack(Value: Integer);
    function Get_DefaultDurationUnits: PjUnit;
    procedure Set_DefaultDurationUnits(Value: PjUnit);
    function Get_DefaultWorkUnits: PjUnit;
    procedure Set_DefaultWorkUnits(Value: PjUnit);
    function Get_StartOnCurrentDate: WordBool;
    procedure Set_StartOnCurrentDate(Value: WordBool);
    function Get_AutoTrack: WordBool;
    procedure Set_AutoTrack(Value: WordBool);
    function Get_AutoSplitTasks: WordBool;
    procedure Set_AutoSplitTasks(Value: WordBool);
    function Get_AutoLinkTasks: WordBool;
    procedure Set_AutoLinkTasks(Value: WordBool);
    function Get_DefaultStartTime: OleVariant;
    procedure Set_DefaultStartTime(Value: OleVariant);
    function Get_DefaultFinishTime: OleVariant;
    procedure Set_DefaultFinishTime(Value: OleVariant);
    function Get_HoursPerDay: Double;
    procedure Set_HoursPerDay(Value: Double);
    function Get_HoursPerWeek: Double;
    procedure Set_HoursPerWeek(Value: Double);
    function Get_DaysPerMonth: Double;
    procedure Set_DaysPerMonth(Value: Double);
    function Get_DefaultResourceStandardRate: OleVariant;
    procedure Set_DefaultResourceStandardRate(Value: OleVariant);
    function Get_DefaultResourceOvertimeRate: OleVariant;
    procedure Set_DefaultResourceOvertimeRate(Value: OleVariant);
    function Get_DisplayProjectSummaryTask: WordBool;
    procedure Set_DisplayProjectSummaryTask(Value: WordBool);
    function Get_AutoAddResources: WordBool;
    procedure Set_AutoAddResources(Value: WordBool);
    function Get_StartWeekOn: PjWeekday;
    procedure Set_StartWeekOn(Value: PjWeekday);
    function Get_StartYearIn: PjMonth;
    procedure Set_StartYearIn(Value: PjMonth);
    function Get_AllowTaskDelegation: WordBool;
    procedure Set_AllowTaskDelegation(Value: WordBool);
    function Get_Name: WideString;
    procedure Set_Name(const Value: WideString);
    function  Get__CodeName: WideString;
    procedure  Set__CodeName(const Param1: WideString);
    function  Get_CodeName: WideString;
    function  Get_OutlineChildren: Tasks;
    function  Get_CostVariance: OleVariant;
    function  Get_ProjectSummaryTask: Task;
    function  Get_RemainingCost: OleVariant;
    function  Get_BCWP: OleVariant;
    function  Get_BCWS: OleVariant;
    function  Get_SV: OleVariant;
    function  Get_CV: OleVariant;
    function  Get_OutlineNumber: WideString;
    function  Get_Critical: OleVariant;
    function  Get_FreeSlack: OleVariant;
    function  Get_TotalSlack: OleVariant;
    function  Get_UniqueID: Integer;
    function  Get_OutlineLevel: SYSINT;
    function  Get_BaselineDuration: OleVariant;
    function  Get_DurationVariance: OleVariant;
    function  Get_EarlyStart: OleVariant;
    function  Get_EarlyFinish: OleVariant;
    function  Get_LateStart: OleVariant;
    function  Get_StartVariance: OleVariant;
    function  Get_FinishVariance: OleVariant;
    function  Get_Project: OleVariant;
    function  Get_Milestone: OleVariant;
    function  Get_RemainingDuration: OleVariant;
    function  Get_PercentComplete: OleVariant;
    function  Get_Start: OleVariant;
    function  Get_Finish: OleVariant;
    function  Get_ResourceNames: OleVariant;
    function  Get_ResourceInitials: OleVariant;
    function  Get_Resume: OleVariant;
    function  Get_Stop: OleVariant;
    function  Get_ResumeNoEarlierThan: OleVariant;
    function  Get_ConstraintType: OleVariant;
    function  Get_ConstraintDate: OleVariant;
    function  Get_ActualCost: OleVariant;
    function  Get_Cost: OleVariant;
    function  Get_Created: OleVariant;
    function  Get_ActualDuration: OleVariant;
    function  Get_Duration: OleVariant;
    function  Get_LateFinish: OleVariant;
    function  Get_ActualFinish: OleVariant;
    function  Get_Objects: Integer;
    function  Get_RemainingWork: OleVariant;
    function  Get_ResourceGroup: OleVariant;
    function  Get_ActualStart: OleVariant;
    function  Get_Summary: OleVariant;
    function  Get_Template: WideString;
    function  Get_UpdateNeeded: OleVariant;
    function  Get_Work: OleVariant;
    function  Get_WorkVariance: OleVariant;
    function  Get_LinkedFields: OleVariant;
    function  Get_Confirmed: OleVariant;
    function  Get_ReadOnly: WordBool;
    function  Get_HasPassword: WordBool;
    function  Get_WriteReserved: WordBool;
    function  Get_Application: Application;
    function  Get_Parent: IDispatch;
    function  Get_Index: OleVariant;
    function  Get_MapList: List;
    function  Get_Tasks: Tasks;
    function  Get_Resources: Resources;
    function  Get_BaseCalendars: Calendars;
    function  Get_BuiltinDocumentProperties: IDispatch;
    function  Get_CustomDocumentProperties: IDispatch;
    function  Get_Container: IDispatch;
    function  Get_Calendar: Calendar;
    function  Get_NumberOfTasks: Integer;
    function  Get_NumberOfResources: Integer;
    function  Get_FullName: WideString;
    function  Get_Path: WideString;
    function  Get_ResourcePoolName: WideString;
    function  Get_Saved: WordBool;
    function  Get_CreationDate: OleVariant;
    function  Get_LastPrintedDate: OleVariant;
    function  Get_LastSaveDate: OleVariant;
    function  Get_LastSavedBy: WideString;
    function  Get_RevisionNumber: WideString;
    function  Get_ViewList: List;
    function  Get_TaskViewList: List;
    function  Get_ResourceViewList: List;
    function  Get_ReadOnlyRecommended: WordBool;
    function  Get_ReportList: List;
    function  Get_TaskFilterList: List;
    function  Get_ResourceFilterList: List;
    function  Get_TaskTableList: List;
    function  Get_ResourceTableList: List;
    function  Get_CurrentView: WideString;
    function  Get_CurrentTable: WideString;
    function  Get_CurrentFilter: WideString;
    function  Get_ID: Integer;
    function  Get_CommandBars: CommandBars;
    function  Get_UserControl: WordBool;
    function  Get_VBProject: VBProject;
    function  Get_Subprojects: Subprojects;
    function  Get_CurrentGroup: WideString;
    function  Get_TaskGroupList: List;
    function  Get_ResourceGroupList: List;
    function  Get_TaskGroups: TaskGroups;
    function  Get_ResourceGroups: ResourceGroups;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _IProjectDoc);
    procedure Disconnect; override;
    procedure SaveAs(Name: OleVariant; Format: PjFileFormat; Backup: OleVariant;
                     ReadOnly: OleVariant; TaskInformation: OleVariant; Filtered: OleVariant;
                     Table: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                     FormatID: OleVariant; Map: OleVariant; ClearBaseline: OleVariant;
                     ClearActuals: OleVariant; ClearResourceRates: OleVariant;
                     ClearFixedCosts: OleVariant);
    procedure Activate;
    procedure LevelClearDates;
    procedure AppendNotes(const Value: WideString);
    property  DefaultInterface: _IProjectDoc read GetDefaultInterface;
    property Manager: OleVariant read Get_Manager write Set_Manager;
    property Company: OleVariant read Get_Company write Set_Company;
    property Author: OleVariant read Get_Author write Set_Author;
    property Keywords: OleVariant read Get_Keywords write Set_Keywords;
    property ProjectStart: OleVariant read Get_ProjectStart write Set_ProjectStart;
    property ProjectFinish: OleVariant read Get_ProjectFinish write Set_ProjectFinish;
    property CurrentDate: OleVariant read Get_CurrentDate write Set_CurrentDate;
    property StatusDate: OleVariant read Get_StatusDate write Set_StatusDate;
    property Comments: OleVariant read Get_Comments write Set_Comments;
    property Title: OleVariant read Get_Title write Set_Title;
    property Subject: OleVariant read Get_Subject write Set_Subject;
    property LevelFromDate: OleVariant read Get_LevelFromDate write Set_LevelFromDate;
    property LevelToDate: OleVariant read Get_LevelToDate write Set_LevelToDate;
    property ServerPath: WideString read Get_ServerPath write Set_ServerPath;
    property DatabaseProjectUniqueID: OleVariant read Get_DatabaseProjectUniqueID write Set_DatabaseProjectUniqueID;
    property ActualWork: OleVariant read Get_ActualWork write Set_ActualWork;
    property Cost1: OleVariant read Get_Cost1 write Set_Cost1;
    property Cost2: OleVariant read Get_Cost2 write Set_Cost2;
    property Cost3: OleVariant read Get_Cost3 write Set_Cost3;
    property BaselineWork: OleVariant read Get_BaselineWork write Set_BaselineWork;
    property BaselineCost: OleVariant read Get_BaselineCost write Set_BaselineCost;
    property FixedCost: OleVariant read Get_FixedCost write Set_FixedCost;
    property WBS: WideString read Get_WBS write Set_WBS;
    property Delay: OleVariant read Get_Delay write Set_Delay;
    property Priority: OleVariant read Get_Priority write Set_Priority;
    property Duration1: OleVariant read Get_Duration1 write Set_Duration1;
    property Duration2: OleVariant read Get_Duration2 write Set_Duration2;
    property Duration3: OleVariant read Get_Duration3 write Set_Duration3;
    property PercentWorkComplete: OleVariant read Get_PercentWorkComplete write Set_PercentWorkComplete;
    property FixedDuration: OleVariant read Get_FixedDuration write Set_FixedDuration;
    property BaselineStart: OleVariant read Get_BaselineStart write Set_BaselineStart;
    property BaselineFinish: OleVariant read Get_BaselineFinish write Set_BaselineFinish;
    property Text1: WideString read Get_Text1 write Set_Text1;
    property Start1: OleVariant read Get_Start1 write Set_Start1;
    property Finish1: OleVariant read Get_Finish1 write Set_Finish1;
    property Text2: WideString read Get_Text2 write Set_Text2;
    property Start2: OleVariant read Get_Start2 write Set_Start2;
    property Finish2: OleVariant read Get_Finish2 write Set_Finish2;
    property Text3: WideString read Get_Text3 write Set_Text3;
    property Start3: OleVariant read Get_Start3 write Set_Start3;
    property Finish3: OleVariant read Get_Finish3 write Set_Finish3;
    property Text4: WideString read Get_Text4 write Set_Text4;
    property Start4: OleVariant read Get_Start4 write Set_Start4;
    property Finish4: OleVariant read Get_Finish4 write Set_Finish4;
    property Text5: WideString read Get_Text5 write Set_Text5;
    property Start5: OleVariant read Get_Start5 write Set_Start5;
    property Finish5: OleVariant read Get_Finish5 write Set_Finish5;
    property Text6: WideString read Get_Text6 write Set_Text6;
    property Text7: WideString read Get_Text7 write Set_Text7;
    property Text8: WideString read Get_Text8 write Set_Text8;
    property Text9: WideString read Get_Text9 write Set_Text9;
    property Text10: WideString read Get_Text10 write Set_Text10;
    property Marked: OleVariant read Get_Marked write Set_Marked;
    property Flag1: OleVariant read Get_Flag1 write Set_Flag1;
    property Flag2: OleVariant read Get_Flag2 write Set_Flag2;
    property Flag3: OleVariant read Get_Flag3 write Set_Flag3;
    property Flag4: OleVariant read Get_Flag4 write Set_Flag4;
    property Flag5: OleVariant read Get_Flag5 write Set_Flag5;
    property Flag6: OleVariant read Get_Flag6 write Set_Flag6;
    property Flag7: OleVariant read Get_Flag7 write Set_Flag7;
    property Flag8: OleVariant read Get_Flag8 write Set_Flag8;
    property Flag9: OleVariant read Get_Flag9 write Set_Flag9;
    property Flag10: OleVariant read Get_Flag10 write Set_Flag10;
    property Rollup: OleVariant read Get_Rollup write Set_Rollup;
    property Number1: Double read Get_Number1 write Set_Number1;
    property Number2: Double read Get_Number2 write Set_Number2;
    property Number3: Double read Get_Number3 write Set_Number3;
    property Number4: Double read Get_Number4 write Set_Number4;
    property Number5: Double read Get_Number5 write Set_Number5;
    property Notes: WideString read Get_Notes write Set_Notes;
    property Contact: WideString read Get_Contact write Set_Contact;
    property HideBar: OleVariant read Get_HideBar write Set_HideBar;
    property DefaultStartTime: OleVariant read Get_DefaultStartTime write Set_DefaultStartTime;
    property DefaultFinishTime: OleVariant read Get_DefaultFinishTime write Set_DefaultFinishTime;
    property DefaultResourceStandardRate: OleVariant read Get_DefaultResourceStandardRate write Set_DefaultResourceStandardRate;
    property DefaultResourceOvertimeRate: OleVariant read Get_DefaultResourceOvertimeRate write Set_DefaultResourceOvertimeRate;
    property CodeName: WideString read Get_CodeName;
    property OutlineChildren: Tasks read Get_OutlineChildren;
    property CostVariance: OleVariant read Get_CostVariance;
    property ProjectSummaryTask: Task read Get_ProjectSummaryTask;
    property RemainingCost: OleVariant read Get_RemainingCost;
    property BCWP: OleVariant read Get_BCWP;
    property BCWS: OleVariant read Get_BCWS;
    property SV: OleVariant read Get_SV;
    property CV: OleVariant read Get_CV;
    property OutlineNumber: WideString read Get_OutlineNumber;
    property Critical: OleVariant read Get_Critical;
    property FreeSlack: OleVariant read Get_FreeSlack;
    property TotalSlack: OleVariant read Get_TotalSlack;
    property UniqueID: Integer read Get_UniqueID;
    property OutlineLevel: SYSINT read Get_OutlineLevel;
    property BaselineDuration: OleVariant read Get_BaselineDuration;
    property DurationVariance: OleVariant read Get_DurationVariance;
    property EarlyStart: OleVariant read Get_EarlyStart;
    property EarlyFinish: OleVariant read Get_EarlyFinish;
    property LateStart: OleVariant read Get_LateStart;
    property StartVariance: OleVariant read Get_StartVariance;
    property FinishVariance: OleVariant read Get_FinishVariance;
    property Project: OleVariant read Get_Project;
    property Milestone: OleVariant read Get_Milestone;
    property RemainingDuration: OleVariant read Get_RemainingDuration;
    property PercentComplete: OleVariant read Get_PercentComplete;
    property Start: OleVariant read Get_Start;
    property Finish: OleVariant read Get_Finish;
    property ResourceNames: OleVariant read Get_ResourceNames;
    property ResourceInitials: OleVariant read Get_ResourceInitials;
    property Resume: OleVariant read Get_Resume;
    property Stop: OleVariant read Get_Stop;
    property ResumeNoEarlierThan: OleVariant read Get_ResumeNoEarlierThan;
    property ConstraintType: OleVariant read Get_ConstraintType;
    property ConstraintDate: OleVariant read Get_ConstraintDate;
    property ActualCost: OleVariant read Get_ActualCost;
    property Cost: OleVariant read Get_Cost;
    property Created: OleVariant read Get_Created;
    property ActualDuration: OleVariant read Get_ActualDuration;
    property Duration: OleVariant read Get_Duration;
    property LateFinish: OleVariant read Get_LateFinish;
    property ActualFinish: OleVariant read Get_ActualFinish;
    property Objects: Integer read Get_Objects;
    property RemainingWork: OleVariant read Get_RemainingWork;
    property ResourceGroup: OleVariant read Get_ResourceGroup;
    property ActualStart: OleVariant read Get_ActualStart;
    property Summary: OleVariant read Get_Summary;
    property Template: WideString read Get_Template;
    property UpdateNeeded: OleVariant read Get_UpdateNeeded;
    property Work: OleVariant read Get_Work;
    property WorkVariance: OleVariant read Get_WorkVariance;
    property LinkedFields: OleVariant read Get_LinkedFields;
    property Confirmed: OleVariant read Get_Confirmed;
    property ReadOnly: WordBool read Get_ReadOnly;
    property HasPassword: WordBool read Get_HasPassword;
    property WriteReserved: WordBool read Get_WriteReserved;
    property Application: Application read Get_Application;
    property Parent: IDispatch read Get_Parent;
    property Index: OleVariant read Get_Index;
    property MapList: List read Get_MapList;
    property Tasks: Tasks read Get_Tasks;
    property Resources: Resources read Get_Resources;
    property BaseCalendars: Calendars read Get_BaseCalendars;
    property BuiltinDocumentProperties: IDispatch read Get_BuiltinDocumentProperties;
    property CustomDocumentProperties: IDispatch read Get_CustomDocumentProperties;
    property Container: IDispatch read Get_Container;
    property Calendar: Calendar read Get_Calendar;
    property NumberOfTasks: Integer read Get_NumberOfTasks;
    property NumberOfResources: Integer read Get_NumberOfResources;
    property FullName: WideString read Get_FullName;
    property Path: WideString read Get_Path;
    property ResourcePoolName: WideString read Get_ResourcePoolName;
    property Saved: WordBool read Get_Saved;
    property CreationDate: OleVariant read Get_CreationDate;
    property LastPrintedDate: OleVariant read Get_LastPrintedDate;
    property LastSaveDate: OleVariant read Get_LastSaveDate;
    property LastSavedBy: WideString read Get_LastSavedBy;
    property RevisionNumber: WideString read Get_RevisionNumber;
    property ViewList: List read Get_ViewList;
    property TaskViewList: List read Get_TaskViewList;
    property ResourceViewList: List read Get_ResourceViewList;
    property ReadOnlyRecommended: WordBool read Get_ReadOnlyRecommended;
    property ReportList: List read Get_ReportList;
    property TaskFilterList: List read Get_TaskFilterList;
    property ResourceFilterList: List read Get_ResourceFilterList;
    property TaskTableList: List read Get_TaskTableList;
    property ResourceTableList: List read Get_ResourceTableList;
    property CurrentView: WideString read Get_CurrentView;
    property CurrentTable: WideString read Get_CurrentTable;
    property CurrentFilter: WideString read Get_CurrentFilter;
    property ID: Integer read Get_ID;
    property CommandBars: CommandBars read Get_CommandBars;
    property UserControl: WordBool read Get_UserControl;
    property VBProject: VBProject read Get_VBProject;
    property Subprojects: Subprojects read Get_Subprojects;
    property CurrentGroup: WideString read Get_CurrentGroup;
    property TaskGroupList: List read Get_TaskGroupList;
    property ResourceGroupList: List read Get_ResourceGroupList;
    property TaskGroups: TaskGroups read Get_TaskGroups;
    property ResourceGroups: ResourceGroups read Get_ResourceGroups;
    property ProjectNotes: WideString read Get_ProjectNotes write Set_ProjectNotes;
    property ScheduleFromStart: WordBool read Get_ScheduleFromStart write Set_ScheduleFromStart;
    property Windows: Windows read Get_Windows write Set_Windows;
    property MinuteLabelDisplay: Smallint read Get_MinuteLabelDisplay write Set_MinuteLabelDisplay;
    property HourLabelDisplay: Smallint read Get_HourLabelDisplay write Set_HourLabelDisplay;
    property DayLabelDisplay: Smallint read Get_DayLabelDisplay write Set_DayLabelDisplay;
    property WeekLabelDisplay: Smallint read Get_WeekLabelDisplay write Set_WeekLabelDisplay;
    property YearLabelDisplay: Smallint read Get_YearLabelDisplay write Set_YearLabelDisplay;
    property MonthLabelDisplay: Smallint read Get_MonthLabelDisplay write Set_MonthLabelDisplay;
    property SpaceBeforeTimeLabels: WordBool read Get_SpaceBeforeTimeLabels write Set_SpaceBeforeTimeLabels;
    property DefaultTaskType: PjTaskFixedType read Get_DefaultTaskType write Set_DefaultTaskType;
    property DefaultEffortDriven: WordBool read Get_DefaultEffortDriven write Set_DefaultEffortDriven;
    property UseFYStartYear: WordBool read Get_UseFYStartYear write Set_UseFYStartYear;
    property AutoFilter: WordBool read Get_AutoFilter write Set_AutoFilter;
    property HonorConstraints: WordBool read Get_HonorConstraints write Set_HonorConstraints;
    property MultipleCriticalPaths: WordBool read Get_MultipleCriticalPaths write Set_MultipleCriticalPaths;
    property LevelEntireProject: WordBool read Get_LevelEntireProject write Set_LevelEntireProject;
    property DefaultFixedCostAccrual: PjAccrueAt read Get_DefaultFixedCostAccrual write Set_DefaultFixedCostAccrual;
    property SpreadCostsToStatusDate: WordBool read Get_SpreadCostsToStatusDate write Set_SpreadCostsToStatusDate;
    property SpreadPercentCompleteToStatusDate: WordBool read Get_SpreadPercentCompleteToStatusDate write Set_SpreadPercentCompleteToStatusDate;
    property AutoCalcCosts: WordBool read Get_AutoCalcCosts write Set_AutoCalcCosts;
    property ShowExternalSuccessors: WordBool read Get_ShowExternalSuccessors write Set_ShowExternalSuccessors;
    property ShowExternalPredecessors: WordBool read Get_ShowExternalPredecessors write Set_ShowExternalPredecessors;
    property ShowCrossProjectLinksInfo: WordBool read Get_ShowCrossProjectLinksInfo write Set_ShowCrossProjectLinksInfo;
    property AcceptNewExternalData: WordBool read Get_AcceptNewExternalData write Set_AcceptNewExternalData;
    property PhoneticType: PjPhoneticType read Get_PhoneticType write Set_PhoneticType;
    property WorkgroupMessages: PjWorkgroupMessages read Get_WorkgroupMessages write Set_WorkgroupMessages;
    property ServerURL: WideString read Get_ServerURL write Set_ServerURL;
    property ReceiveNotifications: WordBool read Get_ReceiveNotifications write Set_ReceiveNotifications;
    property SendHyperlinkNote: WordBool read Get_SendHyperlinkNote write Set_SendHyperlinkNote;
    property HyperlinkColor: PjColor read Get_HyperlinkColor write Set_HyperlinkColor;
    property FollowedHyperlinkColor: PjColor read Get_FollowedHyperlinkColor write Set_FollowedHyperlinkColor;
    property UnderlineHyperlinks: WordBool read Get_UnderlineHyperlinks write Set_UnderlineHyperlinks;
    property AskForCompletedWork: PjTeamStatusCompletedWork read Get_AskForCompletedWork write Set_AskForCompletedWork;
    property TrackOvertimeWork: WordBool read Get_TrackOvertimeWork write Set_TrackOvertimeWork;
    property TeamMembersCanDeclineTasks: WordBool read Get_TeamMembersCanDeclineTasks write Set_TeamMembersCanDeclineTasks;
    property ShowEstimatedDuration: WordBool read Get_ShowEstimatedDuration write Set_ShowEstimatedDuration;
    property NewTasksEstimated: WordBool read Get_NewTasksEstimated write Set_NewTasksEstimated;
    property WBSCodeGenerate: WordBool read Get_WBSCodeGenerate write Set_WBSCodeGenerate;
    property WBSVerifyUniqueness: WordBool read Get_WBSVerifyUniqueness write Set_WBSVerifyUniqueness;
    property UpdateProjOnSave: WordBool read Get_UpdateProjOnSave write Set_UpdateProjOnSave;
    property ServerIdentification: PjAuthentication read Get_ServerIdentification write Set_ServerIdentification;
    property VBASigned: WordBool read Get_VBASigned write Set_VBASigned;
    property ExpandDatabaseTimephasedData: WordBool read Get_ExpandDatabaseTimephasedData write Set_ExpandDatabaseTimephasedData;
    property CurrencySymbol: WideString read Get_CurrencySymbol write Set_CurrencySymbol;
    property CurrencySymbolPosition: PjPlacement read Get_CurrencySymbolPosition write Set_CurrencySymbolPosition;
    property CurrencyDigits: Smallint read Get_CurrencyDigits write Set_CurrencyDigits;
    property ShowCriticalSlack: Integer read Get_ShowCriticalSlack write Set_ShowCriticalSlack;
    property DefaultDurationUnits: PjUnit read Get_DefaultDurationUnits write Set_DefaultDurationUnits;
    property DefaultWorkUnits: PjUnit read Get_DefaultWorkUnits write Set_DefaultWorkUnits;
    property StartOnCurrentDate: WordBool read Get_StartOnCurrentDate write Set_StartOnCurrentDate;
    property AutoTrack: WordBool read Get_AutoTrack write Set_AutoTrack;
    property AutoSplitTasks: WordBool read Get_AutoSplitTasks write Set_AutoSplitTasks;
    property AutoLinkTasks: WordBool read Get_AutoLinkTasks write Set_AutoLinkTasks;
    property HoursPerDay: Double read Get_HoursPerDay write Set_HoursPerDay;
    property HoursPerWeek: Double read Get_HoursPerWeek write Set_HoursPerWeek;
    property DaysPerMonth: Double read Get_DaysPerMonth write Set_DaysPerMonth;
    property DisplayProjectSummaryTask: WordBool read Get_DisplayProjectSummaryTask write Set_DisplayProjectSummaryTask;
    property AutoAddResources: WordBool read Get_AutoAddResources write Set_AutoAddResources;
    property StartWeekOn: PjWeekday read Get_StartWeekOn write Set_StartWeekOn;
    property StartYearIn: PjMonth read Get_StartYearIn write Set_StartYearIn;
    property AllowTaskDelegation: WordBool read Get_AllowTaskDelegation write Set_AllowTaskDelegation;
    property Name: WideString read Get_Name write Set_Name;
    property _CodeName: WideString read Get__CodeName write Set__CodeName;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TProjectProperties read GetServerProperties;
{$ENDIF}
    property OnOpen: TProjectOpen read FOnOpen write FOnOpen;
    property OnBeforeClose: TProjectBeforeClose read FOnBeforeClose write FOnBeforeClose;
    property OnBeforeSave: TProjectBeforeSave read FOnBeforeSave write FOnBeforeSave;
    property OnBeforePrint: TProjectBeforePrint read FOnBeforePrint write FOnBeforePrint;
    property OnCalculate: TProjectCalculate read FOnCalculate write FOnCalculate;
    property OnChange: TProjectChange read FOnChange write FOnChange;
    property OnActivate: TProjectActivate read FOnActivate write FOnActivate;
    property OnDeactivate: TProjectDeactivate read FOnDeactivate write FOnDeactivate;
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TProject
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TProjectProperties = class(TPersistent)
  private
    FServer:    TProject;
    function    GetDefaultInterface: _IProjectDoc;
    constructor Create(AServer: TProject);
  protected
    function Get_Manager: OleVariant;
    procedure Set_Manager(Value: OleVariant);
    function Get_Company: OleVariant;
    procedure Set_Company(Value: OleVariant);
    function Get_Author: OleVariant;
    procedure Set_Author(Value: OleVariant);
    function Get_Keywords: OleVariant;
    procedure Set_Keywords(Value: OleVariant);
    function Get_ProjectNotes: WideString;
    procedure Set_ProjectNotes(const Value: WideString);
    function Get_ProjectStart: OleVariant;
    procedure Set_ProjectStart(Value: OleVariant);
    function Get_ProjectFinish: OleVariant;
    procedure Set_ProjectFinish(Value: OleVariant);
    function Get_CurrentDate: OleVariant;
    procedure Set_CurrentDate(Value: OleVariant);
    function Get_StatusDate: OleVariant;
    procedure Set_StatusDate(Value: OleVariant);
    function Get_ScheduleFromStart: WordBool;
    procedure Set_ScheduleFromStart(Value: WordBool);
    function Get_Comments: OleVariant;
    procedure Set_Comments(Value: OleVariant);
    function Get_Title: OleVariant;
    procedure Set_Title(Value: OleVariant);
    function Get_Subject: OleVariant;
    procedure Set_Subject(Value: OleVariant);
    function Get_Windows: Windows;
    procedure Set_Windows(const Value: Windows);
    function Get_MinuteLabelDisplay: Smallint;
    procedure Set_MinuteLabelDisplay(Value: Smallint);
    function Get_HourLabelDisplay: Smallint;
    procedure Set_HourLabelDisplay(Value: Smallint);
    function Get_DayLabelDisplay: Smallint;
    procedure Set_DayLabelDisplay(Value: Smallint);
    function Get_WeekLabelDisplay: Smallint;
    procedure Set_WeekLabelDisplay(Value: Smallint);
    function Get_YearLabelDisplay: Smallint;
    procedure Set_YearLabelDisplay(Value: Smallint);
    function Get_MonthLabelDisplay: Smallint;
    procedure Set_MonthLabelDisplay(Value: Smallint);
    function Get_SpaceBeforeTimeLabels: WordBool;
    procedure Set_SpaceBeforeTimeLabels(Value: WordBool);
    function Get_DefaultTaskType: PjTaskFixedType;
    procedure Set_DefaultTaskType(Value: PjTaskFixedType);
    function Get_DefaultEffortDriven: WordBool;
    procedure Set_DefaultEffortDriven(Value: WordBool);
    function Get_UseFYStartYear: WordBool;
    procedure Set_UseFYStartYear(Value: WordBool);
    function Get_AutoFilter: WordBool;
    procedure Set_AutoFilter(Value: WordBool);
    function Get_HonorConstraints: WordBool;
    procedure Set_HonorConstraints(Value: WordBool);
    function Get_MultipleCriticalPaths: WordBool;
    procedure Set_MultipleCriticalPaths(Value: WordBool);
    function Get_LevelFromDate: OleVariant;
    procedure Set_LevelFromDate(Value: OleVariant);
    function Get_LevelToDate: OleVariant;
    procedure Set_LevelToDate(Value: OleVariant);
    function Get_LevelEntireProject: WordBool;
    procedure Set_LevelEntireProject(Value: WordBool);
    function Get_DefaultFixedCostAccrual: PjAccrueAt;
    procedure Set_DefaultFixedCostAccrual(Value: PjAccrueAt);
    function Get_SpreadCostsToStatusDate: WordBool;
    procedure Set_SpreadCostsToStatusDate(Value: WordBool);
    function Get_SpreadPercentCompleteToStatusDate: WordBool;
    procedure Set_SpreadPercentCompleteToStatusDate(Value: WordBool);
    function Get_AutoCalcCosts: WordBool;
    procedure Set_AutoCalcCosts(Value: WordBool);
    function Get_ShowExternalSuccessors: WordBool;
    procedure Set_ShowExternalSuccessors(Value: WordBool);
    function Get_ShowExternalPredecessors: WordBool;
    procedure Set_ShowExternalPredecessors(Value: WordBool);
    function Get_ShowCrossProjectLinksInfo: WordBool;
    procedure Set_ShowCrossProjectLinksInfo(Value: WordBool);
    function Get_AcceptNewExternalData: WordBool;
    procedure Set_AcceptNewExternalData(Value: WordBool);
    function Get_PhoneticType: PjPhoneticType;
    procedure Set_PhoneticType(Value: PjPhoneticType);
    function Get_WorkgroupMessages: PjWorkgroupMessages;
    procedure Set_WorkgroupMessages(Value: PjWorkgroupMessages);
    function Get_ServerURL: WideString;
    procedure Set_ServerURL(const Value: WideString);
    function Get_ServerPath: WideString;
    procedure Set_ServerPath(const Value: WideString);
    function Get_ReceiveNotifications: WordBool;
    procedure Set_ReceiveNotifications(Value: WordBool);
    function Get_SendHyperlinkNote: WordBool;
    procedure Set_SendHyperlinkNote(Value: WordBool);
    function Get_HyperlinkColor: PjColor;
    procedure Set_HyperlinkColor(Value: PjColor);
    function Get_FollowedHyperlinkColor: PjColor;
    procedure Set_FollowedHyperlinkColor(Value: PjColor);
    function Get_UnderlineHyperlinks: WordBool;
    procedure Set_UnderlineHyperlinks(Value: WordBool);
    function Get_AskForCompletedWork: PjTeamStatusCompletedWork;
    procedure Set_AskForCompletedWork(Value: PjTeamStatusCompletedWork);
    function Get_TrackOvertimeWork: WordBool;
    procedure Set_TrackOvertimeWork(Value: WordBool);
    function Get_TeamMembersCanDeclineTasks: WordBool;
    procedure Set_TeamMembersCanDeclineTasks(Value: WordBool);
    function Get_ShowEstimatedDuration: WordBool;
    procedure Set_ShowEstimatedDuration(Value: WordBool);
    function Get_NewTasksEstimated: WordBool;
    procedure Set_NewTasksEstimated(Value: WordBool);
    function Get_WBSCodeGenerate: WordBool;
    procedure Set_WBSCodeGenerate(Value: WordBool);
    function Get_WBSVerifyUniqueness: WordBool;
    procedure Set_WBSVerifyUniqueness(Value: WordBool);
    function Get_UpdateProjOnSave: WordBool;
    procedure Set_UpdateProjOnSave(Value: WordBool);
    function Get_ServerIdentification: PjAuthentication;
    procedure Set_ServerIdentification(Value: PjAuthentication);
    function Get_VBASigned: WordBool;
    procedure Set_VBASigned(Value: WordBool);
    function Get_ExpandDatabaseTimephasedData: WordBool;
    procedure Set_ExpandDatabaseTimephasedData(Value: WordBool);
    function Get_DatabaseProjectUniqueID: OleVariant;
    procedure Set_DatabaseProjectUniqueID(Value: OleVariant);
    function Get_ActualWork: OleVariant;
    procedure Set_ActualWork(Value: OleVariant);
    function Get_Cost1: OleVariant;
    procedure Set_Cost1(Value: OleVariant);
    function Get_Cost2: OleVariant;
    procedure Set_Cost2(Value: OleVariant);
    function Get_Cost3: OleVariant;
    procedure Set_Cost3(Value: OleVariant);
    function Get_BaselineWork: OleVariant;
    procedure Set_BaselineWork(Value: OleVariant);
    function Get_BaselineCost: OleVariant;
    procedure Set_BaselineCost(Value: OleVariant);
    function Get_FixedCost: OleVariant;
    procedure Set_FixedCost(Value: OleVariant);
    function Get_WBS: WideString;
    procedure Set_WBS(const Value: WideString);
    function Get_Delay: OleVariant;
    procedure Set_Delay(Value: OleVariant);
    function Get_Priority: OleVariant;
    procedure Set_Priority(Value: OleVariant);
    function Get_Duration1: OleVariant;
    procedure Set_Duration1(Value: OleVariant);
    function Get_Duration2: OleVariant;
    procedure Set_Duration2(Value: OleVariant);
    function Get_Duration3: OleVariant;
    procedure Set_Duration3(Value: OleVariant);
    function Get_PercentWorkComplete: OleVariant;
    procedure Set_PercentWorkComplete(Value: OleVariant);
    function Get_FixedDuration: OleVariant;
    procedure Set_FixedDuration(Value: OleVariant);
    function Get_BaselineStart: OleVariant;
    procedure Set_BaselineStart(Value: OleVariant);
    function Get_BaselineFinish: OleVariant;
    procedure Set_BaselineFinish(Value: OleVariant);
    function Get_Text1: WideString;
    procedure Set_Text1(const Value: WideString);
    function Get_Start1: OleVariant;
    procedure Set_Start1(Value: OleVariant);
    function Get_Finish1: OleVariant;
    procedure Set_Finish1(Value: OleVariant);
    function Get_Text2: WideString;
    procedure Set_Text2(const Value: WideString);
    function Get_Start2: OleVariant;
    procedure Set_Start2(Value: OleVariant);
    function Get_Finish2: OleVariant;
    procedure Set_Finish2(Value: OleVariant);
    function Get_Text3: WideString;
    procedure Set_Text3(const Value: WideString);
    function Get_Start3: OleVariant;
    procedure Set_Start3(Value: OleVariant);
    function Get_Finish3: OleVariant;
    procedure Set_Finish3(Value: OleVariant);
    function Get_Text4: WideString;
    procedure Set_Text4(const Value: WideString);
    function Get_Start4: OleVariant;
    procedure Set_Start4(Value: OleVariant);
    function Get_Finish4: OleVariant;
    procedure Set_Finish4(Value: OleVariant);
    function Get_Text5: WideString;
    procedure Set_Text5(const Value: WideString);
    function Get_Start5: OleVariant;
    procedure Set_Start5(Value: OleVariant);
    function Get_Finish5: OleVariant;
    procedure Set_Finish5(Value: OleVariant);
    function Get_Text6: WideString;
    procedure Set_Text6(const Value: WideString);
    function Get_Text7: WideString;
    procedure Set_Text7(const Value: WideString);
    function Get_Text8: WideString;
    procedure Set_Text8(const Value: WideString);
    function Get_Text9: WideString;
    procedure Set_Text9(const Value: WideString);
    function Get_Text10: WideString;
    procedure Set_Text10(const Value: WideString);
    function Get_Marked: OleVariant;
    procedure Set_Marked(Value: OleVariant);
    function Get_Flag1: OleVariant;
    procedure Set_Flag1(Value: OleVariant);
    function Get_Flag2: OleVariant;
    procedure Set_Flag2(Value: OleVariant);
    function Get_Flag3: OleVariant;
    procedure Set_Flag3(Value: OleVariant);
    function Get_Flag4: OleVariant;
    procedure Set_Flag4(Value: OleVariant);
    function Get_Flag5: OleVariant;
    procedure Set_Flag5(Value: OleVariant);
    function Get_Flag6: OleVariant;
    procedure Set_Flag6(Value: OleVariant);
    function Get_Flag7: OleVariant;
    procedure Set_Flag7(Value: OleVariant);
    function Get_Flag8: OleVariant;
    procedure Set_Flag8(Value: OleVariant);
    function Get_Flag9: OleVariant;
    procedure Set_Flag9(Value: OleVariant);
    function Get_Flag10: OleVariant;
    procedure Set_Flag10(Value: OleVariant);
    function Get_Rollup: OleVariant;
    procedure Set_Rollup(Value: OleVariant);
    function Get_Number1: Double;
    procedure Set_Number1(Value: Double);
    function Get_Number2: Double;
    procedure Set_Number2(Value: Double);
    function Get_Number3: Double;
    procedure Set_Number3(Value: Double);
    function Get_Number4: Double;
    procedure Set_Number4(Value: Double);
    function Get_Number5: Double;
    procedure Set_Number5(Value: Double);
    function Get_Notes: WideString;
    procedure Set_Notes(const Value: WideString);
    function Get_Contact: WideString;
    procedure Set_Contact(const Value: WideString);
    function Get_HideBar: OleVariant;
    procedure Set_HideBar(Value: OleVariant);
    function Get_CurrencySymbol: WideString;
    procedure Set_CurrencySymbol(const Value: WideString);
    function Get_CurrencySymbolPosition: PjPlacement;
    procedure Set_CurrencySymbolPosition(Value: PjPlacement);
    function Get_CurrencyDigits: Smallint;
    procedure Set_CurrencyDigits(Value: Smallint);
    function Get_ShowCriticalSlack: Integer;
    procedure Set_ShowCriticalSlack(Value: Integer);
    function Get_DefaultDurationUnits: PjUnit;
    procedure Set_DefaultDurationUnits(Value: PjUnit);
    function Get_DefaultWorkUnits: PjUnit;
    procedure Set_DefaultWorkUnits(Value: PjUnit);
    function Get_StartOnCurrentDate: WordBool;
    procedure Set_StartOnCurrentDate(Value: WordBool);
    function Get_AutoTrack: WordBool;
    procedure Set_AutoTrack(Value: WordBool);
    function Get_AutoSplitTasks: WordBool;
    procedure Set_AutoSplitTasks(Value: WordBool);
    function Get_AutoLinkTasks: WordBool;
    procedure Set_AutoLinkTasks(Value: WordBool);
    function Get_DefaultStartTime: OleVariant;
    procedure Set_DefaultStartTime(Value: OleVariant);
    function Get_DefaultFinishTime: OleVariant;
    procedure Set_DefaultFinishTime(Value: OleVariant);
    function Get_HoursPerDay: Double;
    procedure Set_HoursPerDay(Value: Double);
    function Get_HoursPerWeek: Double;
    procedure Set_HoursPerWeek(Value: Double);
    function Get_DaysPerMonth: Double;
    procedure Set_DaysPerMonth(Value: Double);
    function Get_DefaultResourceStandardRate: OleVariant;
    procedure Set_DefaultResourceStandardRate(Value: OleVariant);
    function Get_DefaultResourceOvertimeRate: OleVariant;
    procedure Set_DefaultResourceOvertimeRate(Value: OleVariant);
    function Get_DisplayProjectSummaryTask: WordBool;
    procedure Set_DisplayProjectSummaryTask(Value: WordBool);
    function Get_AutoAddResources: WordBool;
    procedure Set_AutoAddResources(Value: WordBool);
    function Get_StartWeekOn: PjWeekday;
    procedure Set_StartWeekOn(Value: PjWeekday);
    function Get_StartYearIn: PjMonth;
    procedure Set_StartYearIn(Value: PjMonth);
    function Get_AllowTaskDelegation: WordBool;
    procedure Set_AllowTaskDelegation(Value: WordBool);
    function Get_Name: WideString;
    procedure Set_Name(const Value: WideString);
    function  Get__CodeName: WideString;
    function  Set__CodeName(const Param1: WideString): HResult;
    function  Get_CodeName: WideString;
    function  Get_OutlineChildren: Tasks;
    function  Get_CostVariance: OleVariant;
    function  Get_ProjectSummaryTask: Task;
    function  Get_RemainingCost: OleVariant;
    function  Get_BCWP: OleVariant;
    function  Get_BCWS: OleVariant;
    function  Get_SV: OleVariant;
    function  Get_CV: OleVariant;
    function  Get_OutlineNumber: WideString;
    function  Get_Critical: OleVariant;
    function  Get_FreeSlack: OleVariant;
    function  Get_TotalSlack: OleVariant;
    function  Get_UniqueID: Integer;
    function  Get_OutlineLevel: SYSINT;
    function  Get_BaselineDuration: OleVariant;
    function  Get_DurationVariance: OleVariant;
    function  Get_EarlyStart: OleVariant;
    function  Get_EarlyFinish: OleVariant;
    function  Get_LateStart: OleVariant;
    function  Get_StartVariance: OleVariant;
    function  Get_FinishVariance: OleVariant;
    function  Get_Project: OleVariant;
    function  Get_Milestone: OleVariant;
    function  Get_RemainingDuration: OleVariant;
    function  Get_PercentComplete: OleVariant;
    function  Get_Start: OleVariant;
    function  Get_Finish: OleVariant;
    function  Get_ResourceNames: OleVariant;
    function  Get_ResourceInitials: OleVariant;
    function  Get_Resume: OleVariant;
    function  Get_Stop: OleVariant;
    function  Get_ResumeNoEarlierThan: OleVariant;
    function  Get_ConstraintType: OleVariant;
    function  Get_ConstraintDate: OleVariant;
    function  Get_ActualCost: OleVariant;
    function  Get_Cost: OleVariant;
    function  Get_Created: OleVariant;
    function  Get_ActualDuration: OleVariant;
    function  Get_Duration: OleVariant;
    function  Get_LateFinish: OleVariant;
    function  Get_ActualFinish: OleVariant;
    function  Get_Objects: Integer;
    function  Get_RemainingWork: OleVariant;
    function  Get_ResourceGroup: OleVariant;
    function  Get_ActualStart: OleVariant;
    function  Get_Summary: OleVariant;
    function  Get_Template: WideString;
    function  Get_UpdateNeeded: OleVariant;
    function  Get_Work: OleVariant;
    function  Get_WorkVariance: OleVariant;
    function  Get_LinkedFields: OleVariant;
    function  Get_Confirmed: OleVariant;
    function  Get_ReadOnly: WordBool;
    function  Get_HasPassword: WordBool;
    function  Get_WriteReserved: WordBool;
    function  Get_Application: Application;
    function  Get_Parent: IDispatch;
    function  Get_Index: OleVariant;
    function  Get_MapList: List;
    function  Get_Tasks: Tasks;
    function  Get_Resources: Resources;
    function  Get_BaseCalendars: Calendars;
    function  Get_BuiltinDocumentProperties: IDispatch;
    function  Get_CustomDocumentProperties: IDispatch;
    function  Get_Container: IDispatch;
    function  Get_Calendar: Calendar;
    function  Get_NumberOfTasks: Integer;
    function  Get_NumberOfResources: Integer;
    function  Get_FullName: WideString;
    function  Get_Path: WideString;
    function  Get_ResourcePoolName: WideString;
    function  Get_Saved: WordBool;
    function  Get_CreationDate: OleVariant;
    function  Get_LastPrintedDate: OleVariant;
    function  Get_LastSaveDate: OleVariant;
    function  Get_LastSavedBy: WideString;
    function  Get_RevisionNumber: WideString;
    function  Get_ViewList: List;
    function  Get_TaskViewList: List;
    function  Get_ResourceViewList: List;
    function  Get_ReadOnlyRecommended: WordBool;
    function  Get_ReportList: List;
    function  Get_TaskFilterList: List;
    function  Get_ResourceFilterList: List;
    function  Get_TaskTableList: List;
    function  Get_ResourceTableList: List;
    function  Get_CurrentView: WideString;
    function  Get_CurrentTable: WideString;
    function  Get_CurrentFilter: WideString;
    function  Get_ID: Integer;
    function  Get_CommandBars: CommandBars;
    function  Get_UserControl: WordBool;
    function  Get_VBProject: VBProject;
    function  Get_Subprojects: Subprojects;
    function  Get_CurrentGroup: WideString;
    function  Get_TaskGroupList: List;
    function  Get_ResourceGroupList: List;
    function  Get_TaskGroups: TaskGroups;
    function  Get_ResourceGroups: ResourceGroups;
  public
    property DefaultInterface: _IProjectDoc read GetDefaultInterface;
  published
    property ProjectNotes: WideString read Get_ProjectNotes write Set_ProjectNotes;
    property ScheduleFromStart: WordBool read Get_ScheduleFromStart write Set_ScheduleFromStart;
    property Windows: Windows read Get_Windows write Set_Windows;
    property MinuteLabelDisplay: Smallint read Get_MinuteLabelDisplay write Set_MinuteLabelDisplay;
    property HourLabelDisplay: Smallint read Get_HourLabelDisplay write Set_HourLabelDisplay;
    property DayLabelDisplay: Smallint read Get_DayLabelDisplay write Set_DayLabelDisplay;
    property WeekLabelDisplay: Smallint read Get_WeekLabelDisplay write Set_WeekLabelDisplay;
    property YearLabelDisplay: Smallint read Get_YearLabelDisplay write Set_YearLabelDisplay;
    property MonthLabelDisplay: Smallint read Get_MonthLabelDisplay write Set_MonthLabelDisplay;
    property SpaceBeforeTimeLabels: WordBool read Get_SpaceBeforeTimeLabels write Set_SpaceBeforeTimeLabels;
    property DefaultTaskType: PjTaskFixedType read Get_DefaultTaskType write Set_DefaultTaskType;
    property DefaultEffortDriven: WordBool read Get_DefaultEffortDriven write Set_DefaultEffortDriven;
    property UseFYStartYear: WordBool read Get_UseFYStartYear write Set_UseFYStartYear;
    property AutoFilter: WordBool read Get_AutoFilter write Set_AutoFilter;
    property HonorConstraints: WordBool read Get_HonorConstraints write Set_HonorConstraints;
    property MultipleCriticalPaths: WordBool read Get_MultipleCriticalPaths write Set_MultipleCriticalPaths;
    property LevelEntireProject: WordBool read Get_LevelEntireProject write Set_LevelEntireProject;
    property DefaultFixedCostAccrual: PjAccrueAt read Get_DefaultFixedCostAccrual write Set_DefaultFixedCostAccrual;
    property SpreadCostsToStatusDate: WordBool read Get_SpreadCostsToStatusDate write Set_SpreadCostsToStatusDate;
    property SpreadPercentCompleteToStatusDate: WordBool read Get_SpreadPercentCompleteToStatusDate write Set_SpreadPercentCompleteToStatusDate;
    property AutoCalcCosts: WordBool read Get_AutoCalcCosts write Set_AutoCalcCosts;
    property ShowExternalSuccessors: WordBool read Get_ShowExternalSuccessors write Set_ShowExternalSuccessors;
    property ShowExternalPredecessors: WordBool read Get_ShowExternalPredecessors write Set_ShowExternalPredecessors;
    property ShowCrossProjectLinksInfo: WordBool read Get_ShowCrossProjectLinksInfo write Set_ShowCrossProjectLinksInfo;
    property AcceptNewExternalData: WordBool read Get_AcceptNewExternalData write Set_AcceptNewExternalData;
    property PhoneticType: PjPhoneticType read Get_PhoneticType write Set_PhoneticType;
    property WorkgroupMessages: PjWorkgroupMessages read Get_WorkgroupMessages write Set_WorkgroupMessages;
    property ServerURL: WideString read Get_ServerURL write Set_ServerURL;
    property ReceiveNotifications: WordBool read Get_ReceiveNotifications write Set_ReceiveNotifications;
    property SendHyperlinkNote: WordBool read Get_SendHyperlinkNote write Set_SendHyperlinkNote;
    property HyperlinkColor: PjColor read Get_HyperlinkColor write Set_HyperlinkColor;
    property FollowedHyperlinkColor: PjColor read Get_FollowedHyperlinkColor write Set_FollowedHyperlinkColor;
    property UnderlineHyperlinks: WordBool read Get_UnderlineHyperlinks write Set_UnderlineHyperlinks;
    property AskForCompletedWork: PjTeamStatusCompletedWork read Get_AskForCompletedWork write Set_AskForCompletedWork;
    property TrackOvertimeWork: WordBool read Get_TrackOvertimeWork write Set_TrackOvertimeWork;
    property TeamMembersCanDeclineTasks: WordBool read Get_TeamMembersCanDeclineTasks write Set_TeamMembersCanDeclineTasks;
    property ShowEstimatedDuration: WordBool read Get_ShowEstimatedDuration write Set_ShowEstimatedDuration;
    property NewTasksEstimated: WordBool read Get_NewTasksEstimated write Set_NewTasksEstimated;
    property WBSCodeGenerate: WordBool read Get_WBSCodeGenerate write Set_WBSCodeGenerate;
    property WBSVerifyUniqueness: WordBool read Get_WBSVerifyUniqueness write Set_WBSVerifyUniqueness;
    property UpdateProjOnSave: WordBool read Get_UpdateProjOnSave write Set_UpdateProjOnSave;
    property ServerIdentification: PjAuthentication read Get_ServerIdentification write Set_ServerIdentification;
    property VBASigned: WordBool read Get_VBASigned write Set_VBASigned;
    property ExpandDatabaseTimephasedData: WordBool read Get_ExpandDatabaseTimephasedData write Set_ExpandDatabaseTimephasedData;
    property CurrencySymbol: WideString read Get_CurrencySymbol write Set_CurrencySymbol;
    property CurrencySymbolPosition: PjPlacement read Get_CurrencySymbolPosition write Set_CurrencySymbolPosition;
    property CurrencyDigits: Smallint read Get_CurrencyDigits write Set_CurrencyDigits;
    property ShowCriticalSlack: Integer read Get_ShowCriticalSlack write Set_ShowCriticalSlack;
    property DefaultDurationUnits: PjUnit read Get_DefaultDurationUnits write Set_DefaultDurationUnits;
    property DefaultWorkUnits: PjUnit read Get_DefaultWorkUnits write Set_DefaultWorkUnits;
    property StartOnCurrentDate: WordBool read Get_StartOnCurrentDate write Set_StartOnCurrentDate;
    property AutoTrack: WordBool read Get_AutoTrack write Set_AutoTrack;
    property AutoSplitTasks: WordBool read Get_AutoSplitTasks write Set_AutoSplitTasks;
    property AutoLinkTasks: WordBool read Get_AutoLinkTasks write Set_AutoLinkTasks;
    property HoursPerDay: Double read Get_HoursPerDay write Set_HoursPerDay;
    property HoursPerWeek: Double read Get_HoursPerWeek write Set_HoursPerWeek;
    property DaysPerMonth: Double read Get_DaysPerMonth write Set_DaysPerMonth;
    property DisplayProjectSummaryTask: WordBool read Get_DisplayProjectSummaryTask write Set_DisplayProjectSummaryTask;
    property AutoAddResources: WordBool read Get_AutoAddResources write Set_AutoAddResources;
    property StartWeekOn: PjWeekday read Get_StartWeekOn write Set_StartWeekOn;
    property StartYearIn: PjMonth read Get_StartYearIn write Set_StartYearIn;
    property AllowTaskDelegation: WordBool read Get_AllowTaskDelegation write Set_AllowTaskDelegation;
    property Name: WideString read Get_Name write Set_Name;
    property _CodeName: WideString read Get__CodeName write Set__CodeName;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoApplication provides a Create and CreateRemote method to
// create instances of the default interface _MSProject exposed by
// the CoClass Application. The functions are intended to be used by
// clients wishing to automate the CoClass objects exposed by the
// server of this typelibrary.
// *********************************************************************//
  CoApplication = class
    class function Create: _MSProject;
    class function CreateRemote(const MachineName: string): _MSProject;
  end;

  TProjectApplicationNewProject = procedure(Sender: TObject; var pj: OleVariant) of object;
  TProjectApplicationProjectBeforeTaskDelete = procedure(Sender: TObject; var tsk: OleVariant;
                                                                          var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeResourceDelete = procedure(Sender: TObject; var res: OleVariant;
                                                                              var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeAssignmentDelete = procedure(Sender: TObject; var asg: OleVariant;
                                                                                var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeTaskChange = procedure(Sender: TObject; var tsk: OleVariant;
                                                                          Field: PjField;
                                                                          NewVal: OleVariant;
                                                                          var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeResourceChange = procedure(Sender: TObject; var res: OleVariant;
                                                                              Field: PjField;
                                                                              NewVal: OleVariant;
                                                                              var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeAssignmentChange = procedure(Sender: TObject; var asg: OleVariant;
                                                                                Field: PjAssignmentField;
                                                                                NewVal: OleVariant;
                                                                                var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeTaskNew = procedure(Sender: TObject; var pj: OleVariant;
                                                                       var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeResourceNew = procedure(Sender: TObject; var pj: OleVariant;
                                                                           var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeAssignmentNew = procedure(Sender: TObject; var pj: OleVariant;
                                                                             var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeClose = procedure(Sender: TObject; var pj: OleVariant;
                                                                     var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforePrint = procedure(Sender: TObject; var pj: OleVariant;
                                                                     var Cancel: OleVariant) of object;
  TProjectApplicationProjectBeforeSave = procedure(Sender: TObject; var pj: OleVariant;
                                                                    SaveAsUi: WordBool;
                                                                    var Cancel: OleVariant) of object;
  TProjectApplicationProjectCalculate = procedure(Sender: TObject; var pj: OleVariant) of object;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TProjectApplication
// Help String      :
// Default Interface: _MSProject
// Def. Intf. DISP? : Yes
// Event   Interface: _EProjectApp
// TypeFlags        : (2) CanCreate
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TProjectApplicationProperties= class;
{$ENDIF}
  TProjectApplication = class(TOleServer)
  private
    FOnNewProject: TProjectApplicationNewProject;
    FOnProjectBeforeTaskDelete: TProjectApplicationProjectBeforeTaskDelete;
    FOnProjectBeforeResourceDelete: TProjectApplicationProjectBeforeResourceDelete;
    FOnProjectBeforeAssignmentDelete: TProjectApplicationProjectBeforeAssignmentDelete;
    FOnProjectBeforeTaskChange: TProjectApplicationProjectBeforeTaskChange;
    FOnProjectBeforeResourceChange: TProjectApplicationProjectBeforeResourceChange;
    FOnProjectBeforeAssignmentChange: TProjectApplicationProjectBeforeAssignmentChange;
    FOnProjectBeforeTaskNew: TProjectApplicationProjectBeforeTaskNew;
    FOnProjectBeforeResourceNew: TProjectApplicationProjectBeforeResourceNew;
    FOnProjectBeforeAssignmentNew: TProjectApplicationProjectBeforeAssignmentNew;
    FOnProjectBeforeClose: TProjectApplicationProjectBeforeClose;
    FOnProjectBeforePrint: TProjectApplicationProjectBeforePrint;
    FOnProjectBeforeSave: TProjectApplicationProjectBeforeSave;
    FOnProjectCalculate: TProjectApplicationProjectCalculate;
    FIntf:        _MSProject;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TProjectApplicationProperties;
    function      GetServerProperties: TProjectApplicationProperties;
{$ENDIF}
    function      GetDefaultInterface: _MSProject;
  protected
    procedure InitServerData; override;
    procedure InvokeEvent(DispID: TDispID; var Params: TVariantArray); override;
    function Get_Application: Application;
    procedure Set_Application(const Value: Application);
    function Get_Parent: Application;
    procedure Set_Parent(const Value: Application);
    function Get_Projects: Projects;
    procedure Set_Projects(const Value: Projects);
    function Get_ActiveSelection: Selection;
    procedure Set_ActiveSelection(const Value: Selection);
    function Get_ActiveCell: Cell;
    procedure Set_ActiveCell(const Value: Cell);
    function Get_ActiveProject: Project;
    procedure Set_ActiveProject(const Value: Project);
    function Get_ActiveWindow: Window;
    procedure Set_ActiveWindow(const Value: Window);
    function Get_SupportsMultipleDocuments: WordBool;
    procedure Set_SupportsMultipleDocuments(Value: WordBool);
    function Get_SupportsMultipleWindows: WordBool;
    procedure Set_SupportsMultipleWindows(Value: WordBool);
    function Get_Visible: WordBool;
    procedure Set_Visible(Value: WordBool);
    function Get_PathSeparator: WideString;
    procedure Set_PathSeparator(const Value: WideString);
    function Get_Caption: WideString;
    procedure Set_Caption(const Value: WideString);
    function Get_Name: WideString;
    procedure Set_Name(const Value: WideString);
    function Get_Path: WideString;
    procedure Set_Path(const Value: WideString);
    function Get_Version: WideString;
    procedure Set_Version(const Value: WideString);
    function Get_WindowState: PjWindowState;
    procedure Set_WindowState(Value: PjWindowState);
    function Get_Left: Integer;
    procedure Set_Left(Value: Integer);
    function Get_Top: Integer;
    procedure Set_Top(Value: Integer);
    function Get_Width: Integer;
    procedure Set_Width(Value: Integer);
    function Get_Height: Integer;
    procedure Set_Height(Value: Integer);
    function Get_DateOrder: PjDateOrder;
    procedure Set_DateOrder(Value: PjDateOrder);
    function Get_DateSeparator: WideString;
    procedure Set_DateSeparator(const Value: WideString);
    function Get_ThousandSeparator: WideString;
    procedure Set_ThousandSeparator(const Value: WideString);
    function Get_DecimalSeparator: WideString;
    procedure Set_DecimalSeparator(const Value: WideString);
    function Get_ListSeparator: WideString;
    procedure Set_ListSeparator(const Value: WideString);
    function Get_TimeSeparator: WideString;
    procedure Set_TimeSeparator(const Value: WideString);
    function Get_TwelveHourTimeFormat: WordBool;
    procedure Set_TwelveHourTimeFormat(Value: WordBool);
    function Get_AMText: WideString;
    procedure Set_AMText(const Value: WideString);
    function Get_PMText: WideString;
    procedure Set_PMText(const Value: WideString);
    function Get_DefaultView: WideString;
    procedure Set_DefaultView(const Value: WideString);
    function Get_DisplayStatusBar: WordBool;
    procedure Set_DisplayStatusBar(Value: WordBool);
    function Get_DisplayAlerts: WordBool;
    procedure Set_DisplayAlerts(Value: WordBool);
    function Get_DisplayEntryBar: WordBool;
    procedure Set_DisplayEntryBar(Value: WordBool);
    function Get_DisplayScrollBars: WordBool;
    procedure Set_DisplayScrollBars(Value: WordBool);
    function Get_DisplayWindowsInTaskbar: WordBool;
    procedure Set_DisplayWindowsInTaskbar(Value: WordBool);
    function Get_Calculation: PjCalculation;
    procedure Set_Calculation(Value: PjCalculation);
    function Get_AutoLevel: WordBool;
    procedure Set_AutoLevel(Value: WordBool);
    function Get_AutoClearLeveling: WordBool;
    procedure Set_AutoClearLeveling(Value: WordBool);
    function Get_LevelWithinSlack: WordBool;
    procedure Set_LevelWithinSlack(Value: WordBool);
    function Get_LevelOrder: PjLevelOrder;
    procedure Set_LevelOrder(Value: PjLevelOrder);
    function Get_LevelPeriodBasis: PjLevelPeriodBasis;
    procedure Set_LevelPeriodBasis(Value: PjLevelPeriodBasis);
    function Get_LevelIndividualAssignments: WordBool;
    procedure Set_LevelIndividualAssignments(Value: WordBool);
    function Get_LevelingCanSplit: WordBool;
    procedure Set_LevelingCanSplit(Value: WordBool);
    function Get_MoveAfterReturn: WordBool;
    procedure Set_MoveAfterReturn(Value: WordBool);
    function Get_DisplayScheduleMessages: WordBool;
    procedure Set_DisplayScheduleMessages(Value: WordBool);
    function Get_StartWeekOn: PjWeekday;
    procedure Set_StartWeekOn(Value: PjWeekday);
    function Get_StartYearIn: PjMonth;
    procedure Set_StartYearIn(Value: PjMonth);
    function Get_CellDragAndDrop: WordBool;
    procedure Set_CellDragAndDrop(Value: WordBool);
    function Get_UserName: WideString;
    procedure Set_UserName(const Value: WideString);
    function Get_DisplayNotesIndicator: WordBool;
    procedure Set_DisplayNotesIndicator(Value: WordBool);
    function Get_AskToUpdateLinks: WordBool;
    procedure Set_AskToUpdateLinks(Value: WordBool);
    function Get_DisplayPlanningWizard: WordBool;
    procedure Set_DisplayPlanningWizard(Value: WordBool);
    function Get_DisplayWizardUsage: WordBool;
    procedure Set_DisplayWizardUsage(Value: WordBool);
    function Get_DisplayWizardErrors: WordBool;
    procedure Set_DisplayWizardErrors(Value: WordBool);
    function Get_DisplayWizardScheduling: WordBool;
    procedure Set_DisplayWizardScheduling(Value: WordBool);
    function Get_ShowTipOfDay: WordBool;
    procedure Set_ShowTipOfDay(Value: WordBool);
    function Get_ShowToolTips: WordBool;
    procedure Set_ShowToolTips(Value: WordBool);
    function Get_ShowWelcome: WordBool;
    procedure Set_ShowWelcome(Value: WordBool);
    function Get_LoadLastFile: WordBool;
    procedure Set_LoadLastFile(Value: WordBool);
    function Get_PromptForSummaryInfo: WordBool;
    procedure Set_PromptForSummaryInfo(Value: WordBool);
    function Get_DisplayOLEIndicator: WordBool;
    procedure Set_DisplayOLEIndicator(Value: WordBool);
    function Get_DefaultDateFormat: PjDateFormat;
    procedure Set_DefaultDateFormat(Value: PjDateFormat);
    function Get_DayLeadingZero: WordBool;
    procedure Set_DayLeadingZero(Value: WordBool);
    function Get_MonthLeadingZero: WordBool;
    procedure Set_MonthLeadingZero(Value: WordBool);
    function Get_TimeLeadingZero: WordBool;
    procedure Set_TimeLeadingZero(Value: WordBool);
    function Get_CopyResourceUsageHeader: WordBool;
    procedure Set_CopyResourceUsageHeader(Value: WordBool);
    function Get_RecentFilesMaximum: Integer;
    procedure Set_RecentFilesMaximum(Value: Integer);
    function Get_DisplayRecentFiles: WordBool;
    procedure Set_DisplayRecentFiles(Value: WordBool);
    function Get_MacroVirusProtection: WordBool;
    procedure Set_MacroVirusProtection(Value: WordBool);
    function Get_ShowAssignmentUnitsAs: PjAssignmentUnits;
    procedure Set_ShowAssignmentUnitsAs(Value: PjAssignmentUnits);
    function Get_AutomaticallyFillPhoneticFields: WordBool;
    procedure Set_AutomaticallyFillPhoneticFields(Value: WordBool);
    function Get_DefaultAutoFilter: WordBool;
    procedure Set_DefaultAutoFilter(Value: WordBool);
    function Get_ShowEstimatedDuration: WordBool;
    procedure Set_ShowEstimatedDuration(Value: WordBool);
    function Get_NewTasksEstimated: WordBool;
    procedure Set_NewTasksEstimated(Value: WordBool);
    function Get_Assistant: Assistant;
    procedure Set_Assistant(const Value: Assistant);
    function Get_DisplayViewBar: WordBool;
    procedure Set_DisplayViewBar(Value: WordBool);
    function Get_VBE: VBE;
    procedure Set_VBE(const Value: VBE);
    function Get_EnableCancelKey: PjEnableCancelKey;
    procedure Set_EnableCancelKey(Value: PjEnableCancelKey);
    function Get_UserControl: WordBool;
    procedure Set_UserControl(Value: WordBool);
    function Get_UsableWidth: Double;
    procedure Set_UsableWidth(Value: Double);
    function Get_UsableHeight: Double;
    procedure Set_UsableHeight(Value: Double);
    function Get_StatusBar: OleVariant;
    procedure Set_StatusBar(Value: OleVariant);
    function Get_FileSearch: FileSearch;
    procedure Set_FileSearch(const Value: FileSearch);
    function  Get_Windows: Windows;
    function  Get_CommandBars: CommandBars;
    function  Get_AnswerWizard: AnswerWizard;
    function  Get_OperatingSystem: WideString;
    function  Get_FileFormatID(const Name: WideString; UserID: OleVariant;
                               DatabasePassWord: OleVariant): WideString;
    function  Get_FileBuildID(const Name: WideString; UserID: OleVariant;
                              DatabasePassWord: OleVariant): WideString;
    function  Get_COMAddIns: COMAddIns;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _MSProject);
    procedure Disconnect; override;
    procedure Quit(SaveChanges: PjSaveType);
    function  DateAdd(StartDate: OleVariant; Duration: OleVariant): OleVariant; overload;
    function  DateAdd(StartDate: OleVariant; Duration: OleVariant; Calendar: OleVariant): OleVariant; overload;
    function  DateSubtract(FinishDate: OleVariant; Duration: OleVariant): OleVariant; overload;
    function  DateSubtract(FinishDate: OleVariant; Duration: OleVariant; Calendar: OleVariant): OleVariant; overload;
    function  DateDifference(StartDate: OleVariant; FinishDate: OleVariant): OleVariant; overload;
    function  DateDifference(StartDate: OleVariant; FinishDate: OleVariant; Calendar: OleVariant): OleVariant; overload;
    function  DurationFormat(Duration: OleVariant): WideString; overload;
    function  DurationFormat(Duration: OleVariant; Units: OleVariant): WideString; overload;
    function  DurationValue(const Duration: WideString): OleVariant;
    function  DateFormat(Date: OleVariant): OleVariant; overload;
    function  DateFormat(Date: OleVariant; Format: OleVariant): OleVariant; overload;
    procedure MailLogon; overload;
    procedure MailLogon(Name: OleVariant); overload;
    procedure MailLogon(Name: OleVariant; Password: OleVariant); overload;
    procedure MailLogon(Name: OleVariant; Password: OleVariant; DownloadNewMail: OleVariant); overload;
    procedure MailLogoff;
    function  MailSession: WideString;
    function  MailSystem: PjMailSystem;
    function  TimescaledData(TaskID: Integer; ResourceID: Integer; StartDate: OleVariant;
                             EndDate: OleVariant; Type_: PjTimescaledData;
                             TimeScaleUnit: PjTimescaleUnit): OleVariant; overload;
    function  TimescaledData(TaskID: Integer; ResourceID: Integer; StartDate: OleVariant;
                             EndDate: OleVariant; Type_: PjTimescaledData;
                             TimeScaleUnit: PjTimescaleUnit; Count: OleVariant): OleVariant; overload;
    function  CustomFieldGetName(FieldID: PjCustomField): WideString;
    procedure Run(const Name: WideString); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                  Arg28: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                  Arg28: OleVariant; Arg29: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                  Arg28: OleVariant; Arg29: OleVariant; Arg30: OleVariant); overload;
    procedure ActivateMicrosoftApp(Index: PjMSApplication);
    function  BoxGetXPosition(TaskID: Integer): Integer; overload;
    function  BoxGetXPosition(TaskID: Integer; ProjectName: OleVariant): Integer; overload;
    function  BoxGetYPosition(TaskID: Integer): Integer; overload;
    function  BoxGetYPosition(TaskID: Integer; ProjectName: OleVariant): Integer; overload;
    function  CustomFieldGetFormula(FieldID: PjCustomField): WideString;
    function  CustomFieldValueListGetItem(FieldID: PjCustomField; Item: PjValueListItem;
                                          Index: Integer): WideString;
    function  Message(const Message: WideString; Type_: PjMessageType): WordBool; overload;
    function  Message(const Message: WideString; Type_: PjMessageType; YesText: OleVariant): WordBool; overload;
    function  Message(const Message: WideString; Type_: PjMessageType; YesText: OleVariant;
                      NoText: OleVariant): WordBool; overload;
    function  Alerts: WordBool; overload;
    function  Alerts(Show: OleVariant): WordBool; overload;
    function  FileNew: WordBool; overload;
    function  FileNew(SummaryInfo: OleVariant): WordBool; overload;
    function  FileNew(SummaryInfo: OleVariant; Template: OleVariant): WordBool; overload;
    function  FileNew(SummaryInfo: OleVariant; Template: OleVariant; FileNewDialog: OleVariant): WordBool; overload;
    function  FileProperties: WordBool;
    function  FileOpen(Name: OleVariant; ReadOnly: OleVariant; Merge: OleVariant;
                       TaskInformation: OleVariant; Table: OleVariant; Sheet: OleVariant;
                       NoAuto: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                       FormatID: OleVariant; Map: OleVariant; openPool: PjPoolOpen;
                       Password: OleVariant; WriteResPassword: OleVariant;
                       IgnoreReadOnlyRecommended: OleVariant): WordBool;
    function  Zoom: WordBool;
    function  ZoomTimescale: WordBool; overload;
    function  ZoomTimescale(Duration: OleVariant): WordBool; overload;
    function  ZoomTimescale(Duration: OleVariant; Entire: OleVariant): WordBool; overload;
    function  ZoomTimescale(Duration: OleVariant; Entire: OleVariant; Selection: OleVariant): WordBool; overload;
    function  ZoomTimescale(Duration: OleVariant; Entire: OleVariant; Selection: OleVariant;
                            Reset: OleVariant): WordBool; overload;
    function  BoxZoom: WordBool; overload;
    function  BoxZoom(Percent: OleVariant): WordBool; overload;
    function  BoxZoom(Percent: OleVariant; Entire: OleVariant): WordBool; overload;
    function  FileClose(Save: PjSaveType): WordBool; overload;
    function  FileClose(Save: PjSaveType; NoAuto: OleVariant): WordBool; overload;
    function  FileCloseAll(Save: PjSaveType): WordBool;
    function  ResourceSharing: WordBool; overload;
    function  ResourceSharing(Share: OleVariant): WordBool; overload;
    function  ResourceSharing(Share: OleVariant; Name: OleVariant): WordBool; overload;
    function  ResourceSharing(Share: OleVariant; Name: OleVariant; Pool: OleVariant): WordBool; overload;
    function  FileSave: WordBool;
    function  FileSaveAs(Name: OleVariant; Format: PjFileFormat; Backup: OleVariant;
                         ReadOnly: OleVariant; TaskInformation: OleVariant; Filtered: OleVariant;
                         Table: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                         FormatID: OleVariant; Map: OleVariant; Password: OleVariant;
                         WriteResPassword: OleVariant; ClearBaseline: OleVariant;
                         ClearActuals: OleVariant; ClearResourceRates: OleVariant;
                         ClearFixedCosts: OleVariant): WordBool;
    function  FileSaveWorkspace: WordBool; overload;
    function  FileSaveWorkspace(Name: OleVariant): WordBool; overload;
    function  FilePrint: WordBool; overload;
    function  FilePrint(FromPage: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant; OnePageWide: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant; OnePageWide: OleVariant; Preview: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant; OnePageWide: OleVariant; Preview: OleVariant;
                        Color: OleVariant): WordBool; overload;
    function  ReportPrint: WordBool; overload;
    function  ReportPrint(Name: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant; ToDate: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant; ToDate: OleVariant; Preview: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant; ToDate: OleVariant; Preview: OleVariant;
                          Color: OleVariant): WordBool; overload;
    function  FilePrintPreview: WordBool;
    function  ReportPrintPreview: WordBool; overload;
    function  ReportPrintPreview(Name: OleVariant): WordBool; overload;
    function  FilePrintSetup: WordBool; overload;
    function  FilePrintSetup(Printer: OleVariant): WordBool; overload;
    function  FilePageSetup: WordBool; overload;
    function  FilePageSetup(Name: OleVariant): WordBool; overload;
    function  FilePageSetupPage(Name: OleVariant; Portrait: OleVariant; PercentScale: OleVariant;
                                PagesTall: OleVariant; PagesWide: OleVariant;
                                PaperSize: PjPaperSize; FirstPageNumber: OleVariant): WordBool;
    function  FilePageSetupMargins: WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                   Left: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                   Left: OleVariant; Right: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                   Left: OleVariant; Right: OleVariant; Borders: OleVariant): WordBool; overload;
    function  FilePageSetupHeader(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool;
    function  FilePageSetupFooter(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool;
    function  FilePageSetupLegend(Name: OleVariant; TextWidth: OleVariant; LegendOn: OleVariant;
                                  Alignment: PjAlignment; Text: OleVariant;
                                  LabelFontName: OleVariant; LabelFontSize: OleVariant;
                                  LabelFontBold: OleVariant; LabelFontItalic: OleVariant;
                                  LabelFontUnderline: OleVariant; LabelFontColor: PjColor): WordBool;
    function  FilePageSetupView: WordBool; overload;
    function  FilePageSetupView(Name: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant; PrintNotes: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                PrintBlankPages: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                PrintBlankPages: OleVariant; BestPageFitTimescale: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar: WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                    AdditionalTasks: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                    AdditionalTasks: OleVariant; GroupAdditionalTasks: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                    AdditionalTasks: OleVariant; GroupAdditionalTasks: OleVariant;
                                    PrintNotes: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText: WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant; Italic: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                                        Underline: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                                        Underline: OleVariant; Color: OleVariant): WordBool; overload;
    function  MailOpen: WordBool; overload;
    function  MailOpen(Any: OleVariant): WordBool; overload;
    function  MailSend: WordBool; overload;
    function  MailSend(To_: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant;
                       SaveCopy: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant;
                       SaveCopy: OleVariant; AddRecipient: OleVariant): WordBool; overload;
    function  MailSendScheduleNote: WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant; IncludePicture: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant; IncludePicture: OleVariant;
                                   Body: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant; IncludePicture: OleVariant;
                                   Body: OleVariant; Subject: OleVariant): WordBool; overload;
    function  MailPostDocument: WordBool;
    function  ODBCManageDataSources: WordBool;
    function  ODBCCreateDataSource: WordBool;
    function  MailRoutingSlip: WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                              TrackStatus: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                              TrackStatus: OleVariant; Clear: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                              TrackStatus: OleVariant; Clear: OleVariant; SendNow: OleVariant): WordBool; overload;
    function  FileLoadLast: WordBool; overload;
    function  FileLoadLast(Number: OleVariant): WordBool; overload;
    function  FileExit(Save: PjSaveType): WordBool;
    function  MenuBars: WordBool;
    function  MenuBarEdit: WordBool; overload;
    function  MenuBarEdit(Copy: OleVariant): WordBool; overload;
    function  MenuBarEdit(Copy: OleVariant; Create: OleVariant): WordBool; overload;
    function  MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant): WordBool; overload;
    function  MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant;
                          NewName: OleVariant): WordBool; overload;
    function  MenuBarApply(const Name: WideString): WordBool; overload;
    function  MenuBarApply(const Name: WideString; Default: OleVariant): WordBool; overload;
    function  MenuBarApply(const Name: WideString; Default: OleVariant; NoFiles: OleVariant): WordBool; overload;
    function  EditCut: WordBool;
    function  EditCopy: WordBool;
    function  EditCopyPicture(Object_: OleVariant; ForPrinter: OleVariant;
                              SelectedRows: OleVariant; FromDate: OleVariant; ToDate: OleVariant;
                              FileName: OleVariant; ScaleOption: PjCopyPictureScaleOption): WordBool;
    function  EditPaste: WordBool;
    function  EditPasteSpecial: WordBool; overload;
    function  EditPasteSpecial(Link: OleVariant): WordBool; overload;
    function  EditPasteSpecial(Link: OleVariant; Type_: OleVariant): WordBool; overload;
    function  EditPasteSpecial(Link: OleVariant; Type_: OleVariant; DisplayAsIcon: OleVariant): WordBool; overload;
    function  EditClearFormats: WordBool;
    function  EditClear: WordBool; overload;
    function  EditClear(Contents: OleVariant): WordBool; overload;
    function  EditClear(Contents: OleVariant; Formats: OleVariant): WordBool; overload;
    function  EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant): WordBool; overload;
    function  EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant;
                        Hyperlinks: OleVariant): WordBool; overload;
    function  RowClear: WordBool;
    function  DDEPasteLink: WordBool;
    function  EditDelete: WordBool;
    function  ColumnDelete: WordBool;
    function  RowDelete: WordBool;
    function  ObjectVerb: WordBool; overload;
    function  ObjectVerb(Verb: OleVariant): WordBool; overload;
    function  ObjectLinks: WordBool;
    function  ObjectChangeIcon: WordBool;
    function  ObjectConvert: WordBool;
    function  EditInsert: WordBool;
    function  ColumnInsert: WordBool;
    function  RowInsert: WordBool;
    function  LinkTasks: WordBool;
    function  LinkTasksEdit(From: Integer; To_: Integer): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                            Lag: OleVariant): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                            Lag: OleVariant; PredecessorProjectName: OleVariant): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                            Lag: OleVariant; PredecessorProjectName: OleVariant;
                            SuccessorProjectName: OleVariant): WordBool; overload;
    function  UnlinkTasks: WordBool;
    function  ResourceAssignment(Resources: OleVariant; Operation: PjResAssignOperation;
                                 With_: OleVariant): WordBool;
    function  EditGoTo: WordBool; overload;
    function  EditGoTo(ID: OleVariant): WordBool; overload;
    function  EditGoTo(ID: OleVariant; Date: OleVariant): WordBool; overload;
    function  GotoNextOverAllocation: WordBool;
    function  InsertNotes: WordBool;
    function  Find: WordBool; overload;
    function  Find(Field: OleVariant): WordBool; overload;
    function  Find(Field: OleVariant; Test: OleVariant): WordBool; overload;
    function  Find(Field: OleVariant; Test: OleVariant; Value: OleVariant): WordBool; overload;
    function  Find(Field: OleVariant; Test: OleVariant; Value: OleVariant; Next: OleVariant): WordBool; overload;
    function  Find(Field: OleVariant; Test: OleVariant; Value: OleVariant; Next: OleVariant;
                   MatchCase: OleVariant): WordBool; overload;
    function  Replace: WordBool; overload;
    function  Replace(Field: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant; ReplaceAll: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant; ReplaceAll: OleVariant; Next: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant; ReplaceAll: OleVariant; Next: OleVariant;
                      MatchCase: OleVariant): WordBool; overload;
    function  SelectAll: WordBool;
    function  ObjectInsert: WordBool;
    function  SubscribeTo(Edition: OleVariant; Format: PjSubscribeFormat): WordBool;
    function  SubscriberOptions: WordBool; overload;
    function  SubscriberOptions(Name: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                Field: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                Field: OleVariant; Automatically: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                Field: OleVariant; Automatically: OleVariant; Action: OleVariant): WordBool; overload;
    function  CreatePublisher: WordBool; overload;
    function  CreatePublisher(Edition: OleVariant): WordBool; overload;
    function  CreatePublisher(Edition: OleVariant; Contains: OleVariant): WordBool; overload;
    function  PublisherOptions: WordBool; overload;
    function  PublisherOptions(Name: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant; Field: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant; Field: OleVariant; OnSave: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant; Field: OleVariant; OnSave: OleVariant;
                               Action: OleVariant): WordBool; overload;
    function  EditionStopAll: WordBool; overload;
    function  EditionStopAll(Stop: OleVariant): WordBool; overload;
    function  ClipboardShow: WordBool;
    function  ViewApply: WordBool; overload;
    function  ViewApply(Name: OleVariant): WordBool; overload;
    function  ViewApply(Name: OleVariant; SinglePane: OleVariant): WordBool; overload;
    function  ViewApply(Name: OleVariant; SinglePane: OleVariant; Toggle: OleVariant): WordBool; overload;
    function  ViewEditSingle: WordBool; overload;
    function  ViewEditSingle(Name: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant; HighlightFilter: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant;
                             HighlightFilter: OleVariant; Table: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant;
                             HighlightFilter: OleVariant; Table: OleVariant; Filter: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant;
                             HighlightFilter: OleVariant; Table: OleVariant; Filter: OleVariant;
                             Group: OleVariant): WordBool; overload;
    function  ViewEditCombination: WordBool; overload;
    function  ViewEditCombination(Name: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                  TopView: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                  TopView: OleVariant; BottomView: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                  TopView: OleVariant; BottomView: OleVariant;
                                  ShowInMenu: OleVariant): WordBool; overload;
    function  TableApply: WordBool; overload;
    function  TableApply(Name: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant; RowHeight: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant; RowHeight: OleVariant; ColumnPosition: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant; RowHeight: OleVariant; ColumnPosition: OleVariant;
                        AlignTitle: OleVariant): WordBool; overload;
    function  FilterApply: WordBool; overload;
    function  FilterApply(Name: OleVariant): WordBool; overload;
    function  FilterApply(Name: OleVariant; Highlight: OleVariant): WordBool; overload;
    function  FilterApply(Name: OleVariant; Highlight: OleVariant; Value1: OleVariant): WordBool; overload;
    function  FilterApply(Name: OleVariant; Highlight: OleVariant; Value1: OleVariant;
                          Value2: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant; NewName: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant; Operation: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant; Operation: OleVariant;
                         ShowInMenu: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant; Operation: OleVariant;
                         ShowInMenu: OleVariant; ShowSummaryTasks: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo: WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant; Calendar: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant; Calendar: OleVariant;
                                 StatusDate: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant; Calendar: OleVariant;
                                 StatusDate: OleVariant; Priority: OleVariant): WordBool; overload;
    function  ProjectStatistics: WordBool; overload;
    function  ProjectStatistics(Project: OleVariant): WordBool; overload;
    function  OptionsCalendar: WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant; HoursPerDay: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant; StartWeekOn: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant; StartWeekOn: OleVariant;
                              UseFYStartYear: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant; StartWeekOn: OleVariant;
                              UseFYStartYear: OleVariant; DaysPerMonth: OleVariant): WordBool; overload;
    function  OptionsEdit: WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                          SetDefaultsHyperlink: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                          SetDefaultsHyperlink: OleVariant; InCellEditing: OleVariant): WordBool; overload;
    function  OptionsGeneral: WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant;
                             DisplayRecentFiles: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant;
                             DisplayRecentFiles: OleVariant; RecentFilesMaximum: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant;
                             DisplayRecentFiles: OleVariant; RecentFilesMaximum: OleVariant;
                             FontConversion: OleVariant): WordBool; overload;
    function  OptionsSchedule: WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant; CriticalSlack: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                              HonorConstraints: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                              HonorConstraints: OleVariant; ShowEstimated: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                              HonorConstraints: OleVariant; ShowEstimated: OleVariant;
                              NewTasksEstimated: OleVariant): WordBool; overload;
    function  OptionsView: WordBool; overload;
    function  OptionsView(DefaultView: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant; CrossProjectLinksInfo: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant;
                          CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant;
                          CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant;
                          DisplayWindowsInTaskbar: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant;
                          CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant;
                          DisplayWindowsInTaskbar: OleVariant; DisplayScreentips: OleVariant): WordBool; overload;
    function  OptionsWorkgroup: WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant;
                               SetDefaultsMessaging: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant;
                               SetDefaultsMessaging: OleVariant; SetDefaultsWebServer: OleVariant): WordBool; overload;
    function  OptionsCalculation: WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant; CalcMultipleCriticalPaths: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant;
                                 CalcMultipleCriticalPaths: OleVariant; CriticalSlack: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant;
                                 CalcMultipleCriticalPaths: OleVariant; CriticalSlack: OleVariant;
                                 SetDefaults: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant;
                                 CalcMultipleCriticalPaths: OleVariant; CriticalSlack: OleVariant;
                                 SetDefaults: OleVariant; CalcInsProjLikeSummTask: OleVariant): WordBool; overload;
    function  CalculateAll: WordBool;
    function  OptionsPreferences: WordBool;
    function  ChangeWorkingTime: WordBool;
    function  BaseCalendars: WordBool;
    function  BaseCalendarCreate(const Name: WideString): WordBool; overload;
    function  BaseCalendarCreate(const Name: WideString; FromName: OleVariant): WordBool; overload;
    function  BaseCalendarRename(const FromName: WideString; const ToName: WideString): WordBool;
    function  BaseCalendarDelete(const Name: WideString): WordBool;
    function  BaseCalendarEditDays(const Name: WideString): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant; To4: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant; To4: OleVariant;
                                   From5: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant; To4: OleVariant;
                                   From5: OleVariant; To5: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString; const ResourceName: WideString): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant;
                                       To4: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant;
                                       To4: OleVariant; From5: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant;
                                       To4: OleVariant; From5: OleVariant; To5: OleVariant): WordBool; overload;
    function  BaseCalendarReset(const Name: WideString): WordBool;
    function  ResourceCalendarReset(const ProjectName: WideString; const ResourceName: WideString): WordBool; overload;
    function  ResourceCalendarReset(const ProjectName: WideString; const ResourceName: WideString;
                                    BaseCalendar: OleVariant): WordBool; overload;
    function  ResourceCalendars: WordBool;
    function  LevelingOptions: WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant; PeriodBasis: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant; PeriodBasis: OleVariant;
                              LevelIndividualAssignments: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant; PeriodBasis: OleVariant;
                              LevelIndividualAssignments: OleVariant; LevelingCanSplit: OleVariant): WordBool; overload;
    function  LevelNow: WordBool; overload;
    function  LevelNow(All: OleVariant): WordBool; overload;
    function  BaselineSave: WordBool; overload;
    function  BaselineSave(All: OleVariant): WordBool; overload;
    function  BaselineSave(All: OleVariant; Copy: OleVariant): WordBool; overload;
    function  BaselineSave(All: OleVariant; Copy: OleVariant; Into: OleVariant): WordBool; overload;
    function  UpdateProject: WordBool; overload;
    function  UpdateProject(All: OleVariant): WordBool; overload;
    function  UpdateProject(All: OleVariant; UpdateDate: OleVariant): WordBool; overload;
    function  UpdateProject(All: OleVariant; UpdateDate: OleVariant; Action: OleVariant): WordBool; overload;
    function  UpdateTasks: WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant; ActualStart: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant; ActualStart: OleVariant;
                          ActualFinish: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant; ActualStart: OleVariant;
                          ActualFinish: OleVariant; Notes: OleVariant): WordBool; overload;
    function  WindowNewWindow: WordBool; overload;
    function  WindowNewWindow(Projects: OleVariant): WordBool; overload;
    function  WindowNewWindow(Projects: OleVariant; View: OleVariant): WordBool; overload;
    function  WindowNewWindow(Projects: OleVariant; View: OleVariant; AllProjects: OleVariant): WordBool; overload;
    function  WindowNewWindow(Projects: OleVariant; View: OleVariant; AllProjects: OleVariant;
                              ShowDialog: OleVariant): WordBool; overload;
    function  WindowArrangeAll: WordBool;
    function  WindowHide: WordBool; overload;
    function  WindowHide(Name: OleVariant): WordBool; overload;
    function  WindowUnhide: WordBool; overload;
    function  WindowUnhide(Name: OleVariant): WordBool; overload;
    function  WindowActivate: WordBool; overload;
    function  WindowActivate(WindowName: OleVariant): WordBool; overload;
    function  WindowActivate(WindowName: OleVariant; DialogID: OleVariant): WordBool; overload;
    function  WindowActivate(WindowName: OleVariant; DialogID: OleVariant; TopPane: OleVariant): WordBool; overload;
    function  PageBreakSet: WordBool;
    function  PageBreakRemove: WordBool;
    function  PageBreaksRemoveAll: WordBool;
    function  ViewShowResourcesPredecessors: WordBool;
    function  ViewShowResourcesSuccessors: WordBool;
    function  ViewShowPredecessorsSuccessors: WordBool;
    function  ViewShowNotes: WordBool;
    function  ViewShowObjects: WordBool;
    function  ViewShowOverallocation: WordBool;
    function  ViewShowPercentAllocation: WordBool;
    function  ViewShowWork: WordBool;
    function  ViewShowCost: WordBool;
    function  ViewShowSchedule: WordBool;
    function  ViewShowPeakUnits: WordBool;
    function  ViewShowAvailability: WordBool;
    function  ViewShowRemainingAvailability: WordBool;
    function  ViewShowCumulativeWork: WordBool;
    function  ViewShowCumulativeCost: WordBool;
    function  PaneNext: WordBool;
    function  PaneCreate: WordBool;
    function  FormViewShow: WordBool;
    function  PaneClose: WordBool;
    function  WindowSplit: WordBool;
    function  WindowNext: WordBool; overload;
    function  WindowNext(NoWrap: OleVariant): WordBool; overload;
    function  WindowPrev: WordBool; overload;
    function  WindowPrev(NoWrap: OleVariant): WordBool; overload;
    function  DocClose: WordBool;
    function  AppMaximize: WordBool;
    function  AppMinimize: WordBool;
    function  AppMove: WordBool; overload;
    function  AppMove(XPosition: OleVariant): WordBool; overload;
    function  AppMove(XPosition: OleVariant; YPosition: OleVariant): WordBool; overload;
    function  AppMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool; overload;
    function  AppRestore: WordBool;
    function  AppSize: WordBool; overload;
    function  AppSize(Width: OleVariant): WordBool; overload;
    function  AppSize(Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  AppSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool; overload;
    function  DocMaximize: WordBool;
    function  DocMove: WordBool; overload;
    function  DocMove(XPosition: OleVariant): WordBool; overload;
    function  DocMove(XPosition: OleVariant; YPosition: OleVariant): WordBool; overload;
    function  DocMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool; overload;
    function  DocRestore: WordBool;
    function  DocSize: WordBool; overload;
    function  DocSize(Width: OleVariant): WordBool; overload;
    function  DocSize(Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  DocSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool; overload;
    function  OutlineOutdent: WordBool; overload;
    function  OutlineOutdent(Levels: OleVariant): WordBool; overload;
    function  OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel): WordBool; overload;
    function  OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel;
                               ExpandInsertedProjects: OleVariant): WordBool; overload;
    function  OutlineIndent: WordBool; overload;
    function  OutlineIndent(Levels: OleVariant): WordBool; overload;
    function  OutlineHideSubTasks: WordBool;
    function  OutlineShowSubTasks: WordBool;
    function  OutlineShowAllTasks: WordBool;
    function  SelectBeginning: WordBool; overload;
    function  SelectBeginning(Extend: OleVariant): WordBool; overload;
    function  SelectEnd: WordBool; overload;
    function  SelectEnd(Extend: OleVariant): WordBool; overload;
    function  SelectRowStart: WordBool; overload;
    function  SelectRowStart(Extend: OleVariant): WordBool; overload;
    function  SelectRowEnd: WordBool; overload;
    function  SelectRowEnd(Extend: OleVariant): WordBool; overload;
    function  SelectCellLeft: WordBool; overload;
    function  SelectCellLeft(NumCells: OleVariant): WordBool; overload;
    function  SelectCellLeft(NumCells: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectCellRight: WordBool; overload;
    function  SelectCellRight(NumCells: OleVariant): WordBool; overload;
    function  SelectCellRight(NumCells: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectCellUp: WordBool; overload;
    function  SelectCellUp(NumCells: OleVariant): WordBool; overload;
    function  SelectCellUp(NumCells: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectCellDown: WordBool; overload;
    function  SelectCellDown(NumCells: OleVariant): WordBool; overload;
    function  SelectCellDown(NumCells: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectionExtend: WordBool; overload;
    function  SelectionExtend(Extend: OleVariant): WordBool; overload;
    function  SelectionExtend(Extend: OleVariant; Add: OleVariant): WordBool; overload;
    function  ColumnBestFit: WordBool; overload;
    function  ColumnBestFit(Column: OleVariant): WordBool; overload;
    function  ColumnEdit: WordBool; overload;
    function  ColumnEdit(Column: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant; Width: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                          Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                          Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                          Width: OleVariant; Height: OleVariant; Extend: OleVariant; Add: OleVariant): WordBool; overload;
    function  SelectTimescaleRange(Row: Integer; const StartTime: WideString; Width: Smallint;
                                   Height: Integer): WordBool;
    function  SelectTaskField(Row: Integer; const Column: WideString): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                              Add: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                                  Add: OleVariant): WordBool; overload;
    function  SelectRow: WordBool; overload;
    function  SelectRow(Row: OleVariant): WordBool; overload;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant): WordBool; overload;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant): WordBool; overload;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant;
                        Extend: OleVariant): WordBool; overload;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant;
                        Extend: OleVariant; Add: OleVariant): WordBool; overload;
    function  SelectColumn: WordBool; overload;
    function  SelectColumn(Column: OleVariant): WordBool; overload;
    function  SelectColumn(Column: OleVariant; Additional: OleVariant): WordBool; overload;
    function  SelectColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                           Add: OleVariant): WordBool; overload;
    function  SelectTaskColumn: WordBool; overload;
    function  SelectTaskColumn(Column: OleVariant): WordBool; overload;
    function  SelectTaskColumn(Column: OleVariant; Additional: OleVariant): WordBool; overload;
    function  SelectTaskColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectTaskColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                               Add: OleVariant): WordBool; overload;
    function  SelectResourceColumn: WordBool; overload;
    function  SelectResourceColumn(Column: OleVariant): WordBool; overload;
    function  SelectResourceColumn(Column: OleVariant; Additional: OleVariant): WordBool; overload;
    function  SelectResourceColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectResourceColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                                   Add: OleVariant): WordBool; overload;
    function  SelectTaskCell: WordBool; overload;
    function  SelectTaskCell(Row: OleVariant): WordBool; overload;
    function  SelectTaskCell(Row: OleVariant; Column: OleVariant): WordBool; overload;
    function  SelectTaskCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; overload;
    function  SelectResourceCell: WordBool; overload;
    function  SelectResourceCell(Row: OleVariant): WordBool; overload;
    function  SelectResourceCell(Row: OleVariant; Column: OleVariant): WordBool; overload;
    function  SelectResourceCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; overload;
    function  SelectCell: WordBool; overload;
    function  SelectCell(Row: OleVariant): WordBool; overload;
    function  SelectCell(Row: OleVariant; Column: OleVariant): WordBool; overload;
    function  SelectCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; overload;
    function  SelectSheet: WordBool;
    function  DDEInitiate(const App: WideString; const Topic: WideString): WordBool;
    function  DDEExecute(const Command: WideString): WordBool; overload;
    function  DDEExecute(const Command: WideString; TimeOut: OleVariant): WordBool; overload;
    function  DDETerminate: WordBool;
    function  InformationDialog: WordBool; overload;
    function  InformationDialog(Tab: OleVariant): WordBool; overload;
    function  Form: WordBool; overload;
    function  Form(Name: OleVariant): WordBool; overload;
    function  CustomForms: WordBool;
    function  Tables: WordBool;
    function  Filters: WordBool;
    function  Macro: WordBool; overload;
    function  Macro(Name: OleVariant): WordBool; overload;
    function  FillDown: WordBool; overload;
    function  FillDown(Down: OleVariant): WordBool; overload;
    function  Views: WordBool;
    function  CalculateProject: WordBool;
    function  LevelingClear: WordBool; overload;
    function  LevelingClear(All: OleVariant): WordBool; overload;
    function  SpellingCheck: WordBool;
    function  OptionsSpelling: WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant;
                              AlwaysSuggest: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant;
                              AlwaysSuggest: OleVariant; UseCustomDictionary: OleVariant): WordBool; overload;
    function  WindowMoreWindows: WordBool;
    function  HelpContents: WordBool;
    function  HelpSearch: WordBool;
    function  HelpOnlineIndex: WordBool;
    function  HelpAbout: WordBool;
    function  HelpLaunch: WordBool; overload;
    function  HelpLaunch(FileName: OleVariant): WordBool; overload;
    function  HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant): WordBool; overload;
    function  HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant; Search: OleVariant): WordBool; overload;
    function  HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant; Search: OleVariant;
                         SearchKey: OleVariant): WordBool; overload;
    function  HelpCueCards: WordBool; overload;
    function  HelpCueCards(FileName: OleVariant): WordBool; overload;
    function  HelpCueCards(FileName: OleVariant; ContextNumber: OleVariant): WordBool; overload;
    function  HelpTopics: WordBool;
    function  HelpAnswerWizard: WordBool;
    function  HelpMSProjectFundamentals: WordBool;
    function  AutoCorrect: WordBool;
    function  HelpQuickPreview: WordBool;
    function  HelpTechnicalSupport: WordBool;
    function  HelpCreateYourProject: WordBool;
    function  HelpContextHelp: WordBool;
    function  TextStyles: WordBool; overload;
    function  TextStyles(Item: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant;
                         Italic: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant;
                         Italic: OleVariant; Underline: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant;
                         Italic: OleVariant; Underline: OleVariant; Color: OleVariant): WordBool; overload;
    function  DetailStylesFormat: WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant; CellColor: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant; CellColor: OleVariant; Pattern: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant; CellColor: OleVariant; Pattern: OleVariant;
                                 ShowInMenu: OleVariant): WordBool; overload;
    function  DetailStylesAdd(Item: PjTimescaledData): WordBool; overload;
    function  DetailStylesAdd(Item: PjTimescaledData; Position: OleVariant): WordBool; overload;
    function  DetailStylesRemove(Item: PjTimescaledData): WordBool;
    function  DetailStylesRemoveAll: WordBool;
    function  Font: WordBool; overload;
    function  Font(Name: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                   Underline: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                   Underline: OleVariant; Color: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                   Underline: OleVariant; Color: OleVariant; Reset: OleVariant): WordBool; overload;
    function  Timescale: WordBool;
    function  TimescaleEdit: WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant; Separator: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant; Separator: OleVariant;
                            MajorUseFY: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant; Separator: OleVariant;
                            MajorUseFY: OleVariant; MinorUseFY: OleVariant): WordBool; overload;
    function  Sort: WordBool; overload;
    function  Sort(Key1: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant;
                   Renumber: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant;
                   Renumber: OleVariant; Outline: OleVariant): WordBool; overload;
    function  BarBoxStyles: WordBool;
    function  GanttBarFormat: WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant; MiddleShape: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant; InsideText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant; InsideText: OleVariant;
                             Reset: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant; InsideText: OleVariant;
                             Reset: OleVariant; ProjectName: OleVariant): WordBool; overload;
    function  TimescaleNonWorking: WordBool; overload;
    function  TimescaleNonWorking(Draw: OleVariant): WordBool; overload;
    function  TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant): WordBool; overload;
    function  TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant; Color: OleVariant): WordBool; overload;
    function  TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant; Color: OleVariant;
                                  Pattern: OleVariant): WordBool; overload;
    function  BoxShowHideFields: WordBool; overload;
    function  BoxShowHideFields(Show: OleVariant): WordBool; overload;
    function  Layout: WordBool;
    function  PERTLayout: WordBool; overload;
    function  PERTLayout(Straight: OleVariant): WordBool; overload;
    function  PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant): WordBool; overload;
    function  PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                         AdjustForPageBreaks: OleVariant): WordBool; overload;
    function  PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                         AdjustForPageBreaks: OleVariant; DisplayPageBreaks: OleVariant): WordBool; overload;
    function  LayoutNow: WordBool;
    function  PERTBorders: WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant; CriticalExternalTaskStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant;
                          CriticalExternalTaskStyle: OleVariant;
                          CriticalExternalTaskColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant;
                          CriticalExternalTaskStyle: OleVariant;
                          CriticalExternalTaskColor: OleVariant;
                          NoncriticalExternalTaskStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant;
                          CriticalExternalTaskStyle: OleVariant;
                          CriticalExternalTaskColor: OleVariant;
                          NoncriticalExternalTaskStyle: OleVariant;
                          NoncriticalExternalTaskColor: OleVariant): WordBool; overload;
    function  Gridlines: WordBool;
    function  GridlinesEdit(Item: PjGridline): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                            Interval: OleVariant): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                            Interval: OleVariant; IntervalType: OleVariant): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                            Interval: OleVariant; IntervalType: OleVariant;
                            IntervalColor: OleVariant): WordBool; overload;
    function  ViewShowSelectedTasks: WordBool; overload;
    function  ViewShowSelectedTasks(Show: OleVariant): WordBool; overload;
    function  PageBreaksShow: WordBool; overload;
    function  PageBreaksShow(Show: OleVariant): WordBool; overload;
    function  FindNext: WordBool;
    function  FindPrevious: WordBool;
    function  ZoomOut: WordBool;
    function  ZoomIn: WordBool;
    function  SetField(const Field: WideString; const Value: WideString): WordBool; overload;
    function  SetField(const Field: WideString; const Value: WideString; Create: OleVariant): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant; Create: OleVariant): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant; Create: OleVariant; TaskID: OleVariant): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant; Create: OleVariant; TaskID: OleVariant;
                           ProjectName: OleVariant): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant; Create: OleVariant): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant; Create: OleVariant;
                               ResourceID: OleVariant): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant; Create: OleVariant;
                               ResourceID: OleVariant; ProjectName: OleVariant): WordBool; overload;
    function  SetActiveCell(const Value: WideString): WordBool; overload;
    function  SetActiveCell(const Value: WideString; Create: OleVariant): WordBool; overload;
    function  CheckField(const Field: WideString; const Value: WideString): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant; Field2: OleVariant): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant; Field2: OleVariant; Value2: OleVariant): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant; Field2: OleVariant; Value2: OleVariant; Test2: OleVariant): OleVariant; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant;
                               CheckField2: OleVariant): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant;
                               CheckField2: OleVariant; CheckValue2: OleVariant): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant;
                               CheckField2: OleVariant; CheckValue2: OleVariant;
                               CheckTest2: OleVariant): WordBool; overload;
    function  AppExecute: WordBool; overload;
    function  AppExecute(Window: OleVariant): WordBool; overload;
    function  AppExecute(Window: OleVariant; Command: OleVariant): WordBool; overload;
    function  AppExecute(Window: OleVariant; Command: OleVariant; Minimize: OleVariant): WordBool; overload;
    function  AppExecute(Window: OleVariant; Command: OleVariant; Minimize: OleVariant;
                         Activate: OleVariant): WordBool; overload;
    function  AppLaunch(const Application: WideString): WordBool; overload;
    function  AppLaunch(const Application: WideString; Document: OleVariant): WordBool; overload;
    function  AppLaunch(const Application: WideString; Document: OleVariant; Activate: OleVariant): WordBool; overload;
    function  DDELinksUpdate: WordBool;
    function  GotoTaskDates: WordBool;
    function  GanttBarLinks(Display: PjGanttBarLink): WordBool;
    function  GanttShowDrawings: WordBool; overload;
    function  GanttShowDrawings(Display: OleVariant): WordBool; overload;
    function  BarRounding: WordBool; overload;
    function  BarRounding(On_: OleVariant): WordBool; overload;
    function  GanttRollup: WordBool; overload;
    function  GanttRollup(AlwaysRollup: OleVariant): WordBool; overload;
    function  GanttRollup(AlwaysRollup: OleVariant; HideWhenSummaryExpanded: OleVariant): WordBool; overload;
    function  GanttBarTextDateFormat(DateFormat: PjDateFormat): WordBool;
    function  GanttBarSize(Size: PjBarSize): WordBool;
    function  GanttBarStyleDelete(const Item: WideString): WordBool;
    function  GanttBarStyleEdit(const Item: WideString): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant;
                                LeftText: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant;
                                LeftText: OleVariant; RightText: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant;
                                LeftText: OleVariant; RightText: OleVariant; InsideText: OleVariant): WordBool; overload;
    function  PERTBoxStyles: WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                            Field3: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                            Field3: OleVariant; Field4: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                            Field3: OleVariant; Field4: OleVariant; Field5: OleVariant): WordBool; overload;
    function  PERTSetTask: WordBool; overload;
    function  PERTSetTask(Create: OleVariant): WordBool; overload;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant): WordBool; overload;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant): WordBool; overload;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                          XPosition: OleVariant): WordBool; overload;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                          XPosition: OleVariant; YPosition: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles: WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant;
                                     ShowValues: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant;
                                     ShowValues: OleVariant; ShowAvailabilityLine: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant;
                                     ShowValues: OleVariant; ShowAvailabilityLine: OleVariant;
                                     PercentBarOverlap: OleVariant): WordBool; overload;
    function  ConsolidateProjects(Filenames: OleVariant; NewWindow: OleVariant;
                                  AttachToSources: OleVariant; PoolResources: OleVariant;
                                  HideSubtasks: OleVariant; openPool: PjPoolOpen;
                                  UserID: OleVariant; Password: OleVariant): WordBool;
    function  Organizer(Type_: PjOrganizer): WordBool; overload;
    function  Organizer(Type_: PjOrganizer; Task: OleVariant): WordBool; overload;
    function  OrganizerMoveItem: WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant): WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant): WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant): WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant;
                                Name: OleVariant): WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant;
                                Name: OleVariant; Task: OleVariant): WordBool; overload;
    function  OrganizerDeleteItem: WordBool; overload;
    function  OrganizerDeleteItem(Type_: OleVariant): WordBool; overload;
    function  OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant): WordBool; overload;
    function  OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant): WordBool; overload;
    function  OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  Task: OleVariant): WordBool; overload;
    function  OrganizerRenameItem: WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant): WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant): WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant): WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  NewName: OleVariant): WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  NewName: OleVariant; Task: OleVariant): WordBool; overload;
    function  RecurringTaskInsert: WordBool;
    function  CalendarTimescale: WordBool;
    function  CalendarDateBoxes: WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant;
                                BottomColor: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant;
                                BottomColor: OleVariant; TopPattern: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant;
                                BottomColor: OleVariant; TopPattern: OleVariant;
                                BottomPattern: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings: WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                   DayTitle: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                   DayTitle: OleVariant; ShowPreview: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                   DayTitle: OleVariant; ShowPreview: OleVariant;
                                   DaysPerWeek: OleVariant): WordBool; overload;
    function  CalendarDateShadingEdit(Item: PjCalendarShading): WordBool; overload;
    function  CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant): WordBool; overload;
    function  CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant;
                                      Color: OleVariant): WordBool; overload;
    function  CalendarDateShading: WordBool; overload;
    function  CalendarDateShading(BaseCalendarName: OleVariant): WordBool; overload;
    function  CalendarDateShading(BaseCalendarName: OleVariant; ResourceUniqueID: OleVariant): WordBool; overload;
    function  CalendarDateShading(BaseCalendarName: OleVariant; ResourceUniqueID: OleVariant;
                                  ProjectIndex: OleVariant): WordBool; overload;
    function  ZoomCalendar: WordBool; overload;
    function  ZoomCalendar(NumWeeks: OleVariant): WordBool; overload;
    function  ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant): WordBool; overload;
    function  ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant; EndDate: OleVariant): WordBool; overload;
    function  CalendarLayout: WordBool; overload;
    function  CalendarLayout(SortOrder: OleVariant): WordBool; overload;
    function  CalendarLayout(SortOrder: OleVariant; AutoLayout: OleVariant): WordBool; overload;
    function  CalendarBarStyles: WordBool; overload;
    function  CalendarBarStyles(BarRounding: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant; Field4: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant; Field4: OleVariant; Field5: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant; Field4: OleVariant; Field5: OleVariant;
                                    SplitPattern: OleVariant): WordBool; overload;
    function  CalendarBestFitWeekHeight: WordBool;
    function  DrawingCreate(Type_: PjShape): WordBool; overload;
    function  DrawingCreate(Type_: PjShape; Behind: OleVariant): WordBool; overload;
    function  DrawingMove: WordBool; overload;
    function  DrawingMove(Forward: OleVariant): WordBool; overload;
    function  DrawingMove(Forward: OleVariant; Full: OleVariant): WordBool; overload;
    function  DrawingReshape: WordBool;
    function  DrawingProperties: WordBool; overload;
    function  DrawingProperties(SizePositionTab: OleVariant): WordBool; overload;
    function  DrawingCycleColor: WordBool;
    function  FormatCopy: WordBool;
    function  FormatPaste: WordBool;
    function  FormatPainter: WordBool;
    function  Toolbars: WordBool; overload;
    function  Toolbars(Action: OleVariant): WordBool; overload;
    function  Toolbars(Action: OleVariant; ToolbarName: OleVariant): WordBool; overload;
    function  Toolbars(Action: OleVariant; ToolbarName: OleVariant; NewToolbarName: OleVariant): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant; FaceIndex: OleVariant): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant; FaceIndex: OleVariant; Description: OleVariant): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant; FaceIndex: OleVariant;
                                Description: OleVariant; ToolTip: OleVariant): WordBool; overload;
    function  ToolbarDeleteTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
    function  ToolbarsCustomize: WordBool;
    function  ToolbarCustomizeTool: WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant; FaceIndex: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant; FaceIndex: OleVariant;
                                   Description: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant; FaceIndex: OleVariant;
                                   Description: OleVariant; ToolTip: OleVariant): WordBool; overload;
    function  ToolbarCopyToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
    function  ToolbarPasteToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
    function  FontBold: WordBool; overload;
    function  FontBold(Set_: OleVariant): WordBool; overload;
    function  FontItalic: WordBool; overload;
    function  FontItalic(Set_: OleVariant): WordBool; overload;
    function  FontUnderLine: WordBool; overload;
    function  FontUnderLine(Set_: OleVariant): WordBool; overload;
    function  ColumnAlignment(Align: PjAlignment): WordBool;
    function  Reports: WordBool;
    function  TipOfTheDay: WordBool;
    function  FindFile: WordBool;
    function  MailUpdateProject(const DataFile: WideString): WordBool;
    function  MailSendProjectMail: WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant; ShowDialog: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant;
                                  ShowDialog: OleVariant; InstallationMessage: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant;
                                  ShowDialog: OleVariant; InstallationMessage: OleVariant;
                                  UpdateFrom: OleVariant): WordBool; overload;
    function  WebInbox: WordBool;
    function  GanttChartWizard: WordBool;
    function  DrawingToolbarShow: WordBool;
    function  ReminderSet: WordBool; overload;
    function  ReminderSet(Start: OleVariant): WordBool; overload;
    function  ReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool; overload;
    function  SchedulePlusReminderSet: WordBool; overload;
    function  SchedulePlusReminderSet(Start: OleVariant): WordBool; overload;
    function  SchedulePlusReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool; overload;
    function  CalendarTaskList: WordBool; overload;
    function  CalendarTaskList(Date: OleVariant): WordBool; overload;
    function  OutlineSymbolsToggle: WordBool; overload;
    function  OutlineSymbolsToggle(Show: OleVariant): WordBool; overload;
    function  ResourceSharingPoolAction(Action: PjPoolAction): WordBool; overload;
    function  ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant): WordBool; overload;
    function  ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant;
                                        ReadOnly: OleVariant): WordBool; overload;
    function  ResourceAddressBook: WordBool;
    function  ResourceDetails: WordBool; overload;
    function  ResourceDetails(Name: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize: WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant; FieldID: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                       FieldID: OleVariant; Title: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                       FieldID: OleVariant; Title: OleVariant;
                                       IncludeInTeamStatus: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                       FieldID: OleVariant; Title: OleVariant;
                                       IncludeInTeamStatus: OleVariant; Editable: OleVariant): WordBool; overload;
    function  FileQuit(Save: PjSaveType): WordBool;
    function  About: WordBool;
    function  DetailStylesProperties: WordBool; overload;
    function  DetailStylesProperties(AlignCellData: OleVariant): WordBool; overload;
    function  DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant): WordBool; overload;
    function  DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant;
                                     ShortLabels: OleVariant): WordBool; overload;
    function  DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant;
                                     ShortLabels: OleVariant; DisplayDetailsColumn: OleVariant): WordBool; overload;
    function  DetailStylesToggleItem(Item: PjTimescaledData): WordBool;
    function  AutoFilter: WordBool;
    function  ViewBar: WordBool;
    function  MacroShowVba: WordBool;
    function  MacroShowCode: WordBool;
    function  WebGoBack: WordBool;
    function  WebGoForward: WordBool;
    function  WebStopLoading: WordBool;
    function  WebRefresh: WordBool;
    function  WebOpenStartPage: WordBool;
    function  WebOpenSearchPage: WordBool;
    function  WebHideToolbars: WordBool; overload;
    function  WebHideToolbars(Hide: OleVariant): WordBool; overload;
    function  FollowHyperlink: WordBool; overload;
    function  FollowHyperlink(Address: OleVariant): WordBool; overload;
    function  FollowHyperlink(Address: OleVariant; SubAddress: OleVariant): WordBool; overload;
    function  FollowHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant): WordBool; overload;
    function  FollowHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant;
                              NewWindow: OleVariant): WordBool; overload;
    function  EditPasteAsHyperlink: WordBool;
    function  InsertHyperlink: WordBool; overload;
    function  InsertHyperlink(Name: OleVariant): WordBool; overload;
    function  InsertHyperlink(Name: OleVariant; Address: OleVariant): WordBool; overload;
    function  InsertHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant): WordBool; overload;
    function  InsertHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                              ScreenTip: OleVariant): WordBool; overload;
    function  EditHyperlink: WordBool; overload;
    function  EditHyperlink(Name: OleVariant): WordBool; overload;
    function  EditHyperlink(Name: OleVariant; Address: OleVariant): WordBool; overload;
    function  EditHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant): WordBool; overload;
    function  EditHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                            ScreenTip: OleVariant): WordBool; overload;
    function  WebOpenHyperlink: WordBool; overload;
    function  WebOpenHyperlink(Address: OleVariant): WordBool; overload;
    function  WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant): WordBool; overload;
    function  WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant): WordBool; overload;
    function  WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant;
                               NewWindow: OleVariant): WordBool; overload;
    function  WebCopyHyperlink: WordBool;
    function  WebAddToFavorites: WordBool; overload;
    function  WebAddToFavorites(CurrentLink: OleVariant): WordBool; overload;
    function  EditClearHyperlink: WordBool;
    function  WebSetStartPage: WordBool; overload;
    function  WebSetStartPage(Address: OleVariant): WordBool; overload;
    function  WebSetSearchPage: WordBool; overload;
    function  WebSetSearchPage(Address: OleVariant): WordBool; overload;
    function  WebOpenFavorites: WordBool;
    function  WebToolbar: WordBool; overload;
    function  WebToolbar(Show: OleVariant): WordBool; overload;
    function  SplitTask: WordBool; overload;
    function  SplitTask(Lock: OleVariant): WordBool; overload;
    function  CustomFieldRename(FieldID: PjCustomField; const NewName: WideString): WordBool; overload;
    function  CustomFieldRename(FieldID: PjCustomField; const NewName: WideString;
                                Phonetic: OleVariant): WordBool; overload;
    function  CustomizeField: WordBool;
    function  GanttShowBarSplits: WordBool; overload;
    function  GanttShowBarSplits(Display: OleVariant): WordBool; overload;
    function  CalendarShowBarSplits: WordBool; overload;
    function  CalendarShowBarSplits(Display: OleVariant): WordBool; overload;
    function  MapEdit: WordBool; overload;
    function  MapEdit(Name: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant;
                      TemplateFile: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant;
                      TemplateFile: OleVariant; IncludeImage: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant;
                      TemplateFile: OleVariant; IncludeImage: OleVariant; ImageFile: OleVariant): WordBool; overload;
    function  FillAcross: WordBool; overload;
    function  FillAcross(Right: OleVariant): WordBool; overload;
    function  LinksBetweenProjects: WordBool; overload;
    function  LinksBetweenProjects(AcceptAll: OleVariant): WordBool; overload;
    function  ToggleAssignments: WordBool;
    function  ProgressLines: WordBool;
    function  ResourceSharingPoolUpdate: WordBool; overload;
    function  ResourceSharingPoolUpdate(allSharers: OleVariant): WordBool; overload;
    function  ResourceSharingPoolRefresh: WordBool;
    function  WebHelp: WordBool; overload;
    function  WebHelp(Type_: OleVariant): WordBool; overload;
    function  AddProgressLine: WordBool;
    function  CustomizeIMEMode(FieldID: PjField; IMEMode: PjIMEMode): WordBool;
    function  DeleteFromDatabase: WordBool; overload;
    function  DeleteFromDatabase(Name: OleVariant): WordBool; overload;
    function  DeleteFromDatabase(Name: OleVariant; UserID: OleVariant): WordBool; overload;
    function  DeleteFromDatabase(Name: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant): WordBool; overload;
    function  DeleteFromDatabase(Name: OleVariant; UserID: OleVariant;
                                 DatabasePassWord: OleVariant; FormatID: OleVariant): WordBool; overload;
    function  WBSCodeRenumber: WordBool; overload;
    function  WBSCodeRenumber(All: OleVariant): WordBool; overload;
    function  WBSCodeMaskEdit(CodePrefix: OleVariant; Level: OleVariant; Sequence: PjWBSSequence;
                              Length: OleVariant; Separator: OleVariant; CodeGenerate: OleVariant;
                              VerifyUniqueness: OleVariant): WordBool;
    function  CustomOutlineCodeEdit(FieldID: PjCustomField; Level: OleVariant;
                                    Sequence: PjCustomOutlineCodeSequence; Length: OleVariant;
                                    Separator: OleVariant; OnlyLookUpTableCodes: OleVariant;
                                    OnlyCompleteCodes: OleVariant): WordBool;
    function  OptionsSave: WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant;
                          AutomaticSavePrompt: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant;
                          AutomaticSavePrompt: OleVariant; SetDefaultsDatabase: OleVariant): WordBool; overload;
    function  OfficeOnTheWeb: WordBool;
    function  FixMe: WordBool;
    function  ViewShowWorkAvailability: WordBool;
    function  ViewShowUnitAvailability: WordBool;
    function  BaselineClear: WordBool; overload;
    function  BaselineClear(All: OleVariant): WordBool; overload;
    function  BaselineClear(All: OleVariant; From: OleVariant): WordBool; overload;
    function  Groups: WordBool;
    function  GroupApply: WordBool; overload;
    function  GroupApply(Name: OleVariant): WordBool; overload;
    function  GroupBy: WordBool;
    function  LookUpTableAdd(FieldID: PjCustomField): WordBool; overload;
    function  LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant): WordBool; overload;
    function  LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant; Code: OleVariant): WordBool; overload;
    function  LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant; Code: OleVariant;
                             Description: OleVariant): WordBool; overload;
    function  BoxStylesEdit(Style: PjBoxStyle; DataTemplate: OleVariant;
                            HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                            BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                            BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern): WordBool;
    function  BoxFormat(ProjectName: OleVariant; TaskID: OleVariant; DataTemplate: OleVariant;
                        HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                        BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                        BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern;
                        Reset: OleVariant): WordBool;
    function  BarBoxFormat: WordBool;
    function  CreateWebAccount(ServerURL: OleVariant; Name: OleVariant;
                               AuthenticationType: PjAuthentication; AccountType: PjAccountType;
                               ShowDialog: OleVariant): WordBool;
    function  BoxDataTemplate(const Name: WideString; Action: PjDataTemplate): WordBool; overload;
    function  BoxDataTemplate(const Name: WideString; Action: PjDataTemplate; NewName: OleVariant): WordBool; overload;
    function  BoxDataTemplate(const Name: WideString; Action: PjDataTemplate; NewName: OleVariant;
                              Overwrite: OleVariant): WordBool; overload;
    function  BoxCellLayout(const Name: WideString): WordBool; overload;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant): WordBool; overload;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant; CellColumns: OleVariant): WordBool; overload;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant; CellColumns: OleVariant;
                            CellWidth: OleVariant): WordBool; overload;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant; CellColumns: OleVariant;
                            CellWidth: OleVariant; MergeCells: OleVariant): WordBool; overload;
    function  BoxCellEdit(const Name: WideString; Cell: PjCell; FieldName: PjField;
                          Font: OleVariant; FontSize: OleVariant; FontColor: PjColor;
                          Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                          HorizontalAlignment: PjAlignment; VerticalAlignment: PjVerticalAlignment;
                          TextLineLimit: OleVariant; ShowLabel: OleVariant; Label_: OleVariant;
                          DateFormat: PjDateFormat): WordBool;
    function  ResourceWindowsAccount: WordBool; overload;
    function  ResourceWindowsAccount(Name: OleVariant): WordBool; overload;
    function  ResourceWindowsAccount(Name: OleVariant; ShowDialog: OleVariant): WordBool; overload;
    function  SetRowHeight: WordBool; overload;
    function  SetRowHeight(Unit_: OleVariant): WordBool; overload;
    function  SetRowHeight(Unit_: OleVariant; Rows: OleVariant): WordBool; overload;
    function  SetRowHeight(Unit_: OleVariant; Rows: OleVariant; UseUniqueID: OleVariant): WordBool; overload;
    function  ComAddInsDialog: WordBool;
    function  MacroSecurity: WordBool;
    function  LayoutSelectionNow: WordBool;
    function  BoxAlign(Alignment: PjAlign): WordBool;
    function  ConvertHangulToHanja: WordBool;
    function  UpdateProjectToWeb: WordBool; overload;
    function  UpdateProjectToWeb(ServerURL: OleVariant): WordBool; overload;
    function  CustomFieldProperties(FieldID: PjCustomField; Attribute: PjCustomFieldAttribute;
                                    SummaryCalc: PjSummaryCalc): WordBool; overload;
    function  CustomFieldProperties(FieldID: PjCustomField; Attribute: PjCustomFieldAttribute;
                                    SummaryCalc: PjSummaryCalc; GraphicalIndicators: OleVariant): WordBool; overload;
    function  CustomFieldSetFormula(FieldID: PjCustomField): WordBool; overload;
    function  CustomFieldSetFormula(FieldID: PjCustomField; Formula: OleVariant): WordBool; overload;
    function  CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                      const Value: WideString; IndicatorID: PjIndicator;
                                      CriteriaList: PjCriteriaList): WordBool; overload;
    function  CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                      const Value: WideString; IndicatorID: PjIndicator;
                                      CriteriaList: PjCriteriaList; Index: OleVariant): WordBool; overload;
    function  CustomFieldIndicators(FieldID: PjCustomField): WordBool; overload;
    function  CustomFieldIndicators(FieldID: PjCustomField; SummaryInheritsNonsummary: OleVariant): WordBool; overload;
    function  CustomFieldIndicators(FieldID: PjCustomField; SummaryInheritsNonsummary: OleVariant;
                                    ProjectInheritsSummary: OleVariant): WordBool; overload;
    function  CustomFieldIndicators(FieldID: PjCustomField; SummaryInheritsNonsummary: OleVariant;
                                    ProjectInheritsSummary: OleVariant; ShowToolTips: OleVariant): WordBool; overload;
    function  CustomFieldIndicatorDelete(FieldID: PjCustomField; Index: Smallint;
                                         CriteriaList: PjCriteriaList): WordBool;
    function  CustomFieldValueList(FieldID: PjCustomField; ListDefault: OleVariant;
                                   DefaultValue: OleVariant; RestrictToList: OleVariant;
                                   AppendNew: OleVariant; PromptOnNew: OleVariant;
                                   DisplayOrder: PjListOrder): WordBool;
    function  CustomFieldValueListAdd(FieldID: PjCustomField): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant; Phonetic: OleVariant): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant; Phonetic: OleVariant;
                                      Index: OleVariant): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant; Phonetic: OleVariant;
                                      Index: OleVariant; FieldDefault: OleVariant): WordBool; overload;
    function  CustomFieldValueListDelete(FieldID: PjCustomField; Index: Smallint): WordBool;
    function  BoxLayout(LayoutMode: PjLayoutMode; LayoutScheme: PjLayoutScheme;
                        SummaryPrecedence: OleVariant; RowAlignment: PjVerticalAlignment;
                        ColumnAlignment: PjAlignment; RowSpacing: OleVariant;
                        ColumnSpacing: OleVariant; RowHeight: PjRowColSize;
                        ColumnWidth: PjRowColSize; AdjustForPageBreaks: OleVariant;
                        ShowSummaryTasks: OleVariant; ViewBackgroundColor: PjColor;
                        ViewBackgroundPattern: PjBackgroundPattern; ShowProgressMarks: OleVariant;
                        ShowPageBreaks: OleVariant; ShowIDOnly: OleVariant): WordBool;
    function  BoxLinks(Style: PjLinkStyle; ShowArrows: OleVariant; ShowLabels: OleVariant;
                       ColorMode: PjLinkColorMode; CriticalColor: PjColor; NoncriticalColor: PjColor): WordBool;
    function  SummaryTasksShow: WordBool; overload;
    function  SummaryTasksShow(Show: OleVariant): WordBool; overload;
    function  BoxProgressMarksShow: WordBool; overload;
    function  BoxProgressMarksShow(Show: OleVariant): WordBool; overload;
    function  BoxLinkLabelsShow: WordBool; overload;
    function  BoxLinkLabelsShow(Show: OleVariant): WordBool; overload;
    function  BoxLinkStyleToggle: WordBool; overload;
    function  BoxLinkStyleToggle(StraightLinks: OleVariant): WordBool; overload;
    function  LayoutRelatedNow: WordBool;
    function  BoxSet(Action: PjBoxSet): WordBool; overload;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant): WordBool; overload;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant): WordBool; overload;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                     YPosition: OleVariant): WordBool; overload;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                     YPosition: OleVariant; ProjectName: OleVariant): WordBool; overload;
    function  SetSplitBar: WordBool; overload;
    function  SetSplitBar(ShowColumns: OleVariant): WordBool; overload;
    property  DefaultInterface: _MSProject read GetDefaultInterface;
    property DisplayNotesIndicator: WordBool read Get_DisplayNotesIndicator write Set_DisplayNotesIndicator;
    property ShowTipOfDay: WordBool read Get_ShowTipOfDay write Set_ShowTipOfDay;
    property ShowToolTips: WordBool read Get_ShowToolTips write Set_ShowToolTips;
    property CopyResourceUsageHeader: WordBool read Get_CopyResourceUsageHeader write Set_CopyResourceUsageHeader;
    property MacroVirusProtection: WordBool read Get_MacroVirusProtection write Set_MacroVirusProtection;
    property StatusBar: OleVariant read Get_StatusBar write Set_StatusBar;
    property Windows: Windows read Get_Windows;
    property CommandBars: CommandBars read Get_CommandBars;
    property AnswerWizard: AnswerWizard read Get_AnswerWizard;
    property OperatingSystem: WideString read Get_OperatingSystem;
    property FileFormatID[const Name: WideString; UserID: OleVariant; DatabasePassWord: OleVariant]: WideString read Get_FileFormatID;
    property FileBuildID[const Name: WideString; UserID: OleVariant; DatabasePassWord: OleVariant]: WideString read Get_FileBuildID;
    property COMAddIns: COMAddIns read Get_COMAddIns;
    property Application: Application read Get_Application write Set_Application;
    property Parent: Application read Get_Parent write Set_Parent;
    property Projects: Projects read Get_Projects write Set_Projects;
    property ActiveSelection: Selection read Get_ActiveSelection write Set_ActiveSelection;
    property ActiveCell: Cell read Get_ActiveCell write Set_ActiveCell;
    property ActiveProject: Project read Get_ActiveProject write Set_ActiveProject;
    property ActiveWindow: Window read Get_ActiveWindow write Set_ActiveWindow;
    property SupportsMultipleDocuments: WordBool read Get_SupportsMultipleDocuments write Set_SupportsMultipleDocuments;
    property SupportsMultipleWindows: WordBool read Get_SupportsMultipleWindows write Set_SupportsMultipleWindows;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property PathSeparator: WideString read Get_PathSeparator write Set_PathSeparator;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Name: WideString read Get_Name write Set_Name;
    property Path: WideString read Get_Path write Set_Path;
    property Version: WideString read Get_Version write Set_Version;
    property WindowState: PjWindowState read Get_WindowState write Set_WindowState;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property DateOrder: PjDateOrder read Get_DateOrder write Set_DateOrder;
    property DateSeparator: WideString read Get_DateSeparator write Set_DateSeparator;
    property ThousandSeparator: WideString read Get_ThousandSeparator write Set_ThousandSeparator;
    property DecimalSeparator: WideString read Get_DecimalSeparator write Set_DecimalSeparator;
    property ListSeparator: WideString read Get_ListSeparator write Set_ListSeparator;
    property TimeSeparator: WideString read Get_TimeSeparator write Set_TimeSeparator;
    property TwelveHourTimeFormat: WordBool read Get_TwelveHourTimeFormat write Set_TwelveHourTimeFormat;
    property AMText: WideString read Get_AMText write Set_AMText;
    property PMText: WideString read Get_PMText write Set_PMText;
    property DefaultView: WideString read Get_DefaultView write Set_DefaultView;
    property DisplayStatusBar: WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
    property DisplayAlerts: WordBool read Get_DisplayAlerts write Set_DisplayAlerts;
    property DisplayEntryBar: WordBool read Get_DisplayEntryBar write Set_DisplayEntryBar;
    property DisplayScrollBars: WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
    property DisplayWindowsInTaskbar: WordBool read Get_DisplayWindowsInTaskbar write Set_DisplayWindowsInTaskbar;
    property Calculation: PjCalculation read Get_Calculation write Set_Calculation;
    property AutoLevel: WordBool read Get_AutoLevel write Set_AutoLevel;
    property AutoClearLeveling: WordBool read Get_AutoClearLeveling write Set_AutoClearLeveling;
    property LevelWithinSlack: WordBool read Get_LevelWithinSlack write Set_LevelWithinSlack;
    property LevelOrder: PjLevelOrder read Get_LevelOrder write Set_LevelOrder;
    property LevelPeriodBasis: PjLevelPeriodBasis read Get_LevelPeriodBasis write Set_LevelPeriodBasis;
    property LevelIndividualAssignments: WordBool read Get_LevelIndividualAssignments write Set_LevelIndividualAssignments;
    property LevelingCanSplit: WordBool read Get_LevelingCanSplit write Set_LevelingCanSplit;
    property MoveAfterReturn: WordBool read Get_MoveAfterReturn write Set_MoveAfterReturn;
    property DisplayScheduleMessages: WordBool read Get_DisplayScheduleMessages write Set_DisplayScheduleMessages;
    property StartWeekOn: PjWeekday read Get_StartWeekOn write Set_StartWeekOn;
    property StartYearIn: PjMonth read Get_StartYearIn write Set_StartYearIn;
    property CellDragAndDrop: WordBool read Get_CellDragAndDrop write Set_CellDragAndDrop;
    property UserName: WideString read Get_UserName write Set_UserName;
    property AskToUpdateLinks: WordBool read Get_AskToUpdateLinks write Set_AskToUpdateLinks;
    property DisplayPlanningWizard: WordBool read Get_DisplayPlanningWizard write Set_DisplayPlanningWizard;
    property DisplayWizardUsage: WordBool read Get_DisplayWizardUsage write Set_DisplayWizardUsage;
    property DisplayWizardErrors: WordBool read Get_DisplayWizardErrors write Set_DisplayWizardErrors;
    property DisplayWizardScheduling: WordBool read Get_DisplayWizardScheduling write Set_DisplayWizardScheduling;
    property ShowWelcome: WordBool read Get_ShowWelcome write Set_ShowWelcome;
    property LoadLastFile: WordBool read Get_LoadLastFile write Set_LoadLastFile;
    property PromptForSummaryInfo: WordBool read Get_PromptForSummaryInfo write Set_PromptForSummaryInfo;
    property DisplayOLEIndicator: WordBool read Get_DisplayOLEIndicator write Set_DisplayOLEIndicator;
    property DefaultDateFormat: PjDateFormat read Get_DefaultDateFormat write Set_DefaultDateFormat;
    property DayLeadingZero: WordBool read Get_DayLeadingZero write Set_DayLeadingZero;
    property MonthLeadingZero: WordBool read Get_MonthLeadingZero write Set_MonthLeadingZero;
    property TimeLeadingZero: WordBool read Get_TimeLeadingZero write Set_TimeLeadingZero;
    property RecentFilesMaximum: Integer read Get_RecentFilesMaximum write Set_RecentFilesMaximum;
    property DisplayRecentFiles: WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
    property ShowAssignmentUnitsAs: PjAssignmentUnits read Get_ShowAssignmentUnitsAs write Set_ShowAssignmentUnitsAs;
    property AutomaticallyFillPhoneticFields: WordBool read Get_AutomaticallyFillPhoneticFields write Set_AutomaticallyFillPhoneticFields;
    property DefaultAutoFilter: WordBool read Get_DefaultAutoFilter write Set_DefaultAutoFilter;
    property ShowEstimatedDuration: WordBool read Get_ShowEstimatedDuration write Set_ShowEstimatedDuration;
    property NewTasksEstimated: WordBool read Get_NewTasksEstimated write Set_NewTasksEstimated;
    property Assistant: Assistant read Get_Assistant write Set_Assistant;
    property DisplayViewBar: WordBool read Get_DisplayViewBar write Set_DisplayViewBar;
    property VBE: VBE read Get_VBE write Set_VBE;
    property EnableCancelKey: PjEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property UsableWidth: Double read Get_UsableWidth write Set_UsableWidth;
    property UsableHeight: Double read Get_UsableHeight write Set_UsableHeight;
    property FileSearch: FileSearch read Get_FileSearch write Set_FileSearch;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TProjectApplicationProperties read GetServerProperties;
{$ENDIF}
    property OnNewProject: TProjectApplicationNewProject read FOnNewProject write FOnNewProject;
    property OnProjectBeforeTaskDelete: TProjectApplicationProjectBeforeTaskDelete read FOnProjectBeforeTaskDelete write FOnProjectBeforeTaskDelete;
    property OnProjectBeforeResourceDelete: TProjectApplicationProjectBeforeResourceDelete read FOnProjectBeforeResourceDelete write FOnProjectBeforeResourceDelete;
    property OnProjectBeforeAssignmentDelete: TProjectApplicationProjectBeforeAssignmentDelete read FOnProjectBeforeAssignmentDelete write FOnProjectBeforeAssignmentDelete;
    property OnProjectBeforeTaskChange: TProjectApplicationProjectBeforeTaskChange read FOnProjectBeforeTaskChange write FOnProjectBeforeTaskChange;
    property OnProjectBeforeResourceChange: TProjectApplicationProjectBeforeResourceChange read FOnProjectBeforeResourceChange write FOnProjectBeforeResourceChange;
    property OnProjectBeforeAssignmentChange: TProjectApplicationProjectBeforeAssignmentChange read FOnProjectBeforeAssignmentChange write FOnProjectBeforeAssignmentChange;
    property OnProjectBeforeTaskNew: TProjectApplicationProjectBeforeTaskNew read FOnProjectBeforeTaskNew write FOnProjectBeforeTaskNew;
    property OnProjectBeforeResourceNew: TProjectApplicationProjectBeforeResourceNew read FOnProjectBeforeResourceNew write FOnProjectBeforeResourceNew;
    property OnProjectBeforeAssignmentNew: TProjectApplicationProjectBeforeAssignmentNew read FOnProjectBeforeAssignmentNew write FOnProjectBeforeAssignmentNew;
    property OnProjectBeforeClose: TProjectApplicationProjectBeforeClose read FOnProjectBeforeClose write FOnProjectBeforeClose;
    property OnProjectBeforePrint: TProjectApplicationProjectBeforePrint read FOnProjectBeforePrint write FOnProjectBeforePrint;
    property OnProjectBeforeSave: TProjectApplicationProjectBeforeSave read FOnProjectBeforeSave write FOnProjectBeforeSave;
    property OnProjectCalculate: TProjectApplicationProjectCalculate read FOnProjectCalculate write FOnProjectCalculate;
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TProjectApplication
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TProjectApplicationProperties = class(TPersistent)
  private
    FServer:    TProjectApplication;
    function    GetDefaultInterface: _MSProject;
    constructor Create(AServer: TProjectApplication);
  protected
    function Get_Application: Application;
    procedure Set_Application(const Value: Application);
    function Get_Parent: Application;
    procedure Set_Parent(const Value: Application);
    function Get_Projects: Projects;
    procedure Set_Projects(const Value: Projects);
    function Get_ActiveSelection: Selection;
    procedure Set_ActiveSelection(const Value: Selection);
    function Get_ActiveCell: Cell;
    procedure Set_ActiveCell(const Value: Cell);
    function Get_ActiveProject: Project;
    procedure Set_ActiveProject(const Value: Project);
    function Get_ActiveWindow: Window;
    procedure Set_ActiveWindow(const Value: Window);
    function Get_SupportsMultipleDocuments: WordBool;
    procedure Set_SupportsMultipleDocuments(Value: WordBool);
    function Get_SupportsMultipleWindows: WordBool;
    procedure Set_SupportsMultipleWindows(Value: WordBool);
    function Get_Visible: WordBool;
    procedure Set_Visible(Value: WordBool);
    function Get_PathSeparator: WideString;
    procedure Set_PathSeparator(const Value: WideString);
    function Get_Caption: WideString;
    procedure Set_Caption(const Value: WideString);
    function Get_Name: WideString;
    procedure Set_Name(const Value: WideString);
    function Get_Path: WideString;
    procedure Set_Path(const Value: WideString);
    function Get_Version: WideString;
    procedure Set_Version(const Value: WideString);
    function Get_WindowState: PjWindowState;
    procedure Set_WindowState(Value: PjWindowState);
    function Get_Left: Integer;
    procedure Set_Left(Value: Integer);
    function Get_Top: Integer;
    procedure Set_Top(Value: Integer);
    function Get_Width: Integer;
    procedure Set_Width(Value: Integer);
    function Get_Height: Integer;
    procedure Set_Height(Value: Integer);
    function Get_DateOrder: PjDateOrder;
    procedure Set_DateOrder(Value: PjDateOrder);
    function Get_DateSeparator: WideString;
    procedure Set_DateSeparator(const Value: WideString);
    function Get_ThousandSeparator: WideString;
    procedure Set_ThousandSeparator(const Value: WideString);
    function Get_DecimalSeparator: WideString;
    procedure Set_DecimalSeparator(const Value: WideString);
    function Get_ListSeparator: WideString;
    procedure Set_ListSeparator(const Value: WideString);
    function Get_TimeSeparator: WideString;
    procedure Set_TimeSeparator(const Value: WideString);
    function Get_TwelveHourTimeFormat: WordBool;
    procedure Set_TwelveHourTimeFormat(Value: WordBool);
    function Get_AMText: WideString;
    procedure Set_AMText(const Value: WideString);
    function Get_PMText: WideString;
    procedure Set_PMText(const Value: WideString);
    function Get_DefaultView: WideString;
    procedure Set_DefaultView(const Value: WideString);
    function Get_DisplayStatusBar: WordBool;
    procedure Set_DisplayStatusBar(Value: WordBool);
    function Get_DisplayAlerts: WordBool;
    procedure Set_DisplayAlerts(Value: WordBool);
    function Get_DisplayEntryBar: WordBool;
    procedure Set_DisplayEntryBar(Value: WordBool);
    function Get_DisplayScrollBars: WordBool;
    procedure Set_DisplayScrollBars(Value: WordBool);
    function Get_DisplayWindowsInTaskbar: WordBool;
    procedure Set_DisplayWindowsInTaskbar(Value: WordBool);
    function Get_Calculation: PjCalculation;
    procedure Set_Calculation(Value: PjCalculation);
    function Get_AutoLevel: WordBool;
    procedure Set_AutoLevel(Value: WordBool);
    function Get_AutoClearLeveling: WordBool;
    procedure Set_AutoClearLeveling(Value: WordBool);
    function Get_LevelWithinSlack: WordBool;
    procedure Set_LevelWithinSlack(Value: WordBool);
    function Get_LevelOrder: PjLevelOrder;
    procedure Set_LevelOrder(Value: PjLevelOrder);
    function Get_LevelPeriodBasis: PjLevelPeriodBasis;
    procedure Set_LevelPeriodBasis(Value: PjLevelPeriodBasis);
    function Get_LevelIndividualAssignments: WordBool;
    procedure Set_LevelIndividualAssignments(Value: WordBool);
    function Get_LevelingCanSplit: WordBool;
    procedure Set_LevelingCanSplit(Value: WordBool);
    function Get_MoveAfterReturn: WordBool;
    procedure Set_MoveAfterReturn(Value: WordBool);
    function Get_DisplayScheduleMessages: WordBool;
    procedure Set_DisplayScheduleMessages(Value: WordBool);
    function Get_StartWeekOn: PjWeekday;
    procedure Set_StartWeekOn(Value: PjWeekday);
    function Get_StartYearIn: PjMonth;
    procedure Set_StartYearIn(Value: PjMonth);
    function Get_CellDragAndDrop: WordBool;
    procedure Set_CellDragAndDrop(Value: WordBool);
    function Get_UserName: WideString;
    procedure Set_UserName(const Value: WideString);
    function Get_DisplayNotesIndicator: WordBool;
    procedure Set_DisplayNotesIndicator(Value: WordBool);
    function Get_AskToUpdateLinks: WordBool;
    procedure Set_AskToUpdateLinks(Value: WordBool);
    function Get_DisplayPlanningWizard: WordBool;
    procedure Set_DisplayPlanningWizard(Value: WordBool);
    function Get_DisplayWizardUsage: WordBool;
    procedure Set_DisplayWizardUsage(Value: WordBool);
    function Get_DisplayWizardErrors: WordBool;
    procedure Set_DisplayWizardErrors(Value: WordBool);
    function Get_DisplayWizardScheduling: WordBool;
    procedure Set_DisplayWizardScheduling(Value: WordBool);
    function Get_ShowTipOfDay: WordBool;
    procedure Set_ShowTipOfDay(Value: WordBool);
    function Get_ShowToolTips: WordBool;
    procedure Set_ShowToolTips(Value: WordBool);
    function Get_ShowWelcome: WordBool;
    procedure Set_ShowWelcome(Value: WordBool);
    function Get_LoadLastFile: WordBool;
    procedure Set_LoadLastFile(Value: WordBool);
    function Get_PromptForSummaryInfo: WordBool;
    procedure Set_PromptForSummaryInfo(Value: WordBool);
    function Get_DisplayOLEIndicator: WordBool;
    procedure Set_DisplayOLEIndicator(Value: WordBool);
    function Get_DefaultDateFormat: PjDateFormat;
    procedure Set_DefaultDateFormat(Value: PjDateFormat);
    function Get_DayLeadingZero: WordBool;
    procedure Set_DayLeadingZero(Value: WordBool);
    function Get_MonthLeadingZero: WordBool;
    procedure Set_MonthLeadingZero(Value: WordBool);
    function Get_TimeLeadingZero: WordBool;
    procedure Set_TimeLeadingZero(Value: WordBool);
    function Get_CopyResourceUsageHeader: WordBool;
    procedure Set_CopyResourceUsageHeader(Value: WordBool);
    function Get_RecentFilesMaximum: Integer;
    procedure Set_RecentFilesMaximum(Value: Integer);
    function Get_DisplayRecentFiles: WordBool;
    procedure Set_DisplayRecentFiles(Value: WordBool);
    function Get_MacroVirusProtection: WordBool;
    procedure Set_MacroVirusProtection(Value: WordBool);
    function Get_ShowAssignmentUnitsAs: PjAssignmentUnits;
    procedure Set_ShowAssignmentUnitsAs(Value: PjAssignmentUnits);
    function Get_AutomaticallyFillPhoneticFields: WordBool;
    procedure Set_AutomaticallyFillPhoneticFields(Value: WordBool);
    function Get_DefaultAutoFilter: WordBool;
    procedure Set_DefaultAutoFilter(Value: WordBool);
    function Get_ShowEstimatedDuration: WordBool;
    procedure Set_ShowEstimatedDuration(Value: WordBool);
    function Get_NewTasksEstimated: WordBool;
    procedure Set_NewTasksEstimated(Value: WordBool);
    function Get_Assistant: Assistant;
    procedure Set_Assistant(const Value: Assistant);
    function Get_DisplayViewBar: WordBool;
    procedure Set_DisplayViewBar(Value: WordBool);
    function Get_VBE: VBE;
    procedure Set_VBE(const Value: VBE);
    function Get_EnableCancelKey: PjEnableCancelKey;
    procedure Set_EnableCancelKey(Value: PjEnableCancelKey);
    function Get_UserControl: WordBool;
    procedure Set_UserControl(Value: WordBool);
    function Get_UsableWidth: Double;
    procedure Set_UsableWidth(Value: Double);
    function Get_UsableHeight: Double;
    procedure Set_UsableHeight(Value: Double);
    function Get_StatusBar: OleVariant;
    procedure Set_StatusBar(Value: OleVariant);
    function Get_FileSearch: FileSearch;
    procedure Set_FileSearch(const Value: FileSearch);
    function  Get_Windows: Windows;
    function  Get_CommandBars: CommandBars;
    function  Get_AnswerWizard: AnswerWizard;
    function  Get_OperatingSystem: WideString;
    function  Get_FileFormatID(const Name: WideString; UserID: OleVariant;
                               DatabasePassWord: OleVariant): WideString;
    function  Get_FileBuildID(const Name: WideString; UserID: OleVariant;
                              DatabasePassWord: OleVariant): WideString;
    function  Get_COMAddIns: COMAddIns;
  public
    property DefaultInterface: _MSProject read GetDefaultInterface;
  published
    property Application: Application read Get_Application write Set_Application;
    property Parent: Application read Get_Parent write Set_Parent;
    property Projects: Projects read Get_Projects write Set_Projects;
    property ActiveSelection: Selection read Get_ActiveSelection write Set_ActiveSelection;
    property ActiveCell: Cell read Get_ActiveCell write Set_ActiveCell;
    property ActiveProject: Project read Get_ActiveProject write Set_ActiveProject;
    property ActiveWindow: Window read Get_ActiveWindow write Set_ActiveWindow;
    property SupportsMultipleDocuments: WordBool read Get_SupportsMultipleDocuments write Set_SupportsMultipleDocuments;
    property SupportsMultipleWindows: WordBool read Get_SupportsMultipleWindows write Set_SupportsMultipleWindows;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property PathSeparator: WideString read Get_PathSeparator write Set_PathSeparator;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Name: WideString read Get_Name write Set_Name;
    property Path: WideString read Get_Path write Set_Path;
    property Version: WideString read Get_Version write Set_Version;
    property WindowState: PjWindowState read Get_WindowState write Set_WindowState;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property DateOrder: PjDateOrder read Get_DateOrder write Set_DateOrder;
    property DateSeparator: WideString read Get_DateSeparator write Set_DateSeparator;
    property ThousandSeparator: WideString read Get_ThousandSeparator write Set_ThousandSeparator;
    property DecimalSeparator: WideString read Get_DecimalSeparator write Set_DecimalSeparator;
    property ListSeparator: WideString read Get_ListSeparator write Set_ListSeparator;
    property TimeSeparator: WideString read Get_TimeSeparator write Set_TimeSeparator;
    property TwelveHourTimeFormat: WordBool read Get_TwelveHourTimeFormat write Set_TwelveHourTimeFormat;
    property AMText: WideString read Get_AMText write Set_AMText;
    property PMText: WideString read Get_PMText write Set_PMText;
    property DefaultView: WideString read Get_DefaultView write Set_DefaultView;
    property DisplayStatusBar: WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
    property DisplayAlerts: WordBool read Get_DisplayAlerts write Set_DisplayAlerts;
    property DisplayEntryBar: WordBool read Get_DisplayEntryBar write Set_DisplayEntryBar;
    property DisplayScrollBars: WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
    property DisplayWindowsInTaskbar: WordBool read Get_DisplayWindowsInTaskbar write Set_DisplayWindowsInTaskbar;
    property Calculation: PjCalculation read Get_Calculation write Set_Calculation;
    property AutoLevel: WordBool read Get_AutoLevel write Set_AutoLevel;
    property AutoClearLeveling: WordBool read Get_AutoClearLeveling write Set_AutoClearLeveling;
    property LevelWithinSlack: WordBool read Get_LevelWithinSlack write Set_LevelWithinSlack;
    property LevelOrder: PjLevelOrder read Get_LevelOrder write Set_LevelOrder;
    property LevelPeriodBasis: PjLevelPeriodBasis read Get_LevelPeriodBasis write Set_LevelPeriodBasis;
    property LevelIndividualAssignments: WordBool read Get_LevelIndividualAssignments write Set_LevelIndividualAssignments;
    property LevelingCanSplit: WordBool read Get_LevelingCanSplit write Set_LevelingCanSplit;
    property MoveAfterReturn: WordBool read Get_MoveAfterReturn write Set_MoveAfterReturn;
    property DisplayScheduleMessages: WordBool read Get_DisplayScheduleMessages write Set_DisplayScheduleMessages;
    property StartWeekOn: PjWeekday read Get_StartWeekOn write Set_StartWeekOn;
    property StartYearIn: PjMonth read Get_StartYearIn write Set_StartYearIn;
    property CellDragAndDrop: WordBool read Get_CellDragAndDrop write Set_CellDragAndDrop;
    property UserName: WideString read Get_UserName write Set_UserName;
    property AskToUpdateLinks: WordBool read Get_AskToUpdateLinks write Set_AskToUpdateLinks;
    property DisplayPlanningWizard: WordBool read Get_DisplayPlanningWizard write Set_DisplayPlanningWizard;
    property DisplayWizardUsage: WordBool read Get_DisplayWizardUsage write Set_DisplayWizardUsage;
    property DisplayWizardErrors: WordBool read Get_DisplayWizardErrors write Set_DisplayWizardErrors;
    property DisplayWizardScheduling: WordBool read Get_DisplayWizardScheduling write Set_DisplayWizardScheduling;
    property ShowWelcome: WordBool read Get_ShowWelcome write Set_ShowWelcome;
    property LoadLastFile: WordBool read Get_LoadLastFile write Set_LoadLastFile;
    property PromptForSummaryInfo: WordBool read Get_PromptForSummaryInfo write Set_PromptForSummaryInfo;
    property DisplayOLEIndicator: WordBool read Get_DisplayOLEIndicator write Set_DisplayOLEIndicator;
    property DefaultDateFormat: PjDateFormat read Get_DefaultDateFormat write Set_DefaultDateFormat;
    property DayLeadingZero: WordBool read Get_DayLeadingZero write Set_DayLeadingZero;
    property MonthLeadingZero: WordBool read Get_MonthLeadingZero write Set_MonthLeadingZero;
    property TimeLeadingZero: WordBool read Get_TimeLeadingZero write Set_TimeLeadingZero;
    property RecentFilesMaximum: Integer read Get_RecentFilesMaximum write Set_RecentFilesMaximum;
    property DisplayRecentFiles: WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
    property ShowAssignmentUnitsAs: PjAssignmentUnits read Get_ShowAssignmentUnitsAs write Set_ShowAssignmentUnitsAs;
    property AutomaticallyFillPhoneticFields: WordBool read Get_AutomaticallyFillPhoneticFields write Set_AutomaticallyFillPhoneticFields;
    property DefaultAutoFilter: WordBool read Get_DefaultAutoFilter write Set_DefaultAutoFilter;
    property ShowEstimatedDuration: WordBool read Get_ShowEstimatedDuration write Set_ShowEstimatedDuration;
    property NewTasksEstimated: WordBool read Get_NewTasksEstimated write Set_NewTasksEstimated;
    property Assistant: Assistant read Get_Assistant write Set_Assistant;
    property DisplayViewBar: WordBool read Get_DisplayViewBar write Set_DisplayViewBar;
    property VBE: VBE read Get_VBE write Set_VBE;
    property EnableCancelKey: PjEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property UsableWidth: Double read Get_UsableWidth write Set_UsableWidth;
    property UsableHeight: Double read Get_UsableHeight write Set_UsableHeight;
    property FileSearch: FileSearch read Get_FileSearch write Set_FileSearch;
  end;
{$ENDIF}


// *********************************************************************//
// The Class CoGlobal provides a Create and CreateRemote method to
// create instances of the default interface _Global exposed by
// the CoClass Global. The functions are intended to be used by
// clients wishing to automate the CoClass objects exposed by the
// server of this typelibrary.
// *********************************************************************//
  CoGlobal = class
    class function Create: _Global;
    class function CreateRemote(const MachineName: string): _Global;
  end;


// *********************************************************************//
// OLE Server Proxy class declaration
// Server Object    : TGlobal
// Help String      :
// Default Interface: _Global
// Def. Intf. DISP? : Yes
// Event   Interface:
// TypeFlags        : (27) AppObject CanCreate Predeclid Hidden
// *********************************************************************//
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  TGlobalProperties= class;
{$ENDIF}
  TGlobal = class(TOleServer)
  private
    FIntf:        _Global;
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    FProps:       TGlobalProperties;
    function      GetServerProperties: TGlobalProperties;
{$ENDIF}
    function      GetDefaultInterface: _Global;
  protected
    procedure InitServerData; override;
    function Get_Application: Application;
    procedure Set_Application(const Value: Application);
    function Get_Parent: Application;
    procedure Set_Parent(const Value: Application);
    function Get_ActiveSelection: Selection;
    procedure Set_ActiveSelection(const Value: Selection);
    function Get_ActiveCell: Cell;
    procedure Set_ActiveCell(const Value: Cell);
    function Get_ActiveProject: Project;
    procedure Set_ActiveProject(const Value: Project);
    function Get_ActiveWindow: Window;
    procedure Set_ActiveWindow(const Value: Window);
    function Get_SupportsMultipleDocuments: WordBool;
    procedure Set_SupportsMultipleDocuments(Value: WordBool);
    function Get_SupportsMultipleWindows: WordBool;
    procedure Set_SupportsMultipleWindows(Value: WordBool);
    function Get_Visible: WordBool;
    procedure Set_Visible(Value: WordBool);
    function Get_PathSeparator: WideString;
    procedure Set_PathSeparator(const Value: WideString);
    function Get_Caption: WideString;
    procedure Set_Caption(const Value: WideString);
    function Get_Name: WideString;
    procedure Set_Name(const Value: WideString);
    function Get_Path: WideString;
    procedure Set_Path(const Value: WideString);
    function Get_Version: WideString;
    procedure Set_Version(const Value: WideString);
    function Get_WindowState: PjWindowState;
    procedure Set_WindowState(Value: PjWindowState);
    function Get_DateOrder: PjDateOrder;
    procedure Set_DateOrder(Value: PjDateOrder);
    function Get_DateSeparator: WideString;
    procedure Set_DateSeparator(const Value: WideString);
    function Get_ThousandSeparator: WideString;
    procedure Set_ThousandSeparator(const Value: WideString);
    function Get_DecimalSeparator: WideString;
    procedure Set_DecimalSeparator(const Value: WideString);
    function Get_ListSeparator: WideString;
    procedure Set_ListSeparator(const Value: WideString);
    function Get_TimeSeparator: WideString;
    procedure Set_TimeSeparator(const Value: WideString);
    function Get_TwelveHourTimeFormat: WordBool;
    procedure Set_TwelveHourTimeFormat(Value: WordBool);
    function Get_AMText: WideString;
    procedure Set_AMText(const Value: WideString);
    function Get_PMText: WideString;
    procedure Set_PMText(const Value: WideString);
    function Get_DefaultView: WideString;
    procedure Set_DefaultView(const Value: WideString);
    function Get_DisplayStatusBar: WordBool;
    procedure Set_DisplayStatusBar(Value: WordBool);
    function Get_DisplayAlerts: WordBool;
    procedure Set_DisplayAlerts(Value: WordBool);
    function Get_DisplayEntryBar: WordBool;
    procedure Set_DisplayEntryBar(Value: WordBool);
    function Get_DisplayScrollBars: WordBool;
    procedure Set_DisplayScrollBars(Value: WordBool);
    function Get_DisplayWindowsInTaskbar: WordBool;
    procedure Set_DisplayWindowsInTaskbar(Value: WordBool);
    function Get_Calculation: PjCalculation;
    procedure Set_Calculation(Value: PjCalculation);
    function Get_AutoLevel: WordBool;
    procedure Set_AutoLevel(Value: WordBool);
    function Get_AutoClearLeveling: WordBool;
    procedure Set_AutoClearLeveling(Value: WordBool);
    function Get_LevelWithinSlack: WordBool;
    procedure Set_LevelWithinSlack(Value: WordBool);
    function Get_LevelOrder: PjLevelOrder;
    procedure Set_LevelOrder(Value: PjLevelOrder);
    function Get_LevelPeriodBasis: PjLevelPeriodBasis;
    procedure Set_LevelPeriodBasis(Value: PjLevelPeriodBasis);
    function Get_LevelIndividualAssignments: WordBool;
    procedure Set_LevelIndividualAssignments(Value: WordBool);
    function Get_LevelingCanSplit: WordBool;
    procedure Set_LevelingCanSplit(Value: WordBool);
    function Get_MoveAfterReturn: WordBool;
    procedure Set_MoveAfterReturn(Value: WordBool);
    function Get_DisplayScheduleMessages: WordBool;
    procedure Set_DisplayScheduleMessages(Value: WordBool);
    function Get_StartWeekOn: PjWeekday;
    procedure Set_StartWeekOn(Value: PjWeekday);
    function Get_StartYearIn: PjMonth;
    procedure Set_StartYearIn(Value: PjMonth);
    function Get_CellDragAndDrop: WordBool;
    procedure Set_CellDragAndDrop(Value: WordBool);
    function Get_UserName: WideString;
    procedure Set_UserName(const Value: WideString);
    function Get_DisplayNotesIndicator: WordBool;
    procedure Set_DisplayNotesIndicator(Value: WordBool);
    function Get_AskToUpdateLinks: WordBool;
    procedure Set_AskToUpdateLinks(Value: WordBool);
    function Get_DisplayPlanningWizard: WordBool;
    procedure Set_DisplayPlanningWizard(Value: WordBool);
    function Get_DisplayWizardUsage: WordBool;
    procedure Set_DisplayWizardUsage(Value: WordBool);
    function Get_DisplayWizardErrors: WordBool;
    procedure Set_DisplayWizardErrors(Value: WordBool);
    function Get_DisplayWizardScheduling: WordBool;
    procedure Set_DisplayWizardScheduling(Value: WordBool);
    function Get_ShowTipOfDay: WordBool;
    procedure Set_ShowTipOfDay(Value: WordBool);
    function Get_ShowToolTips: WordBool;
    procedure Set_ShowToolTips(Value: WordBool);
    function Get_ShowWelcome: WordBool;
    procedure Set_ShowWelcome(Value: WordBool);
    function Get_LoadLastFile: WordBool;
    procedure Set_LoadLastFile(Value: WordBool);
    function Get_PromptForSummaryInfo: WordBool;
    procedure Set_PromptForSummaryInfo(Value: WordBool);
    function Get_DisplayOLEIndicator: WordBool;
    procedure Set_DisplayOLEIndicator(Value: WordBool);
    function Get_DefaultDateFormat: PjDateFormat;
    procedure Set_DefaultDateFormat(Value: PjDateFormat);
    function Get_DayLeadingZero: WordBool;
    procedure Set_DayLeadingZero(Value: WordBool);
    function Get_MonthLeadingZero: WordBool;
    procedure Set_MonthLeadingZero(Value: WordBool);
    function Get_TimeLeadingZero: WordBool;
    procedure Set_TimeLeadingZero(Value: WordBool);
    function Get_CopyResourceUsageHeader: WordBool;
    procedure Set_CopyResourceUsageHeader(Value: WordBool);
    function Get_RecentFilesMaximum: Integer;
    procedure Set_RecentFilesMaximum(Value: Integer);
    function Get_DisplayRecentFiles: WordBool;
    procedure Set_DisplayRecentFiles(Value: WordBool);
    function Get_MacroVirusProtection: WordBool;
    procedure Set_MacroVirusProtection(Value: WordBool);
    function Get_ShowAssignmentUnitsAs: PjAssignmentUnits;
    procedure Set_ShowAssignmentUnitsAs(Value: PjAssignmentUnits);
    function Get_AutomaticallyFillPhoneticFields: WordBool;
    procedure Set_AutomaticallyFillPhoneticFields(Value: WordBool);
    function Get_DefaultAutoFilter: WordBool;
    procedure Set_DefaultAutoFilter(Value: WordBool);
    function Get_ShowEstimatedDuration: WordBool;
    procedure Set_ShowEstimatedDuration(Value: WordBool);
    function Get_NewTasksEstimated: WordBool;
    procedure Set_NewTasksEstimated(Value: WordBool);
    function Get_Assistant: Assistant;
    procedure Set_Assistant(const Value: Assistant);
    function Get_DisplayViewBar: WordBool;
    procedure Set_DisplayViewBar(Value: WordBool);
    function Get_VBE: VBE;
    procedure Set_VBE(const Value: VBE);
    function Get_EnableCancelKey: PjEnableCancelKey;
    procedure Set_EnableCancelKey(Value: PjEnableCancelKey);
    function Get_UserControl: WordBool;
    procedure Set_UserControl(Value: WordBool);
    function Get_UsableWidth: Double;
    procedure Set_UsableWidth(Value: Double);
    function Get_UsableHeight: Double;
    procedure Set_UsableHeight(Value: Double);
    function  Get_Windows: Windows;
    function  Get_CommandBars: CommandBars;
    function  Get_AnswerWizard: AnswerWizard;
    function  Get_Projects: Projects;
    function  Get_OperatingSystem: WideString;
    function  Get_FileFormatID(const Name: WideString; UserID: OleVariant;
                               DatabasePassWord: OleVariant): WideString;
    function  Get_FileBuildID(const Name: WideString; UserID: OleVariant;
                              DatabasePassWord: OleVariant): WideString;
    function  Get_COMAddIns: COMAddIns;
  public
    constructor Create(AOwner: TComponent); override;
    destructor  Destroy; override;
    procedure Connect; override;
    procedure ConnectTo(svrIntf: _Global);
    procedure Disconnect; override;
    procedure Quit(SaveChanges: PjSaveType);
    function  DateSubtract(FinishDate: OleVariant; Duration: OleVariant): OleVariant; overload;
    function  DateSubtract(FinishDate: OleVariant; Duration: OleVariant; Calendar: OleVariant): OleVariant; overload;
    function  DurationFormat(Duration: OleVariant): WideString; overload;
    function  DurationFormat(Duration: OleVariant; Units: OleVariant): WideString; overload;
    function  DurationValue(const Duration: WideString): OleVariant;
    function  DateFormat(Date: OleVariant): OleVariant; overload;
    function  DateFormat(Date: OleVariant; Format: OleVariant): OleVariant; overload;
    procedure MailLogon; overload;
    procedure MailLogon(Name: OleVariant); overload;
    procedure MailLogon(Name: OleVariant; Password: OleVariant); overload;
    procedure MailLogon(Name: OleVariant; Password: OleVariant; DownloadNewMail: OleVariant); overload;
    procedure MailLogoff;
    function  MailSession: OleVariant;
    function  MailSystem: OleVariant;
    function  TimescaledData(TaskID: Integer; ResourceID: Integer; StartDate: OleVariant;
                             EndDate: OleVariant; Type_: PjTimescaledData;
                             TimeScaleUnit: PjTimescaleUnit): OleVariant; overload;
    function  TimescaledData(TaskID: Integer; ResourceID: Integer; StartDate: OleVariant;
                             EndDate: OleVariant; Type_: PjTimescaledData;
                             TimeScaleUnit: PjTimescaleUnit; Count: OleVariant): OleVariant; overload;
    function  CustomFieldGetName(FieldID: PjCustomField): WideString;
    procedure Run(const Name: WideString); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                  Arg28: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                  Arg28: OleVariant; Arg29: OleVariant); overload;
    procedure Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                  Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                  Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                  Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                  Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                  Arg28: OleVariant; Arg29: OleVariant; Arg30: OleVariant); overload;
    function  BoxGetXPosition(TaskID: Integer): Integer; overload;
    function  BoxGetXPosition(TaskID: Integer; ProjectName: OleVariant): Integer; overload;
    function  BoxGetYPosition(TaskID: Integer): Integer; overload;
    function  BoxGetYPosition(TaskID: Integer; ProjectName: OleVariant): Integer; overload;
    function  CustomFieldGetFormula(FieldID: PjCustomField): WideString;
    function  CustomFieldValueListGetItem(FieldID: PjCustomField; Item: PjValueListItem;
                                          Index: Integer): WideString;
    function  Message(const Message: WideString; Type_: PjMessageType): WordBool; overload;
    function  Message(const Message: WideString; Type_: PjMessageType; YesText: OleVariant): WordBool; overload;
    function  Message(const Message: WideString; Type_: PjMessageType; YesText: OleVariant;
                      NoText: OleVariant): WordBool; overload;
    function  Alerts: WordBool; overload;
    function  Alerts(Show: OleVariant): WordBool; overload;
    function  FileNew: WordBool; overload;
    function  FileNew(SummaryInfo: OleVariant): WordBool; overload;
    function  FileNew(SummaryInfo: OleVariant; Template: OleVariant): WordBool; overload;
    function  FileNew(SummaryInfo: OleVariant; Template: OleVariant; FileNewDialog: OleVariant): WordBool; overload;
    function  FileProperties: WordBool;
    function  FileOpen(Name: OleVariant; ReadOnly: OleVariant; Merge: OleVariant;
                       TaskInformation: OleVariant; Table: OleVariant; Sheet: OleVariant;
                       NoAuto: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                       FormatID: OleVariant; Map: OleVariant; openPool: PjPoolOpen;
                       Password: OleVariant; WriteResPassword: OleVariant;
                       IgnoreReadOnlyRecommended: OleVariant): WordBool;
    function  Zoom: WordBool;
    function  ZoomTimescale: WordBool; overload;
    function  ZoomTimescale(Duration: OleVariant): WordBool; overload;
    function  ZoomTimescale(Duration: OleVariant; Entire: OleVariant): WordBool; overload;
    function  ZoomTimescale(Duration: OleVariant; Entire: OleVariant; Selection: OleVariant): WordBool; overload;
    function  ZoomTimescale(Duration: OleVariant; Entire: OleVariant; Selection: OleVariant;
                            Reset: OleVariant): WordBool; overload;
    function  BoxZoom: WordBool; overload;
    function  BoxZoom(Percent: OleVariant): WordBool; overload;
    function  BoxZoom(Percent: OleVariant; Entire: OleVariant): WordBool; overload;
    function  FileClose(Save: PjSaveType): WordBool; overload;
    function  FileClose(Save: PjSaveType; NoAuto: OleVariant): WordBool; overload;
    function  FileCloseAll(Save: PjSaveType): WordBool;
    function  ResourceSharing: WordBool; overload;
    function  ResourceSharing(Share: OleVariant): WordBool; overload;
    function  ResourceSharing(Share: OleVariant; Name: OleVariant): WordBool; overload;
    function  ResourceSharing(Share: OleVariant; Name: OleVariant; Pool: OleVariant): WordBool; overload;
    function  FileSave: WordBool;
    function  FileSaveAs(Name: OleVariant; Format: PjFileFormat; Backup: OleVariant;
                         ReadOnly: OleVariant; TaskInformation: OleVariant; Filtered: OleVariant;
                         Table: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                         FormatID: OleVariant; Map: OleVariant; Password: OleVariant;
                         WriteResPassword: OleVariant; ClearBaseline: OleVariant;
                         ClearActuals: OleVariant; ClearResourceRates: OleVariant;
                         ClearFixedCosts: OleVariant): WordBool;
    function  FileSaveWorkspace: WordBool; overload;
    function  FileSaveWorkspace(Name: OleVariant): WordBool; overload;
    function  FilePrint: WordBool; overload;
    function  FilePrint(FromPage: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant; OnePageWide: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant; OnePageWide: OleVariant; Preview: OleVariant): WordBool; overload;
    function  FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                        Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                        ToDate: OleVariant; OnePageWide: OleVariant; Preview: OleVariant;
                        Color: OleVariant): WordBool; overload;
    function  ReportPrint: WordBool; overload;
    function  ReportPrint(Name: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant; ToDate: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant; ToDate: OleVariant; Preview: OleVariant): WordBool; overload;
    function  ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                          PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                          FromDate: OleVariant; ToDate: OleVariant; Preview: OleVariant;
                          Color: OleVariant): WordBool; overload;
    function  FilePrintPreview: WordBool;
    function  ReportPrintPreview: WordBool; overload;
    function  ReportPrintPreview(Name: OleVariant): WordBool; overload;
    function  FilePrintSetup: WordBool; overload;
    function  FilePrintSetup(Printer: OleVariant): WordBool; overload;
    function  FilePageSetup: WordBool; overload;
    function  FilePageSetup(Name: OleVariant): WordBool; overload;
    function  FilePageSetupPage(Name: OleVariant; Portrait: OleVariant; PercentScale: OleVariant;
                                PagesTall: OleVariant; PagesWide: OleVariant;
                                PaperSize: PjPaperSize; FirstPageNumber: OleVariant): WordBool;
    function  FilePageSetupMargins: WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                   Left: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                   Left: OleVariant; Right: OleVariant): WordBool; overload;
    function  FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                   Left: OleVariant; Right: OleVariant; Borders: OleVariant): WordBool; overload;
    function  FilePageSetupHeader(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool;
    function  FilePageSetupFooter(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool;
    function  FilePageSetupLegend(Name: OleVariant; TextWidth: OleVariant; LegendOn: OleVariant;
                                  Alignment: PjAlignment; Text: OleVariant;
                                  LabelFontName: OleVariant; LabelFontSize: OleVariant;
                                  LabelFontBold: OleVariant; LabelFontItalic: OleVariant;
                                  LabelFontUnderline: OleVariant; LabelFontColor: PjColor): WordBool;
    function  FilePageSetupView: WordBool; overload;
    function  FilePageSetupView(Name: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant; PrintNotes: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                PrintBlankPages: OleVariant): WordBool; overload;
    function  FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                PrintBlankPages: OleVariant; BestPageFitTimescale: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar: WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                    AdditionalTasks: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                    AdditionalTasks: OleVariant; GroupAdditionalTasks: OleVariant): WordBool; overload;
    function  FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                    WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                    OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                    MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                    AdditionalTasks: OleVariant; GroupAdditionalTasks: OleVariant;
                                    PrintNotes: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText: WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant; Italic: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                                        Underline: OleVariant): WordBool; overload;
    function  FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                        Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                                        Underline: OleVariant; Color: OleVariant): WordBool; overload;
    function  MailOpen: WordBool; overload;
    function  MailOpen(Any: OleVariant): WordBool; overload;
    function  MailSend: WordBool; overload;
    function  MailSend(To_: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant;
                       SaveCopy: OleVariant): WordBool; overload;
    function  MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                       Enclosures: OleVariant; IncludeDocument: OleVariant;
                       ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant;
                       SaveCopy: OleVariant; AddRecipient: OleVariant): WordBool; overload;
    function  MailSendScheduleNote: WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant; IncludePicture: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant; IncludePicture: OleVariant;
                                   Body: OleVariant): WordBool; overload;
    function  MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                   TaskContacts: OleVariant; Selection: OleVariant;
                                   IncludeDocument: OleVariant; IncludePicture: OleVariant;
                                   Body: OleVariant; Subject: OleVariant): WordBool; overload;
    function  MailPostDocument: WordBool;
    function  ODBCManageDataSources: WordBool;
    function  ODBCCreateDataSource: WordBool;
    function  MailRoutingSlip: WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                              TrackStatus: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                              TrackStatus: OleVariant; Clear: OleVariant): WordBool; overload;
    function  MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                              AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                              TrackStatus: OleVariant; Clear: OleVariant; SendNow: OleVariant): WordBool; overload;
    function  FileLoadLast: WordBool; overload;
    function  FileLoadLast(Number: OleVariant): WordBool; overload;
    function  FileExit(Save: PjSaveType): WordBool;
    function  MenuBars: WordBool;
    function  MenuBarEdit: WordBool; overload;
    function  MenuBarEdit(Copy: OleVariant): WordBool; overload;
    function  MenuBarEdit(Copy: OleVariant; Create: OleVariant): WordBool; overload;
    function  MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant): WordBool; overload;
    function  MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant;
                          NewName: OleVariant): WordBool; overload;
    function  MenuBarApply(const Name: WideString): WordBool; overload;
    function  MenuBarApply(const Name: WideString; Default: OleVariant): WordBool; overload;
    function  MenuBarApply(const Name: WideString; Default: OleVariant; NoFiles: OleVariant): WordBool; overload;
    function  EditCut: WordBool;
    function  EditCopy: WordBool;
    function  EditCopyPicture(Object_: OleVariant; ForPrinter: OleVariant;
                              SelectedRows: OleVariant; FromDate: OleVariant; ToDate: OleVariant;
                              FileName: OleVariant; ScaleOption: PjCopyPictureScaleOption): WordBool;
    function  EditPaste: WordBool;
    function  EditPasteSpecial: WordBool; overload;
    function  EditPasteSpecial(Link: OleVariant): WordBool; overload;
    function  EditPasteSpecial(Link: OleVariant; Type_: OleVariant): WordBool; overload;
    function  EditPasteSpecial(Link: OleVariant; Type_: OleVariant; DisplayAsIcon: OleVariant): WordBool; overload;
    function  EditClearFormats: WordBool;
    function  EditClear: WordBool; overload;
    function  EditClear(Contents: OleVariant): WordBool; overload;
    function  EditClear(Contents: OleVariant; Formats: OleVariant): WordBool; overload;
    function  EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant): WordBool; overload;
    function  EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant;
                        Hyperlinks: OleVariant): WordBool; overload;
    function  RowClear: WordBool;
    function  DDEPasteLink: WordBool;
    function  EditDelete: WordBool;
    function  ColumnDelete: WordBool;
    function  RowDelete: WordBool;
    function  ObjectVerb: WordBool; overload;
    function  ObjectVerb(Verb: OleVariant): WordBool; overload;
    function  ObjectLinks: WordBool;
    function  ObjectChangeIcon: WordBool;
    function  ObjectConvert: WordBool;
    function  EditInsert: WordBool;
    function  ColumnInsert: WordBool;
    function  RowInsert: WordBool;
    function  LinkTasks: WordBool;
    function  LinkTasksEdit(From: Integer; To_: Integer): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                            Lag: OleVariant): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                            Lag: OleVariant; PredecessorProjectName: OleVariant): WordBool; overload;
    function  LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                            Lag: OleVariant; PredecessorProjectName: OleVariant;
                            SuccessorProjectName: OleVariant): WordBool; overload;
    function  UnlinkTasks: WordBool;
    function  ResourceAssignment(Resources: OleVariant; Operation: PjResAssignOperation;
                                 With_: OleVariant): WordBool;
    function  EditGoTo: WordBool; overload;
    function  EditGoTo(ID: OleVariant): WordBool; overload;
    function  EditGoTo(ID: OleVariant; Date: OleVariant): WordBool; overload;
    function  GotoNextOverAllocation: WordBool;
    function  InsertNotes: WordBool;
    function  Find: WordBool; overload;
    function  Find(Field: OleVariant): WordBool; overload;
    function  Find(Field: OleVariant; Test: OleVariant): WordBool; overload;
    function  Find(Field: OleVariant; Test: OleVariant; Value: OleVariant): WordBool; overload;
    function  Find(Field: OleVariant; Test: OleVariant; Value: OleVariant; Next: OleVariant): WordBool; overload;
    function  Find(Field: OleVariant; Test: OleVariant; Value: OleVariant; Next: OleVariant;
                   MatchCase: OleVariant): WordBool; overload;
    function  Replace: WordBool; overload;
    function  Replace(Field: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant; ReplaceAll: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant; ReplaceAll: OleVariant; Next: OleVariant): WordBool; overload;
    function  Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                      Replacement: OleVariant; ReplaceAll: OleVariant; Next: OleVariant;
                      MatchCase: OleVariant): WordBool; overload;
    function  SelectAll: WordBool;
    function  ObjectInsert: WordBool;
    function  SubscribeTo(Edition: OleVariant; Format: PjSubscribeFormat): WordBool;
    function  SubscriberOptions: WordBool; overload;
    function  SubscriberOptions(Name: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                Field: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                Field: OleVariant; Automatically: OleVariant): WordBool; overload;
    function  SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                Field: OleVariant; Automatically: OleVariant; Action: OleVariant): WordBool; overload;
    function  CreatePublisher: WordBool; overload;
    function  CreatePublisher(Edition: OleVariant): WordBool; overload;
    function  CreatePublisher(Edition: OleVariant; Contains: OleVariant): WordBool; overload;
    function  PublisherOptions: WordBool; overload;
    function  PublisherOptions(Name: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant; Field: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant; Field: OleVariant; OnSave: OleVariant): WordBool; overload;
    function  PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                               UniqueID: OleVariant; Field: OleVariant; OnSave: OleVariant;
                               Action: OleVariant): WordBool; overload;
    function  EditionStopAll: WordBool; overload;
    function  EditionStopAll(Stop: OleVariant): WordBool; overload;
    function  ClipboardShow: WordBool;
    function  ViewApply: WordBool; overload;
    function  ViewApply(Name: OleVariant): WordBool; overload;
    function  ViewApply(Name: OleVariant; SinglePane: OleVariant): WordBool; overload;
    function  ViewApply(Name: OleVariant; SinglePane: OleVariant; Toggle: OleVariant): WordBool; overload;
    function  ViewEditSingle: WordBool; overload;
    function  ViewEditSingle(Name: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant; HighlightFilter: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant;
                             HighlightFilter: OleVariant; Table: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant;
                             HighlightFilter: OleVariant; Table: OleVariant; Filter: OleVariant): WordBool; overload;
    function  ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                             Screen: OleVariant; ShowInMenu: OleVariant;
                             HighlightFilter: OleVariant; Table: OleVariant; Filter: OleVariant;
                             Group: OleVariant): WordBool; overload;
    function  ViewEditCombination: WordBool; overload;
    function  ViewEditCombination(Name: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                  TopView: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                  TopView: OleVariant; BottomView: OleVariant): WordBool; overload;
    function  ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                  TopView: OleVariant; BottomView: OleVariant;
                                  ShowInMenu: OleVariant): WordBool; overload;
    function  TableApply: WordBool; overload;
    function  TableApply(Name: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant; RowHeight: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant; RowHeight: OleVariant; ColumnPosition: OleVariant): WordBool; overload;
    function  TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                        OverwriteExisting: OleVariant; NewName: OleVariant; FieldName: OleVariant;
                        NewFieldName: OleVariant; Title: OleVariant; Width: OleVariant;
                        Align: OleVariant; ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                        DateFormat: OleVariant; RowHeight: OleVariant; ColumnPosition: OleVariant;
                        AlignTitle: OleVariant): WordBool; overload;
    function  FilterApply: WordBool; overload;
    function  FilterApply(Name: OleVariant): WordBool; overload;
    function  FilterApply(Name: OleVariant; Highlight: OleVariant): WordBool; overload;
    function  FilterApply(Name: OleVariant; Highlight: OleVariant; Value1: OleVariant): WordBool; overload;
    function  FilterApply(Name: OleVariant; Highlight: OleVariant; Value1: OleVariant;
                          Value2: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant; NewName: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant; Operation: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant; Operation: OleVariant;
                         ShowInMenu: OleVariant): WordBool; overload;
    function  FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                         OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                         NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                         Test: OleVariant; Value: OleVariant; Operation: OleVariant;
                         ShowInMenu: OleVariant; ShowSummaryTasks: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo: WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant; Calendar: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant; Calendar: OleVariant;
                                 StatusDate: OleVariant): WordBool; overload;
    function  ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                 Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                 Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                 Finish: OleVariant; ScheduleFrom: OleVariant;
                                 CurrentDate: OleVariant; Calendar: OleVariant;
                                 StatusDate: OleVariant; Priority: OleVariant): WordBool; overload;
    function  ProjectStatistics: WordBool; overload;
    function  ProjectStatistics(Project: OleVariant): WordBool; overload;
    function  OptionsCalendar: WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant; HoursPerDay: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant; StartWeekOn: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant; StartWeekOn: OleVariant;
                              UseFYStartYear: OleVariant): WordBool; overload;
    function  OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                              StartTime: OleVariant; FinishTime: OleVariant;
                              HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                              SetDefaults: OleVariant; StartWeekOn: OleVariant;
                              UseFYStartYear: OleVariant; DaysPerMonth: OleVariant): WordBool; overload;
    function  OptionsEdit: WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                          SetDefaultsHyperlink: OleVariant): WordBool; overload;
    function  OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                          UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                          MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                          YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                          SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                          FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                          SetDefaultsHyperlink: OleVariant; InCellEditing: OleVariant): WordBool; overload;
    function  OptionsGeneral: WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant;
                             DisplayRecentFiles: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant;
                             DisplayRecentFiles: OleVariant; RecentFilesMaximum: OleVariant): WordBool; overload;
    function  OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                             WizardErrors: OleVariant; WizardScheduling: OleVariant;
                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                             LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant;
                             SetDefaults: OleVariant; ShowWelcome: OleVariant;
                             AutoFilter: OleVariant; MacroVirusProtection: OleVariant;
                             DisplayRecentFiles: OleVariant; RecentFilesMaximum: OleVariant;
                             FontConversion: OleVariant): WordBool; overload;
    function  OptionsSchedule: WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant; CriticalSlack: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                              HonorConstraints: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                              HonorConstraints: OleVariant; ShowEstimated: OleVariant): WordBool; overload;
    function  OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                              AutoLink: OleVariant; AutoSplit: OleVariant;
                              CriticalSlack: OleVariant; TaskType: OleVariant;
                              DurationUnits: OleVariant; WorkUnits: OleVariant;
                              AutoTrack: OleVariant; SetDefaults: OleVariant;
                              AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                              HonorConstraints: OleVariant; ShowEstimated: OleVariant;
                              NewTasksEstimated: OleVariant): WordBool; overload;
    function  OptionsView: WordBool; overload;
    function  OptionsView(DefaultView: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant; CrossProjectLinksInfo: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant;
                          CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant;
                          CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant;
                          DisplayWindowsInTaskbar: OleVariant): WordBool; overload;
    function  OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                          CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                          DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                          DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                          DisplayExternalSuccessors: OleVariant;
                          DisplayExternalPredecessors: OleVariant;
                          CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant;
                          DisplayWindowsInTaskbar: OleVariant; DisplayScreentips: OleVariant): WordBool; overload;
    function  OptionsWorkgroup: WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant;
                               SetDefaultsMessaging: OleVariant): WordBool; overload;
    function  OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                               ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                               SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                               FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                               SetDefaults: OleVariant; ServerIdentification: OleVariant;
                               AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant;
                               SetDefaultsMessaging: OleVariant; SetDefaultsWebServer: OleVariant): WordBool; overload;
    function  OptionsCalculation: WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant; CalcMultipleCriticalPaths: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant;
                                 CalcMultipleCriticalPaths: OleVariant; CriticalSlack: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant;
                                 CalcMultipleCriticalPaths: OleVariant; CriticalSlack: OleVariant;
                                 SetDefaults: OleVariant): WordBool; overload;
    function  OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                 SpreadPercentToStatusDate: OleVariant;
                                 SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant;
                                 FixedCostAccrual: OleVariant;
                                 CalcMultipleCriticalPaths: OleVariant; CriticalSlack: OleVariant;
                                 SetDefaults: OleVariant; CalcInsProjLikeSummTask: OleVariant): WordBool; overload;
    function  CalculateAll: WordBool;
    function  OptionsPreferences: WordBool;
    function  ChangeWorkingTime: WordBool;
    function  BaseCalendars: WordBool;
    function  BaseCalendarCreate(const Name: WideString): WordBool; overload;
    function  BaseCalendarCreate(const Name: WideString; FromName: OleVariant): WordBool; overload;
    function  BaseCalendarRename(const FromName: WideString; const ToName: WideString): WordBool;
    function  BaseCalendarDelete(const Name: WideString): WordBool;
    function  BaseCalendarEditDays(const Name: WideString): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant; To4: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant; To4: OleVariant;
                                   From5: OleVariant): WordBool; overload;
    function  BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                   EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant;
                                   From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                   To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                   Default: OleVariant; From4: OleVariant; To4: OleVariant;
                                   From5: OleVariant; To5: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString; const ResourceName: WideString): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant;
                                       To4: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant;
                                       To4: OleVariant; From5: OleVariant): WordBool; overload;
    function  ResourceCalendarEditDays(const ProjectName: WideString;
                                       const ResourceName: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; Default: OleVariant; From1: OleVariant;
                                       To1: OleVariant; From2: OleVariant; To2: OleVariant;
                                       From3: OleVariant; To3: OleVariant; From4: OleVariant;
                                       To4: OleVariant; From5: OleVariant; To5: OleVariant): WordBool; overload;
    function  BaseCalendarReset(const Name: WideString): WordBool;
    function  ResourceCalendarReset(const ProjectName: WideString; const ResourceName: WideString): WordBool; overload;
    function  ResourceCalendarReset(const ProjectName: WideString; const ResourceName: WideString;
                                    BaseCalendar: OleVariant): WordBool; overload;
    function  ResourceCalendars: WordBool;
    function  LevelingOptions: WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant; PeriodBasis: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant; PeriodBasis: OleVariant;
                              LevelIndividualAssignments: OleVariant): WordBool; overload;
    function  LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                              AutoClearLeveling: OleVariant; Order: OleVariant;
                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                              ToDate: OleVariant; PeriodBasis: OleVariant;
                              LevelIndividualAssignments: OleVariant; LevelingCanSplit: OleVariant): WordBool; overload;
    function  LevelNow: WordBool; overload;
    function  LevelNow(All: OleVariant): WordBool; overload;
    function  BaselineSave: WordBool; overload;
    function  BaselineSave(All: OleVariant): WordBool; overload;
    function  BaselineSave(All: OleVariant; Copy: OleVariant): WordBool; overload;
    function  BaselineSave(All: OleVariant; Copy: OleVariant; Into: OleVariant): WordBool; overload;
    function  UpdateProject: WordBool; overload;
    function  UpdateProject(All: OleVariant): WordBool; overload;
    function  UpdateProject(All: OleVariant; UpdateDate: OleVariant): WordBool; overload;
    function  UpdateProject(All: OleVariant; UpdateDate: OleVariant; Action: OleVariant): WordBool; overload;
    function  UpdateTasks: WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant; ActualStart: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant; ActualStart: OleVariant;
                          ActualFinish: OleVariant): WordBool; overload;
    function  UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                          RemainingDuration: OleVariant; ActualStart: OleVariant;
                          ActualFinish: OleVariant; Notes: OleVariant): WordBool; overload;
    function  WindowNewWindow: WordBool; overload;
    function  WindowNewWindow(Projects: OleVariant): WordBool; overload;
    function  WindowNewWindow(Projects: OleVariant; View: OleVariant): WordBool; overload;
    function  WindowNewWindow(Projects: OleVariant; View: OleVariant; AllProjects: OleVariant): WordBool; overload;
    function  WindowNewWindow(Projects: OleVariant; View: OleVariant; AllProjects: OleVariant;
                              ShowDialog: OleVariant): WordBool; overload;
    function  WindowArrangeAll: WordBool;
    function  WindowHide: WordBool; overload;
    function  WindowHide(Name: OleVariant): WordBool; overload;
    function  WindowUnhide: WordBool; overload;
    function  WindowUnhide(Name: OleVariant): WordBool; overload;
    function  WindowActivate: WordBool; overload;
    function  WindowActivate(WindowName: OleVariant): WordBool; overload;
    function  WindowActivate(WindowName: OleVariant; DialogID: OleVariant): WordBool; overload;
    function  WindowActivate(WindowName: OleVariant; DialogID: OleVariant; TopPane: OleVariant): WordBool; overload;
    function  PageBreakSet: WordBool;
    function  PageBreakRemove: WordBool;
    function  PageBreaksRemoveAll: WordBool;
    function  ViewShowResourcesPredecessors: WordBool;
    function  ViewShowResourcesSuccessors: WordBool;
    function  ViewShowPredecessorsSuccessors: WordBool;
    function  ViewShowNotes: WordBool;
    function  ViewShowObjects: WordBool;
    function  ViewShowOverallocation: WordBool;
    function  ViewShowPercentAllocation: WordBool;
    function  ViewShowWork: WordBool;
    function  ViewShowCost: WordBool;
    function  ViewShowSchedule: WordBool;
    function  ViewShowPeakUnits: WordBool;
    function  ViewShowAvailability: WordBool;
    function  ViewShowRemainingAvailability: WordBool;
    function  ViewShowCumulativeWork: WordBool;
    function  ViewShowCumulativeCost: WordBool;
    function  PaneNext: WordBool;
    function  PaneCreate: WordBool;
    function  FormViewShow: WordBool;
    function  PaneClose: WordBool;
    function  WindowSplit: WordBool;
    function  WindowNext: WordBool; overload;
    function  WindowNext(NoWrap: OleVariant): WordBool; overload;
    function  WindowPrev: WordBool; overload;
    function  WindowPrev(NoWrap: OleVariant): WordBool; overload;
    function  DocClose: WordBool;
    function  AppMaximize: WordBool;
    function  AppMinimize: WordBool;
    function  AppMove: WordBool; overload;
    function  AppMove(XPosition: OleVariant): WordBool; overload;
    function  AppMove(XPosition: OleVariant; YPosition: OleVariant): WordBool; overload;
    function  AppMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool; overload;
    function  AppRestore: WordBool;
    function  AppSize: WordBool; overload;
    function  AppSize(Width: OleVariant): WordBool; overload;
    function  AppSize(Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  AppSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool; overload;
    function  DocMaximize: WordBool;
    function  DocMove: WordBool; overload;
    function  DocMove(XPosition: OleVariant): WordBool; overload;
    function  DocMove(XPosition: OleVariant; YPosition: OleVariant): WordBool; overload;
    function  DocMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool; overload;
    function  DocRestore: WordBool;
    function  DocSize: WordBool; overload;
    function  DocSize(Width: OleVariant): WordBool; overload;
    function  DocSize(Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  DocSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool; overload;
    function  OutlineOutdent: WordBool; overload;
    function  OutlineOutdent(Levels: OleVariant): WordBool; overload;
    function  OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel): WordBool; overload;
    function  OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel;
                               ExpandInsertedProjects: OleVariant): WordBool; overload;
    function  OutlineIndent: WordBool; overload;
    function  OutlineIndent(Levels: OleVariant): WordBool; overload;
    function  OutlineHideSubTasks: WordBool;
    function  OutlineShowSubTasks: WordBool;
    function  OutlineShowAllTasks: WordBool;
    function  SelectBeginning: WordBool; overload;
    function  SelectBeginning(Extend: OleVariant): WordBool; overload;
    function  SelectEnd: WordBool; overload;
    function  SelectEnd(Extend: OleVariant): WordBool; overload;
    function  SelectRowStart: WordBool; overload;
    function  SelectRowStart(Extend: OleVariant): WordBool; overload;
    function  SelectRowEnd: WordBool; overload;
    function  SelectRowEnd(Extend: OleVariant): WordBool; overload;
    function  SelectCellLeft: WordBool; overload;
    function  SelectCellLeft(NumCells: OleVariant): WordBool; overload;
    function  SelectCellLeft(NumCells: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectCellRight: WordBool; overload;
    function  SelectCellRight(NumCells: OleVariant): WordBool; overload;
    function  SelectCellRight(NumCells: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectCellUp: WordBool; overload;
    function  SelectCellUp(NumCells: OleVariant): WordBool; overload;
    function  SelectCellUp(NumCells: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectCellDown: WordBool; overload;
    function  SelectCellDown(NumCells: OleVariant): WordBool; overload;
    function  SelectCellDown(NumCells: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectionExtend: WordBool; overload;
    function  SelectionExtend(Extend: OleVariant): WordBool; overload;
    function  SelectionExtend(Extend: OleVariant; Add: OleVariant): WordBool; overload;
    function  ColumnBestFit: WordBool; overload;
    function  ColumnBestFit(Column: OleVariant): WordBool; overload;
    function  ColumnEdit: WordBool; overload;
    function  ColumnEdit(Column: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant; Width: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                          Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                          Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                          Width: OleVariant; Height: OleVariant; Extend: OleVariant; Add: OleVariant): WordBool; overload;
    function  SelectTimescaleRange(Row: Integer; const StartTime: WideString; Width: Smallint;
                                   Height: Integer): WordBool;
    function  SelectTaskField(Row: Integer; const Column: WideString): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                              Add: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectResourceField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                                  Add: OleVariant): WordBool; overload;
    function  SelectRow: WordBool; overload;
    function  SelectRow(Row: OleVariant): WordBool; overload;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant): WordBool; overload;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant): WordBool; overload;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant;
                        Extend: OleVariant): WordBool; overload;
    function  SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant;
                        Extend: OleVariant; Add: OleVariant): WordBool; overload;
    function  SelectColumn: WordBool; overload;
    function  SelectColumn(Column: OleVariant): WordBool; overload;
    function  SelectColumn(Column: OleVariant; Additional: OleVariant): WordBool; overload;
    function  SelectColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                           Add: OleVariant): WordBool; overload;
    function  SelectTaskColumn: WordBool; overload;
    function  SelectTaskColumn(Column: OleVariant): WordBool; overload;
    function  SelectTaskColumn(Column: OleVariant; Additional: OleVariant): WordBool; overload;
    function  SelectTaskColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectTaskColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                               Add: OleVariant): WordBool; overload;
    function  SelectResourceColumn: WordBool; overload;
    function  SelectResourceColumn(Column: OleVariant): WordBool; overload;
    function  SelectResourceColumn(Column: OleVariant; Additional: OleVariant): WordBool; overload;
    function  SelectResourceColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant): WordBool; overload;
    function  SelectResourceColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                                   Add: OleVariant): WordBool; overload;
    function  SelectTaskCell: WordBool; overload;
    function  SelectTaskCell(Row: OleVariant): WordBool; overload;
    function  SelectTaskCell(Row: OleVariant; Column: OleVariant): WordBool; overload;
    function  SelectTaskCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; overload;
    function  SelectResourceCell: WordBool; overload;
    function  SelectResourceCell(Row: OleVariant): WordBool; overload;
    function  SelectResourceCell(Row: OleVariant; Column: OleVariant): WordBool; overload;
    function  SelectResourceCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; overload;
    function  SelectCell: WordBool; overload;
    function  SelectCell(Row: OleVariant): WordBool; overload;
    function  SelectCell(Row: OleVariant; Column: OleVariant): WordBool; overload;
    function  SelectCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool; overload;
    function  SelectSheet: WordBool;
    function  DDEInitiate(const App: WideString; const Topic: WideString): WordBool;
    function  DDEExecute(const Command: WideString): WordBool; overload;
    function  DDEExecute(const Command: WideString; TimeOut: OleVariant): WordBool; overload;
    function  DDETerminate: WordBool;
    function  InformationDialog: WordBool; overload;
    function  InformationDialog(Tab: OleVariant): WordBool; overload;
    function  Form: WordBool; overload;
    function  Form(Name: OleVariant): WordBool; overload;
    function  CustomForms: WordBool;
    function  Tables: WordBool;
    function  Filters: WordBool;
    function  Macro: WordBool; overload;
    function  Macro(Name: OleVariant): WordBool; overload;
    function  FillDown: WordBool; overload;
    function  FillDown(Down: OleVariant): WordBool; overload;
    function  Views: WordBool;
    function  CalculateProject: WordBool;
    function  LevelingClear: WordBool; overload;
    function  LevelingClear(All: OleVariant): WordBool; overload;
    function  SpellingCheck: WordBool;
    function  OptionsSpelling: WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant;
                              AlwaysSuggest: OleVariant): WordBool; overload;
    function  OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant;
                              TaskText2: OleVariant; TaskText3: OleVariant; TaskText4: OleVariant;
                              TaskText5: OleVariant; TaskText6: OleVariant; TaskText7: OleVariant;
                              TaskText8: OleVariant; TaskText9: OleVariant; TaskText10: OleVariant;
                              ResourceCode: OleVariant; ResourceName: OleVariant;
                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                              IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant;
                              AlwaysSuggest: OleVariant; UseCustomDictionary: OleVariant): WordBool; overload;
    function  WindowMoreWindows: WordBool;
    function  HelpContents: WordBool;
    function  HelpSearch: WordBool;
    function  HelpOnlineIndex: WordBool;
    function  HelpAbout: WordBool;
    function  HelpLaunch: WordBool; overload;
    function  HelpLaunch(FileName: OleVariant): WordBool; overload;
    function  HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant): WordBool; overload;
    function  HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant; Search: OleVariant): WordBool; overload;
    function  HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant; Search: OleVariant;
                         SearchKey: OleVariant): WordBool; overload;
    function  HelpCueCards: WordBool; overload;
    function  HelpCueCards(FileName: OleVariant): WordBool; overload;
    function  HelpCueCards(FileName: OleVariant; ContextNumber: OleVariant): WordBool; overload;
    function  HelpTopics: WordBool;
    function  HelpAnswerWizard: WordBool;
    function  HelpMSProjectFundamentals: WordBool;
    function  AutoCorrect: WordBool;
    function  HelpQuickPreview: WordBool;
    function  HelpTechnicalSupport: WordBool;
    function  HelpCreateYourProject: WordBool;
    function  HelpContextHelp: WordBool;
    function  TextStyles: WordBool; overload;
    function  TextStyles(Item: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant;
                         Italic: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant;
                         Italic: OleVariant; Underline: OleVariant): WordBool; overload;
    function  TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant;
                         Italic: OleVariant; Underline: OleVariant; Color: OleVariant): WordBool; overload;
    function  DetailStylesFormat: WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant; CellColor: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant; CellColor: OleVariant; Pattern: OleVariant): WordBool; overload;
    function  DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                 Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                 Color: OleVariant; CellColor: OleVariant; Pattern: OleVariant;
                                 ShowInMenu: OleVariant): WordBool; overload;
    function  DetailStylesAdd(Item: PjTimescaledData): WordBool; overload;
    function  DetailStylesAdd(Item: PjTimescaledData; Position: OleVariant): WordBool; overload;
    function  DetailStylesRemove(Item: PjTimescaledData): WordBool;
    function  DetailStylesRemoveAll: WordBool;
    function  Font: WordBool; overload;
    function  Font(Name: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                   Underline: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                   Underline: OleVariant; Color: OleVariant): WordBool; overload;
    function  Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                   Underline: OleVariant; Color: OleVariant; Reset: OleVariant): WordBool; overload;
    function  Timescale: WordBool;
    function  TimescaleEdit: WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant; Separator: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant; Separator: OleVariant;
                            MajorUseFY: OleVariant): WordBool; overload;
    function  TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant; MajorLabel: OleVariant;
                            MinorLabel: OleVariant; MajorAlign: OleVariant; MinorAlign: OleVariant;
                            MajorCount: OleVariant; MinorCount: OleVariant; MajorTicks: OleVariant;
                            MinorTicks: OleVariant; Enlarge: OleVariant; Separator: OleVariant;
                            MajorUseFY: OleVariant; MinorUseFY: OleVariant): WordBool; overload;
    function  Sort: WordBool; overload;
    function  Sort(Key1: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant;
                   Renumber: OleVariant): WordBool; overload;
    function  Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant;
                   Renumber: OleVariant; Outline: OleVariant): WordBool; overload;
    function  BarBoxStyles: WordBool;
    function  GanttBarFormat: WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant; MiddleShape: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant; InsideText: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant; InsideText: OleVariant;
                             Reset: OleVariant): WordBool; overload;
    function  GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant;
                             StartType: OleVariant; StartColor: OleVariant;
                             MiddleShape: OleVariant; MiddlePattern: OleVariant;
                             MiddleColor: OleVariant; EndShape: OleVariant; EndType: OleVariant;
                             EndColor: OleVariant; LeftText: OleVariant; RightText: OleVariant;
                             TopText: OleVariant; BottomText: OleVariant; InsideText: OleVariant;
                             Reset: OleVariant; ProjectName: OleVariant): WordBool; overload;
    function  TimescaleNonWorking: WordBool; overload;
    function  TimescaleNonWorking(Draw: OleVariant): WordBool; overload;
    function  TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant): WordBool; overload;
    function  TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant; Color: OleVariant): WordBool; overload;
    function  TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant; Color: OleVariant;
                                  Pattern: OleVariant): WordBool; overload;
    function  BoxShowHideFields: WordBool; overload;
    function  BoxShowHideFields(Show: OleVariant): WordBool; overload;
    function  Layout: WordBool;
    function  PERTLayout: WordBool; overload;
    function  PERTLayout(Straight: OleVariant): WordBool; overload;
    function  PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant): WordBool; overload;
    function  PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                         AdjustForPageBreaks: OleVariant): WordBool; overload;
    function  PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                         AdjustForPageBreaks: OleVariant; DisplayPageBreaks: OleVariant): WordBool; overload;
    function  LayoutNow: WordBool;
    function  PERTBorders: WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant; CriticalExternalTaskStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant;
                          CriticalExternalTaskStyle: OleVariant;
                          CriticalExternalTaskColor: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant;
                          CriticalExternalTaskStyle: OleVariant;
                          CriticalExternalTaskColor: OleVariant;
                          NoncriticalExternalTaskStyle: OleVariant): WordBool; overload;
    function  PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                          CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant;
                          NoncriticalMilestoneStyle: OleVariant;
                          NoncriticalMilestoneColor: OleVariant; CriticalSummaryStyle: OleVariant;
                          CriticalSummaryColor: OleVariant; NoncriticalSummaryStyle: OleVariant;
                          NoncriticalSummaryColor: OleVariant; CriticalSubprojectStyle: OleVariant;
                          CriticalSubprojectColor: OleVariant;
                          NoncriticalSubprojectStyle: OleVariant;
                          NoncriticalSubprojectColor: OleVariant; CriticalMarkedStyle: OleVariant;
                          CriticalMarkedColor: OleVariant; NoncriticalMarkedStyle: OleVariant;
                          NoncriticalMarkedColor: OleVariant;
                          CriticalExternalTaskStyle: OleVariant;
                          CriticalExternalTaskColor: OleVariant;
                          NoncriticalExternalTaskStyle: OleVariant;
                          NoncriticalExternalTaskColor: OleVariant): WordBool; overload;
    function  Gridlines: WordBool;
    function  GridlinesEdit(Item: PjGridline): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                            Interval: OleVariant): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                            Interval: OleVariant; IntervalType: OleVariant): WordBool; overload;
    function  GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                            Interval: OleVariant; IntervalType: OleVariant;
                            IntervalColor: OleVariant): WordBool; overload;
    function  ViewShowSelectedTasks: WordBool; overload;
    function  ViewShowSelectedTasks(Show: OleVariant): WordBool; overload;
    function  PageBreaksShow: WordBool; overload;
    function  PageBreaksShow(Show: OleVariant): WordBool; overload;
    function  FindNext: WordBool;
    function  FindPrevious: WordBool;
    function  ZoomOut: WordBool;
    function  ZoomIn: WordBool;
    function  SetField(const Field: WideString; const Value: WideString): WordBool; overload;
    function  SetField(const Field: WideString; const Value: WideString; Create: OleVariant): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant; Create: OleVariant): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant; Create: OleVariant; TaskID: OleVariant): WordBool; overload;
    function  SetTaskField(const Field: WideString; const Value: WideString;
                           AllSelectedTasks: OleVariant; Create: OleVariant; TaskID: OleVariant;
                           ProjectName: OleVariant): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant; Create: OleVariant): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant; Create: OleVariant;
                               ResourceID: OleVariant): WordBool; overload;
    function  SetResourceField(const Field: WideString; const Value: WideString;
                               AllSelectedResources: OleVariant; Create: OleVariant;
                               ResourceID: OleVariant; ProjectName: OleVariant): WordBool; overload;
    function  SetActiveCell(const Value: WideString): WordBool; overload;
    function  SetActiveCell(const Value: WideString; Create: OleVariant): WordBool; overload;
    function  CheckField(const Field: WideString; const Value: WideString): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant; Field2: OleVariant): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant; Field2: OleVariant; Value2: OleVariant): OleVariant; overload;
    function  CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                         Op: OleVariant; Field2: OleVariant; Value2: OleVariant; Test2: OleVariant): OleVariant; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant;
                               CheckField2: OleVariant): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant;
                               CheckField2: OleVariant; CheckValue2: OleVariant): WordBool; overload;
    function  SetMatchingField(const Field: WideString; const Value: WideString;
                               const CheckField: WideString; const CheckValue: WideString;
                               CheckTest: OleVariant; CheckOperation: OleVariant;
                               CheckField2: OleVariant; CheckValue2: OleVariant;
                               CheckTest2: OleVariant): WordBool; overload;
    function  AppExecute: WordBool; overload;
    function  AppExecute(Window: OleVariant): WordBool; overload;
    function  AppExecute(Window: OleVariant; Command: OleVariant): WordBool; overload;
    function  AppExecute(Window: OleVariant; Command: OleVariant; Minimize: OleVariant): WordBool; overload;
    function  AppExecute(Window: OleVariant; Command: OleVariant; Minimize: OleVariant;
                         Activate: OleVariant): WordBool; overload;
    function  AppLaunch(const Application: WideString): WordBool; overload;
    function  AppLaunch(const Application: WideString; Document: OleVariant): WordBool; overload;
    function  AppLaunch(const Application: WideString; Document: OleVariant; Activate: OleVariant): WordBool; overload;
    function  DDELinksUpdate: WordBool;
    function  GotoTaskDates: WordBool;
    function  GanttBarLinks(Display: PjGanttBarLink): WordBool;
    function  GanttShowDrawings: WordBool; overload;
    function  GanttShowDrawings(Display: OleVariant): WordBool; overload;
    function  BarRounding: WordBool; overload;
    function  BarRounding(On_: OleVariant): WordBool; overload;
    function  GanttRollup: WordBool; overload;
    function  GanttRollup(AlwaysRollup: OleVariant): WordBool; overload;
    function  GanttRollup(AlwaysRollup: OleVariant; HideWhenSummaryExpanded: OleVariant): WordBool; overload;
    function  GanttBarTextDateFormat(DateFormat: PjDateFormat): WordBool;
    function  GanttBarSize(Size: PjBarSize): WordBool;
    function  GanttBarStyleDelete(const Item: WideString): WordBool;
    function  GanttBarStyleEdit(const Item: WideString): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant;
                                LeftText: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant;
                                LeftText: OleVariant; RightText: OleVariant): WordBool; overload;
    function  GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                StartShape: OleVariant; StartType: OleVariant;
                                StartColor: OleVariant; MiddleShape: OleVariant;
                                MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                ShowFor: OleVariant; Row: OleVariant; From: OleVariant;
                                To_: OleVariant; BottomText: OleVariant; TopText: OleVariant;
                                LeftText: OleVariant; RightText: OleVariant; InsideText: OleVariant): WordBool; overload;
    function  PERTBoxStyles: WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                            Field3: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                            Field3: OleVariant; Field4: OleVariant): WordBool; overload;
    function  PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                            CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                            Field3: OleVariant; Field4: OleVariant; Field5: OleVariant): WordBool; overload;
    function  PERTSetTask: WordBool; overload;
    function  PERTSetTask(Create: OleVariant): WordBool; overload;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant): WordBool; overload;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant): WordBool; overload;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                          XPosition: OleVariant): WordBool; overload;
    function  PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                          XPosition: OleVariant; YPosition: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles: WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant;
                                     ShowValues: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant;
                                     ShowValues: OleVariant; ShowAvailabilityLine: OleVariant): WordBool; overload;
    function  ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                     TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                     BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant;
                                     TopRightShowAs: OleVariant; TopRightColor: OleVariant;
                                     TopRightPattern: OleVariant; BottomRightShowAs: OleVariant;
                                     BottomRightColor: OleVariant; BottomRightPattern: OleVariant;
                                     ShowValues: OleVariant; ShowAvailabilityLine: OleVariant;
                                     PercentBarOverlap: OleVariant): WordBool; overload;
    function  ConsolidateProjects(Filenames: OleVariant; NewWindow: OleVariant;
                                  AttachToSources: OleVariant; PoolResources: OleVariant;
                                  HideSubtasks: OleVariant; openPool: PjPoolOpen;
                                  UserID: OleVariant; Password: OleVariant): WordBool;
    function  Organizer(Type_: PjOrganizer): WordBool; overload;
    function  Organizer(Type_: PjOrganizer; Task: OleVariant): WordBool; overload;
    function  OrganizerMoveItem: WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant): WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant): WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant): WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant;
                                Name: OleVariant): WordBool; overload;
    function  OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant;
                                Name: OleVariant; Task: OleVariant): WordBool; overload;
    function  OrganizerDeleteItem: WordBool; overload;
    function  OrganizerDeleteItem(Type_: OleVariant): WordBool; overload;
    function  OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant): WordBool; overload;
    function  OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant): WordBool; overload;
    function  OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  Task: OleVariant): WordBool; overload;
    function  OrganizerRenameItem: WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant): WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant): WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant): WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  NewName: OleVariant): WordBool; overload;
    function  OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                  NewName: OleVariant; Task: OleVariant): WordBool; overload;
    function  RecurringTaskInsert: WordBool;
    function  CalendarTimescale: WordBool;
    function  CalendarDateBoxes: WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant;
                                BottomColor: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant;
                                BottomColor: OleVariant; TopPattern: OleVariant): WordBool; overload;
    function  CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant; BottomLeft: OleVariant;
                                BottomRight: OleVariant; TopColor: OleVariant;
                                BottomColor: OleVariant; TopPattern: OleVariant;
                                BottomPattern: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings: WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                   DayTitle: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                   DayTitle: OleVariant; ShowPreview: OleVariant): WordBool; overload;
    function  CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                   DayTitle: OleVariant; ShowPreview: OleVariant;
                                   DaysPerWeek: OleVariant): WordBool; overload;
    function  CalendarDateShadingEdit(Item: PjCalendarShading): WordBool; overload;
    function  CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant): WordBool; overload;
    function  CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant;
                                      Color: OleVariant): WordBool; overload;
    function  CalendarDateShading: WordBool; overload;
    function  CalendarDateShading(BaseCalendarName: OleVariant): WordBool; overload;
    function  CalendarDateShading(BaseCalendarName: OleVariant; ResourceUniqueID: OleVariant): WordBool; overload;
    function  CalendarDateShading(BaseCalendarName: OleVariant; ResourceUniqueID: OleVariant;
                                  ProjectIndex: OleVariant): WordBool; overload;
    function  ZoomCalendar: WordBool; overload;
    function  ZoomCalendar(NumWeeks: OleVariant): WordBool; overload;
    function  ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant): WordBool; overload;
    function  ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant; EndDate: OleVariant): WordBool; overload;
    function  CalendarLayout: WordBool; overload;
    function  CalendarLayout(SortOrder: OleVariant): WordBool; overload;
    function  CalendarLayout(SortOrder: OleVariant; AutoLayout: OleVariant): WordBool; overload;
    function  CalendarBarStyles: WordBool; overload;
    function  CalendarBarStyles(BarRounding: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant; Field4: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant; Field4: OleVariant; Field5: OleVariant): WordBool; overload;
    function  CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                    Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                    Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                    Field3: OleVariant; Field4: OleVariant; Field5: OleVariant;
                                    SplitPattern: OleVariant): WordBool; overload;
    function  CalendarBestFitWeekHeight: WordBool;
    function  DrawingCreate(Type_: PjShape): WordBool; overload;
    function  DrawingCreate(Type_: PjShape; Behind: OleVariant): WordBool; overload;
    function  DrawingMove: WordBool; overload;
    function  DrawingMove(Forward: OleVariant): WordBool; overload;
    function  DrawingMove(Forward: OleVariant; Full: OleVariant): WordBool; overload;
    function  DrawingReshape: WordBool;
    function  DrawingProperties: WordBool; overload;
    function  DrawingProperties(SizePositionTab: OleVariant): WordBool; overload;
    function  DrawingCycleColor: WordBool;
    function  FormatCopy: WordBool;
    function  FormatPaste: WordBool;
    function  FormatPainter: WordBool;
    function  Toolbars: WordBool; overload;
    function  Toolbars(Action: OleVariant): WordBool; overload;
    function  Toolbars(Action: OleVariant; ToolbarName: OleVariant): WordBool; overload;
    function  Toolbars(Action: OleVariant; ToolbarName: OleVariant; NewToolbarName: OleVariant): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant; FaceIndex: OleVariant): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant; FaceIndex: OleVariant; Description: OleVariant): WordBool; overload;
    function  ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                Command: OleVariant; FaceIndex: OleVariant;
                                Description: OleVariant; ToolTip: OleVariant): WordBool; overload;
    function  ToolbarDeleteTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
    function  ToolbarsCustomize: WordBool;
    function  ToolbarCustomizeTool: WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant; FaceIndex: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant; FaceIndex: OleVariant;
                                   Description: OleVariant): WordBool; overload;
    function  ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                   Command: OleVariant; FaceIndex: OleVariant;
                                   Description: OleVariant; ToolTip: OleVariant): WordBool; overload;
    function  ToolbarCopyToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
    function  ToolbarPasteToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
    function  FontBold: WordBool; overload;
    function  FontBold(Set_: OleVariant): WordBool; overload;
    function  FontItalic: WordBool; overload;
    function  FontItalic(Set_: OleVariant): WordBool; overload;
    function  FontUnderLine: WordBool; overload;
    function  FontUnderLine(Set_: OleVariant): WordBool; overload;
    function  ColumnAlignment(Align: PjAlignment): WordBool;
    function  Reports: WordBool;
    function  TipOfTheDay: WordBool;
    function  FindFile: WordBool;
    function  MailUpdateProject(const DataFile: WideString): WordBool;
    function  MailSendProjectMail: WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant; ShowDialog: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant;
                                  ShowDialog: OleVariant; InstallationMessage: OleVariant): WordBool; overload;
    function  MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  Fields: OleVariant; UpdateAsOf: OleVariant;
                                  ShowDialog: OleVariant; InstallationMessage: OleVariant;
                                  UpdateFrom: OleVariant): WordBool; overload;
    function  WebInbox: WordBool;
    function  GanttChartWizard: WordBool;
    function  DrawingToolbarShow: WordBool;
    function  ReminderSet: WordBool; overload;
    function  ReminderSet(Start: OleVariant): WordBool; overload;
    function  ReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool; overload;
    function  SchedulePlusReminderSet: WordBool; overload;
    function  SchedulePlusReminderSet(Start: OleVariant): WordBool; overload;
    function  SchedulePlusReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool; overload;
    function  CalendarTaskList: WordBool; overload;
    function  CalendarTaskList(Date: OleVariant): WordBool; overload;
    function  OutlineSymbolsToggle: WordBool; overload;
    function  OutlineSymbolsToggle(Show: OleVariant): WordBool; overload;
    function  ResourceSharingPoolAction(Action: PjPoolAction): WordBool; overload;
    function  ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant): WordBool; overload;
    function  ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant;
                                        ReadOnly: OleVariant): WordBool; overload;
    function  ResourceAddressBook: WordBool;
    function  ResourceDetails: WordBool; overload;
    function  ResourceDetails(Name: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize: WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant; FieldID: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                       FieldID: OleVariant; Title: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                       FieldID: OleVariant; Title: OleVariant;
                                       IncludeInTeamStatus: OleVariant): WordBool; overload;
    function  MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                       FieldID: OleVariant; Title: OleVariant;
                                       IncludeInTeamStatus: OleVariant; Editable: OleVariant): WordBool; overload;
    function  FileQuit(Save: PjSaveType): WordBool;
    function  About: WordBool;
    function  DetailStylesProperties: WordBool; overload;
    function  DetailStylesProperties(AlignCellData: OleVariant): WordBool; overload;
    function  DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant): WordBool; overload;
    function  DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant;
                                     ShortLabels: OleVariant): WordBool; overload;
    function  DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant;
                                     ShortLabels: OleVariant; DisplayDetailsColumn: OleVariant): WordBool; overload;
    function  DetailStylesToggleItem(Item: PjTimescaledData): WordBool;
    function  AutoFilter: WordBool;
    function  ViewBar: WordBool;
    function  MacroShowVba: WordBool;
    function  MacroShowCode: WordBool;
    function  WebGoBack: WordBool;
    function  WebGoForward: WordBool;
    function  WebStopLoading: WordBool;
    function  WebRefresh: WordBool;
    function  WebOpenStartPage: WordBool;
    function  WebOpenSearchPage: WordBool;
    function  WebHideToolbars: WordBool; overload;
    function  WebHideToolbars(Hide: OleVariant): WordBool; overload;
    function  FollowHyperlink: WordBool; overload;
    function  FollowHyperlink(Address: OleVariant): WordBool; overload;
    function  FollowHyperlink(Address: OleVariant; SubAddress: OleVariant): WordBool; overload;
    function  FollowHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant): WordBool; overload;
    function  FollowHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant;
                              NewWindow: OleVariant): WordBool; overload;
    function  EditPasteAsHyperlink: WordBool;
    function  InsertHyperlink: WordBool; overload;
    function  InsertHyperlink(Name: OleVariant): WordBool; overload;
    function  InsertHyperlink(Name: OleVariant; Address: OleVariant): WordBool; overload;
    function  InsertHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant): WordBool; overload;
    function  InsertHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                              ScreenTip: OleVariant): WordBool; overload;
    function  EditHyperlink: WordBool; overload;
    function  EditHyperlink(Name: OleVariant): WordBool; overload;
    function  EditHyperlink(Name: OleVariant; Address: OleVariant): WordBool; overload;
    function  EditHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant): WordBool; overload;
    function  EditHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                            ScreenTip: OleVariant): WordBool; overload;
    function  WebOpenHyperlink: WordBool; overload;
    function  WebOpenHyperlink(Address: OleVariant): WordBool; overload;
    function  WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant): WordBool; overload;
    function  WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant): WordBool; overload;
    function  WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant; AddHistory: OleVariant;
                               NewWindow: OleVariant): WordBool; overload;
    function  WebCopyHyperlink: WordBool;
    function  WebAddToFavorites: WordBool; overload;
    function  WebAddToFavorites(CurrentLink: OleVariant): WordBool; overload;
    function  EditClearHyperlink: WordBool;
    function  WebSetStartPage: WordBool; overload;
    function  WebSetStartPage(Address: OleVariant): WordBool; overload;
    function  WebSetSearchPage: WordBool; overload;
    function  WebSetSearchPage(Address: OleVariant): WordBool; overload;
    function  WebOpenFavorites: WordBool;
    function  WebToolbar: WordBool; overload;
    function  WebToolbar(Show: OleVariant): WordBool; overload;
    function  SplitTask: WordBool; overload;
    function  SplitTask(Lock: OleVariant): WordBool; overload;
    function  CustomFieldRename(FieldID: PjCustomField; const NewName: WideString): WordBool; overload;
    function  CustomFieldRename(FieldID: PjCustomField; const NewName: WideString;
                                Phonetic: OleVariant): WordBool; overload;
    function  CustomizeField: WordBool;
    function  GanttShowBarSplits: WordBool; overload;
    function  GanttShowBarSplits(Display: OleVariant): WordBool; overload;
    function  CalendarShowBarSplits: WordBool; overload;
    function  CalendarShowBarSplits(Display: OleVariant): WordBool; overload;
    function  MapEdit: WordBool; overload;
    function  MapEdit(Name: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant;
                      TemplateFile: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant;
                      TemplateFile: OleVariant; IncludeImage: OleVariant): WordBool; overload;
    function  MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                      NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant;
                      TableName: OleVariant; FieldName: OleVariant; ExternalFieldName: OleVariant;
                      ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                      HeaderRow: OleVariant; AssignmentData: OleVariant; TextDelimiter: OleVariant;
                      TextFileOrigin: OleVariant; UseHtmlTemplate: OleVariant;
                      TemplateFile: OleVariant; IncludeImage: OleVariant; ImageFile: OleVariant): WordBool; overload;
    function  FillAcross: WordBool; overload;
    function  FillAcross(Right: OleVariant): WordBool; overload;
    function  LinksBetweenProjects: WordBool; overload;
    function  LinksBetweenProjects(AcceptAll: OleVariant): WordBool; overload;
    function  ToggleAssignments: WordBool;
    function  ProgressLines: WordBool;
    function  ResourceSharingPoolUpdate: WordBool; overload;
    function  ResourceSharingPoolUpdate(allSharers: OleVariant): WordBool; overload;
    function  ResourceSharingPoolRefresh: WordBool;
    function  WebHelp: WordBool; overload;
    function  WebHelp(Type_: OleVariant): WordBool; overload;
    function  AddProgressLine: WordBool;
    function  CustomizeIMEMode(FieldID: PjField; IMEMode: PjIMEMode): WordBool;
    function  DeleteFromDatabase: WordBool; overload;
    function  DeleteFromDatabase(Name: OleVariant): WordBool; overload;
    function  DeleteFromDatabase(Name: OleVariant; UserID: OleVariant): WordBool; overload;
    function  DeleteFromDatabase(Name: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant): WordBool; overload;
    function  DeleteFromDatabase(Name: OleVariant; UserID: OleVariant;
                                 DatabasePassWord: OleVariant; FormatID: OleVariant): WordBool; overload;
    function  WBSCodeRenumber: WordBool; overload;
    function  WBSCodeRenumber(All: OleVariant): WordBool; overload;
    function  WBSCodeMaskEdit(CodePrefix: OleVariant; Level: OleVariant; Sequence: PjWBSSequence;
                              Length: OleVariant; Separator: OleVariant; CodeGenerate: OleVariant;
                              VerifyUniqueness: OleVariant): WordBool;
    function  CustomOutlineCodeEdit(FieldID: PjCustomField; Level: OleVariant;
                                    Sequence: PjCustomOutlineCodeSequence; Length: OleVariant;
                                    Separator: OleVariant; OnlyLookUpTableCodes: OleVariant;
                                    OnlyCompleteCodes: OleVariant): WordBool;
    function  OptionsSave: WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant;
                          AutomaticSavePrompt: OleVariant): WordBool; overload;
    function  OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                          DefaultUserTemplatesPath: OleVariant;
                          DefaultWorkgroupTemplatesPath: OleVariant;
                          ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                          AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant;
                          AutomaticSavePrompt: OleVariant; SetDefaultsDatabase: OleVariant): WordBool; overload;
    function  OfficeOnTheWeb: WordBool;
    function  FixMe: WordBool;
    function  ViewShowWorkAvailability: WordBool;
    function  ViewShowUnitAvailability: WordBool;
    function  BaselineClear: WordBool; overload;
    function  BaselineClear(All: OleVariant): WordBool; overload;
    function  BaselineClear(All: OleVariant; From: OleVariant): WordBool; overload;
    function  Groups: WordBool;
    function  GroupApply: WordBool; overload;
    function  GroupApply(Name: OleVariant): WordBool; overload;
    function  GroupBy: WordBool;
    function  LookUpTableAdd(FieldID: PjCustomField): WordBool; overload;
    function  LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant): WordBool; overload;
    function  LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant; Code: OleVariant): WordBool; overload;
    function  LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant; Code: OleVariant;
                             Description: OleVariant): WordBool; overload;
    function  BoxStylesEdit(Style: PjBoxStyle; DataTemplate: OleVariant;
                            HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                            BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                            BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern): WordBool;
    function  BoxFormat(ProjectName: OleVariant; TaskID: OleVariant; DataTemplate: OleVariant;
                        HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                        BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                        BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern;
                        Reset: OleVariant): WordBool;
    function  BarBoxFormat: WordBool;
    function  CreateWebAccount(ServerURL: OleVariant; Name: OleVariant;
                               AuthenticationType: PjAuthentication; AccountType: PjAccountType;
                               ShowDialog: OleVariant): WordBool;
    function  BoxDataTemplate(const Name: WideString; Action: PjDataTemplate): WordBool; overload;
    function  BoxDataTemplate(const Name: WideString; Action: PjDataTemplate; NewName: OleVariant): WordBool; overload;
    function  BoxDataTemplate(const Name: WideString; Action: PjDataTemplate; NewName: OleVariant;
                              Overwrite: OleVariant): WordBool; overload;
    function  BoxCellLayout(const Name: WideString): WordBool; overload;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant): WordBool; overload;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant; CellColumns: OleVariant): WordBool; overload;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant; CellColumns: OleVariant;
                            CellWidth: OleVariant): WordBool; overload;
    function  BoxCellLayout(const Name: WideString; CellRows: OleVariant; CellColumns: OleVariant;
                            CellWidth: OleVariant; MergeCells: OleVariant): WordBool; overload;
    function  BoxCellEdit(const Name: WideString; Cell: PjCell; FieldName: PjField;
                          Font: OleVariant; FontSize: OleVariant; FontColor: PjColor;
                          Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                          HorizontalAlignment: PjAlignment; VerticalAlignment: PjVerticalAlignment;
                          TextLineLimit: OleVariant; ShowLabel: OleVariant; Label_: OleVariant;
                          DateFormat: PjDateFormat): WordBool;
    function  ResourceWindowsAccount: WordBool; overload;
    function  ResourceWindowsAccount(Name: OleVariant): WordBool; overload;
    function  ResourceWindowsAccount(Name: OleVariant; ShowDialog: OleVariant): WordBool; overload;
    function  SetRowHeight: WordBool; overload;
    function  SetRowHeight(Unit_: OleVariant): WordBool; overload;
    function  SetRowHeight(Unit_: OleVariant; Rows: OleVariant): WordBool; overload;
    function  SetRowHeight(Unit_: OleVariant; Rows: OleVariant; UseUniqueID: OleVariant): WordBool; overload;
    function  ComAddInsDialog: WordBool;
    function  MacroSecurity: WordBool;
    function  LayoutSelectionNow: WordBool;
    function  BoxAlign(Alignment: PjAlign): WordBool;
    function  ConvertHangulToHanja: WordBool;
    function  UpdateProjectToWeb: WordBool; overload;
    function  UpdateProjectToWeb(ServerURL: OleVariant): WordBool; overload;
    function  CustomFieldProperties(FieldID: PjCustomField; Attribute: PjCustomFieldAttribute;
                                    SummaryCalc: PjSummaryCalc): WordBool; overload;
    function  CustomFieldProperties(FieldID: PjCustomField; Attribute: PjCustomFieldAttribute;
                                    SummaryCalc: PjSummaryCalc; GraphicalIndicators: OleVariant): WordBool; overload;
    function  CustomFieldSetFormula(FieldID: PjCustomField): WordBool; overload;
    function  CustomFieldSetFormula(FieldID: PjCustomField; Formula: OleVariant): WordBool; overload;
    function  CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                      const Value: WideString; IndicatorID: PjIndicator;
                                      CriteriaList: PjCriteriaList): WordBool; overload;
    function  CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                      const Value: WideString; IndicatorID: PjIndicator;
                                      CriteriaList: PjCriteriaList; Index: OleVariant): WordBool; overload;
    function  CustomFieldIndicators(FieldID: PjCustomField): WordBool; overload;
    function  CustomFieldIndicators(FieldID: PjCustomField; SummaryInheritsNonsummary: OleVariant): WordBool; overload;
    function  CustomFieldIndicators(FieldID: PjCustomField; SummaryInheritsNonsummary: OleVariant;
                                    ProjectInheritsSummary: OleVariant): WordBool; overload;
    function  CustomFieldIndicators(FieldID: PjCustomField; SummaryInheritsNonsummary: OleVariant;
                                    ProjectInheritsSummary: OleVariant; ShowToolTips: OleVariant): WordBool; overload;
    function  CustomFieldIndicatorDelete(FieldID: PjCustomField; Index: Smallint;
                                         CriteriaList: PjCriteriaList): WordBool;
    function  CustomFieldValueList(FieldID: PjCustomField; ListDefault: OleVariant;
                                   DefaultValue: OleVariant; RestrictToList: OleVariant;
                                   AppendNew: OleVariant; PromptOnNew: OleVariant;
                                   DisplayOrder: PjListOrder): WordBool;
    function  CustomFieldValueListAdd(FieldID: PjCustomField): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant; Phonetic: OleVariant): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant; Phonetic: OleVariant;
                                      Index: OleVariant): WordBool; overload;
    function  CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                      Description: OleVariant; Phonetic: OleVariant;
                                      Index: OleVariant; FieldDefault: OleVariant): WordBool; overload;
    function  CustomFieldValueListDelete(FieldID: PjCustomField; Index: Smallint): WordBool;
    function  BoxLayout(LayoutMode: PjLayoutMode; LayoutScheme: PjLayoutScheme;
                        SummaryPrecedence: OleVariant; RowAlignment: PjVerticalAlignment;
                        ColumnAlignment: PjAlignment; RowSpacing: OleVariant;
                        ColumnSpacing: OleVariant; RowHeight: PjRowColSize;
                        ColumnWidth: PjRowColSize; AdjustForPageBreaks: OleVariant;
                        ShowSummaryTasks: OleVariant; ViewBackgroundColor: PjColor;
                        ViewBackgroundPattern: PjBackgroundPattern; ShowProgressMarks: OleVariant;
                        ShowPageBreaks: OleVariant; ShowIDOnly: OleVariant): WordBool;
    function  BoxLinks(Style: PjLinkStyle; ShowArrows: OleVariant; ShowLabels: OleVariant;
                       ColorMode: PjLinkColorMode; CriticalColor: PjColor; NoncriticalColor: PjColor): WordBool;
    function  SummaryTasksShow: WordBool; overload;
    function  SummaryTasksShow(Show: OleVariant): WordBool; overload;
    function  BoxProgressMarksShow: WordBool; overload;
    function  BoxProgressMarksShow(Show: OleVariant): WordBool; overload;
    function  BoxLinkLabelsShow: WordBool; overload;
    function  BoxLinkLabelsShow(Show: OleVariant): WordBool; overload;
    function  BoxLinkStyleToggle: WordBool; overload;
    function  BoxLinkStyleToggle(StraightLinks: OleVariant): WordBool; overload;
    function  LayoutRelatedNow: WordBool;
    function  BoxSet(Action: PjBoxSet): WordBool; overload;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant): WordBool; overload;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant): WordBool; overload;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                     YPosition: OleVariant): WordBool; overload;
    function  BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                     YPosition: OleVariant; ProjectName: OleVariant): WordBool; overload;
    function  SetSplitBar: WordBool; overload;
    function  SetSplitBar(ShowColumns: OleVariant): WordBool; overload;
    property  DefaultInterface: _Global read GetDefaultInterface;
    property DisplayNotesIndicator: WordBool read Get_DisplayNotesIndicator write Set_DisplayNotesIndicator;
    property ShowTipOfDay: WordBool read Get_ShowTipOfDay write Set_ShowTipOfDay;
    property ShowToolTips: WordBool read Get_ShowToolTips write Set_ShowToolTips;
    property CopyResourceUsageHeader: WordBool read Get_CopyResourceUsageHeader write Set_CopyResourceUsageHeader;
    property Windows: Windows read Get_Windows;
    property CommandBars: CommandBars read Get_CommandBars;
    property AnswerWizard: AnswerWizard read Get_AnswerWizard;
    property Projects: Projects read Get_Projects;
    property OperatingSystem: WideString read Get_OperatingSystem;
    property FileFormatID[const Name: WideString; UserID: OleVariant; DatabasePassWord: OleVariant]: WideString read Get_FileFormatID;
    property FileBuildID[const Name: WideString; UserID: OleVariant; DatabasePassWord: OleVariant]: WideString read Get_FileBuildID;
    property COMAddIns: COMAddIns read Get_COMAddIns;
    property Application: Application read Get_Application write Set_Application;
    property Parent: Application read Get_Parent write Set_Parent;
    property ActiveSelection: Selection read Get_ActiveSelection write Set_ActiveSelection;
    property ActiveCell: Cell read Get_ActiveCell write Set_ActiveCell;
    property ActiveProject: Project read Get_ActiveProject write Set_ActiveProject;
    property ActiveWindow: Window read Get_ActiveWindow write Set_ActiveWindow;
    property SupportsMultipleDocuments: WordBool read Get_SupportsMultipleDocuments write Set_SupportsMultipleDocuments;
    property SupportsMultipleWindows: WordBool read Get_SupportsMultipleWindows write Set_SupportsMultipleWindows;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property PathSeparator: WideString read Get_PathSeparator write Set_PathSeparator;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Name: WideString read Get_Name write Set_Name;
    property Path: WideString read Get_Path write Set_Path;
    property Version: WideString read Get_Version write Set_Version;
    property WindowState: PjWindowState read Get_WindowState write Set_WindowState;
    property DateOrder: PjDateOrder read Get_DateOrder write Set_DateOrder;
    property DateSeparator: WideString read Get_DateSeparator write Set_DateSeparator;
    property ThousandSeparator: WideString read Get_ThousandSeparator write Set_ThousandSeparator;
    property DecimalSeparator: WideString read Get_DecimalSeparator write Set_DecimalSeparator;
    property ListSeparator: WideString read Get_ListSeparator write Set_ListSeparator;
    property TimeSeparator: WideString read Get_TimeSeparator write Set_TimeSeparator;
    property TwelveHourTimeFormat: WordBool read Get_TwelveHourTimeFormat write Set_TwelveHourTimeFormat;
    property AMText: WideString read Get_AMText write Set_AMText;
    property PMText: WideString read Get_PMText write Set_PMText;
    property DefaultView: WideString read Get_DefaultView write Set_DefaultView;
    property DisplayStatusBar: WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
    property DisplayAlerts: WordBool read Get_DisplayAlerts write Set_DisplayAlerts;
    property DisplayEntryBar: WordBool read Get_DisplayEntryBar write Set_DisplayEntryBar;
    property DisplayScrollBars: WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
    property DisplayWindowsInTaskbar: WordBool read Get_DisplayWindowsInTaskbar write Set_DisplayWindowsInTaskbar;
    property Calculation: PjCalculation read Get_Calculation write Set_Calculation;
    property AutoLevel: WordBool read Get_AutoLevel write Set_AutoLevel;
    property AutoClearLeveling: WordBool read Get_AutoClearLeveling write Set_AutoClearLeveling;
    property LevelWithinSlack: WordBool read Get_LevelWithinSlack write Set_LevelWithinSlack;
    property LevelOrder: PjLevelOrder read Get_LevelOrder write Set_LevelOrder;
    property LevelPeriodBasis: PjLevelPeriodBasis read Get_LevelPeriodBasis write Set_LevelPeriodBasis;
    property LevelIndividualAssignments: WordBool read Get_LevelIndividualAssignments write Set_LevelIndividualAssignments;
    property LevelingCanSplit: WordBool read Get_LevelingCanSplit write Set_LevelingCanSplit;
    property MoveAfterReturn: WordBool read Get_MoveAfterReturn write Set_MoveAfterReturn;
    property DisplayScheduleMessages: WordBool read Get_DisplayScheduleMessages write Set_DisplayScheduleMessages;
    property StartWeekOn: PjWeekday read Get_StartWeekOn write Set_StartWeekOn;
    property StartYearIn: PjMonth read Get_StartYearIn write Set_StartYearIn;
    property CellDragAndDrop: WordBool read Get_CellDragAndDrop write Set_CellDragAndDrop;
    property UserName: WideString read Get_UserName write Set_UserName;
    property AskToUpdateLinks: WordBool read Get_AskToUpdateLinks write Set_AskToUpdateLinks;
    property DisplayPlanningWizard: WordBool read Get_DisplayPlanningWizard write Set_DisplayPlanningWizard;
    property DisplayWizardUsage: WordBool read Get_DisplayWizardUsage write Set_DisplayWizardUsage;
    property DisplayWizardErrors: WordBool read Get_DisplayWizardErrors write Set_DisplayWizardErrors;
    property DisplayWizardScheduling: WordBool read Get_DisplayWizardScheduling write Set_DisplayWizardScheduling;
    property ShowWelcome: WordBool read Get_ShowWelcome write Set_ShowWelcome;
    property LoadLastFile: WordBool read Get_LoadLastFile write Set_LoadLastFile;
    property PromptForSummaryInfo: WordBool read Get_PromptForSummaryInfo write Set_PromptForSummaryInfo;
    property DisplayOLEIndicator: WordBool read Get_DisplayOLEIndicator write Set_DisplayOLEIndicator;
    property DefaultDateFormat: PjDateFormat read Get_DefaultDateFormat write Set_DefaultDateFormat;
    property DayLeadingZero: WordBool read Get_DayLeadingZero write Set_DayLeadingZero;
    property MonthLeadingZero: WordBool read Get_MonthLeadingZero write Set_MonthLeadingZero;
    property TimeLeadingZero: WordBool read Get_TimeLeadingZero write Set_TimeLeadingZero;
    property RecentFilesMaximum: Integer read Get_RecentFilesMaximum write Set_RecentFilesMaximum;
    property DisplayRecentFiles: WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
    property MacroVirusProtection: WordBool read Get_MacroVirusProtection write Set_MacroVirusProtection;
    property ShowAssignmentUnitsAs: PjAssignmentUnits read Get_ShowAssignmentUnitsAs write Set_ShowAssignmentUnitsAs;
    property AutomaticallyFillPhoneticFields: WordBool read Get_AutomaticallyFillPhoneticFields write Set_AutomaticallyFillPhoneticFields;
    property DefaultAutoFilter: WordBool read Get_DefaultAutoFilter write Set_DefaultAutoFilter;
    property ShowEstimatedDuration: WordBool read Get_ShowEstimatedDuration write Set_ShowEstimatedDuration;
    property NewTasksEstimated: WordBool read Get_NewTasksEstimated write Set_NewTasksEstimated;
    property Assistant: Assistant read Get_Assistant write Set_Assistant;
    property DisplayViewBar: WordBool read Get_DisplayViewBar write Set_DisplayViewBar;
    property VBE: VBE read Get_VBE write Set_VBE;
    property EnableCancelKey: PjEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property UsableWidth: Double read Get_UsableWidth write Set_UsableWidth;
    property UsableHeight: Double read Get_UsableHeight write Set_UsableHeight;
  published
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
    property Server: TGlobalProperties read GetServerProperties;
{$ENDIF}
  end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
// *********************************************************************//
// OLE Server Properties Proxy Class
// Server Object    : TGlobal
// (This object is used by the IDE's Property Inspector to allow editing
//  of the properties of this server)
// *********************************************************************//
 TGlobalProperties = class(TPersistent)
  private
    FServer:    TGlobal;
    function    GetDefaultInterface: _Global;
    constructor Create(AServer: TGlobal);
  protected
    function Get_Application: Application;
    procedure Set_Application(const Value: Application);
    function Get_Parent: Application;
    procedure Set_Parent(const Value: Application);
    function Get_ActiveSelection: Selection;
    procedure Set_ActiveSelection(const Value: Selection);
    function Get_ActiveCell: Cell;
    procedure Set_ActiveCell(const Value: Cell);
    function Get_ActiveProject: Project;
    procedure Set_ActiveProject(const Value: Project);
    function Get_ActiveWindow: Window;
    procedure Set_ActiveWindow(const Value: Window);
    function Get_SupportsMultipleDocuments: WordBool;
    procedure Set_SupportsMultipleDocuments(Value: WordBool);
    function Get_SupportsMultipleWindows: WordBool;
    procedure Set_SupportsMultipleWindows(Value: WordBool);
    function Get_Visible: WordBool;
    procedure Set_Visible(Value: WordBool);
    function Get_PathSeparator: WideString;
    procedure Set_PathSeparator(const Value: WideString);
    function Get_Caption: WideString;
    procedure Set_Caption(const Value: WideString);
    function Get_Name: WideString;
    procedure Set_Name(const Value: WideString);
    function Get_Path: WideString;
    procedure Set_Path(const Value: WideString);
    function Get_Version: WideString;
    procedure Set_Version(const Value: WideString);
    function Get_WindowState: PjWindowState;
    procedure Set_WindowState(Value: PjWindowState);
    function Get_DateOrder: PjDateOrder;
    procedure Set_DateOrder(Value: PjDateOrder);
    function Get_DateSeparator: WideString;
    procedure Set_DateSeparator(const Value: WideString);
    function Get_ThousandSeparator: WideString;
    procedure Set_ThousandSeparator(const Value: WideString);
    function Get_DecimalSeparator: WideString;
    procedure Set_DecimalSeparator(const Value: WideString);
    function Get_ListSeparator: WideString;
    procedure Set_ListSeparator(const Value: WideString);
    function Get_TimeSeparator: WideString;
    procedure Set_TimeSeparator(const Value: WideString);
    function Get_TwelveHourTimeFormat: WordBool;
    procedure Set_TwelveHourTimeFormat(Value: WordBool);
    function Get_AMText: WideString;
    procedure Set_AMText(const Value: WideString);
    function Get_PMText: WideString;
    procedure Set_PMText(const Value: WideString);
    function Get_DefaultView: WideString;
    procedure Set_DefaultView(const Value: WideString);
    function Get_DisplayStatusBar: WordBool;
    procedure Set_DisplayStatusBar(Value: WordBool);
    function Get_DisplayAlerts: WordBool;
    procedure Set_DisplayAlerts(Value: WordBool);
    function Get_DisplayEntryBar: WordBool;
    procedure Set_DisplayEntryBar(Value: WordBool);
    function Get_DisplayScrollBars: WordBool;
    procedure Set_DisplayScrollBars(Value: WordBool);
    function Get_DisplayWindowsInTaskbar: WordBool;
    procedure Set_DisplayWindowsInTaskbar(Value: WordBool);
    function Get_Calculation: PjCalculation;
    procedure Set_Calculation(Value: PjCalculation);
    function Get_AutoLevel: WordBool;
    procedure Set_AutoLevel(Value: WordBool);
    function Get_AutoClearLeveling: WordBool;
    procedure Set_AutoClearLeveling(Value: WordBool);
    function Get_LevelWithinSlack: WordBool;
    procedure Set_LevelWithinSlack(Value: WordBool);
    function Get_LevelOrder: PjLevelOrder;
    procedure Set_LevelOrder(Value: PjLevelOrder);
    function Get_LevelPeriodBasis: PjLevelPeriodBasis;
    procedure Set_LevelPeriodBasis(Value: PjLevelPeriodBasis);
    function Get_LevelIndividualAssignments: WordBool;
    procedure Set_LevelIndividualAssignments(Value: WordBool);
    function Get_LevelingCanSplit: WordBool;
    procedure Set_LevelingCanSplit(Value: WordBool);
    function Get_MoveAfterReturn: WordBool;
    procedure Set_MoveAfterReturn(Value: WordBool);
    function Get_DisplayScheduleMessages: WordBool;
    procedure Set_DisplayScheduleMessages(Value: WordBool);
    function Get_StartWeekOn: PjWeekday;
    procedure Set_StartWeekOn(Value: PjWeekday);
    function Get_StartYearIn: PjMonth;
    procedure Set_StartYearIn(Value: PjMonth);
    function Get_CellDragAndDrop: WordBool;
    procedure Set_CellDragAndDrop(Value: WordBool);
    function Get_UserName: WideString;
    procedure Set_UserName(const Value: WideString);
    function Get_DisplayNotesIndicator: WordBool;
    procedure Set_DisplayNotesIndicator(Value: WordBool);
    function Get_AskToUpdateLinks: WordBool;
    procedure Set_AskToUpdateLinks(Value: WordBool);
    function Get_DisplayPlanningWizard: WordBool;
    procedure Set_DisplayPlanningWizard(Value: WordBool);
    function Get_DisplayWizardUsage: WordBool;
    procedure Set_DisplayWizardUsage(Value: WordBool);
    function Get_DisplayWizardErrors: WordBool;
    procedure Set_DisplayWizardErrors(Value: WordBool);
    function Get_DisplayWizardScheduling: WordBool;
    procedure Set_DisplayWizardScheduling(Value: WordBool);
    function Get_ShowTipOfDay: WordBool;
    procedure Set_ShowTipOfDay(Value: WordBool);
    function Get_ShowToolTips: WordBool;
    procedure Set_ShowToolTips(Value: WordBool);
    function Get_ShowWelcome: WordBool;
    procedure Set_ShowWelcome(Value: WordBool);
    function Get_LoadLastFile: WordBool;
    procedure Set_LoadLastFile(Value: WordBool);
    function Get_PromptForSummaryInfo: WordBool;
    procedure Set_PromptForSummaryInfo(Value: WordBool);
    function Get_DisplayOLEIndicator: WordBool;
    procedure Set_DisplayOLEIndicator(Value: WordBool);
    function Get_DefaultDateFormat: PjDateFormat;
    procedure Set_DefaultDateFormat(Value: PjDateFormat);
    function Get_DayLeadingZero: WordBool;
    procedure Set_DayLeadingZero(Value: WordBool);
    function Get_MonthLeadingZero: WordBool;
    procedure Set_MonthLeadingZero(Value: WordBool);
    function Get_TimeLeadingZero: WordBool;
    procedure Set_TimeLeadingZero(Value: WordBool);
    function Get_CopyResourceUsageHeader: WordBool;
    procedure Set_CopyResourceUsageHeader(Value: WordBool);
    function Get_RecentFilesMaximum: Integer;
    procedure Set_RecentFilesMaximum(Value: Integer);
    function Get_DisplayRecentFiles: WordBool;
    procedure Set_DisplayRecentFiles(Value: WordBool);
    function Get_MacroVirusProtection: WordBool;
    procedure Set_MacroVirusProtection(Value: WordBool);
    function Get_ShowAssignmentUnitsAs: PjAssignmentUnits;
    procedure Set_ShowAssignmentUnitsAs(Value: PjAssignmentUnits);
    function Get_AutomaticallyFillPhoneticFields: WordBool;
    procedure Set_AutomaticallyFillPhoneticFields(Value: WordBool);
    function Get_DefaultAutoFilter: WordBool;
    procedure Set_DefaultAutoFilter(Value: WordBool);
    function Get_ShowEstimatedDuration: WordBool;
    procedure Set_ShowEstimatedDuration(Value: WordBool);
    function Get_NewTasksEstimated: WordBool;
    procedure Set_NewTasksEstimated(Value: WordBool);
    function Get_Assistant: Assistant;
    procedure Set_Assistant(const Value: Assistant);
    function Get_DisplayViewBar: WordBool;
    procedure Set_DisplayViewBar(Value: WordBool);
    function Get_VBE: VBE;
    procedure Set_VBE(const Value: VBE);
    function Get_EnableCancelKey: PjEnableCancelKey;
    procedure Set_EnableCancelKey(Value: PjEnableCancelKey);
    function Get_UserControl: WordBool;
    procedure Set_UserControl(Value: WordBool);
    function Get_UsableWidth: Double;
    procedure Set_UsableWidth(Value: Double);
    function Get_UsableHeight: Double;
    procedure Set_UsableHeight(Value: Double);
    function  Get_Windows: Windows;
    function  Get_CommandBars: CommandBars;
    function  Get_AnswerWizard: AnswerWizard;
    function  Get_Projects: Projects;
    function  Get_OperatingSystem: WideString;
    function  Get_FileFormatID(const Name: WideString; UserID: OleVariant;
                               DatabasePassWord: OleVariant): WideString;
    function  Get_FileBuildID(const Name: WideString; UserID: OleVariant;
                              DatabasePassWord: OleVariant): WideString;
    function  Get_COMAddIns: COMAddIns;
  public
    property DefaultInterface: _Global read GetDefaultInterface;
  published
    property Application: Application read Get_Application write Set_Application;
    property Parent: Application read Get_Parent write Set_Parent;
    property ActiveSelection: Selection read Get_ActiveSelection write Set_ActiveSelection;
    property ActiveCell: Cell read Get_ActiveCell write Set_ActiveCell;
    property ActiveProject: Project read Get_ActiveProject write Set_ActiveProject;
    property ActiveWindow: Window read Get_ActiveWindow write Set_ActiveWindow;
    property SupportsMultipleDocuments: WordBool read Get_SupportsMultipleDocuments write Set_SupportsMultipleDocuments;
    property SupportsMultipleWindows: WordBool read Get_SupportsMultipleWindows write Set_SupportsMultipleWindows;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property PathSeparator: WideString read Get_PathSeparator write Set_PathSeparator;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Name: WideString read Get_Name write Set_Name;
    property Path: WideString read Get_Path write Set_Path;
    property Version: WideString read Get_Version write Set_Version;
    property WindowState: PjWindowState read Get_WindowState write Set_WindowState;
    property DateOrder: PjDateOrder read Get_DateOrder write Set_DateOrder;
    property DateSeparator: WideString read Get_DateSeparator write Set_DateSeparator;
    property ThousandSeparator: WideString read Get_ThousandSeparator write Set_ThousandSeparator;
    property DecimalSeparator: WideString read Get_DecimalSeparator write Set_DecimalSeparator;
    property ListSeparator: WideString read Get_ListSeparator write Set_ListSeparator;
    property TimeSeparator: WideString read Get_TimeSeparator write Set_TimeSeparator;
    property TwelveHourTimeFormat: WordBool read Get_TwelveHourTimeFormat write Set_TwelveHourTimeFormat;
    property AMText: WideString read Get_AMText write Set_AMText;
    property PMText: WideString read Get_PMText write Set_PMText;
    property DefaultView: WideString read Get_DefaultView write Set_DefaultView;
    property DisplayStatusBar: WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
    property DisplayAlerts: WordBool read Get_DisplayAlerts write Set_DisplayAlerts;
    property DisplayEntryBar: WordBool read Get_DisplayEntryBar write Set_DisplayEntryBar;
    property DisplayScrollBars: WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
    property DisplayWindowsInTaskbar: WordBool read Get_DisplayWindowsInTaskbar write Set_DisplayWindowsInTaskbar;
    property Calculation: PjCalculation read Get_Calculation write Set_Calculation;
    property AutoLevel: WordBool read Get_AutoLevel write Set_AutoLevel;
    property AutoClearLeveling: WordBool read Get_AutoClearLeveling write Set_AutoClearLeveling;
    property LevelWithinSlack: WordBool read Get_LevelWithinSlack write Set_LevelWithinSlack;
    property LevelOrder: PjLevelOrder read Get_LevelOrder write Set_LevelOrder;
    property LevelPeriodBasis: PjLevelPeriodBasis read Get_LevelPeriodBasis write Set_LevelPeriodBasis;
    property LevelIndividualAssignments: WordBool read Get_LevelIndividualAssignments write Set_LevelIndividualAssignments;
    property LevelingCanSplit: WordBool read Get_LevelingCanSplit write Set_LevelingCanSplit;
    property MoveAfterReturn: WordBool read Get_MoveAfterReturn write Set_MoveAfterReturn;
    property DisplayScheduleMessages: WordBool read Get_DisplayScheduleMessages write Set_DisplayScheduleMessages;
    property StartWeekOn: PjWeekday read Get_StartWeekOn write Set_StartWeekOn;
    property StartYearIn: PjMonth read Get_StartYearIn write Set_StartYearIn;
    property CellDragAndDrop: WordBool read Get_CellDragAndDrop write Set_CellDragAndDrop;
    property UserName: WideString read Get_UserName write Set_UserName;
    property AskToUpdateLinks: WordBool read Get_AskToUpdateLinks write Set_AskToUpdateLinks;
    property DisplayPlanningWizard: WordBool read Get_DisplayPlanningWizard write Set_DisplayPlanningWizard;
    property DisplayWizardUsage: WordBool read Get_DisplayWizardUsage write Set_DisplayWizardUsage;
    property DisplayWizardErrors: WordBool read Get_DisplayWizardErrors write Set_DisplayWizardErrors;
    property DisplayWizardScheduling: WordBool read Get_DisplayWizardScheduling write Set_DisplayWizardScheduling;
    property ShowWelcome: WordBool read Get_ShowWelcome write Set_ShowWelcome;
    property LoadLastFile: WordBool read Get_LoadLastFile write Set_LoadLastFile;
    property PromptForSummaryInfo: WordBool read Get_PromptForSummaryInfo write Set_PromptForSummaryInfo;
    property DisplayOLEIndicator: WordBool read Get_DisplayOLEIndicator write Set_DisplayOLEIndicator;
    property DefaultDateFormat: PjDateFormat read Get_DefaultDateFormat write Set_DefaultDateFormat;
    property DayLeadingZero: WordBool read Get_DayLeadingZero write Set_DayLeadingZero;
    property MonthLeadingZero: WordBool read Get_MonthLeadingZero write Set_MonthLeadingZero;
    property TimeLeadingZero: WordBool read Get_TimeLeadingZero write Set_TimeLeadingZero;
    property RecentFilesMaximum: Integer read Get_RecentFilesMaximum write Set_RecentFilesMaximum;
    property DisplayRecentFiles: WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
    property MacroVirusProtection: WordBool read Get_MacroVirusProtection write Set_MacroVirusProtection;
    property ShowAssignmentUnitsAs: PjAssignmentUnits read Get_ShowAssignmentUnitsAs write Set_ShowAssignmentUnitsAs;
    property AutomaticallyFillPhoneticFields: WordBool read Get_AutomaticallyFillPhoneticFields write Set_AutomaticallyFillPhoneticFields;
    property DefaultAutoFilter: WordBool read Get_DefaultAutoFilter write Set_DefaultAutoFilter;
    property ShowEstimatedDuration: WordBool read Get_ShowEstimatedDuration write Set_ShowEstimatedDuration;
    property NewTasksEstimated: WordBool read Get_NewTasksEstimated write Set_NewTasksEstimated;
    property Assistant: Assistant read Get_Assistant write Set_Assistant;
    property DisplayViewBar: WordBool read Get_DisplayViewBar write Set_DisplayViewBar;
    property VBE: VBE read Get_VBE write Set_VBE;
    property EnableCancelKey: PjEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property UsableWidth: Double read Get_UsableWidth write Set_UsableWidth;
    property UsableHeight: Double read Get_UsableHeight write Set_UsableHeight;
  end;
{$ENDIF}


implementation

uses ComObj;

class function CoProject.Create: _IProjectDoc;
begin
  Result := CreateComObject(CLASS_Project) as _IProjectDoc;
end;

class function CoProject.CreateRemote(const MachineName: string): _IProjectDoc;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Project) as _IProjectDoc;
end;

procedure TProject.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{1019A320-508A-11CF-A49D-00AA00574C74}';
    IntfIID:   '{00020B00-0000-0000-C000-000000000046}';
    EventIID:  '{F81DD3C0-5089-11CF-A49D-00AA00574C74}';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TProject.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    ConnectEvents(punk);
    Fintf:= punk as _IProjectDoc;
  end;
end;

procedure TProject.ConnectTo(svrIntf: _IProjectDoc);
begin
  Disconnect;
  FIntf := svrIntf;
  ConnectEvents(FIntf);
end;

procedure TProject.DisConnect;
begin
  if Fintf <> nil then
  begin
    DisconnectEvents(FIntf);
    FIntf := nil;
  end;
end;

function TProject.GetDefaultInterface: _IProjectDoc;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TProject.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TProjectProperties.Create(Self);
{$ENDIF}
end;

destructor TProject.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TProject.GetServerProperties: TProjectProperties;
begin
  Result := FProps;
end;
{$ENDIF}

procedure TProject.InvokeEvent(DispID: TDispID; var Params: TVariantArray);
begin
  case DispID of
    -1: Exit;  // DISPID_UNKNOWN
   1: if Assigned(FOnOpen) then
            FOnOpen(Self, Params[0] {const Project});
   2: if Assigned(FOnBeforeClose) then
            FOnBeforeClose(Self, Params[0] {const Project});
   3: if Assigned(FOnBeforeSave) then
            FOnBeforeSave(Self, Params[0] {const Project});
   4: if Assigned(FOnBeforePrint) then
            FOnBeforePrint(Self, Params[0] {const Project});
   5: if Assigned(FOnCalculate) then
            FOnCalculate(Self, Params[0] {const Project});
   6: if Assigned(FOnChange) then
            FOnChange(Self, Params[0] {const Project});
   7: if Assigned(FOnActivate) then
            FOnActivate(Self, Params[0] {const Project});
   8: if Assigned(FOnDeactivate) then
            FOnDeactivate(Self, Params[0] {const Project});
  end; {case DispID}
end;

function TProject.Get_Manager: OleVariant;
begin
  Result := DefaultInterface.Manager;
end;

procedure TProject.Set_Manager(Value: OleVariant);
begin
  DefaultInterface.Manager := Value;
end;

function TProject.Get_Company: OleVariant;
begin
  Result := DefaultInterface.Company;
end;

procedure TProject.Set_Company(Value: OleVariant);
begin
  DefaultInterface.Company := Value;
end;

function TProject.Get_Author: OleVariant;
begin
  Result := DefaultInterface.Author;
end;

procedure TProject.Set_Author(Value: OleVariant);
begin
  DefaultInterface.Author := Value;
end;

function TProject.Get_Keywords: OleVariant;
begin
  Result := DefaultInterface.Keywords;
end;

procedure TProject.Set_Keywords(Value: OleVariant);
begin
  DefaultInterface.Keywords := Value;
end;

function TProject.Get_ProjectNotes: WideString;
begin
  Result := DefaultInterface.ProjectNotes;
end;

procedure TProject.Set_ProjectNotes(const Value: WideString);
begin
  DefaultInterface.ProjectNotes := Value;
end;

function TProject.Get_ProjectStart: OleVariant;
begin
  Result := DefaultInterface.ProjectStart;
end;

procedure TProject.Set_ProjectStart(Value: OleVariant);
begin
  DefaultInterface.ProjectStart := Value;
end;

function TProject.Get_ProjectFinish: OleVariant;
begin
  Result := DefaultInterface.ProjectFinish;
end;

procedure TProject.Set_ProjectFinish(Value: OleVariant);
begin
  DefaultInterface.ProjectFinish := Value;
end;

function TProject.Get_CurrentDate: OleVariant;
begin
  Result := DefaultInterface.CurrentDate;
end;

procedure TProject.Set_CurrentDate(Value: OleVariant);
begin
  DefaultInterface.CurrentDate := Value;
end;

function TProject.Get_StatusDate: OleVariant;
begin
  Result := DefaultInterface.StatusDate;
end;

procedure TProject.Set_StatusDate(Value: OleVariant);
begin
  DefaultInterface.StatusDate := Value;
end;

function TProject.Get_ScheduleFromStart: WordBool;
begin
  Result := DefaultInterface.ScheduleFromStart;
end;

procedure TProject.Set_ScheduleFromStart(Value: WordBool);
begin
  DefaultInterface.ScheduleFromStart := Value;
end;

function TProject.Get_Comments: OleVariant;
begin
  Result := DefaultInterface.Comments;
end;

procedure TProject.Set_Comments(Value: OleVariant);
begin
  DefaultInterface.Comments := Value;
end;

function TProject.Get_Title: OleVariant;
begin
  Result := DefaultInterface.Title;
end;

procedure TProject.Set_Title(Value: OleVariant);
begin
  DefaultInterface.Title := Value;
end;

function TProject.Get_Subject: OleVariant;
begin
  Result := DefaultInterface.Subject;
end;

procedure TProject.Set_Subject(Value: OleVariant);
begin
  DefaultInterface.Subject := Value;
end;

function TProject.Get_Windows: Windows;
begin
  Result := DefaultInterface.Windows;
end;

procedure TProject.Set_Windows(const Value: Windows);
begin
  DefaultInterface.Windows := Value;
end;

function TProject.Get_MinuteLabelDisplay: Smallint;
begin
  Result := DefaultInterface.MinuteLabelDisplay;
end;

procedure TProject.Set_MinuteLabelDisplay(Value: Smallint);
begin
  DefaultInterface.MinuteLabelDisplay := Value;
end;

function TProject.Get_HourLabelDisplay: Smallint;
begin
  Result := DefaultInterface.HourLabelDisplay;
end;

procedure TProject.Set_HourLabelDisplay(Value: Smallint);
begin
  DefaultInterface.HourLabelDisplay := Value;
end;

function TProject.Get_DayLabelDisplay: Smallint;
begin
  Result := DefaultInterface.DayLabelDisplay;
end;

procedure TProject.Set_DayLabelDisplay(Value: Smallint);
begin
  DefaultInterface.DayLabelDisplay := Value;
end;

function TProject.Get_WeekLabelDisplay: Smallint;
begin
  Result := DefaultInterface.WeekLabelDisplay;
end;

procedure TProject.Set_WeekLabelDisplay(Value: Smallint);
begin
  DefaultInterface.WeekLabelDisplay := Value;
end;

function TProject.Get_YearLabelDisplay: Smallint;
begin
  Result := DefaultInterface.YearLabelDisplay;
end;

procedure TProject.Set_YearLabelDisplay(Value: Smallint);
begin
  DefaultInterface.YearLabelDisplay := Value;
end;

function TProject.Get_MonthLabelDisplay: Smallint;
begin
  Result := DefaultInterface.MonthLabelDisplay;
end;

procedure TProject.Set_MonthLabelDisplay(Value: Smallint);
begin
  DefaultInterface.MonthLabelDisplay := Value;
end;

function TProject.Get_SpaceBeforeTimeLabels: WordBool;
begin
  Result := DefaultInterface.SpaceBeforeTimeLabels;
end;

procedure TProject.Set_SpaceBeforeTimeLabels(Value: WordBool);
begin
  DefaultInterface.SpaceBeforeTimeLabels := Value;
end;

function TProject.Get_DefaultTaskType: PjTaskFixedType;
begin
  Result := DefaultInterface.DefaultTaskType;
end;

procedure TProject.Set_DefaultTaskType(Value: PjTaskFixedType);
begin
  DefaultInterface.DefaultTaskType := Value;
end;

function TProject.Get_DefaultEffortDriven: WordBool;
begin
  Result := DefaultInterface.DefaultEffortDriven;
end;

procedure TProject.Set_DefaultEffortDriven(Value: WordBool);
begin
  DefaultInterface.DefaultEffortDriven := Value;
end;

function TProject.Get_UseFYStartYear: WordBool;
begin
  Result := DefaultInterface.UseFYStartYear;
end;

procedure TProject.Set_UseFYStartYear(Value: WordBool);
begin
  DefaultInterface.UseFYStartYear := Value;
end;

function TProject.Get_AutoFilter: WordBool;
begin
  Result := DefaultInterface.AutoFilter;
end;

procedure TProject.Set_AutoFilter(Value: WordBool);
begin
  DefaultInterface.AutoFilter := Value;
end;

function TProject.Get_HonorConstraints: WordBool;
begin
  Result := DefaultInterface.HonorConstraints;
end;

procedure TProject.Set_HonorConstraints(Value: WordBool);
begin
  DefaultInterface.HonorConstraints := Value;
end;

function TProject.Get_MultipleCriticalPaths: WordBool;
begin
  Result := DefaultInterface.MultipleCriticalPaths;
end;

procedure TProject.Set_MultipleCriticalPaths(Value: WordBool);
begin
  DefaultInterface.MultipleCriticalPaths := Value;
end;

function TProject.Get_LevelFromDate: OleVariant;
begin
  Result := DefaultInterface.LevelFromDate;
end;

procedure TProject.Set_LevelFromDate(Value: OleVariant);
begin
  DefaultInterface.LevelFromDate := Value;
end;

function TProject.Get_LevelToDate: OleVariant;
begin
  Result := DefaultInterface.LevelToDate;
end;

procedure TProject.Set_LevelToDate(Value: OleVariant);
begin
  DefaultInterface.LevelToDate := Value;
end;

function TProject.Get_LevelEntireProject: WordBool;
begin
  Result := DefaultInterface.LevelEntireProject;
end;

procedure TProject.Set_LevelEntireProject(Value: WordBool);
begin
  DefaultInterface.LevelEntireProject := Value;
end;

function TProject.Get_DefaultFixedCostAccrual: PjAccrueAt;
begin
  Result := DefaultInterface.DefaultFixedCostAccrual;
end;

procedure TProject.Set_DefaultFixedCostAccrual(Value: PjAccrueAt);
begin
  DefaultInterface.DefaultFixedCostAccrual := Value;
end;

function TProject.Get_SpreadCostsToStatusDate: WordBool;
begin
  Result := DefaultInterface.SpreadCostsToStatusDate;
end;

procedure TProject.Set_SpreadCostsToStatusDate(Value: WordBool);
begin
  DefaultInterface.SpreadCostsToStatusDate := Value;
end;

function TProject.Get_SpreadPercentCompleteToStatusDate: WordBool;
begin
  Result := DefaultInterface.SpreadPercentCompleteToStatusDate;
end;

procedure TProject.Set_SpreadPercentCompleteToStatusDate(Value: WordBool);
begin
  DefaultInterface.SpreadPercentCompleteToStatusDate := Value;
end;

function TProject.Get_AutoCalcCosts: WordBool;
begin
  Result := DefaultInterface.AutoCalcCosts;
end;

procedure TProject.Set_AutoCalcCosts(Value: WordBool);
begin
  DefaultInterface.AutoCalcCosts := Value;
end;

function TProject.Get_ShowExternalSuccessors: WordBool;
begin
  Result := DefaultInterface.ShowExternalSuccessors;
end;

procedure TProject.Set_ShowExternalSuccessors(Value: WordBool);
begin
  DefaultInterface.ShowExternalSuccessors := Value;
end;

function TProject.Get_ShowExternalPredecessors: WordBool;
begin
  Result := DefaultInterface.ShowExternalPredecessors;
end;

procedure TProject.Set_ShowExternalPredecessors(Value: WordBool);
begin
  DefaultInterface.ShowExternalPredecessors := Value;
end;

function TProject.Get_ShowCrossProjectLinksInfo: WordBool;
begin
  Result := DefaultInterface.ShowCrossProjectLinksInfo;
end;

procedure TProject.Set_ShowCrossProjectLinksInfo(Value: WordBool);
begin
  DefaultInterface.ShowCrossProjectLinksInfo := Value;
end;

function TProject.Get_AcceptNewExternalData: WordBool;
begin
  Result := DefaultInterface.AcceptNewExternalData;
end;

procedure TProject.Set_AcceptNewExternalData(Value: WordBool);
begin
  DefaultInterface.AcceptNewExternalData := Value;
end;

function TProject.Get_PhoneticType: PjPhoneticType;
begin
  Result := DefaultInterface.PhoneticType;
end;

procedure TProject.Set_PhoneticType(Value: PjPhoneticType);
begin
  DefaultInterface.PhoneticType := Value;
end;

function TProject.Get_WorkgroupMessages: PjWorkgroupMessages;
begin
  Result := DefaultInterface.WorkgroupMessages;
end;

procedure TProject.Set_WorkgroupMessages(Value: PjWorkgroupMessages);
begin
  DefaultInterface.WorkgroupMessages := Value;
end;

function TProject.Get_ServerURL: WideString;
begin
  Result := DefaultInterface.ServerURL;
end;

procedure TProject.Set_ServerURL(const Value: WideString);
begin
  DefaultInterface.ServerURL := Value;
end;

function TProject.Get_ServerPath: WideString;
begin
  Result := DefaultInterface.ServerPath;
end;

procedure TProject.Set_ServerPath(const Value: WideString);
begin
  DefaultInterface.ServerPath := Value;
end;

function TProject.Get_ReceiveNotifications: WordBool;
begin
  Result := DefaultInterface.ReceiveNotifications;
end;

procedure TProject.Set_ReceiveNotifications(Value: WordBool);
begin
  DefaultInterface.ReceiveNotifications := Value;
end;

function TProject.Get_SendHyperlinkNote: WordBool;
begin
  Result := DefaultInterface.SendHyperlinkNote;
end;

procedure TProject.Set_SendHyperlinkNote(Value: WordBool);
begin
  DefaultInterface.SendHyperlinkNote := Value;
end;

function TProject.Get_HyperlinkColor: PjColor;
begin
  Result := DefaultInterface.HyperlinkColor;
end;

procedure TProject.Set_HyperlinkColor(Value: PjColor);
begin
  DefaultInterface.HyperlinkColor := Value;
end;

function TProject.Get_FollowedHyperlinkColor: PjColor;
begin
  Result := DefaultInterface.FollowedHyperlinkColor;
end;

procedure TProject.Set_FollowedHyperlinkColor(Value: PjColor);
begin
  DefaultInterface.FollowedHyperlinkColor := Value;
end;

function TProject.Get_UnderlineHyperlinks: WordBool;
begin
  Result := DefaultInterface.UnderlineHyperlinks;
end;

procedure TProject.Set_UnderlineHyperlinks(Value: WordBool);
begin
  DefaultInterface.UnderlineHyperlinks := Value;
end;

function TProject.Get_AskForCompletedWork: PjTeamStatusCompletedWork;
begin
  Result := DefaultInterface.AskForCompletedWork;
end;

procedure TProject.Set_AskForCompletedWork(Value: PjTeamStatusCompletedWork);
begin
  DefaultInterface.AskForCompletedWork := Value;
end;

function TProject.Get_TrackOvertimeWork: WordBool;
begin
  Result := DefaultInterface.TrackOvertimeWork;
end;

procedure TProject.Set_TrackOvertimeWork(Value: WordBool);
begin
  DefaultInterface.TrackOvertimeWork := Value;
end;

function TProject.Get_TeamMembersCanDeclineTasks: WordBool;
begin
  Result := DefaultInterface.TeamMembersCanDeclineTasks;
end;

procedure TProject.Set_TeamMembersCanDeclineTasks(Value: WordBool);
begin
  DefaultInterface.TeamMembersCanDeclineTasks := Value;
end;

function TProject.Get_ShowEstimatedDuration: WordBool;
begin
  Result := DefaultInterface.ShowEstimatedDuration;
end;

procedure TProject.Set_ShowEstimatedDuration(Value: WordBool);
begin
  DefaultInterface.ShowEstimatedDuration := Value;
end;

function TProject.Get_NewTasksEstimated: WordBool;
begin
  Result := DefaultInterface.NewTasksEstimated;
end;

procedure TProject.Set_NewTasksEstimated(Value: WordBool);
begin
  DefaultInterface.NewTasksEstimated := Value;
end;

function TProject.Get_WBSCodeGenerate: WordBool;
begin
  Result := DefaultInterface.WBSCodeGenerate;
end;

procedure TProject.Set_WBSCodeGenerate(Value: WordBool);
begin
  DefaultInterface.WBSCodeGenerate := Value;
end;

function TProject.Get_WBSVerifyUniqueness: WordBool;
begin
  Result := DefaultInterface.WBSVerifyUniqueness;
end;

procedure TProject.Set_WBSVerifyUniqueness(Value: WordBool);
begin
  DefaultInterface.WBSVerifyUniqueness := Value;
end;

function TProject.Get_UpdateProjOnSave: WordBool;
begin
  Result := DefaultInterface.UpdateProjOnSave;
end;

procedure TProject.Set_UpdateProjOnSave(Value: WordBool);
begin
  DefaultInterface.UpdateProjOnSave := Value;
end;

function TProject.Get_ServerIdentification: PjAuthentication;
begin
  Result := DefaultInterface.ServerIdentification;
end;

procedure TProject.Set_ServerIdentification(Value: PjAuthentication);
begin
  DefaultInterface.ServerIdentification := Value;
end;

function TProject.Get_VBASigned: WordBool;
begin
  Result := DefaultInterface.VBASigned;
end;

procedure TProject.Set_VBASigned(Value: WordBool);
begin
  DefaultInterface.VBASigned := Value;
end;

function TProject.Get_ExpandDatabaseTimephasedData: WordBool;
begin
  Result := DefaultInterface.ExpandDatabaseTimephasedData;
end;

procedure TProject.Set_ExpandDatabaseTimephasedData(Value: WordBool);
begin
  DefaultInterface.ExpandDatabaseTimephasedData := Value;
end;

function TProject.Get_DatabaseProjectUniqueID: OleVariant;
begin
  Result := DefaultInterface.DatabaseProjectUniqueID;
end;

procedure TProject.Set_DatabaseProjectUniqueID(Value: OleVariant);
begin
  DefaultInterface.DatabaseProjectUniqueID := Value;
end;

function TProject.Get_ActualWork: OleVariant;
begin
  Result := DefaultInterface.ActualWork;
end;

procedure TProject.Set_ActualWork(Value: OleVariant);
begin
  DefaultInterface.ActualWork := Value;
end;

function TProject.Get_Cost1: OleVariant;
begin
  Result := DefaultInterface.Cost1;
end;

procedure TProject.Set_Cost1(Value: OleVariant);
begin
  DefaultInterface.Cost1 := Value;
end;

function TProject.Get_Cost2: OleVariant;
begin
  Result := DefaultInterface.Cost2;
end;

procedure TProject.Set_Cost2(Value: OleVariant);
begin
  DefaultInterface.Cost2 := Value;
end;

function TProject.Get_Cost3: OleVariant;
begin
  Result := DefaultInterface.Cost3;
end;

procedure TProject.Set_Cost3(Value: OleVariant);
begin
  DefaultInterface.Cost3 := Value;
end;

function TProject.Get_BaselineWork: OleVariant;
begin
  Result := DefaultInterface.BaselineWork;
end;

procedure TProject.Set_BaselineWork(Value: OleVariant);
begin
  DefaultInterface.BaselineWork := Value;
end;

function TProject.Get_BaselineCost: OleVariant;
begin
  Result := DefaultInterface.BaselineCost;
end;

procedure TProject.Set_BaselineCost(Value: OleVariant);
begin
  DefaultInterface.BaselineCost := Value;
end;

function TProject.Get_FixedCost: OleVariant;
begin
  Result := DefaultInterface.FixedCost;
end;

procedure TProject.Set_FixedCost(Value: OleVariant);
begin
  DefaultInterface.FixedCost := Value;
end;

function TProject.Get_WBS: WideString;
begin
  Result := DefaultInterface.WBS;
end;

procedure TProject.Set_WBS(const Value: WideString);
begin
  DefaultInterface.WBS := Value;
end;

function TProject.Get_Delay: OleVariant;
begin
  Result := DefaultInterface.Delay;
end;

procedure TProject.Set_Delay(Value: OleVariant);
begin
  DefaultInterface.Delay := Value;
end;

function TProject.Get_Priority: OleVariant;
begin
  Result := DefaultInterface.Priority;
end;

procedure TProject.Set_Priority(Value: OleVariant);
begin
  DefaultInterface.Priority := Value;
end;

function TProject.Get_Duration1: OleVariant;
begin
  Result := DefaultInterface.Duration1;
end;

procedure TProject.Set_Duration1(Value: OleVariant);
begin
  DefaultInterface.Duration1 := Value;
end;

function TProject.Get_Duration2: OleVariant;
begin
  Result := DefaultInterface.Duration2;
end;

procedure TProject.Set_Duration2(Value: OleVariant);
begin
  DefaultInterface.Duration2 := Value;
end;

function TProject.Get_Duration3: OleVariant;
begin
  Result := DefaultInterface.Duration3;
end;

procedure TProject.Set_Duration3(Value: OleVariant);
begin
  DefaultInterface.Duration3 := Value;
end;

function TProject.Get_PercentWorkComplete: OleVariant;
begin
  Result := DefaultInterface.PercentWorkComplete;
end;

procedure TProject.Set_PercentWorkComplete(Value: OleVariant);
begin
  DefaultInterface.PercentWorkComplete := Value;
end;

function TProject.Get_FixedDuration: OleVariant;
begin
  Result := DefaultInterface.FixedDuration;
end;

procedure TProject.Set_FixedDuration(Value: OleVariant);
begin
  DefaultInterface.FixedDuration := Value;
end;

function TProject.Get_BaselineStart: OleVariant;
begin
  Result := DefaultInterface.BaselineStart;
end;

procedure TProject.Set_BaselineStart(Value: OleVariant);
begin
  DefaultInterface.BaselineStart := Value;
end;

function TProject.Get_BaselineFinish: OleVariant;
begin
  Result := DefaultInterface.BaselineFinish;
end;

procedure TProject.Set_BaselineFinish(Value: OleVariant);
begin
  DefaultInterface.BaselineFinish := Value;
end;

function TProject.Get_Text1: WideString;
begin
  Result := DefaultInterface.Text1;
end;

procedure TProject.Set_Text1(const Value: WideString);
begin
  DefaultInterface.Text1 := Value;
end;

function TProject.Get_Start1: OleVariant;
begin
  Result := DefaultInterface.Start1;
end;

procedure TProject.Set_Start1(Value: OleVariant);
begin
  DefaultInterface.Start1 := Value;
end;

function TProject.Get_Finish1: OleVariant;
begin
  Result := DefaultInterface.Finish1;
end;

procedure TProject.Set_Finish1(Value: OleVariant);
begin
  DefaultInterface.Finish1 := Value;
end;

function TProject.Get_Text2: WideString;
begin
  Result := DefaultInterface.Text2;
end;

procedure TProject.Set_Text2(const Value: WideString);
begin
  DefaultInterface.Text2 := Value;
end;

function TProject.Get_Start2: OleVariant;
begin
  Result := DefaultInterface.Start2;
end;

procedure TProject.Set_Start2(Value: OleVariant);
begin
  DefaultInterface.Start2 := Value;
end;

function TProject.Get_Finish2: OleVariant;
begin
  Result := DefaultInterface.Finish2;
end;

procedure TProject.Set_Finish2(Value: OleVariant);
begin
  DefaultInterface.Finish2 := Value;
end;

function TProject.Get_Text3: WideString;
begin
  Result := DefaultInterface.Text3;
end;

procedure TProject.Set_Text3(const Value: WideString);
begin
  DefaultInterface.Text3 := Value;
end;

function TProject.Get_Start3: OleVariant;
begin
  Result := DefaultInterface.Start3;
end;

procedure TProject.Set_Start3(Value: OleVariant);
begin
  DefaultInterface.Start3 := Value;
end;

function TProject.Get_Finish3: OleVariant;
begin
  Result := DefaultInterface.Finish3;
end;

procedure TProject.Set_Finish3(Value: OleVariant);
begin
  DefaultInterface.Finish3 := Value;
end;

function TProject.Get_Text4: WideString;
begin
  Result := DefaultInterface.Text4;
end;

procedure TProject.Set_Text4(const Value: WideString);
begin
  DefaultInterface.Text4 := Value;
end;

function TProject.Get_Start4: OleVariant;
begin
  Result := DefaultInterface.Start4;
end;

procedure TProject.Set_Start4(Value: OleVariant);
begin
  DefaultInterface.Start4 := Value;
end;

function TProject.Get_Finish4: OleVariant;
begin
  Result := DefaultInterface.Finish4;
end;

procedure TProject.Set_Finish4(Value: OleVariant);
begin
  DefaultInterface.Finish4 := Value;
end;

function TProject.Get_Text5: WideString;
begin
  Result := DefaultInterface.Text5;
end;

procedure TProject.Set_Text5(const Value: WideString);
begin
  DefaultInterface.Text5 := Value;
end;

function TProject.Get_Start5: OleVariant;
begin
  Result := DefaultInterface.Start5;
end;

procedure TProject.Set_Start5(Value: OleVariant);
begin
  DefaultInterface.Start5 := Value;
end;

function TProject.Get_Finish5: OleVariant;
begin
  Result := DefaultInterface.Finish5;
end;

procedure TProject.Set_Finish5(Value: OleVariant);
begin
  DefaultInterface.Finish5 := Value;
end;

function TProject.Get_Text6: WideString;
begin
  Result := DefaultInterface.Text6;
end;

procedure TProject.Set_Text6(const Value: WideString);
begin
  DefaultInterface.Text6 := Value;
end;

function TProject.Get_Text7: WideString;
begin
  Result := DefaultInterface.Text7;
end;

procedure TProject.Set_Text7(const Value: WideString);
begin
  DefaultInterface.Text7 := Value;
end;

function TProject.Get_Text8: WideString;
begin
  Result := DefaultInterface.Text8;
end;

procedure TProject.Set_Text8(const Value: WideString);
begin
  DefaultInterface.Text8 := Value;
end;

function TProject.Get_Text9: WideString;
begin
  Result := DefaultInterface.Text9;
end;

procedure TProject.Set_Text9(const Value: WideString);
begin
  DefaultInterface.Text9 := Value;
end;

function TProject.Get_Text10: WideString;
begin
  Result := DefaultInterface.Text10;
end;

procedure TProject.Set_Text10(const Value: WideString);
begin
  DefaultInterface.Text10 := Value;
end;

function TProject.Get_Marked: OleVariant;
begin
  Result := DefaultInterface.Marked;
end;

procedure TProject.Set_Marked(Value: OleVariant);
begin
  DefaultInterface.Marked := Value;
end;

function TProject.Get_Flag1: OleVariant;
begin
  Result := DefaultInterface.Flag1;
end;

procedure TProject.Set_Flag1(Value: OleVariant);
begin
  DefaultInterface.Flag1 := Value;
end;

function TProject.Get_Flag2: OleVariant;
begin
  Result := DefaultInterface.Flag2;
end;

procedure TProject.Set_Flag2(Value: OleVariant);
begin
  DefaultInterface.Flag2 := Value;
end;

function TProject.Get_Flag3: OleVariant;
begin
  Result := DefaultInterface.Flag3;
end;

procedure TProject.Set_Flag3(Value: OleVariant);
begin
  DefaultInterface.Flag3 := Value;
end;

function TProject.Get_Flag4: OleVariant;
begin
  Result := DefaultInterface.Flag4;
end;

procedure TProject.Set_Flag4(Value: OleVariant);
begin
  DefaultInterface.Flag4 := Value;
end;

function TProject.Get_Flag5: OleVariant;
begin
  Result := DefaultInterface.Flag5;
end;

procedure TProject.Set_Flag5(Value: OleVariant);
begin
  DefaultInterface.Flag5 := Value;
end;

function TProject.Get_Flag6: OleVariant;
begin
  Result := DefaultInterface.Flag6;
end;

procedure TProject.Set_Flag6(Value: OleVariant);
begin
  DefaultInterface.Flag6 := Value;
end;

function TProject.Get_Flag7: OleVariant;
begin
  Result := DefaultInterface.Flag7;
end;

procedure TProject.Set_Flag7(Value: OleVariant);
begin
  DefaultInterface.Flag7 := Value;
end;

function TProject.Get_Flag8: OleVariant;
begin
  Result := DefaultInterface.Flag8;
end;

procedure TProject.Set_Flag8(Value: OleVariant);
begin
  DefaultInterface.Flag8 := Value;
end;

function TProject.Get_Flag9: OleVariant;
begin
  Result := DefaultInterface.Flag9;
end;

procedure TProject.Set_Flag9(Value: OleVariant);
begin
  DefaultInterface.Flag9 := Value;
end;

function TProject.Get_Flag10: OleVariant;
begin
  Result := DefaultInterface.Flag10;
end;

procedure TProject.Set_Flag10(Value: OleVariant);
begin
  DefaultInterface.Flag10 := Value;
end;

function TProject.Get_Rollup: OleVariant;
begin
  Result := DefaultInterface.Rollup;
end;

procedure TProject.Set_Rollup(Value: OleVariant);
begin
  DefaultInterface.Rollup := Value;
end;

function TProject.Get_Number1: Double;
begin
  Result := DefaultInterface.Number1;
end;

procedure TProject.Set_Number1(Value: Double);
begin
  DefaultInterface.Number1 := Value;
end;

function TProject.Get_Number2: Double;
begin
  Result := DefaultInterface.Number2;
end;

procedure TProject.Set_Number2(Value: Double);
begin
  DefaultInterface.Number2 := Value;
end;

function TProject.Get_Number3: Double;
begin
  Result := DefaultInterface.Number3;
end;

procedure TProject.Set_Number3(Value: Double);
begin
  DefaultInterface.Number3 := Value;
end;

function TProject.Get_Number4: Double;
begin
  Result := DefaultInterface.Number4;
end;

procedure TProject.Set_Number4(Value: Double);
begin
  DefaultInterface.Number4 := Value;
end;

function TProject.Get_Number5: Double;
begin
  Result := DefaultInterface.Number5;
end;

procedure TProject.Set_Number5(Value: Double);
begin
  DefaultInterface.Number5 := Value;
end;

function TProject.Get_Notes: WideString;
begin
  Result := DefaultInterface.Notes;
end;

procedure TProject.Set_Notes(const Value: WideString);
begin
  DefaultInterface.Notes := Value;
end;

function TProject.Get_Contact: WideString;
begin
  Result := DefaultInterface.Contact;
end;

procedure TProject.Set_Contact(const Value: WideString);
begin
  DefaultInterface.Contact := Value;
end;

function TProject.Get_HideBar: OleVariant;
begin
  Result := DefaultInterface.HideBar;
end;

procedure TProject.Set_HideBar(Value: OleVariant);
begin
  DefaultInterface.HideBar := Value;
end;

function TProject.Get_CurrencySymbol: WideString;
begin
  Result := DefaultInterface.CurrencySymbol;
end;

procedure TProject.Set_CurrencySymbol(const Value: WideString);
begin
  DefaultInterface.CurrencySymbol := Value;
end;

function TProject.Get_CurrencySymbolPosition: PjPlacement;
begin
  Result := DefaultInterface.CurrencySymbolPosition;
end;

procedure TProject.Set_CurrencySymbolPosition(Value: PjPlacement);
begin
  DefaultInterface.CurrencySymbolPosition := Value;
end;

function TProject.Get_CurrencyDigits: Smallint;
begin
  Result := DefaultInterface.CurrencyDigits;
end;

procedure TProject.Set_CurrencyDigits(Value: Smallint);
begin
  DefaultInterface.CurrencyDigits := Value;
end;

function TProject.Get_ShowCriticalSlack: Integer;
begin
  Result := DefaultInterface.ShowCriticalSlack;
end;

procedure TProject.Set_ShowCriticalSlack(Value: Integer);
begin
  DefaultInterface.ShowCriticalSlack := Value;
end;

function TProject.Get_DefaultDurationUnits: PjUnit;
begin
  Result := DefaultInterface.DefaultDurationUnits;
end;

procedure TProject.Set_DefaultDurationUnits(Value: PjUnit);
begin
  DefaultInterface.DefaultDurationUnits := Value;
end;

function TProject.Get_DefaultWorkUnits: PjUnit;
begin
  Result := DefaultInterface.DefaultWorkUnits;
end;

procedure TProject.Set_DefaultWorkUnits(Value: PjUnit);
begin
  DefaultInterface.DefaultWorkUnits := Value;
end;

function TProject.Get_StartOnCurrentDate: WordBool;
begin
  Result := DefaultInterface.StartOnCurrentDate;
end;

procedure TProject.Set_StartOnCurrentDate(Value: WordBool);
begin
  DefaultInterface.StartOnCurrentDate := Value;
end;

function TProject.Get_AutoTrack: WordBool;
begin
  Result := DefaultInterface.AutoTrack;
end;

procedure TProject.Set_AutoTrack(Value: WordBool);
begin
  DefaultInterface.AutoTrack := Value;
end;

function TProject.Get_AutoSplitTasks: WordBool;
begin
  Result := DefaultInterface.AutoSplitTasks;
end;

procedure TProject.Set_AutoSplitTasks(Value: WordBool);
begin
  DefaultInterface.AutoSplitTasks := Value;
end;

function TProject.Get_AutoLinkTasks: WordBool;
begin
  Result := DefaultInterface.AutoLinkTasks;
end;

procedure TProject.Set_AutoLinkTasks(Value: WordBool);
begin
  DefaultInterface.AutoLinkTasks := Value;
end;

function TProject.Get_DefaultStartTime: OleVariant;
begin
  Result := DefaultInterface.DefaultStartTime;
end;

procedure TProject.Set_DefaultStartTime(Value: OleVariant);
begin
  DefaultInterface.DefaultStartTime := Value;
end;

function TProject.Get_DefaultFinishTime: OleVariant;
begin
  Result := DefaultInterface.DefaultFinishTime;
end;

procedure TProject.Set_DefaultFinishTime(Value: OleVariant);
begin
  DefaultInterface.DefaultFinishTime := Value;
end;

function TProject.Get_HoursPerDay: Double;
begin
  Result := DefaultInterface.HoursPerDay;
end;

procedure TProject.Set_HoursPerDay(Value: Double);
begin
  DefaultInterface.HoursPerDay := Value;
end;

function TProject.Get_HoursPerWeek: Double;
begin
  Result := DefaultInterface.HoursPerWeek;
end;

procedure TProject.Set_HoursPerWeek(Value: Double);
begin
  DefaultInterface.HoursPerWeek := Value;
end;

function TProject.Get_DaysPerMonth: Double;
begin
  Result := DefaultInterface.DaysPerMonth;
end;

procedure TProject.Set_DaysPerMonth(Value: Double);
begin
  DefaultInterface.DaysPerMonth := Value;
end;

function TProject.Get_DefaultResourceStandardRate: OleVariant;
begin
  Result := DefaultInterface.DefaultResourceStandardRate;
end;

procedure TProject.Set_DefaultResourceStandardRate(Value: OleVariant);
begin
  DefaultInterface.DefaultResourceStandardRate := Value;
end;

function TProject.Get_DefaultResourceOvertimeRate: OleVariant;
begin
  Result := DefaultInterface.DefaultResourceOvertimeRate;
end;

procedure TProject.Set_DefaultResourceOvertimeRate(Value: OleVariant);
begin
  DefaultInterface.DefaultResourceOvertimeRate := Value;
end;

function TProject.Get_DisplayProjectSummaryTask: WordBool;
begin
  Result := DefaultInterface.DisplayProjectSummaryTask;
end;

procedure TProject.Set_DisplayProjectSummaryTask(Value: WordBool);
begin
  DefaultInterface.DisplayProjectSummaryTask := Value;
end;

function TProject.Get_AutoAddResources: WordBool;
begin
  Result := DefaultInterface.AutoAddResources;
end;

procedure TProject.Set_AutoAddResources(Value: WordBool);
begin
  DefaultInterface.AutoAddResources := Value;
end;

function TProject.Get_StartWeekOn: PjWeekday;
begin
  Result := DefaultInterface.StartWeekOn;
end;

procedure TProject.Set_StartWeekOn(Value: PjWeekday);
begin
  DefaultInterface.StartWeekOn := Value;
end;

function TProject.Get_StartYearIn: PjMonth;
begin
  Result := DefaultInterface.StartYearIn;
end;

procedure TProject.Set_StartYearIn(Value: PjMonth);
begin
  DefaultInterface.StartYearIn := Value;
end;

function TProject.Get_AllowTaskDelegation: WordBool;
begin
  Result := DefaultInterface.AllowTaskDelegation;
end;

procedure TProject.Set_AllowTaskDelegation(Value: WordBool);
begin
  DefaultInterface.AllowTaskDelegation := Value;
end;

function TProject.Get_Name: WideString;
begin
  Result := DefaultInterface.Name;
end;

procedure TProject.Set_Name(const Value: WideString);
begin
  DefaultInterface.Name := Value;
end;

function  TProject.Get__CodeName: WideString;
begin
  Result := DefaultInterface._CodeName;
end;

procedure  TProject.Set__CodeName(const Param1: WideString);
begin
  DefaultInterface._CodeName := Param1;
end;

function  TProject.Get_CodeName: WideString;
begin
  Result := DefaultInterface.CodeName;
end;

function  TProject.Get_OutlineChildren: Tasks;
begin
  Result := DefaultInterface.OutlineChildren;
end;

function  TProject.Get_CostVariance: OleVariant;
begin
  Result := DefaultInterface.CostVariance;
end;

function  TProject.Get_ProjectSummaryTask: Task;
begin
  Result := DefaultInterface.ProjectSummaryTask;
end;

function  TProject.Get_RemainingCost: OleVariant;
begin
  Result := DefaultInterface.RemainingCost;
end;

function  TProject.Get_BCWP: OleVariant;
begin
  Result := DefaultInterface.BCWP;
end;

function  TProject.Get_BCWS: OleVariant;
begin
  Result := DefaultInterface.BCWS;
end;

function  TProject.Get_SV: OleVariant;
begin
  Result := DefaultInterface.SV;
end;

function  TProject.Get_CV: OleVariant;
begin
  Result := DefaultInterface.CV;
end;

function  TProject.Get_OutlineNumber: WideString;
begin
  Result := DefaultInterface.OutlineNumber;
end;

function  TProject.Get_Critical: OleVariant;
begin
  Result := DefaultInterface.Critical;
end;

function  TProject.Get_FreeSlack: OleVariant;
begin
  Result := DefaultInterface.FreeSlack;
end;

function  TProject.Get_TotalSlack: OleVariant;
begin
  Result := DefaultInterface.TotalSlack;
end;

function  TProject.Get_UniqueID: Integer;
begin
  Result := DefaultInterface.UniqueID;
end;

function  TProject.Get_OutlineLevel: SYSINT;
begin
  Result := DefaultInterface.OutlineLevel;
end;

function  TProject.Get_BaselineDuration: OleVariant;
begin
  Result := DefaultInterface.BaselineDuration;
end;

function  TProject.Get_DurationVariance: OleVariant;
begin
  Result := DefaultInterface.DurationVariance;
end;

function  TProject.Get_EarlyStart: OleVariant;
begin
  Result := DefaultInterface.EarlyStart;
end;

function  TProject.Get_EarlyFinish: OleVariant;
begin
  Result := DefaultInterface.EarlyFinish;
end;

function  TProject.Get_LateStart: OleVariant;
begin
  Result := DefaultInterface.LateStart;
end;

function  TProject.Get_StartVariance: OleVariant;
begin
  Result := DefaultInterface.StartVariance;
end;

function  TProject.Get_FinishVariance: OleVariant;
begin
  Result := DefaultInterface.FinishVariance;
end;

function  TProject.Get_Project: OleVariant;
begin
  Result := DefaultInterface.Project;
end;

function  TProject.Get_Milestone: OleVariant;
begin
  Result := DefaultInterface.Milestone;
end;

function  TProject.Get_RemainingDuration: OleVariant;
begin
  Result := DefaultInterface.RemainingDuration;
end;

function  TProject.Get_PercentComplete: OleVariant;
begin
  Result := DefaultInterface.PercentComplete;
end;

function  TProject.Get_Start: OleVariant;
begin
  Result := DefaultInterface.Start;
end;

function  TProject.Get_Finish: OleVariant;
begin
  Result := DefaultInterface.Finish;
end;

function  TProject.Get_ResourceNames: OleVariant;
begin
  Result := DefaultInterface.ResourceNames;
end;

function  TProject.Get_ResourceInitials: OleVariant;
begin
  Result := DefaultInterface.ResourceInitials;
end;

function  TProject.Get_Resume: OleVariant;
begin
  Result := DefaultInterface.Resume;
end;

function  TProject.Get_Stop: OleVariant;
begin
  Result := DefaultInterface.Stop;
end;

function  TProject.Get_ResumeNoEarlierThan: OleVariant;
begin
  Result := DefaultInterface.ResumeNoEarlierThan;
end;

function  TProject.Get_ConstraintType: OleVariant;
begin
  Result := DefaultInterface.ConstraintType;
end;

function  TProject.Get_ConstraintDate: OleVariant;
begin
  Result := DefaultInterface.ConstraintDate;
end;

function  TProject.Get_ActualCost: OleVariant;
begin
  Result := DefaultInterface.ActualCost;
end;

function  TProject.Get_Cost: OleVariant;
begin
  Result := DefaultInterface.Cost;
end;

function  TProject.Get_Created: OleVariant;
begin
  Result := DefaultInterface.Created;
end;

function  TProject.Get_ActualDuration: OleVariant;
begin
  Result := DefaultInterface.ActualDuration;
end;

function  TProject.Get_Duration: OleVariant;
begin
  Result := DefaultInterface.Duration;
end;

function  TProject.Get_LateFinish: OleVariant;
begin
  Result := DefaultInterface.LateFinish;
end;

function  TProject.Get_ActualFinish: OleVariant;
begin
  Result := DefaultInterface.ActualFinish;
end;

function  TProject.Get_Objects: Integer;
begin
  Result := DefaultInterface.Objects;
end;

function  TProject.Get_RemainingWork: OleVariant;
begin
  Result := DefaultInterface.RemainingWork;
end;

function  TProject.Get_ResourceGroup: OleVariant;
begin
  Result := DefaultInterface.ResourceGroup;
end;

function  TProject.Get_ActualStart: OleVariant;
begin
  Result := DefaultInterface.ActualStart;
end;

function  TProject.Get_Summary: OleVariant;
begin
  Result := DefaultInterface.Summary;
end;

function  TProject.Get_Template: WideString;
begin
  Result := DefaultInterface.Template;
end;

function  TProject.Get_UpdateNeeded: OleVariant;
begin
  Result := DefaultInterface.UpdateNeeded;
end;

function  TProject.Get_Work: OleVariant;
begin
  Result := DefaultInterface.Work;
end;

function  TProject.Get_WorkVariance: OleVariant;
begin
  Result := DefaultInterface.WorkVariance;
end;

function  TProject.Get_LinkedFields: OleVariant;
begin
  Result := DefaultInterface.LinkedFields;
end;

function  TProject.Get_Confirmed: OleVariant;
begin
  Result := DefaultInterface.Confirmed;
end;

function  TProject.Get_ReadOnly: WordBool;
begin
  Result := DefaultInterface.ReadOnly;
end;

function  TProject.Get_HasPassword: WordBool;
begin
  Result := DefaultInterface.HasPassword;
end;

function  TProject.Get_WriteReserved: WordBool;
begin
  Result := DefaultInterface.WriteReserved;
end;

function  TProject.Get_Application: Application;
begin
  Result := DefaultInterface.Application;
end;

function  TProject.Get_Parent: IDispatch;
begin
  Result := DefaultInterface.Parent;
end;

function  TProject.Get_Index: OleVariant;
begin
  Result := DefaultInterface.Index;
end;

function  TProject.Get_MapList: List;
begin
  Result := DefaultInterface.MapList;
end;

function  TProject.Get_Tasks: Tasks;
begin
  Result := DefaultInterface.Tasks;
end;

function  TProject.Get_Resources: Resources;
begin
  Result := DefaultInterface.Resources;
end;

function  TProject.Get_BaseCalendars: Calendars;
begin
  Result := DefaultInterface.BaseCalendars;
end;

function  TProject.Get_BuiltinDocumentProperties: IDispatch;
begin
  Result := DefaultInterface.BuiltinDocumentProperties;
end;

function  TProject.Get_CustomDocumentProperties: IDispatch;
begin
  Result := DefaultInterface.CustomDocumentProperties;
end;

function  TProject.Get_Container: IDispatch;
begin
  Result := DefaultInterface.Container;
end;

function  TProject.Get_Calendar: Calendar;
begin
  Result := DefaultInterface.Calendar;
end;

function  TProject.Get_NumberOfTasks: Integer;
begin
  Result := DefaultInterface.NumberOfTasks;
end;

function  TProject.Get_NumberOfResources: Integer;
begin
  Result := DefaultInterface.NumberOfResources;
end;

function  TProject.Get_FullName: WideString;
begin
  Result := DefaultInterface.FullName;
end;

function  TProject.Get_Path: WideString;
begin
  Result := DefaultInterface.Path;
end;

function  TProject.Get_ResourcePoolName: WideString;
begin
  Result := DefaultInterface.ResourcePoolName;
end;

function  TProject.Get_Saved: WordBool;
begin
  Result := DefaultInterface.Saved;
end;

function  TProject.Get_CreationDate: OleVariant;
begin
  Result := DefaultInterface.CreationDate;
end;

function  TProject.Get_LastPrintedDate: OleVariant;
begin
  Result := DefaultInterface.LastPrintedDate;
end;

function  TProject.Get_LastSaveDate: OleVariant;
begin
  Result := DefaultInterface.LastSaveDate;
end;

function  TProject.Get_LastSavedBy: WideString;
begin
  Result := DefaultInterface.LastSavedBy;
end;

function  TProject.Get_RevisionNumber: WideString;
begin
  Result := DefaultInterface.RevisionNumber;
end;

function  TProject.Get_ViewList: List;
begin
  Result := DefaultInterface.ViewList;
end;

function  TProject.Get_TaskViewList: List;
begin
  Result := DefaultInterface.TaskViewList;
end;

function  TProject.Get_ResourceViewList: List;
begin
  Result := DefaultInterface.ResourceViewList;
end;

function  TProject.Get_ReadOnlyRecommended: WordBool;
begin
  Result := DefaultInterface.ReadOnlyRecommended;
end;

function  TProject.Get_ReportList: List;
begin
  Result := DefaultInterface.ReportList;
end;

function  TProject.Get_TaskFilterList: List;
begin
  Result := DefaultInterface.TaskFilterList;
end;

function  TProject.Get_ResourceFilterList: List;
begin
  Result := DefaultInterface.ResourceFilterList;
end;

function  TProject.Get_TaskTableList: List;
begin
  Result := DefaultInterface.TaskTableList;
end;

function  TProject.Get_ResourceTableList: List;
begin
  Result := DefaultInterface.ResourceTableList;
end;

function  TProject.Get_CurrentView: WideString;
begin
  Result := DefaultInterface.CurrentView;
end;

function  TProject.Get_CurrentTable: WideString;
begin
  Result := DefaultInterface.CurrentTable;
end;

function  TProject.Get_CurrentFilter: WideString;
begin
  Result := DefaultInterface.CurrentFilter;
end;

function  TProject.Get_ID: Integer;
begin
  Result := DefaultInterface.ID;
end;

function  TProject.Get_CommandBars: CommandBars;
begin
  Result := DefaultInterface.CommandBars;
end;

function  TProject.Get_UserControl: WordBool;
begin
  Result := DefaultInterface.UserControl;
end;

function  TProject.Get_VBProject: VBProject;
begin
  Result := DefaultInterface.VBProject;
end;

function  TProject.Get_Subprojects: Subprojects;
begin
  Result := DefaultInterface.Subprojects;
end;

function  TProject.Get_CurrentGroup: WideString;
begin
  Result := DefaultInterface.CurrentGroup;
end;

function  TProject.Get_TaskGroupList: List;
begin
  Result := DefaultInterface.TaskGroupList;
end;

function  TProject.Get_ResourceGroupList: List;
begin
  Result := DefaultInterface.ResourceGroupList;
end;

function  TProject.Get_TaskGroups: TaskGroups;
begin
  Result := DefaultInterface.TaskGroups;
end;

function  TProject.Get_ResourceGroups: ResourceGroups;
begin
  Result := DefaultInterface.ResourceGroups;
end;

procedure TProject.SaveAs(Name: OleVariant; Format: PjFileFormat; Backup: OleVariant;
                          ReadOnly: OleVariant; TaskInformation: OleVariant; Filtered: OleVariant;
                          Table: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                          FormatID: OleVariant; Map: OleVariant; ClearBaseline: OleVariant;
                          ClearActuals: OleVariant; ClearResourceRates: OleVariant;
                          ClearFixedCosts: OleVariant);
begin
  DefaultInterface.SaveAs(Name, Format, Backup, ReadOnly, TaskInformation, Filtered, Table, UserID,
                          DatabasePassWord, FormatID, Map, ClearBaseline, ClearActuals,
                          ClearResourceRates, ClearFixedCosts);
end;

procedure TProject.Activate;
begin
  DefaultInterface.Activate;
end;

procedure TProject.LevelClearDates;
begin
  DefaultInterface.LevelClearDates;
end;

procedure TProject.AppendNotes(const Value: WideString);
begin
  DefaultInterface.AppendNotes(Value);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TProjectProperties.Create(AServer: TProject);
begin
  inherited Create;
  FServer := AServer;
end;

function TProjectProperties.GetDefaultInterface: _IProjectDoc;
begin
  Result := FServer.DefaultInterface;
end;

function TProjectProperties.Get_Manager: OleVariant;
begin
  Result := DefaultInterface.Manager;
end;

procedure TProjectProperties.Set_Manager(Value: OleVariant);
begin
  DefaultInterface.Manager := Value;
end;

function TProjectProperties.Get_Company: OleVariant;
begin
  Result := DefaultInterface.Company;
end;

procedure TProjectProperties.Set_Company(Value: OleVariant);
begin
  DefaultInterface.Company := Value;
end;

function TProjectProperties.Get_Author: OleVariant;
begin
  Result := DefaultInterface.Author;
end;

procedure TProjectProperties.Set_Author(Value: OleVariant);
begin
  DefaultInterface.Author := Value;
end;

function TProjectProperties.Get_Keywords: OleVariant;
begin
  Result := DefaultInterface.Keywords;
end;

procedure TProjectProperties.Set_Keywords(Value: OleVariant);
begin
  DefaultInterface.Keywords := Value;
end;

function TProjectProperties.Get_ProjectNotes: WideString;
begin
  Result := DefaultInterface.ProjectNotes;
end;

procedure TProjectProperties.Set_ProjectNotes(const Value: WideString);
begin
  DefaultInterface.ProjectNotes := Value;
end;

function TProjectProperties.Get_ProjectStart: OleVariant;
begin
  Result := DefaultInterface.ProjectStart;
end;

procedure TProjectProperties.Set_ProjectStart(Value: OleVariant);
begin
  DefaultInterface.ProjectStart := Value;
end;

function TProjectProperties.Get_ProjectFinish: OleVariant;
begin
  Result := DefaultInterface.ProjectFinish;
end;

procedure TProjectProperties.Set_ProjectFinish(Value: OleVariant);
begin
  DefaultInterface.ProjectFinish := Value;
end;

function TProjectProperties.Get_CurrentDate: OleVariant;
begin
  Result := DefaultInterface.CurrentDate;
end;

procedure TProjectProperties.Set_CurrentDate(Value: OleVariant);
begin
  DefaultInterface.CurrentDate := Value;
end;

function TProjectProperties.Get_StatusDate: OleVariant;
begin
  Result := DefaultInterface.StatusDate;
end;

procedure TProjectProperties.Set_StatusDate(Value: OleVariant);
begin
  DefaultInterface.StatusDate := Value;
end;

function TProjectProperties.Get_ScheduleFromStart: WordBool;
begin
  Result := DefaultInterface.ScheduleFromStart;
end;

procedure TProjectProperties.Set_ScheduleFromStart(Value: WordBool);
begin
  DefaultInterface.ScheduleFromStart := Value;
end;

function TProjectProperties.Get_Comments: OleVariant;
begin
  Result := DefaultInterface.Comments;
end;

procedure TProjectProperties.Set_Comments(Value: OleVariant);
begin
  DefaultInterface.Comments := Value;
end;

function TProjectProperties.Get_Title: OleVariant;
begin
  Result := DefaultInterface.Title;
end;

procedure TProjectProperties.Set_Title(Value: OleVariant);
begin
  DefaultInterface.Title := Value;
end;

function TProjectProperties.Get_Subject: OleVariant;
begin
  Result := DefaultInterface.Subject;
end;

procedure TProjectProperties.Set_Subject(Value: OleVariant);
begin
  DefaultInterface.Subject := Value;
end;

function TProjectProperties.Get_Windows: Windows;
begin
  Result := DefaultInterface.Windows;
end;

procedure TProjectProperties.Set_Windows(const Value: Windows);
begin
  DefaultInterface.Windows := Value;
end;

function TProjectProperties.Get_MinuteLabelDisplay: Smallint;
begin
  Result := DefaultInterface.MinuteLabelDisplay;
end;

procedure TProjectProperties.Set_MinuteLabelDisplay(Value: Smallint);
begin
  DefaultInterface.MinuteLabelDisplay := Value;
end;

function TProjectProperties.Get_HourLabelDisplay: Smallint;
begin
  Result := DefaultInterface.HourLabelDisplay;
end;

procedure TProjectProperties.Set_HourLabelDisplay(Value: Smallint);
begin
  DefaultInterface.HourLabelDisplay := Value;
end;

function TProjectProperties.Get_DayLabelDisplay: Smallint;
begin
  Result := DefaultInterface.DayLabelDisplay;
end;

procedure TProjectProperties.Set_DayLabelDisplay(Value: Smallint);
begin
  DefaultInterface.DayLabelDisplay := Value;
end;

function TProjectProperties.Get_WeekLabelDisplay: Smallint;
begin
  Result := DefaultInterface.WeekLabelDisplay;
end;

procedure TProjectProperties.Set_WeekLabelDisplay(Value: Smallint);
begin
  DefaultInterface.WeekLabelDisplay := Value;
end;

function TProjectProperties.Get_YearLabelDisplay: Smallint;
begin
  Result := DefaultInterface.YearLabelDisplay;
end;

procedure TProjectProperties.Set_YearLabelDisplay(Value: Smallint);
begin
  DefaultInterface.YearLabelDisplay := Value;
end;

function TProjectProperties.Get_MonthLabelDisplay: Smallint;
begin
  Result := DefaultInterface.MonthLabelDisplay;
end;

procedure TProjectProperties.Set_MonthLabelDisplay(Value: Smallint);
begin
  DefaultInterface.MonthLabelDisplay := Value;
end;

function TProjectProperties.Get_SpaceBeforeTimeLabels: WordBool;
begin
  Result := DefaultInterface.SpaceBeforeTimeLabels;
end;

procedure TProjectProperties.Set_SpaceBeforeTimeLabels(Value: WordBool);
begin
  DefaultInterface.SpaceBeforeTimeLabels := Value;
end;

function TProjectProperties.Get_DefaultTaskType: PjTaskFixedType;
begin
  Result := DefaultInterface.DefaultTaskType;
end;

procedure TProjectProperties.Set_DefaultTaskType(Value: PjTaskFixedType);
begin
  DefaultInterface.DefaultTaskType := Value;
end;

function TProjectProperties.Get_DefaultEffortDriven: WordBool;
begin
  Result := DefaultInterface.DefaultEffortDriven;
end;

procedure TProjectProperties.Set_DefaultEffortDriven(Value: WordBool);
begin
  DefaultInterface.DefaultEffortDriven := Value;
end;

function TProjectProperties.Get_UseFYStartYear: WordBool;
begin
  Result := DefaultInterface.UseFYStartYear;
end;

procedure TProjectProperties.Set_UseFYStartYear(Value: WordBool);
begin
  DefaultInterface.UseFYStartYear := Value;
end;

function TProjectProperties.Get_AutoFilter: WordBool;
begin
  Result := DefaultInterface.AutoFilter;
end;

procedure TProjectProperties.Set_AutoFilter(Value: WordBool);
begin
  DefaultInterface.AutoFilter := Value;
end;

function TProjectProperties.Get_HonorConstraints: WordBool;
begin
  Result := DefaultInterface.HonorConstraints;
end;

procedure TProjectProperties.Set_HonorConstraints(Value: WordBool);
begin
  DefaultInterface.HonorConstraints := Value;
end;

function TProjectProperties.Get_MultipleCriticalPaths: WordBool;
begin
  Result := DefaultInterface.MultipleCriticalPaths;
end;

procedure TProjectProperties.Set_MultipleCriticalPaths(Value: WordBool);
begin
  DefaultInterface.MultipleCriticalPaths := Value;
end;

function TProjectProperties.Get_LevelFromDate: OleVariant;
begin
  Result := DefaultInterface.LevelFromDate;
end;

procedure TProjectProperties.Set_LevelFromDate(Value: OleVariant);
begin
  DefaultInterface.LevelFromDate := Value;
end;

function TProjectProperties.Get_LevelToDate: OleVariant;
begin
  Result := DefaultInterface.LevelToDate;
end;

procedure TProjectProperties.Set_LevelToDate(Value: OleVariant);
begin
  DefaultInterface.LevelToDate := Value;
end;

function TProjectProperties.Get_LevelEntireProject: WordBool;
begin
  Result := DefaultInterface.LevelEntireProject;
end;

procedure TProjectProperties.Set_LevelEntireProject(Value: WordBool);
begin
  DefaultInterface.LevelEntireProject := Value;
end;

function TProjectProperties.Get_DefaultFixedCostAccrual: PjAccrueAt;
begin
  Result := DefaultInterface.DefaultFixedCostAccrual;
end;

procedure TProjectProperties.Set_DefaultFixedCostAccrual(Value: PjAccrueAt);
begin
  DefaultInterface.DefaultFixedCostAccrual := Value;
end;

function TProjectProperties.Get_SpreadCostsToStatusDate: WordBool;
begin
  Result := DefaultInterface.SpreadCostsToStatusDate;
end;

procedure TProjectProperties.Set_SpreadCostsToStatusDate(Value: WordBool);
begin
  DefaultInterface.SpreadCostsToStatusDate := Value;
end;

function TProjectProperties.Get_SpreadPercentCompleteToStatusDate: WordBool;
begin
  Result := DefaultInterface.SpreadPercentCompleteToStatusDate;
end;

procedure TProjectProperties.Set_SpreadPercentCompleteToStatusDate(Value: WordBool);
begin
  DefaultInterface.SpreadPercentCompleteToStatusDate := Value;
end;

function TProjectProperties.Get_AutoCalcCosts: WordBool;
begin
  Result := DefaultInterface.AutoCalcCosts;
end;

procedure TProjectProperties.Set_AutoCalcCosts(Value: WordBool);
begin
  DefaultInterface.AutoCalcCosts := Value;
end;

function TProjectProperties.Get_ShowExternalSuccessors: WordBool;
begin
  Result := DefaultInterface.ShowExternalSuccessors;
end;

procedure TProjectProperties.Set_ShowExternalSuccessors(Value: WordBool);
begin
  DefaultInterface.ShowExternalSuccessors := Value;
end;

function TProjectProperties.Get_ShowExternalPredecessors: WordBool;
begin
  Result := DefaultInterface.ShowExternalPredecessors;
end;

procedure TProjectProperties.Set_ShowExternalPredecessors(Value: WordBool);
begin
  DefaultInterface.ShowExternalPredecessors := Value;
end;

function TProjectProperties.Get_ShowCrossProjectLinksInfo: WordBool;
begin
  Result := DefaultInterface.ShowCrossProjectLinksInfo;
end;

procedure TProjectProperties.Set_ShowCrossProjectLinksInfo(Value: WordBool);
begin
  DefaultInterface.ShowCrossProjectLinksInfo := Value;
end;

function TProjectProperties.Get_AcceptNewExternalData: WordBool;
begin
  Result := DefaultInterface.AcceptNewExternalData;
end;

procedure TProjectProperties.Set_AcceptNewExternalData(Value: WordBool);
begin
  DefaultInterface.AcceptNewExternalData := Value;
end;

function TProjectProperties.Get_PhoneticType: PjPhoneticType;
begin
  Result := DefaultInterface.PhoneticType;
end;

procedure TProjectProperties.Set_PhoneticType(Value: PjPhoneticType);
begin
  DefaultInterface.PhoneticType := Value;
end;

function TProjectProperties.Get_WorkgroupMessages: PjWorkgroupMessages;
begin
  Result := DefaultInterface.WorkgroupMessages;
end;

procedure TProjectProperties.Set_WorkgroupMessages(Value: PjWorkgroupMessages);
begin
  DefaultInterface.WorkgroupMessages := Value;
end;

function TProjectProperties.Get_ServerURL: WideString;
begin
  Result := DefaultInterface.ServerURL;
end;

procedure TProjectProperties.Set_ServerURL(const Value: WideString);
begin
  DefaultInterface.ServerURL := Value;
end;

function TProjectProperties.Get_ServerPath: WideString;
begin
  Result := DefaultInterface.ServerPath;
end;

procedure TProjectProperties.Set_ServerPath(const Value: WideString);
begin
  DefaultInterface.ServerPath := Value;
end;

function TProjectProperties.Get_ReceiveNotifications: WordBool;
begin
  Result := DefaultInterface.ReceiveNotifications;
end;

procedure TProjectProperties.Set_ReceiveNotifications(Value: WordBool);
begin
  DefaultInterface.ReceiveNotifications := Value;
end;

function TProjectProperties.Get_SendHyperlinkNote: WordBool;
begin
  Result := DefaultInterface.SendHyperlinkNote;
end;

procedure TProjectProperties.Set_SendHyperlinkNote(Value: WordBool);
begin
  DefaultInterface.SendHyperlinkNote := Value;
end;

function TProjectProperties.Get_HyperlinkColor: PjColor;
begin
  Result := DefaultInterface.HyperlinkColor;
end;

procedure TProjectProperties.Set_HyperlinkColor(Value: PjColor);
begin
  DefaultInterface.HyperlinkColor := Value;
end;

function TProjectProperties.Get_FollowedHyperlinkColor: PjColor;
begin
  Result := DefaultInterface.FollowedHyperlinkColor;
end;

procedure TProjectProperties.Set_FollowedHyperlinkColor(Value: PjColor);
begin
  DefaultInterface.FollowedHyperlinkColor := Value;
end;

function TProjectProperties.Get_UnderlineHyperlinks: WordBool;
begin
  Result := DefaultInterface.UnderlineHyperlinks;
end;

procedure TProjectProperties.Set_UnderlineHyperlinks(Value: WordBool);
begin
  DefaultInterface.UnderlineHyperlinks := Value;
end;

function TProjectProperties.Get_AskForCompletedWork: PjTeamStatusCompletedWork;
begin
  Result := DefaultInterface.AskForCompletedWork;
end;

procedure TProjectProperties.Set_AskForCompletedWork(Value: PjTeamStatusCompletedWork);
begin
  DefaultInterface.AskForCompletedWork := Value;
end;

function TProjectProperties.Get_TrackOvertimeWork: WordBool;
begin
  Result := DefaultInterface.TrackOvertimeWork;
end;

procedure TProjectProperties.Set_TrackOvertimeWork(Value: WordBool);
begin
  DefaultInterface.TrackOvertimeWork := Value;
end;

function TProjectProperties.Get_TeamMembersCanDeclineTasks: WordBool;
begin
  Result := DefaultInterface.TeamMembersCanDeclineTasks;
end;

procedure TProjectProperties.Set_TeamMembersCanDeclineTasks(Value: WordBool);
begin
  DefaultInterface.TeamMembersCanDeclineTasks := Value;
end;

function TProjectProperties.Get_ShowEstimatedDuration: WordBool;
begin
  Result := DefaultInterface.ShowEstimatedDuration;
end;

procedure TProjectProperties.Set_ShowEstimatedDuration(Value: WordBool);
begin
  DefaultInterface.ShowEstimatedDuration := Value;
end;

function TProjectProperties.Get_NewTasksEstimated: WordBool;
begin
  Result := DefaultInterface.NewTasksEstimated;
end;

procedure TProjectProperties.Set_NewTasksEstimated(Value: WordBool);
begin
  DefaultInterface.NewTasksEstimated := Value;
end;

function TProjectProperties.Get_WBSCodeGenerate: WordBool;
begin
  Result := DefaultInterface.WBSCodeGenerate;
end;

procedure TProjectProperties.Set_WBSCodeGenerate(Value: WordBool);
begin
  DefaultInterface.WBSCodeGenerate := Value;
end;

function TProjectProperties.Get_WBSVerifyUniqueness: WordBool;
begin
  Result := DefaultInterface.WBSVerifyUniqueness;
end;

procedure TProjectProperties.Set_WBSVerifyUniqueness(Value: WordBool);
begin
  DefaultInterface.WBSVerifyUniqueness := Value;
end;

function TProjectProperties.Get_UpdateProjOnSave: WordBool;
begin
  Result := DefaultInterface.UpdateProjOnSave;
end;

procedure TProjectProperties.Set_UpdateProjOnSave(Value: WordBool);
begin
  DefaultInterface.UpdateProjOnSave := Value;
end;

function TProjectProperties.Get_ServerIdentification: PjAuthentication;
begin
  Result := DefaultInterface.ServerIdentification;
end;

procedure TProjectProperties.Set_ServerIdentification(Value: PjAuthentication);
begin
  DefaultInterface.ServerIdentification := Value;
end;

function TProjectProperties.Get_VBASigned: WordBool;
begin
  Result := DefaultInterface.VBASigned;
end;

procedure TProjectProperties.Set_VBASigned(Value: WordBool);
begin
  DefaultInterface.VBASigned := Value;
end;

function TProjectProperties.Get_ExpandDatabaseTimephasedData: WordBool;
begin
  Result := DefaultInterface.ExpandDatabaseTimephasedData;
end;

procedure TProjectProperties.Set_ExpandDatabaseTimephasedData(Value: WordBool);
begin
  DefaultInterface.ExpandDatabaseTimephasedData := Value;
end;

function TProjectProperties.Get_DatabaseProjectUniqueID: OleVariant;
begin
  Result := DefaultInterface.DatabaseProjectUniqueID;
end;

procedure TProjectProperties.Set_DatabaseProjectUniqueID(Value: OleVariant);
begin
  DefaultInterface.DatabaseProjectUniqueID := Value;
end;

function TProjectProperties.Get_ActualWork: OleVariant;
begin
  Result := DefaultInterface.ActualWork;
end;

procedure TProjectProperties.Set_ActualWork(Value: OleVariant);
begin
  DefaultInterface.ActualWork := Value;
end;

function TProjectProperties.Get_Cost1: OleVariant;
begin
  Result := DefaultInterface.Cost1;
end;

procedure TProjectProperties.Set_Cost1(Value: OleVariant);
begin
  DefaultInterface.Cost1 := Value;
end;

function TProjectProperties.Get_Cost2: OleVariant;
begin
  Result := DefaultInterface.Cost2;
end;

procedure TProjectProperties.Set_Cost2(Value: OleVariant);
begin
  DefaultInterface.Cost2 := Value;
end;

function TProjectProperties.Get_Cost3: OleVariant;
begin
  Result := DefaultInterface.Cost3;
end;

procedure TProjectProperties.Set_Cost3(Value: OleVariant);
begin
  DefaultInterface.Cost3 := Value;
end;

function TProjectProperties.Get_BaselineWork: OleVariant;
begin
  Result := DefaultInterface.BaselineWork;
end;

procedure TProjectProperties.Set_BaselineWork(Value: OleVariant);
begin
  DefaultInterface.BaselineWork := Value;
end;

function TProjectProperties.Get_BaselineCost: OleVariant;
begin
  Result := DefaultInterface.BaselineCost;
end;

procedure TProjectProperties.Set_BaselineCost(Value: OleVariant);
begin
  DefaultInterface.BaselineCost := Value;
end;

function TProjectProperties.Get_FixedCost: OleVariant;
begin
  Result := DefaultInterface.FixedCost;
end;

procedure TProjectProperties.Set_FixedCost(Value: OleVariant);
begin
  DefaultInterface.FixedCost := Value;
end;

function TProjectProperties.Get_WBS: WideString;
begin
  Result := DefaultInterface.WBS;
end;

procedure TProjectProperties.Set_WBS(const Value: WideString);
begin
  DefaultInterface.WBS := Value;
end;

function TProjectProperties.Get_Delay: OleVariant;
begin
  Result := DefaultInterface.Delay;
end;

procedure TProjectProperties.Set_Delay(Value: OleVariant);
begin
  DefaultInterface.Delay := Value;
end;

function TProjectProperties.Get_Priority: OleVariant;
begin
  Result := DefaultInterface.Priority;
end;

procedure TProjectProperties.Set_Priority(Value: OleVariant);
begin
  DefaultInterface.Priority := Value;
end;

function TProjectProperties.Get_Duration1: OleVariant;
begin
  Result := DefaultInterface.Duration1;
end;

procedure TProjectProperties.Set_Duration1(Value: OleVariant);
begin
  DefaultInterface.Duration1 := Value;
end;

function TProjectProperties.Get_Duration2: OleVariant;
begin
  Result := DefaultInterface.Duration2;
end;

procedure TProjectProperties.Set_Duration2(Value: OleVariant);
begin
  DefaultInterface.Duration2 := Value;
end;

function TProjectProperties.Get_Duration3: OleVariant;
begin
  Result := DefaultInterface.Duration3;
end;

procedure TProjectProperties.Set_Duration3(Value: OleVariant);
begin
  DefaultInterface.Duration3 := Value;
end;

function TProjectProperties.Get_PercentWorkComplete: OleVariant;
begin
  Result := DefaultInterface.PercentWorkComplete;
end;

procedure TProjectProperties.Set_PercentWorkComplete(Value: OleVariant);
begin
  DefaultInterface.PercentWorkComplete := Value;
end;

function TProjectProperties.Get_FixedDuration: OleVariant;
begin
  Result := DefaultInterface.FixedDuration;
end;

procedure TProjectProperties.Set_FixedDuration(Value: OleVariant);
begin
  DefaultInterface.FixedDuration := Value;
end;

function TProjectProperties.Get_BaselineStart: OleVariant;
begin
  Result := DefaultInterface.BaselineStart;
end;

procedure TProjectProperties.Set_BaselineStart(Value: OleVariant);
begin
  DefaultInterface.BaselineStart := Value;
end;

function TProjectProperties.Get_BaselineFinish: OleVariant;
begin
  Result := DefaultInterface.BaselineFinish;
end;

procedure TProjectProperties.Set_BaselineFinish(Value: OleVariant);
begin
  DefaultInterface.BaselineFinish := Value;
end;

function TProjectProperties.Get_Text1: WideString;
begin
  Result := DefaultInterface.Text1;
end;

procedure TProjectProperties.Set_Text1(const Value: WideString);
begin
  DefaultInterface.Text1 := Value;
end;

function TProjectProperties.Get_Start1: OleVariant;
begin
  Result := DefaultInterface.Start1;
end;

procedure TProjectProperties.Set_Start1(Value: OleVariant);
begin
  DefaultInterface.Start1 := Value;
end;

function TProjectProperties.Get_Finish1: OleVariant;
begin
  Result := DefaultInterface.Finish1;
end;

procedure TProjectProperties.Set_Finish1(Value: OleVariant);
begin
  DefaultInterface.Finish1 := Value;
end;

function TProjectProperties.Get_Text2: WideString;
begin
  Result := DefaultInterface.Text2;
end;

procedure TProjectProperties.Set_Text2(const Value: WideString);
begin
  DefaultInterface.Text2 := Value;
end;

function TProjectProperties.Get_Start2: OleVariant;
begin
  Result := DefaultInterface.Start2;
end;

procedure TProjectProperties.Set_Start2(Value: OleVariant);
begin
  DefaultInterface.Start2 := Value;
end;

function TProjectProperties.Get_Finish2: OleVariant;
begin
  Result := DefaultInterface.Finish2;
end;

procedure TProjectProperties.Set_Finish2(Value: OleVariant);
begin
  DefaultInterface.Finish2 := Value;
end;

function TProjectProperties.Get_Text3: WideString;
begin
  Result := DefaultInterface.Text3;
end;

procedure TProjectProperties.Set_Text3(const Value: WideString);
begin
  DefaultInterface.Text3 := Value;
end;

function TProjectProperties.Get_Start3: OleVariant;
begin
  Result := DefaultInterface.Start3;
end;

procedure TProjectProperties.Set_Start3(Value: OleVariant);
begin
  DefaultInterface.Start3 := Value;
end;

function TProjectProperties.Get_Finish3: OleVariant;
begin
  Result := DefaultInterface.Finish3;
end;

procedure TProjectProperties.Set_Finish3(Value: OleVariant);
begin
  DefaultInterface.Finish3 := Value;
end;

function TProjectProperties.Get_Text4: WideString;
begin
  Result := DefaultInterface.Text4;
end;

procedure TProjectProperties.Set_Text4(const Value: WideString);
begin
  DefaultInterface.Text4 := Value;
end;

function TProjectProperties.Get_Start4: OleVariant;
begin
  Result := DefaultInterface.Start4;
end;

procedure TProjectProperties.Set_Start4(Value: OleVariant);
begin
  DefaultInterface.Start4 := Value;
end;

function TProjectProperties.Get_Finish4: OleVariant;
begin
  Result := DefaultInterface.Finish4;
end;

procedure TProjectProperties.Set_Finish4(Value: OleVariant);
begin
  DefaultInterface.Finish4 := Value;
end;

function TProjectProperties.Get_Text5: WideString;
begin
  Result := DefaultInterface.Text5;
end;

procedure TProjectProperties.Set_Text5(const Value: WideString);
begin
  DefaultInterface.Text5 := Value;
end;

function TProjectProperties.Get_Start5: OleVariant;
begin
  Result := DefaultInterface.Start5;
end;

procedure TProjectProperties.Set_Start5(Value: OleVariant);
begin
  DefaultInterface.Start5 := Value;
end;

function TProjectProperties.Get_Finish5: OleVariant;
begin
  Result := DefaultInterface.Finish5;
end;

procedure TProjectProperties.Set_Finish5(Value: OleVariant);
begin
  DefaultInterface.Finish5 := Value;
end;

function TProjectProperties.Get_Text6: WideString;
begin
  Result := DefaultInterface.Text6;
end;

procedure TProjectProperties.Set_Text6(const Value: WideString);
begin
  DefaultInterface.Text6 := Value;
end;

function TProjectProperties.Get_Text7: WideString;
begin
  Result := DefaultInterface.Text7;
end;

procedure TProjectProperties.Set_Text7(const Value: WideString);
begin
  DefaultInterface.Text7 := Value;
end;

function TProjectProperties.Get_Text8: WideString;
begin
  Result := DefaultInterface.Text8;
end;

procedure TProjectProperties.Set_Text8(const Value: WideString);
begin
  DefaultInterface.Text8 := Value;
end;

function TProjectProperties.Get_Text9: WideString;
begin
  Result := DefaultInterface.Text9;
end;

procedure TProjectProperties.Set_Text9(const Value: WideString);
begin
  DefaultInterface.Text9 := Value;
end;

function TProjectProperties.Get_Text10: WideString;
begin
  Result := DefaultInterface.Text10;
end;

procedure TProjectProperties.Set_Text10(const Value: WideString);
begin
  DefaultInterface.Text10 := Value;
end;

function TProjectProperties.Get_Marked: OleVariant;
begin
  Result := DefaultInterface.Marked;
end;

procedure TProjectProperties.Set_Marked(Value: OleVariant);
begin
  DefaultInterface.Marked := Value;
end;

function TProjectProperties.Get_Flag1: OleVariant;
begin
  Result := DefaultInterface.Flag1;
end;

procedure TProjectProperties.Set_Flag1(Value: OleVariant);
begin
  DefaultInterface.Flag1 := Value;
end;

function TProjectProperties.Get_Flag2: OleVariant;
begin
  Result := DefaultInterface.Flag2;
end;

procedure TProjectProperties.Set_Flag2(Value: OleVariant);
begin
  DefaultInterface.Flag2 := Value;
end;

function TProjectProperties.Get_Flag3: OleVariant;
begin
  Result := DefaultInterface.Flag3;
end;

procedure TProjectProperties.Set_Flag3(Value: OleVariant);
begin
  DefaultInterface.Flag3 := Value;
end;

function TProjectProperties.Get_Flag4: OleVariant;
begin
  Result := DefaultInterface.Flag4;
end;

procedure TProjectProperties.Set_Flag4(Value: OleVariant);
begin
  DefaultInterface.Flag4 := Value;
end;

function TProjectProperties.Get_Flag5: OleVariant;
begin
  Result := DefaultInterface.Flag5;
end;

procedure TProjectProperties.Set_Flag5(Value: OleVariant);
begin
  DefaultInterface.Flag5 := Value;
end;

function TProjectProperties.Get_Flag6: OleVariant;
begin
  Result := DefaultInterface.Flag6;
end;

procedure TProjectProperties.Set_Flag6(Value: OleVariant);
begin
  DefaultInterface.Flag6 := Value;
end;

function TProjectProperties.Get_Flag7: OleVariant;
begin
  Result := DefaultInterface.Flag7;
end;

procedure TProjectProperties.Set_Flag7(Value: OleVariant);
begin
  DefaultInterface.Flag7 := Value;
end;

function TProjectProperties.Get_Flag8: OleVariant;
begin
  Result := DefaultInterface.Flag8;
end;

procedure TProjectProperties.Set_Flag8(Value: OleVariant);
begin
  DefaultInterface.Flag8 := Value;
end;

function TProjectProperties.Get_Flag9: OleVariant;
begin
  Result := DefaultInterface.Flag9;
end;

procedure TProjectProperties.Set_Flag9(Value: OleVariant);
begin
  DefaultInterface.Flag9 := Value;
end;

function TProjectProperties.Get_Flag10: OleVariant;
begin
  Result := DefaultInterface.Flag10;
end;

procedure TProjectProperties.Set_Flag10(Value: OleVariant);
begin
  DefaultInterface.Flag10 := Value;
end;

function TProjectProperties.Get_Rollup: OleVariant;
begin
  Result := DefaultInterface.Rollup;
end;

procedure TProjectProperties.Set_Rollup(Value: OleVariant);
begin
  DefaultInterface.Rollup := Value;
end;

function TProjectProperties.Get_Number1: Double;
begin
  Result := DefaultInterface.Number1;
end;

procedure TProjectProperties.Set_Number1(Value: Double);
begin
  DefaultInterface.Number1 := Value;
end;

function TProjectProperties.Get_Number2: Double;
begin
  Result := DefaultInterface.Number2;
end;

procedure TProjectProperties.Set_Number2(Value: Double);
begin
  DefaultInterface.Number2 := Value;
end;

function TProjectProperties.Get_Number3: Double;
begin
  Result := DefaultInterface.Number3;
end;

procedure TProjectProperties.Set_Number3(Value: Double);
begin
  DefaultInterface.Number3 := Value;
end;

function TProjectProperties.Get_Number4: Double;
begin
  Result := DefaultInterface.Number4;
end;

procedure TProjectProperties.Set_Number4(Value: Double);
begin
  DefaultInterface.Number4 := Value;
end;

function TProjectProperties.Get_Number5: Double;
begin
  Result := DefaultInterface.Number5;
end;

procedure TProjectProperties.Set_Number5(Value: Double);
begin
  DefaultInterface.Number5 := Value;
end;

function TProjectProperties.Get_Notes: WideString;
begin
  Result := DefaultInterface.Notes;
end;

procedure TProjectProperties.Set_Notes(const Value: WideString);
begin
  DefaultInterface.Notes := Value;
end;

function TProjectProperties.Get_Contact: WideString;
begin
  Result := DefaultInterface.Contact;
end;

procedure TProjectProperties.Set_Contact(const Value: WideString);
begin
  DefaultInterface.Contact := Value;
end;

function TProjectProperties.Get_HideBar: OleVariant;
begin
  Result := DefaultInterface.HideBar;
end;

procedure TProjectProperties.Set_HideBar(Value: OleVariant);
begin
  DefaultInterface.HideBar := Value;
end;

function TProjectProperties.Get_CurrencySymbol: WideString;
begin
  Result := DefaultInterface.CurrencySymbol;
end;

procedure TProjectProperties.Set_CurrencySymbol(const Value: WideString);
begin
  DefaultInterface.CurrencySymbol := Value;
end;

function TProjectProperties.Get_CurrencySymbolPosition: PjPlacement;
begin
  Result := DefaultInterface.CurrencySymbolPosition;
end;

procedure TProjectProperties.Set_CurrencySymbolPosition(Value: PjPlacement);
begin
  DefaultInterface.CurrencySymbolPosition := Value;
end;

function TProjectProperties.Get_CurrencyDigits: Smallint;
begin
  Result := DefaultInterface.CurrencyDigits;
end;

procedure TProjectProperties.Set_CurrencyDigits(Value: Smallint);
begin
  DefaultInterface.CurrencyDigits := Value;
end;

function TProjectProperties.Get_ShowCriticalSlack: Integer;
begin
  Result := DefaultInterface.ShowCriticalSlack;
end;

procedure TProjectProperties.Set_ShowCriticalSlack(Value: Integer);
begin
  DefaultInterface.ShowCriticalSlack := Value;
end;

function TProjectProperties.Get_DefaultDurationUnits: PjUnit;
begin
  Result := DefaultInterface.DefaultDurationUnits;
end;

procedure TProjectProperties.Set_DefaultDurationUnits(Value: PjUnit);
begin
  DefaultInterface.DefaultDurationUnits := Value;
end;

function TProjectProperties.Get_DefaultWorkUnits: PjUnit;
begin
  Result := DefaultInterface.DefaultWorkUnits;
end;

procedure TProjectProperties.Set_DefaultWorkUnits(Value: PjUnit);
begin
  DefaultInterface.DefaultWorkUnits := Value;
end;

function TProjectProperties.Get_StartOnCurrentDate: WordBool;
begin
  Result := DefaultInterface.StartOnCurrentDate;
end;

procedure TProjectProperties.Set_StartOnCurrentDate(Value: WordBool);
begin
  DefaultInterface.StartOnCurrentDate := Value;
end;

function TProjectProperties.Get_AutoTrack: WordBool;
begin
  Result := DefaultInterface.AutoTrack;
end;

procedure TProjectProperties.Set_AutoTrack(Value: WordBool);
begin
  DefaultInterface.AutoTrack := Value;
end;

function TProjectProperties.Get_AutoSplitTasks: WordBool;
begin
  Result := DefaultInterface.AutoSplitTasks;
end;

procedure TProjectProperties.Set_AutoSplitTasks(Value: WordBool);
begin
  DefaultInterface.AutoSplitTasks := Value;
end;

function TProjectProperties.Get_AutoLinkTasks: WordBool;
begin
  Result := DefaultInterface.AutoLinkTasks;
end;

procedure TProjectProperties.Set_AutoLinkTasks(Value: WordBool);
begin
  DefaultInterface.AutoLinkTasks := Value;
end;

function TProjectProperties.Get_DefaultStartTime: OleVariant;
begin
  Result := DefaultInterface.DefaultStartTime;
end;

procedure TProjectProperties.Set_DefaultStartTime(Value: OleVariant);
begin
  DefaultInterface.DefaultStartTime := Value;
end;

function TProjectProperties.Get_DefaultFinishTime: OleVariant;
begin
  Result := DefaultInterface.DefaultFinishTime;
end;

procedure TProjectProperties.Set_DefaultFinishTime(Value: OleVariant);
begin
  DefaultInterface.DefaultFinishTime := Value;
end;

function TProjectProperties.Get_HoursPerDay: Double;
begin
  Result := DefaultInterface.HoursPerDay;
end;

procedure TProjectProperties.Set_HoursPerDay(Value: Double);
begin
  DefaultInterface.HoursPerDay := Value;
end;

function TProjectProperties.Get_HoursPerWeek: Double;
begin
  Result := DefaultInterface.HoursPerWeek;
end;

procedure TProjectProperties.Set_HoursPerWeek(Value: Double);
begin
  DefaultInterface.HoursPerWeek := Value;
end;

function TProjectProperties.Get_DaysPerMonth: Double;
begin
  Result := DefaultInterface.DaysPerMonth;
end;

procedure TProjectProperties.Set_DaysPerMonth(Value: Double);
begin
  DefaultInterface.DaysPerMonth := Value;
end;

function TProjectProperties.Get_DefaultResourceStandardRate: OleVariant;
begin
  Result := DefaultInterface.DefaultResourceStandardRate;
end;

procedure TProjectProperties.Set_DefaultResourceStandardRate(Value: OleVariant);
begin
  DefaultInterface.DefaultResourceStandardRate := Value;
end;

function TProjectProperties.Get_DefaultResourceOvertimeRate: OleVariant;
begin
  Result := DefaultInterface.DefaultResourceOvertimeRate;
end;

procedure TProjectProperties.Set_DefaultResourceOvertimeRate(Value: OleVariant);
begin
  DefaultInterface.DefaultResourceOvertimeRate := Value;
end;

function TProjectProperties.Get_DisplayProjectSummaryTask: WordBool;
begin
  Result := DefaultInterface.DisplayProjectSummaryTask;
end;

procedure TProjectProperties.Set_DisplayProjectSummaryTask(Value: WordBool);
begin
  DefaultInterface.DisplayProjectSummaryTask := Value;
end;

function TProjectProperties.Get_AutoAddResources: WordBool;
begin
  Result := DefaultInterface.AutoAddResources;
end;

procedure TProjectProperties.Set_AutoAddResources(Value: WordBool);
begin
  DefaultInterface.AutoAddResources := Value;
end;

function TProjectProperties.Get_StartWeekOn: PjWeekday;
begin
  Result := DefaultInterface.StartWeekOn;
end;

procedure TProjectProperties.Set_StartWeekOn(Value: PjWeekday);
begin
  DefaultInterface.StartWeekOn := Value;
end;

function TProjectProperties.Get_StartYearIn: PjMonth;
begin
  Result := DefaultInterface.StartYearIn;
end;

procedure TProjectProperties.Set_StartYearIn(Value: PjMonth);
begin
  DefaultInterface.StartYearIn := Value;
end;

function TProjectProperties.Get_AllowTaskDelegation: WordBool;
begin
  Result := DefaultInterface.AllowTaskDelegation;
end;

procedure TProjectProperties.Set_AllowTaskDelegation(Value: WordBool);
begin
  DefaultInterface.AllowTaskDelegation := Value;
end;

function TProjectProperties.Get_Name: WideString;
begin
  Result := DefaultInterface.Name;
end;

procedure TProjectProperties.Set_Name(const Value: WideString);
begin
  DefaultInterface.Name := Value;
end;

function  TProjectProperties.Get__CodeName: WideString;
begin
  Result := DefaultInterface._CodeName;
end;

function  TProjectProperties.Set__CodeName(const Param1: WideString): HResult;
begin
  Result := DefaultInterface._CodeName := Param1;
end;

function  TProjectProperties.Get_CodeName: WideString;
begin
  Result := DefaultInterface.CodeName;
end;

function  TProjectProperties.Get_OutlineChildren: Tasks;
begin
  Result := DefaultInterface.OutlineChildren;
end;

function  TProjectProperties.Get_CostVariance: OleVariant;
begin
  Result := DefaultInterface.CostVariance;
end;

function  TProjectProperties.Get_ProjectSummaryTask: Task;
begin
  Result := DefaultInterface.ProjectSummaryTask;
end;

function  TProjectProperties.Get_RemainingCost: OleVariant;
begin
  Result := DefaultInterface.RemainingCost;
end;

function  TProjectProperties.Get_BCWP: OleVariant;
begin
  Result := DefaultInterface.BCWP;
end;

function  TProjectProperties.Get_BCWS: OleVariant;
begin
  Result := DefaultInterface.BCWS;
end;

function  TProjectProperties.Get_SV: OleVariant;
begin
  Result := DefaultInterface.SV;
end;

function  TProjectProperties.Get_CV: OleVariant;
begin
  Result := DefaultInterface.CV;
end;

function  TProjectProperties.Get_OutlineNumber: WideString;
begin
  Result := DefaultInterface.OutlineNumber;
end;

function  TProjectProperties.Get_Critical: OleVariant;
begin
  Result := DefaultInterface.Critical;
end;

function  TProjectProperties.Get_FreeSlack: OleVariant;
begin
  Result := DefaultInterface.FreeSlack;
end;

function  TProjectProperties.Get_TotalSlack: OleVariant;
begin
  Result := DefaultInterface.TotalSlack;
end;

function  TProjectProperties.Get_UniqueID: Integer;
begin
  Result := DefaultInterface.UniqueID;
end;

function  TProjectProperties.Get_OutlineLevel: SYSINT;
begin
  Result := DefaultInterface.OutlineLevel;
end;

function  TProjectProperties.Get_BaselineDuration: OleVariant;
begin
  Result := DefaultInterface.BaselineDuration;
end;

function  TProjectProperties.Get_DurationVariance: OleVariant;
begin
  Result := DefaultInterface.DurationVariance;
end;

function  TProjectProperties.Get_EarlyStart: OleVariant;
begin
  Result := DefaultInterface.EarlyStart;
end;

function  TProjectProperties.Get_EarlyFinish: OleVariant;
begin
  Result := DefaultInterface.EarlyFinish;
end;

function  TProjectProperties.Get_LateStart: OleVariant;
begin
  Result := DefaultInterface.LateStart;
end;

function  TProjectProperties.Get_StartVariance: OleVariant;
begin
  Result := DefaultInterface.StartVariance;
end;

function  TProjectProperties.Get_FinishVariance: OleVariant;
begin
  Result := DefaultInterface.FinishVariance;
end;

function  TProjectProperties.Get_Project: OleVariant;
begin
  Result := DefaultInterface.Project;
end;

function  TProjectProperties.Get_Milestone: OleVariant;
begin
  Result := DefaultInterface.Milestone;
end;

function  TProjectProperties.Get_RemainingDuration: OleVariant;
begin
  Result := DefaultInterface.RemainingDuration;
end;

function  TProjectProperties.Get_PercentComplete: OleVariant;
begin
  Result := DefaultInterface.PercentComplete;
end;

function  TProjectProperties.Get_Start: OleVariant;
begin
  Result := DefaultInterface.Start;
end;

function  TProjectProperties.Get_Finish: OleVariant;
begin
  Result := DefaultInterface.Finish;
end;

function  TProjectProperties.Get_ResourceNames: OleVariant;
begin
  Result := DefaultInterface.ResourceNames;
end;

function  TProjectProperties.Get_ResourceInitials: OleVariant;
begin
  Result := DefaultInterface.ResourceInitials;
end;

function  TProjectProperties.Get_Resume: OleVariant;
begin
  Result := DefaultInterface.Resume;
end;

function  TProjectProperties.Get_Stop: OleVariant;
begin
  Result := DefaultInterface.Stop;
end;

function  TProjectProperties.Get_ResumeNoEarlierThan: OleVariant;
begin
  Result := DefaultInterface.ResumeNoEarlierThan;
end;

function  TProjectProperties.Get_ConstraintType: OleVariant;
begin
  Result := DefaultInterface.ConstraintType;
end;

function  TProjectProperties.Get_ConstraintDate: OleVariant;
begin
  Result := DefaultInterface.ConstraintDate;
end;

function  TProjectProperties.Get_ActualCost: OleVariant;
begin
  Result := DefaultInterface.ActualCost;
end;

function  TProjectProperties.Get_Cost: OleVariant;
begin
  Result := DefaultInterface.Cost;
end;

function  TProjectProperties.Get_Created: OleVariant;
begin
  Result := DefaultInterface.Created;
end;

function  TProjectProperties.Get_ActualDuration: OleVariant;
begin
  Result := DefaultInterface.ActualDuration;
end;

function  TProjectProperties.Get_Duration: OleVariant;
begin
  Result := DefaultInterface.Duration;
end;

function  TProjectProperties.Get_LateFinish: OleVariant;
begin
  Result := DefaultInterface.LateFinish;
end;

function  TProjectProperties.Get_ActualFinish: OleVariant;
begin
  Result := DefaultInterface.ActualFinish;
end;

function  TProjectProperties.Get_Objects: Integer;
begin
  Result := DefaultInterface.Objects;
end;

function  TProjectProperties.Get_RemainingWork: OleVariant;
begin
  Result := DefaultInterface.RemainingWork;
end;

function  TProjectProperties.Get_ResourceGroup: OleVariant;
begin
  Result := DefaultInterface.ResourceGroup;
end;

function  TProjectProperties.Get_ActualStart: OleVariant;
begin
  Result := DefaultInterface.ActualStart;
end;

function  TProjectProperties.Get_Summary: OleVariant;
begin
  Result := DefaultInterface.Summary;
end;

function  TProjectProperties.Get_Template: WideString;
begin
  Result := DefaultInterface.Template;
end;

function  TProjectProperties.Get_UpdateNeeded: OleVariant;
begin
  Result := DefaultInterface.UpdateNeeded;
end;

function  TProjectProperties.Get_Work: OleVariant;
begin
  Result := DefaultInterface.Work;
end;

function  TProjectProperties.Get_WorkVariance: OleVariant;
begin
  Result := DefaultInterface.WorkVariance;
end;

function  TProjectProperties.Get_LinkedFields: OleVariant;
begin
  Result := DefaultInterface.LinkedFields;
end;

function  TProjectProperties.Get_Confirmed: OleVariant;
begin
  Result := DefaultInterface.Confirmed;
end;

function  TProjectProperties.Get_ReadOnly: WordBool;
begin
  Result := DefaultInterface.ReadOnly;
end;

function  TProjectProperties.Get_HasPassword: WordBool;
begin
  Result := DefaultInterface.HasPassword;
end;

function  TProjectProperties.Get_WriteReserved: WordBool;
begin
  Result := DefaultInterface.WriteReserved;
end;

function  TProjectProperties.Get_Application: Application;
begin
  Result := DefaultInterface.Application;
end;

function  TProjectProperties.Get_Parent: IDispatch;
begin
  Result := DefaultInterface.Parent;
end;

function  TProjectProperties.Get_Index: OleVariant;
begin
  Result := DefaultInterface.Index;
end;

function  TProjectProperties.Get_MapList: List;
begin
  Result := DefaultInterface.MapList;
end;

function  TProjectProperties.Get_Tasks: Tasks;
begin
  Result := DefaultInterface.Tasks;
end;

function  TProjectProperties.Get_Resources: Resources;
begin
  Result := DefaultInterface.Resources;
end;

function  TProjectProperties.Get_BaseCalendars: Calendars;
begin
  Result := DefaultInterface.BaseCalendars;
end;

function  TProjectProperties.Get_BuiltinDocumentProperties: IDispatch;
begin
  Result := DefaultInterface.BuiltinDocumentProperties;
end;

function  TProjectProperties.Get_CustomDocumentProperties: IDispatch;
begin
  Result := DefaultInterface.CustomDocumentProperties;
end;

function  TProjectProperties.Get_Container: IDispatch;
begin
  Result := DefaultInterface.Container;
end;

function  TProjectProperties.Get_Calendar: Calendar;
begin
  Result := DefaultInterface.Calendar;
end;

function  TProjectProperties.Get_NumberOfTasks: Integer;
begin
  Result := DefaultInterface.NumberOfTasks;
end;

function  TProjectProperties.Get_NumberOfResources: Integer;
begin
  Result := DefaultInterface.NumberOfResources;
end;

function  TProjectProperties.Get_FullName: WideString;
begin
  Result := DefaultInterface.FullName;
end;

function  TProjectProperties.Get_Path: WideString;
begin
  Result := DefaultInterface.Path;
end;

function  TProjectProperties.Get_ResourcePoolName: WideString;
begin
  Result := DefaultInterface.ResourcePoolName;
end;

function  TProjectProperties.Get_Saved: WordBool;
begin
  Result := DefaultInterface.Saved;
end;

function  TProjectProperties.Get_CreationDate: OleVariant;
begin
  Result := DefaultInterface.CreationDate;
end;

function  TProjectProperties.Get_LastPrintedDate: OleVariant;
begin
  Result := DefaultInterface.LastPrintedDate;
end;

function  TProjectProperties.Get_LastSaveDate: OleVariant;
begin
  Result := DefaultInterface.LastSaveDate;
end;

function  TProjectProperties.Get_LastSavedBy: WideString;
begin
  Result := DefaultInterface.LastSavedBy;
end;

function  TProjectProperties.Get_RevisionNumber: WideString;
begin
  Result := DefaultInterface.RevisionNumber;
end;

function  TProjectProperties.Get_ViewList: List;
begin
  Result := DefaultInterface.ViewList;
end;

function  TProjectProperties.Get_TaskViewList: List;
begin
  Result := DefaultInterface.TaskViewList;
end;

function  TProjectProperties.Get_ResourceViewList: List;
begin
  Result := DefaultInterface.ResourceViewList;
end;

function  TProjectProperties.Get_ReadOnlyRecommended: WordBool;
begin
  Result := DefaultInterface.ReadOnlyRecommended;
end;

function  TProjectProperties.Get_ReportList: List;
begin
  Result := DefaultInterface.ReportList;
end;

function  TProjectProperties.Get_TaskFilterList: List;
begin
  Result := DefaultInterface.TaskFilterList;
end;

function  TProjectProperties.Get_ResourceFilterList: List;
begin
  Result := DefaultInterface.ResourceFilterList;
end;

function  TProjectProperties.Get_TaskTableList: List;
begin
  Result := DefaultInterface.TaskTableList;
end;

function  TProjectProperties.Get_ResourceTableList: List;
begin
  Result := DefaultInterface.ResourceTableList;
end;

function  TProjectProperties.Get_CurrentView: WideString;
begin
  Result := DefaultInterface.CurrentView;
end;

function  TProjectProperties.Get_CurrentTable: WideString;
begin
  Result := DefaultInterface.CurrentTable;
end;

function  TProjectProperties.Get_CurrentFilter: WideString;
begin
  Result := DefaultInterface.CurrentFilter;
end;

function  TProjectProperties.Get_ID: Integer;
begin
  Result := DefaultInterface.ID;
end;

function  TProjectProperties.Get_CommandBars: CommandBars;
begin
  Result := DefaultInterface.CommandBars;
end;

function  TProjectProperties.Get_UserControl: WordBool;
begin
  Result := DefaultInterface.UserControl;
end;

function  TProjectProperties.Get_VBProject: VBProject;
begin
  Result := DefaultInterface.VBProject;
end;

function  TProjectProperties.Get_Subprojects: Subprojects;
begin
  Result := DefaultInterface.Subprojects;
end;

function  TProjectProperties.Get_CurrentGroup: WideString;
begin
  Result := DefaultInterface.CurrentGroup;
end;

function  TProjectProperties.Get_TaskGroupList: List;
begin
  Result := DefaultInterface.TaskGroupList;
end;

function  TProjectProperties.Get_ResourceGroupList: List;
begin
  Result := DefaultInterface.ResourceGroupList;
end;

function  TProjectProperties.Get_TaskGroups: TaskGroups;
begin
  Result := DefaultInterface.TaskGroups;
end;

function  TProjectProperties.Get_ResourceGroups: ResourceGroups;
begin
  Result := DefaultInterface.ResourceGroups;
end;

{$ENDIF}

class function CoApplication.Create: _MSProject;
begin
  Result := CreateComObject(CLASS_Application) as _MSProject;
end;

class function CoApplication.CreateRemote(const MachineName: string): _MSProject;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Application) as _MSProject;
end;

procedure TProjectApplication.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{36D27C48-A1E8-11D3-BA55-00C04F72F325}';
    IntfIID:   '{00020AFF-0000-0000-C000-000000000046}';
    EventIID:  '{7B7597D0-0C9F-11D0-8C43-00A0C904DCD4}';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TProjectApplication.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    ConnectEvents(punk);
    Fintf:= punk as _MSProject;
  end;
end;

procedure TProjectApplication.ConnectTo(svrIntf: _MSProject);
begin
  Disconnect;
  FIntf := svrIntf;
  ConnectEvents(FIntf);
end;

procedure TProjectApplication.DisConnect;
begin
  if Fintf <> nil then
  begin
    DisconnectEvents(FIntf);
    FIntf := nil;
  end;
end;

function TProjectApplication.GetDefaultInterface: _MSProject;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TProjectApplication.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TProjectApplicationProperties.Create(Self);
{$ENDIF}
end;

destructor TProjectApplication.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TProjectApplication.GetServerProperties: TProjectApplicationProperties;
begin
  Result := FProps;
end;
{$ENDIF}

procedure TProjectApplication.InvokeEvent(DispID: TDispID; var Params: TVariantArray);
begin
  case DispID of
    -1: Exit;  // DISPID_UNKNOWN
   1: if Assigned(FOnNewProject) then
            FOnNewProject(Self, Params[0] {const Project});
   6: if Assigned(FOnProjectBeforeTaskDelete) then
            FOnProjectBeforeTaskDelete(Self, Params[0] {const Task}, Params[1] {var WordBool});
   7: if Assigned(FOnProjectBeforeResourceDelete) then
            FOnProjectBeforeResourceDelete(Self, Params[0] {const Resource}, Params[1] {var WordBool});
   8: if Assigned(FOnProjectBeforeAssignmentDelete) then
            FOnProjectBeforeAssignmentDelete(Self, Params[0] {const Assignment}, Params[1] {var WordBool});
   9: if Assigned(FOnProjectBeforeTaskChange) then
            FOnProjectBeforeTaskChange(Self, Params[0] {const Task}, Params[1] {PjField}, Params[2] {OleVariant}, Params[3] {var WordBool});
   10: if Assigned(FOnProjectBeforeResourceChange) then
            FOnProjectBeforeResourceChange(Self, Params[0] {const Resource}, Params[1] {PjField}, Params[2] {OleVariant}, Params[3] {var WordBool});
   11: if Assigned(FOnProjectBeforeAssignmentChange) then
            FOnProjectBeforeAssignmentChange(Self, Params[0] {const Assignment}, Params[1] {PjAssignmentField}, Params[2] {OleVariant}, Params[3] {var WordBool});
   12: if Assigned(FOnProjectBeforeTaskNew) then
            FOnProjectBeforeTaskNew(Self, Params[0] {const Project}, Params[1] {var WordBool});
   13: if Assigned(FOnProjectBeforeResourceNew) then
            FOnProjectBeforeResourceNew(Self, Params[0] {const Project}, Params[1] {var WordBool});
   14: if Assigned(FOnProjectBeforeAssignmentNew) then
            FOnProjectBeforeAssignmentNew(Self, Params[0] {const Project}, Params[1] {var WordBool});
   2: if Assigned(FOnProjectBeforeClose) then
            FOnProjectBeforeClose(Self, Params[0] {const Project}, Params[1] {var WordBool});
   4: if Assigned(FOnProjectBeforePrint) then
            FOnProjectBeforePrint(Self, Params[0] {const Project}, Params[1] {var WordBool});
   3: if Assigned(FOnProjectBeforeSave) then
            FOnProjectBeforeSave(Self, Params[0] {const Project}, Params[1] {WordBool}, Params[2] {var WordBool});
   5: if Assigned(FOnProjectCalculate) then
            FOnProjectCalculate(Self, Params[0] {const Project});
  end; {case DispID}
end;

function TProjectApplication.Get_Application: Application;
begin
  Result := DefaultInterface.Application;
end;

procedure TProjectApplication.Set_Application(const Value: Application);
begin
  DefaultInterface.Application := Value;
end;

function TProjectApplication.Get_Parent: Application;
begin
  Result := DefaultInterface.Parent;
end;

procedure TProjectApplication.Set_Parent(const Value: Application);
begin
  DefaultInterface.Parent := Value;
end;

function TProjectApplication.Get_Projects: Projects;
begin
  Result := DefaultInterface.Projects;
end;

procedure TProjectApplication.Set_Projects(const Value: Projects);
begin
  DefaultInterface.Projects := Value;
end;

function TProjectApplication.Get_ActiveSelection: Selection;
begin
  Result := DefaultInterface.ActiveSelection;
end;

procedure TProjectApplication.Set_ActiveSelection(const Value: Selection);
begin
  DefaultInterface.ActiveSelection := Value;
end;

function TProjectApplication.Get_ActiveCell: Cell;
begin
  Result := DefaultInterface.ActiveCell;
end;

procedure TProjectApplication.Set_ActiveCell(const Value: Cell);
begin
  DefaultInterface.ActiveCell := Value;
end;

function TProjectApplication.Get_ActiveProject: Project;
begin
  Result := DefaultInterface.ActiveProject;
end;

procedure TProjectApplication.Set_ActiveProject(const Value: Project);
begin
  DefaultInterface.ActiveProject := Value;
end;

function TProjectApplication.Get_ActiveWindow: Window;
begin
  Result := DefaultInterface.ActiveWindow;
end;

procedure TProjectApplication.Set_ActiveWindow(const Value: Window);
begin
  DefaultInterface.ActiveWindow := Value;
end;

function TProjectApplication.Get_SupportsMultipleDocuments: WordBool;
begin
  Result := DefaultInterface.SupportsMultipleDocuments;
end;

procedure TProjectApplication.Set_SupportsMultipleDocuments(Value: WordBool);
begin
  DefaultInterface.SupportsMultipleDocuments := Value;
end;

function TProjectApplication.Get_SupportsMultipleWindows: WordBool;
begin
  Result := DefaultInterface.SupportsMultipleWindows;
end;

procedure TProjectApplication.Set_SupportsMultipleWindows(Value: WordBool);
begin
  DefaultInterface.SupportsMultipleWindows := Value;
end;

function TProjectApplication.Get_Visible: WordBool;
begin
  Result := DefaultInterface.Visible;
end;

procedure TProjectApplication.Set_Visible(Value: WordBool);
begin
  DefaultInterface.Visible := Value;
end;

function TProjectApplication.Get_PathSeparator: WideString;
begin
  Result := DefaultInterface.PathSeparator;
end;

procedure TProjectApplication.Set_PathSeparator(const Value: WideString);
begin
  DefaultInterface.PathSeparator := Value;
end;

function TProjectApplication.Get_Caption: WideString;
begin
  Result := DefaultInterface.Caption;
end;

procedure TProjectApplication.Set_Caption(const Value: WideString);
begin
  DefaultInterface.Caption := Value;
end;

function TProjectApplication.Get_Name: WideString;
begin
  Result := DefaultInterface.Name;
end;

procedure TProjectApplication.Set_Name(const Value: WideString);
begin
  DefaultInterface.Name := Value;
end;

function TProjectApplication.Get_Path: WideString;
begin
  Result := DefaultInterface.Path;
end;

procedure TProjectApplication.Set_Path(const Value: WideString);
begin
  DefaultInterface.Path := Value;
end;

function TProjectApplication.Get_Version: WideString;
begin
  Result := DefaultInterface.Version;
end;

procedure TProjectApplication.Set_Version(const Value: WideString);
begin
  DefaultInterface.Version := Value;
end;

function TProjectApplication.Get_WindowState: PjWindowState;
begin
  Result := DefaultInterface.WindowState;
end;

procedure TProjectApplication.Set_WindowState(Value: PjWindowState);
begin
  DefaultInterface.WindowState := Value;
end;

function TProjectApplication.Get_Left: Integer;
begin
  Result := DefaultInterface.Left;
end;

procedure TProjectApplication.Set_Left(Value: Integer);
begin
  DefaultInterface.Left := Value;
end;

function TProjectApplication.Get_Top: Integer;
begin
  Result := DefaultInterface.Top;
end;

procedure TProjectApplication.Set_Top(Value: Integer);
begin
  DefaultInterface.Top := Value;
end;

function TProjectApplication.Get_Width: Integer;
begin
  Result := DefaultInterface.Width;
end;

procedure TProjectApplication.Set_Width(Value: Integer);
begin
  DefaultInterface.Width := Value;
end;

function TProjectApplication.Get_Height: Integer;
begin
  Result := DefaultInterface.Height;
end;

procedure TProjectApplication.Set_Height(Value: Integer);
begin
  DefaultInterface.Height := Value;
end;

function TProjectApplication.Get_DateOrder: PjDateOrder;
begin
  Result := DefaultInterface.DateOrder;
end;

procedure TProjectApplication.Set_DateOrder(Value: PjDateOrder);
begin
  DefaultInterface.DateOrder := Value;
end;

function TProjectApplication.Get_DateSeparator: WideString;
begin
  Result := DefaultInterface.DateSeparator;
end;

procedure TProjectApplication.Set_DateSeparator(const Value: WideString);
begin
  DefaultInterface.DateSeparator := Value;
end;

function TProjectApplication.Get_ThousandSeparator: WideString;
begin
  Result := DefaultInterface.ThousandSeparator;
end;

procedure TProjectApplication.Set_ThousandSeparator(const Value: WideString);
begin
  DefaultInterface.ThousandSeparator := Value;
end;

function TProjectApplication.Get_DecimalSeparator: WideString;
begin
  Result := DefaultInterface.DecimalSeparator;
end;

procedure TProjectApplication.Set_DecimalSeparator(const Value: WideString);
begin
  DefaultInterface.DecimalSeparator := Value;
end;

function TProjectApplication.Get_ListSeparator: WideString;
begin
  Result := DefaultInterface.ListSeparator;
end;

procedure TProjectApplication.Set_ListSeparator(const Value: WideString);
begin
  DefaultInterface.ListSeparator := Value;
end;

function TProjectApplication.Get_TimeSeparator: WideString;
begin
  Result := DefaultInterface.TimeSeparator;
end;

procedure TProjectApplication.Set_TimeSeparator(const Value: WideString);
begin
  DefaultInterface.TimeSeparator := Value;
end;

function TProjectApplication.Get_TwelveHourTimeFormat: WordBool;
begin
  Result := DefaultInterface.TwelveHourTimeFormat;
end;

procedure TProjectApplication.Set_TwelveHourTimeFormat(Value: WordBool);
begin
  DefaultInterface.TwelveHourTimeFormat := Value;
end;

function TProjectApplication.Get_AMText: WideString;
begin
  Result := DefaultInterface.AMText;
end;

procedure TProjectApplication.Set_AMText(const Value: WideString);
begin
  DefaultInterface.AMText := Value;
end;

function TProjectApplication.Get_PMText: WideString;
begin
  Result := DefaultInterface.PMText;
end;

procedure TProjectApplication.Set_PMText(const Value: WideString);
begin
  DefaultInterface.PMText := Value;
end;

function TProjectApplication.Get_DefaultView: WideString;
begin
  Result := DefaultInterface.DefaultView;
end;

procedure TProjectApplication.Set_DefaultView(const Value: WideString);
begin
  DefaultInterface.DefaultView := Value;
end;

function TProjectApplication.Get_DisplayStatusBar: WordBool;
begin
  Result := DefaultInterface.DisplayStatusBar;
end;

procedure TProjectApplication.Set_DisplayStatusBar(Value: WordBool);
begin
  DefaultInterface.DisplayStatusBar := Value;
end;

function TProjectApplication.Get_DisplayAlerts: WordBool;
begin
  Result := DefaultInterface.DisplayAlerts;
end;

procedure TProjectApplication.Set_DisplayAlerts(Value: WordBool);
begin
  DefaultInterface.DisplayAlerts := Value;
end;

function TProjectApplication.Get_DisplayEntryBar: WordBool;
begin
  Result := DefaultInterface.DisplayEntryBar;
end;

procedure TProjectApplication.Set_DisplayEntryBar(Value: WordBool);
begin
  DefaultInterface.DisplayEntryBar := Value;
end;

function TProjectApplication.Get_DisplayScrollBars: WordBool;
begin
  Result := DefaultInterface.DisplayScrollBars;
end;

procedure TProjectApplication.Set_DisplayScrollBars(Value: WordBool);
begin
  DefaultInterface.DisplayScrollBars := Value;
end;

function TProjectApplication.Get_DisplayWindowsInTaskbar: WordBool;
begin
  Result := DefaultInterface.DisplayWindowsInTaskbar;
end;

procedure TProjectApplication.Set_DisplayWindowsInTaskbar(Value: WordBool);
begin
  DefaultInterface.DisplayWindowsInTaskbar := Value;
end;

function TProjectApplication.Get_Calculation: PjCalculation;
begin
  Result := DefaultInterface.Calculation;
end;

procedure TProjectApplication.Set_Calculation(Value: PjCalculation);
begin
  DefaultInterface.Calculation := Value;
end;

function TProjectApplication.Get_AutoLevel: WordBool;
begin
  Result := DefaultInterface.AutoLevel;
end;

procedure TProjectApplication.Set_AutoLevel(Value: WordBool);
begin
  DefaultInterface.AutoLevel := Value;
end;

function TProjectApplication.Get_AutoClearLeveling: WordBool;
begin
  Result := DefaultInterface.AutoClearLeveling;
end;

procedure TProjectApplication.Set_AutoClearLeveling(Value: WordBool);
begin
  DefaultInterface.AutoClearLeveling := Value;
end;

function TProjectApplication.Get_LevelWithinSlack: WordBool;
begin
  Result := DefaultInterface.LevelWithinSlack;
end;

procedure TProjectApplication.Set_LevelWithinSlack(Value: WordBool);
begin
  DefaultInterface.LevelWithinSlack := Value;
end;

function TProjectApplication.Get_LevelOrder: PjLevelOrder;
begin
  Result := DefaultInterface.LevelOrder;
end;

procedure TProjectApplication.Set_LevelOrder(Value: PjLevelOrder);
begin
  DefaultInterface.LevelOrder := Value;
end;

function TProjectApplication.Get_LevelPeriodBasis: PjLevelPeriodBasis;
begin
  Result := DefaultInterface.LevelPeriodBasis;
end;

procedure TProjectApplication.Set_LevelPeriodBasis(Value: PjLevelPeriodBasis);
begin
  DefaultInterface.LevelPeriodBasis := Value;
end;

function TProjectApplication.Get_LevelIndividualAssignments: WordBool;
begin
  Result := DefaultInterface.LevelIndividualAssignments;
end;

procedure TProjectApplication.Set_LevelIndividualAssignments(Value: WordBool);
begin
  DefaultInterface.LevelIndividualAssignments := Value;
end;

function TProjectApplication.Get_LevelingCanSplit: WordBool;
begin
  Result := DefaultInterface.LevelingCanSplit;
end;

procedure TProjectApplication.Set_LevelingCanSplit(Value: WordBool);
begin
  DefaultInterface.LevelingCanSplit := Value;
end;

function TProjectApplication.Get_MoveAfterReturn: WordBool;
begin
  Result := DefaultInterface.MoveAfterReturn;
end;

procedure TProjectApplication.Set_MoveAfterReturn(Value: WordBool);
begin
  DefaultInterface.MoveAfterReturn := Value;
end;

function TProjectApplication.Get_DisplayScheduleMessages: WordBool;
begin
  Result := DefaultInterface.DisplayScheduleMessages;
end;

procedure TProjectApplication.Set_DisplayScheduleMessages(Value: WordBool);
begin
  DefaultInterface.DisplayScheduleMessages := Value;
end;

function TProjectApplication.Get_StartWeekOn: PjWeekday;
begin
  Result := DefaultInterface.StartWeekOn;
end;

procedure TProjectApplication.Set_StartWeekOn(Value: PjWeekday);
begin
  DefaultInterface.StartWeekOn := Value;
end;

function TProjectApplication.Get_StartYearIn: PjMonth;
begin
  Result := DefaultInterface.StartYearIn;
end;

procedure TProjectApplication.Set_StartYearIn(Value: PjMonth);
begin
  DefaultInterface.StartYearIn := Value;
end;

function TProjectApplication.Get_CellDragAndDrop: WordBool;
begin
  Result := DefaultInterface.CellDragAndDrop;
end;

procedure TProjectApplication.Set_CellDragAndDrop(Value: WordBool);
begin
  DefaultInterface.CellDragAndDrop := Value;
end;

function TProjectApplication.Get_UserName: WideString;
begin
  Result := DefaultInterface.UserName;
end;

procedure TProjectApplication.Set_UserName(const Value: WideString);
begin
  DefaultInterface.UserName := Value;
end;

function TProjectApplication.Get_DisplayNotesIndicator: WordBool;
begin
  Result := DefaultInterface.DisplayNotesIndicator;
end;

procedure TProjectApplication.Set_DisplayNotesIndicator(Value: WordBool);
begin
  DefaultInterface.DisplayNotesIndicator := Value;
end;

function TProjectApplication.Get_AskToUpdateLinks: WordBool;
begin
  Result := DefaultInterface.AskToUpdateLinks;
end;

procedure TProjectApplication.Set_AskToUpdateLinks(Value: WordBool);
begin
  DefaultInterface.AskToUpdateLinks := Value;
end;

function TProjectApplication.Get_DisplayPlanningWizard: WordBool;
begin
  Result := DefaultInterface.DisplayPlanningWizard;
end;

procedure TProjectApplication.Set_DisplayPlanningWizard(Value: WordBool);
begin
  DefaultInterface.DisplayPlanningWizard := Value;
end;

function TProjectApplication.Get_DisplayWizardUsage: WordBool;
begin
  Result := DefaultInterface.DisplayWizardUsage;
end;

procedure TProjectApplication.Set_DisplayWizardUsage(Value: WordBool);
begin
  DefaultInterface.DisplayWizardUsage := Value;
end;

function TProjectApplication.Get_DisplayWizardErrors: WordBool;
begin
  Result := DefaultInterface.DisplayWizardErrors;
end;

procedure TProjectApplication.Set_DisplayWizardErrors(Value: WordBool);
begin
  DefaultInterface.DisplayWizardErrors := Value;
end;

function TProjectApplication.Get_DisplayWizardScheduling: WordBool;
begin
  Result := DefaultInterface.DisplayWizardScheduling;
end;

procedure TProjectApplication.Set_DisplayWizardScheduling(Value: WordBool);
begin
  DefaultInterface.DisplayWizardScheduling := Value;
end;

function TProjectApplication.Get_ShowTipOfDay: WordBool;
begin
  Result := DefaultInterface.ShowTipOfDay;
end;

procedure TProjectApplication.Set_ShowTipOfDay(Value: WordBool);
begin
  DefaultInterface.ShowTipOfDay := Value;
end;

function TProjectApplication.Get_ShowToolTips: WordBool;
begin
  Result := DefaultInterface.ShowToolTips;
end;

procedure TProjectApplication.Set_ShowToolTips(Value: WordBool);
begin
  DefaultInterface.ShowToolTips := Value;
end;

function TProjectApplication.Get_ShowWelcome: WordBool;
begin
  Result := DefaultInterface.ShowWelcome;
end;

procedure TProjectApplication.Set_ShowWelcome(Value: WordBool);
begin
  DefaultInterface.ShowWelcome := Value;
end;

function TProjectApplication.Get_LoadLastFile: WordBool;
begin
  Result := DefaultInterface.LoadLastFile;
end;

procedure TProjectApplication.Set_LoadLastFile(Value: WordBool);
begin
  DefaultInterface.LoadLastFile := Value;
end;

function TProjectApplication.Get_PromptForSummaryInfo: WordBool;
begin
  Result := DefaultInterface.PromptForSummaryInfo;
end;

procedure TProjectApplication.Set_PromptForSummaryInfo(Value: WordBool);
begin
  DefaultInterface.PromptForSummaryInfo := Value;
end;

function TProjectApplication.Get_DisplayOLEIndicator: WordBool;
begin
  Result := DefaultInterface.DisplayOLEIndicator;
end;

procedure TProjectApplication.Set_DisplayOLEIndicator(Value: WordBool);
begin
  DefaultInterface.DisplayOLEIndicator := Value;
end;

function TProjectApplication.Get_DefaultDateFormat: PjDateFormat;
begin
  Result := DefaultInterface.DefaultDateFormat;
end;

procedure TProjectApplication.Set_DefaultDateFormat(Value: PjDateFormat);
begin
  DefaultInterface.DefaultDateFormat := Value;
end;

function TProjectApplication.Get_DayLeadingZero: WordBool;
begin
  Result := DefaultInterface.DayLeadingZero;
end;

procedure TProjectApplication.Set_DayLeadingZero(Value: WordBool);
begin
  DefaultInterface.DayLeadingZero := Value;
end;

function TProjectApplication.Get_MonthLeadingZero: WordBool;
begin
  Result := DefaultInterface.MonthLeadingZero;
end;

procedure TProjectApplication.Set_MonthLeadingZero(Value: WordBool);
begin
  DefaultInterface.MonthLeadingZero := Value;
end;

function TProjectApplication.Get_TimeLeadingZero: WordBool;
begin
  Result := DefaultInterface.TimeLeadingZero;
end;

procedure TProjectApplication.Set_TimeLeadingZero(Value: WordBool);
begin
  DefaultInterface.TimeLeadingZero := Value;
end;

function TProjectApplication.Get_CopyResourceUsageHeader: WordBool;
begin
  Result := DefaultInterface.CopyResourceUsageHeader;
end;

procedure TProjectApplication.Set_CopyResourceUsageHeader(Value: WordBool);
begin
  DefaultInterface.CopyResourceUsageHeader := Value;
end;

function TProjectApplication.Get_RecentFilesMaximum: Integer;
begin
  Result := DefaultInterface.RecentFilesMaximum;
end;

procedure TProjectApplication.Set_RecentFilesMaximum(Value: Integer);
begin
  DefaultInterface.RecentFilesMaximum := Value;
end;

function TProjectApplication.Get_DisplayRecentFiles: WordBool;
begin
  Result := DefaultInterface.DisplayRecentFiles;
end;

procedure TProjectApplication.Set_DisplayRecentFiles(Value: WordBool);
begin
  DefaultInterface.DisplayRecentFiles := Value;
end;

function TProjectApplication.Get_MacroVirusProtection: WordBool;
begin
  Result := DefaultInterface.MacroVirusProtection;
end;

procedure TProjectApplication.Set_MacroVirusProtection(Value: WordBool);
begin
  DefaultInterface.MacroVirusProtection := Value;
end;

function TProjectApplication.Get_ShowAssignmentUnitsAs: PjAssignmentUnits;
begin
  Result := DefaultInterface.ShowAssignmentUnitsAs;
end;

procedure TProjectApplication.Set_ShowAssignmentUnitsAs(Value: PjAssignmentUnits);
begin
  DefaultInterface.ShowAssignmentUnitsAs := Value;
end;

function TProjectApplication.Get_AutomaticallyFillPhoneticFields: WordBool;
begin
  Result := DefaultInterface.AutomaticallyFillPhoneticFields;
end;

procedure TProjectApplication.Set_AutomaticallyFillPhoneticFields(Value: WordBool);
begin
  DefaultInterface.AutomaticallyFillPhoneticFields := Value;
end;

function TProjectApplication.Get_DefaultAutoFilter: WordBool;
begin
  Result := DefaultInterface.DefaultAutoFilter;
end;

procedure TProjectApplication.Set_DefaultAutoFilter(Value: WordBool);
begin
  DefaultInterface.DefaultAutoFilter := Value;
end;

function TProjectApplication.Get_ShowEstimatedDuration: WordBool;
begin
  Result := DefaultInterface.ShowEstimatedDuration;
end;

procedure TProjectApplication.Set_ShowEstimatedDuration(Value: WordBool);
begin
  DefaultInterface.ShowEstimatedDuration := Value;
end;

function TProjectApplication.Get_NewTasksEstimated: WordBool;
begin
  Result := DefaultInterface.NewTasksEstimated;
end;

procedure TProjectApplication.Set_NewTasksEstimated(Value: WordBool);
begin
  DefaultInterface.NewTasksEstimated := Value;
end;

function TProjectApplication.Get_Assistant: Assistant;
begin
  Result := DefaultInterface.Assistant;
end;

procedure TProjectApplication.Set_Assistant(const Value: Assistant);
begin
  DefaultInterface.Assistant := Value;
end;

function TProjectApplication.Get_DisplayViewBar: WordBool;
begin
  Result := DefaultInterface.DisplayViewBar;
end;

procedure TProjectApplication.Set_DisplayViewBar(Value: WordBool);
begin
  DefaultInterface.DisplayViewBar := Value;
end;

function TProjectApplication.Get_VBE: VBE;
begin
  Result := DefaultInterface.VBE;
end;

procedure TProjectApplication.Set_VBE(const Value: VBE);
begin
  DefaultInterface.VBE := Value;
end;

function TProjectApplication.Get_EnableCancelKey: PjEnableCancelKey;
begin
  Result := DefaultInterface.EnableCancelKey;
end;

procedure TProjectApplication.Set_EnableCancelKey(Value: PjEnableCancelKey);
begin
  DefaultInterface.EnableCancelKey := Value;
end;

function TProjectApplication.Get_UserControl: WordBool;
begin
  Result := DefaultInterface.UserControl;
end;

procedure TProjectApplication.Set_UserControl(Value: WordBool);
begin
  DefaultInterface.UserControl := Value;
end;

function TProjectApplication.Get_UsableWidth: Double;
begin
  Result := DefaultInterface.UsableWidth;
end;

procedure TProjectApplication.Set_UsableWidth(Value: Double);
begin
  DefaultInterface.UsableWidth := Value;
end;

function TProjectApplication.Get_UsableHeight: Double;
begin
  Result := DefaultInterface.UsableHeight;
end;

procedure TProjectApplication.Set_UsableHeight(Value: Double);
begin
  DefaultInterface.UsableHeight := Value;
end;

function TProjectApplication.Get_StatusBar: OleVariant;
begin
  Result := DefaultInterface.StatusBar;
end;

procedure TProjectApplication.Set_StatusBar(Value: OleVariant);
begin
  DefaultInterface.StatusBar := Value;
end;

function TProjectApplication.Get_FileSearch: FileSearch;
begin
  Result := DefaultInterface.FileSearch;
end;

procedure TProjectApplication.Set_FileSearch(const Value: FileSearch);
begin
  DefaultInterface.FileSearch := Value;
end;

function  TProjectApplication.Get_Windows: Windows;
begin
  Result := DefaultInterface.Windows;
end;

function  TProjectApplication.Get_CommandBars: CommandBars;
begin
  Result := DefaultInterface.CommandBars;
end;

function  TProjectApplication.Get_AnswerWizard: AnswerWizard;
begin
  Result := DefaultInterface.AnswerWizard;
end;

function  TProjectApplication.Get_OperatingSystem: WideString;
begin
  Result := DefaultInterface.OperatingSystem;
end;

function  TProjectApplication.Get_FileFormatID(const Name: WideString; UserID: OleVariant;
                                               DatabasePassWord: OleVariant): WideString;
begin
  Result := DefaultInterface.FileFormatID[Name, UserID, DatabasePassWord];
end;

function  TProjectApplication.Get_FileBuildID(const Name: WideString; UserID: OleVariant;
                                              DatabasePassWord: OleVariant): WideString;
begin
  Result := DefaultInterface.FileBuildID[Name, UserID, DatabasePassWord];
end;

function  TProjectApplication.Get_COMAddIns: COMAddIns;
begin
  Result := DefaultInterface.COMAddIns;
end;

procedure TProjectApplication.Quit(SaveChanges: PjSaveType);
begin
  DefaultInterface.Quit(SaveChanges);
end;

function  TProjectApplication.DateAdd(StartDate: OleVariant; Duration: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateAdd(StartDate, Duration, EmptyParam);
end;

function  TProjectApplication.DateAdd(StartDate: OleVariant; Duration: OleVariant;
                                      Calendar: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateAdd(StartDate, Duration, Calendar);
end;

function  TProjectApplication.DateSubtract(FinishDate: OleVariant; Duration: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateSubtract(FinishDate, Duration, EmptyParam);
end;

function  TProjectApplication.DateSubtract(FinishDate: OleVariant; Duration: OleVariant;
                                           Calendar: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateSubtract(FinishDate, Duration, Calendar);
end;

function  TProjectApplication.DateDifference(StartDate: OleVariant; FinishDate: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateDifference(StartDate, FinishDate, EmptyParam);
end;

function  TProjectApplication.DateDifference(StartDate: OleVariant; FinishDate: OleVariant;
                                             Calendar: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateDifference(StartDate, FinishDate, Calendar);
end;

function  TProjectApplication.DurationFormat(Duration: OleVariant): WideString;
begin
  Result := DefaultInterface.DurationFormat(Duration, EmptyParam);
end;

function  TProjectApplication.DurationFormat(Duration: OleVariant; Units: OleVariant): WideString;
begin
  Result := DefaultInterface.DurationFormat(Duration, Units);
end;

function  TProjectApplication.DurationValue(const Duration: WideString): OleVariant;
begin
  Result := DefaultInterface.DurationValue(Duration);
end;

function  TProjectApplication.DateFormat(Date: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateFormat(Date, EmptyParam);
end;

function  TProjectApplication.DateFormat(Date: OleVariant; Format: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateFormat(Date, Format);
end;

procedure TProjectApplication.MailLogon;
begin
  DefaultInterface.MailLogon(EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.MailLogon(Name: OleVariant);
begin
  DefaultInterface.MailLogon(Name, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.MailLogon(Name: OleVariant; Password: OleVariant);
begin
  DefaultInterface.MailLogon(Name, Password, EmptyParam);
end;

procedure TProjectApplication.MailLogon(Name: OleVariant; Password: OleVariant;
                                        DownloadNewMail: OleVariant);
begin
  DefaultInterface.MailLogon(Name, Password, DownloadNewMail);
end;

procedure TProjectApplication.MailLogoff;
begin
  DefaultInterface.MailLogoff;
end;

function  TProjectApplication.MailSession: WideString;
begin
  Result := DefaultInterface.MailSession;
end;

function  TProjectApplication.MailSystem: PjMailSystem;
begin
  Result := DefaultInterface.MailSystem;
end;

function  TProjectApplication.TimescaledData(TaskID: Integer; ResourceID: Integer;
                                             StartDate: OleVariant; EndDate: OleVariant;
                                             Type_: PjTimescaledData; TimeScaleUnit: PjTimescaleUnit): OleVariant;
begin
  Result := DefaultInterface.TimescaledData(TaskID, ResourceID, StartDate, EndDate, Type_,
                                            TimeScaleUnit, EmptyParam);
end;

function  TProjectApplication.TimescaledData(TaskID: Integer; ResourceID: Integer;
                                             StartDate: OleVariant; EndDate: OleVariant;
                                             Type_: PjTimescaledData;
                                             TimeScaleUnit: PjTimescaleUnit; Count: OleVariant): OleVariant;
begin
  Result := DefaultInterface.TimescaledData(TaskID, ResourceID, StartDate, EndDate, Type_,
                                            TimeScaleUnit, Count);
end;

function  TProjectApplication.CustomFieldGetName(FieldID: PjCustomField): WideString;
begin
  Result := DefaultInterface.CustomFieldGetName(FieldID);
end;

procedure TProjectApplication.Run(const Name: WideString);
begin
  DefaultInterface.Run(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                                  Arg24: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                                  Arg24: OleVariant; Arg25: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant;
                                  Arg27: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, Arg27, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant;
                                  Arg27: OleVariant; Arg28: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, EmptyParam, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant;
                                  Arg27: OleVariant; Arg28: OleVariant; Arg29: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, EmptyParam);
end;

procedure TProjectApplication.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant;
                                  Arg3: OleVariant; Arg4: OleVariant; Arg5: OleVariant;
                                  Arg6: OleVariant; Arg7: OleVariant; Arg8: OleVariant;
                                  Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                                  Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant;
                                  Arg15: OleVariant; Arg16: OleVariant; Arg17: OleVariant;
                                  Arg18: OleVariant; Arg19: OleVariant; Arg20: OleVariant;
                                  Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                                  Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant;
                                  Arg27: OleVariant; Arg28: OleVariant; Arg29: OleVariant;
                                  Arg30: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30);
end;

procedure TProjectApplication.ActivateMicrosoftApp(Index: PjMSApplication);
begin
  DefaultInterface.ActivateMicrosoftApp(Index);
end;

function  TProjectApplication.BoxGetXPosition(TaskID: Integer): Integer;
begin
  Result := DefaultInterface.BoxGetXPosition(TaskID, EmptyParam);
end;

function  TProjectApplication.BoxGetXPosition(TaskID: Integer; ProjectName: OleVariant): Integer;
begin
  Result := DefaultInterface.BoxGetXPosition(TaskID, ProjectName);
end;

function  TProjectApplication.BoxGetYPosition(TaskID: Integer): Integer;
begin
  Result := DefaultInterface.BoxGetYPosition(TaskID, EmptyParam);
end;

function  TProjectApplication.BoxGetYPosition(TaskID: Integer; ProjectName: OleVariant): Integer;
begin
  Result := DefaultInterface.BoxGetYPosition(TaskID, ProjectName);
end;

function  TProjectApplication.CustomFieldGetFormula(FieldID: PjCustomField): WideString;
begin
  Result := DefaultInterface.CustomFieldGetFormula(FieldID);
end;

function  TProjectApplication.CustomFieldValueListGetItem(FieldID: PjCustomField;
                                                          Item: PjValueListItem; Index: Integer): WideString;
begin
  Result := DefaultInterface.CustomFieldValueListGetItem(FieldID, Item, Index);
end;

function  TProjectApplication.Message(const Message: WideString; Type_: PjMessageType): WordBool;
begin
  Result := DefaultInterface.Message(Message, Type_, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Message(const Message: WideString; Type_: PjMessageType;
                                      YesText: OleVariant): WordBool;
begin
  Result := DefaultInterface.Message(Message, Type_, YesText, EmptyParam);
end;

function  TProjectApplication.Message(const Message: WideString; Type_: PjMessageType;
                                      YesText: OleVariant; NoText: OleVariant): WordBool;
begin
  Result := DefaultInterface.Message(Message, Type_, YesText, NoText);
end;

function  TProjectApplication.Alerts: WordBool;
begin
  Result := DefaultInterface.Alerts(EmptyParam);
end;

function  TProjectApplication.Alerts(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.Alerts(Show);
end;

function  TProjectApplication.FileNew: WordBool;
begin
  Result := DefaultInterface.FileNew(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FileNew(SummaryInfo: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileNew(SummaryInfo, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FileNew(SummaryInfo: OleVariant; Template: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileNew(SummaryInfo, Template, EmptyParam);
end;

function  TProjectApplication.FileNew(SummaryInfo: OleVariant; Template: OleVariant;
                                      FileNewDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileNew(SummaryInfo, Template, FileNewDialog);
end;

function  TProjectApplication.FileProperties: WordBool;
begin
  Result := DefaultInterface.FileProperties;
end;

function  TProjectApplication.FileOpen(Name: OleVariant; ReadOnly: OleVariant; Merge: OleVariant;
                                       TaskInformation: OleVariant; Table: OleVariant;
                                       Sheet: OleVariant; NoAuto: OleVariant; UserID: OleVariant;
                                       DatabasePassWord: OleVariant; FormatID: OleVariant;
                                       Map: OleVariant; openPool: PjPoolOpen; Password: OleVariant;
                                       WriteResPassword: OleVariant;
                                       IgnoreReadOnlyRecommended: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileOpen(Name, ReadOnly, Merge, TaskInformation, Table, Sheet, NoAuto,
                                      UserID, DatabasePassWord, FormatID, Map, openPool, Password,
                                      WriteResPassword, IgnoreReadOnlyRecommended);
end;

function  TProjectApplication.Zoom: WordBool;
begin
  Result := DefaultInterface.Zoom;
end;

function  TProjectApplication.ZoomTimescale: WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ZoomTimescale(Duration: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(Duration, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ZoomTimescale(Duration: OleVariant; Entire: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(Duration, Entire, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ZoomTimescale(Duration: OleVariant; Entire: OleVariant;
                                            Selection: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(Duration, Entire, Selection, EmptyParam);
end;

function  TProjectApplication.ZoomTimescale(Duration: OleVariant; Entire: OleVariant;
                                            Selection: OleVariant; Reset: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(Duration, Entire, Selection, Reset);
end;

function  TProjectApplication.BoxZoom: WordBool;
begin
  Result := DefaultInterface.BoxZoom(EmptyParam, EmptyParam);
end;

function  TProjectApplication.BoxZoom(Percent: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxZoom(Percent, EmptyParam);
end;

function  TProjectApplication.BoxZoom(Percent: OleVariant; Entire: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxZoom(Percent, Entire);
end;

function  TProjectApplication.FileClose(Save: PjSaveType): WordBool;
begin
  Result := DefaultInterface.FileClose(Save, EmptyParam);
end;

function  TProjectApplication.FileClose(Save: PjSaveType; NoAuto: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileClose(Save, NoAuto);
end;

function  TProjectApplication.FileCloseAll(Save: PjSaveType): WordBool;
begin
  Result := DefaultInterface.FileCloseAll(Save);
end;

function  TProjectApplication.ResourceSharing: WordBool;
begin
  Result := DefaultInterface.ResourceSharing(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceSharing(Share: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharing(Share, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceSharing(Share: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharing(Share, Name, EmptyParam);
end;

function  TProjectApplication.ResourceSharing(Share: OleVariant; Name: OleVariant; Pool: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharing(Share, Name, Pool);
end;

function  TProjectApplication.FileSave: WordBool;
begin
  Result := DefaultInterface.FileSave;
end;

function  TProjectApplication.FileSaveAs(Name: OleVariant; Format: PjFileFormat;
                                         Backup: OleVariant; ReadOnly: OleVariant;
                                         TaskInformation: OleVariant; Filtered: OleVariant;
                                         Table: OleVariant; UserID: OleVariant;
                                         DatabasePassWord: OleVariant; FormatID: OleVariant;
                                         Map: OleVariant; Password: OleVariant;
                                         WriteResPassword: OleVariant; ClearBaseline: OleVariant;
                                         ClearActuals: OleVariant; ClearResourceRates: OleVariant;
                                         ClearFixedCosts: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileSaveAs(Name, Format, Backup, ReadOnly, TaskInformation, Filtered,
                                        Table, UserID, DatabasePassWord, FormatID, Map, Password,
                                        WriteResPassword, ClearBaseline, ClearActuals,
                                        ClearResourceRates, ClearFixedCosts);
end;

function  TProjectApplication.FileSaveWorkspace: WordBool;
begin
  Result := DefaultInterface.FileSaveWorkspace(EmptyParam);
end;

function  TProjectApplication.FileSaveWorkspace(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileSaveWorkspace(Name);
end;

function  TProjectApplication.FilePrint: WordBool;
begin
  Result := DefaultInterface.FilePrint(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant;
                                        PageBreaks: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant;
                                        PageBreaks: OleVariant; Draft: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant;
                                        PageBreaks: OleVariant; Draft: OleVariant;
                                        Copies: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant;
                                        PageBreaks: OleVariant; Draft: OleVariant;
                                        Copies: OleVariant; FromDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant;
                                        PageBreaks: OleVariant; Draft: OleVariant;
                                        Copies: OleVariant; FromDate: OleVariant; ToDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       ToDate, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant;
                                        PageBreaks: OleVariant; Draft: OleVariant;
                                        Copies: OleVariant; FromDate: OleVariant;
                                        ToDate: OleVariant; OnePageWide: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       ToDate, OnePageWide, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant;
                                        PageBreaks: OleVariant; Draft: OleVariant;
                                        Copies: OleVariant; FromDate: OleVariant;
                                        ToDate: OleVariant; OnePageWide: OleVariant;
                                        Preview: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       ToDate, OnePageWide, Preview, EmptyParam);
end;

function  TProjectApplication.FilePrint(FromPage: OleVariant; ToPage: OleVariant;
                                        PageBreaks: OleVariant; Draft: OleVariant;
                                        Copies: OleVariant; FromDate: OleVariant;
                                        ToDate: OleVariant; OnePageWide: OleVariant;
                                        Preview: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       ToDate, OnePageWide, Preview, Color);
end;

function  TProjectApplication.ReportPrint: WordBool;
begin
  Result := DefaultInterface.ReportPrint(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant;
                                          ToPage: OleVariant; PageBreaks: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant;
                                          ToPage: OleVariant; PageBreaks: OleVariant;
                                          Draft: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant;
                                          ToPage: OleVariant; PageBreaks: OleVariant;
                                          Draft: OleVariant; Copies: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant;
                                          ToPage: OleVariant; PageBreaks: OleVariant;
                                          Draft: OleVariant; Copies: OleVariant;
                                          FromDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         FromDate, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant;
                                          ToPage: OleVariant; PageBreaks: OleVariant;
                                          Draft: OleVariant; Copies: OleVariant;
                                          FromDate: OleVariant; ToDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         FromDate, ToDate, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant;
                                          ToPage: OleVariant; PageBreaks: OleVariant;
                                          Draft: OleVariant; Copies: OleVariant;
                                          FromDate: OleVariant; ToDate: OleVariant;
                                          Preview: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         FromDate, ToDate, Preview, EmptyParam);
end;

function  TProjectApplication.ReportPrint(Name: OleVariant; FromPage: OleVariant;
                                          ToPage: OleVariant; PageBreaks: OleVariant;
                                          Draft: OleVariant; Copies: OleVariant;
                                          FromDate: OleVariant; ToDate: OleVariant;
                                          Preview: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         FromDate, ToDate, Preview, Color);
end;

function  TProjectApplication.FilePrintPreview: WordBool;
begin
  Result := DefaultInterface.FilePrintPreview;
end;

function  TProjectApplication.ReportPrintPreview: WordBool;
begin
  Result := DefaultInterface.ReportPrintPreview(EmptyParam);
end;

function  TProjectApplication.ReportPrintPreview(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrintPreview(Name);
end;

function  TProjectApplication.FilePrintSetup: WordBool;
begin
  Result := DefaultInterface.FilePrintSetup(EmptyParam);
end;

function  TProjectApplication.FilePrintSetup(Printer: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrintSetup(Printer);
end;

function  TProjectApplication.FilePageSetup: WordBool;
begin
  Result := DefaultInterface.FilePageSetup(EmptyParam);
end;

function  TProjectApplication.FilePageSetup(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetup(Name);
end;

function  TProjectApplication.FilePageSetupPage(Name: OleVariant; Portrait: OleVariant;
                                                PercentScale: OleVariant; PagesTall: OleVariant;
                                                PagesWide: OleVariant; PaperSize: PjPaperSize;
                                                FirstPageNumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupPage(Name, Portrait, PercentScale, PagesTall, PagesWide,
                                               PaperSize, FirstPageNumber);
end;

function  TProjectApplication.FilePageSetupMargins: WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupMargins(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupMargins(Name: OleVariant; Top: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.FilePageSetupMargins(Name: OleVariant; Top: OleVariant;
                                                   Bottom: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, Bottom, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.FilePageSetupMargins(Name: OleVariant; Top: OleVariant;
                                                   Bottom: OleVariant; Left: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, Bottom, Left, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupMargins(Name: OleVariant; Top: OleVariant;
                                                   Bottom: OleVariant; Left: OleVariant;
                                                   Right: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, Bottom, Left, Right, EmptyParam);
end;

function  TProjectApplication.FilePageSetupMargins(Name: OleVariant; Top: OleVariant;
                                                   Bottom: OleVariant; Left: OleVariant;
                                                   Right: OleVariant; Borders: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, Bottom, Left, Right, Borders);
end;

function  TProjectApplication.FilePageSetupHeader(Name: OleVariant; Alignment: PjAlignment;
                                                  Text: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupHeader(Name, Alignment, Text);
end;

function  TProjectApplication.FilePageSetupFooter(Name: OleVariant; Alignment: PjAlignment;
                                                  Text: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupFooter(Name, Alignment, Text);
end;

function  TProjectApplication.FilePageSetupLegend(Name: OleVariant; TextWidth: OleVariant;
                                                  LegendOn: OleVariant; Alignment: PjAlignment;
                                                  Text: OleVariant; LabelFontName: OleVariant;
                                                  LabelFontSize: OleVariant;
                                                  LabelFontBold: OleVariant;
                                                  LabelFontItalic: OleVariant;
                                                  LabelFontUnderline: OleVariant;
                                                  LabelFontColor: PjColor): WordBool;
begin
  Result := DefaultInterface.FilePageSetupLegend(Name, TextWidth, LegendOn, Alignment, Text,
                                                 LabelFontName, LabelFontSize, LabelFontBold,
                                                 LabelFontItalic, LabelFontUnderline, LabelFontColor);
end;

function  TProjectApplication.FilePageSetupView: WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupView(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                                RepeatColumns: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, RepeatColumns, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                                RepeatColumns: OleVariant; PrintNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, RepeatColumns, PrintNotes,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                                RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                                PrintBlankPages: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, RepeatColumns, PrintNotes,
                                               PrintBlankPages, EmptyParam);
end;

function  TProjectApplication.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                                RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                                PrintBlankPages: OleVariant;
                                                BestPageFitTimescale: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, RepeatColumns, PrintNotes,
                                               PrintBlankPages, BestPageFitTimescale);
end;

function  TProjectApplication.FilePageSetupCalendar: WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant;
                                                    ScreenWeekHeight: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant;
                                                    ScreenWeekHeight: OleVariant;
                                                    OnlyDaysInMonth: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant;
                                                    ScreenWeekHeight: OleVariant;
                                                    OnlyDaysInMonth: OleVariant;
                                                    OnlyWeeksInMonth: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant;
                                                    ScreenWeekHeight: OleVariant;
                                                    OnlyDaysInMonth: OleVariant;
                                                    OnlyWeeksInMonth: OleVariant;
                                                    MonthPreviews: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant;
                                                    ScreenWeekHeight: OleVariant;
                                                    OnlyDaysInMonth: OleVariant;
                                                    OnlyWeeksInMonth: OleVariant;
                                                    MonthPreviews: OleVariant;
                                                    MonthTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, MonthTitle,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant;
                                                    ScreenWeekHeight: OleVariant;
                                                    OnlyDaysInMonth: OleVariant;
                                                    OnlyWeeksInMonth: OleVariant;
                                                    MonthPreviews: OleVariant;
                                                    MonthTitle: OleVariant;
                                                    AdditionalTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, MonthTitle,
                                                   AdditionalTasks, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant;
                                                    ScreenWeekHeight: OleVariant;
                                                    OnlyDaysInMonth: OleVariant;
                                                    OnlyWeeksInMonth: OleVariant;
                                                    MonthPreviews: OleVariant;
                                                    MonthTitle: OleVariant;
                                                    AdditionalTasks: OleVariant;
                                                    GroupAdditionalTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, MonthTitle,
                                                   AdditionalTasks, GroupAdditionalTasks, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                                    WeeksPerPage: OleVariant;
                                                    ScreenWeekHeight: OleVariant;
                                                    OnlyDaysInMonth: OleVariant;
                                                    OnlyWeeksInMonth: OleVariant;
                                                    MonthPreviews: OleVariant;
                                                    MonthTitle: OleVariant;
                                                    AdditionalTasks: OleVariant;
                                                    GroupAdditionalTasks: OleVariant;
                                                    PrintNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, MonthTitle,
                                                   AdditionalTasks, GroupAdditionalTasks, PrintNotes);
end;

function  TProjectApplication.FilePageSetupCalendarText: WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendarText(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant;
                                                        Font: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant;
                                                        Font: OleVariant; Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant;
                                                        Font: OleVariant; Size: OleVariant;
                                                        Bold: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, Bold, EmptyParam,
                                                       EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant;
                                                        Font: OleVariant; Size: OleVariant;
                                                        Bold: OleVariant; Italic: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, Bold, Italic,
                                                       EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant;
                                                        Font: OleVariant; Size: OleVariant;
                                                        Bold: OleVariant; Italic: OleVariant;
                                                        Underline: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, Bold, Italic,
                                                       Underline, EmptyParam);
end;

function  TProjectApplication.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant;
                                                        Font: OleVariant; Size: OleVariant;
                                                        Bold: OleVariant; Italic: OleVariant;
                                                        Underline: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, Bold, Italic,
                                                       Underline, Color);
end;

function  TProjectApplication.MailOpen: WordBool;
begin
  Result := DefaultInterface.MailOpen(EmptyParam);
end;

function  TProjectApplication.MailOpen(Any: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailOpen(Any);
end;

function  TProjectApplication.MailSend: WordBool;
begin
  Result := DefaultInterface.MailSend(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant;
                                       Body: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant;
                                       Body: OleVariant; Enclosures: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant;
                                       Body: OleVariant; Enclosures: OleVariant;
                                       IncludeDocument: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant;
                                       Body: OleVariant; Enclosures: OleVariant;
                                       IncludeDocument: OleVariant; ReturnReceipt: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant;
                                       Body: OleVariant; Enclosures: OleVariant;
                                       IncludeDocument: OleVariant; ReturnReceipt: OleVariant;
                                       Bcc: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, Bcc, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant;
                                       Body: OleVariant; Enclosures: OleVariant;
                                       IncludeDocument: OleVariant; ReturnReceipt: OleVariant;
                                       Bcc: OleVariant; Urgent: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, Bcc, Urgent, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant;
                                       Body: OleVariant; Enclosures: OleVariant;
                                       IncludeDocument: OleVariant; ReturnReceipt: OleVariant;
                                       Bcc: OleVariant; Urgent: OleVariant; SaveCopy: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, Bcc, Urgent, SaveCopy, EmptyParam);
end;

function  TProjectApplication.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant;
                                       Body: OleVariant; Enclosures: OleVariant;
                                       IncludeDocument: OleVariant; ReturnReceipt: OleVariant;
                                       Bcc: OleVariant; Urgent: OleVariant; SaveCopy: OleVariant;
                                       AddRecipient: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, Bcc, Urgent, SaveCopy, AddRecipient);
end;

function  TProjectApplication.MailSendScheduleNote: WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendScheduleNote(Manager: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                                   TaskContacts: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                                   TaskContacts: OleVariant; Selection: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                                   TaskContacts: OleVariant; Selection: OleVariant;
                                                   IncludeDocument: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  IncludeDocument, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                                   TaskContacts: OleVariant; Selection: OleVariant;
                                                   IncludeDocument: OleVariant;
                                                   IncludePicture: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  IncludeDocument, IncludePicture, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                                   TaskContacts: OleVariant; Selection: OleVariant;
                                                   IncludeDocument: OleVariant;
                                                   IncludePicture: OleVariant; Body: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  IncludeDocument, IncludePicture, Body, EmptyParam);
end;

function  TProjectApplication.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                                   TaskContacts: OleVariant; Selection: OleVariant;
                                                   IncludeDocument: OleVariant;
                                                   IncludePicture: OleVariant; Body: OleVariant;
                                                   Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  IncludeDocument, IncludePicture, Body, Subject);
end;

function  TProjectApplication.MailPostDocument: WordBool;
begin
  Result := DefaultInterface.MailPostDocument;
end;

function  TProjectApplication.ODBCManageDataSources: WordBool;
begin
  Result := DefaultInterface.ODBCManageDataSources;
end;

function  TProjectApplication.ODBCCreateDataSource: WordBool;
begin
  Result := DefaultInterface.ODBCCreateDataSource;
end;

function  TProjectApplication.MailRoutingSlip: WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailRoutingSlip(To_: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailRoutingSlip(To_: OleVariant; Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailRoutingSlip(To_: OleVariant; Subject: OleVariant;
                                              Body: OleVariant; AllAtOnce: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailRoutingSlip(To_: OleVariant; Subject: OleVariant;
                                              Body: OleVariant; AllAtOnce: OleVariant;
                                              ReturnWhenDone: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, ReturnWhenDone,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailRoutingSlip(To_: OleVariant; Subject: OleVariant;
                                              Body: OleVariant; AllAtOnce: OleVariant;
                                              ReturnWhenDone: OleVariant; TrackStatus: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, ReturnWhenDone,
                                             TrackStatus, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailRoutingSlip(To_: OleVariant; Subject: OleVariant;
                                              Body: OleVariant; AllAtOnce: OleVariant;
                                              ReturnWhenDone: OleVariant; TrackStatus: OleVariant;
                                              Clear: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, ReturnWhenDone,
                                             TrackStatus, Clear, EmptyParam);
end;

function  TProjectApplication.MailRoutingSlip(To_: OleVariant; Subject: OleVariant;
                                              Body: OleVariant; AllAtOnce: OleVariant;
                                              ReturnWhenDone: OleVariant; TrackStatus: OleVariant;
                                              Clear: OleVariant; SendNow: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, ReturnWhenDone,
                                             TrackStatus, Clear, SendNow);
end;

function  TProjectApplication.FileLoadLast: WordBool;
begin
  Result := DefaultInterface.FileLoadLast(EmptyParam);
end;

function  TProjectApplication.FileLoadLast(Number: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileLoadLast(Number);
end;

function  TProjectApplication.FileExit(Save: PjSaveType): WordBool;
begin
  Result := DefaultInterface.FileExit(Save);
end;

function  TProjectApplication.MenuBars: WordBool;
begin
  Result := DefaultInterface.MenuBars;
end;

function  TProjectApplication.MenuBarEdit: WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MenuBarEdit(Copy: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(Copy, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MenuBarEdit(Copy: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(Copy, Create, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(Copy, Create, Name, EmptyParam);
end;

function  TProjectApplication.MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant;
                                          NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(Copy, Create, Name, NewName);
end;

function  TProjectApplication.MenuBarApply(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.MenuBarApply(Name, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MenuBarApply(const Name: WideString; Default: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarApply(Name, Default, EmptyParam);
end;

function  TProjectApplication.MenuBarApply(const Name: WideString; Default: OleVariant;
                                           NoFiles: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarApply(Name, Default, NoFiles);
end;

function  TProjectApplication.EditCut: WordBool;
begin
  Result := DefaultInterface.EditCut;
end;

function  TProjectApplication.EditCopy: WordBool;
begin
  Result := DefaultInterface.EditCopy;
end;

function  TProjectApplication.EditCopyPicture(Object_: OleVariant; ForPrinter: OleVariant;
                                              SelectedRows: OleVariant; FromDate: OleVariant;
                                              ToDate: OleVariant; FileName: OleVariant;
                                              ScaleOption: PjCopyPictureScaleOption): WordBool;
begin
  Result := DefaultInterface.EditCopyPicture(Object_, ForPrinter, SelectedRows, FromDate, ToDate,
                                             FileName, ScaleOption);
end;

function  TProjectApplication.EditPaste: WordBool;
begin
  Result := DefaultInterface.EditPaste;
end;

function  TProjectApplication.EditPasteSpecial: WordBool;
begin
  Result := DefaultInterface.EditPasteSpecial(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditPasteSpecial(Link: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditPasteSpecial(Link, EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditPasteSpecial(Link: OleVariant; Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditPasteSpecial(Link, Type_, EmptyParam);
end;

function  TProjectApplication.EditPasteSpecial(Link: OleVariant; Type_: OleVariant;
                                               DisplayAsIcon: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditPasteSpecial(Link, Type_, DisplayAsIcon);
end;

function  TProjectApplication.EditClearFormats: WordBool;
begin
  Result := DefaultInterface.EditClearFormats;
end;

function  TProjectApplication.EditClear: WordBool;
begin
  Result := DefaultInterface.EditClear(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditClear(Contents: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditClear(Contents, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditClear(Contents: OleVariant; Formats: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditClear(Contents, Formats, EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditClear(Contents, Formats, Notes, EmptyParam);
end;

function  TProjectApplication.EditClear(Contents: OleVariant; Formats: OleVariant;
                                        Notes: OleVariant; Hyperlinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditClear(Contents, Formats, Notes, Hyperlinks);
end;

function  TProjectApplication.RowClear: WordBool;
begin
  Result := DefaultInterface.RowClear;
end;

function  TProjectApplication.DDEPasteLink: WordBool;
begin
  Result := DefaultInterface.DDEPasteLink;
end;

function  TProjectApplication.EditDelete: WordBool;
begin
  Result := DefaultInterface.EditDelete;
end;

function  TProjectApplication.ColumnDelete: WordBool;
begin
  Result := DefaultInterface.ColumnDelete;
end;

function  TProjectApplication.RowDelete: WordBool;
begin
  Result := DefaultInterface.RowDelete;
end;

function  TProjectApplication.ObjectVerb: WordBool;
begin
  Result := DefaultInterface.ObjectVerb(EmptyParam);
end;

function  TProjectApplication.ObjectVerb(Verb: OleVariant): WordBool;
begin
  Result := DefaultInterface.ObjectVerb(Verb);
end;

function  TProjectApplication.ObjectLinks: WordBool;
begin
  Result := DefaultInterface.ObjectLinks;
end;

function  TProjectApplication.ObjectChangeIcon: WordBool;
begin
  Result := DefaultInterface.ObjectChangeIcon;
end;

function  TProjectApplication.ObjectConvert: WordBool;
begin
  Result := DefaultInterface.ObjectConvert;
end;

function  TProjectApplication.EditInsert: WordBool;
begin
  Result := DefaultInterface.EditInsert;
end;

function  TProjectApplication.ColumnInsert: WordBool;
begin
  Result := DefaultInterface.ColumnInsert;
end;

function  TProjectApplication.RowInsert: WordBool;
begin
  Result := DefaultInterface.RowInsert;
end;

function  TProjectApplication.LinkTasks: WordBool;
begin
  Result := DefaultInterface.LinkTasks;
end;

function  TProjectApplication.LinkTasksEdit(From: Integer; To_: Integer): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant;
                                            Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, Type_, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant;
                                            Type_: OleVariant; Lag: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, Type_, Lag, EmptyParam, EmptyParam);
end;

function  TProjectApplication.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant;
                                            Type_: OleVariant; Lag: OleVariant;
                                            PredecessorProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, Type_, Lag, PredecessorProjectName,
                                           EmptyParam);
end;

function  TProjectApplication.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant;
                                            Type_: OleVariant; Lag: OleVariant;
                                            PredecessorProjectName: OleVariant;
                                            SuccessorProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, Type_, Lag, PredecessorProjectName,
                                           SuccessorProjectName);
end;

function  TProjectApplication.UnlinkTasks: WordBool;
begin
  Result := DefaultInterface.UnlinkTasks;
end;

function  TProjectApplication.ResourceAssignment(Resources: OleVariant;
                                                 Operation: PjResAssignOperation; With_: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceAssignment(Resources, Operation, With_);
end;

function  TProjectApplication.EditGoTo: WordBool;
begin
  Result := DefaultInterface.EditGoTo(EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditGoTo(ID: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditGoTo(ID, EmptyParam);
end;

function  TProjectApplication.EditGoTo(ID: OleVariant; Date: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditGoTo(ID, Date);
end;

function  TProjectApplication.GotoNextOverAllocation: WordBool;
begin
  Result := DefaultInterface.GotoNextOverAllocation;
end;

function  TProjectApplication.InsertNotes: WordBool;
begin
  Result := DefaultInterface.InsertNotes;
end;

function  TProjectApplication.Find: WordBool;
begin
  Result := DefaultInterface.Find(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Find(Field: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Find(Field: OleVariant; Test: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, Test, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Find(Field: OleVariant; Test: OleVariant; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, Test, Value, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Find(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                                   Next: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, Test, Value, Next, EmptyParam);
end;

function  TProjectApplication.Find(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                                   Next: OleVariant; MatchCase: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, Test, Value, Next, MatchCase);
end;

function  TProjectApplication.Replace: WordBool;
begin
  Result := DefaultInterface.Replace(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam);
end;

function  TProjectApplication.Replace(Field: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam);
end;

function  TProjectApplication.Replace(Field: OleVariant; Test: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                                      Replacement: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, Replacement, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                                      Replacement: OleVariant; ReplaceAll: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, Replacement, ReplaceAll, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                                      Replacement: OleVariant; ReplaceAll: OleVariant;
                                      Next: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, Replacement, ReplaceAll, Next, EmptyParam);
end;

function  TProjectApplication.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                                      Replacement: OleVariant; ReplaceAll: OleVariant;
                                      Next: OleVariant; MatchCase: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, Replacement, ReplaceAll, Next, MatchCase);
end;

function  TProjectApplication.SelectAll: WordBool;
begin
  Result := DefaultInterface.SelectAll;
end;

function  TProjectApplication.ObjectInsert: WordBool;
begin
  Result := DefaultInterface.ObjectInsert;
end;

function  TProjectApplication.SubscribeTo(Edition: OleVariant; Format: PjSubscribeFormat): WordBool;
begin
  Result := DefaultInterface.SubscribeTo(Edition, Format);
end;

function  TProjectApplication.SubscriberOptions: WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.SubscriberOptions(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.SubscriberOptions(Name: OleVariant; IsTask: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TProjectApplication.SubscriberOptions(Name: OleVariant; IsTask: OleVariant;
                                                UniqueID: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, UniqueID, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TProjectApplication.SubscriberOptions(Name: OleVariant; IsTask: OleVariant;
                                                UniqueID: OleVariant; Field: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, UniqueID, Field, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SubscriberOptions(Name: OleVariant; IsTask: OleVariant;
                                                UniqueID: OleVariant; Field: OleVariant;
                                                Automatically: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, UniqueID, Field, Automatically,
                                               EmptyParam);
end;

function  TProjectApplication.SubscriberOptions(Name: OleVariant; IsTask: OleVariant;
                                                UniqueID: OleVariant; Field: OleVariant;
                                                Automatically: OleVariant; Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, UniqueID, Field, Automatically, Action);
end;

function  TProjectApplication.CreatePublisher: WordBool;
begin
  Result := DefaultInterface.CreatePublisher(EmptyParam, EmptyParam);
end;

function  TProjectApplication.CreatePublisher(Edition: OleVariant): WordBool;
begin
  Result := DefaultInterface.CreatePublisher(Edition, EmptyParam);
end;

function  TProjectApplication.CreatePublisher(Edition: OleVariant; Contains: OleVariant): WordBool;
begin
  Result := DefaultInterface.CreatePublisher(Edition, Contains);
end;

function  TProjectApplication.PublisherOptions: WordBool;
begin
  Result := DefaultInterface.PublisherOptions(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PublisherOptions(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.PublisherOptions(Name: OleVariant; View: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.PublisherOptions(Name: OleVariant; View: OleVariant;
                                               IsTask: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.PublisherOptions(Name: OleVariant; View: OleVariant;
                                               IsTask: OleVariant; UniqueID: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, UniqueID, EmptyParam, EmptyParam,
                                              EmptyParam);
end;

function  TProjectApplication.PublisherOptions(Name: OleVariant; View: OleVariant;
                                               IsTask: OleVariant; UniqueID: OleVariant;
                                               Field: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, UniqueID, Field, EmptyParam,
                                              EmptyParam);
end;

function  TProjectApplication.PublisherOptions(Name: OleVariant; View: OleVariant;
                                               IsTask: OleVariant; UniqueID: OleVariant;
                                               Field: OleVariant; OnSave: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, UniqueID, Field, OnSave,
                                              EmptyParam);
end;

function  TProjectApplication.PublisherOptions(Name: OleVariant; View: OleVariant;
                                               IsTask: OleVariant; UniqueID: OleVariant;
                                               Field: OleVariant; OnSave: OleVariant;
                                               Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, UniqueID, Field, OnSave, Action);
end;

function  TProjectApplication.EditionStopAll: WordBool;
begin
  Result := DefaultInterface.EditionStopAll(EmptyParam);
end;

function  TProjectApplication.EditionStopAll(Stop: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditionStopAll(Stop);
end;

function  TProjectApplication.ClipboardShow: WordBool;
begin
  Result := DefaultInterface.ClipboardShow;
end;

function  TProjectApplication.ViewApply: WordBool;
begin
  Result := DefaultInterface.ViewApply(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewApply(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewApply(Name, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewApply(Name: OleVariant; SinglePane: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewApply(Name, SinglePane, EmptyParam);
end;

function  TProjectApplication.ViewApply(Name: OleVariant; SinglePane: OleVariant; Toggle: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewApply(Name, SinglePane, Toggle);
end;

function  TProjectApplication.ViewEditSingle: WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant; Create: OleVariant;
                                             NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant; Create: OleVariant;
                                             NewName: OleVariant; Screen: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant; Create: OleVariant;
                                             NewName: OleVariant; Screen: OleVariant;
                                             ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant; Create: OleVariant;
                                             NewName: OleVariant; Screen: OleVariant;
                                             ShowInMenu: OleVariant; HighlightFilter: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu,
                                            HighlightFilter, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant; Create: OleVariant;
                                             NewName: OleVariant; Screen: OleVariant;
                                             ShowInMenu: OleVariant; HighlightFilter: OleVariant;
                                             Table: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu,
                                            HighlightFilter, Table, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant; Create: OleVariant;
                                             NewName: OleVariant; Screen: OleVariant;
                                             ShowInMenu: OleVariant; HighlightFilter: OleVariant;
                                             Table: OleVariant; Filter: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu,
                                            HighlightFilter, Table, Filter, EmptyParam);
end;

function  TProjectApplication.ViewEditSingle(Name: OleVariant; Create: OleVariant;
                                             NewName: OleVariant; Screen: OleVariant;
                                             ShowInMenu: OleVariant; HighlightFilter: OleVariant;
                                             Table: OleVariant; Filter: OleVariant;
                                             Group: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu,
                                            HighlightFilter, Table, Filter, Group);
end;

function  TProjectApplication.ViewEditCombination: WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditCombination(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TProjectApplication.ViewEditCombination(Name: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam);
end;

function  TProjectApplication.ViewEditCombination(Name: OleVariant; Create: OleVariant;
                                                  NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, NewName, EmptyParam, EmptyParam,
                                                 EmptyParam);
end;

function  TProjectApplication.ViewEditCombination(Name: OleVariant; Create: OleVariant;
                                                  NewName: OleVariant; TopView: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, NewName, TopView, EmptyParam,
                                                 EmptyParam);
end;

function  TProjectApplication.ViewEditCombination(Name: OleVariant; Create: OleVariant;
                                                  NewName: OleVariant; TopView: OleVariant;
                                                  BottomView: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, NewName, TopView, BottomView,
                                                 EmptyParam);
end;

function  TProjectApplication.ViewEditCombination(Name: OleVariant; Create: OleVariant;
                                                  NewName: OleVariant; TopView: OleVariant;
                                                  BottomView: OleVariant; ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, NewName, TopView, BottomView,
                                                 ShowInMenu);
end;

function  TProjectApplication.TableApply: WordBool;
begin
  Result := DefaultInterface.TableApply(EmptyParam);
end;

function  TProjectApplication.TableApply(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableApply(Name);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant;
                                        Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant;
                                        Width: OleVariant; Align: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant;
                                        Width: OleVariant; Align: OleVariant; ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant;
                                        Width: OleVariant; Align: OleVariant;
                                        ShowInMenu: OleVariant; LockFirstColumn: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant;
                                        Width: OleVariant; Align: OleVariant;
                                        ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                                        DateFormat: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, DateFormat, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant;
                                        Width: OleVariant; Align: OleVariant;
                                        ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                                        DateFormat: OleVariant; RowHeight: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, DateFormat, RowHeight, EmptyParam,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant;
                                        Width: OleVariant; Align: OleVariant;
                                        ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                                        DateFormat: OleVariant; RowHeight: OleVariant;
                                        ColumnPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, DateFormat, RowHeight, ColumnPosition,
                                       EmptyParam);
end;

function  TProjectApplication.TableEdit(const Name: WideString; TaskTable: WordBool;
                                        Create: OleVariant; OverwriteExisting: OleVariant;
                                        NewName: OleVariant; FieldName: OleVariant;
                                        NewFieldName: OleVariant; Title: OleVariant;
                                        Width: OleVariant; Align: OleVariant;
                                        ShowInMenu: OleVariant; LockFirstColumn: OleVariant;
                                        DateFormat: OleVariant; RowHeight: OleVariant;
                                        ColumnPosition: OleVariant; AlignTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, DateFormat, RowHeight, ColumnPosition,
                                       AlignTitle);
end;

function  TProjectApplication.FilterApply: WordBool;
begin
  Result := DefaultInterface.FilterApply(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterApply(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterApply(Name, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterApply(Name: OleVariant; Highlight: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterApply(Name, Highlight, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterApply(Name: OleVariant; Highlight: OleVariant;
                                          Value1: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterApply(Name, Highlight, Value1, EmptyParam);
end;

function  TProjectApplication.FilterApply(Name: OleVariant; Highlight: OleVariant;
                                          Value1: OleVariant; Value2: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterApply(Name, Highlight, Value1, Value2);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant; NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant; NewName: OleVariant;
                                         FieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant; NewName: OleVariant;
                                         FieldName: OleVariant; NewFieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant; NewName: OleVariant;
                                         FieldName: OleVariant; NewFieldName: OleVariant;
                                         Test: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant; NewName: OleVariant;
                                         FieldName: OleVariant; NewFieldName: OleVariant;
                                         Test: OleVariant; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, Value, EmptyParam,
                                        EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant; NewName: OleVariant;
                                         FieldName: OleVariant; NewFieldName: OleVariant;
                                         Test: OleVariant; Value: OleVariant; Operation: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, Value, Operation,
                                        EmptyParam, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant; NewName: OleVariant;
                                         FieldName: OleVariant; NewFieldName: OleVariant;
                                         Test: OleVariant; Value: OleVariant;
                                         Operation: OleVariant; ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, Value, Operation,
                                        ShowInMenu, EmptyParam);
end;

function  TProjectApplication.FilterEdit(const Name: WideString; TaskFilter: WordBool;
                                         Create: OleVariant; OverwriteExisting: OleVariant;
                                         Parenthesis: OleVariant; NewName: OleVariant;
                                         FieldName: OleVariant; NewFieldName: OleVariant;
                                         Test: OleVariant; Value: OleVariant;
                                         Operation: OleVariant; ShowInMenu: OleVariant;
                                         ShowSummaryTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, Value, Operation,
                                        ShowInMenu, ShowSummaryTasks);
end;

function  TProjectApplication.ProjectSummaryInfo: WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant; Comments: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant; Comments: OleVariant;
                                                 Start: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant; Comments: OleVariant;
                                                 Start: OleVariant; Finish: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant; Comments: OleVariant;
                                                 Start: OleVariant; Finish: OleVariant;
                                                 ScheduleFrom: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant; Comments: OleVariant;
                                                 Start: OleVariant; Finish: OleVariant;
                                                 ScheduleFrom: OleVariant; CurrentDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                CurrentDate, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant; Comments: OleVariant;
                                                 Start: OleVariant; Finish: OleVariant;
                                                 ScheduleFrom: OleVariant; CurrentDate: OleVariant;
                                                 Calendar: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                CurrentDate, Calendar, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant; Comments: OleVariant;
                                                 Start: OleVariant; Finish: OleVariant;
                                                 ScheduleFrom: OleVariant; CurrentDate: OleVariant;
                                                 Calendar: OleVariant; StatusDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                CurrentDate, Calendar, StatusDate, EmptyParam);
end;

function  TProjectApplication.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant;
                                                 Subject: OleVariant; Author: OleVariant;
                                                 Company: OleVariant; Manager: OleVariant;
                                                 Keywords: OleVariant; Comments: OleVariant;
                                                 Start: OleVariant; Finish: OleVariant;
                                                 ScheduleFrom: OleVariant; CurrentDate: OleVariant;
                                                 Calendar: OleVariant; StatusDate: OleVariant;
                                                 Priority: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                CurrentDate, Calendar, StatusDate, Priority);
end;

function  TProjectApplication.ProjectStatistics: WordBool;
begin
  Result := DefaultInterface.ProjectStatistics(EmptyParam);
end;

function  TProjectApplication.ProjectStatistics(Project: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectStatistics(Project);
end;

function  TProjectApplication.OptionsCalendar: WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant;
                                              StartYearIn: OleVariant; StartTime: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant;
                                              StartYearIn: OleVariant; StartTime: OleVariant;
                                              FinishTime: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant;
                                              StartYearIn: OleVariant; StartTime: OleVariant;
                                              FinishTime: OleVariant; HoursPerDay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant;
                                              StartYearIn: OleVariant; StartTime: OleVariant;
                                              FinishTime: OleVariant; HoursPerDay: OleVariant;
                                              HoursPerWeek: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant;
                                              StartYearIn: OleVariant; StartTime: OleVariant;
                                              FinishTime: OleVariant; HoursPerDay: OleVariant;
                                              HoursPerWeek: OleVariant; SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, SetDefaults, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant;
                                              StartYearIn: OleVariant; StartTime: OleVariant;
                                              FinishTime: OleVariant; HoursPerDay: OleVariant;
                                              HoursPerWeek: OleVariant; SetDefaults: OleVariant;
                                              StartWeekOn: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, SetDefaults, StartWeekOn,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant;
                                              StartYearIn: OleVariant; StartTime: OleVariant;
                                              FinishTime: OleVariant; HoursPerDay: OleVariant;
                                              HoursPerWeek: OleVariant; SetDefaults: OleVariant;
                                              StartWeekOn: OleVariant; UseFYStartYear: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, SetDefaults, StartWeekOn,
                                             UseFYStartYear, EmptyParam);
end;

function  TProjectApplication.OptionsCalendar(StartWeekOnMonday: OleVariant;
                                              StartYearIn: OleVariant; StartTime: OleVariant;
                                              FinishTime: OleVariant; HoursPerDay: OleVariant;
                                              HoursPerWeek: OleVariant; SetDefaults: OleVariant;
                                              StartWeekOn: OleVariant; UseFYStartYear: OleVariant;
                                              DaysPerMonth: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, SetDefaults, StartWeekOn,
                                             UseFYStartYear, DaysPerMonth);
end;

function  TProjectApplication.OptionsEdit: WordBool;
begin
  Result := DefaultInterface.OptionsEdit(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant; DayLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant; YearLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant; SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant;
                                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant;
                                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                                          SetDefaultsTimeUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant;
                                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                                          SetDefaultsTimeUnits: OleVariant;
                                          HyperlinkColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant;
                                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                                          SetDefaultsTimeUnits: OleVariant;
                                          HyperlinkColor: OleVariant;
                                          FollowedHyperlinkColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, FollowedHyperlinkColor, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant;
                                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                                          SetDefaultsTimeUnits: OleVariant;
                                          HyperlinkColor: OleVariant;
                                          FollowedHyperlinkColor: OleVariant;
                                          UnderlineHyperlinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, FollowedHyperlinkColor,
                                         UnderlineHyperlinks, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant;
                                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                                          SetDefaultsTimeUnits: OleVariant;
                                          HyperlinkColor: OleVariant;
                                          FollowedHyperlinkColor: OleVariant;
                                          UnderlineHyperlinks: OleVariant;
                                          SetDefaultsHyperlink: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, FollowedHyperlinkColor,
                                         UnderlineHyperlinks, SetDefaultsHyperlink, EmptyParam);
end;

function  TProjectApplication.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                                          UpdateLinks: OleVariant;
                                          CopyResourceUsageHeader: OleVariant;
                                          PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                                          MinuteLabelDisplay: OleVariant;
                                          HourLabelDisplay: OleVariant;
                                          DayLabelDisplay: OleVariant;
                                          WeekLabelDisplay: OleVariant;
                                          YearLabelDisplay: OleVariant;
                                          SpaceBeforeTimeLabel: OleVariant;
                                          SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                                          SetDefaultsTimeUnits: OleVariant;
                                          HyperlinkColor: OleVariant;
                                          FollowedHyperlinkColor: OleVariant;
                                          UnderlineHyperlinks: OleVariant;
                                          SetDefaultsHyperlink: OleVariant;
                                          InCellEditing: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, FollowedHyperlinkColor,
                                         UnderlineHyperlinks, SetDefaultsHyperlink, InCellEditing);
end;

function  TProjectApplication.OptionsGeneral: WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant; WizardScheduling: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant; ShowTipOfDay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant; AutoAddResources: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant; StandardRate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant;
                                             UserName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant;
                                             UserName: OleVariant; SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant;
                                             UserName: OleVariant; SetDefaults: OleVariant;
                                             ShowWelcome: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant;
                                             UserName: OleVariant; SetDefaults: OleVariant;
                                             ShowWelcome: OleVariant; AutoFilter: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant;
                                             UserName: OleVariant; SetDefaults: OleVariant;
                                             ShowWelcome: OleVariant; AutoFilter: OleVariant;
                                             MacroVirusProtection: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            MacroVirusProtection, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant;
                                             UserName: OleVariant; SetDefaults: OleVariant;
                                             ShowWelcome: OleVariant; AutoFilter: OleVariant;
                                             MacroVirusProtection: OleVariant;
                                             DisplayRecentFiles: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            MacroVirusProtection, DisplayRecentFiles, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant;
                                             UserName: OleVariant; SetDefaults: OleVariant;
                                             ShowWelcome: OleVariant; AutoFilter: OleVariant;
                                             MacroVirusProtection: OleVariant;
                                             DisplayRecentFiles: OleVariant;
                                             RecentFilesMaximum: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            MacroVirusProtection, DisplayRecentFiles,
                                            RecentFilesMaximum, EmptyParam);
end;

function  TProjectApplication.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                             WizardErrors: OleVariant;
                                             WizardScheduling: OleVariant;
                                             ShowTipOfDay: OleVariant;
                                             AutoAddResources: OleVariant;
                                             StandardRate: OleVariant; OvertimeRate: OleVariant;
                                             LastFile: OleVariant; SummaryInfo: OleVariant;
                                             UserName: OleVariant; SetDefaults: OleVariant;
                                             ShowWelcome: OleVariant; AutoFilter: OleVariant;
                                             MacroVirusProtection: OleVariant;
                                             DisplayRecentFiles: OleVariant;
                                             RecentFilesMaximum: OleVariant;
                                             FontConversion: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            MacroVirusProtection, DisplayRecentFiles,
                                            RecentFilesMaximum, FontConversion);
end;

function  TProjectApplication.OptionsSchedule: WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant;
                                              WorkUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant;
                                              WorkUnits: OleVariant; AutoTrack: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant;
                                              WorkUnits: OleVariant; AutoTrack: OleVariant;
                                              SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant;
                                              WorkUnits: OleVariant; AutoTrack: OleVariant;
                                              SetDefaults: OleVariant; AssignmentUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant;
                                              WorkUnits: OleVariant; AutoTrack: OleVariant;
                                              SetDefaults: OleVariant; AssignmentUnits: OleVariant;
                                              EffortDriven: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EffortDriven, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant;
                                              WorkUnits: OleVariant; AutoTrack: OleVariant;
                                              SetDefaults: OleVariant; AssignmentUnits: OleVariant;
                                              EffortDriven: OleVariant; HonorConstraints: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EffortDriven, HonorConstraints, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant;
                                              WorkUnits: OleVariant; AutoTrack: OleVariant;
                                              SetDefaults: OleVariant; AssignmentUnits: OleVariant;
                                              EffortDriven: OleVariant;
                                              HonorConstraints: OleVariant;
                                              ShowEstimated: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EffortDriven, HonorConstraints, ShowEstimated,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSchedule(ScheduleMessages: OleVariant;
                                              StartOnCurrentDate: OleVariant; AutoLink: OleVariant;
                                              AutoSplit: OleVariant; CriticalSlack: OleVariant;
                                              TaskType: OleVariant; DurationUnits: OleVariant;
                                              WorkUnits: OleVariant; AutoTrack: OleVariant;
                                              SetDefaults: OleVariant; AssignmentUnits: OleVariant;
                                              EffortDriven: OleVariant;
                                              HonorConstraints: OleVariant;
                                              ShowEstimated: OleVariant;
                                              NewTasksEstimated: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EffortDriven, HonorConstraints, ShowEstimated,
                                             NewTasksEstimated);
end;

function  TProjectApplication.OptionsView: WordBool;
begin
  Result := DefaultInterface.OptionsView(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant; CurrencySymbol: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant;
                                          DisplaySummaryTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant;
                                          DisplaySummaryTasks: OleVariant;
                                          DisplayOLEIndicator: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant;
                                          DisplaySummaryTasks: OleVariant;
                                          DisplayOLEIndicator: OleVariant;
                                          DisplayExternalSuccessors: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant;
                                          DisplaySummaryTasks: OleVariant;
                                          DisplayOLEIndicator: OleVariant;
                                          DisplayExternalSuccessors: OleVariant;
                                          DisplayExternalPredecessors: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant;
                                          DisplaySummaryTasks: OleVariant;
                                          DisplayOLEIndicator: OleVariant;
                                          DisplayExternalSuccessors: OleVariant;
                                          DisplayExternalPredecessors: OleVariant;
                                          CrossProjectLinksInfo: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         CrossProjectLinksInfo, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant;
                                          DisplaySummaryTasks: OleVariant;
                                          DisplayOLEIndicator: OleVariant;
                                          DisplayExternalSuccessors: OleVariant;
                                          DisplayExternalPredecessors: OleVariant;
                                          CrossProjectLinksInfo: OleVariant;
                                          AcceptNewExternalData: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         CrossProjectLinksInfo, AcceptNewExternalData, EmptyParam,
                                         EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant;
                                          DisplaySummaryTasks: OleVariant;
                                          DisplayOLEIndicator: OleVariant;
                                          DisplayExternalSuccessors: OleVariant;
                                          DisplayExternalPredecessors: OleVariant;
                                          CrossProjectLinksInfo: OleVariant;
                                          AcceptNewExternalData: OleVariant;
                                          DisplayWindowsInTaskbar: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         CrossProjectLinksInfo, AcceptNewExternalData,
                                         DisplayWindowsInTaskbar, EmptyParam);
end;

function  TProjectApplication.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                                          ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                                          DisplayEntryBar: OleVariant;
                                          DisplayScrollBars: OleVariant;
                                          CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                                          CurrencyDigits: OleVariant;
                                          DisplayOutlineNumber: OleVariant;
                                          DisplayOutlineSymbols: OleVariant;
                                          DisplayNameIndent: OleVariant;
                                          DisplaySummaryTasks: OleVariant;
                                          DisplayOLEIndicator: OleVariant;
                                          DisplayExternalSuccessors: OleVariant;
                                          DisplayExternalPredecessors: OleVariant;
                                          CrossProjectLinksInfo: OleVariant;
                                          AcceptNewExternalData: OleVariant;
                                          DisplayWindowsInTaskbar: OleVariant;
                                          DisplayScreentips: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         CrossProjectLinksInfo, AcceptNewExternalData,
                                         DisplayWindowsInTaskbar, DisplayScreentips);
end;

function  TProjectApplication.OptionsWorkgroup: WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant;
                                               FollowedHyperlinkColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant;
                                               FollowedHyperlinkColor: OleVariant;
                                               UnderlineHyperlinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant;
                                               FollowedHyperlinkColor: OleVariant;
                                               UnderlineHyperlinks: OleVariant;
                                               SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant;
                                               FollowedHyperlinkColor: OleVariant;
                                               UnderlineHyperlinks: OleVariant;
                                               SetDefaults: OleVariant;
                                               ServerIdentification: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant;
                                               FollowedHyperlinkColor: OleVariant;
                                               UnderlineHyperlinks: OleVariant;
                                               SetDefaults: OleVariant;
                                               ServerIdentification: OleVariant;
                                               AllowTaskDelegation: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, AllowTaskDelegation,
                                              EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant;
                                               FollowedHyperlinkColor: OleVariant;
                                               UnderlineHyperlinks: OleVariant;
                                               SetDefaults: OleVariant;
                                               ServerIdentification: OleVariant;
                                               AllowTaskDelegation: OleVariant;
                                               UpdateProjectToWeb: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, AllowTaskDelegation,
                                              UpdateProjectToWeb, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant;
                                               FollowedHyperlinkColor: OleVariant;
                                               UnderlineHyperlinks: OleVariant;
                                               SetDefaults: OleVariant;
                                               ServerIdentification: OleVariant;
                                               AllowTaskDelegation: OleVariant;
                                               UpdateProjectToWeb: OleVariant;
                                               SetDefaultsMessaging: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, AllowTaskDelegation,
                                              UpdateProjectToWeb, SetDefaultsMessaging, EmptyParam);
end;

function  TProjectApplication.OptionsWorkgroup(WorkgroupMessages: OleVariant;
                                               ServerURL: OleVariant; ServerPath: OleVariant;
                                               ReceiveNotifications: OleVariant;
                                               SendHyperlinkNote: OleVariant;
                                               HyperlinkColor: OleVariant;
                                               FollowedHyperlinkColor: OleVariant;
                                               UnderlineHyperlinks: OleVariant;
                                               SetDefaults: OleVariant;
                                               ServerIdentification: OleVariant;
                                               AllowTaskDelegation: OleVariant;
                                               UpdateProjectToWeb: OleVariant;
                                               SetDefaultsMessaging: OleVariant;
                                               SetDefaultsWebServer: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, AllowTaskDelegation,
                                              UpdateProjectToWeb, SetDefaultsMessaging,
                                              SetDefaultsWebServer);
end;

function  TProjectApplication.OptionsCalculation: WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                                 SpreadPercentToStatusDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                                 SpreadPercentToStatusDate: OleVariant;
                                                 SpreadCostsToStatusDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                                 SpreadPercentToStatusDate: OleVariant;
                                                 SpreadCostsToStatusDate: OleVariant;
                                                 AutoCalcCosts: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                                 SpreadPercentToStatusDate: OleVariant;
                                                 SpreadCostsToStatusDate: OleVariant;
                                                 AutoCalcCosts: OleVariant;
                                                 FixedCostAccrual: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                                 SpreadPercentToStatusDate: OleVariant;
                                                 SpreadCostsToStatusDate: OleVariant;
                                                 AutoCalcCosts: OleVariant;
                                                 FixedCostAccrual: OleVariant;
                                                 CalcMultipleCriticalPaths: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, CalcMultipleCriticalPaths,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                                 SpreadPercentToStatusDate: OleVariant;
                                                 SpreadCostsToStatusDate: OleVariant;
                                                 AutoCalcCosts: OleVariant;
                                                 FixedCostAccrual: OleVariant;
                                                 CalcMultipleCriticalPaths: OleVariant;
                                                 CriticalSlack: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, CalcMultipleCriticalPaths,
                                                CriticalSlack, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                                 SpreadPercentToStatusDate: OleVariant;
                                                 SpreadCostsToStatusDate: OleVariant;
                                                 AutoCalcCosts: OleVariant;
                                                 FixedCostAccrual: OleVariant;
                                                 CalcMultipleCriticalPaths: OleVariant;
                                                 CriticalSlack: OleVariant; SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, CalcMultipleCriticalPaths,
                                                CriticalSlack, SetDefaults, EmptyParam);
end;

function  TProjectApplication.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                                 SpreadPercentToStatusDate: OleVariant;
                                                 SpreadCostsToStatusDate: OleVariant;
                                                 AutoCalcCosts: OleVariant;
                                                 FixedCostAccrual: OleVariant;
                                                 CalcMultipleCriticalPaths: OleVariant;
                                                 CriticalSlack: OleVariant;
                                                 SetDefaults: OleVariant;
                                                 CalcInsProjLikeSummTask: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, CalcMultipleCriticalPaths,
                                                CriticalSlack, SetDefaults, CalcInsProjLikeSummTask);
end;

function  TProjectApplication.CalculateAll: WordBool;
begin
  Result := DefaultInterface.CalculateAll;
end;

function  TProjectApplication.OptionsPreferences: WordBool;
begin
  Result := DefaultInterface.OptionsPreferences;
end;

function  TProjectApplication.ChangeWorkingTime: WordBool;
begin
  Result := DefaultInterface.ChangeWorkingTime;
end;

function  TProjectApplication.BaseCalendars: WordBool;
begin
  Result := DefaultInterface.BaseCalendars;
end;

function  TProjectApplication.BaseCalendarCreate(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarCreate(Name, EmptyParam);
end;

function  TProjectApplication.BaseCalendarCreate(const Name: WideString; FromName: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarCreate(Name, FromName);
end;

function  TProjectApplication.BaseCalendarRename(const FromName: WideString;
                                                 const ToName: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarRename(FromName, ToName);
end;

function  TProjectApplication.BaseCalendarDelete(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarDelete(Name);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant;
                                                   To2: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant;
                                                   To2: OleVariant; From3: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant;
                                                   To2: OleVariant; From3: OleVariant;
                                                   To3: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant;
                                                   To2: OleVariant; From3: OleVariant;
                                                   To3: OleVariant; Default: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant;
                                                   To2: OleVariant; From3: OleVariant;
                                                   To3: OleVariant; Default: OleVariant;
                                                   From4: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  From4, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant;
                                                   To2: OleVariant; From3: OleVariant;
                                                   To3: OleVariant; Default: OleVariant;
                                                   From4: OleVariant; To4: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  From4, To4, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant;
                                                   To2: OleVariant; From3: OleVariant;
                                                   To3: OleVariant; Default: OleVariant;
                                                   From4: OleVariant; To4: OleVariant;
                                                   From5: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  From4, To4, From5, EmptyParam);
end;

function  TProjectApplication.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                                   EndDate: OleVariant; WeekDay: OleVariant;
                                                   Working: OleVariant; From1: OleVariant;
                                                   To1: OleVariant; From2: OleVariant;
                                                   To2: OleVariant; From3: OleVariant;
                                                   To3: OleVariant; Default: OleVariant;
                                                   From4: OleVariant; To4: OleVariant;
                                                   From5: OleVariant; To5: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  From4, To4, From5, To5);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant; From2: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant; From2: OleVariant;
                                                       To2: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant; From2: OleVariant;
                                                       To2: OleVariant; From3: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant; From2: OleVariant;
                                                       To2: OleVariant; From3: OleVariant;
                                                       To3: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant; From2: OleVariant;
                                                       To2: OleVariant; From3: OleVariant;
                                                       To3: OleVariant; From4: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, From4,
                                                      EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant; From2: OleVariant;
                                                       To2: OleVariant; From3: OleVariant;
                                                       To3: OleVariant; From4: OleVariant;
                                                       To4: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, From4, To4,
                                                      EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant; From2: OleVariant;
                                                       To2: OleVariant; From3: OleVariant;
                                                       To3: OleVariant; From4: OleVariant;
                                                       To4: OleVariant; From5: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, From4, To4,
                                                      From5, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarEditDays(const ProjectName: WideString;
                                                       const ResourceName: WideString;
                                                       StartDate: OleVariant; EndDate: OleVariant;
                                                       WeekDay: OleVariant; Working: OleVariant;
                                                       Default: OleVariant; From1: OleVariant;
                                                       To1: OleVariant; From2: OleVariant;
                                                       To2: OleVariant; From3: OleVariant;
                                                       To3: OleVariant; From4: OleVariant;
                                                       To4: OleVariant; From5: OleVariant;
                                                       To5: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, From4, To4,
                                                      From5, To5);
end;

function  TProjectApplication.BaseCalendarReset(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarReset(Name);
end;

function  TProjectApplication.ResourceCalendarReset(const ProjectName: WideString;
                                                    const ResourceName: WideString): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarReset(ProjectName, ResourceName, EmptyParam);
end;

function  TProjectApplication.ResourceCalendarReset(const ProjectName: WideString;
                                                    const ResourceName: WideString;
                                                    BaseCalendar: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarReset(ProjectName, ResourceName, BaseCalendar);
end;

function  TProjectApplication.ResourceCalendars: WordBool;
begin
  Result := DefaultInterface.ResourceCalendars;
end;

function  TProjectApplication.LevelingOptions: WordBool;
begin
  Result := DefaultInterface.LevelingOptions(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                              AutoClearLeveling: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                              AutoClearLeveling: OleVariant; Order: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                              AutoClearLeveling: OleVariant; Order: OleVariant;
                                              LevelEntireProject: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                              AutoClearLeveling: OleVariant; Order: OleVariant;
                                              LevelEntireProject: OleVariant; FromDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                              AutoClearLeveling: OleVariant; Order: OleVariant;
                                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                                              ToDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, ToDate, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                              AutoClearLeveling: OleVariant; Order: OleVariant;
                                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                                              ToDate: OleVariant; PeriodBasis: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, ToDate, PeriodBasis,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                              AutoClearLeveling: OleVariant; Order: OleVariant;
                                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                                              ToDate: OleVariant; PeriodBasis: OleVariant;
                                              LevelIndividualAssignments: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, ToDate, PeriodBasis,
                                             LevelIndividualAssignments, EmptyParam);
end;

function  TProjectApplication.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                              AutoClearLeveling: OleVariant; Order: OleVariant;
                                              LevelEntireProject: OleVariant; FromDate: OleVariant;
                                              ToDate: OleVariant; PeriodBasis: OleVariant;
                                              LevelIndividualAssignments: OleVariant;
                                              LevelingCanSplit: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, ToDate, PeriodBasis,
                                             LevelIndividualAssignments, LevelingCanSplit);
end;

function  TProjectApplication.LevelNow: WordBool;
begin
  Result := DefaultInterface.LevelNow(EmptyParam);
end;

function  TProjectApplication.LevelNow(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelNow(All);
end;

function  TProjectApplication.BaselineSave: WordBool;
begin
  Result := DefaultInterface.BaselineSave(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaselineSave(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineSave(All, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaselineSave(All: OleVariant; Copy: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineSave(All, Copy, EmptyParam);
end;

function  TProjectApplication.BaselineSave(All: OleVariant; Copy: OleVariant; Into: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineSave(All, Copy, Into);
end;

function  TProjectApplication.UpdateProject: WordBool;
begin
  Result := DefaultInterface.UpdateProject(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.UpdateProject(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateProject(All, EmptyParam, EmptyParam);
end;

function  TProjectApplication.UpdateProject(All: OleVariant; UpdateDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateProject(All, UpdateDate, EmptyParam);
end;

function  TProjectApplication.UpdateProject(All: OleVariant; UpdateDate: OleVariant;
                                            Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateProject(All, UpdateDate, Action);
end;

function  TProjectApplication.UpdateTasks: WordBool;
begin
  Result := DefaultInterface.UpdateTasks(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.UpdateTasks(PercentComplete: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                                          RemainingDuration: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, RemainingDuration,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                                          RemainingDuration: OleVariant; ActualStart: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, RemainingDuration,
                                         ActualStart, EmptyParam, EmptyParam);
end;

function  TProjectApplication.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                                          RemainingDuration: OleVariant; ActualStart: OleVariant;
                                          ActualFinish: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, RemainingDuration,
                                         ActualStart, ActualFinish, EmptyParam);
end;

function  TProjectApplication.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                                          RemainingDuration: OleVariant; ActualStart: OleVariant;
                                          ActualFinish: OleVariant; Notes: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, RemainingDuration,
                                         ActualStart, ActualFinish, Notes);
end;

function  TProjectApplication.WindowNewWindow: WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.WindowNewWindow(Projects: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(Projects, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.WindowNewWindow(Projects: OleVariant; View: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(Projects, View, EmptyParam, EmptyParam);
end;

function  TProjectApplication.WindowNewWindow(Projects: OleVariant; View: OleVariant;
                                              AllProjects: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(Projects, View, AllProjects, EmptyParam);
end;

function  TProjectApplication.WindowNewWindow(Projects: OleVariant; View: OleVariant;
                                              AllProjects: OleVariant; ShowDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(Projects, View, AllProjects, ShowDialog);
end;

function  TProjectApplication.WindowArrangeAll: WordBool;
begin
  Result := DefaultInterface.WindowArrangeAll;
end;

function  TProjectApplication.WindowHide: WordBool;
begin
  Result := DefaultInterface.WindowHide(EmptyParam);
end;

function  TProjectApplication.WindowHide(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowHide(Name);
end;

function  TProjectApplication.WindowUnhide: WordBool;
begin
  Result := DefaultInterface.WindowUnhide(EmptyParam);
end;

function  TProjectApplication.WindowUnhide(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowUnhide(Name);
end;

function  TProjectApplication.WindowActivate: WordBool;
begin
  Result := DefaultInterface.WindowActivate(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.WindowActivate(WindowName: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowActivate(WindowName, EmptyParam, EmptyParam);
end;

function  TProjectApplication.WindowActivate(WindowName: OleVariant; DialogID: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowActivate(WindowName, DialogID, EmptyParam);
end;

function  TProjectApplication.WindowActivate(WindowName: OleVariant; DialogID: OleVariant;
                                             TopPane: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowActivate(WindowName, DialogID, TopPane);
end;

function  TProjectApplication.PageBreakSet: WordBool;
begin
  Result := DefaultInterface.PageBreakSet;
end;

function  TProjectApplication.PageBreakRemove: WordBool;
begin
  Result := DefaultInterface.PageBreakRemove;
end;

function  TProjectApplication.PageBreaksRemoveAll: WordBool;
begin
  Result := DefaultInterface.PageBreaksRemoveAll;
end;

function  TProjectApplication.ViewShowResourcesPredecessors: WordBool;
begin
  Result := DefaultInterface.ViewShowResourcesPredecessors;
end;

function  TProjectApplication.ViewShowResourcesSuccessors: WordBool;
begin
  Result := DefaultInterface.ViewShowResourcesSuccessors;
end;

function  TProjectApplication.ViewShowPredecessorsSuccessors: WordBool;
begin
  Result := DefaultInterface.ViewShowPredecessorsSuccessors;
end;

function  TProjectApplication.ViewShowNotes: WordBool;
begin
  Result := DefaultInterface.ViewShowNotes;
end;

function  TProjectApplication.ViewShowObjects: WordBool;
begin
  Result := DefaultInterface.ViewShowObjects;
end;

function  TProjectApplication.ViewShowOverallocation: WordBool;
begin
  Result := DefaultInterface.ViewShowOverallocation;
end;

function  TProjectApplication.ViewShowPercentAllocation: WordBool;
begin
  Result := DefaultInterface.ViewShowPercentAllocation;
end;

function  TProjectApplication.ViewShowWork: WordBool;
begin
  Result := DefaultInterface.ViewShowWork;
end;

function  TProjectApplication.ViewShowCost: WordBool;
begin
  Result := DefaultInterface.ViewShowCost;
end;

function  TProjectApplication.ViewShowSchedule: WordBool;
begin
  Result := DefaultInterface.ViewShowSchedule;
end;

function  TProjectApplication.ViewShowPeakUnits: WordBool;
begin
  Result := DefaultInterface.ViewShowPeakUnits;
end;

function  TProjectApplication.ViewShowAvailability: WordBool;
begin
  Result := DefaultInterface.ViewShowAvailability;
end;

function  TProjectApplication.ViewShowRemainingAvailability: WordBool;
begin
  Result := DefaultInterface.ViewShowRemainingAvailability;
end;

function  TProjectApplication.ViewShowCumulativeWork: WordBool;
begin
  Result := DefaultInterface.ViewShowCumulativeWork;
end;

function  TProjectApplication.ViewShowCumulativeCost: WordBool;
begin
  Result := DefaultInterface.ViewShowCumulativeCost;
end;

function  TProjectApplication.PaneNext: WordBool;
begin
  Result := DefaultInterface.PaneNext;
end;

function  TProjectApplication.PaneCreate: WordBool;
begin
  Result := DefaultInterface.PaneCreate;
end;

function  TProjectApplication.FormViewShow: WordBool;
begin
  Result := DefaultInterface.FormViewShow;
end;

function  TProjectApplication.PaneClose: WordBool;
begin
  Result := DefaultInterface.PaneClose;
end;

function  TProjectApplication.WindowSplit: WordBool;
begin
  Result := DefaultInterface.WindowSplit;
end;

function  TProjectApplication.WindowNext: WordBool;
begin
  Result := DefaultInterface.WindowNext(EmptyParam);
end;

function  TProjectApplication.WindowNext(NoWrap: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNext(NoWrap);
end;

function  TProjectApplication.WindowPrev: WordBool;
begin
  Result := DefaultInterface.WindowPrev(EmptyParam);
end;

function  TProjectApplication.WindowPrev(NoWrap: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowPrev(NoWrap);
end;

function  TProjectApplication.DocClose: WordBool;
begin
  Result := DefaultInterface.DocClose;
end;

function  TProjectApplication.AppMaximize: WordBool;
begin
  Result := DefaultInterface.AppMaximize;
end;

function  TProjectApplication.AppMinimize: WordBool;
begin
  Result := DefaultInterface.AppMinimize;
end;

function  TProjectApplication.AppMove: WordBool;
begin
  Result := DefaultInterface.AppMove(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.AppMove(XPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppMove(XPosition, EmptyParam, EmptyParam);
end;

function  TProjectApplication.AppMove(XPosition: OleVariant; YPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppMove(XPosition, YPosition, EmptyParam);
end;

function  TProjectApplication.AppMove(XPosition: OleVariant; YPosition: OleVariant;
                                      Points: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppMove(XPosition, YPosition, Points);
end;

function  TProjectApplication.AppRestore: WordBool;
begin
  Result := DefaultInterface.AppRestore;
end;

function  TProjectApplication.AppSize: WordBool;
begin
  Result := DefaultInterface.AppSize(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.AppSize(Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppSize(Width, EmptyParam, EmptyParam);
end;

function  TProjectApplication.AppSize(Width: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppSize(Width, Height, EmptyParam);
end;

function  TProjectApplication.AppSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppSize(Width, Height, Points);
end;

function  TProjectApplication.DocMaximize: WordBool;
begin
  Result := DefaultInterface.DocMaximize;
end;

function  TProjectApplication.DocMove: WordBool;
begin
  Result := DefaultInterface.DocMove(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DocMove(XPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocMove(XPosition, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DocMove(XPosition: OleVariant; YPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocMove(XPosition, YPosition, EmptyParam);
end;

function  TProjectApplication.DocMove(XPosition: OleVariant; YPosition: OleVariant;
                                      Points: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocMove(XPosition, YPosition, Points);
end;

function  TProjectApplication.DocRestore: WordBool;
begin
  Result := DefaultInterface.DocRestore;
end;

function  TProjectApplication.DocSize: WordBool;
begin
  Result := DefaultInterface.DocSize(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DocSize(Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocSize(Width, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DocSize(Width: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocSize(Width, Height, EmptyParam);
end;

function  TProjectApplication.DocSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocSize(Width, Height, Points);
end;

function  TProjectApplication.OutlineOutdent: WordBool;
begin
  Result := DefaultInterface.OutlineOutdent(EmptyParam);
end;

function  TProjectApplication.OutlineOutdent(Levels: OleVariant): WordBool;
begin
  Result := DefaultInterface.OutlineOutdent(Levels);
end;

function  TProjectApplication.OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel): WordBool;
begin
  Result := DefaultInterface.OutlineShowTasks(OutlineNumber, EmptyParam);
end;

function  TProjectApplication.OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel;
                                               ExpandInsertedProjects: OleVariant): WordBool;
begin
  Result := DefaultInterface.OutlineShowTasks(OutlineNumber, ExpandInsertedProjects);
end;

function  TProjectApplication.OutlineIndent: WordBool;
begin
  Result := DefaultInterface.OutlineIndent(EmptyParam);
end;

function  TProjectApplication.OutlineIndent(Levels: OleVariant): WordBool;
begin
  Result := DefaultInterface.OutlineIndent(Levels);
end;

function  TProjectApplication.OutlineHideSubTasks: WordBool;
begin
  Result := DefaultInterface.OutlineHideSubTasks;
end;

function  TProjectApplication.OutlineShowSubTasks: WordBool;
begin
  Result := DefaultInterface.OutlineShowSubTasks;
end;

function  TProjectApplication.OutlineShowAllTasks: WordBool;
begin
  Result := DefaultInterface.OutlineShowAllTasks;
end;

function  TProjectApplication.SelectBeginning: WordBool;
begin
  Result := DefaultInterface.SelectBeginning(EmptyParam);
end;

function  TProjectApplication.SelectBeginning(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectBeginning(Extend);
end;

function  TProjectApplication.SelectEnd: WordBool;
begin
  Result := DefaultInterface.SelectEnd(EmptyParam);
end;

function  TProjectApplication.SelectEnd(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectEnd(Extend);
end;

function  TProjectApplication.SelectRowStart: WordBool;
begin
  Result := DefaultInterface.SelectRowStart(EmptyParam);
end;

function  TProjectApplication.SelectRowStart(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRowStart(Extend);
end;

function  TProjectApplication.SelectRowEnd: WordBool;
begin
  Result := DefaultInterface.SelectRowEnd(EmptyParam);
end;

function  TProjectApplication.SelectRowEnd(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRowEnd(Extend);
end;

function  TProjectApplication.SelectCellLeft: WordBool;
begin
  Result := DefaultInterface.SelectCellLeft(EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectCellLeft(NumCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellLeft(NumCells, EmptyParam);
end;

function  TProjectApplication.SelectCellLeft(NumCells: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellLeft(NumCells, Extend);
end;

function  TProjectApplication.SelectCellRight: WordBool;
begin
  Result := DefaultInterface.SelectCellRight(EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectCellRight(NumCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellRight(NumCells, EmptyParam);
end;

function  TProjectApplication.SelectCellRight(NumCells: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellRight(NumCells, Extend);
end;

function  TProjectApplication.SelectCellUp: WordBool;
begin
  Result := DefaultInterface.SelectCellUp(EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectCellUp(NumCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellUp(NumCells, EmptyParam);
end;

function  TProjectApplication.SelectCellUp(NumCells: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellUp(NumCells, Extend);
end;

function  TProjectApplication.SelectCellDown: WordBool;
begin
  Result := DefaultInterface.SelectCellDown(EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectCellDown(NumCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellDown(NumCells, EmptyParam);
end;

function  TProjectApplication.SelectCellDown(NumCells: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellDown(NumCells, Extend);
end;

function  TProjectApplication.SelectionExtend: WordBool;
begin
  Result := DefaultInterface.SelectionExtend(EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectionExtend(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectionExtend(Extend, EmptyParam);
end;

function  TProjectApplication.SelectionExtend(Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectionExtend(Extend, Add);
end;

function  TProjectApplication.ColumnBestFit: WordBool;
begin
  Result := DefaultInterface.ColumnBestFit(EmptyParam);
end;

function  TProjectApplication.ColumnBestFit(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.ColumnBestFit(Column);
end;

function  TProjectApplication.ColumnEdit: WordBool;
begin
  Result := DefaultInterface.ColumnEdit(EmptyParam);
end;

function  TProjectApplication.ColumnEdit(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.ColumnEdit(Column);
end;

function  TProjectApplication.SelectRange(Row: Integer; Column: Smallint): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                                          Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, Width, EmptyParam, EmptyParam,
                                         EmptyParam);
end;

function  TProjectApplication.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                                          Width: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, Width, Height, EmptyParam,
                                         EmptyParam);
end;

function  TProjectApplication.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                                          Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, Width, Height, Extend, EmptyParam);
end;

function  TProjectApplication.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                                          Width: OleVariant; Height: OleVariant;
                                          Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, Width, Height, Extend, Add);
end;

function  TProjectApplication.SelectTimescaleRange(Row: Integer; const StartTime: WideString;
                                                   Width: Smallint; Height: Integer): WordBool;
begin
  Result := DefaultInterface.SelectTimescaleRange(Row, StartTime, Width, Height);
end;

function  TProjectApplication.SelectTaskField(Row: Integer; const Column: WideString): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectTaskField(Row: Integer; const Column: WideString;
                                              RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectTaskField(Row: Integer; const Column: WideString;
                                              RowRelative: OleVariant; Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, Width, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectTaskField(Row: Integer; const Column: WideString;
                                              RowRelative: OleVariant; Width: OleVariant;
                                              Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, Width, Height, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.SelectTaskField(Row: Integer; const Column: WideString;
                                              RowRelative: OleVariant; Width: OleVariant;
                                              Height: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, Width, Height, Extend,
                                             EmptyParam);
end;

function  TProjectApplication.SelectTaskField(Row: Integer; const Column: WideString;
                                              RowRelative: OleVariant; Width: OleVariant;
                                              Height: OleVariant; Extend: OleVariant;
                                              Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, Width, Height, Extend, Add);
end;

function  TProjectApplication.SelectResourceField(Row: Integer; const Column: WideString): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceField(Row: Integer; const Column: WideString;
                                                  RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceField(Row: Integer; const Column: WideString;
                                                  RowRelative: OleVariant; Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, Width, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceField(Row: Integer; const Column: WideString;
                                                  RowRelative: OleVariant; Width: OleVariant;
                                                  Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, Width, Height,
                                                 EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceField(Row: Integer; const Column: WideString;
                                                  RowRelative: OleVariant; Width: OleVariant;
                                                  Height: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, Width, Height, Extend,
                                                 EmptyParam);
end;

function  TProjectApplication.SelectResourceField(Row: Integer; const Column: WideString;
                                                  RowRelative: OleVariant; Width: OleVariant;
                                                  Height: OleVariant; Extend: OleVariant;
                                                  Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, Width, Height, Extend,
                                                 Add);
end;

function  TProjectApplication.SelectRow: WordBool;
begin
  Result := DefaultInterface.SelectRow(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectRow(Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectRow(Row: OleVariant; RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, RowRelative, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, RowRelative, Height, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectRow(Row: OleVariant; RowRelative: OleVariant;
                                        Height: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, RowRelative, Height, Extend, EmptyParam);
end;

function  TProjectApplication.SelectRow(Row: OleVariant; RowRelative: OleVariant;
                                        Height: OleVariant; Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, RowRelative, Height, Extend, Add);
end;

function  TProjectApplication.SelectColumn: WordBool;
begin
  Result := DefaultInterface.SelectColumn(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectColumn(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectColumn(Column, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectColumn(Column: OleVariant; Additional: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectColumn(Column, Additional, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectColumn(Column: OleVariant; Additional: OleVariant;
                                           Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectColumn(Column, Additional, Extend, EmptyParam);
end;

function  TProjectApplication.SelectColumn(Column: OleVariant; Additional: OleVariant;
                                           Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectColumn(Column, Additional, Extend, Add);
end;

function  TProjectApplication.SelectTaskColumn: WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectTaskColumn(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(Column, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectTaskColumn(Column: OleVariant; Additional: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(Column, Additional, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectTaskColumn(Column: OleVariant; Additional: OleVariant;
                                               Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(Column, Additional, Extend, EmptyParam);
end;

function  TProjectApplication.SelectTaskColumn(Column: OleVariant; Additional: OleVariant;
                                               Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(Column, Additional, Extend, Add);
end;

function  TProjectApplication.SelectResourceColumn: WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceColumn(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(Column, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceColumn(Column: OleVariant; Additional: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(Column, Additional, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceColumn(Column: OleVariant; Additional: OleVariant;
                                                   Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(Column, Additional, Extend, EmptyParam);
end;

function  TProjectApplication.SelectResourceColumn(Column: OleVariant; Additional: OleVariant;
                                                   Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(Column, Additional, Extend, Add);
end;

function  TProjectApplication.SelectTaskCell: WordBool;
begin
  Result := DefaultInterface.SelectTaskCell(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectTaskCell(Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskCell(Row, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectTaskCell(Row: OleVariant; Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskCell(Row, Column, EmptyParam);
end;

function  TProjectApplication.SelectTaskCell(Row: OleVariant; Column: OleVariant;
                                             RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskCell(Row, Column, RowRelative);
end;

function  TProjectApplication.SelectResourceCell: WordBool;
begin
  Result := DefaultInterface.SelectResourceCell(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceCell(Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceCell(Row, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectResourceCell(Row: OleVariant; Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceCell(Row, Column, EmptyParam);
end;

function  TProjectApplication.SelectResourceCell(Row: OleVariant; Column: OleVariant;
                                                 RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceCell(Row, Column, RowRelative);
end;

function  TProjectApplication.SelectCell: WordBool;
begin
  Result := DefaultInterface.SelectCell(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectCell(Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCell(Row, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SelectCell(Row: OleVariant; Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCell(Row, Column, EmptyParam);
end;

function  TProjectApplication.SelectCell(Row: OleVariant; Column: OleVariant;
                                         RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCell(Row, Column, RowRelative);
end;

function  TProjectApplication.SelectSheet: WordBool;
begin
  Result := DefaultInterface.SelectSheet;
end;

function  TProjectApplication.DDEInitiate(const App: WideString; const Topic: WideString): WordBool;
begin
  Result := DefaultInterface.DDEInitiate(App, Topic);
end;

function  TProjectApplication.DDEExecute(const Command: WideString): WordBool;
begin
  Result := DefaultInterface.DDEExecute(Command, EmptyParam);
end;

function  TProjectApplication.DDEExecute(const Command: WideString; TimeOut: OleVariant): WordBool;
begin
  Result := DefaultInterface.DDEExecute(Command, TimeOut);
end;

function  TProjectApplication.DDETerminate: WordBool;
begin
  Result := DefaultInterface.DDETerminate;
end;

function  TProjectApplication.InformationDialog: WordBool;
begin
  Result := DefaultInterface.InformationDialog(EmptyParam);
end;

function  TProjectApplication.InformationDialog(Tab: OleVariant): WordBool;
begin
  Result := DefaultInterface.InformationDialog(Tab);
end;

function  TProjectApplication.Form: WordBool;
begin
  Result := DefaultInterface.Form(EmptyParam);
end;

function  TProjectApplication.Form(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.Form(Name);
end;

function  TProjectApplication.CustomForms: WordBool;
begin
  Result := DefaultInterface.CustomForms;
end;

function  TProjectApplication.Tables: WordBool;
begin
  Result := DefaultInterface.Tables;
end;

function  TProjectApplication.Filters: WordBool;
begin
  Result := DefaultInterface.Filters;
end;

function  TProjectApplication.Macro: WordBool;
begin
  Result := DefaultInterface.Macro(EmptyParam);
end;

function  TProjectApplication.Macro(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.Macro(Name);
end;

function  TProjectApplication.FillDown: WordBool;
begin
  Result := DefaultInterface.FillDown(EmptyParam);
end;

function  TProjectApplication.FillDown(Down: OleVariant): WordBool;
begin
  Result := DefaultInterface.FillDown(Down);
end;

function  TProjectApplication.Views: WordBool;
begin
  Result := DefaultInterface.Views;
end;

function  TProjectApplication.CalculateProject: WordBool;
begin
  Result := DefaultInterface.CalculateProject;
end;

function  TProjectApplication.LevelingClear: WordBool;
begin
  Result := DefaultInterface.LevelingClear(EmptyParam);
end;

function  TProjectApplication.LevelingClear(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingClear(All);
end;

function  TProjectApplication.SpellingCheck: WordBool;
begin
  Result := DefaultInterface.SpellingCheck;
end;

function  TProjectApplication.OptionsSpelling: WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                                              ResourceText3: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                                              ResourceText3: OleVariant; ResourceText4: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                                              ResourceText5: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                                              ResourceText5: OleVariant; AssignNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                                              IgnoreUppercase: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, IgnoreUppercase,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                                              IgnoreUppercase: OleVariant;
                                              IgnoreNumberWords: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, IgnoreUppercase,
                                             IgnoreNumberWords, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                                              IgnoreUppercase: OleVariant;
                                              IgnoreNumberWords: OleVariant;
                                              AlwaysSuggest: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, IgnoreUppercase,
                                             IgnoreNumberWords, AlwaysSuggest, EmptyParam);
end;

function  TProjectApplication.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                              TaskText1: OleVariant; TaskText2: OleVariant;
                                              TaskText3: OleVariant; TaskText4: OleVariant;
                                              TaskText5: OleVariant; TaskText6: OleVariant;
                                              TaskText7: OleVariant; TaskText8: OleVariant;
                                              TaskText9: OleVariant; TaskText10: OleVariant;
                                              ResourceCode: OleVariant; ResourceName: OleVariant;
                                              ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                              ResourceText1: OleVariant; ResourceText2: OleVariant;
                                              ResourceText3: OleVariant; ResourceText4: OleVariant;
                                              ResourceText5: OleVariant; AssignNotes: OleVariant;
                                              IgnoreUppercase: OleVariant;
                                              IgnoreNumberWords: OleVariant;
                                              AlwaysSuggest: OleVariant;
                                              UseCustomDictionary: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, IgnoreUppercase,
                                             IgnoreNumberWords, AlwaysSuggest, UseCustomDictionary);
end;

function  TProjectApplication.WindowMoreWindows: WordBool;
begin
  Result := DefaultInterface.WindowMoreWindows;
end;

function  TProjectApplication.HelpContents: WordBool;
begin
  Result := DefaultInterface.HelpContents;
end;

function  TProjectApplication.HelpSearch: WordBool;
begin
  Result := DefaultInterface.HelpSearch;
end;

function  TProjectApplication.HelpOnlineIndex: WordBool;
begin
  Result := DefaultInterface.HelpOnlineIndex;
end;

function  TProjectApplication.HelpAbout: WordBool;
begin
  Result := DefaultInterface.HelpAbout;
end;

function  TProjectApplication.HelpLaunch: WordBool;
begin
  Result := DefaultInterface.HelpLaunch(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.HelpLaunch(FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpLaunch(FileName, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpLaunch(FileName, ContextNumber, EmptyParam, EmptyParam);
end;

function  TProjectApplication.HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant;
                                         Search: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpLaunch(FileName, ContextNumber, Search, EmptyParam);
end;

function  TProjectApplication.HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant;
                                         Search: OleVariant; SearchKey: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpLaunch(FileName, ContextNumber, Search, SearchKey);
end;

function  TProjectApplication.HelpCueCards: WordBool;
begin
  Result := DefaultInterface.HelpCueCards(EmptyParam, EmptyParam);
end;

function  TProjectApplication.HelpCueCards(FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpCueCards(FileName, EmptyParam);
end;

function  TProjectApplication.HelpCueCards(FileName: OleVariant; ContextNumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpCueCards(FileName, ContextNumber);
end;

function  TProjectApplication.HelpTopics: WordBool;
begin
  Result := DefaultInterface.HelpTopics;
end;

function  TProjectApplication.HelpAnswerWizard: WordBool;
begin
  Result := DefaultInterface.HelpAnswerWizard;
end;

function  TProjectApplication.HelpMSProjectFundamentals: WordBool;
begin
  Result := DefaultInterface.HelpMSProjectFundamentals;
end;

function  TProjectApplication.AutoCorrect: WordBool;
begin
  Result := DefaultInterface.AutoCorrect;
end;

function  TProjectApplication.HelpQuickPreview: WordBool;
begin
  Result := DefaultInterface.HelpQuickPreview;
end;

function  TProjectApplication.HelpTechnicalSupport: WordBool;
begin
  Result := DefaultInterface.HelpTechnicalSupport;
end;

function  TProjectApplication.HelpCreateYourProject: WordBool;
begin
  Result := DefaultInterface.HelpCreateYourProject;
end;

function  TProjectApplication.HelpContextHelp: WordBool;
begin
  Result := DefaultInterface.HelpContextHelp;
end;

function  TProjectApplication.TextStyles: WordBool;
begin
  Result := DefaultInterface.TextStyles(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam);
end;

function  TProjectApplication.TextStyles(Item: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam);
end;

function  TProjectApplication.TextStyles(Item: OleVariant; Font: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam);
end;

function  TProjectApplication.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam);
end;

function  TProjectApplication.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                         Bold: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, Bold, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                         Bold: OleVariant; Italic: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, Bold, Italic, EmptyParam, EmptyParam);
end;

function  TProjectApplication.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                         Bold: OleVariant; Italic: OleVariant; Underline: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, Bold, Italic, Underline, EmptyParam);
end;

function  TProjectApplication.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                         Bold: OleVariant; Italic: OleVariant;
                                         Underline: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, Bold, Italic, Underline, Color);
end;

function  TProjectApplication.DetailStylesFormat: WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant;
                                                 Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant;
                                                 Size: OleVariant; Bold: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant;
                                                 Size: OleVariant; Bold: OleVariant;
                                                 Italic: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant;
                                                 Size: OleVariant; Bold: OleVariant;
                                                 Italic: OleVariant; Underline: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant;
                                                 Size: OleVariant; Bold: OleVariant;
                                                 Italic: OleVariant; Underline: OleVariant;
                                                 Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline, Color,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant;
                                                 Size: OleVariant; Bold: OleVariant;
                                                 Italic: OleVariant; Underline: OleVariant;
                                                 Color: OleVariant; CellColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline, Color,
                                                CellColor, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant;
                                                 Size: OleVariant; Bold: OleVariant;
                                                 Italic: OleVariant; Underline: OleVariant;
                                                 Color: OleVariant; CellColor: OleVariant;
                                                 Pattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline, Color,
                                                CellColor, Pattern, EmptyParam);
end;

function  TProjectApplication.DetailStylesFormat(Item: OleVariant; Font: OleVariant;
                                                 Size: OleVariant; Bold: OleVariant;
                                                 Italic: OleVariant; Underline: OleVariant;
                                                 Color: OleVariant; CellColor: OleVariant;
                                                 Pattern: OleVariant; ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline, Color,
                                                CellColor, Pattern, ShowInMenu);
end;

function  TProjectApplication.DetailStylesAdd(Item: PjTimescaledData): WordBool;
begin
  Result := DefaultInterface.DetailStylesAdd(Item, EmptyParam);
end;

function  TProjectApplication.DetailStylesAdd(Item: PjTimescaledData; Position: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesAdd(Item, Position);
end;

function  TProjectApplication.DetailStylesRemove(Item: PjTimescaledData): WordBool;
begin
  Result := DefaultInterface.DetailStylesRemove(Item);
end;

function  TProjectApplication.DetailStylesRemoveAll: WordBool;
begin
  Result := DefaultInterface.DetailStylesRemoveAll;
end;

function  TProjectApplication.Font: WordBool;
begin
  Result := DefaultInterface.Font(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.Font(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam);
end;

function  TProjectApplication.Font(Name: OleVariant; Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam);
end;

function  TProjectApplication.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant;
                                   Italic: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, Italic, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant;
                                   Italic: OleVariant; Underline: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, Italic, Underline, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant;
                                   Italic: OleVariant; Underline: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, Italic, Underline, Color, EmptyParam);
end;

function  TProjectApplication.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant;
                                   Italic: OleVariant; Underline: OleVariant; Color: OleVariant;
                                   Reset: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, Italic, Underline, Color, Reset);
end;

function  TProjectApplication.Timescale: WordBool;
begin
  Result := DefaultInterface.Timescale;
end;

function  TProjectApplication.TimescaleEdit: WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant;
                                            MajorCount: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant;
                                            MajorCount: OleVariant; MinorCount: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant;
                                            MajorCount: OleVariant; MinorCount: OleVariant;
                                            MajorTicks: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant;
                                            MajorCount: OleVariant; MinorCount: OleVariant;
                                            MajorTicks: OleVariant; MinorTicks: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant;
                                            MajorCount: OleVariant; MinorCount: OleVariant;
                                            MajorTicks: OleVariant; MinorTicks: OleVariant;
                                            Enlarge: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, Enlarge, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant;
                                            MajorCount: OleVariant; MinorCount: OleVariant;
                                            MajorTicks: OleVariant; MinorTicks: OleVariant;
                                            Enlarge: OleVariant; Separator: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, Enlarge, Separator, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant;
                                            MajorCount: OleVariant; MinorCount: OleVariant;
                                            MajorTicks: OleVariant; MinorTicks: OleVariant;
                                            Enlarge: OleVariant; Separator: OleVariant;
                                            MajorUseFY: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, Enlarge, Separator, MajorUseFY,
                                           EmptyParam);
end;

function  TProjectApplication.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                            MajorLabel: OleVariant; MinorLabel: OleVariant;
                                            MajorAlign: OleVariant; MinorAlign: OleVariant;
                                            MajorCount: OleVariant; MinorCount: OleVariant;
                                            MajorTicks: OleVariant; MinorTicks: OleVariant;
                                            Enlarge: OleVariant; Separator: OleVariant;
                                            MajorUseFY: OleVariant; MinorUseFY: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, Enlarge, Separator, MajorUseFY,
                                           MinorUseFY);
end;

function  TProjectApplication.Sort: WordBool;
begin
  Result := DefaultInterface.Sort(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Sort(Key1: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.Sort(Key1: OleVariant; Ascending1: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                                   Ascending2: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                                   Ascending2: OleVariant; Key3: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, Key3, EmptyParam, EmptyParam,
                                  EmptyParam);
end;

function  TProjectApplication.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                                   Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, Key3, Ascending3, EmptyParam,
                                  EmptyParam);
end;

function  TProjectApplication.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                                   Ascending2: OleVariant; Key3: OleVariant;
                                   Ascending3: OleVariant; Renumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, Key3, Ascending3, Renumber,
                                  EmptyParam);
end;

function  TProjectApplication.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                                   Ascending2: OleVariant; Key3: OleVariant;
                                   Ascending3: OleVariant; Renumber: OleVariant; Outline: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, Key3, Ascending3, Renumber,
                                  Outline);
end;

function  TProjectApplication.BarBoxStyles: WordBool;
begin
  Result := DefaultInterface.BarBoxStyles;
end;

function  TProjectApplication.GanttBarFormat: WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant;
                                             EndColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant;
                                             EndColor: OleVariant; LeftText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant;
                                             EndColor: OleVariant; LeftText: OleVariant;
                                             RightText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant;
                                             EndColor: OleVariant; LeftText: OleVariant;
                                             RightText: OleVariant; TopText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant;
                                             EndColor: OleVariant; LeftText: OleVariant;
                                             RightText: OleVariant; TopText: OleVariant;
                                             BottomText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            BottomText, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant;
                                             EndColor: OleVariant; LeftText: OleVariant;
                                             RightText: OleVariant; TopText: OleVariant;
                                             BottomText: OleVariant; InsideText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            BottomText, InsideText, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant;
                                             EndColor: OleVariant; LeftText: OleVariant;
                                             RightText: OleVariant; TopText: OleVariant;
                                             BottomText: OleVariant; InsideText: OleVariant;
                                             Reset: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            BottomText, InsideText, Reset, EmptyParam);
end;

function  TProjectApplication.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                             StartShape: OleVariant; StartType: OleVariant;
                                             StartColor: OleVariant; MiddleShape: OleVariant;
                                             MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                             EndShape: OleVariant; EndType: OleVariant;
                                             EndColor: OleVariant; LeftText: OleVariant;
                                             RightText: OleVariant; TopText: OleVariant;
                                             BottomText: OleVariant; InsideText: OleVariant;
                                             Reset: OleVariant; ProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            BottomText, InsideText, Reset, ProjectName);
end;

function  TProjectApplication.TimescaleNonWorking: WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleNonWorking(Draw: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(Draw, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(Draw, Calendar, EmptyParam, EmptyParam);
end;

function  TProjectApplication.TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant;
                                                  Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(Draw, Calendar, Color, EmptyParam);
end;

function  TProjectApplication.TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant;
                                                  Color: OleVariant; Pattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(Draw, Calendar, Color, Pattern);
end;

function  TProjectApplication.BoxShowHideFields: WordBool;
begin
  Result := DefaultInterface.BoxShowHideFields(EmptyParam);
end;

function  TProjectApplication.BoxShowHideFields(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxShowHideFields(Show);
end;

function  TProjectApplication.Layout: WordBool;
begin
  Result := DefaultInterface.Layout;
end;

function  TProjectApplication.PERTLayout: WordBool;
begin
  Result := DefaultInterface.PERTLayout(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTLayout(Straight: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTLayout(Straight, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTLayout(Straight, DisplayArrows, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                                         AdjustForPageBreaks: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTLayout(Straight, DisplayArrows, AdjustForPageBreaks, EmptyParam);
end;

function  TProjectApplication.PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                                         AdjustForPageBreaks: OleVariant;
                                         DisplayPageBreaks: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTLayout(Straight, DisplayArrows, AdjustForPageBreaks,
                                        DisplayPageBreaks);
end;

function  TProjectApplication.LayoutNow: WordBool;
begin
  Result := DefaultInterface.LayoutNow;
end;

function  TProjectApplication.PERTBorders: WordBool;
begin
  Result := DefaultInterface.PERTBorders(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant;
                                          CriticalMarkedStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant;
                                          CriticalMarkedStyle: OleVariant;
                                          CriticalMarkedColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant;
                                          CriticalMarkedStyle: OleVariant;
                                          CriticalMarkedColor: OleVariant;
                                          NoncriticalMarkedStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant;
                                          CriticalMarkedStyle: OleVariant;
                                          CriticalMarkedColor: OleVariant;
                                          NoncriticalMarkedStyle: OleVariant;
                                          NoncriticalMarkedColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant;
                                          CriticalMarkedStyle: OleVariant;
                                          CriticalMarkedColor: OleVariant;
                                          NoncriticalMarkedStyle: OleVariant;
                                          NoncriticalMarkedColor: OleVariant;
                                          CriticalExternalTaskStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, CriticalExternalTaskStyle,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant;
                                          CriticalMarkedStyle: OleVariant;
                                          CriticalMarkedColor: OleVariant;
                                          NoncriticalMarkedStyle: OleVariant;
                                          NoncriticalMarkedColor: OleVariant;
                                          CriticalExternalTaskStyle: OleVariant;
                                          CriticalExternalTaskColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, CriticalExternalTaskStyle,
                                         CriticalExternalTaskColor, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant;
                                          CriticalMarkedStyle: OleVariant;
                                          CriticalMarkedColor: OleVariant;
                                          NoncriticalMarkedStyle: OleVariant;
                                          NoncriticalMarkedColor: OleVariant;
                                          CriticalExternalTaskStyle: OleVariant;
                                          CriticalExternalTaskColor: OleVariant;
                                          NoncriticalExternalTaskStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, CriticalExternalTaskStyle,
                                         CriticalExternalTaskColor, NoncriticalExternalTaskStyle,
                                         EmptyParam);
end;

function  TProjectApplication.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                                          NoncriticalStyle: OleVariant;
                                          NoncriticalColor: OleVariant;
                                          CriticalMilestoneStyle: OleVariant;
                                          CriticalMilestoneColor: OleVariant;
                                          NoncriticalMilestoneStyle: OleVariant;
                                          NoncriticalMilestoneColor: OleVariant;
                                          CriticalSummaryStyle: OleVariant;
                                          CriticalSummaryColor: OleVariant;
                                          NoncriticalSummaryStyle: OleVariant;
                                          NoncriticalSummaryColor: OleVariant;
                                          CriticalSubprojectStyle: OleVariant;
                                          CriticalSubprojectColor: OleVariant;
                                          NoncriticalSubprojectStyle: OleVariant;
                                          NoncriticalSubprojectColor: OleVariant;
                                          CriticalMarkedStyle: OleVariant;
                                          CriticalMarkedColor: OleVariant;
                                          NoncriticalMarkedStyle: OleVariant;
                                          NoncriticalMarkedColor: OleVariant;
                                          CriticalExternalTaskStyle: OleVariant;
                                          CriticalExternalTaskColor: OleVariant;
                                          NoncriticalExternalTaskStyle: OleVariant;
                                          NoncriticalExternalTaskColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, CriticalExternalTaskStyle,
                                         CriticalExternalTaskColor, NoncriticalExternalTaskStyle,
                                         NoncriticalExternalTaskColor);
end;

function  TProjectApplication.Gridlines: WordBool;
begin
  Result := DefaultInterface.Gridlines;
end;

function  TProjectApplication.GridlinesEdit(Item: PjGridline): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.GridlinesEdit(Item: PjGridline; NormalType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.GridlinesEdit(Item: PjGridline; NormalType: OleVariant;
                                            NormalColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, NormalColor, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.GridlinesEdit(Item: PjGridline; NormalType: OleVariant;
                                            NormalColor: OleVariant; Interval: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, NormalColor, Interval, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.GridlinesEdit(Item: PjGridline; NormalType: OleVariant;
                                            NormalColor: OleVariant; Interval: OleVariant;
                                            IntervalType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, NormalColor, Interval, IntervalType,
                                           EmptyParam);
end;

function  TProjectApplication.GridlinesEdit(Item: PjGridline; NormalType: OleVariant;
                                            NormalColor: OleVariant; Interval: OleVariant;
                                            IntervalType: OleVariant; IntervalColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, NormalColor, Interval, IntervalType,
                                           IntervalColor);
end;

function  TProjectApplication.ViewShowSelectedTasks: WordBool;
begin
  Result := DefaultInterface.ViewShowSelectedTasks(EmptyParam);
end;

function  TProjectApplication.ViewShowSelectedTasks(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewShowSelectedTasks(Show);
end;

function  TProjectApplication.PageBreaksShow: WordBool;
begin
  Result := DefaultInterface.PageBreaksShow(EmptyParam);
end;

function  TProjectApplication.PageBreaksShow(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.PageBreaksShow(Show);
end;

function  TProjectApplication.FindNext: WordBool;
begin
  Result := DefaultInterface.FindNext;
end;

function  TProjectApplication.FindPrevious: WordBool;
begin
  Result := DefaultInterface.FindPrevious;
end;

function  TProjectApplication.ZoomOut: WordBool;
begin
  Result := DefaultInterface.ZoomOut;
end;

function  TProjectApplication.ZoomIn: WordBool;
begin
  Result := DefaultInterface.ZoomIn;
end;

function  TProjectApplication.SetField(const Field: WideString; const Value: WideString): WordBool;
begin
  Result := DefaultInterface.SetField(Field, Value, EmptyParam);
end;

function  TProjectApplication.SetField(const Field: WideString; const Value: WideString;
                                       Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetField(Field, Value, Create);
end;

function  TProjectApplication.SetTaskField(const Field: WideString; const Value: WideString): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, EmptyParam, EmptyParam, EmptyParam,
                                          EmptyParam);
end;

function  TProjectApplication.SetTaskField(const Field: WideString; const Value: WideString;
                                           AllSelectedTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, AllSelectedTasks, EmptyParam, EmptyParam,
                                          EmptyParam);
end;

function  TProjectApplication.SetTaskField(const Field: WideString; const Value: WideString;
                                           AllSelectedTasks: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, AllSelectedTasks, Create, EmptyParam,
                                          EmptyParam);
end;

function  TProjectApplication.SetTaskField(const Field: WideString; const Value: WideString;
                                           AllSelectedTasks: OleVariant; Create: OleVariant;
                                           TaskID: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, AllSelectedTasks, Create, TaskID, EmptyParam);
end;

function  TProjectApplication.SetTaskField(const Field: WideString; const Value: WideString;
                                           AllSelectedTasks: OleVariant; Create: OleVariant;
                                           TaskID: OleVariant; ProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, AllSelectedTasks, Create, TaskID,
                                          ProjectName);
end;

function  TProjectApplication.SetResourceField(const Field: WideString; const Value: WideString): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam);
end;

function  TProjectApplication.SetResourceField(const Field: WideString; const Value: WideString;
                                               AllSelectedResources: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, AllSelectedResources, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.SetResourceField(const Field: WideString; const Value: WideString;
                                               AllSelectedResources: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, AllSelectedResources, Create,
                                              EmptyParam, EmptyParam);
end;

function  TProjectApplication.SetResourceField(const Field: WideString; const Value: WideString;
                                               AllSelectedResources: OleVariant;
                                               Create: OleVariant; ResourceID: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, AllSelectedResources, Create,
                                              ResourceID, EmptyParam);
end;

function  TProjectApplication.SetResourceField(const Field: WideString; const Value: WideString;
                                               AllSelectedResources: OleVariant;
                                               Create: OleVariant; ResourceID: OleVariant;
                                               ProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, AllSelectedResources, Create,
                                              ResourceID, ProjectName);
end;

function  TProjectApplication.SetActiveCell(const Value: WideString): WordBool;
begin
  Result := DefaultInterface.SetActiveCell(Value, EmptyParam);
end;

function  TProjectApplication.SetActiveCell(const Value: WideString; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetActiveCell(Value, Create);
end;

function  TProjectApplication.CheckField(const Field: WideString; const Value: WideString): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam);
end;

function  TProjectApplication.CheckField(const Field: WideString; const Value: WideString;
                                         Test: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam);
end;

function  TProjectApplication.CheckField(const Field: WideString; const Value: WideString;
                                         Test: OleVariant; Op: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, Op, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CheckField(const Field: WideString; const Value: WideString;
                                         Test: OleVariant; Op: OleVariant; Field2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, Op, Field2, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CheckField(const Field: WideString; const Value: WideString;
                                         Test: OleVariant; Op: OleVariant; Field2: OleVariant;
                                         Value2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, Op, Field2, Value2, EmptyParam);
end;

function  TProjectApplication.CheckField(const Field: WideString; const Value: WideString;
                                         Test: OleVariant; Op: OleVariant; Field2: OleVariant;
                                         Value2: OleVariant; Test2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, Op, Field2, Value2, Test2);
end;

function  TProjectApplication.SetMatchingField(const Field: WideString; const Value: WideString;
                                               const CheckField: WideString;
                                               const CheckValue: WideString): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SetMatchingField(const Field: WideString; const Value: WideString;
                                               const CheckField: WideString;
                                               const CheckValue: WideString; CheckTest: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SetMatchingField(const Field: WideString; const Value: WideString;
                                               const CheckField: WideString;
                                               const CheckValue: WideString; CheckTest: OleVariant;
                                               CheckOperation: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              CheckOperation, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SetMatchingField(const Field: WideString; const Value: WideString;
                                               const CheckField: WideString;
                                               const CheckValue: WideString; CheckTest: OleVariant;
                                               CheckOperation: OleVariant; CheckField2: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              CheckOperation, CheckField2, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SetMatchingField(const Field: WideString; const Value: WideString;
                                               const CheckField: WideString;
                                               const CheckValue: WideString; CheckTest: OleVariant;
                                               CheckOperation: OleVariant; CheckField2: OleVariant;
                                               CheckValue2: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              CheckOperation, CheckField2, CheckValue2, EmptyParam);
end;

function  TProjectApplication.SetMatchingField(const Field: WideString; const Value: WideString;
                                               const CheckField: WideString;
                                               const CheckValue: WideString; CheckTest: OleVariant;
                                               CheckOperation: OleVariant; CheckField2: OleVariant;
                                               CheckValue2: OleVariant; CheckTest2: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              CheckOperation, CheckField2, CheckValue2, CheckTest2);
end;

function  TProjectApplication.AppExecute: WordBool;
begin
  Result := DefaultInterface.AppExecute(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.AppExecute(Window: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppExecute(Window, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.AppExecute(Window: OleVariant; Command: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppExecute(Window, Command, EmptyParam, EmptyParam);
end;

function  TProjectApplication.AppExecute(Window: OleVariant; Command: OleVariant;
                                         Minimize: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppExecute(Window, Command, Minimize, EmptyParam);
end;

function  TProjectApplication.AppExecute(Window: OleVariant; Command: OleVariant;
                                         Minimize: OleVariant; Activate: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppExecute(Window, Command, Minimize, Activate);
end;

function  TProjectApplication.AppLaunch(const Application: WideString): WordBool;
begin
  Result := DefaultInterface.AppLaunch(Application, EmptyParam, EmptyParam);
end;

function  TProjectApplication.AppLaunch(const Application: WideString; Document: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppLaunch(Application, Document, EmptyParam);
end;

function  TProjectApplication.AppLaunch(const Application: WideString; Document: OleVariant;
                                        Activate: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppLaunch(Application, Document, Activate);
end;

function  TProjectApplication.DDELinksUpdate: WordBool;
begin
  Result := DefaultInterface.DDELinksUpdate;
end;

function  TProjectApplication.GotoTaskDates: WordBool;
begin
  Result := DefaultInterface.GotoTaskDates;
end;

function  TProjectApplication.GanttBarLinks(Display: PjGanttBarLink): WordBool;
begin
  Result := DefaultInterface.GanttBarLinks(Display);
end;

function  TProjectApplication.GanttShowDrawings: WordBool;
begin
  Result := DefaultInterface.GanttShowDrawings(EmptyParam);
end;

function  TProjectApplication.GanttShowDrawings(Display: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttShowDrawings(Display);
end;

function  TProjectApplication.BarRounding: WordBool;
begin
  Result := DefaultInterface.BarRounding(EmptyParam);
end;

function  TProjectApplication.BarRounding(On_: OleVariant): WordBool;
begin
  Result := DefaultInterface.BarRounding(On_);
end;

function  TProjectApplication.GanttRollup: WordBool;
begin
  Result := DefaultInterface.GanttRollup(EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttRollup(AlwaysRollup: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttRollup(AlwaysRollup, EmptyParam);
end;

function  TProjectApplication.GanttRollup(AlwaysRollup: OleVariant;
                                          HideWhenSummaryExpanded: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttRollup(AlwaysRollup, HideWhenSummaryExpanded);
end;

function  TProjectApplication.GanttBarTextDateFormat(DateFormat: PjDateFormat): WordBool;
begin
  Result := DefaultInterface.GanttBarTextDateFormat(DateFormat);
end;

function  TProjectApplication.GanttBarSize(Size: PjBarSize): WordBool;
begin
  Result := DefaultInterface.GanttBarSize(Size);
end;

function  TProjectApplication.GanttBarStyleDelete(const Item: WideString): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleDelete(Item);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant; Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant; Row: OleVariant;
                                                From: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant; Row: OleVariant;
                                                From: OleVariant; To_: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant; Row: OleVariant;
                                                From: OleVariant; To_: OleVariant;
                                                BottomText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant; Row: OleVariant;
                                                From: OleVariant; To_: OleVariant;
                                                BottomText: OleVariant; TopText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, TopText, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant; Row: OleVariant;
                                                From: OleVariant; To_: OleVariant;
                                                BottomText: OleVariant; TopText: OleVariant;
                                                LeftText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, TopText, LeftText, EmptyParam,
                                               EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant; Row: OleVariant;
                                                From: OleVariant; To_: OleVariant;
                                                BottomText: OleVariant; TopText: OleVariant;
                                                LeftText: OleVariant; RightText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, TopText, LeftText, RightText,
                                               EmptyParam);
end;

function  TProjectApplication.GanttBarStyleEdit(const Item: WideString; Create: OleVariant;
                                                Name: OleVariant; StartShape: OleVariant;
                                                StartType: OleVariant; StartColor: OleVariant;
                                                MiddleShape: OleVariant; MiddleColor: OleVariant;
                                                MiddlePattern: OleVariant; EndShape: OleVariant;
                                                EndType: OleVariant; EndColor: OleVariant;
                                                ShowFor: OleVariant; Row: OleVariant;
                                                From: OleVariant; To_: OleVariant;
                                                BottomText: OleVariant; TopText: OleVariant;
                                                LeftText: OleVariant; RightText: OleVariant;
                                                InsideText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, TopText, LeftText, RightText,
                                               InsideText);
end;

function  TProjectApplication.PERTBoxStyles: WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant;
                                            Gridlines: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant;
                                            Gridlines: OleVariant; CrossMarks: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant;
                                            Gridlines: OleVariant; CrossMarks: OleVariant;
                                            Field1: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant;
                                            Gridlines: OleVariant; CrossMarks: OleVariant;
                                            Field1: OleVariant; Field2: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1, Field2,
                                           EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant;
                                            Gridlines: OleVariant; CrossMarks: OleVariant;
                                            Field1: OleVariant; Field2: OleVariant;
                                            Field3: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1, Field2,
                                           Field3, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant;
                                            Gridlines: OleVariant; CrossMarks: OleVariant;
                                            Field1: OleVariant; Field2: OleVariant;
                                            Field3: OleVariant; Field4: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1, Field2,
                                           Field3, Field4, EmptyParam);
end;

function  TProjectApplication.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant;
                                            Gridlines: OleVariant; CrossMarks: OleVariant;
                                            Field1: OleVariant; Field2: OleVariant;
                                            Field3: OleVariant; Field4: OleVariant;
                                            Field5: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1, Field2,
                                           Field3, Field4, Field5);
end;

function  TProjectApplication.PERTSetTask: WordBool;
begin
  Result := DefaultInterface.PERTSetTask(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTSetTask(Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTSetTask(Create: OleVariant; Move: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, Move, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, Move, TaskID, EmptyParam, EmptyParam);
end;

function  TProjectApplication.PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                                          XPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, Move, TaskID, XPosition, EmptyParam);
end;

function  TProjectApplication.PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                                          XPosition: OleVariant; YPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, Move, TaskID, XPosition, YPosition);
end;

function  TProjectApplication.ResourceGraphBarStyles: WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant;
                                                     TopRightColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant;
                                                     TopRightColor: OleVariant;
                                                     TopRightPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant;
                                                     TopRightColor: OleVariant;
                                                     TopRightPattern: OleVariant;
                                                     BottomRightShowAs: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant;
                                                     TopRightColor: OleVariant;
                                                     TopRightPattern: OleVariant;
                                                     BottomRightShowAs: OleVariant;
                                                     BottomRightColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant;
                                                     TopRightColor: OleVariant;
                                                     TopRightPattern: OleVariant;
                                                     BottomRightShowAs: OleVariant;
                                                     BottomRightColor: OleVariant;
                                                     BottomRightPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    BottomRightPattern, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant;
                                                     TopRightColor: OleVariant;
                                                     TopRightPattern: OleVariant;
                                                     BottomRightShowAs: OleVariant;
                                                     BottomRightColor: OleVariant;
                                                     BottomRightPattern: OleVariant;
                                                     ShowValues: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    BottomRightPattern, ShowValues, EmptyParam,
                                                    EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant;
                                                     TopRightColor: OleVariant;
                                                     TopRightPattern: OleVariant;
                                                     BottomRightShowAs: OleVariant;
                                                     BottomRightColor: OleVariant;
                                                     BottomRightPattern: OleVariant;
                                                     ShowValues: OleVariant;
                                                     ShowAvailabilityLine: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    BottomRightPattern, ShowValues,
                                                    ShowAvailabilityLine, EmptyParam);
end;

function  TProjectApplication.ResourceGraphBarStyles(TopLeftShowAs: OleVariant;
                                                     TopLeftColor: OleVariant;
                                                     TopLeftPattern: OleVariant;
                                                     BottomLeftShowAs: OleVariant;
                                                     BottomLeftColor: OleVariant;
                                                     BottomLeftPattern: OleVariant;
                                                     TopRightShowAs: OleVariant;
                                                     TopRightColor: OleVariant;
                                                     TopRightPattern: OleVariant;
                                                     BottomRightShowAs: OleVariant;
                                                     BottomRightColor: OleVariant;
                                                     BottomRightPattern: OleVariant;
                                                     ShowValues: OleVariant;
                                                     ShowAvailabilityLine: OleVariant;
                                                     PercentBarOverlap: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    BottomRightPattern, ShowValues,
                                                    ShowAvailabilityLine, PercentBarOverlap);
end;

function  TProjectApplication.ConsolidateProjects(Filenames: OleVariant; NewWindow: OleVariant;
                                                  AttachToSources: OleVariant;
                                                  PoolResources: OleVariant;
                                                  HideSubtasks: OleVariant; openPool: PjPoolOpen;
                                                  UserID: OleVariant; Password: OleVariant): WordBool;
begin
  Result := DefaultInterface.ConsolidateProjects(Filenames, NewWindow, AttachToSources,
                                                 PoolResources, HideSubtasks, openPool, UserID,
                                                 Password);
end;

function  TProjectApplication.Organizer(Type_: PjOrganizer): WordBool;
begin
  Result := DefaultInterface.Organizer(Type_, EmptyParam);
end;

function  TProjectApplication.Organizer(Type_: PjOrganizer; Task: OleVariant): WordBool;
begin
  Result := DefaultInterface.Organizer(Type_, Task);
end;

function  TProjectApplication.OrganizerMoveItem: WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TProjectApplication.OrganizerMoveItem(Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, FileName, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant;
                                                ToFileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, FileName, ToFileName, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant;
                                                ToFileName: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, FileName, ToFileName, Name, EmptyParam);
end;

function  TProjectApplication.OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant;
                                                ToFileName: OleVariant; Name: OleVariant;
                                                Task: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, FileName, ToFileName, Name, Task);
end;

function  TProjectApplication.OrganizerDeleteItem: WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OrganizerDeleteItem(Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(Type_, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(Type_, FileName, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant;
                                                  Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(Type_, FileName, Name, EmptyParam);
end;

function  TProjectApplication.OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant;
                                                  Name: OleVariant; Task: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(Type_, FileName, Name, Task);
end;

function  TProjectApplication.OrganizerRenameItem: WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam);
end;

function  TProjectApplication.OrganizerRenameItem(Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam);
end;

function  TProjectApplication.OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, FileName, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant;
                                                  Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, FileName, Name, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant;
                                                  Name: OleVariant; NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, FileName, Name, NewName, EmptyParam);
end;

function  TProjectApplication.OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant;
                                                  Name: OleVariant; NewName: OleVariant;
                                                  Task: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, FileName, Name, NewName, Task);
end;

function  TProjectApplication.RecurringTaskInsert: WordBool;
begin
  Result := DefaultInterface.RecurringTaskInsert;
end;

function  TProjectApplication.CalendarTimescale: WordBool;
begin
  Result := DefaultInterface.CalendarTimescale;
end;

function  TProjectApplication.CalendarDateBoxes: WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateBoxes(TopLeft: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                                BottomLeft: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                                BottomLeft: OleVariant; BottomRight: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                                BottomLeft: OleVariant; BottomRight: OleVariant;
                                                TopColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               TopColor, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                                BottomLeft: OleVariant; BottomRight: OleVariant;
                                                TopColor: OleVariant; BottomColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               TopColor, BottomColor, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                                BottomLeft: OleVariant; BottomRight: OleVariant;
                                                TopColor: OleVariant; BottomColor: OleVariant;
                                                TopPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               TopColor, BottomColor, TopPattern, EmptyParam);
end;

function  TProjectApplication.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                                BottomLeft: OleVariant; BottomRight: OleVariant;
                                                TopColor: OleVariant; BottomColor: OleVariant;
                                                TopPattern: OleVariant; BottomPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               TopColor, BottomColor, TopPattern, BottomPattern);
end;

function  TProjectApplication.CalendarWeekHeadings: WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.CalendarWeekHeadings(MonthTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, WeekTitle, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                                   DayTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, WeekTitle, DayTitle, EmptyParam,
                                                  EmptyParam);
end;

function  TProjectApplication.CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                                   DayTitle: OleVariant; ShowPreview: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, WeekTitle, DayTitle, ShowPreview,
                                                  EmptyParam);
end;

function  TProjectApplication.CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                                   DayTitle: OleVariant; ShowPreview: OleVariant;
                                                   DaysPerWeek: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, WeekTitle, DayTitle, ShowPreview,
                                                  DaysPerWeek);
end;

function  TProjectApplication.CalendarDateShadingEdit(Item: PjCalendarShading): WordBool;
begin
  Result := DefaultInterface.CalendarDateShadingEdit(Item, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShadingEdit(Item, Pattern, EmptyParam);
end;

function  TProjectApplication.CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant;
                                                      Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShadingEdit(Item, Pattern, Color);
end;

function  TProjectApplication.CalendarDateShading: WordBool;
begin
  Result := DefaultInterface.CalendarDateShading(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateShading(BaseCalendarName: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShading(BaseCalendarName, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarDateShading(BaseCalendarName: OleVariant;
                                                  ResourceUniqueID: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShading(BaseCalendarName, ResourceUniqueID, EmptyParam);
end;

function  TProjectApplication.CalendarDateShading(BaseCalendarName: OleVariant;
                                                  ResourceUniqueID: OleVariant;
                                                  ProjectIndex: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShading(BaseCalendarName, ResourceUniqueID, ProjectIndex);
end;

function  TProjectApplication.ZoomCalendar: WordBool;
begin
  Result := DefaultInterface.ZoomCalendar(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ZoomCalendar(NumWeeks: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomCalendar(NumWeeks, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomCalendar(NumWeeks, StartDate, EmptyParam);
end;

function  TProjectApplication.ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant;
                                           EndDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomCalendar(NumWeeks, StartDate, EndDate);
end;

function  TProjectApplication.CalendarLayout: WordBool;
begin
  Result := DefaultInterface.CalendarLayout(EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarLayout(SortOrder: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarLayout(SortOrder, EmptyParam);
end;

function  TProjectApplication.CalendarLayout(SortOrder: OleVariant; AutoLayout: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarLayout(SortOrder, AutoLayout);
end;

function  TProjectApplication.CalendarBarStyles: WordBool;
begin
  Result := DefaultInterface.CalendarBarStyles(EmptyParam);
end;

function  TProjectApplication.CalendarBarStyles(BarRounding: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStyles(BarRounding);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant; Wrap: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant; Wrap: OleVariant;
                                                    Shadow: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant; Wrap: OleVariant;
                                                    Shadow: OleVariant; Field1: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant; Wrap: OleVariant;
                                                    Shadow: OleVariant; Field1: OleVariant;
                                                    Field2: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant; Wrap: OleVariant;
                                                    Shadow: OleVariant; Field1: OleVariant;
                                                    Field2: OleVariant; Field3: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, Field3, EmptyParam, EmptyParam,
                                                   EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant; Wrap: OleVariant;
                                                    Shadow: OleVariant; Field1: OleVariant;
                                                    Field2: OleVariant; Field3: OleVariant;
                                                    Field4: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, Field3, Field4, EmptyParam,
                                                   EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant; Wrap: OleVariant;
                                                    Shadow: OleVariant; Field1: OleVariant;
                                                    Field2: OleVariant; Field3: OleVariant;
                                                    Field4: OleVariant; Field5: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, Field3, Field4, Field5,
                                                   EmptyParam);
end;

function  TProjectApplication.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant;
                                                    Pattern: OleVariant; Color: OleVariant;
                                                    Align: OleVariant; Wrap: OleVariant;
                                                    Shadow: OleVariant; Field1: OleVariant;
                                                    Field2: OleVariant; Field3: OleVariant;
                                                    Field4: OleVariant; Field5: OleVariant;
                                                    SplitPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, Field3, Field4, Field5,
                                                   SplitPattern);
end;

function  TProjectApplication.CalendarBestFitWeekHeight: WordBool;
begin
  Result := DefaultInterface.CalendarBestFitWeekHeight;
end;

function  TProjectApplication.DrawingCreate(Type_: PjShape): WordBool;
begin
  Result := DefaultInterface.DrawingCreate(Type_, EmptyParam);
end;

function  TProjectApplication.DrawingCreate(Type_: PjShape; Behind: OleVariant): WordBool;
begin
  Result := DefaultInterface.DrawingCreate(Type_, Behind);
end;

function  TProjectApplication.DrawingMove: WordBool;
begin
  Result := DefaultInterface.DrawingMove(EmptyParam, EmptyParam);
end;

function  TProjectApplication.DrawingMove(Forward: OleVariant): WordBool;
begin
  Result := DefaultInterface.DrawingMove(Forward, EmptyParam);
end;

function  TProjectApplication.DrawingMove(Forward: OleVariant; Full: OleVariant): WordBool;
begin
  Result := DefaultInterface.DrawingMove(Forward, Full);
end;

function  TProjectApplication.DrawingReshape: WordBool;
begin
  Result := DefaultInterface.DrawingReshape;
end;

function  TProjectApplication.DrawingProperties: WordBool;
begin
  Result := DefaultInterface.DrawingProperties(EmptyParam);
end;

function  TProjectApplication.DrawingProperties(SizePositionTab: OleVariant): WordBool;
begin
  Result := DefaultInterface.DrawingProperties(SizePositionTab);
end;

function  TProjectApplication.DrawingCycleColor: WordBool;
begin
  Result := DefaultInterface.DrawingCycleColor;
end;

function  TProjectApplication.FormatCopy: WordBool;
begin
  Result := DefaultInterface.FormatCopy;
end;

function  TProjectApplication.FormatPaste: WordBool;
begin
  Result := DefaultInterface.FormatPaste;
end;

function  TProjectApplication.FormatPainter: WordBool;
begin
  Result := DefaultInterface.FormatPainter;
end;

function  TProjectApplication.Toolbars: WordBool;
begin
  Result := DefaultInterface.Toolbars(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Toolbars(Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.Toolbars(Action, EmptyParam, EmptyParam);
end;

function  TProjectApplication.Toolbars(Action: OleVariant; ToolbarName: OleVariant): WordBool;
begin
  Result := DefaultInterface.Toolbars(Action, ToolbarName, EmptyParam);
end;

function  TProjectApplication.Toolbars(Action: OleVariant; ToolbarName: OleVariant;
                                       NewToolbarName: OleVariant): WordBool;
begin
  Result := DefaultInterface.Toolbars(Action, ToolbarName, NewToolbarName);
end;

function  TProjectApplication.ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.ToolbarInsertTool(const ToolbarName: WideString;
                                                ButtonIndex: Smallint; Command: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, Command, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.ToolbarInsertTool(const ToolbarName: WideString;
                                                ButtonIndex: Smallint; Command: OleVariant;
                                                FaceIndex: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                               EmptyParam, EmptyParam);
end;

function  TProjectApplication.ToolbarInsertTool(const ToolbarName: WideString;
                                                ButtonIndex: Smallint; Command: OleVariant;
                                                FaceIndex: OleVariant; Description: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                               Description, EmptyParam);
end;

function  TProjectApplication.ToolbarInsertTool(const ToolbarName: WideString;
                                                ButtonIndex: Smallint; Command: OleVariant;
                                                FaceIndex: OleVariant; Description: OleVariant;
                                                ToolTip: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                               Description, ToolTip);
end;

function  TProjectApplication.ToolbarDeleteTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
begin
  Result := DefaultInterface.ToolbarDeleteTool(ToolbarName, ButtonIndex);
end;

function  TProjectApplication.ToolbarsCustomize: WordBool;
begin
  Result := DefaultInterface.ToolbarsCustomize;
end;

function  TProjectApplication.ToolbarCustomizeTool: WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.ToolbarCustomizeTool(ToolbarName: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.ToolbarCustomizeTool(ToolbarName: OleVariant;
                                                   ButtonIndex: OleVariant; Command: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, Command, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.ToolbarCustomizeTool(ToolbarName: OleVariant;
                                                   ButtonIndex: OleVariant; Command: OleVariant;
                                                   FaceIndex: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                                  EmptyParam, EmptyParam);
end;

function  TProjectApplication.ToolbarCustomizeTool(ToolbarName: OleVariant;
                                                   ButtonIndex: OleVariant; Command: OleVariant;
                                                   FaceIndex: OleVariant; Description: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                                  Description, EmptyParam);
end;

function  TProjectApplication.ToolbarCustomizeTool(ToolbarName: OleVariant;
                                                   ButtonIndex: OleVariant; Command: OleVariant;
                                                   FaceIndex: OleVariant; Description: OleVariant;
                                                   ToolTip: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                                  Description, ToolTip);
end;

function  TProjectApplication.ToolbarCopyToolFace(const ToolbarName: WideString;
                                                  ButtonIndex: Smallint): WordBool;
begin
  Result := DefaultInterface.ToolbarCopyToolFace(ToolbarName, ButtonIndex);
end;

function  TProjectApplication.ToolbarPasteToolFace(const ToolbarName: WideString;
                                                   ButtonIndex: Smallint): WordBool;
begin
  Result := DefaultInterface.ToolbarPasteToolFace(ToolbarName, ButtonIndex);
end;

function  TProjectApplication.FontBold: WordBool;
begin
  Result := DefaultInterface.FontBold(EmptyParam);
end;

function  TProjectApplication.FontBold(Set_: OleVariant): WordBool;
begin
  Result := DefaultInterface.FontBold(Set_);
end;

function  TProjectApplication.FontItalic: WordBool;
begin
  Result := DefaultInterface.FontItalic(EmptyParam);
end;

function  TProjectApplication.FontItalic(Set_: OleVariant): WordBool;
begin
  Result := DefaultInterface.FontItalic(Set_);
end;

function  TProjectApplication.FontUnderLine: WordBool;
begin
  Result := DefaultInterface.FontUnderLine(EmptyParam);
end;

function  TProjectApplication.FontUnderLine(Set_: OleVariant): WordBool;
begin
  Result := DefaultInterface.FontUnderLine(Set_);
end;

function  TProjectApplication.ColumnAlignment(Align: PjAlignment): WordBool;
begin
  Result := DefaultInterface.ColumnAlignment(Align);
end;

function  TProjectApplication.Reports: WordBool;
begin
  Result := DefaultInterface.Reports;
end;

function  TProjectApplication.TipOfTheDay: WordBool;
begin
  Result := DefaultInterface.TipOfTheDay;
end;

function  TProjectApplication.FindFile: WordBool;
begin
  Result := DefaultInterface.FindFile;
end;

function  TProjectApplication.MailUpdateProject(const DataFile: WideString): WordBool;
begin
  Result := DefaultInterface.MailUpdateProject(DataFile);
end;

function  TProjectApplication.MailSendProjectMail: WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendProjectMail(MessageType: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                                  Body: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                                  Body: OleVariant; Fields: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                                  Body: OleVariant; Fields: OleVariant;
                                                  UpdateAsOf: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, UpdateAsOf,
                                                 EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                                  Body: OleVariant; Fields: OleVariant;
                                                  UpdateAsOf: OleVariant; ShowDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, UpdateAsOf,
                                                 ShowDialog, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                                  Body: OleVariant; Fields: OleVariant;
                                                  UpdateAsOf: OleVariant; ShowDialog: OleVariant;
                                                  InstallationMessage: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, UpdateAsOf,
                                                 ShowDialog, InstallationMessage, EmptyParam);
end;

function  TProjectApplication.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                                  Body: OleVariant; Fields: OleVariant;
                                                  UpdateAsOf: OleVariant; ShowDialog: OleVariant;
                                                  InstallationMessage: OleVariant;
                                                  UpdateFrom: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, UpdateAsOf,
                                                 ShowDialog, InstallationMessage, UpdateFrom);
end;

function  TProjectApplication.WebInbox: WordBool;
begin
  Result := DefaultInterface.WebInbox;
end;

function  TProjectApplication.GanttChartWizard: WordBool;
begin
  Result := DefaultInterface.GanttChartWizard;
end;

function  TProjectApplication.DrawingToolbarShow: WordBool;
begin
  Result := DefaultInterface.DrawingToolbarShow;
end;

function  TProjectApplication.ReminderSet: WordBool;
begin
  Result := DefaultInterface.ReminderSet(EmptyParam, EmptyParam);
end;

function  TProjectApplication.ReminderSet(Start: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReminderSet(Start, EmptyParam);
end;

function  TProjectApplication.ReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReminderSet(Start, LeadTime);
end;

function  TProjectApplication.SchedulePlusReminderSet: WordBool;
begin
  Result := DefaultInterface.SchedulePlusReminderSet(EmptyParam, EmptyParam);
end;

function  TProjectApplication.SchedulePlusReminderSet(Start: OleVariant): WordBool;
begin
  Result := DefaultInterface.SchedulePlusReminderSet(Start, EmptyParam);
end;

function  TProjectApplication.SchedulePlusReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool;
begin
  Result := DefaultInterface.SchedulePlusReminderSet(Start, LeadTime);
end;

function  TProjectApplication.CalendarTaskList: WordBool;
begin
  Result := DefaultInterface.CalendarTaskList(EmptyParam);
end;

function  TProjectApplication.CalendarTaskList(Date: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarTaskList(Date);
end;

function  TProjectApplication.OutlineSymbolsToggle: WordBool;
begin
  Result := DefaultInterface.OutlineSymbolsToggle(EmptyParam);
end;

function  TProjectApplication.OutlineSymbolsToggle(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.OutlineSymbolsToggle(Show);
end;

function  TProjectApplication.ResourceSharingPoolAction(Action: PjPoolAction): WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolAction(Action, EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolAction(Action, FileName, EmptyParam);
end;

function  TProjectApplication.ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant;
                                                        ReadOnly: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolAction(Action, FileName, ReadOnly);
end;

function  TProjectApplication.ResourceAddressBook: WordBool;
begin
  Result := DefaultInterface.ResourceAddressBook;
end;

function  TProjectApplication.ResourceDetails: WordBool;
begin
  Result := DefaultInterface.ResourceDetails(EmptyParam);
end;

function  TProjectApplication.ResourceDetails(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceDetails(Name);
end;

function  TProjectApplication.MailProjectMailCustomize: WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailProjectMailCustomize(Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                                       FieldID: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, FieldID, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TProjectApplication.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                                       FieldID: OleVariant; Title: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, FieldID, Title, EmptyParam,
                                                      EmptyParam);
end;

function  TProjectApplication.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                                       FieldID: OleVariant; Title: OleVariant;
                                                       IncludeInTeamStatus: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, FieldID, Title,
                                                      IncludeInTeamStatus, EmptyParam);
end;

function  TProjectApplication.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                                       FieldID: OleVariant; Title: OleVariant;
                                                       IncludeInTeamStatus: OleVariant;
                                                       Editable: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, FieldID, Title,
                                                      IncludeInTeamStatus, Editable);
end;

function  TProjectApplication.FileQuit(Save: PjSaveType): WordBool;
begin
  Result := DefaultInterface.FileQuit(Save);
end;

function  TProjectApplication.About: WordBool;
begin
  Result := DefaultInterface.About;
end;

function  TProjectApplication.DetailStylesProperties: WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DetailStylesProperties(AlignCellData: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(AlignCellData, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TProjectApplication.DetailStylesProperties(AlignCellData: OleVariant;
                                                     RepeatRowLabel: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(AlignCellData, RepeatRowLabel, EmptyParam,
                                                    EmptyParam);
end;

function  TProjectApplication.DetailStylesProperties(AlignCellData: OleVariant;
                                                     RepeatRowLabel: OleVariant;
                                                     ShortLabels: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(AlignCellData, RepeatRowLabel, ShortLabels,
                                                    EmptyParam);
end;

function  TProjectApplication.DetailStylesProperties(AlignCellData: OleVariant;
                                                     RepeatRowLabel: OleVariant;
                                                     ShortLabels: OleVariant;
                                                     DisplayDetailsColumn: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(AlignCellData, RepeatRowLabel, ShortLabels,
                                                    DisplayDetailsColumn);
end;

function  TProjectApplication.DetailStylesToggleItem(Item: PjTimescaledData): WordBool;
begin
  Result := DefaultInterface.DetailStylesToggleItem(Item);
end;

function  TProjectApplication.AutoFilter: WordBool;
begin
  Result := DefaultInterface.AutoFilter;
end;

function  TProjectApplication.ViewBar: WordBool;
begin
  Result := DefaultInterface.ViewBar;
end;

function  TProjectApplication.MacroShowVba: WordBool;
begin
  Result := DefaultInterface.MacroShowVba;
end;

function  TProjectApplication.MacroShowCode: WordBool;
begin
  Result := DefaultInterface.MacroShowCode;
end;

function  TProjectApplication.WebGoBack: WordBool;
begin
  Result := DefaultInterface.WebGoBack;
end;

function  TProjectApplication.WebGoForward: WordBool;
begin
  Result := DefaultInterface.WebGoForward;
end;

function  TProjectApplication.WebStopLoading: WordBool;
begin
  Result := DefaultInterface.WebStopLoading;
end;

function  TProjectApplication.WebRefresh: WordBool;
begin
  Result := DefaultInterface.WebRefresh;
end;

function  TProjectApplication.WebOpenStartPage: WordBool;
begin
  Result := DefaultInterface.WebOpenStartPage;
end;

function  TProjectApplication.WebOpenSearchPage: WordBool;
begin
  Result := DefaultInterface.WebOpenSearchPage;
end;

function  TProjectApplication.WebHideToolbars: WordBool;
begin
  Result := DefaultInterface.WebHideToolbars(EmptyParam);
end;

function  TProjectApplication.WebHideToolbars(Hide: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebHideToolbars(Hide);
end;

function  TProjectApplication.FollowHyperlink: WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FollowHyperlink(Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(Address, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FollowHyperlink(Address: OleVariant; SubAddress: OleVariant): WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(Address, SubAddress, EmptyParam, EmptyParam);
end;

function  TProjectApplication.FollowHyperlink(Address: OleVariant; SubAddress: OleVariant;
                                              AddHistory: OleVariant): WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(Address, SubAddress, AddHistory, EmptyParam);
end;

function  TProjectApplication.FollowHyperlink(Address: OleVariant; SubAddress: OleVariant;
                                              AddHistory: OleVariant; NewWindow: OleVariant): WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(Address, SubAddress, AddHistory, NewWindow);
end;

function  TProjectApplication.EditPasteAsHyperlink: WordBool;
begin
  Result := DefaultInterface.EditPasteAsHyperlink;
end;

function  TProjectApplication.InsertHyperlink: WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.InsertHyperlink(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(Name, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.InsertHyperlink(Name: OleVariant; Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(Name, Address, EmptyParam, EmptyParam);
end;

function  TProjectApplication.InsertHyperlink(Name: OleVariant; Address: OleVariant;
                                              SubAddress: OleVariant): WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(Name, Address, SubAddress, EmptyParam);
end;

function  TProjectApplication.InsertHyperlink(Name: OleVariant; Address: OleVariant;
                                              SubAddress: OleVariant; ScreenTip: OleVariant): WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(Name, Address, SubAddress, ScreenTip);
end;

function  TProjectApplication.EditHyperlink: WordBool;
begin
  Result := DefaultInterface.EditHyperlink(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditHyperlink(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditHyperlink(Name, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditHyperlink(Name: OleVariant; Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditHyperlink(Name, Address, EmptyParam, EmptyParam);
end;

function  TProjectApplication.EditHyperlink(Name: OleVariant; Address: OleVariant;
                                            SubAddress: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditHyperlink(Name, Address, SubAddress, EmptyParam);
end;

function  TProjectApplication.EditHyperlink(Name: OleVariant; Address: OleVariant;
                                            SubAddress: OleVariant; ScreenTip: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditHyperlink(Name, Address, SubAddress, ScreenTip);
end;

function  TProjectApplication.WebOpenHyperlink: WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.WebOpenHyperlink(Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(Address, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(Address, SubAddress, EmptyParam, EmptyParam);
end;

function  TProjectApplication.WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant;
                                               AddHistory: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(Address, SubAddress, AddHistory, EmptyParam);
end;

function  TProjectApplication.WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant;
                                               AddHistory: OleVariant; NewWindow: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(Address, SubAddress, AddHistory, NewWindow);
end;

function  TProjectApplication.WebCopyHyperlink: WordBool;
begin
  Result := DefaultInterface.WebCopyHyperlink;
end;

function  TProjectApplication.WebAddToFavorites: WordBool;
begin
  Result := DefaultInterface.WebAddToFavorites(EmptyParam);
end;

function  TProjectApplication.WebAddToFavorites(CurrentLink: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebAddToFavorites(CurrentLink);
end;

function  TProjectApplication.EditClearHyperlink: WordBool;
begin
  Result := DefaultInterface.EditClearHyperlink;
end;

function  TProjectApplication.WebSetStartPage: WordBool;
begin
  Result := DefaultInterface.WebSetStartPage(EmptyParam);
end;

function  TProjectApplication.WebSetStartPage(Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebSetStartPage(Address);
end;

function  TProjectApplication.WebSetSearchPage: WordBool;
begin
  Result := DefaultInterface.WebSetSearchPage(EmptyParam);
end;

function  TProjectApplication.WebSetSearchPage(Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebSetSearchPage(Address);
end;

function  TProjectApplication.WebOpenFavorites: WordBool;
begin
  Result := DefaultInterface.WebOpenFavorites;
end;

function  TProjectApplication.WebToolbar: WordBool;
begin
  Result := DefaultInterface.WebToolbar(EmptyParam);
end;

function  TProjectApplication.WebToolbar(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebToolbar(Show);
end;

function  TProjectApplication.SplitTask: WordBool;
begin
  Result := DefaultInterface.SplitTask(EmptyParam);
end;

function  TProjectApplication.SplitTask(Lock: OleVariant): WordBool;
begin
  Result := DefaultInterface.SplitTask(Lock);
end;

function  TProjectApplication.CustomFieldRename(FieldID: PjCustomField; const NewName: WideString): WordBool;
begin
  Result := DefaultInterface.CustomFieldRename(FieldID, NewName, EmptyParam);
end;

function  TProjectApplication.CustomFieldRename(FieldID: PjCustomField; const NewName: WideString;
                                                Phonetic: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldRename(FieldID, NewName, Phonetic);
end;

function  TProjectApplication.CustomizeField: WordBool;
begin
  Result := DefaultInterface.CustomizeField;
end;

function  TProjectApplication.GanttShowBarSplits: WordBool;
begin
  Result := DefaultInterface.GanttShowBarSplits(EmptyParam);
end;

function  TProjectApplication.GanttShowBarSplits(Display: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttShowBarSplits(Display);
end;

function  TProjectApplication.CalendarShowBarSplits: WordBool;
begin
  Result := DefaultInterface.CalendarShowBarSplits(EmptyParam);
end;

function  TProjectApplication.CalendarShowBarSplits(Display: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarShowBarSplits(Display);
end;

function  TProjectApplication.MapEdit: WordBool;
begin
  Result := DefaultInterface.MapEdit(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant;
                                      HeaderRow: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant;
                                      HeaderRow: OleVariant; AssignmentData: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant;
                                      HeaderRow: OleVariant; AssignmentData: OleVariant;
                                      TextDelimiter: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant;
                                      HeaderRow: OleVariant; AssignmentData: OleVariant;
                                      TextDelimiter: OleVariant; TextFileOrigin: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant;
                                      HeaderRow: OleVariant; AssignmentData: OleVariant;
                                      TextDelimiter: OleVariant; TextFileOrigin: OleVariant;
                                      UseHtmlTemplate: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin,
                                     UseHtmlTemplate, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant;
                                      HeaderRow: OleVariant; AssignmentData: OleVariant;
                                      TextDelimiter: OleVariant; TextFileOrigin: OleVariant;
                                      UseHtmlTemplate: OleVariant; TemplateFile: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin,
                                     UseHtmlTemplate, TemplateFile, EmptyParam, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant;
                                      HeaderRow: OleVariant; AssignmentData: OleVariant;
                                      TextDelimiter: OleVariant; TextFileOrigin: OleVariant;
                                      UseHtmlTemplate: OleVariant; TemplateFile: OleVariant;
                                      IncludeImage: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin,
                                     UseHtmlTemplate, TemplateFile, IncludeImage, EmptyParam);
end;

function  TProjectApplication.MapEdit(Name: OleVariant; Create: OleVariant;
                                      OverwriteExisting: OleVariant; NewName: OleVariant;
                                      DataCategory: OleVariant; CategoryEnabled: OleVariant;
                                      TableName: OleVariant; FieldName: OleVariant;
                                      ExternalFieldName: OleVariant; ExportFilter: OleVariant;
                                      ImportMethod: OleVariant; MergeKey: OleVariant;
                                      HeaderRow: OleVariant; AssignmentData: OleVariant;
                                      TextDelimiter: OleVariant; TextFileOrigin: OleVariant;
                                      UseHtmlTemplate: OleVariant; TemplateFile: OleVariant;
                                      IncludeImage: OleVariant; ImageFile: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin,
                                     UseHtmlTemplate, TemplateFile, IncludeImage, ImageFile);
end;

function  TProjectApplication.FillAcross: WordBool;
begin
  Result := DefaultInterface.FillAcross(EmptyParam);
end;

function  TProjectApplication.FillAcross(Right: OleVariant): WordBool;
begin
  Result := DefaultInterface.FillAcross(Right);
end;

function  TProjectApplication.LinksBetweenProjects: WordBool;
begin
  Result := DefaultInterface.LinksBetweenProjects(EmptyParam);
end;

function  TProjectApplication.LinksBetweenProjects(AcceptAll: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinksBetweenProjects(AcceptAll);
end;

function  TProjectApplication.ToggleAssignments: WordBool;
begin
  Result := DefaultInterface.ToggleAssignments;
end;

function  TProjectApplication.ProgressLines: WordBool;
begin
  Result := DefaultInterface.ProgressLines;
end;

function  TProjectApplication.ResourceSharingPoolUpdate: WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolUpdate(EmptyParam);
end;

function  TProjectApplication.ResourceSharingPoolUpdate(allSharers: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolUpdate(allSharers);
end;

function  TProjectApplication.ResourceSharingPoolRefresh: WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolRefresh;
end;

function  TProjectApplication.WebHelp: WordBool;
begin
  Result := DefaultInterface.WebHelp(EmptyParam);
end;

function  TProjectApplication.WebHelp(Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebHelp(Type_);
end;

function  TProjectApplication.AddProgressLine: WordBool;
begin
  Result := DefaultInterface.AddProgressLine;
end;

function  TProjectApplication.CustomizeIMEMode(FieldID: PjField; IMEMode: PjIMEMode): WordBool;
begin
  Result := DefaultInterface.CustomizeIMEMode(FieldID, IMEMode);
end;

function  TProjectApplication.DeleteFromDatabase: WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DeleteFromDatabase(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(Name, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DeleteFromDatabase(Name: OleVariant; UserID: OleVariant): WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(Name, UserID, EmptyParam, EmptyParam);
end;

function  TProjectApplication.DeleteFromDatabase(Name: OleVariant; UserID: OleVariant;
                                                 DatabasePassWord: OleVariant): WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(Name, UserID, DatabasePassWord, EmptyParam);
end;

function  TProjectApplication.DeleteFromDatabase(Name: OleVariant; UserID: OleVariant;
                                                 DatabasePassWord: OleVariant; FormatID: OleVariant): WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(Name, UserID, DatabasePassWord, FormatID);
end;

function  TProjectApplication.WBSCodeRenumber: WordBool;
begin
  Result := DefaultInterface.WBSCodeRenumber(EmptyParam);
end;

function  TProjectApplication.WBSCodeRenumber(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.WBSCodeRenumber(All);
end;

function  TProjectApplication.WBSCodeMaskEdit(CodePrefix: OleVariant; Level: OleVariant;
                                              Sequence: PjWBSSequence; Length: OleVariant;
                                              Separator: OleVariant; CodeGenerate: OleVariant;
                                              VerifyUniqueness: OleVariant): WordBool;
begin
  Result := DefaultInterface.WBSCodeMaskEdit(CodePrefix, Level, Sequence, Length, Separator,
                                             CodeGenerate, VerifyUniqueness);
end;

function  TProjectApplication.CustomOutlineCodeEdit(FieldID: PjCustomField; Level: OleVariant;
                                                    Sequence: PjCustomOutlineCodeSequence;
                                                    Length: OleVariant; Separator: OleVariant;
                                                    OnlyLookUpTableCodes: OleVariant;
                                                    OnlyCompleteCodes: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomOutlineCodeEdit(FieldID, Level, Sequence, Length, Separator,
                                                   OnlyLookUpTableCodes, OnlyCompleteCodes);
end;

function  TProjectApplication.OptionsSave: WordBool;
begin
  Result := DefaultInterface.OptionsSave(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant;
                                          DefaultUserTemplatesPath: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant;
                                          DefaultUserTemplatesPath: OleVariant;
                                          DefaultWorkgroupTemplatesPath: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant;
                                          DefaultUserTemplatesPath: OleVariant;
                                          DefaultWorkgroupTemplatesPath: OleVariant;
                                          ExpandDatabaseTimephasedData: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant;
                                          DefaultUserTemplatesPath: OleVariant;
                                          DefaultWorkgroupTemplatesPath: OleVariant;
                                          ExpandDatabaseTimephasedData: OleVariant;
                                          AutomaticSave: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant;
                                          DefaultUserTemplatesPath: OleVariant;
                                          DefaultWorkgroupTemplatesPath: OleVariant;
                                          ExpandDatabaseTimephasedData: OleVariant;
                                          AutomaticSave: OleVariant;
                                          AutomaticSaveInterval: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave,
                                         AutomaticSaveInterval, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant;
                                          DefaultUserTemplatesPath: OleVariant;
                                          DefaultWorkgroupTemplatesPath: OleVariant;
                                          ExpandDatabaseTimephasedData: OleVariant;
                                          AutomaticSave: OleVariant;
                                          AutomaticSaveInterval: OleVariant;
                                          AutomaticSaveOptions: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave,
                                         AutomaticSaveInterval, AutomaticSaveOptions, EmptyParam,
                                         EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant;
                                          DefaultUserTemplatesPath: OleVariant;
                                          DefaultWorkgroupTemplatesPath: OleVariant;
                                          ExpandDatabaseTimephasedData: OleVariant;
                                          AutomaticSave: OleVariant;
                                          AutomaticSaveInterval: OleVariant;
                                          AutomaticSaveOptions: OleVariant;
                                          AutomaticSavePrompt: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave,
                                         AutomaticSaveInterval, AutomaticSaveOptions,
                                         AutomaticSavePrompt, EmptyParam);
end;

function  TProjectApplication.OptionsSave(DefaultSaveFormat: OleVariant;
                                          DefaultProjectsPath: OleVariant;
                                          DefaultUserTemplatesPath: OleVariant;
                                          DefaultWorkgroupTemplatesPath: OleVariant;
                                          ExpandDatabaseTimephasedData: OleVariant;
                                          AutomaticSave: OleVariant;
                                          AutomaticSaveInterval: OleVariant;
                                          AutomaticSaveOptions: OleVariant;
                                          AutomaticSavePrompt: OleVariant;
                                          SetDefaultsDatabase: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave,
                                         AutomaticSaveInterval, AutomaticSaveOptions,
                                         AutomaticSavePrompt, SetDefaultsDatabase);
end;

function  TProjectApplication.OfficeOnTheWeb: WordBool;
begin
  Result := DefaultInterface.OfficeOnTheWeb;
end;

function  TProjectApplication.FixMe: WordBool;
begin
  Result := DefaultInterface.FixMe;
end;

function  TProjectApplication.ViewShowWorkAvailability: WordBool;
begin
  Result := DefaultInterface.ViewShowWorkAvailability;
end;

function  TProjectApplication.ViewShowUnitAvailability: WordBool;
begin
  Result := DefaultInterface.ViewShowUnitAvailability;
end;

function  TProjectApplication.BaselineClear: WordBool;
begin
  Result := DefaultInterface.BaselineClear(EmptyParam, EmptyParam);
end;

function  TProjectApplication.BaselineClear(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineClear(All, EmptyParam);
end;

function  TProjectApplication.BaselineClear(All: OleVariant; From: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineClear(All, From);
end;

function  TProjectApplication.Groups: WordBool;
begin
  Result := DefaultInterface.Groups;
end;

function  TProjectApplication.GroupApply: WordBool;
begin
  Result := DefaultInterface.GroupApply(EmptyParam);
end;

function  TProjectApplication.GroupApply(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.GroupApply(Name);
end;

function  TProjectApplication.GroupBy: WordBool;
begin
  Result := DefaultInterface.GroupBy;
end;

function  TProjectApplication.LookUpTableAdd(FieldID: PjCustomField): WordBool;
begin
  Result := DefaultInterface.LookUpTableAdd(FieldID, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant): WordBool;
begin
  Result := DefaultInterface.LookUpTableAdd(FieldID, Level, EmptyParam, EmptyParam);
end;

function  TProjectApplication.LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant;
                                             Code: OleVariant): WordBool;
begin
  Result := DefaultInterface.LookUpTableAdd(FieldID, Level, Code, EmptyParam);
end;

function  TProjectApplication.LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant;
                                             Code: OleVariant; Description: OleVariant): WordBool;
begin
  Result := DefaultInterface.LookUpTableAdd(FieldID, Level, Code, Description);
end;

function  TProjectApplication.BoxStylesEdit(Style: PjBoxStyle; DataTemplate: OleVariant;
                                            HorizontalGridlines: OleVariant;
                                            VerticalGridlines: OleVariant; BorderShape: PjBoxShape;
                                            BorderColor: PjColor; BorderWidth: OleVariant;
                                            BackgroundColor: PjColor;
                                            BackgroundPattern: PjBackgroundPattern): WordBool;
begin
  Result := DefaultInterface.BoxStylesEdit(Style, DataTemplate, HorizontalGridlines,
                                           VerticalGridlines, BorderShape, BorderColor,
                                           BorderWidth, BackgroundColor, BackgroundPattern);
end;

function  TProjectApplication.BoxFormat(ProjectName: OleVariant; TaskID: OleVariant;
                                        DataTemplate: OleVariant; HorizontalGridlines: OleVariant;
                                        VerticalGridlines: OleVariant; BorderShape: PjBoxShape;
                                        BorderColor: PjColor; BorderWidth: OleVariant;
                                        BackgroundColor: PjColor;
                                        BackgroundPattern: PjBackgroundPattern; Reset: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxFormat(ProjectName, TaskID, DataTemplate, HorizontalGridlines,
                                       VerticalGridlines, BorderShape, BorderColor, BorderWidth,
                                       BackgroundColor, BackgroundPattern, Reset);
end;

function  TProjectApplication.BarBoxFormat: WordBool;
begin
  Result := DefaultInterface.BarBoxFormat;
end;

function  TProjectApplication.CreateWebAccount(ServerURL: OleVariant; Name: OleVariant;
                                               AuthenticationType: PjAuthentication;
                                               AccountType: PjAccountType; ShowDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.CreateWebAccount(ServerURL, Name, AuthenticationType, AccountType,
                                              ShowDialog);
end;

function  TProjectApplication.BoxDataTemplate(const Name: WideString; Action: PjDataTemplate): WordBool;
begin
  Result := DefaultInterface.BoxDataTemplate(Name, Action, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BoxDataTemplate(const Name: WideString; Action: PjDataTemplate;
                                              NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxDataTemplate(Name, Action, NewName, EmptyParam);
end;

function  TProjectApplication.BoxDataTemplate(const Name: WideString; Action: PjDataTemplate;
                                              NewName: OleVariant; Overwrite: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxDataTemplate(Name, Action, NewName, Overwrite);
end;

function  TProjectApplication.BoxCellLayout(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BoxCellLayout(const Name: WideString; CellRows: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, CellRows, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BoxCellLayout(const Name: WideString; CellRows: OleVariant;
                                            CellColumns: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, CellRows, CellColumns, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BoxCellLayout(const Name: WideString; CellRows: OleVariant;
                                            CellColumns: OleVariant; CellWidth: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, CellRows, CellColumns, CellWidth, EmptyParam);
end;

function  TProjectApplication.BoxCellLayout(const Name: WideString; CellRows: OleVariant;
                                            CellColumns: OleVariant; CellWidth: OleVariant;
                                            MergeCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, CellRows, CellColumns, CellWidth, MergeCells);
end;

function  TProjectApplication.BoxCellEdit(const Name: WideString; Cell: PjCell; FieldName: PjField;
                                          Font: OleVariant; FontSize: OleVariant;
                                          FontColor: PjColor; Bold: OleVariant; Italic: OleVariant;
                                          Underline: OleVariant; HorizontalAlignment: PjAlignment;
                                          VerticalAlignment: PjVerticalAlignment;
                                          TextLineLimit: OleVariant; ShowLabel: OleVariant;
                                          Label_: OleVariant; DateFormat: PjDateFormat): WordBool;
begin
  Result := DefaultInterface.BoxCellEdit(Name, Cell, FieldName, Font, FontSize, FontColor, Bold,
                                         Italic, Underline, HorizontalAlignment, VerticalAlignment,
                                         TextLineLimit, ShowLabel, Label_, DateFormat);
end;

function  TProjectApplication.ResourceWindowsAccount: WordBool;
begin
  Result := DefaultInterface.ResourceWindowsAccount(EmptyParam, EmptyParam);
end;

function  TProjectApplication.ResourceWindowsAccount(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceWindowsAccount(Name, EmptyParam);
end;

function  TProjectApplication.ResourceWindowsAccount(Name: OleVariant; ShowDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceWindowsAccount(Name, ShowDialog);
end;

function  TProjectApplication.SetRowHeight: WordBool;
begin
  Result := DefaultInterface.SetRowHeight(EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SetRowHeight(Unit_: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetRowHeight(Unit_, EmptyParam, EmptyParam);
end;

function  TProjectApplication.SetRowHeight(Unit_: OleVariant; Rows: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetRowHeight(Unit_, Rows, EmptyParam);
end;

function  TProjectApplication.SetRowHeight(Unit_: OleVariant; Rows: OleVariant;
                                           UseUniqueID: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetRowHeight(Unit_, Rows, UseUniqueID);
end;

function  TProjectApplication.ComAddInsDialog: WordBool;
begin
  Result := DefaultInterface.ComAddInsDialog;
end;

function  TProjectApplication.MacroSecurity: WordBool;
begin
  Result := DefaultInterface.MacroSecurity;
end;

function  TProjectApplication.LayoutSelectionNow: WordBool;
begin
  Result := DefaultInterface.LayoutSelectionNow;
end;

function  TProjectApplication.BoxAlign(Alignment: PjAlign): WordBool;
begin
  Result := DefaultInterface.BoxAlign(Alignment);
end;

function  TProjectApplication.ConvertHangulToHanja: WordBool;
begin
  Result := DefaultInterface.ConvertHangulToHanja;
end;

function  TProjectApplication.UpdateProjectToWeb: WordBool;
begin
  Result := DefaultInterface.UpdateProjectToWeb(EmptyParam);
end;

function  TProjectApplication.UpdateProjectToWeb(ServerURL: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateProjectToWeb(ServerURL);
end;

function  TProjectApplication.CustomFieldProperties(FieldID: PjCustomField;
                                                    Attribute: PjCustomFieldAttribute;
                                                    SummaryCalc: PjSummaryCalc): WordBool;
begin
  Result := DefaultInterface.CustomFieldProperties(FieldID, Attribute, SummaryCalc, EmptyParam);
end;

function  TProjectApplication.CustomFieldProperties(FieldID: PjCustomField;
                                                    Attribute: PjCustomFieldAttribute;
                                                    SummaryCalc: PjSummaryCalc;
                                                    GraphicalIndicators: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldProperties(FieldID, Attribute, SummaryCalc,
                                                   GraphicalIndicators);
end;

function  TProjectApplication.CustomFieldSetFormula(FieldID: PjCustomField): WordBool;
begin
  Result := DefaultInterface.CustomFieldSetFormula(FieldID, EmptyParam);
end;

function  TProjectApplication.CustomFieldSetFormula(FieldID: PjCustomField; Formula: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldSetFormula(FieldID, Formula);
end;

function  TProjectApplication.CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                                      const Value: WideString;
                                                      IndicatorID: PjIndicator;
                                                      CriteriaList: PjCriteriaList): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicatorAdd(FieldID, Test, Value, IndicatorID,
                                                     CriteriaList, EmptyParam);
end;

function  TProjectApplication.CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                                      const Value: WideString;
                                                      IndicatorID: PjIndicator;
                                                      CriteriaList: PjCriteriaList;
                                                      Index: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicatorAdd(FieldID, Test, Value, IndicatorID,
                                                     CriteriaList, Index);
end;

function  TProjectApplication.CustomFieldIndicators(FieldID: PjCustomField): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicators(FieldID, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.CustomFieldIndicators(FieldID: PjCustomField;
                                                    SummaryInheritsNonsummary: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicators(FieldID, SummaryInheritsNonsummary, EmptyParam,
                                                   EmptyParam);
end;

function  TProjectApplication.CustomFieldIndicators(FieldID: PjCustomField;
                                                    SummaryInheritsNonsummary: OleVariant;
                                                    ProjectInheritsSummary: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicators(FieldID, SummaryInheritsNonsummary,
                                                   ProjectInheritsSummary, EmptyParam);
end;

function  TProjectApplication.CustomFieldIndicators(FieldID: PjCustomField;
                                                    SummaryInheritsNonsummary: OleVariant;
                                                    ProjectInheritsSummary: OleVariant;
                                                    ShowToolTips: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicators(FieldID, SummaryInheritsNonsummary,
                                                   ProjectInheritsSummary, ShowToolTips);
end;

function  TProjectApplication.CustomFieldIndicatorDelete(FieldID: PjCustomField; Index: Smallint;
                                                         CriteriaList: PjCriteriaList): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicatorDelete(FieldID, Index, CriteriaList);
end;

function  TProjectApplication.CustomFieldValueList(FieldID: PjCustomField; ListDefault: OleVariant;
                                                   DefaultValue: OleVariant;
                                                   RestrictToList: OleVariant;
                                                   AppendNew: OleVariant; PromptOnNew: OleVariant;
                                                   DisplayOrder: PjListOrder): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueList(FieldID, ListDefault, DefaultValue,
                                                  RestrictToList, AppendNew, PromptOnNew,
                                                  DisplayOrder);
end;

function  TProjectApplication.CustomFieldValueListAdd(FieldID: PjCustomField): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, EmptyParam, EmptyParam, EmptyParam,
                                                     EmptyParam, EmptyParam);
end;

function  TProjectApplication.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, EmptyParam, EmptyParam,
                                                     EmptyParam, EmptyParam);
end;

function  TProjectApplication.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                                      Description: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, Description, EmptyParam,
                                                     EmptyParam, EmptyParam);
end;

function  TProjectApplication.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                                      Description: OleVariant; Phonetic: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, Description, Phonetic,
                                                     EmptyParam, EmptyParam);
end;

function  TProjectApplication.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                                      Description: OleVariant;
                                                      Phonetic: OleVariant; Index: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, Description, Phonetic, Index,
                                                     EmptyParam);
end;

function  TProjectApplication.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                                      Description: OleVariant;
                                                      Phonetic: OleVariant; Index: OleVariant;
                                                      FieldDefault: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, Description, Phonetic, Index,
                                                     FieldDefault);
end;

function  TProjectApplication.CustomFieldValueListDelete(FieldID: PjCustomField; Index: Smallint): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListDelete(FieldID, Index);
end;

function  TProjectApplication.BoxLayout(LayoutMode: PjLayoutMode; LayoutScheme: PjLayoutScheme;
                                        SummaryPrecedence: OleVariant;
                                        RowAlignment: PjVerticalAlignment;
                                        ColumnAlignment: PjAlignment; RowSpacing: OleVariant;
                                        ColumnSpacing: OleVariant; RowHeight: PjRowColSize;
                                        ColumnWidth: PjRowColSize; AdjustForPageBreaks: OleVariant;
                                        ShowSummaryTasks: OleVariant; ViewBackgroundColor: PjColor;
                                        ViewBackgroundPattern: PjBackgroundPattern;
                                        ShowProgressMarks: OleVariant; ShowPageBreaks: OleVariant;
                                        ShowIDOnly: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxLayout(LayoutMode, LayoutScheme, SummaryPrecedence, RowAlignment,
                                       ColumnAlignment, RowSpacing, ColumnSpacing, RowHeight,
                                       ColumnWidth, AdjustForPageBreaks, ShowSummaryTasks,
                                       ViewBackgroundColor, ViewBackgroundPattern,
                                       ShowProgressMarks, ShowPageBreaks, ShowIDOnly);
end;

function  TProjectApplication.BoxLinks(Style: PjLinkStyle; ShowArrows: OleVariant;
                                       ShowLabels: OleVariant; ColorMode: PjLinkColorMode;
                                       CriticalColor: PjColor; NoncriticalColor: PjColor): WordBool;
begin
  Result := DefaultInterface.BoxLinks(Style, ShowArrows, ShowLabels, ColorMode, CriticalColor,
                                      NoncriticalColor);
end;

function  TProjectApplication.SummaryTasksShow: WordBool;
begin
  Result := DefaultInterface.SummaryTasksShow(EmptyParam);
end;

function  TProjectApplication.SummaryTasksShow(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.SummaryTasksShow(Show);
end;

function  TProjectApplication.BoxProgressMarksShow: WordBool;
begin
  Result := DefaultInterface.BoxProgressMarksShow(EmptyParam);
end;

function  TProjectApplication.BoxProgressMarksShow(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxProgressMarksShow(Show);
end;

function  TProjectApplication.BoxLinkLabelsShow: WordBool;
begin
  Result := DefaultInterface.BoxLinkLabelsShow(EmptyParam);
end;

function  TProjectApplication.BoxLinkLabelsShow(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxLinkLabelsShow(Show);
end;

function  TProjectApplication.BoxLinkStyleToggle: WordBool;
begin
  Result := DefaultInterface.BoxLinkStyleToggle(EmptyParam);
end;

function  TProjectApplication.BoxLinkStyleToggle(StraightLinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxLinkStyleToggle(StraightLinks);
end;

function  TProjectApplication.LayoutRelatedNow: WordBool;
begin
  Result := DefaultInterface.LayoutRelatedNow;
end;

function  TProjectApplication.BoxSet(Action: PjBoxSet): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BoxSet(Action: PjBoxSet; TaskID: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, TaskID, EmptyParam, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, TaskID, XPosition, EmptyParam, EmptyParam);
end;

function  TProjectApplication.BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                                     YPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, TaskID, XPosition, YPosition, EmptyParam);
end;

function  TProjectApplication.BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                                     YPosition: OleVariant; ProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, TaskID, XPosition, YPosition, ProjectName);
end;

function  TProjectApplication.SetSplitBar: WordBool;
begin
  Result := DefaultInterface.SetSplitBar(EmptyParam);
end;

function  TProjectApplication.SetSplitBar(ShowColumns: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetSplitBar(ShowColumns);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TProjectApplicationProperties.Create(AServer: TProjectApplication);
begin
  inherited Create;
  FServer := AServer;
end;

function TProjectApplicationProperties.GetDefaultInterface: _MSProject;
begin
  Result := FServer.DefaultInterface;
end;

function TProjectApplicationProperties.Get_Application: Application;
begin
  Result := DefaultInterface.Application;
end;

procedure TProjectApplicationProperties.Set_Application(const Value: Application);
begin
  DefaultInterface.Application := Value;
end;

function TProjectApplicationProperties.Get_Parent: Application;
begin
  Result := DefaultInterface.Parent;
end;

procedure TProjectApplicationProperties.Set_Parent(const Value: Application);
begin
  DefaultInterface.Parent := Value;
end;

function TProjectApplicationProperties.Get_Projects: Projects;
begin
  Result := DefaultInterface.Projects;
end;

procedure TProjectApplicationProperties.Set_Projects(const Value: Projects);
begin
  DefaultInterface.Projects := Value;
end;

function TProjectApplicationProperties.Get_ActiveSelection: Selection;
begin
  Result := DefaultInterface.ActiveSelection;
end;

procedure TProjectApplicationProperties.Set_ActiveSelection(const Value: Selection);
begin
  DefaultInterface.ActiveSelection := Value;
end;

function TProjectApplicationProperties.Get_ActiveCell: Cell;
begin
  Result := DefaultInterface.ActiveCell;
end;

procedure TProjectApplicationProperties.Set_ActiveCell(const Value: Cell);
begin
  DefaultInterface.ActiveCell := Value;
end;

function TProjectApplicationProperties.Get_ActiveProject: Project;
begin
  Result := DefaultInterface.ActiveProject;
end;

procedure TProjectApplicationProperties.Set_ActiveProject(const Value: Project);
begin
  DefaultInterface.ActiveProject := Value;
end;

function TProjectApplicationProperties.Get_ActiveWindow: Window;
begin
  Result := DefaultInterface.ActiveWindow;
end;

procedure TProjectApplicationProperties.Set_ActiveWindow(const Value: Window);
begin
  DefaultInterface.ActiveWindow := Value;
end;

function TProjectApplicationProperties.Get_SupportsMultipleDocuments: WordBool;
begin
  Result := DefaultInterface.SupportsMultipleDocuments;
end;

procedure TProjectApplicationProperties.Set_SupportsMultipleDocuments(Value: WordBool);
begin
  DefaultInterface.SupportsMultipleDocuments := Value;
end;

function TProjectApplicationProperties.Get_SupportsMultipleWindows: WordBool;
begin
  Result := DefaultInterface.SupportsMultipleWindows;
end;

procedure TProjectApplicationProperties.Set_SupportsMultipleWindows(Value: WordBool);
begin
  DefaultInterface.SupportsMultipleWindows := Value;
end;

function TProjectApplicationProperties.Get_Visible: WordBool;
begin
  Result := DefaultInterface.Visible;
end;

procedure TProjectApplicationProperties.Set_Visible(Value: WordBool);
begin
  DefaultInterface.Visible := Value;
end;

function TProjectApplicationProperties.Get_PathSeparator: WideString;
begin
  Result := DefaultInterface.PathSeparator;
end;

procedure TProjectApplicationProperties.Set_PathSeparator(const Value: WideString);
begin
  DefaultInterface.PathSeparator := Value;
end;

function TProjectApplicationProperties.Get_Caption: WideString;
begin
  Result := DefaultInterface.Caption;
end;

procedure TProjectApplicationProperties.Set_Caption(const Value: WideString);
begin
  DefaultInterface.Caption := Value;
end;

function TProjectApplicationProperties.Get_Name: WideString;
begin
  Result := DefaultInterface.Name;
end;

procedure TProjectApplicationProperties.Set_Name(const Value: WideString);
begin
  DefaultInterface.Name := Value;
end;

function TProjectApplicationProperties.Get_Path: WideString;
begin
  Result := DefaultInterface.Path;
end;

procedure TProjectApplicationProperties.Set_Path(const Value: WideString);
begin
  DefaultInterface.Path := Value;
end;

function TProjectApplicationProperties.Get_Version: WideString;
begin
  Result := DefaultInterface.Version;
end;

procedure TProjectApplicationProperties.Set_Version(const Value: WideString);
begin
  DefaultInterface.Version := Value;
end;

function TProjectApplicationProperties.Get_WindowState: PjWindowState;
begin
  Result := DefaultInterface.WindowState;
end;

procedure TProjectApplicationProperties.Set_WindowState(Value: PjWindowState);
begin
  DefaultInterface.WindowState := Value;
end;

function TProjectApplicationProperties.Get_Left: Integer;
begin
  Result := DefaultInterface.Left;
end;

procedure TProjectApplicationProperties.Set_Left(Value: Integer);
begin
  DefaultInterface.Left := Value;
end;

function TProjectApplicationProperties.Get_Top: Integer;
begin
  Result := DefaultInterface.Top;
end;

procedure TProjectApplicationProperties.Set_Top(Value: Integer);
begin
  DefaultInterface.Top := Value;
end;

function TProjectApplicationProperties.Get_Width: Integer;
begin
  Result := DefaultInterface.Width;
end;

procedure TProjectApplicationProperties.Set_Width(Value: Integer);
begin
  DefaultInterface.Width := Value;
end;

function TProjectApplicationProperties.Get_Height: Integer;
begin
  Result := DefaultInterface.Height;
end;

procedure TProjectApplicationProperties.Set_Height(Value: Integer);
begin
  DefaultInterface.Height := Value;
end;

function TProjectApplicationProperties.Get_DateOrder: PjDateOrder;
begin
  Result := DefaultInterface.DateOrder;
end;

procedure TProjectApplicationProperties.Set_DateOrder(Value: PjDateOrder);
begin
  DefaultInterface.DateOrder := Value;
end;

function TProjectApplicationProperties.Get_DateSeparator: WideString;
begin
  Result := DefaultInterface.DateSeparator;
end;

procedure TProjectApplicationProperties.Set_DateSeparator(const Value: WideString);
begin
  DefaultInterface.DateSeparator := Value;
end;

function TProjectApplicationProperties.Get_ThousandSeparator: WideString;
begin
  Result := DefaultInterface.ThousandSeparator;
end;

procedure TProjectApplicationProperties.Set_ThousandSeparator(const Value: WideString);
begin
  DefaultInterface.ThousandSeparator := Value;
end;

function TProjectApplicationProperties.Get_DecimalSeparator: WideString;
begin
  Result := DefaultInterface.DecimalSeparator;
end;

procedure TProjectApplicationProperties.Set_DecimalSeparator(const Value: WideString);
begin
  DefaultInterface.DecimalSeparator := Value;
end;

function TProjectApplicationProperties.Get_ListSeparator: WideString;
begin
  Result := DefaultInterface.ListSeparator;
end;

procedure TProjectApplicationProperties.Set_ListSeparator(const Value: WideString);
begin
  DefaultInterface.ListSeparator := Value;
end;

function TProjectApplicationProperties.Get_TimeSeparator: WideString;
begin
  Result := DefaultInterface.TimeSeparator;
end;

procedure TProjectApplicationProperties.Set_TimeSeparator(const Value: WideString);
begin
  DefaultInterface.TimeSeparator := Value;
end;

function TProjectApplicationProperties.Get_TwelveHourTimeFormat: WordBool;
begin
  Result := DefaultInterface.TwelveHourTimeFormat;
end;

procedure TProjectApplicationProperties.Set_TwelveHourTimeFormat(Value: WordBool);
begin
  DefaultInterface.TwelveHourTimeFormat := Value;
end;

function TProjectApplicationProperties.Get_AMText: WideString;
begin
  Result := DefaultInterface.AMText;
end;

procedure TProjectApplicationProperties.Set_AMText(const Value: WideString);
begin
  DefaultInterface.AMText := Value;
end;

function TProjectApplicationProperties.Get_PMText: WideString;
begin
  Result := DefaultInterface.PMText;
end;

procedure TProjectApplicationProperties.Set_PMText(const Value: WideString);
begin
  DefaultInterface.PMText := Value;
end;

function TProjectApplicationProperties.Get_DefaultView: WideString;
begin
  Result := DefaultInterface.DefaultView;
end;

procedure TProjectApplicationProperties.Set_DefaultView(const Value: WideString);
begin
  DefaultInterface.DefaultView := Value;
end;

function TProjectApplicationProperties.Get_DisplayStatusBar: WordBool;
begin
  Result := DefaultInterface.DisplayStatusBar;
end;

procedure TProjectApplicationProperties.Set_DisplayStatusBar(Value: WordBool);
begin
  DefaultInterface.DisplayStatusBar := Value;
end;

function TProjectApplicationProperties.Get_DisplayAlerts: WordBool;
begin
  Result := DefaultInterface.DisplayAlerts;
end;

procedure TProjectApplicationProperties.Set_DisplayAlerts(Value: WordBool);
begin
  DefaultInterface.DisplayAlerts := Value;
end;

function TProjectApplicationProperties.Get_DisplayEntryBar: WordBool;
begin
  Result := DefaultInterface.DisplayEntryBar;
end;

procedure TProjectApplicationProperties.Set_DisplayEntryBar(Value: WordBool);
begin
  DefaultInterface.DisplayEntryBar := Value;
end;

function TProjectApplicationProperties.Get_DisplayScrollBars: WordBool;
begin
  Result := DefaultInterface.DisplayScrollBars;
end;

procedure TProjectApplicationProperties.Set_DisplayScrollBars(Value: WordBool);
begin
  DefaultInterface.DisplayScrollBars := Value;
end;

function TProjectApplicationProperties.Get_DisplayWindowsInTaskbar: WordBool;
begin
  Result := DefaultInterface.DisplayWindowsInTaskbar;
end;

procedure TProjectApplicationProperties.Set_DisplayWindowsInTaskbar(Value: WordBool);
begin
  DefaultInterface.DisplayWindowsInTaskbar := Value;
end;

function TProjectApplicationProperties.Get_Calculation: PjCalculation;
begin
  Result := DefaultInterface.Calculation;
end;

procedure TProjectApplicationProperties.Set_Calculation(Value: PjCalculation);
begin
  DefaultInterface.Calculation := Value;
end;

function TProjectApplicationProperties.Get_AutoLevel: WordBool;
begin
  Result := DefaultInterface.AutoLevel;
end;

procedure TProjectApplicationProperties.Set_AutoLevel(Value: WordBool);
begin
  DefaultInterface.AutoLevel := Value;
end;

function TProjectApplicationProperties.Get_AutoClearLeveling: WordBool;
begin
  Result := DefaultInterface.AutoClearLeveling;
end;

procedure TProjectApplicationProperties.Set_AutoClearLeveling(Value: WordBool);
begin
  DefaultInterface.AutoClearLeveling := Value;
end;

function TProjectApplicationProperties.Get_LevelWithinSlack: WordBool;
begin
  Result := DefaultInterface.LevelWithinSlack;
end;

procedure TProjectApplicationProperties.Set_LevelWithinSlack(Value: WordBool);
begin
  DefaultInterface.LevelWithinSlack := Value;
end;

function TProjectApplicationProperties.Get_LevelOrder: PjLevelOrder;
begin
  Result := DefaultInterface.LevelOrder;
end;

procedure TProjectApplicationProperties.Set_LevelOrder(Value: PjLevelOrder);
begin
  DefaultInterface.LevelOrder := Value;
end;

function TProjectApplicationProperties.Get_LevelPeriodBasis: PjLevelPeriodBasis;
begin
  Result := DefaultInterface.LevelPeriodBasis;
end;

procedure TProjectApplicationProperties.Set_LevelPeriodBasis(Value: PjLevelPeriodBasis);
begin
  DefaultInterface.LevelPeriodBasis := Value;
end;

function TProjectApplicationProperties.Get_LevelIndividualAssignments: WordBool;
begin
  Result := DefaultInterface.LevelIndividualAssignments;
end;

procedure TProjectApplicationProperties.Set_LevelIndividualAssignments(Value: WordBool);
begin
  DefaultInterface.LevelIndividualAssignments := Value;
end;

function TProjectApplicationProperties.Get_LevelingCanSplit: WordBool;
begin
  Result := DefaultInterface.LevelingCanSplit;
end;

procedure TProjectApplicationProperties.Set_LevelingCanSplit(Value: WordBool);
begin
  DefaultInterface.LevelingCanSplit := Value;
end;

function TProjectApplicationProperties.Get_MoveAfterReturn: WordBool;
begin
  Result := DefaultInterface.MoveAfterReturn;
end;

procedure TProjectApplicationProperties.Set_MoveAfterReturn(Value: WordBool);
begin
  DefaultInterface.MoveAfterReturn := Value;
end;

function TProjectApplicationProperties.Get_DisplayScheduleMessages: WordBool;
begin
  Result := DefaultInterface.DisplayScheduleMessages;
end;

procedure TProjectApplicationProperties.Set_DisplayScheduleMessages(Value: WordBool);
begin
  DefaultInterface.DisplayScheduleMessages := Value;
end;

function TProjectApplicationProperties.Get_StartWeekOn: PjWeekday;
begin
  Result := DefaultInterface.StartWeekOn;
end;

procedure TProjectApplicationProperties.Set_StartWeekOn(Value: PjWeekday);
begin
  DefaultInterface.StartWeekOn := Value;
end;

function TProjectApplicationProperties.Get_StartYearIn: PjMonth;
begin
  Result := DefaultInterface.StartYearIn;
end;

procedure TProjectApplicationProperties.Set_StartYearIn(Value: PjMonth);
begin
  DefaultInterface.StartYearIn := Value;
end;

function TProjectApplicationProperties.Get_CellDragAndDrop: WordBool;
begin
  Result := DefaultInterface.CellDragAndDrop;
end;

procedure TProjectApplicationProperties.Set_CellDragAndDrop(Value: WordBool);
begin
  DefaultInterface.CellDragAndDrop := Value;
end;

function TProjectApplicationProperties.Get_UserName: WideString;
begin
  Result := DefaultInterface.UserName;
end;

procedure TProjectApplicationProperties.Set_UserName(const Value: WideString);
begin
  DefaultInterface.UserName := Value;
end;

function TProjectApplicationProperties.Get_DisplayNotesIndicator: WordBool;
begin
  Result := DefaultInterface.DisplayNotesIndicator;
end;

procedure TProjectApplicationProperties.Set_DisplayNotesIndicator(Value: WordBool);
begin
  DefaultInterface.DisplayNotesIndicator := Value;
end;

function TProjectApplicationProperties.Get_AskToUpdateLinks: WordBool;
begin
  Result := DefaultInterface.AskToUpdateLinks;
end;

procedure TProjectApplicationProperties.Set_AskToUpdateLinks(Value: WordBool);
begin
  DefaultInterface.AskToUpdateLinks := Value;
end;

function TProjectApplicationProperties.Get_DisplayPlanningWizard: WordBool;
begin
  Result := DefaultInterface.DisplayPlanningWizard;
end;

procedure TProjectApplicationProperties.Set_DisplayPlanningWizard(Value: WordBool);
begin
  DefaultInterface.DisplayPlanningWizard := Value;
end;

function TProjectApplicationProperties.Get_DisplayWizardUsage: WordBool;
begin
  Result := DefaultInterface.DisplayWizardUsage;
end;

procedure TProjectApplicationProperties.Set_DisplayWizardUsage(Value: WordBool);
begin
  DefaultInterface.DisplayWizardUsage := Value;
end;

function TProjectApplicationProperties.Get_DisplayWizardErrors: WordBool;
begin
  Result := DefaultInterface.DisplayWizardErrors;
end;

procedure TProjectApplicationProperties.Set_DisplayWizardErrors(Value: WordBool);
begin
  DefaultInterface.DisplayWizardErrors := Value;
end;

function TProjectApplicationProperties.Get_DisplayWizardScheduling: WordBool;
begin
  Result := DefaultInterface.DisplayWizardScheduling;
end;

procedure TProjectApplicationProperties.Set_DisplayWizardScheduling(Value: WordBool);
begin
  DefaultInterface.DisplayWizardScheduling := Value;
end;

function TProjectApplicationProperties.Get_ShowTipOfDay: WordBool;
begin
  Result := DefaultInterface.ShowTipOfDay;
end;

procedure TProjectApplicationProperties.Set_ShowTipOfDay(Value: WordBool);
begin
  DefaultInterface.ShowTipOfDay := Value;
end;

function TProjectApplicationProperties.Get_ShowToolTips: WordBool;
begin
  Result := DefaultInterface.ShowToolTips;
end;

procedure TProjectApplicationProperties.Set_ShowToolTips(Value: WordBool);
begin
  DefaultInterface.ShowToolTips := Value;
end;

function TProjectApplicationProperties.Get_ShowWelcome: WordBool;
begin
  Result := DefaultInterface.ShowWelcome;
end;

procedure TProjectApplicationProperties.Set_ShowWelcome(Value: WordBool);
begin
  DefaultInterface.ShowWelcome := Value;
end;

function TProjectApplicationProperties.Get_LoadLastFile: WordBool;
begin
  Result := DefaultInterface.LoadLastFile;
end;

procedure TProjectApplicationProperties.Set_LoadLastFile(Value: WordBool);
begin
  DefaultInterface.LoadLastFile := Value;
end;

function TProjectApplicationProperties.Get_PromptForSummaryInfo: WordBool;
begin
  Result := DefaultInterface.PromptForSummaryInfo;
end;

procedure TProjectApplicationProperties.Set_PromptForSummaryInfo(Value: WordBool);
begin
  DefaultInterface.PromptForSummaryInfo := Value;
end;

function TProjectApplicationProperties.Get_DisplayOLEIndicator: WordBool;
begin
  Result := DefaultInterface.DisplayOLEIndicator;
end;

procedure TProjectApplicationProperties.Set_DisplayOLEIndicator(Value: WordBool);
begin
  DefaultInterface.DisplayOLEIndicator := Value;
end;

function TProjectApplicationProperties.Get_DefaultDateFormat: PjDateFormat;
begin
  Result := DefaultInterface.DefaultDateFormat;
end;

procedure TProjectApplicationProperties.Set_DefaultDateFormat(Value: PjDateFormat);
begin
  DefaultInterface.DefaultDateFormat := Value;
end;

function TProjectApplicationProperties.Get_DayLeadingZero: WordBool;
begin
  Result := DefaultInterface.DayLeadingZero;
end;

procedure TProjectApplicationProperties.Set_DayLeadingZero(Value: WordBool);
begin
  DefaultInterface.DayLeadingZero := Value;
end;

function TProjectApplicationProperties.Get_MonthLeadingZero: WordBool;
begin
  Result := DefaultInterface.MonthLeadingZero;
end;

procedure TProjectApplicationProperties.Set_MonthLeadingZero(Value: WordBool);
begin
  DefaultInterface.MonthLeadingZero := Value;
end;

function TProjectApplicationProperties.Get_TimeLeadingZero: WordBool;
begin
  Result := DefaultInterface.TimeLeadingZero;
end;

procedure TProjectApplicationProperties.Set_TimeLeadingZero(Value: WordBool);
begin
  DefaultInterface.TimeLeadingZero := Value;
end;

function TProjectApplicationProperties.Get_CopyResourceUsageHeader: WordBool;
begin
  Result := DefaultInterface.CopyResourceUsageHeader;
end;

procedure TProjectApplicationProperties.Set_CopyResourceUsageHeader(Value: WordBool);
begin
  DefaultInterface.CopyResourceUsageHeader := Value;
end;

function TProjectApplicationProperties.Get_RecentFilesMaximum: Integer;
begin
  Result := DefaultInterface.RecentFilesMaximum;
end;

procedure TProjectApplicationProperties.Set_RecentFilesMaximum(Value: Integer);
begin
  DefaultInterface.RecentFilesMaximum := Value;
end;

function TProjectApplicationProperties.Get_DisplayRecentFiles: WordBool;
begin
  Result := DefaultInterface.DisplayRecentFiles;
end;

procedure TProjectApplicationProperties.Set_DisplayRecentFiles(Value: WordBool);
begin
  DefaultInterface.DisplayRecentFiles := Value;
end;

function TProjectApplicationProperties.Get_MacroVirusProtection: WordBool;
begin
  Result := DefaultInterface.MacroVirusProtection;
end;

procedure TProjectApplicationProperties.Set_MacroVirusProtection(Value: WordBool);
begin
  DefaultInterface.MacroVirusProtection := Value;
end;

function TProjectApplicationProperties.Get_ShowAssignmentUnitsAs: PjAssignmentUnits;
begin
  Result := DefaultInterface.ShowAssignmentUnitsAs;
end;

procedure TProjectApplicationProperties.Set_ShowAssignmentUnitsAs(Value: PjAssignmentUnits);
begin
  DefaultInterface.ShowAssignmentUnitsAs := Value;
end;

function TProjectApplicationProperties.Get_AutomaticallyFillPhoneticFields: WordBool;
begin
  Result := DefaultInterface.AutomaticallyFillPhoneticFields;
end;

procedure TProjectApplicationProperties.Set_AutomaticallyFillPhoneticFields(Value: WordBool);
begin
  DefaultInterface.AutomaticallyFillPhoneticFields := Value;
end;

function TProjectApplicationProperties.Get_DefaultAutoFilter: WordBool;
begin
  Result := DefaultInterface.DefaultAutoFilter;
end;

procedure TProjectApplicationProperties.Set_DefaultAutoFilter(Value: WordBool);
begin
  DefaultInterface.DefaultAutoFilter := Value;
end;

function TProjectApplicationProperties.Get_ShowEstimatedDuration: WordBool;
begin
  Result := DefaultInterface.ShowEstimatedDuration;
end;

procedure TProjectApplicationProperties.Set_ShowEstimatedDuration(Value: WordBool);
begin
  DefaultInterface.ShowEstimatedDuration := Value;
end;

function TProjectApplicationProperties.Get_NewTasksEstimated: WordBool;
begin
  Result := DefaultInterface.NewTasksEstimated;
end;

procedure TProjectApplicationProperties.Set_NewTasksEstimated(Value: WordBool);
begin
  DefaultInterface.NewTasksEstimated := Value;
end;

function TProjectApplicationProperties.Get_Assistant: Assistant;
begin
  Result := DefaultInterface.Assistant;
end;

procedure TProjectApplicationProperties.Set_Assistant(const Value: Assistant);
begin
  DefaultInterface.Assistant := Value;
end;

function TProjectApplicationProperties.Get_DisplayViewBar: WordBool;
begin
  Result := DefaultInterface.DisplayViewBar;
end;

procedure TProjectApplicationProperties.Set_DisplayViewBar(Value: WordBool);
begin
  DefaultInterface.DisplayViewBar := Value;
end;

function TProjectApplicationProperties.Get_VBE: VBE;
begin
  Result := DefaultInterface.VBE;
end;

procedure TProjectApplicationProperties.Set_VBE(const Value: VBE);
begin
  DefaultInterface.VBE := Value;
end;

function TProjectApplicationProperties.Get_EnableCancelKey: PjEnableCancelKey;
begin
  Result := DefaultInterface.EnableCancelKey;
end;

procedure TProjectApplicationProperties.Set_EnableCancelKey(Value: PjEnableCancelKey);
begin
  DefaultInterface.EnableCancelKey := Value;
end;

function TProjectApplicationProperties.Get_UserControl: WordBool;
begin
  Result := DefaultInterface.UserControl;
end;

procedure TProjectApplicationProperties.Set_UserControl(Value: WordBool);
begin
  DefaultInterface.UserControl := Value;
end;

function TProjectApplicationProperties.Get_UsableWidth: Double;
begin
  Result := DefaultInterface.UsableWidth;
end;

procedure TProjectApplicationProperties.Set_UsableWidth(Value: Double);
begin
  DefaultInterface.UsableWidth := Value;
end;

function TProjectApplicationProperties.Get_UsableHeight: Double;
begin
  Result := DefaultInterface.UsableHeight;
end;

procedure TProjectApplicationProperties.Set_UsableHeight(Value: Double);
begin
  DefaultInterface.UsableHeight := Value;
end;

function TProjectApplicationProperties.Get_StatusBar: OleVariant;
begin
  Result := DefaultInterface.StatusBar;
end;

procedure TProjectApplicationProperties.Set_StatusBar(Value: OleVariant);
begin
  DefaultInterface.StatusBar := Value;
end;

function TProjectApplicationProperties.Get_FileSearch: FileSearch;
begin
  Result := DefaultInterface.FileSearch;
end;

procedure TProjectApplicationProperties.Set_FileSearch(const Value: FileSearch);
begin
  DefaultInterface.FileSearch := Value;
end;

function  TProjectApplicationProperties.Get_Windows: Windows;
begin
  Result := DefaultInterface.Windows;
end;

function  TProjectApplicationProperties.Get_CommandBars: CommandBars;
begin
  Result := DefaultInterface.CommandBars;
end;

function  TProjectApplicationProperties.Get_AnswerWizard: AnswerWizard;
begin
  Result := DefaultInterface.AnswerWizard;
end;

function  TProjectApplicationProperties.Get_OperatingSystem: WideString;
begin
  Result := DefaultInterface.OperatingSystem;
end;

function  TProjectApplicationProperties.Get_FileFormatID(const Name: WideString;
                                                         UserID: OleVariant;
                                                         DatabasePassWord: OleVariant): WideString;
begin
  Result := DefaultInterface.FileFormatID[Name, UserID, DatabasePassWord];
end;

function  TProjectApplicationProperties.Get_FileBuildID(const Name: WideString; UserID: OleVariant;
                                                        DatabasePassWord: OleVariant): WideString;
begin
  Result := DefaultInterface.FileBuildID[Name, UserID, DatabasePassWord];
end;

function  TProjectApplicationProperties.Get_COMAddIns: COMAddIns;
begin
  Result := DefaultInterface.COMAddIns;
end;

{$ENDIF}

class function CoGlobal.Create: _Global;
begin
  Result := CreateComObject(CLASS_Global) as _Global;
end;

class function CoGlobal.CreateRemote(const MachineName: string): _Global;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Global) as _Global;
end;

procedure TGlobal.InitServerData;
const
  CServerData: TServerData = (
    ClassID:   '{7742AF30-EBC0-11CF-A523-00A0C904DE55}';
    IntfIID:   '{78E9F620-EBC0-11CF-A523-00A0C904DE55}';
    EventIID:  '';
    LicenseKey: nil;
    Version: 500);
begin
  ServerData := @CServerData;
end;

procedure TGlobal.Connect;
var
  punk: IUnknown;
begin
  if FIntf = nil then
  begin
    punk := GetServer;
    Fintf:= punk as _Global;
  end;
end;

procedure TGlobal.ConnectTo(svrIntf: _Global);
begin
  Disconnect;
  FIntf := svrIntf;
end;

procedure TGlobal.DisConnect;
begin
  if Fintf <> nil then
  begin
    FIntf := nil;
  end;
end;

function TGlobal.GetDefaultInterface: _Global;
begin
  if FIntf = nil then
    Connect;
  Assert(FIntf <> nil, 'DefaultInterface is NULL. Component is not connected to Server. You must call ''Connect'' or ''ConnectTo'' before this operation');
  Result := FIntf;
end;

constructor TGlobal.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps := TGlobalProperties.Create(Self);
{$ENDIF}
end;

destructor TGlobal.Destroy;
begin
{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
  FProps.Free;
{$ENDIF}
  inherited Destroy;
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
function TGlobal.GetServerProperties: TGlobalProperties;
begin
  Result := FProps;
end;
{$ENDIF}

function TGlobal.Get_Application: Application;
begin
  Result := DefaultInterface.Application;
end;

procedure TGlobal.Set_Application(const Value: Application);
begin
  DefaultInterface.Application := Value;
end;

function TGlobal.Get_Parent: Application;
begin
  Result := DefaultInterface.Parent;
end;

procedure TGlobal.Set_Parent(const Value: Application);
begin
  DefaultInterface.Parent := Value;
end;

function TGlobal.Get_ActiveSelection: Selection;
begin
  Result := DefaultInterface.ActiveSelection;
end;

procedure TGlobal.Set_ActiveSelection(const Value: Selection);
begin
  DefaultInterface.ActiveSelection := Value;
end;

function TGlobal.Get_ActiveCell: Cell;
begin
  Result := DefaultInterface.ActiveCell;
end;

procedure TGlobal.Set_ActiveCell(const Value: Cell);
begin
  DefaultInterface.ActiveCell := Value;
end;

function TGlobal.Get_ActiveProject: Project;
begin
  Result := DefaultInterface.ActiveProject;
end;

procedure TGlobal.Set_ActiveProject(const Value: Project);
begin
  DefaultInterface.ActiveProject := Value;
end;

function TGlobal.Get_ActiveWindow: Window;
begin
  Result := DefaultInterface.ActiveWindow;
end;

procedure TGlobal.Set_ActiveWindow(const Value: Window);
begin
  DefaultInterface.ActiveWindow := Value;
end;

function TGlobal.Get_SupportsMultipleDocuments: WordBool;
begin
  Result := DefaultInterface.SupportsMultipleDocuments;
end;

procedure TGlobal.Set_SupportsMultipleDocuments(Value: WordBool);
begin
  DefaultInterface.SupportsMultipleDocuments := Value;
end;

function TGlobal.Get_SupportsMultipleWindows: WordBool;
begin
  Result := DefaultInterface.SupportsMultipleWindows;
end;

procedure TGlobal.Set_SupportsMultipleWindows(Value: WordBool);
begin
  DefaultInterface.SupportsMultipleWindows := Value;
end;

function TGlobal.Get_Visible: WordBool;
begin
  Result := DefaultInterface.Visible;
end;

procedure TGlobal.Set_Visible(Value: WordBool);
begin
  DefaultInterface.Visible := Value;
end;

function TGlobal.Get_PathSeparator: WideString;
begin
  Result := DefaultInterface.PathSeparator;
end;

procedure TGlobal.Set_PathSeparator(const Value: WideString);
begin
  DefaultInterface.PathSeparator := Value;
end;

function TGlobal.Get_Caption: WideString;
begin
  Result := DefaultInterface.Caption;
end;

procedure TGlobal.Set_Caption(const Value: WideString);
begin
  DefaultInterface.Caption := Value;
end;

function TGlobal.Get_Name: WideString;
begin
  Result := DefaultInterface.Name;
end;

procedure TGlobal.Set_Name(const Value: WideString);
begin
  DefaultInterface.Name := Value;
end;

function TGlobal.Get_Path: WideString;
begin
  Result := DefaultInterface.Path;
end;

procedure TGlobal.Set_Path(const Value: WideString);
begin
  DefaultInterface.Path := Value;
end;

function TGlobal.Get_Version: WideString;
begin
  Result := DefaultInterface.Version;
end;

procedure TGlobal.Set_Version(const Value: WideString);
begin
  DefaultInterface.Version := Value;
end;

function TGlobal.Get_WindowState: PjWindowState;
begin
  Result := DefaultInterface.WindowState;
end;

procedure TGlobal.Set_WindowState(Value: PjWindowState);
begin
  DefaultInterface.WindowState := Value;
end;

function TGlobal.Get_DateOrder: PjDateOrder;
begin
  Result := DefaultInterface.DateOrder;
end;

procedure TGlobal.Set_DateOrder(Value: PjDateOrder);
begin
  DefaultInterface.DateOrder := Value;
end;

function TGlobal.Get_DateSeparator: WideString;
begin
  Result := DefaultInterface.DateSeparator;
end;

procedure TGlobal.Set_DateSeparator(const Value: WideString);
begin
  DefaultInterface.DateSeparator := Value;
end;

function TGlobal.Get_ThousandSeparator: WideString;
begin
  Result := DefaultInterface.ThousandSeparator;
end;

procedure TGlobal.Set_ThousandSeparator(const Value: WideString);
begin
  DefaultInterface.ThousandSeparator := Value;
end;

function TGlobal.Get_DecimalSeparator: WideString;
begin
  Result := DefaultInterface.DecimalSeparator;
end;

procedure TGlobal.Set_DecimalSeparator(const Value: WideString);
begin
  DefaultInterface.DecimalSeparator := Value;
end;

function TGlobal.Get_ListSeparator: WideString;
begin
  Result := DefaultInterface.ListSeparator;
end;

procedure TGlobal.Set_ListSeparator(const Value: WideString);
begin
  DefaultInterface.ListSeparator := Value;
end;

function TGlobal.Get_TimeSeparator: WideString;
begin
  Result := DefaultInterface.TimeSeparator;
end;

procedure TGlobal.Set_TimeSeparator(const Value: WideString);
begin
  DefaultInterface.TimeSeparator := Value;
end;

function TGlobal.Get_TwelveHourTimeFormat: WordBool;
begin
  Result := DefaultInterface.TwelveHourTimeFormat;
end;

procedure TGlobal.Set_TwelveHourTimeFormat(Value: WordBool);
begin
  DefaultInterface.TwelveHourTimeFormat := Value;
end;

function TGlobal.Get_AMText: WideString;
begin
  Result := DefaultInterface.AMText;
end;

procedure TGlobal.Set_AMText(const Value: WideString);
begin
  DefaultInterface.AMText := Value;
end;

function TGlobal.Get_PMText: WideString;
begin
  Result := DefaultInterface.PMText;
end;

procedure TGlobal.Set_PMText(const Value: WideString);
begin
  DefaultInterface.PMText := Value;
end;

function TGlobal.Get_DefaultView: WideString;
begin
  Result := DefaultInterface.DefaultView;
end;

procedure TGlobal.Set_DefaultView(const Value: WideString);
begin
  DefaultInterface.DefaultView := Value;
end;

function TGlobal.Get_DisplayStatusBar: WordBool;
begin
  Result := DefaultInterface.DisplayStatusBar;
end;

procedure TGlobal.Set_DisplayStatusBar(Value: WordBool);
begin
  DefaultInterface.DisplayStatusBar := Value;
end;

function TGlobal.Get_DisplayAlerts: WordBool;
begin
  Result := DefaultInterface.DisplayAlerts;
end;

procedure TGlobal.Set_DisplayAlerts(Value: WordBool);
begin
  DefaultInterface.DisplayAlerts := Value;
end;

function TGlobal.Get_DisplayEntryBar: WordBool;
begin
  Result := DefaultInterface.DisplayEntryBar;
end;

procedure TGlobal.Set_DisplayEntryBar(Value: WordBool);
begin
  DefaultInterface.DisplayEntryBar := Value;
end;

function TGlobal.Get_DisplayScrollBars: WordBool;
begin
  Result := DefaultInterface.DisplayScrollBars;
end;

procedure TGlobal.Set_DisplayScrollBars(Value: WordBool);
begin
  DefaultInterface.DisplayScrollBars := Value;
end;

function TGlobal.Get_DisplayWindowsInTaskbar: WordBool;
begin
  Result := DefaultInterface.DisplayWindowsInTaskbar;
end;

procedure TGlobal.Set_DisplayWindowsInTaskbar(Value: WordBool);
begin
  DefaultInterface.DisplayWindowsInTaskbar := Value;
end;

function TGlobal.Get_Calculation: PjCalculation;
begin
  Result := DefaultInterface.Calculation;
end;

procedure TGlobal.Set_Calculation(Value: PjCalculation);
begin
  DefaultInterface.Calculation := Value;
end;

function TGlobal.Get_AutoLevel: WordBool;
begin
  Result := DefaultInterface.AutoLevel;
end;

procedure TGlobal.Set_AutoLevel(Value: WordBool);
begin
  DefaultInterface.AutoLevel := Value;
end;

function TGlobal.Get_AutoClearLeveling: WordBool;
begin
  Result := DefaultInterface.AutoClearLeveling;
end;

procedure TGlobal.Set_AutoClearLeveling(Value: WordBool);
begin
  DefaultInterface.AutoClearLeveling := Value;
end;

function TGlobal.Get_LevelWithinSlack: WordBool;
begin
  Result := DefaultInterface.LevelWithinSlack;
end;

procedure TGlobal.Set_LevelWithinSlack(Value: WordBool);
begin
  DefaultInterface.LevelWithinSlack := Value;
end;

function TGlobal.Get_LevelOrder: PjLevelOrder;
begin
  Result := DefaultInterface.LevelOrder;
end;

procedure TGlobal.Set_LevelOrder(Value: PjLevelOrder);
begin
  DefaultInterface.LevelOrder := Value;
end;

function TGlobal.Get_LevelPeriodBasis: PjLevelPeriodBasis;
begin
  Result := DefaultInterface.LevelPeriodBasis;
end;

procedure TGlobal.Set_LevelPeriodBasis(Value: PjLevelPeriodBasis);
begin
  DefaultInterface.LevelPeriodBasis := Value;
end;

function TGlobal.Get_LevelIndividualAssignments: WordBool;
begin
  Result := DefaultInterface.LevelIndividualAssignments;
end;

procedure TGlobal.Set_LevelIndividualAssignments(Value: WordBool);
begin
  DefaultInterface.LevelIndividualAssignments := Value;
end;

function TGlobal.Get_LevelingCanSplit: WordBool;
begin
  Result := DefaultInterface.LevelingCanSplit;
end;

procedure TGlobal.Set_LevelingCanSplit(Value: WordBool);
begin
  DefaultInterface.LevelingCanSplit := Value;
end;

function TGlobal.Get_MoveAfterReturn: WordBool;
begin
  Result := DefaultInterface.MoveAfterReturn;
end;

procedure TGlobal.Set_MoveAfterReturn(Value: WordBool);
begin
  DefaultInterface.MoveAfterReturn := Value;
end;

function TGlobal.Get_DisplayScheduleMessages: WordBool;
begin
  Result := DefaultInterface.DisplayScheduleMessages;
end;

procedure TGlobal.Set_DisplayScheduleMessages(Value: WordBool);
begin
  DefaultInterface.DisplayScheduleMessages := Value;
end;

function TGlobal.Get_StartWeekOn: PjWeekday;
begin
  Result := DefaultInterface.StartWeekOn;
end;

procedure TGlobal.Set_StartWeekOn(Value: PjWeekday);
begin
  DefaultInterface.StartWeekOn := Value;
end;

function TGlobal.Get_StartYearIn: PjMonth;
begin
  Result := DefaultInterface.StartYearIn;
end;

procedure TGlobal.Set_StartYearIn(Value: PjMonth);
begin
  DefaultInterface.StartYearIn := Value;
end;

function TGlobal.Get_CellDragAndDrop: WordBool;
begin
  Result := DefaultInterface.CellDragAndDrop;
end;

procedure TGlobal.Set_CellDragAndDrop(Value: WordBool);
begin
  DefaultInterface.CellDragAndDrop := Value;
end;

function TGlobal.Get_UserName: WideString;
begin
  Result := DefaultInterface.UserName;
end;

procedure TGlobal.Set_UserName(const Value: WideString);
begin
  DefaultInterface.UserName := Value;
end;

function TGlobal.Get_DisplayNotesIndicator: WordBool;
begin
  Result := DefaultInterface.DisplayNotesIndicator;
end;

procedure TGlobal.Set_DisplayNotesIndicator(Value: WordBool);
begin
  DefaultInterface.DisplayNotesIndicator := Value;
end;

function TGlobal.Get_AskToUpdateLinks: WordBool;
begin
  Result := DefaultInterface.AskToUpdateLinks;
end;

procedure TGlobal.Set_AskToUpdateLinks(Value: WordBool);
begin
  DefaultInterface.AskToUpdateLinks := Value;
end;

function TGlobal.Get_DisplayPlanningWizard: WordBool;
begin
  Result := DefaultInterface.DisplayPlanningWizard;
end;

procedure TGlobal.Set_DisplayPlanningWizard(Value: WordBool);
begin
  DefaultInterface.DisplayPlanningWizard := Value;
end;

function TGlobal.Get_DisplayWizardUsage: WordBool;
begin
  Result := DefaultInterface.DisplayWizardUsage;
end;

procedure TGlobal.Set_DisplayWizardUsage(Value: WordBool);
begin
  DefaultInterface.DisplayWizardUsage := Value;
end;

function TGlobal.Get_DisplayWizardErrors: WordBool;
begin
  Result := DefaultInterface.DisplayWizardErrors;
end;

procedure TGlobal.Set_DisplayWizardErrors(Value: WordBool);
begin
  DefaultInterface.DisplayWizardErrors := Value;
end;

function TGlobal.Get_DisplayWizardScheduling: WordBool;
begin
  Result := DefaultInterface.DisplayWizardScheduling;
end;

procedure TGlobal.Set_DisplayWizardScheduling(Value: WordBool);
begin
  DefaultInterface.DisplayWizardScheduling := Value;
end;

function TGlobal.Get_ShowTipOfDay: WordBool;
begin
  Result := DefaultInterface.ShowTipOfDay;
end;

procedure TGlobal.Set_ShowTipOfDay(Value: WordBool);
begin
  DefaultInterface.ShowTipOfDay := Value;
end;

function TGlobal.Get_ShowToolTips: WordBool;
begin
  Result := DefaultInterface.ShowToolTips;
end;

procedure TGlobal.Set_ShowToolTips(Value: WordBool);
begin
  DefaultInterface.ShowToolTips := Value;
end;

function TGlobal.Get_ShowWelcome: WordBool;
begin
  Result := DefaultInterface.ShowWelcome;
end;

procedure TGlobal.Set_ShowWelcome(Value: WordBool);
begin
  DefaultInterface.ShowWelcome := Value;
end;

function TGlobal.Get_LoadLastFile: WordBool;
begin
  Result := DefaultInterface.LoadLastFile;
end;

procedure TGlobal.Set_LoadLastFile(Value: WordBool);
begin
  DefaultInterface.LoadLastFile := Value;
end;

function TGlobal.Get_PromptForSummaryInfo: WordBool;
begin
  Result := DefaultInterface.PromptForSummaryInfo;
end;

procedure TGlobal.Set_PromptForSummaryInfo(Value: WordBool);
begin
  DefaultInterface.PromptForSummaryInfo := Value;
end;

function TGlobal.Get_DisplayOLEIndicator: WordBool;
begin
  Result := DefaultInterface.DisplayOLEIndicator;
end;

procedure TGlobal.Set_DisplayOLEIndicator(Value: WordBool);
begin
  DefaultInterface.DisplayOLEIndicator := Value;
end;

function TGlobal.Get_DefaultDateFormat: PjDateFormat;
begin
  Result := DefaultInterface.DefaultDateFormat;
end;

procedure TGlobal.Set_DefaultDateFormat(Value: PjDateFormat);
begin
  DefaultInterface.DefaultDateFormat := Value;
end;

function TGlobal.Get_DayLeadingZero: WordBool;
begin
  Result := DefaultInterface.DayLeadingZero;
end;

procedure TGlobal.Set_DayLeadingZero(Value: WordBool);
begin
  DefaultInterface.DayLeadingZero := Value;
end;

function TGlobal.Get_MonthLeadingZero: WordBool;
begin
  Result := DefaultInterface.MonthLeadingZero;
end;

procedure TGlobal.Set_MonthLeadingZero(Value: WordBool);
begin
  DefaultInterface.MonthLeadingZero := Value;
end;

function TGlobal.Get_TimeLeadingZero: WordBool;
begin
  Result := DefaultInterface.TimeLeadingZero;
end;

procedure TGlobal.Set_TimeLeadingZero(Value: WordBool);
begin
  DefaultInterface.TimeLeadingZero := Value;
end;

function TGlobal.Get_CopyResourceUsageHeader: WordBool;
begin
  Result := DefaultInterface.CopyResourceUsageHeader;
end;

procedure TGlobal.Set_CopyResourceUsageHeader(Value: WordBool);
begin
  DefaultInterface.CopyResourceUsageHeader := Value;
end;

function TGlobal.Get_RecentFilesMaximum: Integer;
begin
  Result := DefaultInterface.RecentFilesMaximum;
end;

procedure TGlobal.Set_RecentFilesMaximum(Value: Integer);
begin
  DefaultInterface.RecentFilesMaximum := Value;
end;

function TGlobal.Get_DisplayRecentFiles: WordBool;
begin
  Result := DefaultInterface.DisplayRecentFiles;
end;

procedure TGlobal.Set_DisplayRecentFiles(Value: WordBool);
begin
  DefaultInterface.DisplayRecentFiles := Value;
end;

function TGlobal.Get_MacroVirusProtection: WordBool;
begin
  Result := DefaultInterface.MacroVirusProtection;
end;

procedure TGlobal.Set_MacroVirusProtection(Value: WordBool);
begin
  DefaultInterface.MacroVirusProtection := Value;
end;

function TGlobal.Get_ShowAssignmentUnitsAs: PjAssignmentUnits;
begin
  Result := DefaultInterface.ShowAssignmentUnitsAs;
end;

procedure TGlobal.Set_ShowAssignmentUnitsAs(Value: PjAssignmentUnits);
begin
  DefaultInterface.ShowAssignmentUnitsAs := Value;
end;

function TGlobal.Get_AutomaticallyFillPhoneticFields: WordBool;
begin
  Result := DefaultInterface.AutomaticallyFillPhoneticFields;
end;

procedure TGlobal.Set_AutomaticallyFillPhoneticFields(Value: WordBool);
begin
  DefaultInterface.AutomaticallyFillPhoneticFields := Value;
end;

function TGlobal.Get_DefaultAutoFilter: WordBool;
begin
  Result := DefaultInterface.DefaultAutoFilter;
end;

procedure TGlobal.Set_DefaultAutoFilter(Value: WordBool);
begin
  DefaultInterface.DefaultAutoFilter := Value;
end;

function TGlobal.Get_ShowEstimatedDuration: WordBool;
begin
  Result := DefaultInterface.ShowEstimatedDuration;
end;

procedure TGlobal.Set_ShowEstimatedDuration(Value: WordBool);
begin
  DefaultInterface.ShowEstimatedDuration := Value;
end;

function TGlobal.Get_NewTasksEstimated: WordBool;
begin
  Result := DefaultInterface.NewTasksEstimated;
end;

procedure TGlobal.Set_NewTasksEstimated(Value: WordBool);
begin
  DefaultInterface.NewTasksEstimated := Value;
end;

function TGlobal.Get_Assistant: Assistant;
begin
  Result := DefaultInterface.Assistant;
end;

procedure TGlobal.Set_Assistant(const Value: Assistant);
begin
  DefaultInterface.Assistant := Value;
end;

function TGlobal.Get_DisplayViewBar: WordBool;
begin
  Result := DefaultInterface.DisplayViewBar;
end;

procedure TGlobal.Set_DisplayViewBar(Value: WordBool);
begin
  DefaultInterface.DisplayViewBar := Value;
end;

function TGlobal.Get_VBE: VBE;
begin
  Result := DefaultInterface.VBE;
end;

procedure TGlobal.Set_VBE(const Value: VBE);
begin
  DefaultInterface.VBE := Value;
end;

function TGlobal.Get_EnableCancelKey: PjEnableCancelKey;
begin
  Result := DefaultInterface.EnableCancelKey;
end;

procedure TGlobal.Set_EnableCancelKey(Value: PjEnableCancelKey);
begin
  DefaultInterface.EnableCancelKey := Value;
end;

function TGlobal.Get_UserControl: WordBool;
begin
  Result := DefaultInterface.UserControl;
end;

procedure TGlobal.Set_UserControl(Value: WordBool);
begin
  DefaultInterface.UserControl := Value;
end;

function TGlobal.Get_UsableWidth: Double;
begin
  Result := DefaultInterface.UsableWidth;
end;

procedure TGlobal.Set_UsableWidth(Value: Double);
begin
  DefaultInterface.UsableWidth := Value;
end;

function TGlobal.Get_UsableHeight: Double;
begin
  Result := DefaultInterface.UsableHeight;
end;

procedure TGlobal.Set_UsableHeight(Value: Double);
begin
  DefaultInterface.UsableHeight := Value;
end;

function  TGlobal.Get_Windows: Windows;
begin
  Result := DefaultInterface.Windows;
end;

function  TGlobal.Get_CommandBars: CommandBars;
begin
  Result := DefaultInterface.CommandBars;
end;

function  TGlobal.Get_AnswerWizard: AnswerWizard;
begin
  Result := DefaultInterface.AnswerWizard;
end;

function  TGlobal.Get_Projects: Projects;
begin
  Result := DefaultInterface.Projects;
end;

function  TGlobal.Get_OperatingSystem: WideString;
begin
  Result := DefaultInterface.OperatingSystem;
end;

function  TGlobal.Get_FileFormatID(const Name: WideString; UserID: OleVariant;
                                   DatabasePassWord: OleVariant): WideString;
begin
  Result := DefaultInterface.FileFormatID[Name, UserID, DatabasePassWord];
end;

function  TGlobal.Get_FileBuildID(const Name: WideString; UserID: OleVariant;
                                  DatabasePassWord: OleVariant): WideString;
begin
  Result := DefaultInterface.FileBuildID[Name, UserID, DatabasePassWord];
end;

function  TGlobal.Get_COMAddIns: COMAddIns;
begin
  Result := DefaultInterface.COMAddIns;
end;

procedure TGlobal.Quit(SaveChanges: PjSaveType);
begin
  DefaultInterface.Quit(SaveChanges);
end;

function  TGlobal.DateSubtract(FinishDate: OleVariant; Duration: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateSubtract(FinishDate, Duration, EmptyParam);
end;

function  TGlobal.DateSubtract(FinishDate: OleVariant; Duration: OleVariant; Calendar: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateSubtract(FinishDate, Duration, Calendar);
end;

function  TGlobal.DurationFormat(Duration: OleVariant): WideString;
begin
  Result := DefaultInterface.DurationFormat(Duration, EmptyParam);
end;

function  TGlobal.DurationFormat(Duration: OleVariant; Units: OleVariant): WideString;
begin
  Result := DefaultInterface.DurationFormat(Duration, Units);
end;

function  TGlobal.DurationValue(const Duration: WideString): OleVariant;
begin
  Result := DefaultInterface.DurationValue(Duration);
end;

function  TGlobal.DateFormat(Date: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateFormat(Date, EmptyParam);
end;

function  TGlobal.DateFormat(Date: OleVariant; Format: OleVariant): OleVariant;
begin
  Result := DefaultInterface.DateFormat(Date, Format);
end;

procedure TGlobal.MailLogon;
begin
  DefaultInterface.MailLogon(EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.MailLogon(Name: OleVariant);
begin
  DefaultInterface.MailLogon(Name, EmptyParam, EmptyParam);
end;

procedure TGlobal.MailLogon(Name: OleVariant; Password: OleVariant);
begin
  DefaultInterface.MailLogon(Name, Password, EmptyParam);
end;

procedure TGlobal.MailLogon(Name: OleVariant; Password: OleVariant; DownloadNewMail: OleVariant);
begin
  DefaultInterface.MailLogon(Name, Password, DownloadNewMail);
end;

procedure TGlobal.MailLogoff;
begin
  DefaultInterface.MailLogoff;
end;

function  TGlobal.MailSession: OleVariant;
begin
  Result := DefaultInterface.MailSession;
end;

function  TGlobal.MailSystem: OleVariant;
begin
  Result := DefaultInterface.MailSystem;
end;

function  TGlobal.TimescaledData(TaskID: Integer; ResourceID: Integer; StartDate: OleVariant;
                                 EndDate: OleVariant; Type_: PjTimescaledData;
                                 TimeScaleUnit: PjTimescaleUnit): OleVariant;
begin
  Result := DefaultInterface.TimescaledData(TaskID, ResourceID, StartDate, EndDate, Type_,
                                            TimeScaleUnit, EmptyParam);
end;

function  TGlobal.TimescaledData(TaskID: Integer; ResourceID: Integer; StartDate: OleVariant;
                                 EndDate: OleVariant; Type_: PjTimescaledData;
                                 TimeScaleUnit: PjTimescaleUnit; Count: OleVariant): OleVariant;
begin
  Result := DefaultInterface.TimescaledData(TaskID, ResourceID, StartDate, EndDate, Type_,
                                            TimeScaleUnit, Count);
end;

function  TGlobal.CustomFieldGetName(FieldID: PjCustomField): WideString;
begin
  Result := DefaultInterface.CustomFieldGetName(FieldID);
end;

procedure TGlobal.Run(const Name: WideString);
begin
  DefaultInterface.Run(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                      Arg24: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                      Arg24: OleVariant; Arg25: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                       EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                      Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                      Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, Arg27, EmptyParam, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                      Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                      Arg28: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, EmptyParam, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                      Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                      Arg28: OleVariant; Arg29: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, EmptyParam);
end;

procedure TGlobal.Run(const Name: WideString; Arg1: OleVariant; Arg2: OleVariant; Arg3: OleVariant;
                      Arg4: OleVariant; Arg5: OleVariant; Arg6: OleVariant; Arg7: OleVariant;
                      Arg8: OleVariant; Arg9: OleVariant; Arg10: OleVariant; Arg11: OleVariant;
                      Arg12: OleVariant; Arg13: OleVariant; Arg14: OleVariant; Arg15: OleVariant;
                      Arg16: OleVariant; Arg17: OleVariant; Arg18: OleVariant; Arg19: OleVariant;
                      Arg20: OleVariant; Arg21: OleVariant; Arg22: OleVariant; Arg23: OleVariant;
                      Arg24: OleVariant; Arg25: OleVariant; Arg26: OleVariant; Arg27: OleVariant;
                      Arg28: OleVariant; Arg29: OleVariant; Arg30: OleVariant);
begin
  DefaultInterface.Run(Name, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11,
                       Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22,
                       Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30);
end;

function  TGlobal.BoxGetXPosition(TaskID: Integer): Integer;
begin
  Result := DefaultInterface.BoxGetXPosition(TaskID, EmptyParam);
end;

function  TGlobal.BoxGetXPosition(TaskID: Integer; ProjectName: OleVariant): Integer;
begin
  Result := DefaultInterface.BoxGetXPosition(TaskID, ProjectName);
end;

function  TGlobal.BoxGetYPosition(TaskID: Integer): Integer;
begin
  Result := DefaultInterface.BoxGetYPosition(TaskID, EmptyParam);
end;

function  TGlobal.BoxGetYPosition(TaskID: Integer; ProjectName: OleVariant): Integer;
begin
  Result := DefaultInterface.BoxGetYPosition(TaskID, ProjectName);
end;

function  TGlobal.CustomFieldGetFormula(FieldID: PjCustomField): WideString;
begin
  Result := DefaultInterface.CustomFieldGetFormula(FieldID);
end;

function  TGlobal.CustomFieldValueListGetItem(FieldID: PjCustomField; Item: PjValueListItem;
                                              Index: Integer): WideString;
begin
  Result := DefaultInterface.CustomFieldValueListGetItem(FieldID, Item, Index);
end;

function  TGlobal.Message(const Message: WideString; Type_: PjMessageType): WordBool;
begin
  Result := DefaultInterface.Message(Message, Type_, EmptyParam, EmptyParam);
end;

function  TGlobal.Message(const Message: WideString; Type_: PjMessageType; YesText: OleVariant): WordBool;
begin
  Result := DefaultInterface.Message(Message, Type_, YesText, EmptyParam);
end;

function  TGlobal.Message(const Message: WideString; Type_: PjMessageType; YesText: OleVariant;
                          NoText: OleVariant): WordBool;
begin
  Result := DefaultInterface.Message(Message, Type_, YesText, NoText);
end;

function  TGlobal.Alerts: WordBool;
begin
  Result := DefaultInterface.Alerts(EmptyParam);
end;

function  TGlobal.Alerts(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.Alerts(Show);
end;

function  TGlobal.FileNew: WordBool;
begin
  Result := DefaultInterface.FileNew(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FileNew(SummaryInfo: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileNew(SummaryInfo, EmptyParam, EmptyParam);
end;

function  TGlobal.FileNew(SummaryInfo: OleVariant; Template: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileNew(SummaryInfo, Template, EmptyParam);
end;

function  TGlobal.FileNew(SummaryInfo: OleVariant; Template: OleVariant; FileNewDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileNew(SummaryInfo, Template, FileNewDialog);
end;

function  TGlobal.FileProperties: WordBool;
begin
  Result := DefaultInterface.FileProperties;
end;

function  TGlobal.FileOpen(Name: OleVariant; ReadOnly: OleVariant; Merge: OleVariant;
                           TaskInformation: OleVariant; Table: OleVariant; Sheet: OleVariant;
                           NoAuto: OleVariant; UserID: OleVariant; DatabasePassWord: OleVariant;
                           FormatID: OleVariant; Map: OleVariant; openPool: PjPoolOpen;
                           Password: OleVariant; WriteResPassword: OleVariant;
                           IgnoreReadOnlyRecommended: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileOpen(Name, ReadOnly, Merge, TaskInformation, Table, Sheet, NoAuto,
                                      UserID, DatabasePassWord, FormatID, Map, openPool, Password,
                                      WriteResPassword, IgnoreReadOnlyRecommended);
end;

function  TGlobal.Zoom: WordBool;
begin
  Result := DefaultInterface.Zoom;
end;

function  TGlobal.ZoomTimescale: WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ZoomTimescale(Duration: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(Duration, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ZoomTimescale(Duration: OleVariant; Entire: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(Duration, Entire, EmptyParam, EmptyParam);
end;

function  TGlobal.ZoomTimescale(Duration: OleVariant; Entire: OleVariant; Selection: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(Duration, Entire, Selection, EmptyParam);
end;

function  TGlobal.ZoomTimescale(Duration: OleVariant; Entire: OleVariant; Selection: OleVariant;
                                Reset: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomTimescale(Duration, Entire, Selection, Reset);
end;

function  TGlobal.BoxZoom: WordBool;
begin
  Result := DefaultInterface.BoxZoom(EmptyParam, EmptyParam);
end;

function  TGlobal.BoxZoom(Percent: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxZoom(Percent, EmptyParam);
end;

function  TGlobal.BoxZoom(Percent: OleVariant; Entire: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxZoom(Percent, Entire);
end;

function  TGlobal.FileClose(Save: PjSaveType): WordBool;
begin
  Result := DefaultInterface.FileClose(Save, EmptyParam);
end;

function  TGlobal.FileClose(Save: PjSaveType; NoAuto: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileClose(Save, NoAuto);
end;

function  TGlobal.FileCloseAll(Save: PjSaveType): WordBool;
begin
  Result := DefaultInterface.FileCloseAll(Save);
end;

function  TGlobal.ResourceSharing: WordBool;
begin
  Result := DefaultInterface.ResourceSharing(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceSharing(Share: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharing(Share, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceSharing(Share: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharing(Share, Name, EmptyParam);
end;

function  TGlobal.ResourceSharing(Share: OleVariant; Name: OleVariant; Pool: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharing(Share, Name, Pool);
end;

function  TGlobal.FileSave: WordBool;
begin
  Result := DefaultInterface.FileSave;
end;

function  TGlobal.FileSaveAs(Name: OleVariant; Format: PjFileFormat; Backup: OleVariant;
                             ReadOnly: OleVariant; TaskInformation: OleVariant;
                             Filtered: OleVariant; Table: OleVariant; UserID: OleVariant;
                             DatabasePassWord: OleVariant; FormatID: OleVariant; Map: OleVariant;
                             Password: OleVariant; WriteResPassword: OleVariant;
                             ClearBaseline: OleVariant; ClearActuals: OleVariant;
                             ClearResourceRates: OleVariant; ClearFixedCosts: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileSaveAs(Name, Format, Backup, ReadOnly, TaskInformation, Filtered,
                                        Table, UserID, DatabasePassWord, FormatID, Map, Password,
                                        WriteResPassword, ClearBaseline, ClearActuals,
                                        ClearResourceRates, ClearFixedCosts);
end;

function  TGlobal.FileSaveWorkspace: WordBool;
begin
  Result := DefaultInterface.FileSaveWorkspace(EmptyParam);
end;

function  TGlobal.FileSaveWorkspace(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileSaveWorkspace(Name);
end;

function  TGlobal.FilePrint: WordBool;
begin
  Result := DefaultInterface.FilePrint(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                            Draft: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                            Draft: OleVariant; Copies: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                            Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                            Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                            ToDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       ToDate, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                            Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                            ToDate: OleVariant; OnePageWide: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       ToDate, OnePageWide, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                            Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                            ToDate: OleVariant; OnePageWide: OleVariant; Preview: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       ToDate, OnePageWide, Preview, EmptyParam);
end;

function  TGlobal.FilePrint(FromPage: OleVariant; ToPage: OleVariant; PageBreaks: OleVariant;
                            Draft: OleVariant; Copies: OleVariant; FromDate: OleVariant;
                            ToDate: OleVariant; OnePageWide: OleVariant; Preview: OleVariant;
                            Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrint(FromPage, ToPage, PageBreaks, Draft, Copies, FromDate,
                                       ToDate, OnePageWide, Preview, Color);
end;

function  TGlobal.ReportPrint: WordBool;
begin
  Result := DefaultInterface.ReportPrint(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                              PageBreaks: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                              PageBreaks: OleVariant; Draft: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                              PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                              PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                              FromDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         FromDate, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                              PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                              FromDate: OleVariant; ToDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         FromDate, ToDate, EmptyParam, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                              PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                              FromDate: OleVariant; ToDate: OleVariant; Preview: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         FromDate, ToDate, Preview, EmptyParam);
end;

function  TGlobal.ReportPrint(Name: OleVariant; FromPage: OleVariant; ToPage: OleVariant;
                              PageBreaks: OleVariant; Draft: OleVariant; Copies: OleVariant;
                              FromDate: OleVariant; ToDate: OleVariant; Preview: OleVariant;
                              Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrint(Name, FromPage, ToPage, PageBreaks, Draft, Copies,
                                         FromDate, ToDate, Preview, Color);
end;

function  TGlobal.FilePrintPreview: WordBool;
begin
  Result := DefaultInterface.FilePrintPreview;
end;

function  TGlobal.ReportPrintPreview: WordBool;
begin
  Result := DefaultInterface.ReportPrintPreview(EmptyParam);
end;

function  TGlobal.ReportPrintPreview(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReportPrintPreview(Name);
end;

function  TGlobal.FilePrintSetup: WordBool;
begin
  Result := DefaultInterface.FilePrintSetup(EmptyParam);
end;

function  TGlobal.FilePrintSetup(Printer: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePrintSetup(Printer);
end;

function  TGlobal.FilePageSetup: WordBool;
begin
  Result := DefaultInterface.FilePageSetup(EmptyParam);
end;

function  TGlobal.FilePageSetup(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetup(Name);
end;

function  TGlobal.FilePageSetupPage(Name: OleVariant; Portrait: OleVariant;
                                    PercentScale: OleVariant; PagesTall: OleVariant;
                                    PagesWide: OleVariant; PaperSize: PjPaperSize;
                                    FirstPageNumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupPage(Name, Portrait, PercentScale, PagesTall, PagesWide,
                                               PaperSize, FirstPageNumber);
end;

function  TGlobal.FilePageSetupMargins: WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupMargins(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupMargins(Name: OleVariant; Top: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, Bottom, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                       Left: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, Bottom, Left, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                       Left: OleVariant; Right: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, Bottom, Left, Right, EmptyParam);
end;

function  TGlobal.FilePageSetupMargins(Name: OleVariant; Top: OleVariant; Bottom: OleVariant;
                                       Left: OleVariant; Right: OleVariant; Borders: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupMargins(Name, Top, Bottom, Left, Right, Borders);
end;

function  TGlobal.FilePageSetupHeader(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupHeader(Name, Alignment, Text);
end;

function  TGlobal.FilePageSetupFooter(Name: OleVariant; Alignment: PjAlignment; Text: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupFooter(Name, Alignment, Text);
end;

function  TGlobal.FilePageSetupLegend(Name: OleVariant; TextWidth: OleVariant;
                                      LegendOn: OleVariant; Alignment: PjAlignment;
                                      Text: OleVariant; LabelFontName: OleVariant;
                                      LabelFontSize: OleVariant; LabelFontBold: OleVariant;
                                      LabelFontItalic: OleVariant; LabelFontUnderline: OleVariant;
                                      LabelFontColor: PjColor): WordBool;
begin
  Result := DefaultInterface.FilePageSetupLegend(Name, TextWidth, LegendOn, Alignment, Text,
                                                 LabelFontName, LabelFontSize, LabelFontBold,
                                                 LabelFontItalic, LabelFontUnderline, LabelFontColor);
end;

function  TGlobal.FilePageSetupView: WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupView(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                    RepeatColumns: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, RepeatColumns, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                    RepeatColumns: OleVariant; PrintNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, RepeatColumns, PrintNotes,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                    RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                    PrintBlankPages: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, RepeatColumns, PrintNotes,
                                               PrintBlankPages, EmptyParam);
end;

function  TGlobal.FilePageSetupView(Name: OleVariant; AllSheetColumns: OleVariant;
                                    RepeatColumns: OleVariant; PrintNotes: OleVariant;
                                    PrintBlankPages: OleVariant; BestPageFitTimescale: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupView(Name, AllSheetColumns, RepeatColumns, PrintNotes,
                                               PrintBlankPages, BestPageFitTimescale);
end;

function  TGlobal.FilePageSetupCalendar: WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                        OnlyDaysInMonth: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                        OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                        OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                        MonthPreviews: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                        OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                        MonthPreviews: OleVariant; MonthTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, MonthTitle,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                        OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                        MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                        AdditionalTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, MonthTitle,
                                                   AdditionalTasks, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                        OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                        MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                        AdditionalTasks: OleVariant;
                                        GroupAdditionalTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, MonthTitle,
                                                   AdditionalTasks, GroupAdditionalTasks, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendar(Name: OleVariant; MonthsPerPage: OleVariant;
                                        WeeksPerPage: OleVariant; ScreenWeekHeight: OleVariant;
                                        OnlyDaysInMonth: OleVariant; OnlyWeeksInMonth: OleVariant;
                                        MonthPreviews: OleVariant; MonthTitle: OleVariant;
                                        AdditionalTasks: OleVariant;
                                        GroupAdditionalTasks: OleVariant; PrintNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendar(Name, MonthsPerPage, WeeksPerPage,
                                                   ScreenWeekHeight, OnlyDaysInMonth,
                                                   OnlyWeeksInMonth, MonthPreviews, MonthTitle,
                                                   AdditionalTasks, GroupAdditionalTasks, PrintNotes);
end;

function  TGlobal.FilePageSetupCalendarText: WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendarText(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam);
end;

function  TGlobal.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam,
                                                       EmptyParam);
end;

function  TGlobal.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, EmptyParam, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                            Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, EmptyParam,
                                                       EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                            Size: OleVariant; Bold: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, Bold, EmptyParam,
                                                       EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                            Size: OleVariant; Bold: OleVariant; Italic: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, Bold, Italic,
                                                       EmptyParam, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                            Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                                            Underline: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, Bold, Italic,
                                                       Underline, EmptyParam);
end;

function  TGlobal.FilePageSetupCalendarText(Name: OleVariant; Item: OleVariant; Font: OleVariant;
                                            Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                                            Underline: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilePageSetupCalendarText(Name, Item, Font, Size, Bold, Italic,
                                                       Underline, Color);
end;

function  TGlobal.MailOpen: WordBool;
begin
  Result := DefaultInterface.MailOpen(EmptyParam);
end;

function  TGlobal.MailOpen(Any: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailOpen(Any);
end;

function  TGlobal.MailSend: WordBool;
begin
  Result := DefaultInterface.MailSend(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, EmptyParam, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                           Enclosures: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, EmptyParam, EmptyParam,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                           Enclosures: OleVariant; IncludeDocument: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                           Enclosures: OleVariant; IncludeDocument: OleVariant;
                           ReturnReceipt: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                           Enclosures: OleVariant; IncludeDocument: OleVariant;
                           ReturnReceipt: OleVariant; Bcc: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, Bcc, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                           Enclosures: OleVariant; IncludeDocument: OleVariant;
                           ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, Bcc, Urgent, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                           Enclosures: OleVariant; IncludeDocument: OleVariant;
                           ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant;
                           SaveCopy: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, Bcc, Urgent, SaveCopy, EmptyParam);
end;

function  TGlobal.MailSend(To_: OleVariant; Cc: OleVariant; Subject: OleVariant; Body: OleVariant;
                           Enclosures: OleVariant; IncludeDocument: OleVariant;
                           ReturnReceipt: OleVariant; Bcc: OleVariant; Urgent: OleVariant;
                           SaveCopy: OleVariant; AddRecipient: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSend(To_, Cc, Subject, Body, Enclosures, IncludeDocument,
                                      ReturnReceipt, Bcc, Urgent, SaveCopy, AddRecipient);
end;

function  TGlobal.MailSendScheduleNote: WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendScheduleNote(Manager: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                       TaskContacts: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                       TaskContacts: OleVariant; Selection: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                       TaskContacts: OleVariant; Selection: OleVariant;
                                       IncludeDocument: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  IncludeDocument, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                       TaskContacts: OleVariant; Selection: OleVariant;
                                       IncludeDocument: OleVariant; IncludePicture: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  IncludeDocument, IncludePicture, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                       TaskContacts: OleVariant; Selection: OleVariant;
                                       IncludeDocument: OleVariant; IncludePicture: OleVariant;
                                       Body: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  IncludeDocument, IncludePicture, Body, EmptyParam);
end;

function  TGlobal.MailSendScheduleNote(Manager: OleVariant; Resources: OleVariant;
                                       TaskContacts: OleVariant; Selection: OleVariant;
                                       IncludeDocument: OleVariant; IncludePicture: OleVariant;
                                       Body: OleVariant; Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendScheduleNote(Manager, Resources, TaskContacts, Selection,
                                                  IncludeDocument, IncludePicture, Body, Subject);
end;

function  TGlobal.MailPostDocument: WordBool;
begin
  Result := DefaultInterface.MailPostDocument;
end;

function  TGlobal.ODBCManageDataSources: WordBool;
begin
  Result := DefaultInterface.ODBCManageDataSources;
end;

function  TGlobal.ODBCCreateDataSource: WordBool;
begin
  Result := DefaultInterface.ODBCCreateDataSource;
end;

function  TGlobal.MailRoutingSlip: WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailRoutingSlip(To_: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailRoutingSlip(To_: OleVariant; Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  AllAtOnce: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  AllAtOnce: OleVariant; ReturnWhenDone: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, ReturnWhenDone,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                                  TrackStatus: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, ReturnWhenDone,
                                             TrackStatus, EmptyParam, EmptyParam);
end;

function  TGlobal.MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                                  TrackStatus: OleVariant; Clear: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, ReturnWhenDone,
                                             TrackStatus, Clear, EmptyParam);
end;

function  TGlobal.MailRoutingSlip(To_: OleVariant; Subject: OleVariant; Body: OleVariant;
                                  AllAtOnce: OleVariant; ReturnWhenDone: OleVariant;
                                  TrackStatus: OleVariant; Clear: OleVariant; SendNow: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailRoutingSlip(To_, Subject, Body, AllAtOnce, ReturnWhenDone,
                                             TrackStatus, Clear, SendNow);
end;

function  TGlobal.FileLoadLast: WordBool;
begin
  Result := DefaultInterface.FileLoadLast(EmptyParam);
end;

function  TGlobal.FileLoadLast(Number: OleVariant): WordBool;
begin
  Result := DefaultInterface.FileLoadLast(Number);
end;

function  TGlobal.FileExit(Save: PjSaveType): WordBool;
begin
  Result := DefaultInterface.FileExit(Save);
end;

function  TGlobal.MenuBars: WordBool;
begin
  Result := DefaultInterface.MenuBars;
end;

function  TGlobal.MenuBarEdit: WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MenuBarEdit(Copy: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(Copy, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MenuBarEdit(Copy: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(Copy, Create, EmptyParam, EmptyParam);
end;

function  TGlobal.MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(Copy, Create, Name, EmptyParam);
end;

function  TGlobal.MenuBarEdit(Copy: OleVariant; Create: OleVariant; Name: OleVariant;
                              NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarEdit(Copy, Create, Name, NewName);
end;

function  TGlobal.MenuBarApply(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.MenuBarApply(Name, EmptyParam, EmptyParam);
end;

function  TGlobal.MenuBarApply(const Name: WideString; Default: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarApply(Name, Default, EmptyParam);
end;

function  TGlobal.MenuBarApply(const Name: WideString; Default: OleVariant; NoFiles: OleVariant): WordBool;
begin
  Result := DefaultInterface.MenuBarApply(Name, Default, NoFiles);
end;

function  TGlobal.EditCut: WordBool;
begin
  Result := DefaultInterface.EditCut;
end;

function  TGlobal.EditCopy: WordBool;
begin
  Result := DefaultInterface.EditCopy;
end;

function  TGlobal.EditCopyPicture(Object_: OleVariant; ForPrinter: OleVariant;
                                  SelectedRows: OleVariant; FromDate: OleVariant;
                                  ToDate: OleVariant; FileName: OleVariant;
                                  ScaleOption: PjCopyPictureScaleOption): WordBool;
begin
  Result := DefaultInterface.EditCopyPicture(Object_, ForPrinter, SelectedRows, FromDate, ToDate,
                                             FileName, ScaleOption);
end;

function  TGlobal.EditPaste: WordBool;
begin
  Result := DefaultInterface.EditPaste;
end;

function  TGlobal.EditPasteSpecial: WordBool;
begin
  Result := DefaultInterface.EditPasteSpecial(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.EditPasteSpecial(Link: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditPasteSpecial(Link, EmptyParam, EmptyParam);
end;

function  TGlobal.EditPasteSpecial(Link: OleVariant; Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditPasteSpecial(Link, Type_, EmptyParam);
end;

function  TGlobal.EditPasteSpecial(Link: OleVariant; Type_: OleVariant; DisplayAsIcon: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditPasteSpecial(Link, Type_, DisplayAsIcon);
end;

function  TGlobal.EditClearFormats: WordBool;
begin
  Result := DefaultInterface.EditClearFormats;
end;

function  TGlobal.EditClear: WordBool;
begin
  Result := DefaultInterface.EditClear(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.EditClear(Contents: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditClear(Contents, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.EditClear(Contents: OleVariant; Formats: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditClear(Contents, Formats, EmptyParam, EmptyParam);
end;

function  TGlobal.EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditClear(Contents, Formats, Notes, EmptyParam);
end;

function  TGlobal.EditClear(Contents: OleVariant; Formats: OleVariant; Notes: OleVariant;
                            Hyperlinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditClear(Contents, Formats, Notes, Hyperlinks);
end;

function  TGlobal.RowClear: WordBool;
begin
  Result := DefaultInterface.RowClear;
end;

function  TGlobal.DDEPasteLink: WordBool;
begin
  Result := DefaultInterface.DDEPasteLink;
end;

function  TGlobal.EditDelete: WordBool;
begin
  Result := DefaultInterface.EditDelete;
end;

function  TGlobal.ColumnDelete: WordBool;
begin
  Result := DefaultInterface.ColumnDelete;
end;

function  TGlobal.RowDelete: WordBool;
begin
  Result := DefaultInterface.RowDelete;
end;

function  TGlobal.ObjectVerb: WordBool;
begin
  Result := DefaultInterface.ObjectVerb(EmptyParam);
end;

function  TGlobal.ObjectVerb(Verb: OleVariant): WordBool;
begin
  Result := DefaultInterface.ObjectVerb(Verb);
end;

function  TGlobal.ObjectLinks: WordBool;
begin
  Result := DefaultInterface.ObjectLinks;
end;

function  TGlobal.ObjectChangeIcon: WordBool;
begin
  Result := DefaultInterface.ObjectChangeIcon;
end;

function  TGlobal.ObjectConvert: WordBool;
begin
  Result := DefaultInterface.ObjectConvert;
end;

function  TGlobal.EditInsert: WordBool;
begin
  Result := DefaultInterface.EditInsert;
end;

function  TGlobal.ColumnInsert: WordBool;
begin
  Result := DefaultInterface.ColumnInsert;
end;

function  TGlobal.RowInsert: WordBool;
begin
  Result := DefaultInterface.RowInsert;
end;

function  TGlobal.LinkTasks: WordBool;
begin
  Result := DefaultInterface.LinkTasks;
end;

function  TGlobal.LinkTasksEdit(From: Integer; To_: Integer): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, Type_, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                                Lag: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, Type_, Lag, EmptyParam, EmptyParam);
end;

function  TGlobal.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                                Lag: OleVariant; PredecessorProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, Type_, Lag, PredecessorProjectName,
                                           EmptyParam);
end;

function  TGlobal.LinkTasksEdit(From: Integer; To_: Integer; Delete: OleVariant; Type_: OleVariant;
                                Lag: OleVariant; PredecessorProjectName: OleVariant;
                                SuccessorProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinkTasksEdit(From, To_, Delete, Type_, Lag, PredecessorProjectName,
                                           SuccessorProjectName);
end;

function  TGlobal.UnlinkTasks: WordBool;
begin
  Result := DefaultInterface.UnlinkTasks;
end;

function  TGlobal.ResourceAssignment(Resources: OleVariant; Operation: PjResAssignOperation;
                                     With_: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceAssignment(Resources, Operation, With_);
end;

function  TGlobal.EditGoTo: WordBool;
begin
  Result := DefaultInterface.EditGoTo(EmptyParam, EmptyParam);
end;

function  TGlobal.EditGoTo(ID: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditGoTo(ID, EmptyParam);
end;

function  TGlobal.EditGoTo(ID: OleVariant; Date: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditGoTo(ID, Date);
end;

function  TGlobal.GotoNextOverAllocation: WordBool;
begin
  Result := DefaultInterface.GotoNextOverAllocation;
end;

function  TGlobal.InsertNotes: WordBool;
begin
  Result := DefaultInterface.InsertNotes;
end;

function  TGlobal.Find: WordBool;
begin
  Result := DefaultInterface.Find(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.Find(Field: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.Find(Field: OleVariant; Test: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, Test, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.Find(Field: OleVariant; Test: OleVariant; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, Test, Value, EmptyParam, EmptyParam);
end;

function  TGlobal.Find(Field: OleVariant; Test: OleVariant; Value: OleVariant; Next: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, Test, Value, Next, EmptyParam);
end;

function  TGlobal.Find(Field: OleVariant; Test: OleVariant; Value: OleVariant; Next: OleVariant;
                       MatchCase: OleVariant): WordBool;
begin
  Result := DefaultInterface.Find(Field, Test, Value, Next, MatchCase);
end;

function  TGlobal.Replace: WordBool;
begin
  Result := DefaultInterface.Replace(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam);
end;

function  TGlobal.Replace(Field: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam);
end;

function  TGlobal.Replace(Field: OleVariant; Test: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                          Replacement: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, Replacement, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                          Replacement: OleVariant; ReplaceAll: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, Replacement, ReplaceAll, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                          Replacement: OleVariant; ReplaceAll: OleVariant; Next: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, Replacement, ReplaceAll, Next, EmptyParam);
end;

function  TGlobal.Replace(Field: OleVariant; Test: OleVariant; Value: OleVariant;
                          Replacement: OleVariant; ReplaceAll: OleVariant; Next: OleVariant;
                          MatchCase: OleVariant): WordBool;
begin
  Result := DefaultInterface.Replace(Field, Test, Value, Replacement, ReplaceAll, Next, MatchCase);
end;

function  TGlobal.SelectAll: WordBool;
begin
  Result := DefaultInterface.SelectAll;
end;

function  TGlobal.ObjectInsert: WordBool;
begin
  Result := DefaultInterface.ObjectInsert;
end;

function  TGlobal.SubscribeTo(Edition: OleVariant; Format: PjSubscribeFormat): WordBool;
begin
  Result := DefaultInterface.SubscribeTo(Edition, Format);
end;

function  TGlobal.SubscriberOptions: WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.SubscriberOptions(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.SubscriberOptions(Name: OleVariant; IsTask: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TGlobal.SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, UniqueID, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TGlobal.SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                    Field: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, UniqueID, Field, EmptyParam, EmptyParam);
end;

function  TGlobal.SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                    Field: OleVariant; Automatically: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, UniqueID, Field, Automatically,
                                               EmptyParam);
end;

function  TGlobal.SubscriberOptions(Name: OleVariant; IsTask: OleVariant; UniqueID: OleVariant;
                                    Field: OleVariant; Automatically: OleVariant; Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.SubscriberOptions(Name, IsTask, UniqueID, Field, Automatically, Action);
end;

function  TGlobal.CreatePublisher: WordBool;
begin
  Result := DefaultInterface.CreatePublisher(EmptyParam, EmptyParam);
end;

function  TGlobal.CreatePublisher(Edition: OleVariant): WordBool;
begin
  Result := DefaultInterface.CreatePublisher(Edition, EmptyParam);
end;

function  TGlobal.CreatePublisher(Edition: OleVariant; Contains: OleVariant): WordBool;
begin
  Result := DefaultInterface.CreatePublisher(Edition, Contains);
end;

function  TGlobal.PublisherOptions: WordBool;
begin
  Result := DefaultInterface.PublisherOptions(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PublisherOptions(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.PublisherOptions(Name: OleVariant; View: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                                   UniqueID: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, UniqueID, EmptyParam, EmptyParam,
                                              EmptyParam);
end;

function  TGlobal.PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                                   UniqueID: OleVariant; Field: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, UniqueID, Field, EmptyParam,
                                              EmptyParam);
end;

function  TGlobal.PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                                   UniqueID: OleVariant; Field: OleVariant; OnSave: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, UniqueID, Field, OnSave,
                                              EmptyParam);
end;

function  TGlobal.PublisherOptions(Name: OleVariant; View: OleVariant; IsTask: OleVariant;
                                   UniqueID: OleVariant; Field: OleVariant; OnSave: OleVariant;
                                   Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.PublisherOptions(Name, View, IsTask, UniqueID, Field, OnSave, Action);
end;

function  TGlobal.EditionStopAll: WordBool;
begin
  Result := DefaultInterface.EditionStopAll(EmptyParam);
end;

function  TGlobal.EditionStopAll(Stop: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditionStopAll(Stop);
end;

function  TGlobal.ClipboardShow: WordBool;
begin
  Result := DefaultInterface.ClipboardShow;
end;

function  TGlobal.ViewApply: WordBool;
begin
  Result := DefaultInterface.ViewApply(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewApply(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewApply(Name, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewApply(Name: OleVariant; SinglePane: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewApply(Name, SinglePane, EmptyParam);
end;

function  TGlobal.ViewApply(Name: OleVariant; SinglePane: OleVariant; Toggle: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewApply(Name, SinglePane, Toggle);
end;

function  TGlobal.ViewEditSingle: WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                 Screen: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                 Screen: OleVariant; ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                 Screen: OleVariant; ShowInMenu: OleVariant;
                                 HighlightFilter: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu,
                                            HighlightFilter, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                 Screen: OleVariant; ShowInMenu: OleVariant;
                                 HighlightFilter: OleVariant; Table: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu,
                                            HighlightFilter, Table, EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                 Screen: OleVariant; ShowInMenu: OleVariant;
                                 HighlightFilter: OleVariant; Table: OleVariant; Filter: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu,
                                            HighlightFilter, Table, Filter, EmptyParam);
end;

function  TGlobal.ViewEditSingle(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                 Screen: OleVariant; ShowInMenu: OleVariant;
                                 HighlightFilter: OleVariant; Table: OleVariant;
                                 Filter: OleVariant; Group: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditSingle(Name, Create, NewName, Screen, ShowInMenu,
                                            HighlightFilter, Table, Filter, Group);
end;

function  TGlobal.ViewEditCombination: WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditCombination(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TGlobal.ViewEditCombination(Name: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam);
end;

function  TGlobal.ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, NewName, EmptyParam, EmptyParam,
                                                 EmptyParam);
end;

function  TGlobal.ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                      TopView: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, NewName, TopView, EmptyParam,
                                                 EmptyParam);
end;

function  TGlobal.ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                      TopView: OleVariant; BottomView: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, NewName, TopView, BottomView,
                                                 EmptyParam);
end;

function  TGlobal.ViewEditCombination(Name: OleVariant; Create: OleVariant; NewName: OleVariant;
                                      TopView: OleVariant; BottomView: OleVariant;
                                      ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewEditCombination(Name, Create, NewName, TopView, BottomView,
                                                 ShowInMenu);
end;

function  TGlobal.TableApply: WordBool;
begin
  Result := DefaultInterface.TableApply(EmptyParam);
end;

function  TGlobal.TableApply(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableApply(Name);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, EmptyParam, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant;
                            Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant;
                            Width: OleVariant; Align: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, EmptyParam,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant;
                            Width: OleVariant; Align: OleVariant; ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant;
                            Width: OleVariant; Align: OleVariant; ShowInMenu: OleVariant;
                            LockFirstColumn: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, EmptyParam, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant;
                            Width: OleVariant; Align: OleVariant; ShowInMenu: OleVariant;
                            LockFirstColumn: OleVariant; DateFormat: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, DateFormat, EmptyParam, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant;
                            Width: OleVariant; Align: OleVariant; ShowInMenu: OleVariant;
                            LockFirstColumn: OleVariant; DateFormat: OleVariant;
                            RowHeight: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, DateFormat, RowHeight, EmptyParam,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant;
                            Width: OleVariant; Align: OleVariant; ShowInMenu: OleVariant;
                            LockFirstColumn: OleVariant; DateFormat: OleVariant;
                            RowHeight: OleVariant; ColumnPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, DateFormat, RowHeight, ColumnPosition,
                                       EmptyParam);
end;

function  TGlobal.TableEdit(const Name: WideString; TaskTable: WordBool; Create: OleVariant;
                            OverwriteExisting: OleVariant; NewName: OleVariant;
                            FieldName: OleVariant; NewFieldName: OleVariant; Title: OleVariant;
                            Width: OleVariant; Align: OleVariant; ShowInMenu: OleVariant;
                            LockFirstColumn: OleVariant; DateFormat: OleVariant;
                            RowHeight: OleVariant; ColumnPosition: OleVariant;
                            AlignTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.TableEdit(Name, TaskTable, Create, OverwriteExisting, NewName,
                                       FieldName, NewFieldName, Title, Width, Align, ShowInMenu,
                                       LockFirstColumn, DateFormat, RowHeight, ColumnPosition,
                                       AlignTitle);
end;

function  TGlobal.FilterApply: WordBool;
begin
  Result := DefaultInterface.FilterApply(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterApply(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterApply(Name, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterApply(Name: OleVariant; Highlight: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterApply(Name, Highlight, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterApply(Name: OleVariant; Highlight: OleVariant; Value1: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterApply(Name, Highlight, Value1, EmptyParam);
end;

function  TGlobal.FilterApply(Name: OleVariant; Highlight: OleVariant; Value1: OleVariant;
                              Value2: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterApply(Name, Highlight, Value1, Value2);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                             NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                             NewName: OleVariant; FieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                             NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                             NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                             Test: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, EmptyParam,
                                        EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                             NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                             Test: OleVariant; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, Value, EmptyParam,
                                        EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                             NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                             Test: OleVariant; Value: OleVariant; Operation: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, Value, Operation,
                                        EmptyParam, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                             NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                             Test: OleVariant; Value: OleVariant; Operation: OleVariant;
                             ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, Value, Operation,
                                        ShowInMenu, EmptyParam);
end;

function  TGlobal.FilterEdit(const Name: WideString; TaskFilter: WordBool; Create: OleVariant;
                             OverwriteExisting: OleVariant; Parenthesis: OleVariant;
                             NewName: OleVariant; FieldName: OleVariant; NewFieldName: OleVariant;
                             Test: OleVariant; Value: OleVariant; Operation: OleVariant;
                             ShowInMenu: OleVariant; ShowSummaryTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.FilterEdit(Name, TaskFilter, Create, OverwriteExisting, Parenthesis,
                                        NewName, FieldName, NewFieldName, Test, Value, Operation,
                                        ShowInMenu, ShowSummaryTasks);
end;

function  TGlobal.ProjectSummaryInfo: WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant; Comments: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant; Comments: OleVariant; Start: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                     Finish: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                     Finish: OleVariant; ScheduleFrom: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                     Finish: OleVariant; ScheduleFrom: OleVariant;
                                     CurrentDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                CurrentDate, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                     Finish: OleVariant; ScheduleFrom: OleVariant;
                                     CurrentDate: OleVariant; Calendar: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                CurrentDate, Calendar, EmptyParam, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                     Finish: OleVariant; ScheduleFrom: OleVariant;
                                     CurrentDate: OleVariant; Calendar: OleVariant;
                                     StatusDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                CurrentDate, Calendar, StatusDate, EmptyParam);
end;

function  TGlobal.ProjectSummaryInfo(Project: OleVariant; Title: OleVariant; Subject: OleVariant;
                                     Author: OleVariant; Company: OleVariant; Manager: OleVariant;
                                     Keywords: OleVariant; Comments: OleVariant; Start: OleVariant;
                                     Finish: OleVariant; ScheduleFrom: OleVariant;
                                     CurrentDate: OleVariant; Calendar: OleVariant;
                                     StatusDate: OleVariant; Priority: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectSummaryInfo(Project, Title, Subject, Author, Company, Manager,
                                                Keywords, Comments, Start, Finish, ScheduleFrom,
                                                CurrentDate, Calendar, StatusDate, Priority);
end;

function  TGlobal.ProjectStatistics: WordBool;
begin
  Result := DefaultInterface.ProjectStatistics(EmptyParam);
end;

function  TGlobal.ProjectStatistics(Project: OleVariant): WordBool;
begin
  Result := DefaultInterface.ProjectStatistics(Project);
end;

function  TGlobal.OptionsCalendar: WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                                  StartTime: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                                  StartTime: OleVariant; FinishTime: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                                  StartTime: OleVariant; FinishTime: OleVariant;
                                  HoursPerDay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                                  StartTime: OleVariant; FinishTime: OleVariant;
                                  HoursPerDay: OleVariant; HoursPerWeek: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                                  StartTime: OleVariant; FinishTime: OleVariant;
                                  HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                                  SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, SetDefaults, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                                  StartTime: OleVariant; FinishTime: OleVariant;
                                  HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                                  SetDefaults: OleVariant; StartWeekOn: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, SetDefaults, StartWeekOn,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                                  StartTime: OleVariant; FinishTime: OleVariant;
                                  HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                                  SetDefaults: OleVariant; StartWeekOn: OleVariant;
                                  UseFYStartYear: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, SetDefaults, StartWeekOn,
                                             UseFYStartYear, EmptyParam);
end;

function  TGlobal.OptionsCalendar(StartWeekOnMonday: OleVariant; StartYearIn: OleVariant;
                                  StartTime: OleVariant; FinishTime: OleVariant;
                                  HoursPerDay: OleVariant; HoursPerWeek: OleVariant;
                                  SetDefaults: OleVariant; StartWeekOn: OleVariant;
                                  UseFYStartYear: OleVariant; DaysPerMonth: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalendar(StartWeekOnMonday, StartYearIn, StartTime, FinishTime,
                                             HoursPerDay, HoursPerWeek, SetDefaults, StartWeekOn,
                                             UseFYStartYear, DaysPerMonth);
end;

function  TGlobal.OptionsEdit: WordBool;
begin
  Result := DefaultInterface.OptionsEdit(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                              SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                              SetDefaults: OleVariant; MonthLabelDisplay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                              SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                              SetDefaultsTimeUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                              SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                              SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                              SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                              SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                              FollowedHyperlinkColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, FollowedHyperlinkColor, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                              SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                              SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                              FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, FollowedHyperlinkColor,
                                         UnderlineHyperlinks, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                              SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                              SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                              FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                              SetDefaultsHyperlink: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, FollowedHyperlinkColor,
                                         UnderlineHyperlinks, SetDefaultsHyperlink, EmptyParam);
end;

function  TGlobal.OptionsEdit(MoveAfterReturn: OleVariant; DragAndDrop: OleVariant;
                              UpdateLinks: OleVariant; CopyResourceUsageHeader: OleVariant;
                              PhoneticInfo: OleVariant; PhoneticType: OleVariant;
                              MinuteLabelDisplay: OleVariant; HourLabelDisplay: OleVariant;
                              DayLabelDisplay: OleVariant; WeekLabelDisplay: OleVariant;
                              YearLabelDisplay: OleVariant; SpaceBeforeTimeLabel: OleVariant;
                              SetDefaults: OleVariant; MonthLabelDisplay: OleVariant;
                              SetDefaultsTimeUnits: OleVariant; HyperlinkColor: OleVariant;
                              FollowedHyperlinkColor: OleVariant; UnderlineHyperlinks: OleVariant;
                              SetDefaultsHyperlink: OleVariant; InCellEditing: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsEdit(MoveAfterReturn, DragAndDrop, UpdateLinks,
                                         CopyResourceUsageHeader, PhoneticInfo, PhoneticType,
                                         MinuteLabelDisplay, HourLabelDisplay, DayLabelDisplay,
                                         WeekLabelDisplay, YearLabelDisplay, SpaceBeforeTimeLabel,
                                         SetDefaults, MonthLabelDisplay, SetDefaultsTimeUnits,
                                         HyperlinkColor, FollowedHyperlinkColor,
                                         UnderlineHyperlinks, SetDefaultsHyperlink, InCellEditing);
end;

function  TGlobal.OptionsGeneral: WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant; UserName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant;
                                 UserName: OleVariant; SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant;
                                 UserName: OleVariant; SetDefaults: OleVariant;
                                 ShowWelcome: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant;
                                 UserName: OleVariant; SetDefaults: OleVariant;
                                 ShowWelcome: OleVariant; AutoFilter: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant;
                                 UserName: OleVariant; SetDefaults: OleVariant;
                                 ShowWelcome: OleVariant; AutoFilter: OleVariant;
                                 MacroVirusProtection: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            MacroVirusProtection, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant;
                                 UserName: OleVariant; SetDefaults: OleVariant;
                                 ShowWelcome: OleVariant; AutoFilter: OleVariant;
                                 MacroVirusProtection: OleVariant; DisplayRecentFiles: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            MacroVirusProtection, DisplayRecentFiles, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant;
                                 UserName: OleVariant; SetDefaults: OleVariant;
                                 ShowWelcome: OleVariant; AutoFilter: OleVariant;
                                 MacroVirusProtection: OleVariant; DisplayRecentFiles: OleVariant;
                                 RecentFilesMaximum: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            MacroVirusProtection, DisplayRecentFiles,
                                            RecentFilesMaximum, EmptyParam);
end;

function  TGlobal.OptionsGeneral(PlanningWizard: OleVariant; WizardUsage: OleVariant;
                                 WizardErrors: OleVariant; WizardScheduling: OleVariant;
                                 ShowTipOfDay: OleVariant; AutoAddResources: OleVariant;
                                 StandardRate: OleVariant; OvertimeRate: OleVariant;
                                 LastFile: OleVariant; SummaryInfo: OleVariant;
                                 UserName: OleVariant; SetDefaults: OleVariant;
                                 ShowWelcome: OleVariant; AutoFilter: OleVariant;
                                 MacroVirusProtection: OleVariant; DisplayRecentFiles: OleVariant;
                                 RecentFilesMaximum: OleVariant; FontConversion: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsGeneral(PlanningWizard, WizardUsage, WizardErrors,
                                            WizardScheduling, ShowTipOfDay, AutoAddResources,
                                            StandardRate, OvertimeRate, LastFile, SummaryInfo,
                                            UserName, SetDefaults, ShowWelcome, AutoFilter,
                                            MacroVirusProtection, DisplayRecentFiles,
                                            RecentFilesMaximum, FontConversion);
end;

function  TGlobal.OptionsSchedule: WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant; WorkUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant; WorkUnits: OleVariant;
                                  AutoTrack: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant; WorkUnits: OleVariant;
                                  AutoTrack: OleVariant; SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant; WorkUnits: OleVariant;
                                  AutoTrack: OleVariant; SetDefaults: OleVariant;
                                  AssignmentUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant; WorkUnits: OleVariant;
                                  AutoTrack: OleVariant; SetDefaults: OleVariant;
                                  AssignmentUnits: OleVariant; EffortDriven: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EffortDriven, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant; WorkUnits: OleVariant;
                                  AutoTrack: OleVariant; SetDefaults: OleVariant;
                                  AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                                  HonorConstraints: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EffortDriven, HonorConstraints, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant; WorkUnits: OleVariant;
                                  AutoTrack: OleVariant; SetDefaults: OleVariant;
                                  AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                                  HonorConstraints: OleVariant; ShowEstimated: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EffortDriven, HonorConstraints, ShowEstimated,
                                             EmptyParam);
end;

function  TGlobal.OptionsSchedule(ScheduleMessages: OleVariant; StartOnCurrentDate: OleVariant;
                                  AutoLink: OleVariant; AutoSplit: OleVariant;
                                  CriticalSlack: OleVariant; TaskType: OleVariant;
                                  DurationUnits: OleVariant; WorkUnits: OleVariant;
                                  AutoTrack: OleVariant; SetDefaults: OleVariant;
                                  AssignmentUnits: OleVariant; EffortDriven: OleVariant;
                                  HonorConstraints: OleVariant; ShowEstimated: OleVariant;
                                  NewTasksEstimated: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSchedule(ScheduleMessages, StartOnCurrentDate, AutoLink,
                                             AutoSplit, CriticalSlack, TaskType, DurationUnits,
                                             WorkUnits, AutoTrack, SetDefaults, AssignmentUnits,
                                             EffortDriven, HonorConstraints, ShowEstimated,
                                             NewTasksEstimated);
end;

function  TGlobal.OptionsView: WordBool;
begin
  Result := DefaultInterface.OptionsView(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                              DisplaySummaryTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                              DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                              DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                              DisplayExternalSuccessors: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                              DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                              DisplayExternalSuccessors: OleVariant;
                              DisplayExternalPredecessors: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                              DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                              DisplayExternalSuccessors: OleVariant;
                              DisplayExternalPredecessors: OleVariant;
                              CrossProjectLinksInfo: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         CrossProjectLinksInfo, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                              DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                              DisplayExternalSuccessors: OleVariant;
                              DisplayExternalPredecessors: OleVariant;
                              CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         CrossProjectLinksInfo, AcceptNewExternalData, EmptyParam,
                                         EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                              DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                              DisplayExternalSuccessors: OleVariant;
                              DisplayExternalPredecessors: OleVariant;
                              CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant;
                              DisplayWindowsInTaskbar: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         CrossProjectLinksInfo, AcceptNewExternalData,
                                         DisplayWindowsInTaskbar, EmptyParam);
end;

function  TGlobal.OptionsView(DefaultView: OleVariant; DateFormat: OleVariant;
                              ProjectSummary: OleVariant; DisplayStatusBar: OleVariant;
                              DisplayEntryBar: OleVariant; DisplayScrollBars: OleVariant;
                              CurrencySymbol: OleVariant; SymbolPlacement: OleVariant;
                              CurrencyDigits: OleVariant; DisplayOutlineNumber: OleVariant;
                              DisplayOutlineSymbols: OleVariant; DisplayNameIndent: OleVariant;
                              DisplaySummaryTasks: OleVariant; DisplayOLEIndicator: OleVariant;
                              DisplayExternalSuccessors: OleVariant;
                              DisplayExternalPredecessors: OleVariant;
                              CrossProjectLinksInfo: OleVariant; AcceptNewExternalData: OleVariant;
                              DisplayWindowsInTaskbar: OleVariant; DisplayScreentips: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsView(DefaultView, DateFormat, ProjectSummary, DisplayStatusBar,
                                         DisplayEntryBar, DisplayScrollBars, CurrencySymbol,
                                         SymbolPlacement, CurrencyDigits, DisplayOutlineNumber,
                                         DisplayOutlineSymbols, DisplayNameIndent,
                                         DisplaySummaryTasks, DisplayOLEIndicator,
                                         DisplayExternalSuccessors, DisplayExternalPredecessors,
                                         CrossProjectLinksInfo, AcceptNewExternalData,
                                         DisplayWindowsInTaskbar, DisplayScreentips);
end;

function  TGlobal.OptionsWorkgroup: WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                                   FollowedHyperlinkColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                                   FollowedHyperlinkColor: OleVariant;
                                   UnderlineHyperlinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                                   FollowedHyperlinkColor: OleVariant;
                                   UnderlineHyperlinks: OleVariant; SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                                   FollowedHyperlinkColor: OleVariant;
                                   UnderlineHyperlinks: OleVariant; SetDefaults: OleVariant;
                                   ServerIdentification: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, EmptyParam, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                                   FollowedHyperlinkColor: OleVariant;
                                   UnderlineHyperlinks: OleVariant; SetDefaults: OleVariant;
                                   ServerIdentification: OleVariant; AllowTaskDelegation: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, AllowTaskDelegation,
                                              EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                                   FollowedHyperlinkColor: OleVariant;
                                   UnderlineHyperlinks: OleVariant; SetDefaults: OleVariant;
                                   ServerIdentification: OleVariant;
                                   AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, AllowTaskDelegation,
                                              UpdateProjectToWeb, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                                   FollowedHyperlinkColor: OleVariant;
                                   UnderlineHyperlinks: OleVariant; SetDefaults: OleVariant;
                                   ServerIdentification: OleVariant;
                                   AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant;
                                   SetDefaultsMessaging: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, AllowTaskDelegation,
                                              UpdateProjectToWeb, SetDefaultsMessaging, EmptyParam);
end;

function  TGlobal.OptionsWorkgroup(WorkgroupMessages: OleVariant; ServerURL: OleVariant;
                                   ServerPath: OleVariant; ReceiveNotifications: OleVariant;
                                   SendHyperlinkNote: OleVariant; HyperlinkColor: OleVariant;
                                   FollowedHyperlinkColor: OleVariant;
                                   UnderlineHyperlinks: OleVariant; SetDefaults: OleVariant;
                                   ServerIdentification: OleVariant;
                                   AllowTaskDelegation: OleVariant; UpdateProjectToWeb: OleVariant;
                                   SetDefaultsMessaging: OleVariant;
                                   SetDefaultsWebServer: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsWorkgroup(WorkgroupMessages, ServerURL, ServerPath,
                                              ReceiveNotifications, SendHyperlinkNote,
                                              HyperlinkColor, FollowedHyperlinkColor,
                                              UnderlineHyperlinks, SetDefaults,
                                              ServerIdentification, AllowTaskDelegation,
                                              UpdateProjectToWeb, SetDefaultsMessaging,
                                              SetDefaultsWebServer);
end;

function  TGlobal.OptionsCalculation: WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                     SpreadPercentToStatusDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                     SpreadPercentToStatusDate: OleVariant;
                                     SpreadCostsToStatusDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                     SpreadPercentToStatusDate: OleVariant;
                                     SpreadCostsToStatusDate: OleVariant; AutoCalcCosts: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                     SpreadPercentToStatusDate: OleVariant;
                                     SpreadCostsToStatusDate: OleVariant;
                                     AutoCalcCosts: OleVariant; FixedCostAccrual: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                     SpreadPercentToStatusDate: OleVariant;
                                     SpreadCostsToStatusDate: OleVariant;
                                     AutoCalcCosts: OleVariant; FixedCostAccrual: OleVariant;
                                     CalcMultipleCriticalPaths: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, CalcMultipleCriticalPaths,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                     SpreadPercentToStatusDate: OleVariant;
                                     SpreadCostsToStatusDate: OleVariant;
                                     AutoCalcCosts: OleVariant; FixedCostAccrual: OleVariant;
                                     CalcMultipleCriticalPaths: OleVariant;
                                     CriticalSlack: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, CalcMultipleCriticalPaths,
                                                CriticalSlack, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                     SpreadPercentToStatusDate: OleVariant;
                                     SpreadCostsToStatusDate: OleVariant;
                                     AutoCalcCosts: OleVariant; FixedCostAccrual: OleVariant;
                                     CalcMultipleCriticalPaths: OleVariant;
                                     CriticalSlack: OleVariant; SetDefaults: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, CalcMultipleCriticalPaths,
                                                CriticalSlack, SetDefaults, EmptyParam);
end;

function  TGlobal.OptionsCalculation(Automatic: OleVariant; AutoTrack: OleVariant;
                                     SpreadPercentToStatusDate: OleVariant;
                                     SpreadCostsToStatusDate: OleVariant;
                                     AutoCalcCosts: OleVariant; FixedCostAccrual: OleVariant;
                                     CalcMultipleCriticalPaths: OleVariant;
                                     CriticalSlack: OleVariant; SetDefaults: OleVariant;
                                     CalcInsProjLikeSummTask: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsCalculation(Automatic, AutoTrack, SpreadPercentToStatusDate,
                                                SpreadCostsToStatusDate, AutoCalcCosts,
                                                FixedCostAccrual, CalcMultipleCriticalPaths,
                                                CriticalSlack, SetDefaults, CalcInsProjLikeSummTask);
end;

function  TGlobal.CalculateAll: WordBool;
begin
  Result := DefaultInterface.CalculateAll;
end;

function  TGlobal.OptionsPreferences: WordBool;
begin
  Result := DefaultInterface.OptionsPreferences;
end;

function  TGlobal.ChangeWorkingTime: WordBool;
begin
  Result := DefaultInterface.ChangeWorkingTime;
end;

function  TGlobal.BaseCalendars: WordBool;
begin
  Result := DefaultInterface.BaseCalendars;
end;

function  TGlobal.BaseCalendarCreate(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarCreate(Name, EmptyParam);
end;

function  TGlobal.BaseCalendarCreate(const Name: WideString; FromName: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarCreate(Name, FromName);
end;

function  TGlobal.BaseCalendarRename(const FromName: WideString; const ToName: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarRename(FromName, ToName);
end;

function  TGlobal.BaseCalendarDelete(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarDelete(Name);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant; Working: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant; To2: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant; To2: OleVariant; From3: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant; To2: OleVariant; From3: OleVariant;
                                       To3: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, EmptyParam,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant; To2: OleVariant; From3: OleVariant;
                                       To3: OleVariant; Default: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant; To2: OleVariant; From3: OleVariant;
                                       To3: OleVariant; Default: OleVariant; From4: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  From4, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant; To2: OleVariant; From3: OleVariant;
                                       To3: OleVariant; Default: OleVariant; From4: OleVariant;
                                       To4: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  From4, To4, EmptyParam, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant; To2: OleVariant; From3: OleVariant;
                                       To3: OleVariant; Default: OleVariant; From4: OleVariant;
                                       To4: OleVariant; From5: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  From4, To4, From5, EmptyParam);
end;

function  TGlobal.BaseCalendarEditDays(const Name: WideString; StartDate: OleVariant;
                                       EndDate: OleVariant; WeekDay: OleVariant;
                                       Working: OleVariant; From1: OleVariant; To1: OleVariant;
                                       From2: OleVariant; To2: OleVariant; From3: OleVariant;
                                       To3: OleVariant; Default: OleVariant; From4: OleVariant;
                                       To4: OleVariant; From5: OleVariant; To5: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaseCalendarEditDays(Name, StartDate, EndDate, WeekDay, Working,
                                                  From1, To1, From2, To2, From3, To3, Default,
                                                  From4, To4, From5, To5);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant; From2: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                           To2: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                           To2: OleVariant; From3: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                           To2: OleVariant; From3: OleVariant; To3: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                           To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                           From4: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, From4,
                                                      EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                           To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                           From4: OleVariant; To4: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, From4, To4,
                                                      EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                           To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                           From4: OleVariant; To4: OleVariant; From5: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, From4, To4,
                                                      From5, EmptyParam);
end;

function  TGlobal.ResourceCalendarEditDays(const ProjectName: WideString;
                                           const ResourceName: WideString; StartDate: OleVariant;
                                           EndDate: OleVariant; WeekDay: OleVariant;
                                           Working: OleVariant; Default: OleVariant;
                                           From1: OleVariant; To1: OleVariant; From2: OleVariant;
                                           To2: OleVariant; From3: OleVariant; To3: OleVariant;
                                           From4: OleVariant; To4: OleVariant; From5: OleVariant;
                                           To5: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarEditDays(ProjectName, ResourceName, StartDate,
                                                      EndDate, WeekDay, Working, Default, From1,
                                                      To1, From2, To2, From3, To3, From4, To4,
                                                      From5, To5);
end;

function  TGlobal.BaseCalendarReset(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BaseCalendarReset(Name);
end;

function  TGlobal.ResourceCalendarReset(const ProjectName: WideString;
                                        const ResourceName: WideString): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarReset(ProjectName, ResourceName, EmptyParam);
end;

function  TGlobal.ResourceCalendarReset(const ProjectName: WideString;
                                        const ResourceName: WideString; BaseCalendar: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceCalendarReset(ProjectName, ResourceName, BaseCalendar);
end;

function  TGlobal.ResourceCalendars: WordBool;
begin
  Result := DefaultInterface.ResourceCalendars;
end;

function  TGlobal.LevelingOptions: WordBool;
begin
  Result := DefaultInterface.LevelingOptions(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                  AutoClearLeveling: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                  AutoClearLeveling: OleVariant; Order: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                  AutoClearLeveling: OleVariant; Order: OleVariant;
                                  LevelEntireProject: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                  AutoClearLeveling: OleVariant; Order: OleVariant;
                                  LevelEntireProject: OleVariant; FromDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                  AutoClearLeveling: OleVariant; Order: OleVariant;
                                  LevelEntireProject: OleVariant; FromDate: OleVariant;
                                  ToDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, ToDate, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                  AutoClearLeveling: OleVariant; Order: OleVariant;
                                  LevelEntireProject: OleVariant; FromDate: OleVariant;
                                  ToDate: OleVariant; PeriodBasis: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, ToDate, PeriodBasis,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                  AutoClearLeveling: OleVariant; Order: OleVariant;
                                  LevelEntireProject: OleVariant; FromDate: OleVariant;
                                  ToDate: OleVariant; PeriodBasis: OleVariant;
                                  LevelIndividualAssignments: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, ToDate, PeriodBasis,
                                             LevelIndividualAssignments, EmptyParam);
end;

function  TGlobal.LevelingOptions(Automatic: OleVariant; DelayInSlack: OleVariant;
                                  AutoClearLeveling: OleVariant; Order: OleVariant;
                                  LevelEntireProject: OleVariant; FromDate: OleVariant;
                                  ToDate: OleVariant; PeriodBasis: OleVariant;
                                  LevelIndividualAssignments: OleVariant;
                                  LevelingCanSplit: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingOptions(Automatic, DelayInSlack, AutoClearLeveling, Order,
                                             LevelEntireProject, FromDate, ToDate, PeriodBasis,
                                             LevelIndividualAssignments, LevelingCanSplit);
end;

function  TGlobal.LevelNow: WordBool;
begin
  Result := DefaultInterface.LevelNow(EmptyParam);
end;

function  TGlobal.LevelNow(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelNow(All);
end;

function  TGlobal.BaselineSave: WordBool;
begin
  Result := DefaultInterface.BaselineSave(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BaselineSave(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineSave(All, EmptyParam, EmptyParam);
end;

function  TGlobal.BaselineSave(All: OleVariant; Copy: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineSave(All, Copy, EmptyParam);
end;

function  TGlobal.BaselineSave(All: OleVariant; Copy: OleVariant; Into: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineSave(All, Copy, Into);
end;

function  TGlobal.UpdateProject: WordBool;
begin
  Result := DefaultInterface.UpdateProject(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.UpdateProject(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateProject(All, EmptyParam, EmptyParam);
end;

function  TGlobal.UpdateProject(All: OleVariant; UpdateDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateProject(All, UpdateDate, EmptyParam);
end;

function  TGlobal.UpdateProject(All: OleVariant; UpdateDate: OleVariant; Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateProject(All, UpdateDate, Action);
end;

function  TGlobal.UpdateTasks: WordBool;
begin
  Result := DefaultInterface.UpdateTasks(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.UpdateTasks(PercentComplete: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                              RemainingDuration: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, RemainingDuration,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                              RemainingDuration: OleVariant; ActualStart: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, RemainingDuration,
                                         ActualStart, EmptyParam, EmptyParam);
end;

function  TGlobal.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                              RemainingDuration: OleVariant; ActualStart: OleVariant;
                              ActualFinish: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, RemainingDuration,
                                         ActualStart, ActualFinish, EmptyParam);
end;

function  TGlobal.UpdateTasks(PercentComplete: OleVariant; ActualDuration: OleVariant;
                              RemainingDuration: OleVariant; ActualStart: OleVariant;
                              ActualFinish: OleVariant; Notes: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateTasks(PercentComplete, ActualDuration, RemainingDuration,
                                         ActualStart, ActualFinish, Notes);
end;

function  TGlobal.WindowNewWindow: WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.WindowNewWindow(Projects: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(Projects, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.WindowNewWindow(Projects: OleVariant; View: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(Projects, View, EmptyParam, EmptyParam);
end;

function  TGlobal.WindowNewWindow(Projects: OleVariant; View: OleVariant; AllProjects: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(Projects, View, AllProjects, EmptyParam);
end;

function  TGlobal.WindowNewWindow(Projects: OleVariant; View: OleVariant; AllProjects: OleVariant;
                                  ShowDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNewWindow(Projects, View, AllProjects, ShowDialog);
end;

function  TGlobal.WindowArrangeAll: WordBool;
begin
  Result := DefaultInterface.WindowArrangeAll;
end;

function  TGlobal.WindowHide: WordBool;
begin
  Result := DefaultInterface.WindowHide(EmptyParam);
end;

function  TGlobal.WindowHide(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowHide(Name);
end;

function  TGlobal.WindowUnhide: WordBool;
begin
  Result := DefaultInterface.WindowUnhide(EmptyParam);
end;

function  TGlobal.WindowUnhide(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowUnhide(Name);
end;

function  TGlobal.WindowActivate: WordBool;
begin
  Result := DefaultInterface.WindowActivate(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.WindowActivate(WindowName: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowActivate(WindowName, EmptyParam, EmptyParam);
end;

function  TGlobal.WindowActivate(WindowName: OleVariant; DialogID: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowActivate(WindowName, DialogID, EmptyParam);
end;

function  TGlobal.WindowActivate(WindowName: OleVariant; DialogID: OleVariant; TopPane: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowActivate(WindowName, DialogID, TopPane);
end;

function  TGlobal.PageBreakSet: WordBool;
begin
  Result := DefaultInterface.PageBreakSet;
end;

function  TGlobal.PageBreakRemove: WordBool;
begin
  Result := DefaultInterface.PageBreakRemove;
end;

function  TGlobal.PageBreaksRemoveAll: WordBool;
begin
  Result := DefaultInterface.PageBreaksRemoveAll;
end;

function  TGlobal.ViewShowResourcesPredecessors: WordBool;
begin
  Result := DefaultInterface.ViewShowResourcesPredecessors;
end;

function  TGlobal.ViewShowResourcesSuccessors: WordBool;
begin
  Result := DefaultInterface.ViewShowResourcesSuccessors;
end;

function  TGlobal.ViewShowPredecessorsSuccessors: WordBool;
begin
  Result := DefaultInterface.ViewShowPredecessorsSuccessors;
end;

function  TGlobal.ViewShowNotes: WordBool;
begin
  Result := DefaultInterface.ViewShowNotes;
end;

function  TGlobal.ViewShowObjects: WordBool;
begin
  Result := DefaultInterface.ViewShowObjects;
end;

function  TGlobal.ViewShowOverallocation: WordBool;
begin
  Result := DefaultInterface.ViewShowOverallocation;
end;

function  TGlobal.ViewShowPercentAllocation: WordBool;
begin
  Result := DefaultInterface.ViewShowPercentAllocation;
end;

function  TGlobal.ViewShowWork: WordBool;
begin
  Result := DefaultInterface.ViewShowWork;
end;

function  TGlobal.ViewShowCost: WordBool;
begin
  Result := DefaultInterface.ViewShowCost;
end;

function  TGlobal.ViewShowSchedule: WordBool;
begin
  Result := DefaultInterface.ViewShowSchedule;
end;

function  TGlobal.ViewShowPeakUnits: WordBool;
begin
  Result := DefaultInterface.ViewShowPeakUnits;
end;

function  TGlobal.ViewShowAvailability: WordBool;
begin
  Result := DefaultInterface.ViewShowAvailability;
end;

function  TGlobal.ViewShowRemainingAvailability: WordBool;
begin
  Result := DefaultInterface.ViewShowRemainingAvailability;
end;

function  TGlobal.ViewShowCumulativeWork: WordBool;
begin
  Result := DefaultInterface.ViewShowCumulativeWork;
end;

function  TGlobal.ViewShowCumulativeCost: WordBool;
begin
  Result := DefaultInterface.ViewShowCumulativeCost;
end;

function  TGlobal.PaneNext: WordBool;
begin
  Result := DefaultInterface.PaneNext;
end;

function  TGlobal.PaneCreate: WordBool;
begin
  Result := DefaultInterface.PaneCreate;
end;

function  TGlobal.FormViewShow: WordBool;
begin
  Result := DefaultInterface.FormViewShow;
end;

function  TGlobal.PaneClose: WordBool;
begin
  Result := DefaultInterface.PaneClose;
end;

function  TGlobal.WindowSplit: WordBool;
begin
  Result := DefaultInterface.WindowSplit;
end;

function  TGlobal.WindowNext: WordBool;
begin
  Result := DefaultInterface.WindowNext(EmptyParam);
end;

function  TGlobal.WindowNext(NoWrap: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowNext(NoWrap);
end;

function  TGlobal.WindowPrev: WordBool;
begin
  Result := DefaultInterface.WindowPrev(EmptyParam);
end;

function  TGlobal.WindowPrev(NoWrap: OleVariant): WordBool;
begin
  Result := DefaultInterface.WindowPrev(NoWrap);
end;

function  TGlobal.DocClose: WordBool;
begin
  Result := DefaultInterface.DocClose;
end;

function  TGlobal.AppMaximize: WordBool;
begin
  Result := DefaultInterface.AppMaximize;
end;

function  TGlobal.AppMinimize: WordBool;
begin
  Result := DefaultInterface.AppMinimize;
end;

function  TGlobal.AppMove: WordBool;
begin
  Result := DefaultInterface.AppMove(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.AppMove(XPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppMove(XPosition, EmptyParam, EmptyParam);
end;

function  TGlobal.AppMove(XPosition: OleVariant; YPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppMove(XPosition, YPosition, EmptyParam);
end;

function  TGlobal.AppMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppMove(XPosition, YPosition, Points);
end;

function  TGlobal.AppRestore: WordBool;
begin
  Result := DefaultInterface.AppRestore;
end;

function  TGlobal.AppSize: WordBool;
begin
  Result := DefaultInterface.AppSize(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.AppSize(Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppSize(Width, EmptyParam, EmptyParam);
end;

function  TGlobal.AppSize(Width: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppSize(Width, Height, EmptyParam);
end;

function  TGlobal.AppSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppSize(Width, Height, Points);
end;

function  TGlobal.DocMaximize: WordBool;
begin
  Result := DefaultInterface.DocMaximize;
end;

function  TGlobal.DocMove: WordBool;
begin
  Result := DefaultInterface.DocMove(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DocMove(XPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocMove(XPosition, EmptyParam, EmptyParam);
end;

function  TGlobal.DocMove(XPosition: OleVariant; YPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocMove(XPosition, YPosition, EmptyParam);
end;

function  TGlobal.DocMove(XPosition: OleVariant; YPosition: OleVariant; Points: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocMove(XPosition, YPosition, Points);
end;

function  TGlobal.DocRestore: WordBool;
begin
  Result := DefaultInterface.DocRestore;
end;

function  TGlobal.DocSize: WordBool;
begin
  Result := DefaultInterface.DocSize(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DocSize(Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocSize(Width, EmptyParam, EmptyParam);
end;

function  TGlobal.DocSize(Width: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocSize(Width, Height, EmptyParam);
end;

function  TGlobal.DocSize(Width: OleVariant; Height: OleVariant; Points: OleVariant): WordBool;
begin
  Result := DefaultInterface.DocSize(Width, Height, Points);
end;

function  TGlobal.OutlineOutdent: WordBool;
begin
  Result := DefaultInterface.OutlineOutdent(EmptyParam);
end;

function  TGlobal.OutlineOutdent(Levels: OleVariant): WordBool;
begin
  Result := DefaultInterface.OutlineOutdent(Levels);
end;

function  TGlobal.OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel): WordBool;
begin
  Result := DefaultInterface.OutlineShowTasks(OutlineNumber, EmptyParam);
end;

function  TGlobal.OutlineShowTasks(OutlineNumber: PJTaskOutlineShowLevel;
                                   ExpandInsertedProjects: OleVariant): WordBool;
begin
  Result := DefaultInterface.OutlineShowTasks(OutlineNumber, ExpandInsertedProjects);
end;

function  TGlobal.OutlineIndent: WordBool;
begin
  Result := DefaultInterface.OutlineIndent(EmptyParam);
end;

function  TGlobal.OutlineIndent(Levels: OleVariant): WordBool;
begin
  Result := DefaultInterface.OutlineIndent(Levels);
end;

function  TGlobal.OutlineHideSubTasks: WordBool;
begin
  Result := DefaultInterface.OutlineHideSubTasks;
end;

function  TGlobal.OutlineShowSubTasks: WordBool;
begin
  Result := DefaultInterface.OutlineShowSubTasks;
end;

function  TGlobal.OutlineShowAllTasks: WordBool;
begin
  Result := DefaultInterface.OutlineShowAllTasks;
end;

function  TGlobal.SelectBeginning: WordBool;
begin
  Result := DefaultInterface.SelectBeginning(EmptyParam);
end;

function  TGlobal.SelectBeginning(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectBeginning(Extend);
end;

function  TGlobal.SelectEnd: WordBool;
begin
  Result := DefaultInterface.SelectEnd(EmptyParam);
end;

function  TGlobal.SelectEnd(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectEnd(Extend);
end;

function  TGlobal.SelectRowStart: WordBool;
begin
  Result := DefaultInterface.SelectRowStart(EmptyParam);
end;

function  TGlobal.SelectRowStart(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRowStart(Extend);
end;

function  TGlobal.SelectRowEnd: WordBool;
begin
  Result := DefaultInterface.SelectRowEnd(EmptyParam);
end;

function  TGlobal.SelectRowEnd(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRowEnd(Extend);
end;

function  TGlobal.SelectCellLeft: WordBool;
begin
  Result := DefaultInterface.SelectCellLeft(EmptyParam, EmptyParam);
end;

function  TGlobal.SelectCellLeft(NumCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellLeft(NumCells, EmptyParam);
end;

function  TGlobal.SelectCellLeft(NumCells: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellLeft(NumCells, Extend);
end;

function  TGlobal.SelectCellRight: WordBool;
begin
  Result := DefaultInterface.SelectCellRight(EmptyParam, EmptyParam);
end;

function  TGlobal.SelectCellRight(NumCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellRight(NumCells, EmptyParam);
end;

function  TGlobal.SelectCellRight(NumCells: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellRight(NumCells, Extend);
end;

function  TGlobal.SelectCellUp: WordBool;
begin
  Result := DefaultInterface.SelectCellUp(EmptyParam, EmptyParam);
end;

function  TGlobal.SelectCellUp(NumCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellUp(NumCells, EmptyParam);
end;

function  TGlobal.SelectCellUp(NumCells: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellUp(NumCells, Extend);
end;

function  TGlobal.SelectCellDown: WordBool;
begin
  Result := DefaultInterface.SelectCellDown(EmptyParam, EmptyParam);
end;

function  TGlobal.SelectCellDown(NumCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellDown(NumCells, EmptyParam);
end;

function  TGlobal.SelectCellDown(NumCells: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCellDown(NumCells, Extend);
end;

function  TGlobal.SelectionExtend: WordBool;
begin
  Result := DefaultInterface.SelectionExtend(EmptyParam, EmptyParam);
end;

function  TGlobal.SelectionExtend(Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectionExtend(Extend, EmptyParam);
end;

function  TGlobal.SelectionExtend(Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectionExtend(Extend, Add);
end;

function  TGlobal.ColumnBestFit: WordBool;
begin
  Result := DefaultInterface.ColumnBestFit(EmptyParam);
end;

function  TGlobal.ColumnBestFit(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.ColumnBestFit(Column);
end;

function  TGlobal.ColumnEdit: WordBool;
begin
  Result := DefaultInterface.ColumnEdit(EmptyParam);
end;

function  TGlobal.ColumnEdit(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.ColumnEdit(Column);
end;

function  TGlobal.SelectRange(Row: Integer; Column: Smallint): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                              Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, Width, EmptyParam, EmptyParam,
                                         EmptyParam);
end;

function  TGlobal.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, Width, Height, EmptyParam,
                                         EmptyParam);
end;

function  TGlobal.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, Width, Height, Extend, EmptyParam);
end;

function  TGlobal.SelectRange(Row: Integer; Column: Smallint; RowRelative: OleVariant;
                              Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                              Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRange(Row, Column, RowRelative, Width, Height, Extend, Add);
end;

function  TGlobal.SelectTimescaleRange(Row: Integer; const StartTime: WideString; Width: Smallint;
                                       Height: Integer): WordBool;
begin
  Result := DefaultInterface.SelectTimescaleRange(Row, StartTime, Width, Height);
end;

function  TGlobal.SelectTaskField(Row: Integer; const Column: WideString): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, Width, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, Width, Height, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, Width, Height, Extend,
                                             EmptyParam);
end;

function  TGlobal.SelectTaskField(Row: Integer; const Column: WideString; RowRelative: OleVariant;
                                  Width: OleVariant; Height: OleVariant; Extend: OleVariant;
                                  Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskField(Row, Column, RowRelative, Width, Height, Extend, Add);
end;

function  TGlobal.SelectResourceField(Row: Integer; const Column: WideString): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceField(Row: Integer; const Column: WideString;
                                      RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceField(Row: Integer; const Column: WideString;
                                      RowRelative: OleVariant; Width: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, Width, EmptyParam,
                                                 EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceField(Row: Integer; const Column: WideString;
                                      RowRelative: OleVariant; Width: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, Width, Height,
                                                 EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceField(Row: Integer; const Column: WideString;
                                      RowRelative: OleVariant; Width: OleVariant;
                                      Height: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, Width, Height, Extend,
                                                 EmptyParam);
end;

function  TGlobal.SelectResourceField(Row: Integer; const Column: WideString;
                                      RowRelative: OleVariant; Width: OleVariant;
                                      Height: OleVariant; Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceField(Row, Column, RowRelative, Width, Height, Extend,
                                                 Add);
end;

function  TGlobal.SelectRow: WordBool;
begin
  Result := DefaultInterface.SelectRow(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectRow(Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectRow(Row: OleVariant; RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, RowRelative, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, RowRelative, Height, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant;
                            Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, RowRelative, Height, Extend, EmptyParam);
end;

function  TGlobal.SelectRow(Row: OleVariant; RowRelative: OleVariant; Height: OleVariant;
                            Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectRow(Row, RowRelative, Height, Extend, Add);
end;

function  TGlobal.SelectColumn: WordBool;
begin
  Result := DefaultInterface.SelectColumn(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectColumn(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectColumn(Column, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectColumn(Column: OleVariant; Additional: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectColumn(Column, Additional, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectColumn(Column, Additional, Extend, EmptyParam);
end;

function  TGlobal.SelectColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                               Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectColumn(Column, Additional, Extend, Add);
end;

function  TGlobal.SelectTaskColumn: WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectTaskColumn(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(Column, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectTaskColumn(Column: OleVariant; Additional: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(Column, Additional, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectTaskColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(Column, Additional, Extend, EmptyParam);
end;

function  TGlobal.SelectTaskColumn(Column: OleVariant; Additional: OleVariant; Extend: OleVariant;
                                   Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskColumn(Column, Additional, Extend, Add);
end;

function  TGlobal.SelectResourceColumn: WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceColumn(Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(Column, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceColumn(Column: OleVariant; Additional: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(Column, Additional, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceColumn(Column: OleVariant; Additional: OleVariant;
                                       Extend: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(Column, Additional, Extend, EmptyParam);
end;

function  TGlobal.SelectResourceColumn(Column: OleVariant; Additional: OleVariant;
                                       Extend: OleVariant; Add: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceColumn(Column, Additional, Extend, Add);
end;

function  TGlobal.SelectTaskCell: WordBool;
begin
  Result := DefaultInterface.SelectTaskCell(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectTaskCell(Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskCell(Row, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectTaskCell(Row: OleVariant; Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskCell(Row, Column, EmptyParam);
end;

function  TGlobal.SelectTaskCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectTaskCell(Row, Column, RowRelative);
end;

function  TGlobal.SelectResourceCell: WordBool;
begin
  Result := DefaultInterface.SelectResourceCell(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceCell(Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceCell(Row, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectResourceCell(Row: OleVariant; Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceCell(Row, Column, EmptyParam);
end;

function  TGlobal.SelectResourceCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectResourceCell(Row, Column, RowRelative);
end;

function  TGlobal.SelectCell: WordBool;
begin
  Result := DefaultInterface.SelectCell(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectCell(Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCell(Row, EmptyParam, EmptyParam);
end;

function  TGlobal.SelectCell(Row: OleVariant; Column: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCell(Row, Column, EmptyParam);
end;

function  TGlobal.SelectCell(Row: OleVariant; Column: OleVariant; RowRelative: OleVariant): WordBool;
begin
  Result := DefaultInterface.SelectCell(Row, Column, RowRelative);
end;

function  TGlobal.SelectSheet: WordBool;
begin
  Result := DefaultInterface.SelectSheet;
end;

function  TGlobal.DDEInitiate(const App: WideString; const Topic: WideString): WordBool;
begin
  Result := DefaultInterface.DDEInitiate(App, Topic);
end;

function  TGlobal.DDEExecute(const Command: WideString): WordBool;
begin
  Result := DefaultInterface.DDEExecute(Command, EmptyParam);
end;

function  TGlobal.DDEExecute(const Command: WideString; TimeOut: OleVariant): WordBool;
begin
  Result := DefaultInterface.DDEExecute(Command, TimeOut);
end;

function  TGlobal.DDETerminate: WordBool;
begin
  Result := DefaultInterface.DDETerminate;
end;

function  TGlobal.InformationDialog: WordBool;
begin
  Result := DefaultInterface.InformationDialog(EmptyParam);
end;

function  TGlobal.InformationDialog(Tab: OleVariant): WordBool;
begin
  Result := DefaultInterface.InformationDialog(Tab);
end;

function  TGlobal.Form: WordBool;
begin
  Result := DefaultInterface.Form(EmptyParam);
end;

function  TGlobal.Form(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.Form(Name);
end;

function  TGlobal.CustomForms: WordBool;
begin
  Result := DefaultInterface.CustomForms;
end;

function  TGlobal.Tables: WordBool;
begin
  Result := DefaultInterface.Tables;
end;

function  TGlobal.Filters: WordBool;
begin
  Result := DefaultInterface.Filters;
end;

function  TGlobal.Macro: WordBool;
begin
  Result := DefaultInterface.Macro(EmptyParam);
end;

function  TGlobal.Macro(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.Macro(Name);
end;

function  TGlobal.FillDown: WordBool;
begin
  Result := DefaultInterface.FillDown(EmptyParam);
end;

function  TGlobal.FillDown(Down: OleVariant): WordBool;
begin
  Result := DefaultInterface.FillDown(Down);
end;

function  TGlobal.Views: WordBool;
begin
  Result := DefaultInterface.Views;
end;

function  TGlobal.CalculateProject: WordBool;
begin
  Result := DefaultInterface.CalculateProject;
end;

function  TGlobal.LevelingClear: WordBool;
begin
  Result := DefaultInterface.LevelingClear(EmptyParam);
end;

function  TGlobal.LevelingClear(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.LevelingClear(All);
end;

function  TGlobal.SpellingCheck: WordBool;
begin
  Result := DefaultInterface.SpellingCheck;
end;

function  TGlobal.OptionsSpelling: WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant; TaskText1: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant;
                                  ResourceText3: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant;
                                  ResourceText3: OleVariant; ResourceText4: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant;
                                  ResourceText3: OleVariant; ResourceText4: OleVariant;
                                  ResourceText5: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, EmptyParam, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant;
                                  ResourceText3: OleVariant; ResourceText4: OleVariant;
                                  ResourceText5: OleVariant; AssignNotes: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, EmptyParam, EmptyParam,
                                             EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant;
                                  ResourceText3: OleVariant; ResourceText4: OleVariant;
                                  ResourceText5: OleVariant; AssignNotes: OleVariant;
                                  IgnoreUppercase: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, IgnoreUppercase,
                                             EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant;
                                  ResourceText3: OleVariant; ResourceText4: OleVariant;
                                  ResourceText5: OleVariant; AssignNotes: OleVariant;
                                  IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, IgnoreUppercase,
                                             IgnoreNumberWords, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant;
                                  ResourceText3: OleVariant; ResourceText4: OleVariant;
                                  ResourceText5: OleVariant; AssignNotes: OleVariant;
                                  IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant;
                                  AlwaysSuggest: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, IgnoreUppercase,
                                             IgnoreNumberWords, AlwaysSuggest, EmptyParam);
end;

function  TGlobal.OptionsSpelling(TaskName: OleVariant; TaskNotes: OleVariant;
                                  TaskText1: OleVariant; TaskText2: OleVariant;
                                  TaskText3: OleVariant; TaskText4: OleVariant;
                                  TaskText5: OleVariant; TaskText6: OleVariant;
                                  TaskText7: OleVariant; TaskText8: OleVariant;
                                  TaskText9: OleVariant; TaskText10: OleVariant;
                                  ResourceCode: OleVariant; ResourceName: OleVariant;
                                  ResourceNotes: OleVariant; ResourceGroup: OleVariant;
                                  ResourceText1: OleVariant; ResourceText2: OleVariant;
                                  ResourceText3: OleVariant; ResourceText4: OleVariant;
                                  ResourceText5: OleVariant; AssignNotes: OleVariant;
                                  IgnoreUppercase: OleVariant; IgnoreNumberWords: OleVariant;
                                  AlwaysSuggest: OleVariant; UseCustomDictionary: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSpelling(TaskName, TaskNotes, TaskText1, TaskText2, TaskText3,
                                             TaskText4, TaskText5, TaskText6, TaskText7, TaskText8,
                                             TaskText9, TaskText10, ResourceCode, ResourceName,
                                             ResourceNotes, ResourceGroup, ResourceText1,
                                             ResourceText2, ResourceText3, ResourceText4,
                                             ResourceText5, AssignNotes, IgnoreUppercase,
                                             IgnoreNumberWords, AlwaysSuggest, UseCustomDictionary);
end;

function  TGlobal.WindowMoreWindows: WordBool;
begin
  Result := DefaultInterface.WindowMoreWindows;
end;

function  TGlobal.HelpContents: WordBool;
begin
  Result := DefaultInterface.HelpContents;
end;

function  TGlobal.HelpSearch: WordBool;
begin
  Result := DefaultInterface.HelpSearch;
end;

function  TGlobal.HelpOnlineIndex: WordBool;
begin
  Result := DefaultInterface.HelpOnlineIndex;
end;

function  TGlobal.HelpAbout: WordBool;
begin
  Result := DefaultInterface.HelpAbout;
end;

function  TGlobal.HelpLaunch: WordBool;
begin
  Result := DefaultInterface.HelpLaunch(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.HelpLaunch(FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpLaunch(FileName, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpLaunch(FileName, ContextNumber, EmptyParam, EmptyParam);
end;

function  TGlobal.HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant; Search: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpLaunch(FileName, ContextNumber, Search, EmptyParam);
end;

function  TGlobal.HelpLaunch(FileName: OleVariant; ContextNumber: OleVariant; Search: OleVariant;
                             SearchKey: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpLaunch(FileName, ContextNumber, Search, SearchKey);
end;

function  TGlobal.HelpCueCards: WordBool;
begin
  Result := DefaultInterface.HelpCueCards(EmptyParam, EmptyParam);
end;

function  TGlobal.HelpCueCards(FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpCueCards(FileName, EmptyParam);
end;

function  TGlobal.HelpCueCards(FileName: OleVariant; ContextNumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.HelpCueCards(FileName, ContextNumber);
end;

function  TGlobal.HelpTopics: WordBool;
begin
  Result := DefaultInterface.HelpTopics;
end;

function  TGlobal.HelpAnswerWizard: WordBool;
begin
  Result := DefaultInterface.HelpAnswerWizard;
end;

function  TGlobal.HelpMSProjectFundamentals: WordBool;
begin
  Result := DefaultInterface.HelpMSProjectFundamentals;
end;

function  TGlobal.AutoCorrect: WordBool;
begin
  Result := DefaultInterface.AutoCorrect;
end;

function  TGlobal.HelpQuickPreview: WordBool;
begin
  Result := DefaultInterface.HelpQuickPreview;
end;

function  TGlobal.HelpTechnicalSupport: WordBool;
begin
  Result := DefaultInterface.HelpTechnicalSupport;
end;

function  TGlobal.HelpCreateYourProject: WordBool;
begin
  Result := DefaultInterface.HelpCreateYourProject;
end;

function  TGlobal.HelpContextHelp: WordBool;
begin
  Result := DefaultInterface.HelpContextHelp;
end;

function  TGlobal.TextStyles: WordBool;
begin
  Result := DefaultInterface.TextStyles(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam);
end;

function  TGlobal.TextStyles(Item: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam);
end;

function  TGlobal.TextStyles(Item: OleVariant; Font: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam);
end;

function  TGlobal.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam);
end;

function  TGlobal.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant; Bold: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, Bold, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                             Bold: OleVariant; Italic: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, Bold, Italic, EmptyParam, EmptyParam);
end;

function  TGlobal.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                             Bold: OleVariant; Italic: OleVariant; Underline: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, Bold, Italic, Underline, EmptyParam);
end;

function  TGlobal.TextStyles(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                             Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                             Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.TextStyles(Item, Font, Size, Bold, Italic, Underline, Color);
end;

function  TGlobal.DetailStylesFormat: WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                     Bold: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, EmptyParam, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                     Bold: OleVariant; Italic: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, EmptyParam,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                     Bold: OleVariant; Italic: OleVariant; Underline: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline,
                                                EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                     Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                     Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline, Color,
                                                EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                     Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                     Color: OleVariant; CellColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline, Color,
                                                CellColor, EmptyParam, EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                     Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                     Color: OleVariant; CellColor: OleVariant; Pattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline, Color,
                                                CellColor, Pattern, EmptyParam);
end;

function  TGlobal.DetailStylesFormat(Item: OleVariant; Font: OleVariant; Size: OleVariant;
                                     Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                                     Color: OleVariant; CellColor: OleVariant; Pattern: OleVariant;
                                     ShowInMenu: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesFormat(Item, Font, Size, Bold, Italic, Underline, Color,
                                                CellColor, Pattern, ShowInMenu);
end;

function  TGlobal.DetailStylesAdd(Item: PjTimescaledData): WordBool;
begin
  Result := DefaultInterface.DetailStylesAdd(Item, EmptyParam);
end;

function  TGlobal.DetailStylesAdd(Item: PjTimescaledData; Position: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesAdd(Item, Position);
end;

function  TGlobal.DetailStylesRemove(Item: PjTimescaledData): WordBool;
begin
  Result := DefaultInterface.DetailStylesRemove(Item);
end;

function  TGlobal.DetailStylesRemoveAll: WordBool;
begin
  Result := DefaultInterface.DetailStylesRemoveAll;
end;

function  TGlobal.Font: WordBool;
begin
  Result := DefaultInterface.Font(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TGlobal.Font(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam);
end;

function  TGlobal.Font(Name: OleVariant; Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam);
end;

function  TGlobal.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, Italic, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                       Underline: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, Italic, Underline, EmptyParam, EmptyParam);
end;

function  TGlobal.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                       Underline: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, Italic, Underline, Color, EmptyParam);
end;

function  TGlobal.Font(Name: OleVariant; Size: OleVariant; Bold: OleVariant; Italic: OleVariant;
                       Underline: OleVariant; Color: OleVariant; Reset: OleVariant): WordBool;
begin
  Result := DefaultInterface.Font(Name, Size, Bold, Italic, Underline, Color, Reset);
end;

function  TGlobal.Timescale: WordBool;
begin
  Result := DefaultInterface.Timescale;
end;

function  TGlobal.TimescaleEdit: WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant;
                                MajorCount: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant;
                                MajorCount: OleVariant; MinorCount: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant;
                                MajorCount: OleVariant; MinorCount: OleVariant;
                                MajorTicks: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant;
                                MajorCount: OleVariant; MinorCount: OleVariant;
                                MajorTicks: OleVariant; MinorTicks: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant;
                                MajorCount: OleVariant; MinorCount: OleVariant;
                                MajorTicks: OleVariant; MinorTicks: OleVariant; Enlarge: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, Enlarge, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant;
                                MajorCount: OleVariant; MinorCount: OleVariant;
                                MajorTicks: OleVariant; MinorTicks: OleVariant;
                                Enlarge: OleVariant; Separator: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, Enlarge, Separator, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant;
                                MajorCount: OleVariant; MinorCount: OleVariant;
                                MajorTicks: OleVariant; MinorTicks: OleVariant;
                                Enlarge: OleVariant; Separator: OleVariant; MajorUseFY: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, Enlarge, Separator, MajorUseFY,
                                           EmptyParam);
end;

function  TGlobal.TimescaleEdit(MajorUnits: OleVariant; MinorUnits: OleVariant;
                                MajorLabel: OleVariant; MinorLabel: OleVariant;
                                MajorAlign: OleVariant; MinorAlign: OleVariant;
                                MajorCount: OleVariant; MinorCount: OleVariant;
                                MajorTicks: OleVariant; MinorTicks: OleVariant;
                                Enlarge: OleVariant; Separator: OleVariant; MajorUseFY: OleVariant;
                                MinorUseFY: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleEdit(MajorUnits, MinorUnits, MajorLabel, MinorLabel,
                                           MajorAlign, MinorAlign, MajorCount, MinorCount,
                                           MajorTicks, MinorTicks, Enlarge, Separator, MajorUseFY,
                                           MinorUseFY);
end;

function  TGlobal.Sort: WordBool;
begin
  Result := DefaultInterface.Sort(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.Sort(Key1: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TGlobal.Sort(Key1: OleVariant; Ascending1: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TGlobal.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, EmptyParam, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TGlobal.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                       Ascending2: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, EmptyParam, EmptyParam,
                                  EmptyParam, EmptyParam);
end;

function  TGlobal.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                       Ascending2: OleVariant; Key3: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, Key3, EmptyParam, EmptyParam,
                                  EmptyParam);
end;

function  TGlobal.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                       Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, Key3, Ascending3, EmptyParam,
                                  EmptyParam);
end;

function  TGlobal.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                       Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant;
                       Renumber: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, Key3, Ascending3, Renumber,
                                  EmptyParam);
end;

function  TGlobal.Sort(Key1: OleVariant; Ascending1: OleVariant; Key2: OleVariant;
                       Ascending2: OleVariant; Key3: OleVariant; Ascending3: OleVariant;
                       Renumber: OleVariant; Outline: OleVariant): WordBool;
begin
  Result := DefaultInterface.Sort(Key1, Ascending1, Key2, Ascending2, Key3, Ascending3, Renumber,
                                  Outline);
end;

function  TGlobal.BarBoxStyles: WordBool;
begin
  Result := DefaultInterface.BarBoxStyles;
end;

function  TGlobal.GanttBarFormat: WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant; StartShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, EmptyParam, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                 LeftText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, EmptyParam, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                 LeftText: OleVariant; RightText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, EmptyParam,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                 LeftText: OleVariant; RightText: OleVariant; TopText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                 LeftText: OleVariant; RightText: OleVariant; TopText: OleVariant;
                                 BottomText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            BottomText, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                 LeftText: OleVariant; RightText: OleVariant; TopText: OleVariant;
                                 BottomText: OleVariant; InsideText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            BottomText, InsideText, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                 LeftText: OleVariant; RightText: OleVariant; TopText: OleVariant;
                                 BottomText: OleVariant; InsideText: OleVariant; Reset: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            BottomText, InsideText, Reset, EmptyParam);
end;

function  TGlobal.GanttBarFormat(TaskID: OleVariant; GanttStyle: OleVariant;
                                 StartShape: OleVariant; StartType: OleVariant;
                                 StartColor: OleVariant; MiddleShape: OleVariant;
                                 MiddlePattern: OleVariant; MiddleColor: OleVariant;
                                 EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant;
                                 LeftText: OleVariant; RightText: OleVariant; TopText: OleVariant;
                                 BottomText: OleVariant; InsideText: OleVariant; Reset: OleVariant;
                                 ProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarFormat(TaskID, GanttStyle, StartShape, StartType, StartColor,
                                            MiddleShape, MiddlePattern, MiddleColor, EndShape,
                                            EndType, EndColor, LeftText, RightText, TopText,
                                            BottomText, InsideText, Reset, ProjectName);
end;

function  TGlobal.TimescaleNonWorking: WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleNonWorking(Draw: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(Draw, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(Draw, Calendar, EmptyParam, EmptyParam);
end;

function  TGlobal.TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant; Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(Draw, Calendar, Color, EmptyParam);
end;

function  TGlobal.TimescaleNonWorking(Draw: OleVariant; Calendar: OleVariant; Color: OleVariant;
                                      Pattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.TimescaleNonWorking(Draw, Calendar, Color, Pattern);
end;

function  TGlobal.BoxShowHideFields: WordBool;
begin
  Result := DefaultInterface.BoxShowHideFields(EmptyParam);
end;

function  TGlobal.BoxShowHideFields(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxShowHideFields(Show);
end;

function  TGlobal.Layout: WordBool;
begin
  Result := DefaultInterface.Layout;
end;

function  TGlobal.PERTLayout: WordBool;
begin
  Result := DefaultInterface.PERTLayout(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTLayout(Straight: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTLayout(Straight, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTLayout(Straight, DisplayArrows, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                             AdjustForPageBreaks: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTLayout(Straight, DisplayArrows, AdjustForPageBreaks, EmptyParam);
end;

function  TGlobal.PERTLayout(Straight: OleVariant; DisplayArrows: OleVariant;
                             AdjustForPageBreaks: OleVariant; DisplayPageBreaks: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTLayout(Straight, DisplayArrows, AdjustForPageBreaks,
                                        DisplayPageBreaks);
end;

function  TGlobal.LayoutNow: WordBool;
begin
  Result := DefaultInterface.LayoutNow;
end;

function  TGlobal.PERTBorders: WordBool;
begin
  Result := DefaultInterface.PERTBorders(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant; CriticalMilestoneColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant;
                              CriticalMarkedStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant;
                              CriticalMarkedStyle: OleVariant; CriticalMarkedColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant;
                              CriticalMarkedStyle: OleVariant; CriticalMarkedColor: OleVariant;
                              NoncriticalMarkedStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant;
                              CriticalMarkedStyle: OleVariant; CriticalMarkedColor: OleVariant;
                              NoncriticalMarkedStyle: OleVariant; NoncriticalMarkedColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant;
                              CriticalMarkedStyle: OleVariant; CriticalMarkedColor: OleVariant;
                              NoncriticalMarkedStyle: OleVariant;
                              NoncriticalMarkedColor: OleVariant;
                              CriticalExternalTaskStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, CriticalExternalTaskStyle,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant;
                              CriticalMarkedStyle: OleVariant; CriticalMarkedColor: OleVariant;
                              NoncriticalMarkedStyle: OleVariant;
                              NoncriticalMarkedColor: OleVariant;
                              CriticalExternalTaskStyle: OleVariant;
                              CriticalExternalTaskColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, CriticalExternalTaskStyle,
                                         CriticalExternalTaskColor, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant;
                              CriticalMarkedStyle: OleVariant; CriticalMarkedColor: OleVariant;
                              NoncriticalMarkedStyle: OleVariant;
                              NoncriticalMarkedColor: OleVariant;
                              CriticalExternalTaskStyle: OleVariant;
                              CriticalExternalTaskColor: OleVariant;
                              NoncriticalExternalTaskStyle: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, CriticalExternalTaskStyle,
                                         CriticalExternalTaskColor, NoncriticalExternalTaskStyle,
                                         EmptyParam);
end;

function  TGlobal.PERTBorders(CriticalStyle: OleVariant; CriticalColor: OleVariant;
                              NoncriticalStyle: OleVariant; NoncriticalColor: OleVariant;
                              CriticalMilestoneStyle: OleVariant;
                              CriticalMilestoneColor: OleVariant;
                              NoncriticalMilestoneStyle: OleVariant;
                              NoncriticalMilestoneColor: OleVariant;
                              CriticalSummaryStyle: OleVariant; CriticalSummaryColor: OleVariant;
                              NoncriticalSummaryStyle: OleVariant;
                              NoncriticalSummaryColor: OleVariant;
                              CriticalSubprojectStyle: OleVariant;
                              CriticalSubprojectColor: OleVariant;
                              NoncriticalSubprojectStyle: OleVariant;
                              NoncriticalSubprojectColor: OleVariant;
                              CriticalMarkedStyle: OleVariant; CriticalMarkedColor: OleVariant;
                              NoncriticalMarkedStyle: OleVariant;
                              NoncriticalMarkedColor: OleVariant;
                              CriticalExternalTaskStyle: OleVariant;
                              CriticalExternalTaskColor: OleVariant;
                              NoncriticalExternalTaskStyle: OleVariant;
                              NoncriticalExternalTaskColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBorders(CriticalStyle, CriticalColor, NoncriticalStyle,
                                         NoncriticalColor, CriticalMilestoneStyle,
                                         CriticalMilestoneColor, NoncriticalMilestoneStyle,
                                         NoncriticalMilestoneColor, CriticalSummaryStyle,
                                         CriticalSummaryColor, NoncriticalSummaryStyle,
                                         NoncriticalSummaryColor, CriticalSubprojectStyle,
                                         CriticalSubprojectColor, NoncriticalSubprojectStyle,
                                         NoncriticalSubprojectColor, CriticalMarkedStyle,
                                         CriticalMarkedColor, NoncriticalMarkedStyle,
                                         NoncriticalMarkedColor, CriticalExternalTaskStyle,
                                         CriticalExternalTaskColor, NoncriticalExternalTaskStyle,
                                         NoncriticalExternalTaskColor);
end;

function  TGlobal.Gridlines: WordBool;
begin
  Result := DefaultInterface.Gridlines;
end;

function  TGlobal.GridlinesEdit(Item: PjGridline): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.GridlinesEdit(Item: PjGridline; NormalType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, NormalColor, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                                Interval: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, NormalColor, Interval, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                                Interval: OleVariant; IntervalType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, NormalColor, Interval, IntervalType,
                                           EmptyParam);
end;

function  TGlobal.GridlinesEdit(Item: PjGridline; NormalType: OleVariant; NormalColor: OleVariant;
                                Interval: OleVariant; IntervalType: OleVariant;
                                IntervalColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GridlinesEdit(Item, NormalType, NormalColor, Interval, IntervalType,
                                           IntervalColor);
end;

function  TGlobal.ViewShowSelectedTasks: WordBool;
begin
  Result := DefaultInterface.ViewShowSelectedTasks(EmptyParam);
end;

function  TGlobal.ViewShowSelectedTasks(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.ViewShowSelectedTasks(Show);
end;

function  TGlobal.PageBreaksShow: WordBool;
begin
  Result := DefaultInterface.PageBreaksShow(EmptyParam);
end;

function  TGlobal.PageBreaksShow(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.PageBreaksShow(Show);
end;

function  TGlobal.FindNext: WordBool;
begin
  Result := DefaultInterface.FindNext;
end;

function  TGlobal.FindPrevious: WordBool;
begin
  Result := DefaultInterface.FindPrevious;
end;

function  TGlobal.ZoomOut: WordBool;
begin
  Result := DefaultInterface.ZoomOut;
end;

function  TGlobal.ZoomIn: WordBool;
begin
  Result := DefaultInterface.ZoomIn;
end;

function  TGlobal.SetField(const Field: WideString; const Value: WideString): WordBool;
begin
  Result := DefaultInterface.SetField(Field, Value, EmptyParam);
end;

function  TGlobal.SetField(const Field: WideString; const Value: WideString; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetField(Field, Value, Create);
end;

function  TGlobal.SetTaskField(const Field: WideString; const Value: WideString): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, EmptyParam, EmptyParam, EmptyParam,
                                          EmptyParam);
end;

function  TGlobal.SetTaskField(const Field: WideString; const Value: WideString;
                               AllSelectedTasks: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, AllSelectedTasks, EmptyParam, EmptyParam,
                                          EmptyParam);
end;

function  TGlobal.SetTaskField(const Field: WideString; const Value: WideString;
                               AllSelectedTasks: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, AllSelectedTasks, Create, EmptyParam,
                                          EmptyParam);
end;

function  TGlobal.SetTaskField(const Field: WideString; const Value: WideString;
                               AllSelectedTasks: OleVariant; Create: OleVariant; TaskID: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, AllSelectedTasks, Create, TaskID, EmptyParam);
end;

function  TGlobal.SetTaskField(const Field: WideString; const Value: WideString;
                               AllSelectedTasks: OleVariant; Create: OleVariant;
                               TaskID: OleVariant; ProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetTaskField(Field, Value, AllSelectedTasks, Create, TaskID,
                                          ProjectName);
end;

function  TGlobal.SetResourceField(const Field: WideString; const Value: WideString): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, EmptyParam, EmptyParam, EmptyParam,
                                              EmptyParam);
end;

function  TGlobal.SetResourceField(const Field: WideString; const Value: WideString;
                                   AllSelectedResources: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, AllSelectedResources, EmptyParam,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.SetResourceField(const Field: WideString; const Value: WideString;
                                   AllSelectedResources: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, AllSelectedResources, Create,
                                              EmptyParam, EmptyParam);
end;

function  TGlobal.SetResourceField(const Field: WideString; const Value: WideString;
                                   AllSelectedResources: OleVariant; Create: OleVariant;
                                   ResourceID: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, AllSelectedResources, Create,
                                              ResourceID, EmptyParam);
end;

function  TGlobal.SetResourceField(const Field: WideString; const Value: WideString;
                                   AllSelectedResources: OleVariant; Create: OleVariant;
                                   ResourceID: OleVariant; ProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetResourceField(Field, Value, AllSelectedResources, Create,
                                              ResourceID, ProjectName);
end;

function  TGlobal.SetActiveCell(const Value: WideString): WordBool;
begin
  Result := DefaultInterface.SetActiveCell(Value, EmptyParam);
end;

function  TGlobal.SetActiveCell(const Value: WideString; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetActiveCell(Value, Create);
end;

function  TGlobal.CheckField(const Field: WideString; const Value: WideString): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam, EmptyParam);
end;

function  TGlobal.CheckField(const Field: WideString; const Value: WideString; Test: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, EmptyParam, EmptyParam, EmptyParam,
                                        EmptyParam);
end;

function  TGlobal.CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                             Op: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, Op, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                             Op: OleVariant; Field2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, Op, Field2, EmptyParam, EmptyParam);
end;

function  TGlobal.CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                             Op: OleVariant; Field2: OleVariant; Value2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, Op, Field2, Value2, EmptyParam);
end;

function  TGlobal.CheckField(const Field: WideString; const Value: WideString; Test: OleVariant;
                             Op: OleVariant; Field2: OleVariant; Value2: OleVariant;
                             Test2: OleVariant): OleVariant;
begin
  Result := DefaultInterface.CheckField(Field, Value, Test, Op, Field2, Value2, Test2);
end;

function  TGlobal.SetMatchingField(const Field: WideString; const Value: WideString;
                                   const CheckField: WideString; const CheckValue: WideString): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, EmptyParam,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SetMatchingField(const Field: WideString; const Value: WideString;
                                   const CheckField: WideString; const CheckValue: WideString;
                                   CheckTest: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SetMatchingField(const Field: WideString; const Value: WideString;
                                   const CheckField: WideString; const CheckValue: WideString;
                                   CheckTest: OleVariant; CheckOperation: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              CheckOperation, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SetMatchingField(const Field: WideString; const Value: WideString;
                                   const CheckField: WideString; const CheckValue: WideString;
                                   CheckTest: OleVariant; CheckOperation: OleVariant;
                                   CheckField2: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              CheckOperation, CheckField2, EmptyParam, EmptyParam);
end;

function  TGlobal.SetMatchingField(const Field: WideString; const Value: WideString;
                                   const CheckField: WideString; const CheckValue: WideString;
                                   CheckTest: OleVariant; CheckOperation: OleVariant;
                                   CheckField2: OleVariant; CheckValue2: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              CheckOperation, CheckField2, CheckValue2, EmptyParam);
end;

function  TGlobal.SetMatchingField(const Field: WideString; const Value: WideString;
                                   const CheckField: WideString; const CheckValue: WideString;
                                   CheckTest: OleVariant; CheckOperation: OleVariant;
                                   CheckField2: OleVariant; CheckValue2: OleVariant;
                                   CheckTest2: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetMatchingField(Field, Value, CheckField, CheckValue, CheckTest,
                                              CheckOperation, CheckField2, CheckValue2, CheckTest2);
end;

function  TGlobal.AppExecute: WordBool;
begin
  Result := DefaultInterface.AppExecute(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.AppExecute(Window: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppExecute(Window, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.AppExecute(Window: OleVariant; Command: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppExecute(Window, Command, EmptyParam, EmptyParam);
end;

function  TGlobal.AppExecute(Window: OleVariant; Command: OleVariant; Minimize: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppExecute(Window, Command, Minimize, EmptyParam);
end;

function  TGlobal.AppExecute(Window: OleVariant; Command: OleVariant; Minimize: OleVariant;
                             Activate: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppExecute(Window, Command, Minimize, Activate);
end;

function  TGlobal.AppLaunch(const Application: WideString): WordBool;
begin
  Result := DefaultInterface.AppLaunch(Application, EmptyParam, EmptyParam);
end;

function  TGlobal.AppLaunch(const Application: WideString; Document: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppLaunch(Application, Document, EmptyParam);
end;

function  TGlobal.AppLaunch(const Application: WideString; Document: OleVariant;
                            Activate: OleVariant): WordBool;
begin
  Result := DefaultInterface.AppLaunch(Application, Document, Activate);
end;

function  TGlobal.DDELinksUpdate: WordBool;
begin
  Result := DefaultInterface.DDELinksUpdate;
end;

function  TGlobal.GotoTaskDates: WordBool;
begin
  Result := DefaultInterface.GotoTaskDates;
end;

function  TGlobal.GanttBarLinks(Display: PjGanttBarLink): WordBool;
begin
  Result := DefaultInterface.GanttBarLinks(Display);
end;

function  TGlobal.GanttShowDrawings: WordBool;
begin
  Result := DefaultInterface.GanttShowDrawings(EmptyParam);
end;

function  TGlobal.GanttShowDrawings(Display: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttShowDrawings(Display);
end;

function  TGlobal.BarRounding: WordBool;
begin
  Result := DefaultInterface.BarRounding(EmptyParam);
end;

function  TGlobal.BarRounding(On_: OleVariant): WordBool;
begin
  Result := DefaultInterface.BarRounding(On_);
end;

function  TGlobal.GanttRollup: WordBool;
begin
  Result := DefaultInterface.GanttRollup(EmptyParam, EmptyParam);
end;

function  TGlobal.GanttRollup(AlwaysRollup: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttRollup(AlwaysRollup, EmptyParam);
end;

function  TGlobal.GanttRollup(AlwaysRollup: OleVariant; HideWhenSummaryExpanded: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttRollup(AlwaysRollup, HideWhenSummaryExpanded);
end;

function  TGlobal.GanttBarTextDateFormat(DateFormat: PjDateFormat): WordBool;
begin
  Result := DefaultInterface.GanttBarTextDateFormat(DateFormat);
end;

function  TGlobal.GanttBarSize(Size: PjBarSize): WordBool;
begin
  Result := DefaultInterface.GanttBarSize(Size);
end;

function  TGlobal.GanttBarStyleDelete(const Item: WideString): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleDelete(Item);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant; EndColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant; Row: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant; Row: OleVariant;
                                    From: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant; Row: OleVariant;
                                    From: OleVariant; To_: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant; Row: OleVariant;
                                    From: OleVariant; To_: OleVariant; BottomText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant; Row: OleVariant;
                                    From: OleVariant; To_: OleVariant; BottomText: OleVariant;
                                    TopText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, TopText, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant; Row: OleVariant;
                                    From: OleVariant; To_: OleVariant; BottomText: OleVariant;
                                    TopText: OleVariant; LeftText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, TopText, LeftText, EmptyParam,
                                               EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant; Row: OleVariant;
                                    From: OleVariant; To_: OleVariant; BottomText: OleVariant;
                                    TopText: OleVariant; LeftText: OleVariant; RightText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, TopText, LeftText, RightText,
                                               EmptyParam);
end;

function  TGlobal.GanttBarStyleEdit(const Item: WideString; Create: OleVariant; Name: OleVariant;
                                    StartShape: OleVariant; StartType: OleVariant;
                                    StartColor: OleVariant; MiddleShape: OleVariant;
                                    MiddleColor: OleVariant; MiddlePattern: OleVariant;
                                    EndShape: OleVariant; EndType: OleVariant;
                                    EndColor: OleVariant; ShowFor: OleVariant; Row: OleVariant;
                                    From: OleVariant; To_: OleVariant; BottomText: OleVariant;
                                    TopText: OleVariant; LeftText: OleVariant;
                                    RightText: OleVariant; InsideText: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttBarStyleEdit(Item, Create, Name, StartShape, StartType,
                                               StartColor, MiddleShape, MiddleColor, MiddlePattern,
                                               EndShape, EndType, EndColor, ShowFor, Row, From,
                                               To_, BottomText, TopText, LeftText, RightText,
                                               InsideText);
end;

function  TGlobal.PERTBoxStyles: WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, EmptyParam, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, EmptyParam, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                                CrossMarks: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, EmptyParam,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                                CrossMarks: OleVariant; Field1: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1,
                                           EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                                CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1, Field2,
                                           EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                                CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                Field3: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1, Field2,
                                           Field3, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                                CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                Field3: OleVariant; Field4: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1, Field2,
                                           Field3, Field4, EmptyParam);
end;

function  TGlobal.PERTBoxStyles(Size: OleVariant; DateFormat: OleVariant; Gridlines: OleVariant;
                                CrossMarks: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                Field3: OleVariant; Field4: OleVariant; Field5: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTBoxStyles(Size, DateFormat, Gridlines, CrossMarks, Field1, Field2,
                                           Field3, Field4, Field5);
end;

function  TGlobal.PERTSetTask: WordBool;
begin
  Result := DefaultInterface.PERTSetTask(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTSetTask(Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTSetTask(Create: OleVariant; Move: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, Move, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, Move, TaskID, EmptyParam, EmptyParam);
end;

function  TGlobal.PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                              XPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, Move, TaskID, XPosition, EmptyParam);
end;

function  TGlobal.PERTSetTask(Create: OleVariant; Move: OleVariant; TaskID: OleVariant;
                              XPosition: OleVariant; YPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.PERTSetTask(Create, Move, TaskID, XPosition, YPosition);
end;

function  TGlobal.ResourceGraphBarStyles: WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant; BottomLeftPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant;
                                         TopRightColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant;
                                         TopRightColor: OleVariant; TopRightPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant;
                                         TopRightColor: OleVariant; TopRightPattern: OleVariant;
                                         BottomRightShowAs: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, EmptyParam, EmptyParam,
                                                    EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant;
                                         TopRightColor: OleVariant; TopRightPattern: OleVariant;
                                         BottomRightShowAs: OleVariant; BottomRightColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant;
                                         TopRightColor: OleVariant; TopRightPattern: OleVariant;
                                         BottomRightShowAs: OleVariant;
                                         BottomRightColor: OleVariant;
                                         BottomRightPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    BottomRightPattern, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant;
                                         TopRightColor: OleVariant; TopRightPattern: OleVariant;
                                         BottomRightShowAs: OleVariant;
                                         BottomRightColor: OleVariant;
                                         BottomRightPattern: OleVariant; ShowValues: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    BottomRightPattern, ShowValues, EmptyParam,
                                                    EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant;
                                         TopRightColor: OleVariant; TopRightPattern: OleVariant;
                                         BottomRightShowAs: OleVariant;
                                         BottomRightColor: OleVariant;
                                         BottomRightPattern: OleVariant; ShowValues: OleVariant;
                                         ShowAvailabilityLine: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    BottomRightPattern, ShowValues,
                                                    ShowAvailabilityLine, EmptyParam);
end;

function  TGlobal.ResourceGraphBarStyles(TopLeftShowAs: OleVariant; TopLeftColor: OleVariant;
                                         TopLeftPattern: OleVariant; BottomLeftShowAs: OleVariant;
                                         BottomLeftColor: OleVariant;
                                         BottomLeftPattern: OleVariant; TopRightShowAs: OleVariant;
                                         TopRightColor: OleVariant; TopRightPattern: OleVariant;
                                         BottomRightShowAs: OleVariant;
                                         BottomRightColor: OleVariant;
                                         BottomRightPattern: OleVariant; ShowValues: OleVariant;
                                         ShowAvailabilityLine: OleVariant;
                                         PercentBarOverlap: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceGraphBarStyles(TopLeftShowAs, TopLeftColor, TopLeftPattern,
                                                    BottomLeftShowAs, BottomLeftColor,
                                                    BottomLeftPattern, TopRightShowAs,
                                                    TopRightColor, TopRightPattern,
                                                    BottomRightShowAs, BottomRightColor,
                                                    BottomRightPattern, ShowValues,
                                                    ShowAvailabilityLine, PercentBarOverlap);
end;

function  TGlobal.ConsolidateProjects(Filenames: OleVariant; NewWindow: OleVariant;
                                      AttachToSources: OleVariant; PoolResources: OleVariant;
                                      HideSubtasks: OleVariant; openPool: PjPoolOpen;
                                      UserID: OleVariant; Password: OleVariant): WordBool;
begin
  Result := DefaultInterface.ConsolidateProjects(Filenames, NewWindow, AttachToSources,
                                                 PoolResources, HideSubtasks, openPool, UserID,
                                                 Password);
end;

function  TGlobal.Organizer(Type_: PjOrganizer): WordBool;
begin
  Result := DefaultInterface.Organizer(Type_, EmptyParam);
end;

function  TGlobal.Organizer(Type_: PjOrganizer; Task: OleVariant): WordBool;
begin
  Result := DefaultInterface.Organizer(Type_, Task);
end;

function  TGlobal.OrganizerMoveItem: WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam);
end;

function  TGlobal.OrganizerMoveItem(Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, FileName, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant; ToFileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, FileName, ToFileName, EmptyParam, EmptyParam);
end;

function  TGlobal.OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant;
                                    ToFileName: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, FileName, ToFileName, Name, EmptyParam);
end;

function  TGlobal.OrganizerMoveItem(Type_: OleVariant; FileName: OleVariant;
                                    ToFileName: OleVariant; Name: OleVariant; Task: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerMoveItem(Type_, FileName, ToFileName, Name, Task);
end;

function  TGlobal.OrganizerDeleteItem: WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OrganizerDeleteItem(Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(Type_, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(Type_, FileName, EmptyParam, EmptyParam);
end;

function  TGlobal.OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(Type_, FileName, Name, EmptyParam);
end;

function  TGlobal.OrganizerDeleteItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                      Task: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerDeleteItem(Type_, FileName, Name, Task);
end;

function  TGlobal.OrganizerRenameItem: WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam);
end;

function  TGlobal.OrganizerRenameItem(Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam);
end;

function  TGlobal.OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, FileName, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, FileName, Name, EmptyParam, EmptyParam);
end;

function  TGlobal.OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                      NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, FileName, Name, NewName, EmptyParam);
end;

function  TGlobal.OrganizerRenameItem(Type_: OleVariant; FileName: OleVariant; Name: OleVariant;
                                      NewName: OleVariant; Task: OleVariant): WordBool;
begin
  Result := DefaultInterface.OrganizerRenameItem(Type_, FileName, Name, NewName, Task);
end;

function  TGlobal.RecurringTaskInsert: WordBool;
begin
  Result := DefaultInterface.RecurringTaskInsert;
end;

function  TGlobal.CalendarTimescale: WordBool;
begin
  Result := DefaultInterface.CalendarTimescale;
end;

function  TGlobal.CalendarDateBoxes: WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateBoxes(TopLeft: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, EmptyParam, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                    BottomLeft: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, EmptyParam,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                    BottomLeft: OleVariant; BottomRight: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                    BottomLeft: OleVariant; BottomRight: OleVariant;
                                    TopColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               TopColor, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                    BottomLeft: OleVariant; BottomRight: OleVariant;
                                    TopColor: OleVariant; BottomColor: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               TopColor, BottomColor, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                    BottomLeft: OleVariant; BottomRight: OleVariant;
                                    TopColor: OleVariant; BottomColor: OleVariant;
                                    TopPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               TopColor, BottomColor, TopPattern, EmptyParam);
end;

function  TGlobal.CalendarDateBoxes(TopLeft: OleVariant; TopRight: OleVariant;
                                    BottomLeft: OleVariant; BottomRight: OleVariant;
                                    TopColor: OleVariant; BottomColor: OleVariant;
                                    TopPattern: OleVariant; BottomPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateBoxes(TopLeft, TopRight, BottomLeft, BottomRight,
                                               TopColor, BottomColor, TopPattern, BottomPattern);
end;

function  TGlobal.CalendarWeekHeadings: WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.CalendarWeekHeadings(MonthTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, WeekTitle, EmptyParam, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                       DayTitle: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, WeekTitle, DayTitle, EmptyParam,
                                                  EmptyParam);
end;

function  TGlobal.CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                       DayTitle: OleVariant; ShowPreview: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, WeekTitle, DayTitle, ShowPreview,
                                                  EmptyParam);
end;

function  TGlobal.CalendarWeekHeadings(MonthTitle: OleVariant; WeekTitle: OleVariant;
                                       DayTitle: OleVariant; ShowPreview: OleVariant;
                                       DaysPerWeek: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarWeekHeadings(MonthTitle, WeekTitle, DayTitle, ShowPreview,
                                                  DaysPerWeek);
end;

function  TGlobal.CalendarDateShadingEdit(Item: PjCalendarShading): WordBool;
begin
  Result := DefaultInterface.CalendarDateShadingEdit(Item, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShadingEdit(Item, Pattern, EmptyParam);
end;

function  TGlobal.CalendarDateShadingEdit(Item: PjCalendarShading; Pattern: OleVariant;
                                          Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShadingEdit(Item, Pattern, Color);
end;

function  TGlobal.CalendarDateShading: WordBool;
begin
  Result := DefaultInterface.CalendarDateShading(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateShading(BaseCalendarName: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShading(BaseCalendarName, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarDateShading(BaseCalendarName: OleVariant; ResourceUniqueID: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShading(BaseCalendarName, ResourceUniqueID, EmptyParam);
end;

function  TGlobal.CalendarDateShading(BaseCalendarName: OleVariant; ResourceUniqueID: OleVariant;
                                      ProjectIndex: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarDateShading(BaseCalendarName, ResourceUniqueID, ProjectIndex);
end;

function  TGlobal.ZoomCalendar: WordBool;
begin
  Result := DefaultInterface.ZoomCalendar(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.ZoomCalendar(NumWeeks: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomCalendar(NumWeeks, EmptyParam, EmptyParam);
end;

function  TGlobal.ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomCalendar(NumWeeks, StartDate, EmptyParam);
end;

function  TGlobal.ZoomCalendar(NumWeeks: OleVariant; StartDate: OleVariant; EndDate: OleVariant): WordBool;
begin
  Result := DefaultInterface.ZoomCalendar(NumWeeks, StartDate, EndDate);
end;

function  TGlobal.CalendarLayout: WordBool;
begin
  Result := DefaultInterface.CalendarLayout(EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarLayout(SortOrder: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarLayout(SortOrder, EmptyParam);
end;

function  TGlobal.CalendarLayout(SortOrder: OleVariant; AutoLayout: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarLayout(SortOrder, AutoLayout);
end;

function  TGlobal.CalendarBarStyles: WordBool;
begin
  Result := DefaultInterface.CalendarBarStyles(EmptyParam);
end;

function  TGlobal.CalendarBarStyles(BarRounding: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStyles(BarRounding);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant; Wrap: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                        Shadow: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                        Shadow: OleVariant; Field1: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, EmptyParam, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                        Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, EmptyParam, EmptyParam,
                                                   EmptyParam, EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                        Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                        Field3: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, Field3, EmptyParam, EmptyParam,
                                                   EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                        Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                        Field3: OleVariant; Field4: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, Field3, Field4, EmptyParam,
                                                   EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                        Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                        Field3: OleVariant; Field4: OleVariant; Field5: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, Field3, Field4, Field5,
                                                   EmptyParam);
end;

function  TGlobal.CalendarBarStylesEdit(Item: PjBarItem; Bar: OleVariant; Pattern: OleVariant;
                                        Color: OleVariant; Align: OleVariant; Wrap: OleVariant;
                                        Shadow: OleVariant; Field1: OleVariant; Field2: OleVariant;
                                        Field3: OleVariant; Field4: OleVariant; Field5: OleVariant;
                                        SplitPattern: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarBarStylesEdit(Item, Bar, Pattern, Color, Align, Wrap, Shadow,
                                                   Field1, Field2, Field3, Field4, Field5,
                                                   SplitPattern);
end;

function  TGlobal.CalendarBestFitWeekHeight: WordBool;
begin
  Result := DefaultInterface.CalendarBestFitWeekHeight;
end;

function  TGlobal.DrawingCreate(Type_: PjShape): WordBool;
begin
  Result := DefaultInterface.DrawingCreate(Type_, EmptyParam);
end;

function  TGlobal.DrawingCreate(Type_: PjShape; Behind: OleVariant): WordBool;
begin
  Result := DefaultInterface.DrawingCreate(Type_, Behind);
end;

function  TGlobal.DrawingMove: WordBool;
begin
  Result := DefaultInterface.DrawingMove(EmptyParam, EmptyParam);
end;

function  TGlobal.DrawingMove(Forward: OleVariant): WordBool;
begin
  Result := DefaultInterface.DrawingMove(Forward, EmptyParam);
end;

function  TGlobal.DrawingMove(Forward: OleVariant; Full: OleVariant): WordBool;
begin
  Result := DefaultInterface.DrawingMove(Forward, Full);
end;

function  TGlobal.DrawingReshape: WordBool;
begin
  Result := DefaultInterface.DrawingReshape;
end;

function  TGlobal.DrawingProperties: WordBool;
begin
  Result := DefaultInterface.DrawingProperties(EmptyParam);
end;

function  TGlobal.DrawingProperties(SizePositionTab: OleVariant): WordBool;
begin
  Result := DefaultInterface.DrawingProperties(SizePositionTab);
end;

function  TGlobal.DrawingCycleColor: WordBool;
begin
  Result := DefaultInterface.DrawingCycleColor;
end;

function  TGlobal.FormatCopy: WordBool;
begin
  Result := DefaultInterface.FormatCopy;
end;

function  TGlobal.FormatPaste: WordBool;
begin
  Result := DefaultInterface.FormatPaste;
end;

function  TGlobal.FormatPainter: WordBool;
begin
  Result := DefaultInterface.FormatPainter;
end;

function  TGlobal.Toolbars: WordBool;
begin
  Result := DefaultInterface.Toolbars(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.Toolbars(Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.Toolbars(Action, EmptyParam, EmptyParam);
end;

function  TGlobal.Toolbars(Action: OleVariant; ToolbarName: OleVariant): WordBool;
begin
  Result := DefaultInterface.Toolbars(Action, ToolbarName, EmptyParam);
end;

function  TGlobal.Toolbars(Action: OleVariant; ToolbarName: OleVariant; NewToolbarName: OleVariant): WordBool;
begin
  Result := DefaultInterface.Toolbars(Action, ToolbarName, NewToolbarName);
end;

function  TGlobal.ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, EmptyParam, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                    Command: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, Command, EmptyParam,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                    Command: OleVariant; FaceIndex: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                               EmptyParam, EmptyParam);
end;

function  TGlobal.ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                    Command: OleVariant; FaceIndex: OleVariant;
                                    Description: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                               Description, EmptyParam);
end;

function  TGlobal.ToolbarInsertTool(const ToolbarName: WideString; ButtonIndex: Smallint;
                                    Command: OleVariant; FaceIndex: OleVariant;
                                    Description: OleVariant; ToolTip: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarInsertTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                               Description, ToolTip);
end;

function  TGlobal.ToolbarDeleteTool(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
begin
  Result := DefaultInterface.ToolbarDeleteTool(ToolbarName, ButtonIndex);
end;

function  TGlobal.ToolbarsCustomize: WordBool;
begin
  Result := DefaultInterface.ToolbarsCustomize;
end;

function  TGlobal.ToolbarCustomizeTool: WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.ToolbarCustomizeTool(ToolbarName: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, EmptyParam, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, EmptyParam, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                       Command: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, Command, EmptyParam,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                       Command: OleVariant; FaceIndex: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                                  EmptyParam, EmptyParam);
end;

function  TGlobal.ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                       Command: OleVariant; FaceIndex: OleVariant;
                                       Description: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                                  Description, EmptyParam);
end;

function  TGlobal.ToolbarCustomizeTool(ToolbarName: OleVariant; ButtonIndex: OleVariant;
                                       Command: OleVariant; FaceIndex: OleVariant;
                                       Description: OleVariant; ToolTip: OleVariant): WordBool;
begin
  Result := DefaultInterface.ToolbarCustomizeTool(ToolbarName, ButtonIndex, Command, FaceIndex,
                                                  Description, ToolTip);
end;

function  TGlobal.ToolbarCopyToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
begin
  Result := DefaultInterface.ToolbarCopyToolFace(ToolbarName, ButtonIndex);
end;

function  TGlobal.ToolbarPasteToolFace(const ToolbarName: WideString; ButtonIndex: Smallint): WordBool;
begin
  Result := DefaultInterface.ToolbarPasteToolFace(ToolbarName, ButtonIndex);
end;

function  TGlobal.FontBold: WordBool;
begin
  Result := DefaultInterface.FontBold(EmptyParam);
end;

function  TGlobal.FontBold(Set_: OleVariant): WordBool;
begin
  Result := DefaultInterface.FontBold(Set_);
end;

function  TGlobal.FontItalic: WordBool;
begin
  Result := DefaultInterface.FontItalic(EmptyParam);
end;

function  TGlobal.FontItalic(Set_: OleVariant): WordBool;
begin
  Result := DefaultInterface.FontItalic(Set_);
end;

function  TGlobal.FontUnderLine: WordBool;
begin
  Result := DefaultInterface.FontUnderLine(EmptyParam);
end;

function  TGlobal.FontUnderLine(Set_: OleVariant): WordBool;
begin
  Result := DefaultInterface.FontUnderLine(Set_);
end;

function  TGlobal.ColumnAlignment(Align: PjAlignment): WordBool;
begin
  Result := DefaultInterface.ColumnAlignment(Align);
end;

function  TGlobal.Reports: WordBool;
begin
  Result := DefaultInterface.Reports;
end;

function  TGlobal.TipOfTheDay: WordBool;
begin
  Result := DefaultInterface.TipOfTheDay;
end;

function  TGlobal.FindFile: WordBool;
begin
  Result := DefaultInterface.FindFile;
end;

function  TGlobal.MailUpdateProject(const DataFile: WideString): WordBool;
begin
  Result := DefaultInterface.MailUpdateProject(DataFile);
end;

function  TGlobal.MailSendProjectMail: WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendProjectMail(MessageType: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, EmptyParam, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, EmptyParam, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant; Body: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                      Body: OleVariant; Fields: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, EmptyParam,
                                                 EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                      Body: OleVariant; Fields: OleVariant; UpdateAsOf: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, UpdateAsOf,
                                                 EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                      Body: OleVariant; Fields: OleVariant; UpdateAsOf: OleVariant;
                                      ShowDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, UpdateAsOf,
                                                 ShowDialog, EmptyParam, EmptyParam);
end;

function  TGlobal.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                      Body: OleVariant; Fields: OleVariant; UpdateAsOf: OleVariant;
                                      ShowDialog: OleVariant; InstallationMessage: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, UpdateAsOf,
                                                 ShowDialog, InstallationMessage, EmptyParam);
end;

function  TGlobal.MailSendProjectMail(MessageType: OleVariant; Subject: OleVariant;
                                      Body: OleVariant; Fields: OleVariant; UpdateAsOf: OleVariant;
                                      ShowDialog: OleVariant; InstallationMessage: OleVariant;
                                      UpdateFrom: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailSendProjectMail(MessageType, Subject, Body, Fields, UpdateAsOf,
                                                 ShowDialog, InstallationMessage, UpdateFrom);
end;

function  TGlobal.WebInbox: WordBool;
begin
  Result := DefaultInterface.WebInbox;
end;

function  TGlobal.GanttChartWizard: WordBool;
begin
  Result := DefaultInterface.GanttChartWizard;
end;

function  TGlobal.DrawingToolbarShow: WordBool;
begin
  Result := DefaultInterface.DrawingToolbarShow;
end;

function  TGlobal.ReminderSet: WordBool;
begin
  Result := DefaultInterface.ReminderSet(EmptyParam, EmptyParam);
end;

function  TGlobal.ReminderSet(Start: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReminderSet(Start, EmptyParam);
end;

function  TGlobal.ReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool;
begin
  Result := DefaultInterface.ReminderSet(Start, LeadTime);
end;

function  TGlobal.SchedulePlusReminderSet: WordBool;
begin
  Result := DefaultInterface.SchedulePlusReminderSet(EmptyParam, EmptyParam);
end;

function  TGlobal.SchedulePlusReminderSet(Start: OleVariant): WordBool;
begin
  Result := DefaultInterface.SchedulePlusReminderSet(Start, EmptyParam);
end;

function  TGlobal.SchedulePlusReminderSet(Start: OleVariant; LeadTime: OleVariant): WordBool;
begin
  Result := DefaultInterface.SchedulePlusReminderSet(Start, LeadTime);
end;

function  TGlobal.CalendarTaskList: WordBool;
begin
  Result := DefaultInterface.CalendarTaskList(EmptyParam);
end;

function  TGlobal.CalendarTaskList(Date: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarTaskList(Date);
end;

function  TGlobal.OutlineSymbolsToggle: WordBool;
begin
  Result := DefaultInterface.OutlineSymbolsToggle(EmptyParam);
end;

function  TGlobal.OutlineSymbolsToggle(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.OutlineSymbolsToggle(Show);
end;

function  TGlobal.ResourceSharingPoolAction(Action: PjPoolAction): WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolAction(Action, EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolAction(Action, FileName, EmptyParam);
end;

function  TGlobal.ResourceSharingPoolAction(Action: PjPoolAction; FileName: OleVariant;
                                            ReadOnly: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolAction(Action, FileName, ReadOnly);
end;

function  TGlobal.ResourceAddressBook: WordBool;
begin
  Result := DefaultInterface.ResourceAddressBook;
end;

function  TGlobal.ResourceDetails: WordBool;
begin
  Result := DefaultInterface.ResourceDetails(EmptyParam);
end;

function  TGlobal.ResourceDetails(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceDetails(Name);
end;

function  TGlobal.MailProjectMailCustomize: WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MailProjectMailCustomize(Action: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, EmptyParam, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TGlobal.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, EmptyParam, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TGlobal.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                           FieldID: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, FieldID, EmptyParam,
                                                      EmptyParam, EmptyParam);
end;

function  TGlobal.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                           FieldID: OleVariant; Title: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, FieldID, Title, EmptyParam,
                                                      EmptyParam);
end;

function  TGlobal.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                           FieldID: OleVariant; Title: OleVariant;
                                           IncludeInTeamStatus: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, FieldID, Title,
                                                      IncludeInTeamStatus, EmptyParam);
end;

function  TGlobal.MailProjectMailCustomize(Action: OleVariant; Position: OleVariant;
                                           FieldID: OleVariant; Title: OleVariant;
                                           IncludeInTeamStatus: OleVariant; Editable: OleVariant): WordBool;
begin
  Result := DefaultInterface.MailProjectMailCustomize(Action, Position, FieldID, Title,
                                                      IncludeInTeamStatus, Editable);
end;

function  TGlobal.FileQuit(Save: PjSaveType): WordBool;
begin
  Result := DefaultInterface.FileQuit(Save);
end;

function  TGlobal.About: WordBool;
begin
  Result := DefaultInterface.About;
end;

function  TGlobal.DetailStylesProperties: WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DetailStylesProperties(AlignCellData: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(AlignCellData, EmptyParam, EmptyParam,
                                                    EmptyParam);
end;

function  TGlobal.DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(AlignCellData, RepeatRowLabel, EmptyParam,
                                                    EmptyParam);
end;

function  TGlobal.DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant;
                                         ShortLabels: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(AlignCellData, RepeatRowLabel, ShortLabels,
                                                    EmptyParam);
end;

function  TGlobal.DetailStylesProperties(AlignCellData: OleVariant; RepeatRowLabel: OleVariant;
                                         ShortLabels: OleVariant; DisplayDetailsColumn: OleVariant): WordBool;
begin
  Result := DefaultInterface.DetailStylesProperties(AlignCellData, RepeatRowLabel, ShortLabels,
                                                    DisplayDetailsColumn);
end;

function  TGlobal.DetailStylesToggleItem(Item: PjTimescaledData): WordBool;
begin
  Result := DefaultInterface.DetailStylesToggleItem(Item);
end;

function  TGlobal.AutoFilter: WordBool;
begin
  Result := DefaultInterface.AutoFilter;
end;

function  TGlobal.ViewBar: WordBool;
begin
  Result := DefaultInterface.ViewBar;
end;

function  TGlobal.MacroShowVba: WordBool;
begin
  Result := DefaultInterface.MacroShowVba;
end;

function  TGlobal.MacroShowCode: WordBool;
begin
  Result := DefaultInterface.MacroShowCode;
end;

function  TGlobal.WebGoBack: WordBool;
begin
  Result := DefaultInterface.WebGoBack;
end;

function  TGlobal.WebGoForward: WordBool;
begin
  Result := DefaultInterface.WebGoForward;
end;

function  TGlobal.WebStopLoading: WordBool;
begin
  Result := DefaultInterface.WebStopLoading;
end;

function  TGlobal.WebRefresh: WordBool;
begin
  Result := DefaultInterface.WebRefresh;
end;

function  TGlobal.WebOpenStartPage: WordBool;
begin
  Result := DefaultInterface.WebOpenStartPage;
end;

function  TGlobal.WebOpenSearchPage: WordBool;
begin
  Result := DefaultInterface.WebOpenSearchPage;
end;

function  TGlobal.WebHideToolbars: WordBool;
begin
  Result := DefaultInterface.WebHideToolbars(EmptyParam);
end;

function  TGlobal.WebHideToolbars(Hide: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebHideToolbars(Hide);
end;

function  TGlobal.FollowHyperlink: WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FollowHyperlink(Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(Address, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.FollowHyperlink(Address: OleVariant; SubAddress: OleVariant): WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(Address, SubAddress, EmptyParam, EmptyParam);
end;

function  TGlobal.FollowHyperlink(Address: OleVariant; SubAddress: OleVariant;
                                  AddHistory: OleVariant): WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(Address, SubAddress, AddHistory, EmptyParam);
end;

function  TGlobal.FollowHyperlink(Address: OleVariant; SubAddress: OleVariant;
                                  AddHistory: OleVariant; NewWindow: OleVariant): WordBool;
begin
  Result := DefaultInterface.FollowHyperlink(Address, SubAddress, AddHistory, NewWindow);
end;

function  TGlobal.EditPasteAsHyperlink: WordBool;
begin
  Result := DefaultInterface.EditPasteAsHyperlink;
end;

function  TGlobal.InsertHyperlink: WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.InsertHyperlink(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(Name, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.InsertHyperlink(Name: OleVariant; Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(Name, Address, EmptyParam, EmptyParam);
end;

function  TGlobal.InsertHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant): WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(Name, Address, SubAddress, EmptyParam);
end;

function  TGlobal.InsertHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                                  ScreenTip: OleVariant): WordBool;
begin
  Result := DefaultInterface.InsertHyperlink(Name, Address, SubAddress, ScreenTip);
end;

function  TGlobal.EditHyperlink: WordBool;
begin
  Result := DefaultInterface.EditHyperlink(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.EditHyperlink(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditHyperlink(Name, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.EditHyperlink(Name: OleVariant; Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditHyperlink(Name, Address, EmptyParam, EmptyParam);
end;

function  TGlobal.EditHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditHyperlink(Name, Address, SubAddress, EmptyParam);
end;

function  TGlobal.EditHyperlink(Name: OleVariant; Address: OleVariant; SubAddress: OleVariant;
                                ScreenTip: OleVariant): WordBool;
begin
  Result := DefaultInterface.EditHyperlink(Name, Address, SubAddress, ScreenTip);
end;

function  TGlobal.WebOpenHyperlink: WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.WebOpenHyperlink(Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(Address, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(Address, SubAddress, EmptyParam, EmptyParam);
end;

function  TGlobal.WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant;
                                   AddHistory: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(Address, SubAddress, AddHistory, EmptyParam);
end;

function  TGlobal.WebOpenHyperlink(Address: OleVariant; SubAddress: OleVariant;
                                   AddHistory: OleVariant; NewWindow: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebOpenHyperlink(Address, SubAddress, AddHistory, NewWindow);
end;

function  TGlobal.WebCopyHyperlink: WordBool;
begin
  Result := DefaultInterface.WebCopyHyperlink;
end;

function  TGlobal.WebAddToFavorites: WordBool;
begin
  Result := DefaultInterface.WebAddToFavorites(EmptyParam);
end;

function  TGlobal.WebAddToFavorites(CurrentLink: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebAddToFavorites(CurrentLink);
end;

function  TGlobal.EditClearHyperlink: WordBool;
begin
  Result := DefaultInterface.EditClearHyperlink;
end;

function  TGlobal.WebSetStartPage: WordBool;
begin
  Result := DefaultInterface.WebSetStartPage(EmptyParam);
end;

function  TGlobal.WebSetStartPage(Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebSetStartPage(Address);
end;

function  TGlobal.WebSetSearchPage: WordBool;
begin
  Result := DefaultInterface.WebSetSearchPage(EmptyParam);
end;

function  TGlobal.WebSetSearchPage(Address: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebSetSearchPage(Address);
end;

function  TGlobal.WebOpenFavorites: WordBool;
begin
  Result := DefaultInterface.WebOpenFavorites;
end;

function  TGlobal.WebToolbar: WordBool;
begin
  Result := DefaultInterface.WebToolbar(EmptyParam);
end;

function  TGlobal.WebToolbar(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebToolbar(Show);
end;

function  TGlobal.SplitTask: WordBool;
begin
  Result := DefaultInterface.SplitTask(EmptyParam);
end;

function  TGlobal.SplitTask(Lock: OleVariant): WordBool;
begin
  Result := DefaultInterface.SplitTask(Lock);
end;

function  TGlobal.CustomFieldRename(FieldID: PjCustomField; const NewName: WideString): WordBool;
begin
  Result := DefaultInterface.CustomFieldRename(FieldID, NewName, EmptyParam);
end;

function  TGlobal.CustomFieldRename(FieldID: PjCustomField; const NewName: WideString;
                                    Phonetic: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldRename(FieldID, NewName, Phonetic);
end;

function  TGlobal.CustomizeField: WordBool;
begin
  Result := DefaultInterface.CustomizeField;
end;

function  TGlobal.GanttShowBarSplits: WordBool;
begin
  Result := DefaultInterface.GanttShowBarSplits(EmptyParam);
end;

function  TGlobal.GanttShowBarSplits(Display: OleVariant): WordBool;
begin
  Result := DefaultInterface.GanttShowBarSplits(Display);
end;

function  TGlobal.CalendarShowBarSplits: WordBool;
begin
  Result := DefaultInterface.CalendarShowBarSplits(EmptyParam);
end;

function  TGlobal.CalendarShowBarSplits(Display: OleVariant): WordBool;
begin
  Result := DefaultInterface.CalendarShowBarSplits(Display);
end;

function  TGlobal.MapEdit: WordBool;
begin
  Result := DefaultInterface.MapEdit(EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant; CategoryEnabled: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant; FieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                          HeaderRow: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                          HeaderRow: OleVariant; AssignmentData: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, EmptyParam, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                          HeaderRow: OleVariant; AssignmentData: OleVariant;
                          TextDelimiter: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, EmptyParam, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                          HeaderRow: OleVariant; AssignmentData: OleVariant;
                          TextDelimiter: OleVariant; TextFileOrigin: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin, EmptyParam,
                                     EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                          HeaderRow: OleVariant; AssignmentData: OleVariant;
                          TextDelimiter: OleVariant; TextFileOrigin: OleVariant;
                          UseHtmlTemplate: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin,
                                     UseHtmlTemplate, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                          HeaderRow: OleVariant; AssignmentData: OleVariant;
                          TextDelimiter: OleVariant; TextFileOrigin: OleVariant;
                          UseHtmlTemplate: OleVariant; TemplateFile: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin,
                                     UseHtmlTemplate, TemplateFile, EmptyParam, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                          HeaderRow: OleVariant; AssignmentData: OleVariant;
                          TextDelimiter: OleVariant; TextFileOrigin: OleVariant;
                          UseHtmlTemplate: OleVariant; TemplateFile: OleVariant;
                          IncludeImage: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin,
                                     UseHtmlTemplate, TemplateFile, IncludeImage, EmptyParam);
end;

function  TGlobal.MapEdit(Name: OleVariant; Create: OleVariant; OverwriteExisting: OleVariant;
                          NewName: OleVariant; DataCategory: OleVariant;
                          CategoryEnabled: OleVariant; TableName: OleVariant;
                          FieldName: OleVariant; ExternalFieldName: OleVariant;
                          ExportFilter: OleVariant; ImportMethod: OleVariant; MergeKey: OleVariant;
                          HeaderRow: OleVariant; AssignmentData: OleVariant;
                          TextDelimiter: OleVariant; TextFileOrigin: OleVariant;
                          UseHtmlTemplate: OleVariant; TemplateFile: OleVariant;
                          IncludeImage: OleVariant; ImageFile: OleVariant): WordBool;
begin
  Result := DefaultInterface.MapEdit(Name, Create, OverwriteExisting, NewName, DataCategory,
                                     CategoryEnabled, TableName, FieldName, ExternalFieldName,
                                     ExportFilter, ImportMethod, MergeKey, HeaderRow,
                                     AssignmentData, TextDelimiter, TextFileOrigin,
                                     UseHtmlTemplate, TemplateFile, IncludeImage, ImageFile);
end;

function  TGlobal.FillAcross: WordBool;
begin
  Result := DefaultInterface.FillAcross(EmptyParam);
end;

function  TGlobal.FillAcross(Right: OleVariant): WordBool;
begin
  Result := DefaultInterface.FillAcross(Right);
end;

function  TGlobal.LinksBetweenProjects: WordBool;
begin
  Result := DefaultInterface.LinksBetweenProjects(EmptyParam);
end;

function  TGlobal.LinksBetweenProjects(AcceptAll: OleVariant): WordBool;
begin
  Result := DefaultInterface.LinksBetweenProjects(AcceptAll);
end;

function  TGlobal.ToggleAssignments: WordBool;
begin
  Result := DefaultInterface.ToggleAssignments;
end;

function  TGlobal.ProgressLines: WordBool;
begin
  Result := DefaultInterface.ProgressLines;
end;

function  TGlobal.ResourceSharingPoolUpdate: WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolUpdate(EmptyParam);
end;

function  TGlobal.ResourceSharingPoolUpdate(allSharers: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolUpdate(allSharers);
end;

function  TGlobal.ResourceSharingPoolRefresh: WordBool;
begin
  Result := DefaultInterface.ResourceSharingPoolRefresh;
end;

function  TGlobal.WebHelp: WordBool;
begin
  Result := DefaultInterface.WebHelp(EmptyParam);
end;

function  TGlobal.WebHelp(Type_: OleVariant): WordBool;
begin
  Result := DefaultInterface.WebHelp(Type_);
end;

function  TGlobal.AddProgressLine: WordBool;
begin
  Result := DefaultInterface.AddProgressLine;
end;

function  TGlobal.CustomizeIMEMode(FieldID: PjField; IMEMode: PjIMEMode): WordBool;
begin
  Result := DefaultInterface.CustomizeIMEMode(FieldID, IMEMode);
end;

function  TGlobal.DeleteFromDatabase: WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DeleteFromDatabase(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(Name, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.DeleteFromDatabase(Name: OleVariant; UserID: OleVariant): WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(Name, UserID, EmptyParam, EmptyParam);
end;

function  TGlobal.DeleteFromDatabase(Name: OleVariant; UserID: OleVariant;
                                     DatabasePassWord: OleVariant): WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(Name, UserID, DatabasePassWord, EmptyParam);
end;

function  TGlobal.DeleteFromDatabase(Name: OleVariant; UserID: OleVariant;
                                     DatabasePassWord: OleVariant; FormatID: OleVariant): WordBool;
begin
  Result := DefaultInterface.DeleteFromDatabase(Name, UserID, DatabasePassWord, FormatID);
end;

function  TGlobal.WBSCodeRenumber: WordBool;
begin
  Result := DefaultInterface.WBSCodeRenumber(EmptyParam);
end;

function  TGlobal.WBSCodeRenumber(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.WBSCodeRenumber(All);
end;

function  TGlobal.WBSCodeMaskEdit(CodePrefix: OleVariant; Level: OleVariant;
                                  Sequence: PjWBSSequence; Length: OleVariant;
                                  Separator: OleVariant; CodeGenerate: OleVariant;
                                  VerifyUniqueness: OleVariant): WordBool;
begin
  Result := DefaultInterface.WBSCodeMaskEdit(CodePrefix, Level, Sequence, Length, Separator,
                                             CodeGenerate, VerifyUniqueness);
end;

function  TGlobal.CustomOutlineCodeEdit(FieldID: PjCustomField; Level: OleVariant;
                                        Sequence: PjCustomOutlineCodeSequence; Length: OleVariant;
                                        Separator: OleVariant; OnlyLookUpTableCodes: OleVariant;
                                        OnlyCompleteCodes: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomOutlineCodeEdit(FieldID, Level, Sequence, Length, Separator,
                                                   OnlyLookUpTableCodes, OnlyCompleteCodes);
end;

function  TGlobal.OptionsSave: WordBool;
begin
  Result := DefaultInterface.OptionsSave(EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                              DefaultUserTemplatesPath: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                              DefaultUserTemplatesPath: OleVariant;
                              DefaultWorkgroupTemplatesPath: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         EmptyParam, EmptyParam, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                              DefaultUserTemplatesPath: OleVariant;
                              DefaultWorkgroupTemplatesPath: OleVariant;
                              ExpandDatabaseTimephasedData: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, EmptyParam, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                              DefaultUserTemplatesPath: OleVariant;
                              DefaultWorkgroupTemplatesPath: OleVariant;
                              ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave, EmptyParam,
                                         EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                              DefaultUserTemplatesPath: OleVariant;
                              DefaultWorkgroupTemplatesPath: OleVariant;
                              ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                              AutomaticSaveInterval: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave,
                                         AutomaticSaveInterval, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                              DefaultUserTemplatesPath: OleVariant;
                              DefaultWorkgroupTemplatesPath: OleVariant;
                              ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                              AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave,
                                         AutomaticSaveInterval, AutomaticSaveOptions, EmptyParam,
                                         EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                              DefaultUserTemplatesPath: OleVariant;
                              DefaultWorkgroupTemplatesPath: OleVariant;
                              ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                              AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant;
                              AutomaticSavePrompt: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave,
                                         AutomaticSaveInterval, AutomaticSaveOptions,
                                         AutomaticSavePrompt, EmptyParam);
end;

function  TGlobal.OptionsSave(DefaultSaveFormat: OleVariant; DefaultProjectsPath: OleVariant;
                              DefaultUserTemplatesPath: OleVariant;
                              DefaultWorkgroupTemplatesPath: OleVariant;
                              ExpandDatabaseTimephasedData: OleVariant; AutomaticSave: OleVariant;
                              AutomaticSaveInterval: OleVariant; AutomaticSaveOptions: OleVariant;
                              AutomaticSavePrompt: OleVariant; SetDefaultsDatabase: OleVariant): WordBool;
begin
  Result := DefaultInterface.OptionsSave(DefaultSaveFormat, DefaultProjectsPath,
                                         DefaultUserTemplatesPath, DefaultWorkgroupTemplatesPath,
                                         ExpandDatabaseTimephasedData, AutomaticSave,
                                         AutomaticSaveInterval, AutomaticSaveOptions,
                                         AutomaticSavePrompt, SetDefaultsDatabase);
end;

function  TGlobal.OfficeOnTheWeb: WordBool;
begin
  Result := DefaultInterface.OfficeOnTheWeb;
end;

function  TGlobal.FixMe: WordBool;
begin
  Result := DefaultInterface.FixMe;
end;

function  TGlobal.ViewShowWorkAvailability: WordBool;
begin
  Result := DefaultInterface.ViewShowWorkAvailability;
end;

function  TGlobal.ViewShowUnitAvailability: WordBool;
begin
  Result := DefaultInterface.ViewShowUnitAvailability;
end;

function  TGlobal.BaselineClear: WordBool;
begin
  Result := DefaultInterface.BaselineClear(EmptyParam, EmptyParam);
end;

function  TGlobal.BaselineClear(All: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineClear(All, EmptyParam);
end;

function  TGlobal.BaselineClear(All: OleVariant; From: OleVariant): WordBool;
begin
  Result := DefaultInterface.BaselineClear(All, From);
end;

function  TGlobal.Groups: WordBool;
begin
  Result := DefaultInterface.Groups;
end;

function  TGlobal.GroupApply: WordBool;
begin
  Result := DefaultInterface.GroupApply(EmptyParam);
end;

function  TGlobal.GroupApply(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.GroupApply(Name);
end;

function  TGlobal.GroupBy: WordBool;
begin
  Result := DefaultInterface.GroupBy;
end;

function  TGlobal.LookUpTableAdd(FieldID: PjCustomField): WordBool;
begin
  Result := DefaultInterface.LookUpTableAdd(FieldID, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant): WordBool;
begin
  Result := DefaultInterface.LookUpTableAdd(FieldID, Level, EmptyParam, EmptyParam);
end;

function  TGlobal.LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant; Code: OleVariant): WordBool;
begin
  Result := DefaultInterface.LookUpTableAdd(FieldID, Level, Code, EmptyParam);
end;

function  TGlobal.LookUpTableAdd(FieldID: PjCustomField; Level: OleVariant; Code: OleVariant;
                                 Description: OleVariant): WordBool;
begin
  Result := DefaultInterface.LookUpTableAdd(FieldID, Level, Code, Description);
end;

function  TGlobal.BoxStylesEdit(Style: PjBoxStyle; DataTemplate: OleVariant;
                                HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                                BorderShape: PjBoxShape; BorderColor: PjColor;
                                BorderWidth: OleVariant; BackgroundColor: PjColor;
                                BackgroundPattern: PjBackgroundPattern): WordBool;
begin
  Result := DefaultInterface.BoxStylesEdit(Style, DataTemplate, HorizontalGridlines,
                                           VerticalGridlines, BorderShape, BorderColor,
                                           BorderWidth, BackgroundColor, BackgroundPattern);
end;

function  TGlobal.BoxFormat(ProjectName: OleVariant; TaskID: OleVariant; DataTemplate: OleVariant;
                            HorizontalGridlines: OleVariant; VerticalGridlines: OleVariant;
                            BorderShape: PjBoxShape; BorderColor: PjColor; BorderWidth: OleVariant;
                            BackgroundColor: PjColor; BackgroundPattern: PjBackgroundPattern;
                            Reset: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxFormat(ProjectName, TaskID, DataTemplate, HorizontalGridlines,
                                       VerticalGridlines, BorderShape, BorderColor, BorderWidth,
                                       BackgroundColor, BackgroundPattern, Reset);
end;

function  TGlobal.BarBoxFormat: WordBool;
begin
  Result := DefaultInterface.BarBoxFormat;
end;

function  TGlobal.CreateWebAccount(ServerURL: OleVariant; Name: OleVariant;
                                   AuthenticationType: PjAuthentication;
                                   AccountType: PjAccountType; ShowDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.CreateWebAccount(ServerURL, Name, AuthenticationType, AccountType,
                                              ShowDialog);
end;

function  TGlobal.BoxDataTemplate(const Name: WideString; Action: PjDataTemplate): WordBool;
begin
  Result := DefaultInterface.BoxDataTemplate(Name, Action, EmptyParam, EmptyParam);
end;

function  TGlobal.BoxDataTemplate(const Name: WideString; Action: PjDataTemplate;
                                  NewName: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxDataTemplate(Name, Action, NewName, EmptyParam);
end;

function  TGlobal.BoxDataTemplate(const Name: WideString; Action: PjDataTemplate;
                                  NewName: OleVariant; Overwrite: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxDataTemplate(Name, Action, NewName, Overwrite);
end;

function  TGlobal.BoxCellLayout(const Name: WideString): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BoxCellLayout(const Name: WideString; CellRows: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, CellRows, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BoxCellLayout(const Name: WideString; CellRows: OleVariant;
                                CellColumns: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, CellRows, CellColumns, EmptyParam, EmptyParam);
end;

function  TGlobal.BoxCellLayout(const Name: WideString; CellRows: OleVariant;
                                CellColumns: OleVariant; CellWidth: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, CellRows, CellColumns, CellWidth, EmptyParam);
end;

function  TGlobal.BoxCellLayout(const Name: WideString; CellRows: OleVariant;
                                CellColumns: OleVariant; CellWidth: OleVariant;
                                MergeCells: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxCellLayout(Name, CellRows, CellColumns, CellWidth, MergeCells);
end;

function  TGlobal.BoxCellEdit(const Name: WideString; Cell: PjCell; FieldName: PjField;
                              Font: OleVariant; FontSize: OleVariant; FontColor: PjColor;
                              Bold: OleVariant; Italic: OleVariant; Underline: OleVariant;
                              HorizontalAlignment: PjAlignment;
                              VerticalAlignment: PjVerticalAlignment; TextLineLimit: OleVariant;
                              ShowLabel: OleVariant; Label_: OleVariant; DateFormat: PjDateFormat): WordBool;
begin
  Result := DefaultInterface.BoxCellEdit(Name, Cell, FieldName, Font, FontSize, FontColor, Bold,
                                         Italic, Underline, HorizontalAlignment, VerticalAlignment,
                                         TextLineLimit, ShowLabel, Label_, DateFormat);
end;

function  TGlobal.ResourceWindowsAccount: WordBool;
begin
  Result := DefaultInterface.ResourceWindowsAccount(EmptyParam, EmptyParam);
end;

function  TGlobal.ResourceWindowsAccount(Name: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceWindowsAccount(Name, EmptyParam);
end;

function  TGlobal.ResourceWindowsAccount(Name: OleVariant; ShowDialog: OleVariant): WordBool;
begin
  Result := DefaultInterface.ResourceWindowsAccount(Name, ShowDialog);
end;

function  TGlobal.SetRowHeight: WordBool;
begin
  Result := DefaultInterface.SetRowHeight(EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.SetRowHeight(Unit_: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetRowHeight(Unit_, EmptyParam, EmptyParam);
end;

function  TGlobal.SetRowHeight(Unit_: OleVariant; Rows: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetRowHeight(Unit_, Rows, EmptyParam);
end;

function  TGlobal.SetRowHeight(Unit_: OleVariant; Rows: OleVariant; UseUniqueID: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetRowHeight(Unit_, Rows, UseUniqueID);
end;

function  TGlobal.ComAddInsDialog: WordBool;
begin
  Result := DefaultInterface.ComAddInsDialog;
end;

function  TGlobal.MacroSecurity: WordBool;
begin
  Result := DefaultInterface.MacroSecurity;
end;

function  TGlobal.LayoutSelectionNow: WordBool;
begin
  Result := DefaultInterface.LayoutSelectionNow;
end;

function  TGlobal.BoxAlign(Alignment: PjAlign): WordBool;
begin
  Result := DefaultInterface.BoxAlign(Alignment);
end;

function  TGlobal.ConvertHangulToHanja: WordBool;
begin
  Result := DefaultInterface.ConvertHangulToHanja;
end;

function  TGlobal.UpdateProjectToWeb: WordBool;
begin
  Result := DefaultInterface.UpdateProjectToWeb(EmptyParam);
end;

function  TGlobal.UpdateProjectToWeb(ServerURL: OleVariant): WordBool;
begin
  Result := DefaultInterface.UpdateProjectToWeb(ServerURL);
end;

function  TGlobal.CustomFieldProperties(FieldID: PjCustomField; Attribute: PjCustomFieldAttribute;
                                        SummaryCalc: PjSummaryCalc): WordBool;
begin
  Result := DefaultInterface.CustomFieldProperties(FieldID, Attribute, SummaryCalc, EmptyParam);
end;

function  TGlobal.CustomFieldProperties(FieldID: PjCustomField; Attribute: PjCustomFieldAttribute;
                                        SummaryCalc: PjSummaryCalc; GraphicalIndicators: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldProperties(FieldID, Attribute, SummaryCalc,
                                                   GraphicalIndicators);
end;

function  TGlobal.CustomFieldSetFormula(FieldID: PjCustomField): WordBool;
begin
  Result := DefaultInterface.CustomFieldSetFormula(FieldID, EmptyParam);
end;

function  TGlobal.CustomFieldSetFormula(FieldID: PjCustomField; Formula: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldSetFormula(FieldID, Formula);
end;

function  TGlobal.CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                          const Value: WideString; IndicatorID: PjIndicator;
                                          CriteriaList: PjCriteriaList): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicatorAdd(FieldID, Test, Value, IndicatorID,
                                                     CriteriaList, EmptyParam);
end;

function  TGlobal.CustomFieldIndicatorAdd(FieldID: PjCustomField; Test: PjComparison;
                                          const Value: WideString; IndicatorID: PjIndicator;
                                          CriteriaList: PjCriteriaList; Index: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicatorAdd(FieldID, Test, Value, IndicatorID,
                                                     CriteriaList, Index);
end;

function  TGlobal.CustomFieldIndicators(FieldID: PjCustomField): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicators(FieldID, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.CustomFieldIndicators(FieldID: PjCustomField;
                                        SummaryInheritsNonsummary: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicators(FieldID, SummaryInheritsNonsummary, EmptyParam,
                                                   EmptyParam);
end;

function  TGlobal.CustomFieldIndicators(FieldID: PjCustomField;
                                        SummaryInheritsNonsummary: OleVariant;
                                        ProjectInheritsSummary: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicators(FieldID, SummaryInheritsNonsummary,
                                                   ProjectInheritsSummary, EmptyParam);
end;

function  TGlobal.CustomFieldIndicators(FieldID: PjCustomField;
                                        SummaryInheritsNonsummary: OleVariant;
                                        ProjectInheritsSummary: OleVariant; ShowToolTips: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicators(FieldID, SummaryInheritsNonsummary,
                                                   ProjectInheritsSummary, ShowToolTips);
end;

function  TGlobal.CustomFieldIndicatorDelete(FieldID: PjCustomField; Index: Smallint;
                                             CriteriaList: PjCriteriaList): WordBool;
begin
  Result := DefaultInterface.CustomFieldIndicatorDelete(FieldID, Index, CriteriaList);
end;

function  TGlobal.CustomFieldValueList(FieldID: PjCustomField; ListDefault: OleVariant;
                                       DefaultValue: OleVariant; RestrictToList: OleVariant;
                                       AppendNew: OleVariant; PromptOnNew: OleVariant;
                                       DisplayOrder: PjListOrder): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueList(FieldID, ListDefault, DefaultValue,
                                                  RestrictToList, AppendNew, PromptOnNew,
                                                  DisplayOrder);
end;

function  TGlobal.CustomFieldValueListAdd(FieldID: PjCustomField): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, EmptyParam, EmptyParam, EmptyParam,
                                                     EmptyParam, EmptyParam);
end;

function  TGlobal.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, EmptyParam, EmptyParam,
                                                     EmptyParam, EmptyParam);
end;

function  TGlobal.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                          Description: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, Description, EmptyParam,
                                                     EmptyParam, EmptyParam);
end;

function  TGlobal.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                          Description: OleVariant; Phonetic: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, Description, Phonetic,
                                                     EmptyParam, EmptyParam);
end;

function  TGlobal.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                          Description: OleVariant; Phonetic: OleVariant;
                                          Index: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, Description, Phonetic, Index,
                                                     EmptyParam);
end;

function  TGlobal.CustomFieldValueListAdd(FieldID: PjCustomField; Value: OleVariant;
                                          Description: OleVariant; Phonetic: OleVariant;
                                          Index: OleVariant; FieldDefault: OleVariant): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListAdd(FieldID, Value, Description, Phonetic, Index,
                                                     FieldDefault);
end;

function  TGlobal.CustomFieldValueListDelete(FieldID: PjCustomField; Index: Smallint): WordBool;
begin
  Result := DefaultInterface.CustomFieldValueListDelete(FieldID, Index);
end;

function  TGlobal.BoxLayout(LayoutMode: PjLayoutMode; LayoutScheme: PjLayoutScheme;
                            SummaryPrecedence: OleVariant; RowAlignment: PjVerticalAlignment;
                            ColumnAlignment: PjAlignment; RowSpacing: OleVariant;
                            ColumnSpacing: OleVariant; RowHeight: PjRowColSize;
                            ColumnWidth: PjRowColSize; AdjustForPageBreaks: OleVariant;
                            ShowSummaryTasks: OleVariant; ViewBackgroundColor: PjColor;
                            ViewBackgroundPattern: PjBackgroundPattern;
                            ShowProgressMarks: OleVariant; ShowPageBreaks: OleVariant;
                            ShowIDOnly: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxLayout(LayoutMode, LayoutScheme, SummaryPrecedence, RowAlignment,
                                       ColumnAlignment, RowSpacing, ColumnSpacing, RowHeight,
                                       ColumnWidth, AdjustForPageBreaks, ShowSummaryTasks,
                                       ViewBackgroundColor, ViewBackgroundPattern,
                                       ShowProgressMarks, ShowPageBreaks, ShowIDOnly);
end;

function  TGlobal.BoxLinks(Style: PjLinkStyle; ShowArrows: OleVariant; ShowLabels: OleVariant;
                           ColorMode: PjLinkColorMode; CriticalColor: PjColor;
                           NoncriticalColor: PjColor): WordBool;
begin
  Result := DefaultInterface.BoxLinks(Style, ShowArrows, ShowLabels, ColorMode, CriticalColor,
                                      NoncriticalColor);
end;

function  TGlobal.SummaryTasksShow: WordBool;
begin
  Result := DefaultInterface.SummaryTasksShow(EmptyParam);
end;

function  TGlobal.SummaryTasksShow(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.SummaryTasksShow(Show);
end;

function  TGlobal.BoxProgressMarksShow: WordBool;
begin
  Result := DefaultInterface.BoxProgressMarksShow(EmptyParam);
end;

function  TGlobal.BoxProgressMarksShow(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxProgressMarksShow(Show);
end;

function  TGlobal.BoxLinkLabelsShow: WordBool;
begin
  Result := DefaultInterface.BoxLinkLabelsShow(EmptyParam);
end;

function  TGlobal.BoxLinkLabelsShow(Show: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxLinkLabelsShow(Show);
end;

function  TGlobal.BoxLinkStyleToggle: WordBool;
begin
  Result := DefaultInterface.BoxLinkStyleToggle(EmptyParam);
end;

function  TGlobal.BoxLinkStyleToggle(StraightLinks: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxLinkStyleToggle(StraightLinks);
end;

function  TGlobal.LayoutRelatedNow: WordBool;
begin
  Result := DefaultInterface.LayoutRelatedNow;
end;

function  TGlobal.BoxSet(Action: PjBoxSet): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, EmptyParam, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BoxSet(Action: PjBoxSet; TaskID: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, TaskID, EmptyParam, EmptyParam, EmptyParam);
end;

function  TGlobal.BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, TaskID, XPosition, EmptyParam, EmptyParam);
end;

function  TGlobal.BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                         YPosition: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, TaskID, XPosition, YPosition, EmptyParam);
end;

function  TGlobal.BoxSet(Action: PjBoxSet; TaskID: OleVariant; XPosition: OleVariant;
                         YPosition: OleVariant; ProjectName: OleVariant): WordBool;
begin
  Result := DefaultInterface.BoxSet(Action, TaskID, XPosition, YPosition, ProjectName);
end;

function  TGlobal.SetSplitBar: WordBool;
begin
  Result := DefaultInterface.SetSplitBar(EmptyParam);
end;

function  TGlobal.SetSplitBar(ShowColumns: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetSplitBar(ShowColumns);
end;

{$IFDEF LIVE_SERVER_AT_DESIGN_TIME}
constructor TGlobalProperties.Create(AServer: TGlobal);
begin
  inherited Create;
  FServer := AServer;
end;

function TGlobalProperties.GetDefaultInterface: _Global;
begin
  Result := FServer.DefaultInterface;
end;

function TGlobalProperties.Get_Application: Application;
begin
  Result := DefaultInterface.Application;
end;

procedure TGlobalProperties.Set_Application(const Value: Application);
begin
  DefaultInterface.Application := Value;
end;

function TGlobalProperties.Get_Parent: Application;
begin
  Result := DefaultInterface.Parent;
end;

procedure TGlobalProperties.Set_Parent(const Value: Application);
begin
  DefaultInterface.Parent := Value;
end;

function TGlobalProperties.Get_ActiveSelection: Selection;
begin
  Result := DefaultInterface.ActiveSelection;
end;

procedure TGlobalProperties.Set_ActiveSelection(const Value: Selection);
begin
  DefaultInterface.ActiveSelection := Value;
end;

function TGlobalProperties.Get_ActiveCell: Cell;
begin
  Result := DefaultInterface.ActiveCell;
end;

procedure TGlobalProperties.Set_ActiveCell(const Value: Cell);
begin
  DefaultInterface.ActiveCell := Value;
end;

function TGlobalProperties.Get_ActiveProject: Project;
begin
  Result := DefaultInterface.ActiveProject;
end;

procedure TGlobalProperties.Set_ActiveProject(const Value: Project);
begin
  DefaultInterface.ActiveProject := Value;
end;

function TGlobalProperties.Get_ActiveWindow: Window;
begin
  Result := DefaultInterface.ActiveWindow;
end;

procedure TGlobalProperties.Set_ActiveWindow(const Value: Window);
begin
  DefaultInterface.ActiveWindow := Value;
end;

function TGlobalProperties.Get_SupportsMultipleDocuments: WordBool;
begin
  Result := DefaultInterface.SupportsMultipleDocuments;
end;

procedure TGlobalProperties.Set_SupportsMultipleDocuments(Value: WordBool);
begin
  DefaultInterface.SupportsMultipleDocuments := Value;
end;

function TGlobalProperties.Get_SupportsMultipleWindows: WordBool;
begin
  Result := DefaultInterface.SupportsMultipleWindows;
end;

procedure TGlobalProperties.Set_SupportsMultipleWindows(Value: WordBool);
begin
  DefaultInterface.SupportsMultipleWindows := Value;
end;

function TGlobalProperties.Get_Visible: WordBool;
begin
  Result := DefaultInterface.Visible;
end;

procedure TGlobalProperties.Set_Visible(Value: WordBool);
begin
  DefaultInterface.Visible := Value;
end;

function TGlobalProperties.Get_PathSeparator: WideString;
begin
  Result := DefaultInterface.PathSeparator;
end;

procedure TGlobalProperties.Set_PathSeparator(const Value: WideString);
begin
  DefaultInterface.PathSeparator := Value;
end;

function TGlobalProperties.Get_Caption: WideString;
begin
  Result := DefaultInterface.Caption;
end;

procedure TGlobalProperties.Set_Caption(const Value: WideString);
begin
  DefaultInterface.Caption := Value;
end;

function TGlobalProperties.Get_Name: WideString;
begin
  Result := DefaultInterface.Name;
end;

procedure TGlobalProperties.Set_Name(const Value: WideString);
begin
  DefaultInterface.Name := Value;
end;

function TGlobalProperties.Get_Path: WideString;
begin
  Result := DefaultInterface.Path;
end;

procedure TGlobalProperties.Set_Path(const Value: WideString);
begin
  DefaultInterface.Path := Value;
end;

function TGlobalProperties.Get_Version: WideString;
begin
  Result := DefaultInterface.Version;
end;

procedure TGlobalProperties.Set_Version(const Value: WideString);
begin
  DefaultInterface.Version := Value;
end;

function TGlobalProperties.Get_WindowState: PjWindowState;
begin
  Result := DefaultInterface.WindowState;
end;

procedure TGlobalProperties.Set_WindowState(Value: PjWindowState);
begin
  DefaultInterface.WindowState := Value;
end;

function TGlobalProperties.Get_DateOrder: PjDateOrder;
begin
  Result := DefaultInterface.DateOrder;
end;

procedure TGlobalProperties.Set_DateOrder(Value: PjDateOrder);
begin
  DefaultInterface.DateOrder := Value;
end;

function TGlobalProperties.Get_DateSeparator: WideString;
begin
  Result := DefaultInterface.DateSeparator;
end;

procedure TGlobalProperties.Set_DateSeparator(const Value: WideString);
begin
  DefaultInterface.DateSeparator := Value;
end;

function TGlobalProperties.Get_ThousandSeparator: WideString;
begin
  Result := DefaultInterface.ThousandSeparator;
end;

procedure TGlobalProperties.Set_ThousandSeparator(const Value: WideString);
begin
  DefaultInterface.ThousandSeparator := Value;
end;

function TGlobalProperties.Get_DecimalSeparator: WideString;
begin
  Result := DefaultInterface.DecimalSeparator;
end;

procedure TGlobalProperties.Set_DecimalSeparator(const Value: WideString);
begin
  DefaultInterface.DecimalSeparator := Value;
end;

function TGlobalProperties.Get_ListSeparator: WideString;
begin
  Result := DefaultInterface.ListSeparator;
end;

procedure TGlobalProperties.Set_ListSeparator(const Value: WideString);
begin
  DefaultInterface.ListSeparator := Value;
end;

function TGlobalProperties.Get_TimeSeparator: WideString;
begin
  Result := DefaultInterface.TimeSeparator;
end;

procedure TGlobalProperties.Set_TimeSeparator(const Value: WideString);
begin
  DefaultInterface.TimeSeparator := Value;
end;

function TGlobalProperties.Get_TwelveHourTimeFormat: WordBool;
begin
  Result := DefaultInterface.TwelveHourTimeFormat;
end;

procedure TGlobalProperties.Set_TwelveHourTimeFormat(Value: WordBool);
begin
  DefaultInterface.TwelveHourTimeFormat := Value;
end;

function TGlobalProperties.Get_AMText: WideString;
begin
  Result := DefaultInterface.AMText;
end;

procedure TGlobalProperties.Set_AMText(const Value: WideString);
begin
  DefaultInterface.AMText := Value;
end;

function TGlobalProperties.Get_PMText: WideString;
begin
  Result := DefaultInterface.PMText;
end;

procedure TGlobalProperties.Set_PMText(const Value: WideString);
begin
  DefaultInterface.PMText := Value;
end;

function TGlobalProperties.Get_DefaultView: WideString;
begin
  Result := DefaultInterface.DefaultView;
end;

procedure TGlobalProperties.Set_DefaultView(const Value: WideString);
begin
  DefaultInterface.DefaultView := Value;
end;

function TGlobalProperties.Get_DisplayStatusBar: WordBool;
begin
  Result := DefaultInterface.DisplayStatusBar;
end;

procedure TGlobalProperties.Set_DisplayStatusBar(Value: WordBool);
begin
  DefaultInterface.DisplayStatusBar := Value;
end;

function TGlobalProperties.Get_DisplayAlerts: WordBool;
begin
  Result := DefaultInterface.DisplayAlerts;
end;

procedure TGlobalProperties.Set_DisplayAlerts(Value: WordBool);
begin
  DefaultInterface.DisplayAlerts := Value;
end;

function TGlobalProperties.Get_DisplayEntryBar: WordBool;
begin
  Result := DefaultInterface.DisplayEntryBar;
end;

procedure TGlobalProperties.Set_DisplayEntryBar(Value: WordBool);
begin
  DefaultInterface.DisplayEntryBar := Value;
end;

function TGlobalProperties.Get_DisplayScrollBars: WordBool;
begin
  Result := DefaultInterface.DisplayScrollBars;
end;

procedure TGlobalProperties.Set_DisplayScrollBars(Value: WordBool);
begin
  DefaultInterface.DisplayScrollBars := Value;
end;

function TGlobalProperties.Get_DisplayWindowsInTaskbar: WordBool;
begin
  Result := DefaultInterface.DisplayWindowsInTaskbar;
end;

procedure TGlobalProperties.Set_DisplayWindowsInTaskbar(Value: WordBool);
begin
  DefaultInterface.DisplayWindowsInTaskbar := Value;
end;

function TGlobalProperties.Get_Calculation: PjCalculation;
begin
  Result := DefaultInterface.Calculation;
end;

procedure TGlobalProperties.Set_Calculation(Value: PjCalculation);
begin
  DefaultInterface.Calculation := Value;
end;

function TGlobalProperties.Get_AutoLevel: WordBool;
begin
  Result := DefaultInterface.AutoLevel;
end;

procedure TGlobalProperties.Set_AutoLevel(Value: WordBool);
begin
  DefaultInterface.AutoLevel := Value;
end;

function TGlobalProperties.Get_AutoClearLeveling: WordBool;
begin
  Result := DefaultInterface.AutoClearLeveling;
end;

procedure TGlobalProperties.Set_AutoClearLeveling(Value: WordBool);
begin
  DefaultInterface.AutoClearLeveling := Value;
end;

function TGlobalProperties.Get_LevelWithinSlack: WordBool;
begin
  Result := DefaultInterface.LevelWithinSlack;
end;

procedure TGlobalProperties.Set_LevelWithinSlack(Value: WordBool);
begin
  DefaultInterface.LevelWithinSlack := Value;
end;

function TGlobalProperties.Get_LevelOrder: PjLevelOrder;
begin
  Result := DefaultInterface.LevelOrder;
end;

procedure TGlobalProperties.Set_LevelOrder(Value: PjLevelOrder);
begin
  DefaultInterface.LevelOrder := Value;
end;

function TGlobalProperties.Get_LevelPeriodBasis: PjLevelPeriodBasis;
begin
  Result := DefaultInterface.LevelPeriodBasis;
end;

procedure TGlobalProperties.Set_LevelPeriodBasis(Value: PjLevelPeriodBasis);
begin
  DefaultInterface.LevelPeriodBasis := Value;
end;

function TGlobalProperties.Get_LevelIndividualAssignments: WordBool;
begin
  Result := DefaultInterface.LevelIndividualAssignments;
end;

procedure TGlobalProperties.Set_LevelIndividualAssignments(Value: WordBool);
begin
  DefaultInterface.LevelIndividualAssignments := Value;
end;

function TGlobalProperties.Get_LevelingCanSplit: WordBool;
begin
  Result := DefaultInterface.LevelingCanSplit;
end;

procedure TGlobalProperties.Set_LevelingCanSplit(Value: WordBool);
begin
  DefaultInterface.LevelingCanSplit := Value;
end;

function TGlobalProperties.Get_MoveAfterReturn: WordBool;
begin
  Result := DefaultInterface.MoveAfterReturn;
end;

procedure TGlobalProperties.Set_MoveAfterReturn(Value: WordBool);
begin
  DefaultInterface.MoveAfterReturn := Value;
end;

function TGlobalProperties.Get_DisplayScheduleMessages: WordBool;
begin
  Result := DefaultInterface.DisplayScheduleMessages;
end;

procedure TGlobalProperties.Set_DisplayScheduleMessages(Value: WordBool);
begin
  DefaultInterface.DisplayScheduleMessages := Value;
end;

function TGlobalProperties.Get_StartWeekOn: PjWeekday;
begin
  Result := DefaultInterface.StartWeekOn;
end;

procedure TGlobalProperties.Set_StartWeekOn(Value: PjWeekday);
begin
  DefaultInterface.StartWeekOn := Value;
end;

function TGlobalProperties.Get_StartYearIn: PjMonth;
begin
  Result := DefaultInterface.StartYearIn;
end;

procedure TGlobalProperties.Set_StartYearIn(Value: PjMonth);
begin
  DefaultInterface.StartYearIn := Value;
end;

function TGlobalProperties.Get_CellDragAndDrop: WordBool;
begin
  Result := DefaultInterface.CellDragAndDrop;
end;

procedure TGlobalProperties.Set_CellDragAndDrop(Value: WordBool);
begin
  DefaultInterface.CellDragAndDrop := Value;
end;

function TGlobalProperties.Get_UserName: WideString;
begin
  Result := DefaultInterface.UserName;
end;

procedure TGlobalProperties.Set_UserName(const Value: WideString);
begin
  DefaultInterface.UserName := Value;
end;

function TGlobalProperties.Get_DisplayNotesIndicator: WordBool;
begin
  Result := DefaultInterface.DisplayNotesIndicator;
end;

procedure TGlobalProperties.Set_DisplayNotesIndicator(Value: WordBool);
begin
  DefaultInterface.DisplayNotesIndicator := Value;
end;

function TGlobalProperties.Get_AskToUpdateLinks: WordBool;
begin
  Result := DefaultInterface.AskToUpdateLinks;
end;

procedure TGlobalProperties.Set_AskToUpdateLinks(Value: WordBool);
begin
  DefaultInterface.AskToUpdateLinks := Value;
end;

function TGlobalProperties.Get_DisplayPlanningWizard: WordBool;
begin
  Result := DefaultInterface.DisplayPlanningWizard;
end;

procedure TGlobalProperties.Set_DisplayPlanningWizard(Value: WordBool);
begin
  DefaultInterface.DisplayPlanningWizard := Value;
end;

function TGlobalProperties.Get_DisplayWizardUsage: WordBool;
begin
  Result := DefaultInterface.DisplayWizardUsage;
end;

procedure TGlobalProperties.Set_DisplayWizardUsage(Value: WordBool);
begin
  DefaultInterface.DisplayWizardUsage := Value;
end;

function TGlobalProperties.Get_DisplayWizardErrors: WordBool;
begin
  Result := DefaultInterface.DisplayWizardErrors;
end;

procedure TGlobalProperties.Set_DisplayWizardErrors(Value: WordBool);
begin
  DefaultInterface.DisplayWizardErrors := Value;
end;

function TGlobalProperties.Get_DisplayWizardScheduling: WordBool;
begin
  Result := DefaultInterface.DisplayWizardScheduling;
end;

procedure TGlobalProperties.Set_DisplayWizardScheduling(Value: WordBool);
begin
  DefaultInterface.DisplayWizardScheduling := Value;
end;

function TGlobalProperties.Get_ShowTipOfDay: WordBool;
begin
  Result := DefaultInterface.ShowTipOfDay;
end;

procedure TGlobalProperties.Set_ShowTipOfDay(Value: WordBool);
begin
  DefaultInterface.ShowTipOfDay := Value;
end;

function TGlobalProperties.Get_ShowToolTips: WordBool;
begin
  Result := DefaultInterface.ShowToolTips;
end;

procedure TGlobalProperties.Set_ShowToolTips(Value: WordBool);
begin
  DefaultInterface.ShowToolTips := Value;
end;

function TGlobalProperties.Get_ShowWelcome: WordBool;
begin
  Result := DefaultInterface.ShowWelcome;
end;

procedure TGlobalProperties.Set_ShowWelcome(Value: WordBool);
begin
  DefaultInterface.ShowWelcome := Value;
end;

function TGlobalProperties.Get_LoadLastFile: WordBool;
begin
  Result := DefaultInterface.LoadLastFile;
end;

procedure TGlobalProperties.Set_LoadLastFile(Value: WordBool);
begin
  DefaultInterface.LoadLastFile := Value;
end;

function TGlobalProperties.Get_PromptForSummaryInfo: WordBool;
begin
  Result := DefaultInterface.PromptForSummaryInfo;
end;

procedure TGlobalProperties.Set_PromptForSummaryInfo(Value: WordBool);
begin
  DefaultInterface.PromptForSummaryInfo := Value;
end;

function TGlobalProperties.Get_DisplayOLEIndicator: WordBool;
begin
  Result := DefaultInterface.DisplayOLEIndicator;
end;

procedure TGlobalProperties.Set_DisplayOLEIndicator(Value: WordBool);
begin
  DefaultInterface.DisplayOLEIndicator := Value;
end;

function TGlobalProperties.Get_DefaultDateFormat: PjDateFormat;
begin
  Result := DefaultInterface.DefaultDateFormat;
end;

procedure TGlobalProperties.Set_DefaultDateFormat(Value: PjDateFormat);
begin
  DefaultInterface.DefaultDateFormat := Value;
end;

function TGlobalProperties.Get_DayLeadingZero: WordBool;
begin
  Result := DefaultInterface.DayLeadingZero;
end;

procedure TGlobalProperties.Set_DayLeadingZero(Value: WordBool);
begin
  DefaultInterface.DayLeadingZero := Value;
end;

function TGlobalProperties.Get_MonthLeadingZero: WordBool;
begin
  Result := DefaultInterface.MonthLeadingZero;
end;

procedure TGlobalProperties.Set_MonthLeadingZero(Value: WordBool);
begin
  DefaultInterface.MonthLeadingZero := Value;
end;

function TGlobalProperties.Get_TimeLeadingZero: WordBool;
begin
  Result := DefaultInterface.TimeLeadingZero;
end;

procedure TGlobalProperties.Set_TimeLeadingZero(Value: WordBool);
begin
  DefaultInterface.TimeLeadingZero := Value;
end;

function TGlobalProperties.Get_CopyResourceUsageHeader: WordBool;
begin
  Result := DefaultInterface.CopyResourceUsageHeader;
end;

procedure TGlobalProperties.Set_CopyResourceUsageHeader(Value: WordBool);
begin
  DefaultInterface.CopyResourceUsageHeader := Value;
end;

function TGlobalProperties.Get_RecentFilesMaximum: Integer;
begin
  Result := DefaultInterface.RecentFilesMaximum;
end;

procedure TGlobalProperties.Set_RecentFilesMaximum(Value: Integer);
begin
  DefaultInterface.RecentFilesMaximum := Value;
end;

function TGlobalProperties.Get_DisplayRecentFiles: WordBool;
begin
  Result := DefaultInterface.DisplayRecentFiles;
end;

procedure TGlobalProperties.Set_DisplayRecentFiles(Value: WordBool);
begin
  DefaultInterface.DisplayRecentFiles := Value;
end;

function TGlobalProperties.Get_MacroVirusProtection: WordBool;
begin
  Result := DefaultInterface.MacroVirusProtection;
end;

procedure TGlobalProperties.Set_MacroVirusProtection(Value: WordBool);
begin
  DefaultInterface.MacroVirusProtection := Value;
end;

function TGlobalProperties.Get_ShowAssignmentUnitsAs: PjAssignmentUnits;
begin
  Result := DefaultInterface.ShowAssignmentUnitsAs;
end;

procedure TGlobalProperties.Set_ShowAssignmentUnitsAs(Value: PjAssignmentUnits);
begin
  DefaultInterface.ShowAssignmentUnitsAs := Value;
end;

function TGlobalProperties.Get_AutomaticallyFillPhoneticFields: WordBool;
begin
  Result := DefaultInterface.AutomaticallyFillPhoneticFields;
end;

procedure TGlobalProperties.Set_AutomaticallyFillPhoneticFields(Value: WordBool);
begin
  DefaultInterface.AutomaticallyFillPhoneticFields := Value;
end;

function TGlobalProperties.Get_DefaultAutoFilter: WordBool;
begin
  Result := DefaultInterface.DefaultAutoFilter;
end;

procedure TGlobalProperties.Set_DefaultAutoFilter(Value: WordBool);
begin
  DefaultInterface.DefaultAutoFilter := Value;
end;

function TGlobalProperties.Get_ShowEstimatedDuration: WordBool;
begin
  Result := DefaultInterface.ShowEstimatedDuration;
end;

procedure TGlobalProperties.Set_ShowEstimatedDuration(Value: WordBool);
begin
  DefaultInterface.ShowEstimatedDuration := Value;
end;

function TGlobalProperties.Get_NewTasksEstimated: WordBool;
begin
  Result := DefaultInterface.NewTasksEstimated;
end;

procedure TGlobalProperties.Set_NewTasksEstimated(Value: WordBool);
begin
  DefaultInterface.NewTasksEstimated := Value;
end;

function TGlobalProperties.Get_Assistant: Assistant;
begin
  Result := DefaultInterface.Assistant;
end;

procedure TGlobalProperties.Set_Assistant(const Value: Assistant);
begin
  DefaultInterface.Assistant := Value;
end;

function TGlobalProperties.Get_DisplayViewBar: WordBool;
begin
  Result := DefaultInterface.DisplayViewBar;
end;

procedure TGlobalProperties.Set_DisplayViewBar(Value: WordBool);
begin
  DefaultInterface.DisplayViewBar := Value;
end;

function TGlobalProperties.Get_VBE: VBE;
begin
  Result := DefaultInterface.VBE;
end;

procedure TGlobalProperties.Set_VBE(const Value: VBE);
begin
  DefaultInterface.VBE := Value;
end;

function TGlobalProperties.Get_EnableCancelKey: PjEnableCancelKey;
begin
  Result := DefaultInterface.EnableCancelKey;
end;

procedure TGlobalProperties.Set_EnableCancelKey(Value: PjEnableCancelKey);
begin
  DefaultInterface.EnableCancelKey := Value;
end;

function TGlobalProperties.Get_UserControl: WordBool;
begin
  Result := DefaultInterface.UserControl;
end;

procedure TGlobalProperties.Set_UserControl(Value: WordBool);
begin
  DefaultInterface.UserControl := Value;
end;

function TGlobalProperties.Get_UsableWidth: Double;
begin
  Result := DefaultInterface.UsableWidth;
end;

procedure TGlobalProperties.Set_UsableWidth(Value: Double);
begin
  DefaultInterface.UsableWidth := Value;
end;

function TGlobalProperties.Get_UsableHeight: Double;
begin
  Result := DefaultInterface.UsableHeight;
end;

procedure TGlobalProperties.Set_UsableHeight(Value: Double);
begin
  DefaultInterface.UsableHeight := Value;
end;

function  TGlobalProperties.Get_Windows: Windows;
begin
  Result := DefaultInterface.Windows;
end;

function  TGlobalProperties.Get_CommandBars: CommandBars;
begin
  Result := DefaultInterface.CommandBars;
end;

function  TGlobalProperties.Get_AnswerWizard: AnswerWizard;
begin
  Result := DefaultInterface.AnswerWizard;
end;

function  TGlobalProperties.Get_Projects: Projects;
begin
  Result := DefaultInterface.Projects;
end;

function  TGlobalProperties.Get_OperatingSystem: WideString;
begin
  Result := DefaultInterface.OperatingSystem;
end;

function  TGlobalProperties.Get_FileFormatID(const Name: WideString; UserID: OleVariant;
                                             DatabasePassWord: OleVariant): WideString;
begin
  Result := DefaultInterface.FileFormatID[Name, UserID, DatabasePassWord];
end;

function  TGlobalProperties.Get_FileBuildID(const Name: WideString; UserID: OleVariant;
                                            DatabasePassWord: OleVariant): WideString;
begin
  Result := DefaultInterface.FileBuildID[Name, UserID, DatabasePassWord];
end;

function  TGlobalProperties.Get_COMAddIns: COMAddIns;
begin
  Result := DefaultInterface.COMAddIns;
end;

{$ENDIF}

end.

