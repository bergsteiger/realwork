USES
 axiom:RemindersLine
 axiom:Tests
 axiom:SubDescriptor
 axiom:TextForm
 axiom:TefTreeAttributeSelect
 
 HLTCLike.script
 WordsTranslation.script
 @\SysUtils.script
 @\Mouse.script
 @\Controls.script
 Editor.script
 Controls.script
 Forms.script
 F1ControlsDefinition.script
 EVDSchema.script
 DocumentNumbers.script
 Reminders.script
 DocumentProcessing.script
 DocumentList.script
 Check_form.script
;

PROCEDURE "Ищем кнопку Прикрепить навигатор на форме" IN aForm
 OBJECT VAR "Кнопка придочивания"
 "Найти контрол {('HIDELEFT')} по имени на форме {(aForm)}" =: "Кнопка придочивания"
 Если ( "Кнопка придочивания" "Объект не существует?" ) то
  ( 'Кнопки придочивания (HIDELEFT) нет!' . )
 иначе
  ( 'Кнопка придочивания (HIDELEFT) есть.' . )
; // "Ищем кнопку Прикрепить навигатор на форме"

PROCEDURE "Открыть вкладку Редакции, сделать ее плавающей и сравнить с эталоном, есть ли на форме кнопка Прикрепить навигатор"
 "Список редакций"
 "Дождаться переключения вкладок"
 "Сделать вкладку Список редакций плавающей"
 OBJECT VAR "Форма вкладки"
 "Контрол в фокусе" 2 раза "Получить родительскую форму" =: "Форма вкладки"
 'Вкладка Список редакций в документе:' .
 "Ищем кнопку Прикрепить навигатор на форме {("Форма вкладки")}"
; //  "Открыть вкладку Редакции, сделать ее плавающей и сравнить с эталоном, есть ли на форме кнопка Прикрепить навигатор"

PROCEDURE "Открыть модальное окно Список редакций из статусной строки и сравнить с эталоном, есть ли на форме кнопка Прикрепить навигатор"
 PROCEDURE Действия
   OBJECT VAR "Форма модального окна"
   "Контрол в фокусе" "Получить родительскую форму" =: "Форма модального окна"
   "Ищем кнопку Прикрепить навигатор на форме {("Форма модального окна")}"
  ; // Действия

 'Модальное окно Редакции (из СР):' .
 "Вызвать Список редакций из статусной строки и сделать {(@ Действия )}" 
; // "Открыть модальное окно Список редакций из статусной строки и сравнить с эталоном, есть ли на форме кнопка Прикрепить навигатор"

PROCEDURE "Сравнить с эталоном все доступные фильтры"
 "Сравнить все элементы текущего дерева с эталоном" 
; 

USES
 @\Windows.script
;

PROCEDURE "Свернуть, затем развернуть главное окно"
 OBJECT VAR Главное_окно
 "Главное окно" =: Главное_окно
 "Свернуть окно {(Главное_окно)}"
 "Развернуть окно {(Главное_окно)}"
; // "Свернуть, затем развернуть главное окно"

PROCEDURE "Проверить, что в главном окне нет скроллера (если разрешение основного монитора 1440 на 900, то обработать исключение)"
TRY
 Если ( "Разрешение основного монитора" РАВНО ( [ 1440 900 ] ) ) то  
  ( 'На тверских машинах:'.  
   "Выполнить подавив исключение" "Проверить, что в главном окне нет скроллера" )
  иначе
   ( "Проверить, что в главном окне нет скроллера" )
FINALLY
 ППР
 ОМ
END
; // "Проверить, что в главном окне нет скроллера (если разрешение основного монитора 1440 на 900, то обработать исключение)"

WordAlias "##Отделить текст в эталоне"  "Отделить текст в эталоне"

PROCEDURE "Кликнуть на красной медали с восклицательным знаком"
 "Красная медаль с восклицательным знаком" byname:control:push pop:Reminder:Click
 OnTest
; // "Кликнуть на красной медали с восклицательным знаком"

WORDWORKER "Медали ОМ опустить вниз до упора, так чтобы область баллона выходила за границы окна оболочки, и выполнить"
 
 INTEGER VAR l_height
 "Главное окно" pop:Control:Height =: l_height
 0 l_height "Синяя медаль с конвертом" byname:control:push pop:Reminder:Move
 TRY 
  ( WordToWork DO )
 FINALLY
  l_height -1 * =: l_height
  0 l_height "Синяя медаль с конвертом" byname:control:push pop:Reminder:Move
 END
; // "Медали ОМ опустить вниз до упора, так чтобы область баллона выходила за границы окна оболочки, и выполнить"

USES
 @\CommonSystem.script
;

PROCEDURE "Сравнить с эталоном иерархию вложенности формы БП и его высоту"
 OBJECT VAR "Форма БП"
 "Контрол в фокусе" "Получить родительскую форму" =: "Форма БП"
 "Форма БП" "Объект существует?" ?ASSURE 'Не удалось найти форму БП'
 "Форма БП" "Напечатать иерархию вложенности контролов"
 "Померить высоту {("Форма БП")}" .
; // "Сравнить с эталоном иерархию вложенности формы БП и его высоту"

USES
 MainBasic.script
;

PROCEDURE "Удалить все документы в списке"
 "Перевести фокус в список"
 "Выделить всё"
 "Ответить один раз Да для {(@ "Нажать Del")}"
 "Дать системе перерисоваться"
; // "Удалить все документы в списке"

PROCEDURE "Кликнуть по встроенному скроллеру во вкладке Синхронный просмотр"
 "Открыть вкладку синхронного просмотра текста без сравнения с эталоном"
 "Клик по встроенному скроллеру редактора в фокусе"
; // "Кликнуть по встроенному скроллеру во вкладке Синхронный просмотр"

PROCEDURE "Выбрать термин 'Аббревиатура и термины биржи за рубежом и в России'"
 "Перевести фокус в дерево терминов"
 "Найти атрибут {('Аббревиатура и термины биржи за рубежом и в России')} в дереве {(контрол::WordsTree)}"
 "Перевести фокус в текст"
;

PROCEDURE "Вставить текст из буфера и нажать Ctrl+Z"
 "Нажать {('Ctrl+V')}"
 TRY
  Ctrl-Z
 FINALLY
  "Контекстной операцией удаляем комментарий"
  "Проверяем отсутствие комментария в текущем редакторе"
 END
; // "Вставить текст из буфера и нажать Ctrl+Z"

PROCEDURE "Сравнить с эталоном баллон синей медали, сообщающей, что документ изменился и проверить через секунду, что он не пропал"
 "Построить список изменившихся документов на контроле"
 "Дать системе перерисоваться"
 "Нажать на синюю медаль, сообщающую, что документ изменился и проверить наличие баллона"
 "Секундная пауза"
 "Проверяем, что баллон у синей медали, сообщающей, что документ изменился видим"
; // "Сравнить с эталоном баллон синей медали, сообщающей, что документ изменился и проверить через секунду, что он не пропал"

PROCEDURE "Перейти по ссылке 'Новостях онлайн' в консультации"
 12 раз "Перейти к следующей ссылке"
 "Перейти по текущей ссылке"
;

PROCEDURE "Возвратиться назад по истории"
 TRY
  OnTest
  "Назад по истории"
 FINALLY 
  ОМ
  // - чтобы уж огрести ASSURE (not Tk2OperationContainer.CheckWasExceptionInFreeInOwner);
 END 
; // "Возвратиться назад по истории"

WORDWORKER "Открыть новое окно Гаранта и выполнить в нём"

 "Выполнить {(@ ( WordToWork DO ) )} с новым окном Гаранта и переключиться на предыдущее окно"
;

PROCEDURE "Кликнуть по красной медали, сообщающей, что онлайн-проверка документов отключена"
 "Дождаться переключения вкладок"
 "Красная медаль, сообщающая, что онлайн-проверка документов отключена" "Найти контрол по имени в стеке" "Кликнуть"
 "Установить фокус в баллон красной медали, сообщающую, что онлайн-проверка документов отключена"
;

PROCEDURE "Закрыть баллон красной медали, сообщающей, что онлайн-проверка документов отключена"
 OBJECT VAR "Форма баллона"
 "Контрол в фокусе" 2 раза ( "Получить родительскую форму" ) =: "Форма баллона"
 OBJECT VAR "Крестик баллона"
 'CloseButton' "Форма баллона" "Найти VG-контрол по имени" =: "Крестик баллона"
 "Крестик баллона" "Кликаем контрол , принадлежащий VG-сцене"
;

PROCEDURE "Переключиться на первое окно, остальные закрыть"
 "Дождаться переключения вкладок"
 "Закрыть все окна кроме текущего"
;

PROCEDURE "Сравнить с эталоном видимость медали remOnlineDead"
 Если ( "Красная медаль, сообщающая, что онлайн-проверка документов отключена" "Найти контрол по имени в стеке" "Узнать, виден ли контрол" ) то
  ( 'Медаль remOnlineDead есть!' . )
 иначе
  ( 'Медали remOnlineDead нет!' . )
;

PROCEDURE "Сравнить с эталоном видимость и активность пункта 'Анализ списка' в области вкладок"
 OBJECT VAR "Закладка"
 INTEGER VAR Ind
 'Анализ списка' "Найти область вкладок" "Найти вкладку по имени" =: Ind
 Ind "Найти область вкладок" "Найти вкладку по индексу" =: "Закладка"
 "Закладка" "Объект существует?" ?ASSURE 'Не нашли закладку Анализ списка'
 'Visible: ' "Узнать численную переменную {('Visible')} объекта {("Закладка")}" 0 ?!= ToPrintable Cat .
 'Enabled: ' "Узнать численную переменную {('Enabled')} объекта {("Закладка")}" 0 ?!= ToPrintable Cat .
; // "Сравнить с эталоном видимость и активность пункта 'Анализ списка' в области вкладок"

WORDWORKER "Сделать левый навигатор автораспахивающимся и выполнить"
 PROCEDURE Сохраняем_размеры_навигатора
  "Открываем НК"
  150 "Левый навигатор" "Установить ширину"
  "Перевести фокус в оглавление"
  "Сделать оглавление неплавающим"
  "Сделать левый навигатор автораспахивающимся"
  ( WordToWork DO ) 
 ;

 TRY
  "Запомнить ширину левого навигатора и выполнить {(@ Сохраняем_размеры_навигатора )}"
 FINALLY
  "Перевести фокус в оглавление"
  "Сделать левый навигатор НЕавтораспахивающимся"
 END
; // "Сделать левый навигатор автораспахивающимся и выполнить"

PROCEDURE "Открыть пункт командного меню 'Файл', провести мышью вниз чуть правее левой границы окна и сранить с эталоном ширину Левого навигатора"
 "Установить курсор мыши по координатам {(10 -10)} относительно контрола {("Текущая активная вкладка")}"
 THREAD ( 26000 SLEEP "Клик левой кнопкой мыши" )
 // Почему так много: [$570524156]
 THREAD ( 700 SLEEP "Провести мышью вниз на {(360)} пикселей" 
  "Левый навигатор" "Померить ширину" .  )
 "Зажать левую кнопку мыши"
; // "Открыть пункт командного меню 'Файл', провести мышью вниз чуть правее левой границы окна и сранить с эталоном ширину Левого навигатора"

WORDWORKER "Установить документ 1055340 на контроль. Переключиться на ТБ27 и выполнить"

 PROCEDURE Действия
  ОМ
  "Выполнить {(@  ( WordToWork DO )  )} с переключённой базой"
 ;

 TRY
  "Выполнить {(@ Действия )} с документом {(1055340)} установленным на контроль"
 FINALLY
  "Закрыть синюю медаль документов на контроле"
 END
; // "Установить документ 1055340 на контроль. Переключиться на ТБ27 и выполнить"

PROCEDURE "Открыть вкладку 'Документы на контроле' и построить 'Список изменившихся документов на контроле'"
 "Выполнить {(@ "Список изменившихся документов на контроле" )} с документами на контроле"
; // "Открыть вкладку 'Документы на контроле' и построить 'Список изменившихся документов на контроле'"

PROCEDURE "Перейти по мультиссылке ('мультиссылка на все документы, входящие в 213 сегмент...'). Сравнить с эталоном текст ссылки, по которой перешли"
 9 раз ( "Перейти к следующей ссылке" )
 "Сравнить абзац текущего редактора с эталоном"
 "Перейти по текущей ссылке"
; 

PROCEDURE "Нажать на зелёную медаль МВ и сравнить с эталоном текст баллона"
 "Перевести фокус в документ"
 "Нажать на зелёную медаль МВ и проверить наличие баллона"
; // "Нажать на зелёную медаль МВ и сравнить с эталоном текст баллона"

PROCEDURE "Закрыть второе окно и переключиться на первое"
 VAR l_Main 0 >>> l_Main
 "Сохранить активное окно" >>> l_Main 
 l_Main "Закрыть сохраненное окно"
;

PROCEDURE "Перейти по ссылке 'Выбрать другие редакции' и вызвать контекстное меню на любой редакции"
 TRY
  : Действия
   "Установить курсор мыши по координатам {( 10 50 )} относительно контрола {("Контрол в фокусе")}"
   THREAD ( 800 SLEEP 
   "Установить курсор мыши по координатам {( 40 145 )} относительно контрола {("Контрол в фокусе")}"
   "Клик левой кнопкой мыши")
   "Клик правой кнопкой мыши"
  ; // Действия

  "Вызвать Список редакций из статусной строки и сделать {(@ Действия)}"
 FINALLY
  "Закрыть второе окно и переключиться на первое"
  "Дать системе перерисоваться" 
 END
; // "Перейти по ссылке 'Выбрать другие редакции' и вызвать контекстное меню на любой редакции"

PROCEDURE "##Вернуться к основному окну без индекса"
 2 раза ( "Дождаться переключения вкладок" )
 "Открыть новое окно гаранта" 
 2 раза ( "Дождаться переключения вкладок" )
 "Закрыть все окна кроме текущего"
;

WORDWORKER "Запомнить первое главное окно Гаранта и закрыть его, выполнив"
 VAR "Первое главное окно" 
 0 >>> "Первое главное окно"
 "Сохранить активное окно" >>> "Первое главное окно" 
 "Первое главное окно" !=0 ?ASSURE 'Не удалось запомнить активное окно' 
 TRY
  ( WordToWork DO )
 FINALLY
  "Первое главное окно" "Закрыть сохраненное окно" 
  "##Вернуться к основному окну без индекса"
 END
; // "Запомнить первое главное окно Гаранта и закрыть его, выполнив"

PROCEDURE "Кликнуть на синей медали с восклицательным знаком"
 "Перевести фокус в текст"
 "Синяя медаль, сообщающая, что документ изменился" "Найти контрол по имени в стеке" "Кликнуть"
;

PROCEDURE "Выделить в Главе 1 статьи с 1-й по 11-ю при помощи Shift-а"
 "Сворачиваем дерево оглавления"
 3 раза "Спускаемся в дереве на уровень вниз"
 "При помощи Shift выделяем {(11)} элементов"
; // "Выделить в Главе 1 статьи с 1-й по 11-ю при помощи Shift-а"

PROCEDURE "В контекстном меню выбираем операцию 'Предварительный просмотр печати фрагмента'"
 TRY
  "Предварительный просмотр печати фрагмента пунктов оглавления"
 FINALLY
  "Открыть НК"
  "Сворачиваем дерево оглавления"
 END
; // "В контекстном меню выбираем операцию 'Предварительный просмотр печати фрагмента'"

/* PROCEDURE "В настройке конфигурации выбираем: Документ\Первая вкладка\Ссылки из документа\Международные договоры"
 @ "Настройка конфигурации" MODAL ( 
  "Путь до контрола: {(5)} раз вниз, {(10)} раз Tab"
  
  Если ( "Контрол в фокусе" ЯВЛЯЕТСЯ class::TvtComboBoxQS ) то
   ( "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('Ссылки из документа')}" )
  иначе
   ( "Контрол в фокусе" . )
   
  "Нажать {('Tab')}"
  
  Если ( "Контрол в фокусе" ЯВЛЯЕТСЯ class::TvtComboBoxQS ) то
   ( "Сразу выбрать в текущем комбобоксе значение {('Международные договоры')}" )
  иначе
   ( "Контрол в фокусе" . )
  "Кликаем Ок в Настройке конфигурации" 
 )
; 25.02.2015 Сделан универсальный выбор */

OBJECT FUNCTION "Пустая вкладка"
 "Найти контрол {("Информация о пустом списке")} на форме {("Главное окно")}" =: Result
; // "Пустая вкладка"

PROCEDURE "Сравнить контекстное меню вкладки 'Международные договоры' с эталоном"
 'Контекстное меню пустой вкладки СКР:' .
 "Сравнить контекстное меню контрола {("Пустая вкладка")} с эталоном расширенно"
;

PROCEDURE "Сравнить текст информации из вкладки 'Международные договоры' с эталоном"
 'Копируем текст информации из пустой вкладки в буфер:' .
 "Пустая вкладка" "Установить фокус"
 "Выделить всё"
 "Копировать"
 "Записать содержимое буфера в эталон"
; // "Сравнить текст информации из вкладки 'Международные договоры' с эталоном"

PROCEDURE "Переместить медали главного окна в правый нижний угол"
 INTEGER VAR f_height
 INTEGER VAR f_width
 "Высота главной формы" >>> f_height
 "Ширина главной формы" >>> f_width 
  f_width f_height "Синяя медаль с конвертом" "Найти контрол по имени в стеке" "Переместить медаль"
; // "Переместить медали главного окна в правый нижний угол"

PROCEDURE "Переместить медали главного окна в левую нижнюю часть монитора"
 INTEGER VAR f_height
 ( "Высота главной формы" 4 / ) 3 * =: f_height
 3 f_height "Синяя медаль с конвертом" "Найти контрол по имени в стеке" "Переместить медаль"
;

PROCEDURE "Уменьшить размер окна до минимального и сравнить с эталоном, полностью ли видны медали по вертикали и горизонтали"
 INTEGER VAR left_RL
 INTEGER VAR top_RL
 INTEGER VAR f_height
 INTEGER VAR f_width
 OBJECT VAR RL
 RL := ( контрол::RemindersLine "Текущая активная вкладка" pop:Component:FindComponent )
 TRY
  "Главное окно" "Уменьшить окно"
  0 "Главное окно" "Установить высоту"
  0 "Главное окно" "Установить ширину"
  OnTest
  "Дождаться переключения вкладок"
 RL pop:RemindersLine:Left  =: left_RL
 RL pop:RemindersLine:Top =: top_RL
  "Высота главной формы" >>> f_height
  "Ширина главной формы" >>> f_width 
  f_width left_RL - БОЛЬШЕ 48 .
  f_height top_RL - БОЛЬШЕ 48 .
  // - http://mdp.garant.ru/pages/viewpage.action?pageId=344136215&focusedCommentId=377750294#comment-377750294
  3 раза "Дождаться переключения вкладок"
 FINALLY
  "Главное окно" "Развернуть окно"
  OnTest
  "Высота главной формы" >>> f_height
  "Ширина главной формы" >>> f_width 
  f_width -1 * =: f_width
  f_height -1 * =: f_height
  f_width f_height "Синяя медаль с конвертом" "Найти контрол по имени в стеке" "Переместить медаль"
 END
; // "Уменьшить размер окна до минимального и сравнить с эталоном, полностью ли видны медали по вертикали и горизонтали"

WORDWORKER  "##Импортировать консультацию (следует сделать, если в ОМ нет никаких медалей) и выполнить"
 "Добавить синюю медаль консультаций и сделать {(@ ( WordToWork DO ) )}"
;

WordAlias "Добавить синюю медаль консультаций и выполнить" "##Импортировать консультацию (следует сделать, если в ОМ нет никаких медалей) и выполнить"

PROCEDURE "Вызвать строку БП и сравнить с эталоном введенный контекст"
 БП
 "Выделить всё"
 "Сравнить выделенный текст текущего редактора с эталоном"
; // "Вызвать строку БП и сравнить с эталоном введенный контекст"

PROCEDURE "Построить список по ветке Навигатора 'Гражданское законодательство, приватизация\Граждане (физические лица)'"
 PROCEDURE Действия 
  "Дать системе перерисоваться"
  "Установить фокус в меню во вкладке"
  "Развернуть текущее дерево"
  "Найти ссылку {('Граждане (физические лица)')} в дереве {(контрол::NavigatorTree)} и перейти по ней"
 ; // Действия 
 "Выполнить {(@ Действия )} с меню во вкладке и закрыть её"
; // "Построить список по ветке Навигатора 'Гражданское законодательство, приватизация\Граждане (физические лица)'"

PROCEDURE "Кликнуть мышкой по ссылке 'информация об изменениях' в НК"
 "Открываем НК"
 VAR Editor
 VAR x
 VAR y
 "Контрол в фокусе" >>> Editor
 Editor pop:editor:ParaMiddleCoordsToScreen >>> y >>> x
 y 80 + >>> y
 x y "Установить курсор мыши по координатам"
 Если ( "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crHandPoint' ! ) то
  ( 'Не попали на ссылку Информация об изменениях! Тест прератил работу!' . 
   HALT
  )
 "Дождаться переключения вкладок"
 "Клик левой кнопкой мыши" 
;

PROCEDURE "Кликнуть мышкой по ссылке 'Подробнее см. в справке к документу' в НК"
 VAR Editor
 VAR x
 VAR y
 "Открываем НК"
 "Контрол в фокусе" >>> Editor
 Editor pop:editor:ParaMiddleCoordsToScreen >>> y >>> x
 y 260 + >>> y
 x y "Установить курсор мыши по координатам"
 Если ( ( "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crHandPoint' )
 И ( 5 раз ( 50 SLEEP "Дать системе перерисоваться" ) "Текущий хинт" РАВНО 'Открыть справку к документу' ) ! ) то
  ( 'Не попали на ссылку Подробнее см. в справке к документу!' . )
 "Дождаться переключения вкладок"
 "Клик левой кнопкой мыши" 
 "Дождаться переключения вкладок"
;

PROCEDURE "Проверка, закрылся ли баллон 'Информация об изменениях' "
 "Открываем НК"
 "В документе не должно быть комментариев"
 6 раза ( "Перейти на параграф вниз" )
 "Переместиться в начало строки"
 "Выделить слово справа"
 Если ( "Контрол в фокусе" "Выделенный текст редактора" "Заменить непечатаемые символы" РАВНО 'Часть ' ! ) то
  ( 'Вероятно, не закрылся баллон Информация об изменениях!' . )
; // "Проверка, закрылся ли баллон 'Информация об изменениях' "

WORDWORKER "Переключиться на основную (преемственную) конфигурацию и выполнить" 
 2000 SLEEP
 "Переключиться на конфигурацию {('Основная (преемственная)')}"
 TRY
  ( WordToWork DO ) 
 FINALLY
  "Переключиться на конфигурацию {('Основная')}"
 END
;

PROCEDURE "Открыть ППС и Толковый словарь, построить список всех документов"
 ППС
 "Толковый словарь"
 "Список всех документов" 
;

PROCEDURE "Место вставки комментария для теста K358354848"
 "Установить фокус в документ"
 "В начало документа"
 20 раз ( "Перейти на параграф вниз" )
;

PROCEDURE "Установить комментарий в статью 1 главы 1"
 "В документе не должно быть комментариев"
 "Место вставки комментария для теста K358354848"
 "Ставим комментарий"
;

PROCEDURE "Убедиться, что на вкладке 'Структура документа' есть раздел 'Мои комментарии'"
 TRY
  "Перевести фокус в комментарии"
 FINALLY
  "Место вставки комментария для теста K358354848"
  1 раз "Перейти на параграф вниз"
  "Удалить текущий комментарий и проверить что он удалился"
 END
; // "Убедиться, что на вкладке 'Структура документа' есть раздел 'Мои комментарии'"

PROCEDURE "Открыть синхронный просмотр текста для документа 2002"
 "Найти документ {('ДОКУМЕНТ 2002 с 10 командами NAME по 73 символа каждая. Это команда 1. ыыыыыыы1 Это команда 2. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы ы ыыыыыыы ыыыыыы2 Это команда 3. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы ы ыыыыыыы ыыыыыы3 Это команда 4. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы ы ыыыыыыы ыыыыыы4 Это команда 5. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы ы ыыыыыыы ыыыыыы5 Это команда 6. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы ы ыыыыыыы ыыыыыы6 Это команда 7. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы ы ыыыыыыы ыыыыыы7 Это команда 8. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы ы ыыыыыыы ыыыыыы8 Это команда 9. Тут специально стоит открывающая скобка, а закрывающей нет9 Это команда 10. Для проверки fixnames (ыыыыыыыыыыыыыыыы ы ыыыыыыы ыыыыыы10')} в списке"
 "Дождаться переключения вкладок"
 "Открыть вкладку синхронного просмотра текста без сравнения с эталоном"
;

PROCEDURE "Проверяем, что статусная строка не моргает (сравнить содержимое статусной строки с эталоном 10 раз)"
 OBJECT VAR "Панель статусбара"
 "Элемент {(0)} статусбара окна {( "Главное окно" )}" =: "Панель статусбара"
 10 раз (  "Сравнить заголовок контрола {("Панель статусбара")} с эталоном" )
;

PROCEDURE "Убедиться, что у ОМ нет вертикального скроллера"
 "Проверить, что у контрола {("Найти основное меню")} нет вертикального скроллера"
; 

WORDWORKER "Выполнить со свернутой панелью оглавления"
 "Перевести фокус в оглавление"
 "Сделать оглавление неплавающим"  
 "Сделать левый навигатор автораспахивающимся"
 TRY 
  ( WordToWork DO )
 FINALLY
  "Сделать левый навигатор НЕавтораспахивающимся"
 END
; // "Выполнить со свернутой панелью оглавления"

PROCEDURE "Проверить отсутствие крестика на вкладке Оглавления и сравнить с эталоном иерархию контролов дерева Оглавления"
 "Перевести фокус в оглавление"
 "Проверяем отсутствие крестика непосредственно в текущей форме"
;

PROCEDURE "В поле 'Тип' ввести контекст 'Акт' с логическим условием И"
 "в поле 'Тип' ввести {('Акт')} с операцией {(1)}"
;

PROCEDURE "В поле 'Тип' ввести контекст 'Бухгалтерские проводки' с логическим условием И"
 "в поле 'Тип' ввести {('Бухгалтерские проводки')} с операцией {(1)}"
;

PROCEDURE "Нажать Искать и в появившемся диалоге кликнуть кнопку-ссылку 'Обратиться к специалистам Правовой поддержки онлайн'"
 1 wait:Choice
 TRY
  "Нажать Искать"
 FINALLY
  waited:? ?ASSURE 'Не дождались диалога!'
 END
; 

OBJECT FUNCTION "Комбобокс для выбора страны в списке фармацевтических фирм"
 OBJECT VAR "Список фирм"
 "Контрол в фокусе" "Получить родительскую форму" =: "Список фирм"
 "Найти контрол {(контрол::bt_enMedicFirmList_opCountryFilter)} по имени на форме {("Список фирм")}" =: Result
 Result "Объект существует?" ?ASSURE 'Не нашли комбобокс' 
;

PROCEDURE "Выбрать фильтр Австралия"
 OBJECT VAR "Комбобокс"
 "Комбобокс для выбора страны в списке фармацевтических фирм" =: "Комбобокс"
 "Установить фокус в {("Комбобокс")}"
 "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('Австралия')}"
 "Отделить текст в эталоне"
;

WORDWORKER "Открыть текущий список в новом окне и выполнить"
 "Открыть текущий список в новом окне"
 TRY
  ( WordToWork DO )
 FINALLY
  "Закрыть второе окно и переключиться на первое"
 END
;

PROCEDURE "Проверить отсутствие крестика на форме Оглавления"
 "Проверить, что удалось перевести фокус в оглавление"
 "Проверяем отсутствие крестика"
;

WORDWORKER "Установить главному окну размеры , навигатору ширину в и выполнить" INTEGER IN formW INTEGER IN formH INTEGER IN navigatorW
 PROCEDURE Действия
  "Выставить форме размеры {( formW formH )} ширину навигатора в {( navigatorW )} и сделать {(@ ( WordToWork DO ) )}"
 ; 

 "Сделать {(@ Действия )} с изменением состояния и размеров окна {("Главное окно")}"
;

PROCEDURE "Включить 'Перенос по словам' на вкладке Структура документа"
 "Перевести фокус в оглавление"
 "Перенос по словам" 
 "Дать системе перерисоваться"
; 

PROCEDURE "Изменяем ширину вкладки Структура документа: увеличиваем до 110, затем уменьшаем до 85 пикселей"
 TRY
  110 "Левый навигатор" "Установить ширину"
  85 "Левый навигатор" "Установить ширину"
 FINALLY
  "Перевести фокус в оглавление"
  "Перенос по словам" 
 END
;

PROCEDURE "Изменяем настройки конфигурации, чтобы появилась красная звездочка (ставим галочку Документ-Вкладки-Редакции)"
 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола: {(5)} раз вниз, {(14)} раз Tab"
  "Поставить галочку в чекбоксе" 
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "##Восстановить настройки для всех конфигураций на вкладке Конфигурации (чтобы пропали все красные звездочки)"
 PROCEDURE Действия
  "Стрелка вниз"
  "Ответить один раз Да для {(@ "Восстановить все настройки на вкладке Конфигурации" )}"
 ;
"Выполнить {(@ Действия )} с вкладкой Список конфигураций"
;

PROCEDURE "Переключиться на расширенную конфигурацию, ничего не делать и вернуться на Основную"
 "Сделать {(@ NOP )} в расширенной конфигурации"
;

PROCEDURE "Открыть вкладку 'Конфигурации' и проверить, что у расширенной конфигурации нет красной звездочки"
 PROCEDURE Действия
  "Убедиться, что расширенная конфигурация не имеет признака измененности"
 ;
 "Выполнить {(@ Действия )} с вкладкой Список конфигураций"
;

USES
 Filters.script
;

PROCEDURE "Сравнить с эталоном иерархию дерева фильтров (убедиться, что навигатор - справа)"
 "Установить фокус во вкладку Фильтры"
 "Проверить иерархию вложенности текущего контрола"
;

PROCEDURE "Удалить текущий документ списка"
 OnTest
 "Ответить один раз Да для {(@ "Нажать Del")}"
;

WORDWORKER "Выделить весь текст, начать сохранять его в формате CF_RTF и выполнить"
 TRY
  "Выделить всё"
   ( WordToWork DO ) 
  "Сохранить выделенный текст в формате {(CF_RTF)}"
 FINALLY 
  3000 SLEEP
  ТБ24
 END 
;

PROCEDURE "Во время экспорта переключаем базы"
 THREAD ( 3000 SLEEP ТБ27 ) 
;

WORDWORKER "Поставить документ 8901004 на контроль, перейти в ОМ, переключить базы и выполнить"

  PROCEDURE Действия
   ОМ
   "Выполнить {(@ ( WordToWork DO ) )} с переключённой базой"
  ;
 TRY
 "Выполнить {(@ Действия)} с документом {(8901004)} установленным на контроль"
 FINALLY
 "Закрыть синюю медаль документов на контроле"
 END
;

PROCEDURE "Открыть вкладку 'Документы на контроле' и зайти в первый документ"
 "Открыть вкладку Документы на контроле"
 "Нажать Enter"
;

PROCEDURE "Сравнить с эталоном, активна ли кнопка 'Поставить на контроль' на тулбаре"
 OBJECT VAR "Текущий контрол"
 "Найти контрол {(контрол::bt_enDocument_opAddToControl)} на форме {("Главное окно")}" >>> "Текущий контрол"
 "Проверить, активен ли контрол {( "Текущий контрол" )}?"
;

USES
 @\EditorCommon.script
;

PROCEDURE "В поле 'Дата принятия: С' вводим дату 01.01.2001"
 "Убедиться, что фокус в редакторе"
 "Перевести фокус в поле 'Дата принятия: С' в ППР"
 "Ввести строку {('01.01.2001')}"
;

PROCEDURE "Удалить содержимое поля 'Дата принятия: С' и сравнить с эталоном, в каком поле КЗ оказался фокус"
 TRY
  "Удалить"
 FINALLY
  "Контрол в фокусе" "Узнать в каком поле КЗ стоит фокус" .
 END
;

WORDWORKER "Открыть вкладку 'Меню' и выполнить"
 "Выполнить {(@ ( WordToWork DO ) )} с меню во вкладке и закрыть её"
;

PROCEDURE "Перейти: Правовой навигатор => Основы государственно-правового устройства"
 "Развернуть текущее дерево"
 "Найти ссылку {('Основы государственно-правового устройства')} в дереве {(контрол::NavigatorTree)} и перейти по ней"
;

PROCEDURE "Перейти: Правовой навигатор => Основы государственно-правового устройства => Основы конституционного строя"
 "Установить фокус в меню во вкладке"
 "Найти ссылку {('Основы конституционного строя')} в дереве {(контрол::NavigatorTree)} и перейти по ней"
;

PROCEDURE "Открыть вкладку 'Меню' и сравнить с эталоном текст ссылки, на которой стоит фокус"
 "Меню во вкладке" 
 "Получить имя текущего элемента дерева {(контрол::NavigatorTree)}"
;

PROCEDURE "Изменить в редакторе стилей цвет шрифта 'Напишите нам': Собственный - Gradient Active Caption"
 PROCEDURE Изменяем_параметры_редактора_стилей
  "Установить фокус в Дерево стилей"
  "Найти ссылку {('Напишите нам')} в дереве {(контрол::StyleTreeView)} и перейти по ней"
  "Установить фокус на кнопку Типа наследования группы Цвет"
  2 раза  (  "Нажать {('Enter')}" )
  // Устанавливаем тип наследования - Собственный
  "Установить фокус в комбобокс выбора цвета"
  "Выбрать следующее значение в комбобоксе {("Контрол в фокусе")}"
  // Ставим не стандартный цвет (Gradient Active Caption)
  "Нажать Enter"
 ; // Изменяем_параметры_редактора_стилей
  
 "Выполнить с редактором стилей" ( Изменяем_параметры_редактора_стилей )
 "Дать системе перерисоваться"
;

PROCEDURE "Сравнить с эталоном цвет шрифта в плашке ААК"
 "Найти плашку в ААК" "Шрифт контрола" "Цвет шрифта" .
;

PROCEDURE "В БП ищем контекст 'закон' по типу 'Судебная практика'"
 "Очистить журнал работы"
 "В БП ищем контекст {('закон')} по типу {('Судебная практика')}"
;

WORDWORKER "Открыть вкладку 'Журнал работы' и выполнить"
 "Выполнить {(@ ( WordToWork DO ) )} с вкладкой Журнал работы"
;

PROCEDURE "Загрузить из папки 'Базовый поиск' выполненный ранее запрос"
 "Развернуть текущее дерево"
 2 раза "Стрелка вниз"
 "Нажать Enter"
 "Дождаться переключения вкладок"
;

PROCEDURE "Сравнить с эталоном, выбран ли тип информации 'Судебная практика'"
 "Выбран ли тип информации {('Судебная практика')}?"
;

PROCEDURE "Построить новый список (Нажать кнопку 'Найти' в БП) и сравнить с эталоном информацию о списке"
 БП
 "Нажать Искать"
 "Проверить информацию о списке"
;

PROCEDURE "Поставить курсор в самое начало толкования и создать комментарий"
 TRY
  "В начало документа"
  "Ставим комментарий"
 FINALLY
  "Контекстной операцией удаляем комментарий"
 END
;

PROCEDURE "Удалить комментарий через контекстное меню"
 TRY
  "Контекстной операцией удаляем комментарий"
 FINALLY
  Ctrl-Z
  // чистим за собой комментарий
 END
;

WORDWORKER "Сравнить с эталоном список, выполнив перед этим"
 TRY
  ( WordToWork DO )
 FINALLY
  "Сравнить список документов с эталоном"
 END
;

PROCEDURE "Выделить один параграф текста"
 "Выделить {(1)} параграф"
;

PROCEDURE "Нажать Delete и ответить 'Да' в появившемся диалоге"
 "Ответить один раз Да для {(@ "Нажать Del")}"
;

PROCEDURE "Перевести фокус в список терминов"
 TRY
  "Перевести фокус в дерево терминов"
 FINALLY
  "Перевести фокус в документ"
  "Контекстной операцией удаляем комментарий"
 END
;

WORDWORKER "Переключить базу на ТБ27 и выполнить"
 "Выполнить {(@ ( WordToWork DO ) )} с переключённой базой"
;

PROCEDURE "Открыть вкладку 'Меню' и сравнить с эталоном все тексты ссылок первого уровня"
 "Установить фокус в меню во вкладке"
 "Переместиться в начало дерева"
 "Свернуть текущее дерево"
 "Сравнить текущий список с эталоном"
;

PROCEDURE "Ищем контекст 'зачет' и сравнить с эталоном найденный абзац текста. Убедиться, что нашлось только одно вхождение"
 TRY 
  "Ищем контекст {('зачет')} и сравниваем с эталоном найденный абзац"
 FINALLY
  "Найти далее и убедиться, что ничего не нашлось"
 END
;

PROCEDURE "Удалить комментарий у термина, поставленный в начале" IN aDoc 
 "Открываем {(aDoc)}"
 "Стрелка вниз"
 "Контекстной операцией удаляем комментарий"
; // "Удалить комментарий у термина, поставленный в начале"

PROCEDURE "Выделить текст термина и скопировать его в буфер"
 "Выделить всё"
 "Копировать"
;

WORDWORKER "Открыть сохранённую закладку из Моих документов и выполнить"
 TRY
  "Открыть сохраненный объект из Моих документов и выполнить {(@ ( WordToWork DO ) )}"
 FINALLY
  "Удалить сохраненный объект из вкладки 'Мои документы'"
  "Удалить комментарий у термина, поставленный в начале {('3741978')}"
 END
;

PROCEDURE "Выделить весь текст документа и сравнить его с эталоном"
 "Установить фокус в документ"
 "Выделить всё"
 "Сравнить выделенный текст текущего редактора с эталоном"
;

PROCEDURE "Ввести контекст 'положения', провести поиск и убедиться что нашлось 2 вхождения"
 "Ввести {('положения')}"
 2 раза "Найти далее"
 "Найти далее и убедиться, что ничего не нашлось"
;

PROCEDURE "Сравнить контекстное меню дерева фильтров с эталоном"
 "Установить фокус во вкладку Фильтры"
 "Дать системе перерисоваться"
 "Сравнить контекстное меню с эталоном"
;

PROCEDURE "Сравнить контекстное медали отфильтрованного списка с эталоном"
 "Перевести фокус в список"
 "Дать системе перерисоваться"
 "Сравнить контекстное меню медали {("Медаль отфильтрованного списка")} с эталоном"
;

WORDWORKER "Построить список документов с комментариями и выполнить"
 TRY
  "Выполнить {(@  ( WordToWork DO ) )} в списке документов с комментарями"
 FINALLY
  "Удалить комментарий у термина, поставленный в начале {('3741978')}"
  "Удалить комментарий у термина, поставленный в начале {('3710044')}"
 END
;

PROCEDURE "Проверить, что на вкладке 'Структура документа' есть раздел 'Закладки'"
 TRY
  "Перевести фокус в закладки"
 FINALLY
  ОМ
  "Удалить сохраненный объект из вкладки 'Мои документы'"
 END
;

PROCEDURE "В поле 'Дата принятия' ввести три нуля (один в дни, один в месяцы и один в год)"
 "Перевести фокус в поле 'Дата принятия' в ППР"
 3 раза ( "Ввести {('0')}"
 2 раза "Вправо" )
;

PROCEDURE "Нажать 'Искать' и сравнить с эталоном текст появившейся ошибки"
 "Выполнить подавив исключение" "Нажать Искать"
;

PROCEDURE "Найти документ 'документ 2013' в списке и скопировать его в буфер"
 "Перевести фокус в список"
 "Найти документ {('документ 2013')} в списке"
 "Копировать"
;

PROCEDURE "10 раз открыть СР и вернуться в текст документа"
 10 раз ( СР
 "Дать системе перерисоваться"
 "Вернуться в текст документа"
 "Дать системе перерисоваться" )
;

PROCEDURE "Переключиться на вкладку 'Комментарии'"
 "Открываем вторую пользовательскую вкладку"
 "Дать системе перерисоваться"
;

PROCEDURE "Удалить все комментарии из текущего документа"
 "В документе не должно быть комментариев"
;

PROCEDURE "Перейти к началу документа, выделить 3 параграфа и сравнить их с эталоном"
 "В начало документа"
 "Выделить {(3)} параграфа"
 "Сравнить выделенный текст текущего редактора с эталоном"
;

PROCEDURE "Ставим комментарий в: левую половина ААК, 2 параграфа вниз"
 "Перевести фокус в левую половину ААК"
 2 раза "Перейти на параграф вниз"
 "Ставим комментарий"
;

PROCEDURE "Убедиться, что на вкладке 'Структура документа' появилась группа 'Мои комментарии'"
 TRY
  "Проверить, что удалось перевести фокус в оглавление"
 FINALLY
  ОМ
  "Открываем {(57972022)}"
  "Ставим комментарий в: левую половина ААК, 2 параграфа вниз"
  "Контекстной операцией удаляем комментарий"
 END
;

PROCEDURE "Нажать Ctrl+Z"
 Ctrl-Z
 "Дождаться переключения вкладок"
;

PROCEDURE "Нажать Shift+Ctrl+Z"
 Shift-Ctrl-Z
 "Дождаться переключения вкладок"
;

PROCEDURE "Открыть документ 57970089 и переключиться на вкладку 'Справка'"
 "Открываем {(57970089)}"
 "Открываем справку"
 "Дождаться переключения вкладок"
;

PROCEDURE "Перейти по ссылке 'ссылка на 2101.10' в правой части ААК документа"
 "Перевести фокус в текст"
 "Поставить фокус в правую половину ААК"
 "Перейти к следующей ссылке"
 "Перейти по текущей ссылке"
;

PROCEDURE "Применить из главного меню созданный фильтр"
 STRING VAR Path
 'Анализ/Фильтры/' Filter_for_test_K397292242 Cat >>> Path
 "Дождаться переключения вкладок"
 "Вызвать из главного меню {(Path)}"
;

PROCEDURE "Открыть документ с комментарием через 'Мои документы\Мои комментарии\Документы с комментариями пользователя'"
 "Открыть список документов с комментариями"
 "Открыть текущий документ списка"
 "Дать системе перерисоваться"
;

WORDWORKER "Поставить на контроль документ ААК и выполнить" 
 "Поставить на контроль, подавив  Нарушен баланс скобок Wait"
 TRY
  ( WordToWork DO )
 FINALLY
   PROCEDURE Вкладка_документов_на_контроле
    "Удалить документ с вкладки Документы на контроле, подавив  Нарушен баланс скобок Wait"
   ; // Вкладка_документов_на_контроле
  "Выполнить {(@ Вкладка_документов_на_контроле)} с документами на контроле"
  "Закрыть синюю медаль документов на контроле"
 END
;

PROCEDURE "Перестить плашку в левой части ААК-Содержания на пункт 'Бюджетная сфера'"
 "Поставить фокус в левую половину ААК-Содержания"
 "В конец документа"
;

PROCEDURE "Сравнить весь текст левой части ААК-Содержания с эталоном"
 TRY
  "Выделить всё"
  "Сравнить выделенный текст текущего редактора с эталоном"
 FINALLY
  "В начало документа"
 END
;

PROCEDURE "Включить перенос по словам"
 "Перенос по словам" 
 "Дождаться переключения вкладок"
;

PROCEDURE "Сравнить с эталоном высоту девяти верхних нод дерева (высоту текста ссылок на редакции)"
 CONST "Количество редакций" 9
 INTEGER VAR Item
 0 >>> Item
 TRY
  "Количество редакций" раз ( "Измерить высоту ноды {( Item )} дерева {(контрол::RedactionTree:push)}"
  ++! Item )
 FINALLY
  "Перевести фокус в дерево редакций"
  "Перенос по словам"
 END
;

PROCEDURE "Убедиться, что первый документ во вкладке 'Документы на контроле' имеет статус изменён"
 PROCEDURE Вкладка_документов_на_контроле
  "Убедиться, что документ {(0)} на контроле имеет статус изменён"
 ;

 "Выполнить {(@ Вкладка_документов_на_контроле)} с документами на контроле"
;

PROCEDURE "Сравнить с эталоном информацию о списке"
 "Проверить информацию о списке"
;

PROCEDURE "Переключиться на вкладку 'Судебная практика'"
 "Переключиться на вкладку {('Судебная практика')}"
 2 раза ( "Дождаться переключения вкладок" )
;

PROCEDURE "Кликнуть на жёлтую медаль, сообщающую, что к списку применены фильтры и проверить наличие баллона"
 TRY
  "Нажать на жёлтую медаль, сообщающую, что к списку применены фильтры и проверить наличие баллона"
 FINALLY
  "##Действия для полного удаления фильтра"
 END
;

PROCEDURE "Закрыть окно с историей переписки"
 "Нажать {('Esc')}"
; 

PROCEDURE "Добавить пользователя для переписки и закрыть окно чата"
 @ ( "Добавить пользователя для переписки" ) MODAL ( "Нажать Enter" )
 "Отменить отправку сообщений"
;

PROCEDURE "Открыть 'Историю переписки' и сравнить контекстное меню в ней с эталоном"
 TRY
  "Дождаться переключения вкладок"
  "Открыть историю переписки"
  "Сравнить контекстное меню с эталоном"
 FINALLY
  "Закрыть окно с историей переписки"
  "Удалить пользователя"
 END
;

PROCEDURE "Удалить пользователя"
 "Установить фокус в список контактов"
 "Нажать {('Del')}"
;

PROCEDURE "Сравнить контекстное меню вкладки 'Совещание онлайн' с эталоном без добавленных пользователей"
 'Контекстное меню без пользователя:' .
 "Сравнить контекстное меню с эталоном"
;

PROCEDURE "Сравнить контекстное меню вкладки 'Совещание онлайн' с эталоном с добавленным пользователем"
 TRY
  "Установить фокус в список контактов"
  'Контекстное меню с добавленным во вкладку пользователем:' .
  "Сравнить контекстное меню с эталоном"
 FINALLY
  "Удалить пользователя"
 END
;

PROCEDURE "Открыть документ 2221480 и создать закладку на него с именем 'Закладка - 4'"
 "Открываем {(2221480)}"
 "Сохраняем объект в папку Мои документы с именем {('Закладка - 4')}"
;

PROCEDURE "Сохранить запрос с именем 'Запрос - 2 '"
 ППР
 "в поле 'Слова в тексте' ввести {('закон')}"
 "Сохраняем объект в папку Мои документы с именем {('Запрос - 2 ')}"
;

PROCEDURE "Создать новую папку в Моих документах"
 ОМ
 "Мои документы"
 "Создать папку"
 "Нажать Enter"
;

PROCEDURE "Сохранить любой список с именем 'Список - 3'"
 "В БП ищем контекст {('список')}"
 "Сохраняем объект в папку Мои документы с именем {('Список - 3')}"
;

PROCEDURE "Сравнить с эталоном, в каком порядке сохранились объекты во вкладку 'Мои документы'"
 TRY
  ОМ
  "Мои документы"
  "Дождаться переключения вкладок"
  "Развернуть текущее дерево"
  5 раз ( контрол::FoldersTree:push "Текущая нода дерева" "Текст ноды" .
  "Стрелка вниз" )
 FINALLY
  "Переместиться в начало дерева"
  "Стрелка вниз"
  4 раза ( "Ответить один раз Да для {(@ "Нажать Del")}" 
  "Дождаться переключения вкладок" )
  "Закрыть вкладку Мои документы"
 END
;

PROCEDURE "Изменить настройки: Настройки конфигурации/Термины словаря - справа"
 @ "Настройка конфигурации" MODAL ( 
 "Путь до контрола: {(2)} раз вниз, {(7)} раз Tab"
 "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('Справа')}"
 "Кликаем Ок в Настройке конфигурации" )
;

PROCEDURE "Сравнить с эталоном иерархию вложенности списка терминов (текущее положение - слева)"
 "Перевести фокус в дерево терминов"
 "Проверить иерархию вложенности текущего контрола"
;

PROCEDURE "Сравнить с эталоном информацию о списке и ##действия для полного удаления фильтра"
TRY
  "Проверить информацию о списке"
 FINALLY
  "##Действия для полного удаления фильтра"
 END
;

PROCEDURE "Переместить курсор мыши на выделенный текст"
 VAR x
 VAR y
 "Контрол в фокусе" "Координаты курсора относительно левого верхнего угла монитора" >>> y >>> x
 y 40 - >>> y
 x 40 - >>> x
 x y "Установить курсор мыши по координатам" 
;

PROCEDURE "Зажать Ctrl и левую кнопку мыши, переместить курсор в область БП, затем ниже выделенного текста и отпустить кнопки"
  PROCEDURE Зажали_Ctrl
   THREAD ( 500 SLEEP 
     300 200 "Установить курсор мыши по координатам" 
     "Дать системе перерисоваться" )
   THREAD ( 800 SLEEP 
     400 570 "Установить курсор мыши по координатам" 
     "Дать системе перерисоваться" 
     "Отпустить левую кнопку мыши" )
   "Зажать левую кнопку мыши"
  ; // Зажали_Ctrl

 "Выполнить {(@ Зажали_Ctrl )} с зажатой клавишей {('Ctrl')}"
;

WORDWORKER "Открыть 'Информацию об изменениях' к Части первой, перейти по ссылке 'Подробнее см. в справке к документу' и выполнить"
 "Подготовить главное окно к тесту (установить ему размеры ) {(1350 900 )} и выполнить" (
  TRY
   "Кликнуть мышкой по ссылке 'информация об изменениях' в НК"
   "Кликнуть мышкой по ссылке 'Подробнее см. в справке к документу' в НК"
   ( WordToWork DO )
  FINALLY
   "Кликнуть мышкой по ссылке 'информация об изменениях' в НК"
   "Проверка, закрылся ли баллон 'Информация об изменениях' "  
  END
 )
;

PROCEDURE "Перетащить отдоченную вкладку Меню в список терминов ТС"
 "Меню во вкладке" 
 "Сделать вкладку меню плавающей"
 "Дать системе перерисоваться"
 "Установить курсор мыши по координатам {(50 -100)} относительно контрола {("Контрол в фокусе")}" // на заголовок отдоченной
 "Перевести фокус в дерево терминов"
 THREAD ( 4000 SLEEP 
  "Установить курсор мыши по координатам {(15 148)} относительно контрола {("Текущая активная вкладка")}"  // в ЛЕВУЮ часть списка
  "Отпустить левую кнопку мыши" )
 "Зажать левую кнопку мыши"
 "Дать системе перерисоваться"
 4500 SLEEP
 "Дождаться переключения вкладок"
;

WORDWORKER "##Запомнить состояние окна и выполнить"

 TRY 
  "Сделать {(@ ( WordToWork DO ) )} с изменением состояния и размеров окна {("Главное окно")}"
 FINALLY
  ОМ
  "Восстановить настройки"
  "Закрыть вкладку Документы на контроле"
  "Закрыть меню во вкладке после проверки" 
  "Закрыть вкладку ПЗ"
 END
;

PROCEDURE "Открыть Толковый словарь"
 "Главное окно" "Развернуть окно"
 "Толковый словарь"
 "Закрыть форму БП"
;

PROCEDURE "Открываем вкладку 'Документы на контроле', отдочиваем ее и придочиваем параллельно списку терминов Толкового словаря"
 "Перетащить отдоченную вкладку Документов на контроле в список терминов ТС"
 2 раза ( "Дождаться переключения вкладок" )
;

PROCEDURE "Открываем вкладку 'Меню', отдочиваем ее и придочиваем перпендикулярно списку терминов Толкового словаря"
 "Перетащить отдоченную вкладку Меню в список терминов ТС"
;

PROCEDURE "Перетащить вкладку ПЗ в список терминов ТС"
 ПЗ
 "Дать системе перерисоваться"
 "Установить курсор мыши по координатам {(50 -20)} относительно контрола {("Контрол в фокусе")}" // на заголовок отдоченной вкладки
 "Перевести фокус в дерево терминов"
 THREAD ( 1500 SLEEP 
  INTEGER VAR width
  "Панель задач" "Померить ширину" >>> width
  INTEGER VAR X
  width 45 + >>> X
  "Установить курсор мыши по координатам {(X 220)} относительно контрола {("Текущая активная вкладка")}"  // в ЛЕВУЮ часть списка терминов
  "Отпустить левую кнопку мыши" )
 "Зажать левую кнопку мыши"
 "Дать системе перерисоваться"
 3000 SLEEP
; // "Перетащить вкладку ПЗ в список терминов ТС"

PROCEDURE "Вытащить вкладку ПЗ в область текста термина ТС"
 "Установить курсор мыши по координатам {(35 130)} относительно контрола {("Текущая активная вкладка")}"  // на заголовок вкладки
 THREAD ( 3500 SLEEP 
  "Установить курсор мыши по координатам {(370 0 )} относительно контрола {("Контрол в фокусе")}" // в текст термина
  "Отпустить левую кнопку мыши" )
 "Зажать левую кнопку мыши"
 4000 SLEEP 
;

PROCEDURE "Сравнить с эталоном высоту и ширину вкладки 'Панель задач'"
 PROCEDURE Размер_окну    
  "Панель задач" "Померить высоту" .
  "Панель задач" "Померить ширину" .
 ; // Размер_окну
 "Выставить форме размеры {( 1400 900 )} и {(@ Размер_окну )}"
;

PROCEDURE "Проверить, что вкладка на форме придочена в дерево терминов ТС"  STRING IN aControl STRING IN aForm
 "Перевести фокус в {(aControl)} на форме {(aForm)}"
 OBJECT VAR "Текущий контрол"
 "Контрол в фокусе" =: "Текущий контрол"
 OBJECT VAR "Навигатор"
 "Текущий контрол" 2 раза "Получить родительскую форму" =: "Навигатор"
 "Навигатор" "Объект существует?" ?ASSURE 'Не нашли форму' 
 OBJECT VAR "Неотдоченный левый навигатор"
 "Найти контрол {(контрол::UnderControlList)} на форме {("Навигатор")}" >>> "Неотдоченный левый навигатор"
 "Неотдоченный левый навигатор" "Объект существует?" ?ASSURE 'Навигатора в списке терминов нет!' 
; // "Проверить, что вкладка на форме придочена в дерево терминов ТС"

PROCEDURE "Вытащить вкладку Документов на контроле в область текста термина ТС"
 "Установить курсор мыши по координатам {(5 144)} относительно контрола {("Главное окно")}"  // на заголовок вкладки
 THREAD ( 3500 SLEEP 
  "Установить курсор мыши по координатам {(350 0 )} относительно контрола {("Контрол в фокусе")}" // в текст термина
  "Отпустить левую кнопку мыши" )
 "Зажать левую кнопку мыши"
 4000 SLEEP 
;

WORDWORKER "##Запомнить состояние окна (алгоритм с плавающим окном) и выполнить"
 TRY 
  "Сделать {(@ ( WordToWork DO ) )} с изменением состояния и размеров окна {("Главное окно")}"
 FINALLY
  ОМ
  "Открыть вкладку Документы на контроле с проверкой"
  "Сделать вкладку {(контрол::UnderControlList)} на форме {(форма::UnderControl)} неплавающей"
  "Закрыть вложенные формы"
  // пытаемся бороться с мусором (из-за того, что вкладка может быть отдочена)
  "Восстановить настройки"
  "Закрыть вкладку Документы на контроле"
 END
;

PROCEDURE "Вытащить вкладку 'Документы на контроле' в область текста термина ТС"
 "Проверить, что вкладка {(контрол::UnderControlList)} на форме {(форма::UnderControl)} придочена в дерево терминов ТС"  
 "Вытащить вкладку Документов на контроле в область текста термина ТС"
;

PROCEDURE "##Дать тесту время для отрисовки контролов"
 "Дать системе перерисоваться"
 "Дождаться переключения вкладок"
;

PROCEDURE "Проверить, что дерево терминов Толкового словаря не пустое"
 TRY
  "Дождаться переключения вкладок"
  "Перевести фокус в дерево терминов"
 FINALLY
  "Восстановить настройки"
  "Меню во вкладке" 
  "Закрыть меню во вкладке" 
  "Дождаться переключения вкладок"
  10 раз ( 
   "Нажать {('Tab')}"
   Если ( "Контрол в фокусе" РАВНО 'LeftNavigator : _nscPageControl_' ) то
    ( "Закрыть вложенные формы" )
  )
 END
;

PROCEDURE "Сравнить в эталоном контекстное меню дерева фильтров"
 "Сравнить контекстное меню с эталоном"
;

WORDWORKER "Запомнить ширину вкладки Левого навигатора. Свернуть вкладку 'Структура документа' и убедиться, что ширина вкладки Левого навигатора не изменилась после действий"
 INTEGER VAR aWidth
 "Левый навигатор" "Померить ширину" >>> aWidth
 "Сделать левый навигатор свернутым"
  ( WordToWork DO ) 
 "Дождаться переключения вкладок"
 "Левый навигатор" "Померить ширину" aWidth ?== ?ASSURE 'Ширина вкладки навигатора не сохранилась' 
;

PROCEDURE "Открыть окно 'Анализ списка' и выбрать Комментарии - Книги"
 "Перевести фокус в список"
 "Дождаться переключения вкладок"
  @ ( "Анализ списка" ) MODAL ( 
   ( 
     1000 SLEEP 
     "Найти ссылку {('Книги (6)')} в дереве {(контрол::ListTree)} и перейти по ней" 
   ) 
  )
;

PROCEDURE "Проверяем, есть ли ListAnalizeForm во вкладках"
 
  PROCEDURE Действия_с_контролом OBJECT IN aCtrl
   Если ( aCtrl ЯВЛЯЕТСЯ class::TListAnalizeForm ) то
    ( 'Видим пустую форму name:ListAnalizeForm' . )
  ; // Действия_с_контролом

 "Закрыть вложенные формы"
 OBJECT VAR Parent
 "Найти контрол {(контрол::ChildZone)} на форме {("Главное окно")}" >>> Parent
 "Выполнить для всех контролов {(Parent)}" Действия_с_контролом 
 "Открыть фильтры"
;

PROCEDURE "Сравнить с эталоном позицию вертикального скроллбара в левой части ААК"
 "Дождаться переключения вкладок"
 "Поставить фокус в левую половину ААК"
 "Узнать позицию вертикального скроллбара у контрола {(контрол::scrLeft:push)}" .
;

PROCEDURE "В тексте слева кликаем по ссылке внизу 'Список редакций, открываемых по скрипту'"

 PROCEDURE Действия_если_попали_на_ссылку
  @ ( "Клик левой кнопкой мыши" ) MODAL ( "Перевести фокус в дерево редакций" "Получить имя текущего элемента дерева {(контрол::RedactionTree)}" )
 ; // Действия_если_попали_на_ссылку

 "Перевести фокус в левую редакцию"
 "В конец документа"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(0 -30)}"
 "Убедиться, что текущий индекс курсора мыши {('crHandPoint')} и выполнить {(@ Действия_если_попали_на_ссылку )}"
;

PROCEDURE "Выбрать пункт БП 'Все документы', затем установить курсор мыши на пункт 'Еще' и прокрутить колесико мыши"
 "Установить курсор мыши на VG-контрол {('Все документы')}"
 "Клик левой кнопкой мыши"
   "Установить курсор мыши на VG-контрол {(контрол::MoreTab)}"
 "Дать системе перерисоваться"
 30 раз ( "Симулировать прокрутку колесом мыши вниз {( 1 )} раз"
 "Дать системе перерисоваться" )
;

PROCEDURE "Кликнуть мышкой ссылку 'Вернуться в текст документа' в статусбаре"
 VAR W
 VAR H
 "Главное окно" "Померить ширину" >>> W
 "Главное окно" "Померить высоту" >>> H
 W 80 - >>> W
 H 65 - >>> H
 "Установить курсор мыши по координатам {( W H )} относительно контрола {("Главное окно")}"
 4 раза ( "Дождаться переключения вкладок" ) 
 "Клик левой кнопкой мыши"
 "Дать системе перерисоваться"
;

PROCEDURE "Найти в тексте слева ссылку 'Список редакций, открываемых по скрипту' и перейти по ней"
 13 раз ( "Перейти к следующей ссылке" )
 @ ( "Перейти по текущей ссылке" ) MODAL ( "Перевести фокус в дерево редакций" "Получить имя текущего элемента дерева {(контрол::RedactionTree)}" )
;

PROCEDURE "Сравнить контекстное меню на разных контролах КЗ и скроллбаре с эталоном"
 OBJECT VAR Editor
 контрол::Editor:push >>> Editor
 "Перевести фокус в поле 'Тип' в ППР"
 OBJECT VAR aCtrl
 "Контрол в фокусе" >>> aCtrl
 8 раз ( 
  'Контрол: ' aCtrl ToPrintable Cat .
  'Контекстное меню: ' .
  "Сравнить контекстное меню для контрола {(aCtrl)} для точки с эталоном {( 0 0 )}"
  aCtrl "Перейти к родительской форме" >>> aCtrl 
  "Отделить текст в эталоне"
 )
 Если ( "Узнать, есть ли у контрола {(Editor)} вертикальный скроллер" )
  то ( 'Контекстное меню вертикального скроллера:' .
   "Сравнить контекстное меню скроллера контрола {(Editor)} с эталоном"
  )
 "Отделить текст в эталоне"
 'Контекстное меню на "пустом" месте:' .
 "Сравнить контекстное меню для контрола {(Editor)} для точки с эталоном {( 100 50 )}"
 // "Установить курсор мыши по координатам {( 100 50 )} относительно контрола {(Editor)}"
 // проверка координат
;

PROCEDURE "Заполнить 'Историю запросов' (7 раз провести поиск по БП и вернуться)"
 7 раз ( "В БП ищем контекст {('11')}"
  "Назад по истории" )
;

PROCEDURE "Проверить, что название нижней части 'История запросов' не обрезается"
 OBJECT VAR "Панель запросов"
 INTEGER VAR height_lrBaseSearch
 INTEGER VAR height_hfBaseSearch
 "Найти контрол {('lrBaseSearch')} на форме {("Главное окно")}" =: "Панель запросов" 
 "Проверить, что у контрола {("Панель запросов")} есть вертикальный скроллер" 
 "Панель запросов" "Померить высоту" >>> height_lrBaseSearch
 "Найти контрол {('hfBaseSearch')} на форме {("Главное окно")}" "Померить высоту" >>> height_hfBaseSearch
 Если ( height_hfBaseSearch height_lrBaseSearch - МЕНЬШЕ 50 ) то 
  ( 'Высота заголовка Истории запросов менее 50 пикселей' . )
;

PROCEDURE "Клавишей Tab переводим фокус в комбобокс вкладки МД"
 100 раз ( 
  "Совершить переход по Таб"
  Если ( "Контрол в фокусе" "Имя компонента" РАВНО контрол::bt_enFolders_opFiltrate ) то
   выходим
  )
 "Контрол в фокусе" "Имя компонента" РАВНО контрол::bt_enFolders_opFiltrate ?ASSURE 'Не дошли до нужного контрола на вкладке Мои документы!' 
;

PROCEDURE "Кликнуть левой кнопкой мыши в любое поле КЗ (например, Вступление в силу)"
 OBJECT VAR КЗ
 "Найти контрол {(контрол::Editor)} на форме {("Главное окно")}" =: КЗ
 "Установить курсор мыши по координатам {( 250 50)} относительно контрола {(КЗ)}"
 "Текущий индекс курсора мыши {('crIBeam')}?"
 "Клик левой кнопкой мыши"
 "Дождаться переключения вкладок"
;

WORDWORKER "Открыть вкладку 'Мои документы' и выполнить"
 "Открыть мои документы и выполнить {(@ ( WordToWork DO ) )}"
;

PROCEDURE "Прокрутить колесо мыши вниз (20 раз) и сравнить с эталоном текст выделенного элемента вкладки Оглавление"
 "Прокрутить колесо мыши вниз {(20)} раз для контрола {(контрол::Text:push)}"
 "Перевести фокус в оглавление"
 "Получить имя текущего элемента дерева {(контрол::ContentsTree)}"
;

PROCEDURE "Кликнуть по ссылке 'Орган/Источник' и сравнить с эталоном иерархию контрола в фокусе в открывшемся модальном окне"
 TRY
  "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-110 -12)}"
  "Дождаться переключения вкладок"
  "Проверить, что курсор над ссылкой"
  "Отделить текст в эталоне" 
  'Проверяем иерархию контрола в фокусе после клика мышкой: ' . 
  @ ( "Клик левой кнопкой мыши" ) MODAL ( "Проверить иерархию вложенности текущего контрола" )
 FINALLY
  "Дождаться переключения вкладок"
 END
;

PROCEDURE "Кликнуть по ссылке 'Информация об изменениях' в правой части ОИД"
 "Поиск контекста"
 "Ввести {('9 марта')}"
 "Нажать Enter"
 "Закрыть вложенные формы"
 11 раз ( "Стрелка вверх" )
 "Установить курсор мыши посередине текущего редактора"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Кликнуть на ссылку 'их представителями' и убедиться, что у флеша есть отступ слева (в диапазоне 165-180 пикселей)"
 OBJECT VAR "Флеш"
 "Контрол в фокусе" >>> "Флеш"
 "Установить курсор мыши по координатам {( 200 130 )} относительно контрола {("Флеш")}"
 "Дождаться переключения вкладок"
 "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crDefault' ?ASSURE 'Не попали на ссылку "представителями"!' 
 "Клик левой кнопкой мыши"
 "Флеш" "Померить отступ слева" "в интервале" ( 165 180 ) ?ASSURE 'Отступ флеша слева вышел за допустимые границы! Возможно флеш не отцентрирован по ширине экрана!' 
;

PROCEDURE "Кликнуть вид информации и сравнить с эталоном текст и ширину кнопки" STRING IN aType
 VAR l_VG
 aType "Контрол в фокусе" "Родительская форма контрола" "Найти VG-контрол по имени" =: l_VG
 "Кликаем контрол {( l_VG )}, принадлежащий VG-сцене"
 'text' "Сравнить с эталоном строковую переменную объекта {( l_VG )}"
 l_VG vg:control:Width .
 // 'width' "Сравнить с эталоном нецелочисленную переменную объекта {( l_VG )} (но округленную до целого числа)"
;


PROCEDURE "Кликнуть на ссылку 'Информация об изменениях' в правой части СР (для НК)"
 "Подготовить главное окно к тесту (установить ему размеры {( 1000 700 )} ) и выполнить" (
  "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-130 5)}"
  "Клик левой кнопкой мыши"
 )
;

PROCEDURE "Подвести курсор мыши к ссылке 'Проверить условия...' и убедиться, что ссылка не сместилась"
 "Перевести фокус в поле 'Запрос в службу Правовой поддержки онлайн' в ППО"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(35 11)}"
 "Проверить, что курсор над ссылкой"
 "Отделить текст в эталоне"
 "Установить курсор мыши чуть правее правого края текущего редактора"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(35 11)}"
 "Проверить, что курсор над ссылкой"
;

PROCEDURE "Кликнуть мышкой ссылку 'Договоры и иные сделки'"
 "Дождаться переключения вкладок"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {( -100 10 )}"
 "Клик левой кнопкой мыши"
;

WORDWORKER "Выключить показ пользовательских комментариев и выполнить"
 "Сделать {(@ ( WordToWork DO ) )} с выключенными пользовательскими комментариями"
;

PROCEDURE "Навести курсор мыши на иконку комментария и сравнить с эталоном хинт и контекстное меню"
 "Дать системе перерисоваться"
 "Установить курсор по координатам  {( 7 71 )} относительно контрола {(контрол::SubPanel:push)} и сравнить с эталоном хинт и контекстное меню"
;

WORDWORKER "Установить главному окну размеры , ширину левой части ААК в и выполнить" INTEGER IN formW INTEGER IN formH INTEGER IN aW
 PROCEDURE Действия
     "Выставить форме размеры {( formW formH )} ширину левой части ААК в {(aW)} и сделать {(@ ( WordToWork DO ) )}"
 ; 

 "Сделать {(@ Действия )} с изменением состояния и размеров окна {("Главное окно")}"
;

PROCEDURE "Подвинуть сплиттер до упора влево и сравнить с эталоном ширину левой части ААК"
 "Установить главному окну размеры {(1400 800)}, ширину левой части ААК в {( 0 )} и выполнить" (
  OBJECT VAR "Сплиттер"
  "Найти сплиттер в ААК" =: "Сплиттер"
  "Сплиттер" "Померить ширину" .
 )
;

PROCEDURE "Скроллим документ так, чтобы нижняя строчка комментария находилась на уровне верхнего параграфа на экране"
 "Прокрутить колесо мыши вниз {(6)} раз для контрола {(контрол::Text:push)}"
;

PROCEDURE "Установить фокус в нижнюю строку таблицы"
 2 раза ( "Перейти на параграф вниз" )
;

PROCEDURE "Установить курсор мыши на ссылку в плашке ААК и сравнить с эталоном виден ли хинт"
 "Установить главному окну размеры {(1000 700)}, ширину левой части ААК в {(400)} и выполнить" (
  "Установить курсор мыши на ссылку в плашке ААК"
  "Дождаться переключения вкладок"
  "Проверить, виден ли хинт"
 )
;

PROCEDURE "Подвести курсор мыши правее ссылки 'Договоры и иные сделки' и сравнить с эталоном индекс курсора мыши" 
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {( 80 18 )}"
 "Проверить, что курсор над ссылкой"
;

PROCEDURE "Подвести курсор мыши правее ссылки 'Доверенность' и сравнить с эталоном индекс курсора мыши"
 "Установить курсор мыши чуть правее правого края текущего редактора"
 "Проверить, что курсор вне ссылки"
;

PROCEDURE "Изменить ширину левой части ААК (увеличить до 600), восстановить настройки конфигурации и убедиться, что ширина левой части ААК стала прежней"
 INTEGER VAR "Первоначальная ширина левой части"
 "Померить ширину левой части ААК-Содержания" >>> "Первоначальная ширина левой части"
 OBJECT VAR "Сплиттер"
 "Найти сплиттер в ААК-содержании" =: "Сплиттер"
 "Установить ширину контрола {("Сплиттер")} в пикселей {(600)}"
 "Восстановить настройки"
 "Дождаться переключения вкладок"
 INTEGER VAR "Ширина с погрешностью слева"
 INTEGER VAR "Ширина с погрешностью справа"
 "Первоначальная ширина левой части" 1 - >>> "Ширина с погрешностью слева"
 "Первоначальная ширина левой части" 1 + >>>  "Ширина с погрешностью справа"
 Если ( "Первоначальная ширина левой части" "в интервале" ( "Ширина с погрешностью слева" "Ширина с погрешностью справа" ) ) то
  ( 'Ширина левой части ААК вернулась на свое место!' . )
 иначе
  ( false ?ASSURE [ 'Ширина левой части ААК не вернулась на свое место! Должна быть: ' "Первоначальная ширина левой части" IntToStr ', а текущая: ' "Померить ширину левой части ААК-Содержания" IntToStr ]  ) 
;

PROCEDURE "Потянуть вертикальный скроллер контрола вниз до конца редактора и сравнить его хинт с эталоном" OBJECT IN aControl
 "Проверить, что у контрола {(aControl)} есть вертикальный скроллер"
 VAR X
 VAR Y
 "Померить ширину {(aControl)}" >>> X
 X 10 - >>> X
 "Установить курсор мыши по координатам {(X 19)} относительно контрола {(aControl)}"
 aControl "Померить высоту" >>> Y
 Y 30 - >>> Y
 THREAD (
  "Зажать левую кнопку мыши"
  "Установить курсор мыши по координатам {(X Y)} относительно контрола {(aControl)}"
  "Отпустить левую кнопку мыши" 
 )
 4 раза ( "Дождаться переключения вкладок"
  50 SLEEP 
  "Дать системе перерисоваться"
 )
 "Сравнить текст хинта с эталоном"
;

PROCEDURE "Потянуть вертикальный скроллер в тексте вниз до конца и сравнить его хинт с эталоном"
 "Потянуть вертикальный скроллер контрола {("Контрол в фокусе")} вниз до конца редактора и сравнить его хинт с эталоном"
;

PROCEDURE "Сравнить с эталоном ширину кнопок статусбара"
 PROCEDURE Измеряем_ширину OBJECT IN l_It 
  "Дать системе перерисоваться"
  l_It ЯВЛЯЕТСЯ class::TnscStatusBarButton ? (
   l_It "Померить ширину" .   
  )
 ;

 "Дождаться переключения вкладок"
 "Для всех видимых элементов статусбара {(контрол::StatusBar:push)} выполнить" Измеряем_ширину
;

PROCEDURE "Убедиться, что у поля 'Дата принятия' есть красный крестик"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(515 -20)}"
 "Дождаться появления хинта"
;

PROCEDURE "Установить высоту вкладки синхронного просмотра в 300 пикселей"
 300 "Вкладка синхронного просмотра документа" "Установить высоту"
;

PROCEDURE "Сравнить с эталоном высоту вкладки синхронного просмотра"
 "Вкладка синхронного просмотра документа" "Померить высоту" .
;

PROCEDURE "Несколько раз нажать PageDown, сравнить с эталоном текст ссылок, к которым перешли и убедиться, что дошли до конца документа"
 "Подготовить главное окно к тесту (установить ему размеры {(1380 900)} ) и выполнить" (
  Если ( "Разрешение основного монитора по горизонтали" БОЛЬШЕ 1450 ) то (
   "Вызываем форму контекстного поиска"
   "##Дать тесту время для отрисовки контролов"
   "Поставить фокус в правую половину ААК-Содержания"
   ОМ
   "Назад по истории"
   "##Дать тесту время для отрисовки контролов"
  )
  // для мониторов с большим разрешением для стабильности результата
  "Вызываем форму контекстного поиска"
  "##Дать тесту время для отрисовки контролов"
  "Поставить фокус в правую половину ААК-Содержания"
  6 раз ( "Нажать {('PgDn')}" )
  "##Дать тесту время для отрисовки контролов"
  4 раза (
   "Сравнить выделенный текст текущего редактора с эталоном"
   'Номер параграфа в документе: ' "Узнать номер текущего параграфа" IntToStr Cat  .
   "Отделить текст в эталоне" 
   "Нажать {('PgDn')}"
  )
 )
;

PROCEDURE "Прокрутить КЗ так, чтобы 2-ая строка контекста стала верхней на экране"
 "Прокрутить колесо мыши вниз {(3)} раз для контрола {(контрол::Editor:push)}"
;

PROCEDURE "Провести курсором мышки по логическим условиям полей"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {( -100 -50 )}" 
 "Провести мышью вниз на {(60)} пикселей"
 // 1350 800
;

PROCEDURE "Провести курсором мышки по названиям полей и создать эталон"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {( -100 -100 )}" 
 "Контрол в фокусе" pop:editor:CheckWithEtalon ( "Провести мышью вниз на {(300)} пикселей" )
;

PROCEDURE "Закрыть вкладку с СКР (крестиком)"
 "Дождаться переключения вкладок"
 OBJECT VAR "Комбобокс с выбором типа СКР"
 "Найти контрол {(контрол::bt_enCRList_SetType)} на форме {("Главное окно")}" =: "Комбобокс с выбором типа СКР"
 "Установить курсор мыши по координатам {(390 4)} относительно контрола {("Комбобокс с выбором типа СКР")}"
 "Дождаться появления хинта"
 Если ( "Текущий хинт" РАВНО 'Закрыть' ) то
  ( "Клик левой кнопкой мыши" )
 иначе
  ( 'Не попали курсором мыши на кнопку Закрыть!' . )
 "Дождаться переключения вкладок"
 // размеры окна: 1200 850
;

PROCEDURE "Кликнуть кнопку 'Ссылки из фрагмента (вид информации)' на тулбаре вкладки 'Оглавление'"
 "Перевести фокус в оглавление"
 "Кликаем кнопку {(контрол::bt_enDocumentBlock_opGetTypedRespondentList)} на тулбаре"
 "Дождаться переключения вкладок"
;

WORDWORKER "Сохранить текущий объект в Мои документы и сделать"
 "Сохранить текущий объект в Мои документы и выполнить {(@  ( WordToWork DO ) )}"
;

PROCEDURE "Открыть модальное окно сохранения в Мои документы, выделить ранее сохраненный список и нажать кнопку 'Добавить'"
 PROCEDURE Добавляем_отфильтрованный_список
  "Найти контрол {(контрол::FoldersTree)} на форме {("Диалог сохранения в Мои документы")}" "Установить фокус"
  "Развернуть текущее дерево"
  "Нажать {('Down')}"
  "Добавить к списку"
 ;

 @ ( "Сохранить в Мои документы" ) MODAL ( Добавляем_отфильтрованный_список )
;

PROCEDURE "Сравнить с эталоном результат применения фильтра: если список есть - то названия документов, если список пустой - весь текст сообщения об этом"
 OBJECT VAR "Пустой список"
 "Найти контрол {("Информация о пустом списке")} на форме {("Текущая активная вкладка")}" >>> "Пустой список"
 Если ( "Узнать, виден ли контрол {("Пустой список")}" ) то
  ( 'Видим пустой список:' . 
    "Установить фокус в пустой список"
   "Выделить всё"
   "Сравнить выделенный текст текущего редактора с эталоном" )
 иначе
  ( 'Список не пуст:' .
   "Сравнить список документов с эталоном" )
;

OBJECT FUNCTION "Группа в левом навигаторе" STRING IN aNameGroup
  PROCEDURE Действия_с_контролом OBJECT IN aCtrl
   Если ( ( aCtrl ЯВЛЯЕТСЯ class::TnscTasksPanelHideField )
   И ( aCtrl pop:HideField:GetCaption РАВНО aNameGroup ) ) то
    ( aCtrl =: Result
    "Закончить перебор контролов" )
  ; // Действия_с_контролом
 OBJECT VAR "Левый навигатор"
 контрол::LeftNavigator "Главное окно"  pop:Control:FindControlByName =: "Левый навигатор"
 "Левый навигатор" "Объект существует?" ?ASSURE 'Не удалось найти левый навигатор' 
 "Выполнить для всех контролов {("Левый навигатор")}" Действия_с_контролом 
;

OBJECT FUNCTION "Группа 'Оглавление' в левом навигаторе"
 "Группа {('Оглавление')} в левом навигаторе" =: Result
;

WORDWORKER "Свернуть группу 'Оглавление' и выполнить"
 Если ( "Группа 'Оглавление' в левом навигаторе" pop:HideField:IsExpanded ) то
  ( false "Группа 'Оглавление' в левом навигаторе" pop:HideField:SetExpanded )
 "Дождаться переключения вкладок"
 ( WordToWork DO )
 "Дождаться переключения вкладок"
 Если ( "Группа 'Оглавление' в левом навигаторе" pop:HideField:IsExpanded ! ) то
  ( true "Группа 'Оглавление' в левом навигаторе" pop:HideField:SetExpanded )
; 

PROCEDURE "Сравнить с эталоном состояние свернутости группы 'Оглавление' в левом навигаторе"
 "Дождаться переключения вкладок"
 'Состояние свернутости группы Оглавление: ' "Группа 'Оглавление' в левом навигаторе" pop:HideField:IsExpanded ToPrintable Cat .
;

OBJECT FUNCTION "Группа 'Встроенные объекты' в левом навигаторе"
 "Группа {('Встроенные объекты')} в левом навигаторе" =: Result
;

PROCEDURE "Сравнить с эталоном состояние свернутости группы 'Встроенные объекты' в левом навигаторе"
 "Дождаться переключения вкладок"
 'Состояние свернутости группы Встроенные объекты: ' "Группа 'Встроенные объекты' в левом навигаторе" pop:HideField:IsExpanded ToPrintable Cat .
;

PROCEDURE "Открыть сохраненный список из Моих документов и сравнить с эталоном статусную строку списка и выбран ли созданный фильтр"
 PROCEDURE Действия
  "Дождаться переключения вкладок"
  'Выбран ли фильтр (наличие синей галочки): ' .
  "Проверить, выбран ли фильтр с именем {(Filter_for_test_K506709931)}"
  "Убедиться, что фильтр {(Filter_for_test_K506709931)} автоприменяемый"
  "Отделить текст в эталоне"
  'Текущий список документов: ' .
  "Сравнить статусбар с эталоном"
 ;

 "Открыть сохраненный объект из Моих документов и выполнить {(@ Действия )}"
;

PROCEDURE "Сравнить с эталоном контекстное меню документа, поставленного на контроль (во вкладке 'Документы на контроле')"
 PROCEDURE Действия
  "Дождаться переключения вкладок"
  "Сравнить контекстное меню с эталоном"
 ;

 "Выполнить {(@ Действия )} с документами на контроле"
;

PROCEDURE "Сравнить с эталоном хинт кнопки на тулбаре" STRING IN aName
 OBJECT VAR "Кнопка на тулбаре"
 "Найти контрол {(aName)} на форме {("Главное окно")}" =: "Кнопка на тулбаре"
 "Аккуратно сравнить с эталоном логическое свойство {('ShowHint')} объекта {("Кнопка на тулбаре")}" 
 "Установить курсор по координатам {( 5 5 )} относительно контрола {("Кнопка на тулбаре")} и сравнить с эталоном его хинт"
;

PROCEDURE "Сравнить с эталоном хинты кнопок СКР на вкладке 'Оглавление'"
 "Сравнить с эталоном хинт кнопки {(контрол::bt_enDocumentBlock_opGetTypedCorrespondentList)} на тулбаре"
 "Сравнить с эталоном хинт кнопки {(контрол::bt_enDocumentBlock_opGetTypedRespondentList)} на тулбаре"
;

PROCEDURE "Установить фокус в дерево содержания первого уровня (слева)"
 "##Дать тесту время для отрисовки контролов"
 "Найти контрол {(контрол::FirstLevelContent)} на форме {("Главное окно")}" "Установить фокус"
;

PROCEDURE "Установить фокус в дерево атрибутов (справа)"
 "Дождаться переключения вкладок"
 "Найти контрол {(контрол::AttributeTree)} на форме {("Главное окно")}" "Установить фокус"
;

PROCEDURE "Слева выбираем ситуацию основного уровня 'Авиация' и сравниваем с эталоном 5 атрибутов из правой части, на которых стоит фокус"
 'Проверка при выборе атрибутов СЛЕВА: ' .
 "Установить фокус в дерево содержания первого уровня (слева)"
 "Найти атрибут {('Авиация')} в дереве {(контрол::FirstLevelContent)}"
 "Установить фокус в дерево атрибутов (справа)"
 5 раз ( "Сравнить заголовок текущего контрола с эталоном"
 "Стрелка вниз" )
;

PROCEDURE "Справа выбираем атрибут 'Авария' и сравниваем с эталоном 5 атрибутов из левой части, на которых стоит фокус"
 'Проверка при выборе атрибутов СПРАВА: ' .
  "Установить фокус в дерево атрибутов (справа)"
 "Переместиться в начало дерева"
 "Найти атрибут {('Авария')} в дереве {(контрол::AttributeTree)}"
 "Установить фокус в дерево содержания первого уровня (слева)"
 5 раз ( "Сравнить заголовок текущего контрола с эталоном"
 "Стрелка вниз" )
;

PROCEDURE "18 раз увеличить шрифт и сравнить с эталоном текущий размер текста (в диалоге Редактора стилей)"
 18 раз ( "Увеличить шрифт" )
 "Дождаться переключения вкладок"
 'Верхняя граница шрифта: ' "Текущий размер текста (в измененном Редакторе стилей)" ToPrintable Cat .
;

PROCEDURE "10 раз уменьшить шрифт и сравнить с эталоном текущий размер текста (в диалоге Редактора стилей)"
 10 раз ( "Уменьшить шрифт" )
 "Дождаться переключения вкладок"
 'Нижняя граница шрифта: ' "Текущий размер текста (в измененном Редакторе стилей)" ToPrintable Cat .
;

WORDWORKER "Поставить на контроль документы и выполнить" ARRAY IN anID

 PROCEDURE "Поставить на контроль? " BOOLEAN IN aNeedSet 
  @ ( INTEGER IN anItem
   "Открываем {( anItem )}" 
   Если ( aNeedSet ) то
    ( "Поставить на контроль" )
   иначе
    ( "Снять с контроля" )
  ) anID ITERATE
;

 "Поставить на контроль? {(true)}"
 TRY
  ( WordToWork DO )
 FINALLY 
  "Поставить на контроль? {(false)}"
  "Закрыть синюю медаль документов на контроле"
 END
;

PROCEDURE "Поставить документ на контроль и снять документ с контроля путем удаления его из вкладки Документы на контроле"
 TRY
  "Поставить на контроль"
  "Открыть вкладку Документы на контроле с проверкой"
 FINALLY
  "Снять документ с контроля путем удаления его из вкладки Документы на контроле"
  "##Дать тесту время для отрисовки контролов"
 END
;

WORDWORKER "Открыть вкладку 'Документы на контроле' и выполнить"
 "Выполнить {( @ ( WordToWork DO ) )} с документами на контроле"
;

PROCEDURE "Сравнить с эталоном список документов, поставленных на контроль (сравниваем из вкладки)"
 "Открыть вкладку 'Документы на контроле' и выполнить" (
  "Сравнить развёрнутый список {(контрол::UnderControlList)} с эталоном"
 )
;

WORDWORKER "Вызвать диалог сохранения в Мои документы, открыть модальный диалог создания новой папки и выполнить"
 PROCEDURE Создаем_новую_папку
  OBJECT VAR "Кнопка Создать папку"
  "Найти контрол {(контрол::bt_enFolder_opNew)} на форме {("Диалог сохранения в Мои документы")}" >>> "Кнопка Создать папку"
  @ ( "Кнопка Создать папку" "Кликнуть" ) MODAL (
   "Дождаться переключения вкладок"  
   ( WordToWork DO )
  )
 ;

 @ ( "Сохранить в Мои документы" ) MODAL ( Создаем_новую_папку )
;

PROCEDURE "Сравнить с эталоном все активные настройки для пункта в Редакторе стилей" ARRAY IN aName
 "Выполнить с редактором стилей" (
  @ ( STRING IN aNameStyle
   "Установить фокус в Дерево стилей"
   "Переместиться в начало дерева"
   "Найти ссылку {(aNameStyle)} в дереве {(контрол::StyleTreeView)} и перейти по ней"
   30 раз ( 
    Если ( "Контрол в фокусе" "Имя компонента" РАВНО 'Editor' ) то 
      ( выходим )
    "Сравнить с эталоном имя текущего контрола"
    Если ( "Контрол в фокусе" ЯВЛЯЕТСЯ class::TeeCheckBox ) то
     ( "Получить состояние чекбокса {("Контрол в фокусе")}" . ) 
    иначе
     ( "Сравнить заголовок текущего контрола с эталоном" )
    "Отделить текст в эталоне"
    "Нажать {('Tab')}"
   )
  ) aName ITERATE
 )
;

PROCEDURE "Выполнить с комбобоксом фильтрации элементов папок по типу" IN aProc
 OBJECT VAR "Комбобокс фильтрации элементов папок по типу"
 PROCEDURE Действия
  "Найти контрол {(контрол::bt_enFolders_opFiltrate)} на форме {("Главное окно")}" =: "Комбобокс фильтрации элементов папок по типу"
  "Комбобокс фильтрации элементов папок по типу" "Объект существует?" ?ASSURE 'Не нашли кобобокс' 
  "Комбобокс фильтрации элементов папок по типу" "Установить фокус"
  aProc DO
 ; // Действия

 "Открыть мои документы и выполнить {(@ Действия )}"
; // "Выполнить с комбобоксом фильтрации элементов папок по типу"

PROCEDURE "Сравнить с эталоном найдется ли значение 'Фильтры' в комбобоксе на вкладке 'Мои документы'"
 PROCEDURE Действия
  "Запомнить значение комбобокса {("Контрол в фокусе")} и выполнить" (
   "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('Фильтры')}"
 )
 ; // Действия

 "Выполнить {(@ Действия )} с комбобоксом фильтрации элементов папок по типу"
;

PROCEDURE "Построить список ссылок на документ, если их больше 50 штук"
 "Ответить один раз Да для {(@ "Ссылки на документ")}"
;

WORDWORKER "Убедиться, что появился диалог с кнопкой 'Нет' после следующих действий"
  "{(@  ( WordToWork DO ) )} и проверить наличие диалога с кнопкой Нет"
;

PROCEDURE "Кликнуть 5 раз на кнопки для типов БП и сравнить с эталоном выбранность ВСЕХ кнопок расширенно " BOOLEAN IN anName
 INTEGER VAR X
 35 >>> X
 5 раз ( OBJECT VAR "Точка отсчета"
  "Найти контрол {(контрол::flAttributeSearch)} на форме {("Главное окно")}" =: "Точка отсчета"
  "Установить курсор мыши по координатам {( X -70 )} относительно контрола {("Точка отсчета")}"
  "Клик левой кнопкой мыши"
  Если ( anName ) то
   ( "Проверить выбранность всех типов информации для БП на ТБ24" )
  иначе 
   ( "Проверить выбранность всех типов информации для БП на ТБ27" )
  "Отделить текст в эталоне"
  X 140 + >>> X 500 SLEEP 
 )
;

PROCEDURE "Кликнуть 5 раз на кнопки для типов БП и сравнить с эталоном выбранность ВСЕХ кнопок на ТБ24"
 "Кликнуть 5 раз на кнопки для типов БП и сравнить с эталоном выбранность ВСЕХ кнопок расширенно {(true)}"
;

PROCEDURE "Кликнуть 5 раз на кнопки для типов БП и сравнить с эталоном выбранность ВСЕХ кнопок на ТБ27"
 "Кликнуть 5 раз на кнопки для типов БП и сравнить с эталоном выбранность ВСЕХ кнопок расширенно {(false)}"
;

PROCEDURE "Открыть диалог сохранения в папку и сравнить с эталоном значение типизированного фильтра"
 PROCEDURE Добавляем_отфильтрованный_список
  "Найти контрол {(контрол::bt_enFolders_opFiltrate)} на форме {("Диалог сохранения в Мои документы")}" "Установить фокус"
  "Заголовок текущего контрола" .
 ;

 @ ( "Сохранить в Мои документы" ) MODAL ( Добавляем_отфильтрованный_список )
 "Дождаться переключения вкладок"
;

WORDWORKER "Открыть вкладку ПЗ и выполнить"
 "Открыть панель задач и выполнить {(@  ( WordToWork DO ) )}"
;

PROCEDURE "Убедиться, что вкладка ПЗ не открыта"
 OBJECT VAR "Панель задач"
 "Найти контрол {(форма::TasksPanel)} по имени на форме {("Главное окно")}" =: "Панель задач"
 // "Панель задач" "Объект не существует?" ?ASSURE 'Вкладки ПЗ быть не должно!' 
;

PROCEDURE "Сравнить с эталоном индекс текущего значения в комбобоксе"
 "Контрол в фокусе" "Узнать индекс текущего значения в комбобоксе" .
;

PROCEDURE "Установить значение в текущем комбобоксе" INTEGER IN aNum 
 --! aNum 
 aNum "Контрол в фокусе" "Установить значение в комбобоксе"
;

PROCEDURE "Выделить 3 нижних параграфа в документе и сравнить их с эталоном"
 "В конец документа"
 3 раза ( "Перейти на параграф вверх" )
 "Выделить {(3)} параграфов"
 "Сравнить выделенный текст текущего редактора с эталоном"
; 

PROCEDURE "Настройка конфигурации - Настройка интерфейса - Панель навигации - с левой стороны - Положение: Авто"
 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола: {(1)} раз вниз, {(2)} раз Tab"
  "Дождаться переключения вкладок"
  Если ( "Контрол в фокусе" ЯВЛЯЕТСЯ class::TvtComboBoxQS ) то 
   ( "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('Авто')}" )
  иначе
   ( 'Не попали в нужный комбобокс!' . )
  "Кликаем Ок в Настройке конфигурации"
 )
 "Дождаться переключения вкладок"
;

WORDWORKER "##Для повторения ошибки (476367908) выполнить"
 TRY
  ( WordToWork DO )
 FINALLY
  "Восстановить настройки"
  "Дождаться переключения вкладок"
  "Перевести фокус в оглавление"
  "Перенос по словам"
 END
;

PROCEDURE "Подводим курсор к левому краю окна для появления вкладки"
 "Установить курсор мыши по координатам {( 15 300 )} относительно контрола {("Главное окно")}"
 "Дождаться переключения вкладок"
;

PROCEDURE "Переводим фокус в документ (кликом мышки)"
 "Дождаться переключения вкладок"
 "Установить курсор мыши по координатам {( 500 300 )} относительно контрола {("Главное окно")}"
 "Клик левой кнопкой мыши"
 "Дождаться переключения вкладок"
;

PROCEDURE "Тянем мышкой выделение от самого начала вниз"
 INTEGER VAR X
 INTEGER VAR Y
 контрол::Text:push "Померить ширину" >>> X
 контрол::Text:push "Померить высоту" >>> Y
 X 2 / >>> X
 THREAD (
  400 SLEEP
  15 раз ( 
   "Установить курсор мыши по координатам {(X Y)} относительно контрола {("Контрол в фокусе")}"
   Y 2 + >>> Y
   300 SLEEP
  )
 "Отпустить левую кнопку мыши"
 )
 "Установить курсор мыши посередине редактора {("Контрол в фокусе")}"
 "Зажать левую кнопку мыши"
;

PROCEDURE "Нажать Enter и в появившемся модальном окне отметить все значения с атрибутом ИЛИ"
 PROCEDURE Действия
  "Выделить всё" 
  "Выбрать атрибут ИЛИ"
  "Дождаться переключения вкладок"
  "Нажать Искать"
 ;
 "Обработать Enter модально" ( Действия )
;

PROCEDURE "Скроллировать документ до начала"
 "Прокрутить колесо мыши вверх {(750)} раза для контрола {(контрол::Text:push)}"
;

PROCEDURE "Перевести фокус в поле 'Слова в тексте' и кликнуть 2 раза в этом поле мышкой"
 "Перевести фокус в поле 'Слова в тексте' в ППР"
 "Установить курсор мыши на левый край редактора {("Контрол в фокусе")}"
 "Двойной клик"
;

WORDWORKER "Открыть документ 2001, отдочить вкладку 'Структура документа' и выполнить"
 PROCEDURE Действия_с_вкладкой
  "Перевести фокус в документ"
  ( WordToWork DO ) 
 ;

 "Открываем {(2001)}"
 "Перевести фокус в список внешних объектов"
 "Выполнить {(@ Действия_с_вкладкой )} с отдоченной вкладкой Оглавление"
;

PROCEDURE "Установить курсор в первый комментарий"
 "В начало документа"
 "Перейти на параграф вниз"
;

PROCEDURE "Сравнить с эталоном ширину и высоту блока 'Мои комментарии' во вкладке 'Структура документа'"
 "Перевести фокус в комментарии"
 "Сравнить с эталоном размеры контрола {(контрол::lstComments:push)}"
;

PROCEDURE "Свернуть все пункты дерева Оглавления"
 "Перевести фокус в оглавление"
 "Свернуть текущее дерево"
 "Перевести фокус в документ"
;

PROCEDURE "Убедиться, что высота дерева Оглавления больше 450 пикселей"
 "Перевести фокус в оглавление"
 контрол::ContentsTree:push "Померить высоту" БОЛЬШЕ 450 ?ASSURE 'Почему-то высота дерева Оглавления меньше положенной!' 
;

PROCEDURE "Прокрутить колесо мыши вниз раз для текста документа" INTEGER IN aCount
 "Прокрутить колесо мыши вниз {(aCount)} раз для контрола {(контрол::Text:push)}"
;

PROCEDURE "В поле 'Орган/Источник' ввести контекст 'Органы власти Волгоградской области'"
 "Перевести фокус в поле 'Орган/Источник' в ППР"
 "в поле 'Орган/Источник' ввести {('Органы власти Волгоградской области')}"
;

PROCEDURE "Удалить верхнюю строку с выбранным реквизитом кликом по красному крестику"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(715 -54)}"
 "Дождаться появления хинта"
 "Текущий хинт" РАВНО 'Удалить/очистить строку ввода' ?ASSURE 'Не попали на нужную кнопку' 
 "Клик левой кнопкой мыши"
 "Дождаться переключения вкладок"
;

PROCEDURE "Открыть баллон синей медали (в документе) и кликнуть по ссылке 'см. в справке'"
 "Ставим указатель мыши на ссылку в баллоне синей медали документов на контроле в документе"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Сравнить введенный текст с эталоном"
 "Выделить всё"
 "Сравнить выделенный текст текущего редактора с эталоном"
;

WordAlias "Сравнить текущий текст с эталоном" "Сравнить введенный текст с эталоном"

PROCEDURE "Зайти в документ и открыть текущий документ в новом окне" INTEGER IN aNum
 "Открыть документ {(aNum)} в новом окне, предварительно выполнив с ним {(@ NOP)} и сделать {(@ NOP)}"
;

PROCEDURE "Вызвать контекстное меню из первой ячейки таблицы 2 раза"
 2 раза  ( "Перейти на параграф вниз" )
 THREAD ( "Секундная пауза"
  "Установить курсор мыши чуть левее левого края текущего редактора" 
  "Дождаться переключения вкладок"
  "Клик левой кнопкой мыши"
 )
 THREAD ( 400 SLEEP 
  "Установить курсор мыши на левый край текущего редактора"
  "Клик правой кнопкой мыши"
  "Дождаться переключения вкладок"
 )
 "Установить курсор мыши чуть правее левого края текущего редактора"
 "Клик правой кнопкой мыши"
;

PROCEDURE "Открыть вкладку 'Мои документы' и вызвать контектное меню на сохранённой закладке"
 "Открыть вкладку 'Мои документы' и выполнить" (
  3 раза "Дождаться переключения вкладок"
  "Дать системе перерисоваться"
  "Развернуть текущее дерево"
  "Стрелка вниз"
  "Дождаться переключения вкладок"
  THREAD ( 400 SLEEP
   "Установить курсор мыши по координатам {(75 5)} относительно контрола {(контрол::FoldersTree:push)}"
   "Клик левой кнопкой мыши"
  )
  "Установить курсор мыши по координатам {(75 25)} относительно контрола {(контрол::FoldersTree:push)}"
  "Клик правой кнопкой мыши"
 )
 "Дождаться переключения вкладок"
;

PROCEDURE "В комбобокс выбора размера шрифта для печати и экспорта ввести значение и сохранить изменения" STRING IN aSize
  PROCEDURE Действия_с_контролом OBJECT IN aCtrl
  ( aCtrl ЯВЛЯЕТСЯ class::TvtRadioButton ) 
  И ( aCtrl "Заголовок контрола"РАВНО 'Использовать для экспорта и печати следующий размер шрифта' ) ? (
   aCtrl "Узнать, отмечен ли RadioButton?" ! ? (
    aCtrl "Нажать на RadioButton"
    "Нажать {('Down')}"
    "Дождаться переключения вкладок"
   ) // устанавливам RadioButton в true
  ) // ищем нужный RadioButton
  "Дождаться переключения вкладок"
  aCtrl ЯВЛЯЕТСЯ class::TvtComboBoxQS ? (
   aCtrl "Установить фокус"
   "Установить курсор мыши по координатам {( 10 10 )} относительно контрола {("Контрол в фокусе")}"
   "Двойной клик"
   "Ввести строку {(aSize)}"
   'После ввода значения в комбобоксе: ' "Заголовок контрола {("Контрол в фокусе")}" ToPrintable Cat .
  )
 ;
 OBJECT VAR "GroupBox"
 "Контрол в фокусе" "Перейти к родительской форме" >>> "GroupBox"
 "Выполнить для всех контролов {("GroupBox")}" Действия_с_контролом 
 "Кликаем Ок в Настройке конфигурации"
 "Дождаться переключения вкладок"
;

PROCEDURE "Сравнить с эталоном, какой  размер шрифта для печати и экспорта выбран в комбобоксе в настройках конфигурации"
 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола: {(0)} раз вниз, {(12)} раз Tab"
  "Контрол в фокусе" ЯВЛЯЕТСЯ class::TvtComboBoxQS ? (
   'После сохранения настроек конфигурации в комбобоксе значение: ' "Заголовок контрола {("Контрол в фокусе")}" ToPrintable Cat .
  )
 )
 "Дождаться переключения вкладок"
;

PROCEDURE "В комбобокс выбора размера шрифта для печати и экспорта ввести значение '7' и сохранить изменения"
 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола: {(2)} раз вниз, {(12)} раз Tab"
  "В комбобокс выбора размера шрифта для печати и экспорта ввести значение {('7')} и сохранить изменения"
 )
 "Дождаться переключения вкладок"
;

PROCEDURE "В комбобокс выбора размера шрифта для печати и экспорта ввести значение '77' и сохранить изменения"
 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола: {(2)} раз вниз, {(12)} раз Tab"
  "В комбобокс выбора размера шрифта для печати и экспорта ввести значение {('7')} и сохранить изменения"
 )
 "Дождаться переключения вкладок"
;

WORDWORKER "Открыть вкладку 'Список конфигураций' и выполнить"
 "Выполнить {(@ ( WordToWork DO ) )} с вкладкой Список конфигураций"
;

PROCEDURE "Удалить текущую конфигурацию"
 OnTest
  "Дождаться переключения вкладок"
 "Ответить один раз Да для {(@ "Нажать Del")}"
;

PROCEDURE "Открыть вкладку 'Список конфигураций' и скопировать Расширенную. Убедиться, что введя имя конфигурации 'Расширенная' получим диалог с ошибкой"
 TRY
  "Открыть вкладку 'Список конфигураций' и выполнить" (
  "Найти атрибут {('Расширенная')} в дереве {(контрол::tvConfs)}"  
  @ "Копировать текущую конфигурацию" MODAL (  
   "Путь до контрола: {(0)} раз вниз, {(1)} раз Tab"
   "Ввести строку {('Расширенная')}"
   "Выполнить подавив исключение" ( "Кликаем Ок в Настройке конфигурации" )
  )  
 )
FINALLY
 "Открыть вкладку 'Список конфигураций' и выполнить" (
  "Найти атрибут {('Копия Расширенная')} в дереве {(контрол::tvConfs)}"  
  "Контрол в фокусе" "Заголовок контрола" РАВНО 'Копия Расширенная' ?ASSURE 'Текущая конфигурация не копия Расширенной!' 
  "Удалить текущую конфигурацию"
 )
END
;

PROCEDURE "Перейти по ссылке в документ 9003"
 "Дождаться переключения вкладок"
 3 раза "Перейти к следующей ссылке"
 "Перейти по текущей ссылке"
;

PROCEDURE "Дважды кликнуть ссылку 'Открыть ППР по скрипту'"
 "Дождаться появления хинта"
 "Текущий хинт" РАВНО 'Хинт к ППР, который открывается по скрипту' ?ASSURE 'Попали не на нужную ссылку! Хинт не для открытия ППР по скрипту' 
 "Двойной клик"
;

PROCEDURE "Выбрать следующую редакцию"
 "Стрелка вверх"
 "Дождаться переключения вкладок"
;

PROCEDURE "Открыть вкладку Меню и сразу закрыть её"
 "Выполнить {(@ NOP)} с меню во вкладке и закрыть её"
;

USES
 F1TestsSpecific.script
;

PROCEDURE "Пробежаться по всем полям КЗ ППР (по Tab)"
 "Пробежаться по всем полям КЗ ППР (по Tab) и выполнить" ( NOP )
;

PROCEDURE "Открыть термин " STRING IN aStr
 "Перевести фокус в дерево терминов"
 "Найти ссылку {(aStr)} в дереве {(контрол::WordsTree)} и перейти по ней"
 "Перевести фокус в текст"
;

PROCEDURE "Поставить комментарий после заголовка и перед вторым абзацем текста, вызвать контекстный поиск и искать контекст 'в дальнейшем'"
 TRY
  "Ставим комментарий"
  2 раза ( "Перейти на параграф вниз" )
  "Ставим комментарий"
  "Найти в документе строку {('в дальнейшем')}"
 FINALLY
  "Удалить комментарий у {(3700001)} термина, поставленный в начале"
  2 раза ( "Перейти на параграф вниз" ) 
  "Контекстной операцией удаляем комментарий"
 END 
;

PROCEDURE "Сравнить с эталоном скопированный в буфер текст в формате EVEREST"
 CF_EVERESTBIN clipboard:GetFormattedText EvdBin2EvdTxt .
;

PROCEDURE "Сравнить с эталоном, что введено в поле 'Статус регистрации'"
 "Перевести фокус в поле 'Статус регистрации' в КЗ ИнФарма"
 'В поле "Статус регистрации" введено: ' . 
 "Сравнить абзац текущего редактора с эталоном"
 "Отделить текст в эталоне"
;

PROCEDURE "Открываем вкладку 'Аннотация к документу' в синхронном просмотре списка"
 "Кликаем кнопку {('bt_enSynchroView_opAnnotation')} на тулбаре" 
;

PROCEDURE "Переключиться в списке на документ 900100 и сравнить с эталоном нажата ли кнопка 'Текст документа' на тулбаре"
 "Перевести фокус в список"
 "Переместиться в начало дерева"
 "Найти документ {('Документ (900100) ver 1.0')} в списке"
 OBJECT VAR "Нужная кнопка"
 "Найти контрол {('bt_enSynchroView_ShowText')} на форме {("Главное окно")}" =: "Нужная кнопка" 
 'Нажата ли кнопка Текст документа?' .
 "Узнать численную {('Down')} переменную объекта {("Нужная кнопка")}" 0 ?!= .
 "Отделить текст в эталоне"
;

PROCEDURE "Кликнуть по кнопке выбора типа информации 'Судебная практика'"
 OBJECT VAR "Точка отсчета"
 "Найти контрол {(контрол::flAttributeSearch)} на форме {("Главное окно")}" =: "Точка отсчета"
 "Установить курсор мыши по координатам {( 335 -70 )} относительно контрола {("Точка отсчета")}"
 "Клик левой кнопкой мыши"
 "Дождаться переключения вкладок"
;

PROCEDURE "Ввести в БП контекст" STRING IN aStr
 "Очистить строку БП"
 "Ввести строку {(aStr)}"
;

PROCEDURE "В настройке конфигурации выбираем: Документ\Выделение текста\Постоянное"
 @ "Настройка конфигурации" MODAL ( 
  "Путь до контрола: {(5)} раз вниз, {(9)} раз Tab"
  Если ( "Контрол в фокусе" ЯВЛЯЕТСЯ class::TvtComboBoxQS ) то
   ( "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('Постоянное')}" )
  иначе
   ( "Контрол в фокусе" . )
  "Кликаем Ок в Настройке конфигурации" 
 )
; 

WORDWORKER "Зажать кнопку и выполнить" STRING IN aName
// PROCEDURE 
//  "Установить курсор мыши по координатам {(10 60)} относительно контрола {(контрол::Text:push)}"
//  "Клик левой кнопкой мыши"
// ;

 "Выполнить {(@ ( WordToWork DO ) )} с зажатой клавишей {(aName)}"
;

PROCEDURE "Выделить несколько отдельно стоящих фрагментов текста"
 3 раза ( "Выделить слово справа"
 2 раза "Перейти на параграф вниз" )
 "Дождаться переключения вкладок"
;

PROCEDURE "Кликнуть левой кнопкой мыши в текстовом поле редактора"
 "Ставим указатель мыши на конец текущего параграфа редактора {(контрол::Text:push)} со смещением {(10 10)}"
 "Клик левой кнопкой мыши"
 "Дождаться переключения вкладок"
;

PROCEDURE "Нажать на кнопку 'Сравнить полные тексты редакций' в статусной строке"
 PROCEDURE Ищем_нужную_кнопку OBJECT IN l_It 
  l_It "Заголовок контрола" РАВНО 'Сравнить полные тексты редакций' ? (
   l_It "Кликнуть" )
 ; 
 "Для всех видимых элементов статусбара {(контрол::StatusBar:push)} выполнить" Ищем_нужную_кнопку
 "Дождаться переключения вкладок"
;

PROCEDURE "Кликнуть слева от первого документа списка (на месте плюсика)"
 "Установить курсор мыши по координатам {(18 20)} относительно контрола {(контрол::tvList:push)}"
 "Клик левой кнопкой мыши"
 "Дождаться переключения вкладок"
;

PROCEDURE "Ставим галочку в Настройке конфигурации\Настройки интерфейса\Открывать ссылки из документов\В новом окне"
 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола: {(1)} раз вниз, {(7)} раз Tab"
  3 раза ( 
   Если ( "Контрол в фокусе" "Заголовок контрола" РАВНО 'В новом окне' ) то
    ( "Кликаем Ок в Настройке конфигурации"
     выходим
    )
   иначе ( 
    "Нажать {('Down')}"
   )
  )
 )
; 

WORDWORKER "Открыть гиперссылку в новом окне и переключиться на первое окно, предварительно выполнив в новом окне следующие действия"
 TRY 
  "Открыть гиперссылку в новом окне, выполнить в нём {(@  ( WordToWork DO ) )} и переключиться на предыдущее окно"
 FINALLY  
  "Закрыть все окна кроме текущего"
 END
;

PROCEDURE "Сравнить с эталоном количество открытых окон Гаранта"
 [ 'Количество открытых окон: ' "Количество открытых окон Гаранта" IntToStr ] strings:Cat .
;

PROCEDURE "Нажать Enter, в появившемся модальном окне выделить все, выбрать пункт конт. меню 'Снять выделение', выбрать атрибут ИЛИ для выделенных значений и нажать ОК"
 PROCEDURE Действия
  "Выделить всё"
  "Снять выделение"
  "Выбрать атрибут ИЛИ"
  "Дождаться переключения вкладок"
  "Нажать Искать"
 ;
 "Обработать Enter модально" ( Действия )
;

PROCEDURE "Кликнуть по кнопке 'Ещё'"
 "Очистить строку БП"
 "Установить курсор мыши на VG-контрол {(контрол::MoreTab)}"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Сравнить все пункты комбобокса с эталоном" OBJECT IN ComboboxName
 "Убедиться, что контрол {(ComboboxName)} - комбобокс"
 VAR l_File
 script:FileName '.cmbx' sysutils:ChangeFileExt
 sysutils:ExtractFileName >>> l_File
 l_File ComboboxName pop:ComboBox:SaveItems
 l_File '%' tests:CheckEtalon
;

PROCEDURE "Сравнить с эталоном все значения комбобокса: Настройка конфигурации - Документы на контроле - Подтверждения - Действие при выборе изм. док. на контроле"
 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола (в подтверждениях или метках на полях): {(7)} раз вниз, {(1)} раз вниз, {(9)} раз Tab"
  "Сравнить все пункты комбобокса {("Контрол в фокусе")} с эталоном" 
 )
;

WORDWORKER "Установить документ на контроль. Переключиться на ТБ27 и выполнить" INTEGER IN aNumDoc

 PROCEDURE Действия
  "Выполнить {(@ ( WordToWork DO ) )} с переключённой базой"
 ; // Действия

 TRY
  "Выполнить {(@ Действия )} с документом {(aNumDoc)} установленным на контроль"
 FINALLY 
  "Закрыть синюю медаль документов на контроле"
 END
; // "Установить документ на контроль. Переключиться на ТБ27 и выполнить"

PROCEDURE "Зажав левую кнопку мыши выделить контекст, отпустить левую кнопку мыши и сравнить выделенный текст с эталоном"
 // "Установить курсор мыши на левый край текущего редактора"
 "Установить курсор мыши чуть правее левого края текущего редактора"
 THREAD (
  200 SLEEP
  "Установить курсор мыши на правый край текущего редактора"
  "Отпустить левую кнопку мыши"
  "Сравнить выделенный текст текущего редактора с эталоном"
 )
 "Зажать левую кнопку мыши"
;

WordAlias "левой кнопкой" "Клик левой кнопкой мыши"
WordAlias "правой кнопкой" "Клик правой кнопкой мыши"
WordAlias "колесиком" "Клик средней кнопкой мыши"

VOID WORDWORKER "Кликнуть мыши по гиперссылке и выполнить" IN aProc
 PROCEDURE Действия
   aProc DO
   3 раза ( "Дождаться переключения вкладок" )
   ( WordToWork DO )
 ;

 VAR l_Main
 "Сохранить активное окно" >>> l_Main
 TRY
  INTEGER VAR x
  INTEGER VAR y
  "Контрол в фокусе" pop:editor:CursorCoordsToScreen >>> y >>> x
  y 6 + >>> y
  x 20 - >>> x
  x y mouse:SetCursorPosition
  "Дождаться переключения вкладок"
 Если ( ( "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crHandPoint' )  
 ИЛИ ( "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crDefault' ) ) то
  ( Действия )
 иначе 
  ( false ?ASSURE 'Курсор мыши отличается от указанного! Видимо не попали на ссылку!' )
 FINALLY
  l_Main "Восстановить активное окно"
  3 раза ( "Дождаться переключения вкладок" )
  "Закрыть все окна кроме текущего"
 END
;

WORDWORKER "Кликнуть по гиперссылке и выполнить"
 "Кликнуть {(@ "левой кнопкой")} мыши по гиперссылке и выполнить" (
  ( WordToWork DO )
 )
;

WORDWORKER "Раскрыть первый баллон 'Информация об изменениях' в НК и выполнить"
 TRY
  "Кликнуть мышкой по ссылке 'информация об изменениях' в НК"
  ( WordToWork DO )
 FINALLY
  "Кликнуть мышкой по ссылке 'информация об изменениях' в НК"
  "Проверка, закрылся ли баллон 'Информация об изменениях' "
 END
;

PROCEDURE "Выделить 3 верхних параграфа и сравнить их с эталоном в формате RTF"
 "В начало документа"
 "Выделить {(3)} параграфов"
 "Сравнить выделенный текст текущего редактора с эталоном в формате {(CF_RTF)}"
; // "Выделить 3 верхних параграфа и сравнить их с эталоном в формате RTF"

PROCEDURE "Сравнить с эталоном введенный контекст в полях 'Слова в названии' и 'Раздел/Тема'"
 "Дождаться переключения вкладок"
 'Слова в названии: ' .
 "Сравнить абзац текущего редактора с эталоном"
 'Раздел/Тема: ' .
 "Установить фокус в поле 'Раздел/Тема' "
 "Сравнить абзац текущего редактора с эталоном"
;

PROCEDURE "Перейти по ссылке 'см. схему Коллективные договоры' и сравнить с эталоном заголовок окна оболочки"
 PROCEDURE Действия
  "Клик левой кнопкой мыши"
  "Дождаться переключения вкладок"
  "Сравнить заголовок окна оболочки с эталоном"
 ;

 "Установить курсор мыши по координатам {(300 605)} относительно контрола {("Форма с флешем")}"
 "Дождаться переключения вкладок"
 "Убедиться, что текущий индекс курсора мыши {('crDefault')} и выполнить {(@ Действия)}"
;

PROCEDURE "Включить контекстный фильтр в Левом навигаторе"
 "Дождаться переключения вкладок"
 OBJECT VAR "Кнопка контекстного фильтра"
 "Найти контрол {('ContextFilterButton')} на форме {("Левый навигатор")}" =: "Кнопка контекстного фильтра"
 Если ( "Узнать численную переменную {('Down')} объекта {("Кнопка контекстного фильтра")}" 0 ?!= ! ) то
 ( "Кнопка контекстного фильтра" "Кликнуть"
  "Дождаться переключения вкладок"
  )
;

PROCEDURE "Выключить контекстный фильтр в Левом навигаторе"
 "Дождаться переключения вкладок"
 OBJECT VAR "Кнопка контекстного фильтра"
 "Найти контрол {('ContextFilterButton')} на форме {("Левый навигатор")}" =: "Кнопка контекстного фильтра"
 Если ( "Узнать численную переменную {('Down')} объекта {("Кнопка контекстного фильтра")}" 0 ?!= ) то
 ( "Кнопка контекстного фильтра" "Кликнуть"
  "Дождаться переключения вкладок"
  )
;

PROCEDURE "Сравнить с эталоном номер позиции фокуса в списке (lister)"
 "Контрол в фокусе" "Узнать номер позиции фокуса в списке" .
;

PROCEDURE "Прокрутить колесо мыши 7 раз"
 "Прокрутить колесо мыши вниз {(7)} раз для контрола {(контрол::Editor:push)}"
;

PROCEDURE "Кликнуть по текущему полю и, зажав ЛКМ, и повести мышь вниз"
 "Установить курсор мыши чуть правее левого края текущего редактора"
 THREAD ( 300 SLEEP 
  OBJECT VAR "Комбобокс нижнего тулбара"
  "Найти контрол {(контрол::bt_enQuery_opSearchType)} на форме {("Главное окно")}" >>> "Комбобокс нижнего тулбара"
  "Установить курсор мыши по координатам {(200 10)} относительно контрола {("Комбобокс нижнего тулбара")}"
  "Отпустить левую кнопку мыши"
 )
 "Зажать левую кнопку мыши"
;

PROCEDURE "Сравнить  содержимое тулбара вкладки 'Синхронный просмотр' с эталоном"
 "Переключиться на вкладку {('Синхронный просмотр')}"
 "Сравнить  содержимое тулбара {(форма::SynchroView)} объекта {('tbfcSynchroViewTop')} с эталоном"
 "Сравнить  содержимое тулбара {(форма::SynchroView)} объекта {('tbTextFormTop')} с эталоном"
 "Сравнить  содержимое тулбара {(форма::SynchroView)} объекта {('tbefListTop')} с эталоном"
;

PROCEDURE "Кликнуть кнопку 'Похожие документы' на тулбаре вкладки 'Синхронный просмотр'"
 "Кликаем кнопку {(контрол::bt_enSynchroView_opSimilarDocuments)} на тулбаре" 
 "Дождаться переключения вкладок"
;

PROCEDURE "Переключиться на вкладку 'Синхронный просмотр' и сравнить контрол в фокусе с эталоном"
 "Переключиться на вкладку {('Синхронный просмотр')}"
 'Переключились на вкладку Синхронный просмотр. Фокус в : ' .
 "Контрол в фокусе" .
;

PROCEDURE "По первой ветке рубрикатора открываем документ НК РФ"
 "Построить список по первой ветке рубрикатора"
 "Найти документ {('Налоговый кодекс Российской Федерации (НК РФ) (с изменениями и дополнениями)')} в списке и открыть его"
;

PROCEDURE "Установить фокус в правую часть ППС (преемственный вид)"
 OBJECT VAR Focus_Right
 OBJECT VAR Parent_Control
 "Найти контрол {(контрол::ChildZone)} на форме {("Главное окно")}" =: Parent_Control
 "Найти контрол {(контрол::AttributeTree)} на форме {(Parent_Control)}" =: Focus_Right
 "Установить фокус в {(Focus_Right)}"
;

PROCEDURE "Установить фокус в левую часть ППС (преемственный вид)"
 OBJECT VAR Focus_Left
 OBJECT VAR Parent_Control
 "Найти контрол {(контрол::MainZone)} на форме {("Форма ППС")}" =: Parent_Control
 "Найти контрол {(контрол::AttributeTree)} на форме {(Parent_Control)}" =: Focus_Left
 "Установить фокус в {(Focus_Left)}"
;

PROCEDURE "##Установить фокус в левую часть ППС после переключения баз"
 OBJECT VAR l_Form
 ANYUSERTYPE форма::TreeAttributeSelect vcm:FindForm ?ASSURE 'Не найдена форма OldSituationSearch' 
 >>> l_Form
 l_Form .TefTreeAttributeSelect.AttributeTree pop:Control:SetFocus ?ASSURE
  'Не удалось поставить фокус в левую часть ППС после переключения баз' 
 "Установить фокус в левую часть ППС (преемственный вид)"
;

PROCEDURE "Сравнить с эталоном 3 верхних значения дерева" STRING IN aCtrl
 "Сравнить первого ребёнка дерева {(aCtrl)} с эталоном"
 2 раза ( "Стрелка вниз"
  "Сравнить первого ребёнка дерева {(aCtrl)} с эталоном" )
;

WORDWORKER "Выключить версионные комментарии и выполнить"
 "Выполнить {(@ ( WordToWork DO ) )} с выключенными версионными комментариями"
;

PROCEDURE "Дважды кликнуть в пустой ячейке таблицы"
 "Убедиться, что фокус в таблице"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(400 -40)}"
 "Двойной клик"
;

PROCEDURE "Включить 'Перенос по словам' в Левом навигаторе"
 "Дождаться переключения вкладок"
 OBJECT VAR "Кнопка 'Перенос по словам'"
 "Найти контрол {(контрол::bt_enTree_opWrap)} на форме {("Левый навигатор")}" =: "Кнопка 'Перенос по словам'"
 Если ( "Узнать численную переменную {('Down')} объекта {("Кнопка 'Перенос по словам'")}" РАВНО 0 ) то
 ( "Кнопка 'Перенос по словам'" "Кликнуть"
  "Дождаться переключения вкладок"
  )
;

PROCEDURE "Выключить 'Перенос по словам' в Левом навигаторе"
 "Дождаться переключения вкладок"
 OBJECT VAR "Кнопка 'Перенос по словам'"
 "Найти контрол {(контрол::bt_enTree_opWrap)} на форме {("Левый навигатор")}" =: "Кнопка 'Перенос по словам'"
 Если ( "Узнать численную переменную {('Down')} объекта {("Кнопка 'Перенос по словам'")}" РАВНО 1 ) то
 ( "Кнопка 'Перенос по словам'" "Кликнуть"
  "Дождаться переключения вкладок"
  )
;

WORDWORKER "Включить 'Перенос по словам' в левом навигаторе и выполнить"
 TRY
  "Включить 'Перенос по словам' в Левом навигаторе"
  ( WordToWork DO ) 
 FINALLY
  "Выключить 'Перенос по словам' в Левом навигаторе"
 END
;

PROCEDURE "Проверить, что в Оглавлении включился 'Перенос по словам'"
  "Перевести фокус в оглавление"
  "Развернуть текущее дерево"
  INTEGER VAR aNode
  0 >>> aNode
  100 раз ( 
   Если ( aNode контрол::ContentsTree:push "Высота ноды дерева" БОЛЬШЕ 40 ) то
     выходим 
    иначе (
    ++! aNode
   )
  aNode НЕРАВНО 100 ?ASSURE 'Высота нод дерева оглавления всегда меньше трех строк!' 
 )
;

PROCEDURE "Установить фокус на кнопку 'Ещё' в БП (кликом правой кнопкой мыши на ней)"
 "Установить курсор мыши на VG-контрол {(контрол::MoreTab)}"
 "Дождаться переключения вкладок"
 "Клик правой кнопкой мыши"
;

PROCEDURE "Убедиться, что группа Основные возможности в ОМ Инфарм не существует"
 "Найти контрол {('tvOperations')} на форме {("Главное окно")}" "Объект не существует?" ?ASSURE 'Нашли группу Основные возможности в ОМ Инфарм!' 
;

PROCEDURE "Включить в Настройках конфигирации: Поведение системы / Начало работы - Основное меню Инфарм"
 @ "Настройка конфигурации" MODAL ( 
  "Путь до контрола: {(2)} раз вниз, {(1)} раз Tab"
  "Дождаться переключения вкладок"
  "Сразу выбрать в текущем комбобоксе значение {('Основное меню Инфарм')}"
  "Дождаться переключения вкладок"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "В Редакторе стилей для стиля 'Таблицы (моноширинный)' выбрать размер шрифта равным 8"
 "Выполнить с редактором стилей" (  
  "Установить фокус в Дерево стилей"
  "Найти ссылку {('Таблицы (моноширинный)')} в дереве {(контрол::StyleTreeView)} и перейти по ней"
  "Установить фокус на кнопку Типа наследования группы Размер"
  2 раза  (  "Нажать {('Enter')}" )
  // Устанавливаем тип наследования - Собственный
  "Установить фокус в комбобокс выбора размера шрифта в измененном Редакторе стилей"
  "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('8')}"
  "Нажать Enter"
 )
;

PROCEDURE "Сравнить с эталоном хинт для первого значка дерева"
 "Установить курсор мыши по координатам {(40 20)} относительно контрола {(контрол::tvList:push)}"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
;

PROCEDURE "Сравнить с эталоном хинт для первого вхождения первого документа списка"
 "Установить курсор мыши по координатам {(70 60)} относительно контрола {(контрол::tvList:push)}"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
;

PROCEDURE "Сравнить с эталоном хинты для первых четырех вхождений первого документа списка"
 "Сравнить с эталоном хинт для первого вхождения первого документа списка"
 "Установить курсор мыши по координатам {(70 110)} относительно контрола {(контрол::tvList:push)}"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
 "Установить курсор мыши по координатам {(70 150)} относительно контрола {(контрол::tvList:push)}"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
 "Установить курсор мыши по координатам {(70 190)} относительно контрола {(контрол::tvList:push)}"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
;

PROCEDURE "Сравнить с эталоном хинты для значков редакций и вхождения в списке"
 ППР
 "в поле 'Слова в тексте' ввести {('Арбитражный процессуальный кодекс')}"
 "в поле 'Искать в недействующих редакциях' поставить {('Да')}"
 "Нажать Искать"
 "Развернуть текущее дерево"
 "Сравнить с эталоном хинт для первого вхождения первого документа списка"
 "Установить курсор мыши по координатам {(70 110)} относительно контрола {(контрол::tvList:push)}"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
 "Установить курсор мыши по координатам {(95 150)} относительно контрола {(контрол::tvList:push)}"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
;

PROCEDURE "Установить курсор мыши на изменённые параграфы в левой и правой частях СР и сравнить их хинты с эталоном"
 11 раз ( "Перейти на параграф вниз" )
 "Установить курсор мыши чуть правее левого края текущего редактора"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
 "##Отделить текст в эталоне"
 "Перевести фокус в левую редакцию"
 11 раз ( "Перейти на параграф вниз" )
 "Установить курсор мыши чуть правее левого края текущего редактора"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
;

WORDWORKER "Найти препарат и выполнить" STRING IN aName
 "Поиск лекарственного средства"
 "Ввести строку {(aName)}"
 "Нажать Искать"
 "Развернуть текущее дерево"
 ( WordToWork DO ) 
;

PROCEDURE "Выбрать вид информации 'Региональные акты' в комбобоксе 'Ещё'"
 "Установить фокус на кнопку 'Ещё' в БП (кликом правой кнопкой мыши на ней)"
 "Нажать Enter"
 "Убедиться, что выпадающий список 'Ещё' появился"
 2 раза ( "Нажать {('Down')}" )
 "Нажать Enter"
 // размеры оболочки: 1420 850
;

PROCEDURE "Раскрыть комбобокс вида информации 'Ещё' и закрыть его"
 "Установить фокус на кнопку 'Ещё' в БП (кликом правой кнопкой мыши на ней)"
 "Нажать Enter"
 "Убедиться, что выпадающий список 'Ещё' появился"
 "Нажать Esc"
;

PROCEDURE "Зажать 'Ctrl' и сбросить выделение последнего документа кликом мыши"
 "Установить курсор мыши по координатам {(100 250)} относительно контрола {(контрол::tvList:push)}"
 "Дождаться переключения вкладок"
 "Текущий индекс курсора мыши {('crHandPoint')}?"
 "Зажать кнопку {('Ctrl')} и выполнить" ( 
  "Клик левой кнопкой мыши" )
;

PROCEDURE "7 раз нажать 'Right' и убедиться, что фокус не ушел дальше поисковой строки БП"
 11 раз ( "Нажать {('Right')}" 
  "Контрол в фокусе" "Имя компонента" РАВНО контрол::ContextEdit ?ASSURE
   [ 'Фокус неожиданно оказался не в ContextEdit, а в : ' "Контрол в фокусе" "Имя компонента" ] 
 )
;

PROCEDURE "Установить фокус на кнопку 'Акты органов власти' в БП (кликом правой кнопкой мыши на ней)"
 "Установить курсор мыши на VG-контрол {('Акты органов власти')}"
 "Дождаться переключения вкладок"
 "Клик правой кнопкой мыши"
;

PROCEDURE "Установить фокус на кнопку 'Ещё' в БП в списке (кликом правой кнопкой мыши на ней)"
 "Перевести фокус в {(контрол::ContextEdit)} на форме {(форма::NewBaseSearch)}"
 "Подготовить главное окно к тесту (установить ему размеры {( 1000 700 )} ) и выполнить" (
  "Установить курсор мыши на VG-контрол {(контрол::MoreTab)}"
  "Дождаться переключения вкладок"
  "Клик правой кнопкой мыши"
 )
;

PROCEDURE "Выбрать вид информации 'Региональные акты' в комбобоксе 'Ещё' в списке (с помощью клавиатуры)"
 "Установить фокус на кнопку 'Ещё' в БП в списке (кликом правой кнопкой мыши на ней)"
 "Нажать Enter"
 "Убедиться, что выпадающий список 'Ещё' появился"
 5 раз ( "Нажать {('Down')}" )
 "Нажать Enter"
 "Дождаться переключения вкладок"
 // размеры оболочки: 1000 700
;

PROCEDURE "Кликнуть левой кнопкой мыши по заголовку 'Расширенные реквизиты документа'"
 "Не сохранять состояние редактора"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(0 -55)}"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Сравнить с эталоном состояние свернутости заголовка 'Расширенные реквизиты документа'"
 "Группа {('AT_NORM')} развернута в КЗ" .
;

WORDWORKER "Свернуть группы Контекстный поиск, Правовой календарь, Реквизиты рег. в Миюсте, Расш. реквизиты документы и выполнить"
 "Свернуть {(true)} группы {( [ 'AT_TEXT_NAME' 'AT_REG_IN_MU' 'AT_NORM' 'AT_LC_IN_DATE' ] )} и выполнить" ( 
  ( WordToWork DO )
 )
;

PROCEDURE "Установить фокус на заголовок 'Оглавление' в левом навигаторе"
 "Найти контрол {('field_ContentsTree')} на форме {("Левый навигатор")}" "Установить фокус"
;

WORDWORKER "Свернуть все заголовки групп КЗ ППР и выполнить"
 "Свернуть {(true)} группы {( [ 'AT_TEXT_NAME' 'AT_TYPE'  'AT_LC_IN_DATE' 'AT_REG_IN_MU' 'AT_NORM' ] )} и выполнить" ( 
  "##Дать тесту время для отрисовки контролов"
  ( WordToWork DO )
 )
;

PROCEDURE "Включить показ меток на саб-панели на форме и сравнить с эталоном их видимость" OBJECT IN aForm
  PROCEDURE PrintSubDescription OBJECT IN aSubDescription INTEGER IN aHandle
   aSubDescription РАВНО 'TevSubLayerDescriptor' ? (
    [ 'Блок ' aHandle IntToStr ' виден: ' aSubDescription subdescriptor:GetVisible ToPrintable ] strings:Cat .
   )
  ;

 PROCEDURE Действия
  "Дать системе перерисоваться"
  OBJECT VAR aCtrl
  "Найти контрол {(контрол::SubPanel)} на форме {(aForm)}" >>> aCtrl
  @ ( PrintSubDescription ) aCtrl IterateSubDecriptorsOnSubPanel
 ;

 "Выполнить {(@ Действия )} с включёнными метками на саб-панели"
;

PROCEDURE "В поле 'Слова в тексте' ввести длинный контекст, удалить его и убедиться, что КЗ не растянулось"
 "Перевести фокус в поле 'Слова в тексте' в ППР"
 INTEGER VAR aFirstStateCoordY
 "Координата Y текущего параграфа" =: aFirstStateCoordY
 "в поле 'Слова в тексте' ввести {('С нею был коротко знаком человек очень замечательный. Вы слышали о графе Сен-Жермене, о котором рассказывают так много чудесного. Вы знаете, что он выдавал себя за вечного жида, за изобретателя жизненного эликсира и философского камня, и прочая. Над ним смеялись, как над шарлатаном, а Казанова в своих Записках говорит, что он был шпион; впрочем, Сен-Жермен, несмотря на свою таинственность, имел очень почтенную наружность и был в обществе человек очень любезный. Бабушка до сих пор любит его без памяти и сердится, если говорят об нем с неуважением. Бабушка знала, что Сен-Жермен мог располагать большими деньгами. Она решилась к нему прибегнуть. Написала ему записку и просила немедленно к ней приехать.')}"
 "Удалить"
 "Перевести фокус в поле 'Тип' в ППР"
 ( "Координата Y текущего параграфа" aFirstStateCoordY - ) МЕНЬШЕ 114 ?ASSURE 'КЗ ППР растянуто!' 
;

OBJECT FUNCTION "Группа 'Мои комментарии' в левом навигаторе"
 "Группа {('Мои комментарии')} в левом навигаторе" =: Result
;

WORDWORKER "Свернуть группу 'Мои комментарии' и выполнить"
 Если ( "Группа 'Мои комментарии' в левом навигаторе" pop:HideField:IsExpanded ) то
  ( false "Группа 'Мои комментарии' в левом навигаторе" pop:HideField:SetExpanded ) 
 "Дождаться переключения вкладок"
 TRY
  ( WordToWork DO )
 FINALLY 
  "Дождаться переключения вкладок"
  Если ( "Группа 'Мои комментарии' в левом навигаторе" pop:HideField:IsExpanded ! ) то
  ( true "Группа 'Мои комментарии' в левом навигаторе" pop:HideField:SetExpanded )
 END
; 

PROCEDURE "Свернуть группу 'Мои комментарии', удалить комментарий и убедиться, что группа 'Оглавление' не пропала"
 "Свернуть группу 'Мои комментарии' и выполнить" (
  "Контекстной операцией удаляем комментарий" 
  "##Дать тесту время для отрисовки контролов"
  "Проверить, что контрол {("Группа 'Оглавление' в левом навигаторе")} видимый"
  "Перевести фокус в текст"
  "Ставим комментарий"
 )
;

PROCEDURE "Сравнить с эталоном значки на саб-панели формы " OBJECT IN aForm
 PROCEDURE PrintSubDescription OBJECT IN aSubDescription INTEGER IN aHandle
  [ 'Блок ' aHandle IntToStr ' на слое ' aSubDescription ToPrintable ': ' ] strings:Cat .
  'BitmapIndex: ' aSubDescription subdescriptor:GetDocumentBitmapIndex ToPrintable Cat .
  'BlockBitmapIndex: ' aSubDescription subdescriptor:GetBlockBitmapIndex ToPrintable Cat .
  'Visible: ' aSubDescription subdescriptor:GetVisible ToPrintable Cat .
  "Отделить текст в эталоне"
 ;

 "Дать системе перерисоваться"
 OBJECT VAR aCtrl
 "Найти контрол {(контрол::SubPanel)} на форме {(aForm)}" >>> aCtrl
 @ ( PrintSubDescription ) aCtrl IterateSubDecriptorsOnSubPanel
;


PROCEDURE "Сравнить с эталоном значки на саб-панели"
 "Сравнить с эталоном значки на саб-панели формы {("Главное окно")}"
;

USES
 @\Forms.script
;

PROCEDURE "Сравнить с эталоном значки на саб-панели вкладки"
 OBJECT VAR ChildForm
 "Найти окно по имени {(форма::Child)}" =: ChildForm  
 "Сравнить с эталоном значки на саб-панели формы {(ChildForm)}"
;

PROCEDURE "Прокрутить колесо мыши вниз раз для текущего контрола и сохранить результат в файл с расширением .shapes" INTEGER IN aCount
 aCount раз ( "Прокрутить колесо мыши вниз для контрола {("Контрол в фокусе")}" )
 "Контрол в фокусе" "Перерисовать редактор и сохранить результат в файл с расширением .shapes"
;

WordAlias "Прокрутить колесо мыши вниз раза для текущего контрола и сохранить результат в файл с расширением .shapes" "Прокрутить колесо мыши вниз раз для текущего контрола и сохранить результат в файл с расширением .shapes"

OBJECT FUNCTION "Сплиттер в левом навигаторе"
 PROCEDURE Действия_с_контролом OBJECT IN aCtrl
  Если ( aCtrl ЯВЛЯЕТСЯ class::TnpSplitter ) то
   ( aCtrl =: Result
   "Закончить перебор контролов" )
 ; // Действия_с_контролом

 "Выполнить для всех контролов {("Левый навигатор")}" Действия_с_контролом 
;

PROCEDURE "Нажать BackSpace и сравнить с эталоном оставшийся текст"
 "Дождаться переключения вкладок"
 "Нажать {('BkSp')}"
 "Сравнить абзац текущего редактора с эталоном"
;

WordAlias "Установить фокус в БП" "Установить фокус в БП после переключения баз"

PROCEDURE "Установить курсор мыши на сплиттер Левого навигатора"
 "Установить курсор мыши по координатам {(0 200 )} относительно контрола {("Сплиттер в левом навигаторе")}"
;

WORDWORKER "Кликнуть на ссылку 'Показать правила работы с контекстным поиском' и выполнить"
   PROCEDURE Действия_для_закрытия
    "Клик левой кнопкой мыши"
   ;

  PROCEDURE Действия_после_открытия
   "Клик левой кнопкой мыши"
   TRY
    ( WordToWork DO )
   FINALLY
    "Перевести фокус в поле 'Тип' в ППР"
    "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-250 -95)}"
    "Убедиться, что текущий индекс курсора мыши {('crHandPoint')} и выполнить {(@ Действия_для_закрытия )}"
   END
  ;

 "Свернуть {(false)} группы {( [ 'AT_TEXT_NAME' 'AT_TYPE' ] )} и выполнить" (
  "Дождаться переключения вкладок"
  "Перевести фокус в поле 'Тип' в ППР"
  "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-250 -95)}"
  "Убедиться, что текущий индекс курсора мыши {('crHandPoint')} и выполнить {(@ Действия_после_открытия )}"
 )
;

INTEGER FUNCTION "Количество открытых выпадающих списков TevDropTree"
 "Количество открытых выпадающих списков {('TevDropTree')}" =: Result
;

PROCEDURE "Сравнить с эталоном количество открытых выпадающих списков TevDropTree"
 'Количество открытых выпадающих списков: ' "Количество открытых выпадающих списков TevDropTree" ToPrintable Cat .
;

WORDWORKER "Развернуть группу и выполнить" ARRAY IN aName
 "Свернуть {(false)} группы {( aName )} и выполнить" ( WordToWork DO ) 
;

PROCEDURE "Установить фокус в поле 'Тип' в ППР"
 "Не сохранять состояние редактора"
 OBJECT VAR l_QC
 "Убедиться, что фокус в редакторе"
 "Контрол в фокусе" >>> l_QC
 "Группа {('AT_TYPE')} развернута в КЗ" ! ?
  ( 'AT_TYPE' false l_QC "Установить свернутость группы КЗ" )
 "Перевести фокус в поле 'Тип' в ППР"
;

PROCEDURE "Навести мышкой на чекбокс с выбором логического условия, на кнопку-ссылку с названием реквизита и сохранить результат в файл с расширением .shapes"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-120 -55)}"
 "Провести мышью вниз на {(70)} пикселей"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-180 -55)}"
 "Контрол в фокусе" pop:editor:CheckWithEtalon ( "Провести мышью вниз на {(70)} пикселей" )
;

PROCEDURE "Сравнить с эталоном все первые заголовки контрола tvTaxes в ОМ"
 "Перевести фокус в {(контрол::tvTaxes)} на форме {(форма::MainMenuNew)}"
 STRING VAR First_Value 
 "Заголовок текущего контрола" =: First_Value
 INTEGER VAR aIter
 0 =: aIter 
 "Установить курсор мыши по координатам {(10 -17)} относительно контрола {("Контрол в фокусе")}"
 10 раз (
  "Сравнить заголовок текущего контрола с эталоном"
  "Клик левой кнопкой мыши"
  ++! aIter
  aIter НЕРАВНО 10 ?ASSURE 'Или в ОМ слишком много нового или залипли!' 
  "Дождаться переключения вкладок"
  Если ( "Заголовок текущего контрола" РАВНО First_Value ) то
   выходим
 )
;

OBJECT FUNCTION  "Открыть гиперссылку в новом окне, записать его в стек и переключиться на предыдущее окно"
 VAR l_Main
 "Сохранить активное окно" >>> l_Main
 TRY
  "Открыть гиперссылку в новом окне"
  "Дождаться переключения вкладок"
  "Открытое окно" =: Result
 FINALLY
  l_Main "Восстановить активное окно"
  "Дождаться переключения вкладок"
 END
;

PROCEDURE "Открыть гиперссылку в новом окне, переключиться на первое окно и сравнить с эталоном активность кнопок навигации в НОВОМ окне"
 TRY
  OBJECT VAR New_Window
  "Открыть гиперссылку в новом окне, записать его в стек и переключиться на предыдущее окно" =: New_Window
  "Проверить активность кнопки {(контрол::bt_enHistory_opBack)} на форме {(New_Window)}"
  "Проверить активность кнопки {(контрол::bt_enHistory_opForward)} на форме {(New_Window)}"
 FINALLY
  "Закрыть все окна кроме текущего"
 END
;

PROCEDURE "Сравнить с эталоном наличие скроллера у контрола " OBJECT IN aCtrl
 'Вертикальный скроллер: ' aCtrl "Узнать, есть ли у контрола вертикальный скроллер" ToPrintable Cat .
;

PROCEDURE "Сравнить с эталоном наличие скроллера у Дерева оглавления"
 "Сравнить с эталоном наличие скроллера у контрола {(контрол::ContentsTree:push)}"
;

PROCEDURE "Открыть диалог Редактор стилей, найти стиль 'Напишите нам' и установить для него размер шрифта" STRING IN aSize
 PROCEDURE Изменяем_параметры_редактора_стилей
  "Установить фокус в Дерево стилей"
  "Перейти по ссылке {('Напишите нам')} в дереве {(контрол::StyleTreeView)}" ? (
   "Установить фокус в комбобокс выбора размера шрифта в Редакторе стилей"
   "Ввести строку {(aSize)}"
   "Нажать Enter"
  )
 ;

 "Выполнить с редактором стилей" ( Изменяем_параметры_редактора_стилей )
 "Дать системе перерисоваться"
;

PROCEDURE "Убедиться, что плашка 'Напишите нам' полностью видна"
 "##Дать тесту время для отрисовки контролов"
 "Проверить, что контрол {(контрол::edWriteToUs)} полностью виден"
;

PROCEDURE "Создать ссылку на документ (через главное меню) и сравнить с эталоном содержимое буфера"
 "##Дать тесту время для отрисовки контролов"
 'Фокус на: ' . 
 "Сравнить заголовок текущего контрола с эталоном"
 "Вызвать {('Файл/Создать ссылку на документ')} из главного меню"
 'В буфере: ' .
 "Записать содержимое буфера в эталон"
 "Отделить текст в эталоне"
;

PROCEDURE "Установить курсор мыши на последнюю строку выпадающего списка Ещё"
 INTEGER VAR aW
 INTEGER VAR aH
 "Выпадающий список Ещё в БП" "Померить ширину" =: aW 
 "Выпадающий список Ещё в БП" "Померить высоту" =: aH
 aW 20 - =: aW
 aH 20 - =: aH
 "Установить курсор мыши по координатам {( aW aH )} относительно контрола {("Выпадающий список Ещё в БП")}"
 "Дождаться переключения вкладок"
 "Нажать {('Down')}"
 "Убедиться, что выпадающий список 'Ещё' появился"
;

PROCEDURE "Нажать стрелку влево"
 "Нажать {('Left')}"
;

PROCEDURE "Построить ОИД для первой и последней редакции"
 "Открыть вкладку Список редакций"
 "Выделить текущий элемент" 
 "Нажать {('Home')}"
 "Выделить текущий элемент" 
 "Нажать {('End')}"
 "Выделить текущий элемент"
 "Построить обзор изменений для выбранных редакций"
;

INTEGER FUNCTION "Узнать количество видимых значков на саб-панели формы " OBJECT IN aForm
 "Дать системе перерисоваться"
 OBJECT VAR aCtrl
 "Найти контрол {(контрол::SubPanel)} на форме {(aForm)}" >>> aCtrl
 0 =: Result
 @ ( 
  OBJECT IN aSubDescription INTEGER IN aHandle
  aSubDescription subdescriptor:GetVisible ? ( ++! Result )
 ) aCtrl IterateSubDecriptorsOnSubPanel
;

PROCEDURE "Сравнить с эталоном количество видимых значков на саб-панели документа"
 "Узнать количество видимых значков на саб-панели формы {("Главное окно")}" .
;

WORDWORKER "Открыть диалог Настройка конфигурации и выполнить"
 @ "Настройка конфигурации" MODAL ( WordToWork DO )
;

PROCEDURE "Поставить галочку в чекбоксе Поиск - Подтверждения - Подтверждать построение списка"
 3 раза ( "Стрелка вниз" )
 2 раза ( "Разворачиваем текущий узел дерева" ) 
 "Нажать {('Tab')}"
 "Нажать {('Space')}"
;

PROCEDURE "Установить фокус в поле 'При количестве документов более' и ввести букву 'п'"
 "Нажать {('Tab')}"
 "Ввести строку {('п')}"
;

PROCEDURE "Снять галочку в чекбоксе Поиск - Подтверждения - Подтверждать построение списка"
 4 раза ( "Нажать {('Tab')}" )
 "Нажать {('Space')}"
;

PROCEDURE "Проверить, что в ППР и построенном списке есть вертикальный скроллер и он не пропадает"
 ППР
 6 раз ( "Дождаться переключения вкладок"
  "Проверить, что у контрола {(контрол::Editor:push)} есть вертикальный скроллер"
 )
 "Нажать Искать"
 6 раз ( "Дождаться переключения вкладок"
  "Проверить, что у контрола {(контрол::tvList:push)} есть вертикальный скроллер"
 )
;

PROCEDURE "Убедиться, что у флеша есть вертикальный скроллер"
 OBJECT VAR "Форма с флешем"
 "Контрол в фокусе" "Имя компонента" РАВНО 'Flash'  ?ASSURE
  [ 'Фокус не во флеше, а в ' "Контрол в фокусе" "Имя компонента" ' : ' "Контрол в фокусе" pop:object:ClassName ' !' ] 
 "Контрол в фокусе" "Получить родительскую форму"  =: "Форма с флешем"
 "Проверить, что у контрола {("Форма с флешем")} есть вертикальный скроллер"
;

PROCEDURE "Сравнить с эталоном количество открытых выпадающих списков TnscSubTree"
 2 раза ( "Дождаться переключения вкладок" )
 INTEGER VAR Count_TnscSubTree
 "Количество открытых выпадающих списков {('TnscSubTree')}" =: Count_TnscSubTree
 Если ( Count_TnscSubTree РАВНО 0 ) то 
  (  'Выпадающего списка нет!' . )
 иначе
  (
   Если ( Count_TnscSubTree РАВНО 1 ) то
    ( 'Выпадающий список виден!' . )
   иначе
    ( false  ?ASSURE [ 'Похоже, что видим много выпадающих списков, а именно: ' Count_TnscSubTree IntToStr ' !' ] 
    )
  )
;

PROCEDURE "Проверяем наличие выпадающего списка БП при вводе контекста" STRING IN aStr
  [ 'Контекст: '  aStr ' .' ] strings:Cat .
 "Очистить строку БП"
 CHAR VAR aContext_str
 INTEGER VAR i
 0 >>> i
 aStr string:Len раз ( 
  ''
  STRING VAR "Текущий контекст"
  i aStr string:[i] >>> aContext_str 
  aContext_str char:ToString Cat =: "Текущий контекст"
  "Ввести строку {("Текущий контекст")}" 
  "Сравнить с эталоном количество открытых выпадающих списков TnscSubTree"
  ++! i 
 ) 
 "Отделить текст в эталоне"
;

PROCEDURE "Ввести контекст и перебрать нажатием на стрелку вниз все доступные вырианты из выпадающего списка подсказок" STRING IN aStr
 "Очистить строку БП"
 "Ввести строку {(aStr)}"
 "Сравнить с эталоном количество открытых выпадающих списков TnscSubTree"
 20 раз ( "Нажать {('Down')}"
  "Дождаться переключения вкладок"
  "Заголовок текущего контрола" РАВНО aStr ?
   ( выходим )
  "Сравнить заголовок текущего контрола с эталоном" 
 )
;

PROCEDURE "Найти контекст в дереве оглавления" STRING IN aStr
 "##Запомнить положение фокуса" (
  "Перевести фокус в оглавление"
  "Развернуть текущее дерево"
  "Найти атрибут {(aStr)} в дереве {(контрол::ContentsTree)}"
 )
;

PROCEDURE "Ставим многострочный комментарий"
 "Ставим комментарий" 
 2 раза ( "Начинаем набирать {('наш_комментарий')}" 
  "Нажать Enter"
 )
;

PROCEDURE "Выделяем полностью комментарий"
 2 раза ( "Перейти на параграф вверх в редакторе {(контрол::Text:push)}" )
 "Дождаться переключения вкладок" 
 "Выделить {(2)} параграфов" 
;

PROCEDURE "Убедиться, что в структуре документа есть комментарий"
 "Выполнить {( @ ( "Перевести фокус в комментарии" ) )} и восстановить фокус"
;

WORDWORKER "Выполнить следующий сценарий и удалить комментарии у документа (##перед удалением перезаходим)" INTEGER IN aNumDoc 
 TRY
  ( WordToWork DO ) 
 FINALLY 
  "Закрыть F1."
  "Открываем {(aNumDoc)}"
  "В документе не должно быть комментариев"
 END
;

PROCEDURE "Зажать кнопку Ctrl и кликнуть второй документ в списке"
 "Зажать кнопку {('Ctrl')} и выполнить" (
  "Установить курсор мыши по координатам {(200 200)} относительно контрола {(контрол::tvList:push)}" 
  "Клик левой кнопкой мыши"
 ) 
;

PROCEDURE "Вставить комментарий с картинкой"
 73 раз ( "Перейти на параграф вниз" ) 
 "Копировать"
 "Перейти на параграф вниз" 
 "Ставим комментарий"
 "Вставить" 
;

PROCEDURE "Сравнить параграфа с эталоном в формате RTF" INTEGER IN aCountPara
 "Выделить {(aCountPara)} параграфов"
 "Сравнить выделенный текст текущего редактора с эталоном в формате {(CF_RTF)}"
;

WordAlias "Сравнить параграфов с эталоном в формате RTF" "Сравнить параграфа с эталоном в формате RTF"
WordAlias "Сравнить параграф с эталоном в формате RTF" "Сравнить параграфа с эталоном в формате RTF"

PROCEDURE "Выбрать пункт контекстного меню 'Изменить имя и комментарий закладки' для иконки закладки"
 "Установить курсор мыши по координатам {( 25 10 )} относительно контрола {(контрол::SubPanel:push)}"
  THREAD ( 1500 SLEEP
  "Установить курсор мыши по координатам {( 35 65 )} относительно контрола {(контрол::SubPanel:push)}"
  "Клик левой кнопкой мыши"
  )
 "Клик правой кнопкой мыши" 
;

WORDWORKER "Установить закладку на документ и выполнить" 
 "Сохранить текущий объект в Мои документы и сделать" (
  ( WordToWork DO ) 
)
;

PROCEDURE "Сравнить с эталоном текст и иерархию текущего контрола в фокусе"
 "Проверить иерархию вложенности текущего контрола"
 "Сравнить выделенный текст текущего редактора с эталоном"
;

PROCEDURE "Проверить контрол 'Настройка конфигурации/Настройки интерфейса/Количество последних открытых документов' и увеличить на 1"
 @ "Настройка конфигурации" MODAL (
 "Путь до контрола: {(1)} раз вниз, {(9)} раз Tab" 
  OBJECT VAR currentControl
  currentControl := "Контрол в фокусе"  
  "Убедиться, что текущий контрол {('TvtSpinEdit')}"
  "Проверить, активен ли контрол {(currentControl)}?"
  "Аккуратно сравнить с эталоном строковое значение свойства {('Hint')} объекта {(currentControl)}"
  'Значение по-умолчанию у спиннера равно ' currentControl pop:Control:Caption ToPrintable Cat .
  "Ввести строку {('6')}" 
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Открыть 6 документов и проверить их наличие в последних открытых документах в ОМ"
 INTEGER VAR LastOpenDocCount 
 LastOpenDocCount  := 6
 INTEGER VAR aNumDoc
 aNumDoc := 2001
 LastOpenDocCount раз ( "Открываем {(aNumDoc)}" 
  ++! aNumDoc 
 )
 ОМ
 "Перевести фокус в последние открытые документы"
 "Контрол в фокусе" "Количество элементов дерева" РАВНО LastOpenDocCount ?ASSURE
 'Количество последних открытых документов не совпало с настройками конфигурации!' 
;

CONST Список_в_основном_окне 'efList'
CONST Основное_окно 'nsMainWindow'
CONST Список_в_СКР 'efList'
CONST Текст_документа 'TextForm'
CONST Текст_документа_после_открытия_из_списка 'TextForm_1'
CONST Залипшее_основное_окно 'nsMainWindow_1'
CONST Текст_вкладки_Перевод 'TextForm_2'

PROCEDURE "Убедиться, что линия с медалями объекта полностью видна" STRING IN aObject
 "Вывести окно оболочки на первый план"
 OBJECT VAR ReminderLineMainList
 "Найти линию медалей на форме {(aObject)}" =: ReminderLineMainList
 "Проверить, что линия с медалями {(ReminderLineMainList)} полностью видна" 
;

PROCEDURE "Убедиться, что линия с медалями в списке основного окна полностью видна" 
 "Убедиться, что линия с медалями объекта {(Список_в_основном_окне)} полностью видна"
;

PROCEDURE "Убедиться, что линия с медалями для основного окна полностью видна" 
 "Убедиться, что линия с медалями объекта {( Основное_окно)} полностью видна"
;

PROCEDURE "Убедиться, что линия медалей объекта полностью видна и сравнить с эталоном ее размеры" STRING IN aReminderLine
 "Дождаться переключения вкладок"
 OBJECT VAR ReminderLineMainList
 "Найти линию медалей на форме {(aReminderLine)}" =: ReminderLineMainList
 ReminderLineMainList pop:RemindersLine:Width .
 ReminderLineMainList pop:RemindersLine:Height . 
 "Убедиться, что линия с медалями в списке основного окна полностью видна" 
;

PROCEDURE "Сравнить с эталоном хинт для медали" STRING IN aName
 OBJECT VAR aReminder
 aName byname:control:push =: aReminder
 aReminder .
 'Показ отображения хинта (ShowHint): ' aReminder pop:Reminder:ShowHint ToPrintable Cat .
 "Сравнить с эталоном хинт медали {(aName)}"
 "##Отделить текст в эталоне"
;

PROCEDURE "На форме сравнить с эталоном дельту отступа для медали и баллона" STRING IN aForm STRING IN aReminder
 INTEGER VAR t_medal
 INTEGER VAR t_ballon
 OBJECT VAR ReminderLine
 "Найти линию медалей на форме {( aForm )}" =: ReminderLine
 'Видимость линии медалей: ' ReminderLine pop:RemindersLine:Visible ToPrintable Cat .
 ReminderLine pop:RemindersLine:AbsTop =: t_medal
 OBJECT VAR l_Rem
 OBJECT VAR l_Balloon
 aReminder byname:control:push =: l_Rem
 'Видимость медали: ' l_Rem pop:Reminder:Visible ToPrintable Cat .
 l_Balloon := ( l_Rem pop:Reminder:PopupForm )
 'Видимость баллона: ' l_Balloon pop:Control:Visible ToPrintable Cat .
 l_Balloon pop:Control:Top =: t_ballon
 'Дельта: ' t_medal t_ballon  - ToPrintable Cat .
;

PROCEDURE "Кликнуть левой кнопкой мыши кнопку DropButton для раскрытия подсказки в БП"
 "Вывести окно оболочки на первый план"
 INTEGER VAR X
 INTEGER VAR Y
 "Контрол в фокусе" "Померить ширину" 5 + =: X
 5 =: Y
 "Установить курсор мыши по координатам {(X Y)} относительно контрола {("Контрол в фокусе")}"
 "Клик левой кнопкой мыши" 
;

PROCEDURE "Создать закладку на текущий документ ААК и сравнить с эталоном количество видимых значков на саб-панели"
 "Сохранить текущий объект в Мои документы и сделать" (
  "Поставить фокус в левую половину ААК"
  OBJECT VAR aParentForm
  "Контрол в фокусе" "Получить родительскую форму" =: aParentForm
  "Узнать количество видимых значков на саб-панели формы {(aParentForm)}" .
 )
;

WORDWORKER "##Отодвинуть медали основного окна и выполнить"
 "Переместить медаль {("Красная медаль с восклицательным знаком")} по координатам {( 500 500)} и выполнить {( @ ( WordToWork DO )  )}"
;

PROCEDURE "Открыть вкладку 'Меню', сделать ее плавающей и проверить, что ее высота находится в допустимых пределах (635-670 пикселей)"
/* PROCEDURE Действия
  OBJECT VAR "Форма вкладки"
  "Контрол в фокусе" 2 раза "Получить родительскую форму" =: "Форма вкладки"
  Если ( "Форма вкладки" "Померить высоту" "в интервале" ( 635 670 ) ) то 
   ( 'Высота отдоченной вкладки находится в допустимых пределах.' . )
  иначе
   ( 'Высота отдоченной вкладки вышла за допустимые пределы:' .
    "Форма вкладки" "Померить высоту" . )
 ;
 "Выполнить {(@ Действия )} с плавающей меню во вкладке и закрыть её"
 Этот вариант перестал подходить из-за "запоминания" размеров вкладки при уменьшении окна (вкладка соответствует размерам для ПЕРВОНАЧАЛЬНОГО размера окна)
 Костыль. Теперь отдочиваем ВРУЧНУЮ
*/
 "##Отодвинуть медали основного окна и выполнить" (
  "Меню во вкладке"
  "Дождаться переключения вкладок"
  "Установить курсор мыши по координатам {(50 -80)} относительно контрола {("Контрол в фокусе")}"
  THREAD ( 800 SLEEP 
   "Установить курсор мыши по координатам {(400 100)} относительно контрола {("Главное окно")}"
   "Отпустить левую кнопку мыши"
  )
  "Зажать левую кнопку мыши"
  2500 SLEEP 
  "Дождаться переключения вкладок"
  "Установить фокус в меню во вкладке" 
  OBJECT VAR "Форма вкладки"
  "Контрол в фокусе" 2 раза ( "Получить родительскую форму" ) =: "Форма вкладки"
  Если ( "Форма вкладки" "Померить высоту" "в интервале" ( 635 670 ) ) то 
   ( 'Высота отдоченной вкладки находится в допустимых пределах.' . )
  иначе
   ( 'Высота отдоченной вкладки вышла за допустимые пределы:' .
   "Форма вкладки" "Померить высоту" . )
  )
;

PROCEDURE "Кликнуть левой кнопкой мыши, нажать 'Home' и установить курсор мыши в область вкладок"
 OBJECT VAR District_tab
 "Найти область вкладок" =: District_tab
 "Клик левой кнопкой мыши"
 "Нажать {('Home')}"
 "##Дать тесту время для отрисовки контролов"
 "Установить курсор мыши по координатам {(5 5)} относительно контрола {(District_tab)}"
;  

PROCEDURE "Сравнить содержимое баллона зеленой медали МВ с эталоном"
 "Нажать на зелёную медаль МВ и проверить наличие баллона"
 "Дождаться переключения вкладок"
 "Установить фокус в баллон зелёной медали МВ"
 "Выделить всё"
 "Сравнить выделенный текст текущего редактора с эталоном"
;

PROCEDURE "Сравнить содержимое баллона зеленой медали МВ в списке с эталоном"
 "Нажать на зелёную медаль МВ в списке и проверить наличие баллона"
 "Установить фокус в баллон зелёной медали МВ в списке"
 "Выделить всё"
 "Сравнить выделенный текст текущего редактора с эталоном"
;

WORDWORKER "Открыть вкладку 'Конфигурации', отредактировать основную и расширенную конфигурации: Поведение системы -> Панель задач (Слева) и выполнить"
 TRY
  "Открыть вкладку 'Список конфигураций' и выполнить" (
   2 раза (
    PROCEDURE Действия_с_контролом OBJECT IN aCtrl
     ( aCtrl ЯВЛЯЕТСЯ class::TvtCheckBox ) 
     И ( aCtrl "Заголовок контрола" РАВНО 'Панель задач' ) ? (
      aCtrl "Установить фокус"
      "Дождаться переключения вкладок"
      "Поставить галочку в чекбоксе" 
     )
    ;
    @ оп::Контекстное_меню_конфигурации_Редактировать MODAL ( 
     "Путь до контрола: {(2)} раз вниз, {(2)} раз Tab"
     OBJECT VAR "GroupBox"
     "Контрол в фокусе" "Перейти к родительской форме" >>> "GroupBox"
     "Выполнить для всех контролов {("GroupBox")}" Действия_с_контролом 
     "Кликаем Ок в Настройке конфигурации"
    )
   "Стрелка вниз"
   )
  )
  ( WordToWork DO )
 FINALLY
  "Открыть вкладку 'Список конфигураций' и выполнить" (
   2 раза (
    "Ответить один раз Да для {(@ "Восстановить все настройки на вкладке Конфигурации" )}"
    "Стрелка вниз"
   )
  )
  "Дождаться переключения вкладок"
  OBJECT VAR "Кнопка 'Панель задач'"
  "Найти контрол {(контрол::bt_mo_Common_opTasksPanel)} на форме {("Главное окно")}" =: "Кнопка 'Панель задач'"
  ( "Узнать численную переменную {('Down')} объекта {("Кнопка 'Панель задач'")}" РАВНО 0 ! ) ? ( "Кнопка 'Панель задач'" "Кликнуть" ) 
 END
;

PROCEDURE "Сравнить следующие ссылки с эталоном"  INTEGER IN aC
 "Перевести фокус в текст"
 aC раза ( "Перейти к следующей ссылке"
  "Сравнить выделенный текст текущего редактора с эталоном" )
;

VOID WORDWORKER "##Запомнить ширину левого навигатора и выполнить"
 "Запомнить ширину левого навигатора и выполнить {(@ ( WordToWork DO ) )}"
;

PROCEDURE "Сравнить с эталоном состояние видимости верхнего края редактора текущего контрола"
 "##Дать тесту время для отрисовки контролов"
 'Верхний край редактора виден: ' "Контрол в фокусе" pop:Editor:AtTop ToPrintable Cat .
;

PROCEDURE "Сравнить с эталоном состояние видимости нижнего края редактора текущего контрола"
 "##Дать тесту время для отрисовки контролов"
 'Нижний край редактора виден: ' "Контрол в фокусе" pop:Editor:DocumentTailVisible ToPrintable Cat .
;

PROCEDURE "Выделяем текст в баллоне медали и, не отпуская левую кнопку мыши, переводим курсор мыши вниз"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {( -20 -20 )}"
 INTEGER VAR X
 INTEGER VAR Y
 "Запомнить позицию мыши" =: Y =: X
 THREAD ( 300 SLEEP 
  Y 30 + =: Y
  X Y "Восстановить позицию мыши"
  100 SLEEP
  "Отпустить левую кнопку мыши"
 )
 "Зажать левую кнопку мыши"
;

PROCEDURE "Кликнуть левой кнопкой мыши над кнопкой раскрытия выпадающего списка с историей запросов и сравнить с эталоном количество выпадающих списков TevDropTree"
 "Не сохранять состояние редактора"
 INTEGER VAR x
 INTEGER VAR y
 OBJECT VAR "Заголовок КЗ"
 "Найти контрол {(контрол::pnHeader )} на форме {("Главное окно")}" >>> "Заголовок КЗ"
 "Заголовок КЗ" "Померить ширину"  >>> x
 x 210 - >>> x
 65  >>> y
 "Установить курсор мыши по координатам {(x y)} относительно контрола {("Заголовок КЗ")}"
 "Дождаться переключения вкладок"
 "Клик левой кнопкой мыши"
 "Количество открытых выпадающих списков TevDropTree" .
 "Нажать Esc"
;

VOID WORDWORKER "Открыть диалог переписки с верхним пользователем и выполнить"
 "Открыть вкладку 'Совещание онлайн' и выполнить"  (
  "Выбрать первого пользователя, открыть диалог и выполнить {(@ ( WordToWork DO ) )}"
 )
;

PROCEDURE "Дождаться появления хинта и сравнить его текст с эталоном"
 "Дождаться появления хинта"
 "Сравнить текст хинта с эталоном"
;

PROCEDURE "Если попали в комбобокс 'Ссылки на документ' - выставить значение 'Не показывать'"
 "Заголовок текущего контрола" РАВНО 'Ссылки на документ' ?  (
  "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('Не показывать')}" ) 
;

PROCEDURE "Восстанавливаем настройки и возвращаемся в нужное место"
 "Ответить один раз Да для {(@ "Нажать кнопку Восстановить все в Настройке конфигурации" )}"
 "Нажать {('Tab')}" // восстанавливаем фокус
 "Путь до контрола: {(5)} раз вниз, {(10)} раз Tab"
;

PROCEDURE "Сделать эталон-скриншот контрола , отступив от левого верхнего угла и от правого нижнего угла" OBJECT IN aCtrl INTEGER IN aXLeft INTEGER IN aYLeft INTEGER IN aXRight INTEGER IN aYRight
 OBJECT  VAR Check_Control
 aCtrl =: Check_Control
 INTEGER VAR l_Handle
 Check_Control pop:Control:Handle >>> l_Handle
 INTEGER VAR X1
 INTEGER VAR Y1
 INTEGER VAR X2
 INTEGER VAR Y2
 X1 := 0
 Y1 := 0
 X1 aXLeft + =: X1
 Y1 aYLeft + =: Y1
  Check_Control "Померить ширину" =: X2
 Check_Control "Померить высоту" =: Y2
 X2 aXRight - =: X2
 Y2 aYRight - =: Y2
 STRING VAR l_FileName
 script:FileName '.bmp' sysutils:ChangeFileExt
 sysutils:ExtractFileName >>> l_FileName		
 l_FileName Y2 X2 Y1 X1 l_Handle ScreenShot2FileWithCheck
;

PROCEDURE "Сделать эталон-скриншот контрола , отступив от начальной точки и задав измеряемую область в " OBJECT IN aCtrl INTEGER IN aX0 INTEGER IN aY0 INTEGER IN aX1 INTEGER IN aY1
 OBJECT  VAR Check_Control
 aCtrl =: Check_Control
 INTEGER VAR l_Handle
 Check_Control pop:Control:Handle >>> l_Handle
 INTEGER VAR X1
 INTEGER VAR Y1
 INTEGER VAR X2
 INTEGER VAR Y2
 X1 := 0
 Y1 := 0
 X1 aX0 + =: X1
 Y1 aY0 + =: Y1
 // для удобства отладки задается Х1;У1 и ФИНАЛЬНАЯ точка Х2;У2, которая математически вычислит размеры скриншота 
 aX1 X1 - =: X2
 aY1 Y1  - =: Y2
 STRING VAR l_FileName
 script:FileName '.bmp' sysutils:ChangeFileExt
 sysutils:ExtractFileName >>> l_FileName		
 l_FileName Y2 X2 Y1 X1 l_Handle ScreenShot2FileWithCheck
;

PROCEDURE "Сделать эталон-скриншот контрола , отступив от правого нижнего угла" OBJECT IN aCtrl INTEGER IN aX INTEGER IN aY
 "Сделать эталон-скриншот контрола {(aCtrl)}, отступив от левого верхнего угла {(0 0)} и от правого нижнего угла {(aX aY)}"
;

PROCEDURE "Сделать эталон-скриншот контрола" OBJECT IN aCtrl
 "Сделать эталон-скриншот контрола {(aCtrl)}, отступив от правого нижнего угла {(0 0)}"
;

PROCEDURE "Сделать эталон-скриншот части контрола , от левого верхнего угла до координат " OBJECT IN aCtrl INTEGER IN aX INTEGER IN aY
 "Сделать эталон-скриншот контрола {(aCtrl)}, отступив от начальной точки {(0 0)} и задав измеряемую область в {(aX aY)}"
;

PROCEDURE "Сделать эталон-скриншот части контрола , отступив от левого верхнего угла  на и до координат " OBJECT IN aCtrl INTEGER IN aX0 INTEGER IN aY0 INTEGER IN aX1 INTEGER IN aY1
 "Сделать эталон-скриншот контрола {(aCtrl)}, отступив от начальной точки {(aX0 aY0)} и задав измеряемую область в {(aX1 aY1)}"
;

PROCEDURE "Сделать эталон-скриншот панели БП" 
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот контрола {("Форма БП")}, отступив от начальной точки {(0 0)} и задав измеряемую область в {(1110 92)}"
 // 1400 850
;

PROCEDURE "Сделать эталон-скриншот типов информации на вкладке БП" 
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот контрола {("Форма БП")}, отступив от начальной точки {(0 0)} и задав измеряемую область в {(1060 38)}"
// 1380 850
;

PROCEDURE "Сделать эталон-скриншот левой части редактора"
 "Дать системе перерисоваться"
 "Сделать эталон-скриншот контрола {(контрол::Text:push)}, отступив от начальной точки {(0 110)} и задав измеряемую область в {(125 564)}"
 // 1420 850
;

PROCEDURE "Выделить ячейку с картинкой в правой части ААК-Содержания"
 "Закрыть форму БП"
 "Поставить фокус в правую половину ААК-Содержания"
 13 раз ( "Стрелка вниз" )
 5 раз ( "Перейти на параграф вверх" ) 
 "Дать системе перерисоваться"
 "Выделить вторую ячейку первой строки в текущей таблице"
;

PROCEDURE "Сделать эталон-скриншот комбобокса и панели контексного поиска"
 "Сделать эталон-скриншот контрола {("Комбобокс для выбора страны в списке фармацевтических фирм")}, отступив от правого нижнего угла {(-74 -35)}"
;

PROCEDURE "##Подготовить БП к тесту (очистить введенный контекст и историю запросов)"
 ClearDocumentContextSearchHistory
 "Очистить строку БП"
;

PROCEDURE "Последовательно переключаться между редакциями НК, чтобы заполнить историю навигации только редакциями"
 11 раз ( "Стрелка вниз" )
;

PROCEDURE "Нажимать кнопку 'Назад', пока не закончится история"
 vcm:History:GetBackCount раз ( "Назад по истории без перерисовки" )
;

PROCEDURE "Сравнить с эталоном хинт закладки на саб-панели"
 "Установить курсор мыши по координатам {( 25 10 )} относительно контрола {(контрол::SubPanel:push)}"
 "Дождаться появления хинта и сравнить его текст с эталоном"
;

PROCEDURE "Выставить в 'Настройке конфигурации/Документ/Показывать историю изменений в документе' значение 'В развернутом виде'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(7)} раз Tab"
  "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('В развернутом виде')}"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Выделить 2 параграфа и сравнить выделенный текст с эталоном"
 2 раза ( "Перейти на параграф вниз" )
 "Переместиться в начало строки"
 cc:ExtFirstPage
 "Сравнить выделенный текст текущего редактора с эталоном"
;

VOID WORDWORKER "##Запомнить главное окно Гаранта и выполнить"
 VAR l_Main
 "Сохранить активное окно" >>> l_Main
 TRY
  ( WordToWork DO )
 FINALLY
  l_Main "Восстановить активное окно"
  2 раза ( "Дождаться переключения вкладок" )
  "Закрыть все окна кроме текущего"
 END
;

VOID WORDWORKER "Убедиться, что после следующих действий новое окно не открылось"
 "##Запомнить главное окно Гаранта и выполнить" (
  INTEGER VAR aHandle
  aHandle := "Сохранить активное окно" 
  ( WordToWork DO )  
  "Дождаться переключения вкладок"
  "Сохранить активное окно" РАВНО aHandle ?ASSURE 'Открылось новое окно, хотя не должно!' 
 )
;

VOID WORDWORKER "Убедиться, что после следующих действий новое окно открылось"
 "##Запомнить главное окно Гаранта и выполнить" (
  INTEGER VAR aHandle
  aHandle := "Сохранить активное окно" 
  ( WordToWork DO )  
  "Дождаться переключения вкладок"
  "Сохранить активное окно" НЕРАВНО aHandle ?ASSURE 'Новое окно не открылось, хотя должно!' 
 )
;

PROCEDURE "Выставить в 'Настройке конфигурации/Документ/По ссылке в инф. об изм. в тексте документа открывать' значение 'Текст редакции'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(6)} раз Tab"
  "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('Текст редакции')}"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "##Убедиться, что в списке несколько документов"
 STRING VAR aNameFirstDoc
 aNameFirstDoc := "Заголовок текущего контрола"
 "Стрелка вниз"
 "Заголовок текущего контрола" НЕРАВНО aNameFirstDoc ?ASSURE 'В списке мало документов!' 
 "Стрелка вверх"
;

PROCEDURE "Попереключаться между вкладками 'Комментарии' и 'Судебная практика' в синхронном просмотре списка"
 5 раз ( "Открываем вкладку 'Комментарии' в синхронном просмотре списка"
 "Открываем вкладку 'Судебная практика' в синхронном просмотре списка" )
;

PROCEDURE "Сравнить с эталоном родительскую форму для контрола в фокусе"
 "Дождаться переключения вкладок"
 "Контрол в фокусе" "Получить родительскую форму" .
;

PROCEDURE "Сравнить с эталоном имя текущего элемента вкладки Меню"
 "Получить имя текущего элемента дерева {(контрол::NavigatorTree)}"
; 



CONST "ГК РФ" 'Гражданский кодекс Российской Федерации (части первая, вторая и третья) (с изм. и доп. от 20 февраля, 12 августа 1996 г., 24 октября 1997 г., 8 июля, 17 декабря 1999 г., 16 апреля, 15 мая, 26 ноября 2001 г., 21 марта, 14, 26 ноября 2002 г., 10 января, 26 марта, 11 ноября, 23 декабря 2003 г.)'

PROCEDURE "Удалить все документы списка, кроме ГК РФ и сравнить с эталоном его вхождения"
 "Свернуть текущее дерево"
 "Контрол в фокусе" tree:GetItemsCount раз (
  "Дождаться переключения вкладок"
  Если ( "Заголовок текущего контрола" РАВНО "ГК РФ" ) то
   ( "Стрелка вниз" )
  иначе
   ( "Удалить элемент, подтвердив в диалоге удаление" )
 )
 "Сравнить развёрнутый список {(контрол::tvList)} с эталоном"
;

VOID WORDWORKER "Открыть сохранённый список из Моих документов и выполнить"
 "Открыть сохраненный объект из Моих документов и выполнить {(@ ( WordToWork DO ) )}"
;

PROCEDURE "Вычесть сохраненный список и сравнить с эталоном получившийся список" STRING IN aNameList
 @ ( оп::Список_Вычесть_список... ) MODAL (
  "Найти ссылку {(aNameList)} в дереве {(контрол::FoldersTree)} и перейти по ней"
  // Тут получаем Предупреждение, что получается пустой список (по-этому вычетания не случится). Обрабатывать такое пока не умеем
 )
 "Дождаться переключения вкладок"
 "##Отделить текст в эталоне"
 'Финальный список: ' .
 "Сравнить развёрнутый список {(контрол::tvList)} с эталоном"
;

PROCEDURE "Во вкладке Мои документы не должно остаться сохраненных объектов"
 PROCEDURE Действия
  2 раза ( "Дождаться переключения вкладок" ) 
  0 "Контрол в фокусе" tree:ChildrenCount раз ( 
   "Переместиться в начало дерева"
   "Развернуть текущее дерево"
   "Стрелка вниз"
   "Удалить объект и подтвердить удаление"
  )
 ;

 IsMyDocumentsEmpty ! ? (
  "Открыть мои документы и выполнить {(@ Действия)}"
  )
 IsMyDocumentsEmpty ?ASSURE 'Не смогли почистить вкладку Мои документы!' 
;


VOID WORDWORKER "##Удалить после теста все лишнее из Моих документов"
 TRY
  ( WordToWork DO )
 FINALLY
  "Во вкладке Мои документы не должно остаться сохраненных объектов"
 END
;

WORDWORKER "Убедиться, что появился диалог с кнопкой 'Ок' после следующих действий"
 "{(@  ( WordToWork DO ) )} и проверить наличие диалога с кнопкой Ок"
;

PROCEDURE "Сравнить с эталоном содержимое статусбара главного окна"
 'Содержимое статусбара главного окна: ' . 
 "##Дать тесту время для отрисовки контролов"
 "Сравнить статусбар окна {("Главное окно")} с эталоном"
;

PROCEDURE "Открыть диалог 'Регистрационные данные', установить фокус в поле 'Подтверждение пароля' и переместить окно на контрол hfTaxes"
 OBJECT VAR aObjectForScreenshot
 "Найти контрол {(контрол::hfTaxes)} на форме {("Главное окно")}" =: aObjectForScreenshot 
 @ ( "Изменить мои регистрационные данные" ) MODAL ( 
  "Найти контрол {('edConfirm')} на форме {("Диалог Регистрационные данные")}" "Установить фокус"
  INTEGER VAR X
  INTEGER VAR Y
  "Контрол в фокусе" "Координаты курсора относительно левого верхнего угла монитора" >>> Y >>> X
  Y 75 - =: Y
  "Установить курсор мыши по координатам {(X Y)}"
  THREAD ( 400 SLEEP 
   Если ( "Система x64?" ) то
    ( "Установить курсор мыши по координатам {( -70 0 )} относительно контрола {(aObjectForScreenshot )}" )
   иначе
    ( "Установить курсор мыши по координатам {( -120 0 )} относительно контрола {(aObjectForScreenshot )}" )
   "Отпустить левую кнопку мыши"
  )
 "Зажать левую кнопку мыши"
 600 SLEEP
 // "Ввести {('1')}"
 )
;

PROCEDURE "Сделать эталон-скриншот для контрола hfTaxes"
 OBJECT VAR aObjectForScreenshot
 "Найти контрол {(контрол::hfTaxes)} на форме {("Главное окно")}" =: aObjectForScreenshot 
 "Сделать эталон-скриншот части контрола {(aObjectForScreenshot)}, от левого верхнего угла до координат {(540 162)}"
;

PROCEDURE "Сравнить с эталоном текущие свойства для чекбокса 'Масштабируемый' в Редакторе стилей и снять с него галочку"
 "Выполнить с редактором стилей" (
  PROCEDURE Ищем_чекбокс_Масштабируемый_и_снимаем_галочку OBJECT IN aCtrl
   ( aCtrl РАВНО 'FontScalableCheckBox : TvtCheckBox' ) ? (
    "Установить фокус в {(aCtrl)}"
    "Дождаться переключения вкладок"
    "Сравнить с эталоном имя текущего контрола"   
    OBJECT VAR l_CheckBox
    "Контрол в фокусе" >>> l_CheckBox
    'Галочка в чекбоксе: ' "Получить состояние чекбокса {(l_CheckBox)}" ToPrintable Cat .
    'Активность:' l_CheckBox "Убедиться, что контрол активен" ToPrintable Cat .
    "Аккуратно сравнить с эталоном строковое значение свойства {('Hint')} объекта {(l_CheckBox)}"
    "Снять галочку в чекбоксе"
    "Закончить перебор контролов"
   ) 
  ;
  "Выполнить для всех контролов {( "Диалог Редактор стилей" )}" Ищем_чекбокс_Масштабируемый_и_снимаем_галочку
  "Нажать Enter"
 )
;

PROCEDURE "Установить курсор мыши относительно текстового курсора текущего редактора со смещением и сравнить с эталоном элементы редактора, которые перерисовались" INTEGER IN DeltaX INTEGER IN DeltaY
 OBJECT VAR Editor
 контрол::Text:push =: Editor
 Editor pop:Control:Repaint
 INTEGER VAR x
 INTEGER VAR y
 Editor pop:editor:CursorCoordsToScreen >>> y >>> x
 y DeltaY + >>> y
 x DeltaX + >>> x
 "##Дать тесту время для отрисовки контролов"
 Editor pop:editor:CheckWithEtalon ( "Установить курсор мыши по координатам {(x y)}" 50 SLEEP )
;

PROCEDURE "Изменить в редакторе стилей название шрифта на и его размер на для стиля" STRING IN aNameFont INTEGER IN aStyleFontSize STRING IN aStyleName 
 PROCEDURE Изменяем_параметры_редактора_стилей
  "Установить фокус в Дерево стилей"
  "Найти ссылку {(aStyleName)} в дереве {(контрол::StyleTreeView)} и перейти по ней"
  "Установить фокус в комбобокс выбора названия шрифта"
  "Сразу выбрать в текущем комбобоксе значение {(aNameFont)}" 
  "Установить фокус в комбобокс выбора размера шрифта в измененном Редакторе стилей"
  STRING VAR aStyleFontSizeStr
  aStyleFontSize IntToStr =: aStyleFontSizeStr 
  "Сразу выбрать в текущем комбобоксе значение {(aStyleFontSizeStr )}"
  "Нажать Enter"
 ;
  
 "Выполнить с редактором стилей" ( Изменяем_параметры_редактора_стилей )
 "Дать системе перерисоваться"
;

VOID WORDWORKER "Убедиться, что после выполнения указанных действий ширина ячейки таблицы не изменилась"
 "Убедиться, что фокус в таблице"
 INTEGER VAR aFirstCoordY
 "Контрол в фокусе" "Координаты курсора относительно левого верхнего угла монитора" DROP =: aFirstCoordY
 ( WordToWork DO ) 
 INTEGER VAR aModifiedCoordY
 "Контрол в фокусе" "Координаты курсора относительно левого верхнего угла монитора" DROP =: aModifiedCoordY
 ( aModifiedCoordY aFirstCoordY - ) МЕНЬШЕ 300 ?ASSURE 'Ячейка, после удаления коментария, не вернулась к своим первоначальным размерам!' 
;

PROCEDURE "Вставить в комментарий таблицу"
 "Вставить таблицу"
 2 раза ( cc:Up )
 "##Дать тесту время для отрисовки контролов"
 ( cc:Up )
 // "Убедиться, что фокус в таблице"
 // уводим курсор из комментария, в случае удаления комментария оказываемся в другой ячейке
;

PROCEDURE "Удалить единичный комментарий из оглавления"
 "Перевести фокус в комментарии"
 "Нажать Del"
 "Проверить, что нельзя перевести фокус в комментарии"
 "Перевести фокус в текст"
;

WORDWORKER "Игнорировать любую ошибку после действий"
 TRY
  WordToWork DO
 EXCEPT
  // гасим любое исключение
 END
 "Дождаться переключения вкладок"
;

PROCEDURE "Сравнить с эталоном контекстное меню выделенной ссылки"
 VAR Editor
 "Выделить слово слева"
 "Контрол в фокусе" >>> Editor
 INTEGER VAR x
 INTEGER VAR y
 Editor pop:editor:CursorCoordsToScreen >>> y >>> x
 y 5 + >>> y
 x 5 + >>> x
 x y mouse:SetCursorPosition
 "Дождаться переключения вкладок"
 x y Editor pop:Control:ScreenToClient "Сравнить контекстное меню для точки с эталоном"
;

PROCEDURE "Открыть вкладку в текущем окне и сравнить с эталоном иерархию вложенности текущего контрола после перехода"
 "Открыть вкладку на всё окно"
 "##Дать тесту время для отрисовки контролов"
 "Проверить иерархию вложенности текущего контрола"
;

PROCEDURE "Открыть НК по 'прямой' ссылке из БП"
 "Ввести строку {('НК')}"
 "Дождаться переключения вкладок"
 "Нажать {('Down')}"
 "Нажать Enter"
 "Убедиться, что фокус в редакторе"
;

WORDWORKER  "Построить список корреспондентов к фрагменту текста через вкладку ПЗ и выполнить"
 ПЗ
 THREAD ( 750 SLEEP
  THREAD ( 2000 SLEEP
   "Установить курсор мыши по координатам {(200 132)} относительно контрола {("Левый навигатор")}"
   "##Дать тесту время для отрисовки контролов"
   "Клик левой кнопкой мыши"
   "##Дать тесту время для отрисовки контролов"
   (  WordToWork DO )
  )
  "Установить курсор мыши по координатам {(100 132)} относительно контрола {("Левый навигатор")}"
  "##Дать тесту время для отрисовки контролов"
 )
 "Установить курсор мыши по координатам {(100 85)} относительно контрола {("Левый навигатор")}"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Открыть рубрикатор из ОМ" STRING IN aNameLink
 "Перевести фокус в {(контрол::tvReferences)} на форме {(форма::MainMenuNew)}"
 "Найти ссылку {(aNameLink)} в дереве {(контрол::tvReferences)} и перейти по ней"
;

PROCEDURE "Отделить фигурной чертой текст в эталоне"
 '~~~~~~~~~~~~~~~~' .
;

PROCEDURE "Кликнуть кнопку 'Онлайн-ресурсы' в ОМ"
 OBJECT VAR "Кнопка Онлайн-ресурсы"
 контрол::pbCourtsOnline:push =: "Кнопка Онлайн-ресурсы"
 "Проверить, что контрол {("Кнопка Онлайн-ресурсы")} видимый"
 "Кнопка Онлайн-ресурсы" "Объект существует?" ?ASSURE 'Контрол не найден' 
 "Кнопка Онлайн-ресурсы" "Кликнуть"
 3 раза ( "Дождаться переключения вкладок" )
;

PROCEDURE "Выбрать следующую новостную ленту"
 STRING VAR aFirstCaptionNewsLine
 "Заголовок текущего контрола" =: aFirstCaptionNewsLine
 "Стрелка вниз"
 "Заголовок текущего контрола" НЕРАВНО aFirstCaptionNewsLine ?ASSURE 'Переход к новой новостной ленте не произошёл!' 
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Проверить активность кнопок 'Сравнение редакций' и 'Построить обзор изменений' в Левом навигаторе"
 "Проверить активность кнопки {(контрол::bt_enEditions_opDoCompareEditions)} на форме {("Левый навигатор")}"
 "Проверить активность кнопки {(контрол::bt_enEditions_opBuildChangedFragments)} на форме {("Левый навигатор")}"
;

PROCEDURE "Сравнить с эталоном наличие галочки для всех редакций"
 INTEGER VAR l_Iteration
 l_Iteration := 0
 "Контрол в фокусе" tree:GetItemsCount раз (
  INTEGER VAR l_ImageIndex 
  BOOLEAN VAR l_Checked
  l_Iteration "Узнать индекс иконки в дереве {("Контрол в фокусе")}" >>> l_ImageIndex
  Если ( ( l_ImageIndex РАВНО 11 ) ИЛИ ( l_ImageIndex РАВНО 13 ) ИЛИ ( l_ImageIndex РАВНО 15 ) ) то
   ( [ 'Галочка у редакции ' l_Iteration IntToStr ' ЕСТЬ!' ] strings:Cat . )
  иначе
   ( [ 'Галочки у редакции ' l_Iteration IntToStr ' НЕТ!' ] strings:Cat . ) 
  ++! l_Iteration
 )
;

PROCEDURE "Сравнить с эталоном номер текущего документа"
 "##Запомнить положение фокуса" (
  "Перевести фокус в документ"
  'Номер открытого документа: ' DocumentText textform:GetDocumentID ToPrintable Cat .
 )
;

PROCEDURE "Кликнуть левой кнопкой мыши на текст верхней редакции"
 "##Дать тесту время для отрисовки контролов"
 "Установить курсор мыши по координатам {(70 100)} относительно контрола {("Левый навигатор")}"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Кликнуть левой кнопкой мыши на комбобокс верхней редакции"
 "##Дать тесту время для отрисовки контролов"
 "Установить курсор мыши по координатам {(30 100)} относительно контрола {("Левый навигатор")}"
 "Клик левой кнопкой мыши"
;

WORDWORKER "Вызвать Список редакций из статусной строки и выполнить"
 "Вызвать Список редакций из статусной строки и сделать {( @  ( WordToWork DO ) )}"
;

PROCEDURE "Изменить значения всех комбобоксов и чекбоксов в Настройках конфигурации - Поведение системы - Вкладки"
 PROCEDURE Действия_с_контролом OBJECT IN aCtrl
  ( aCtrl ЯВЛЯЕТСЯ class::TvtCheckBox ) ? (
   aCtrl "Установить фокус"
   "Поставить галочку в чекбоксе" 
   "Заголовок контрола {(aCtrl)}" .
   'Галочка в чекбоксе: ' "Получить состояние чекбокса {(aCtrl)}" ToPrintable Cat .
  )
  aCtrl ЯВЛЯЕТСЯ class::TvtComboBoxQS ? (
   aCtrl "Установить фокус"
   "Выбрать следующее значение в комбобоксе {("Контрол в фокусе")}"
   'Значение в комбобоксе: ' "Заголовок контрола {(aCtrl)}" ToPrintable Cat .
  )
 ;
 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола: {(2)} раз вниз, {(2)} раз Tab"
  OBJECT VAR "GroupBox"
  "Контрол в фокусе" "Перейти к родительской форме" >>> "GroupBox"
  "Выполнить для всех контролов {("GroupBox")}" Действия_с_контролом 
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Сравнить с эталоном значения всех комбобоксов и чекбоксов в Настройках конфигурации - Поведение системы - Вкладки"
 PROCEDURE Действия_с_контролом_после_восстановленя OBJECT IN aCtrl
  ( aCtrl ЯВЛЯЕТСЯ class::TvtCheckBox ) ? (
   "Заголовок контрола {(aCtrl)}" .
   'Галочка в чекбоксе: ' "Получить состояние чекбокса {(aCtrl)}" ToPrintable Cat .
  )
  aCtrl ЯВЛЯЕТСЯ class::TvtComboBoxQS ? (
   'Значение в комбобоксе: ' "Заголовок контрола {(aCtrl)}" ToPrintable Cat .
  )
 ;

 @ "Настройка конфигурации" MODAL (  
  "Путь до контрола: {(2)} раз вниз, {(2)} раз Tab"
  OBJECT VAR "GroupBox"
  "Контрол в фокусе" "Перейти к родительской форме" >>> "GroupBox"
  "Выполнить для всех контролов {("GroupBox")}" Действия_с_контролом_после_восстановленя 
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Заполнить обязательные поля ППО"
 OBJECT VAR l_QC
 "Убедиться, что фокус в редакторе"
 focused:control:push >>> l_QC
 'AT_USER_NAME' '1234' l_QC pop:QueryCard:SetAttribute
 'AT_USER_PHONE' '1234' l_QC pop:QueryCard:SetAttribute
 'AT_USER_PHONE#2' '1234' l_QC pop:QueryCard:SetAttribute
 'AT_EMAIL' '1234' l_QC pop:QueryCard:SetAttribute
 cc:LastPage
;

WORDWORKER "Отправить консультацию (на невалидной базе ТБ24) и выполнить"
 TRY
  wait:Ok
  TRY
   wait:Ok
   TRY
    OBJECT VAR "Кнопка ОК"
    контрол::bt_enResult_opOkExt "Главное окно" pop:Control:FindControlByName =: "Кнопка ОК"
    "Кнопка ОК" "Кликнуть"
    19 раз ( "Дождаться переключения вкладок" )
    // т.к. второй диалог поднимается с задержкой 
   FINALLY 
    waited:? ?ASSURE 'Не дождались первого диалога!'
   END
  FINALLY 
   waited:? ?ASSURE 'Не дождались второго диалога!'
  END
  ( WordToWork DO )
 FINALLY
  "Открыть вкладку 'Мои документы' и выполнить" (
   "Развернуть текущее дерево"
   "Перейти к концу"
   Если ( "Заголовок текущего контрола" НЕРАВНО 'Неподтвержденные' ) то
    ( "Ответить один раз Да для {(@ "Нажать Del")}" )
  )
 END
;

PROCEDURE "Открыть неотправленную консультацию из Моих документов и кликнуть левой кнопкой мыши в её тексте"
 "Открыть вкладку 'Мои документы' и выполнить" (
  "Развернуть текущее дерево"
  "Перейти к концу"
  Если ( "Заголовок текущего контрола" РАВНО 'Неподтвержденные' ) то
   ( false ?ASSURE 'Отправленной консультации нет!' 
    HALT )
  "Нажать Enter"
  "##Дать тесту время для отрисовки контролов"
  "Установить курсор мыши по координатам {(120 45)} относительно контрола {("Контрол в фокусе")}"
  "Клик левой кнопкой мыши"
 )
;

PROCEDURE "Нажать на клавиатуре стрелочку вниз"
 "Нажать {('Down')}"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Сделать эталон перерисованной части текстового редактора левой части ААК"
 "Дождаться переключения вкладок"
 контрол::Text:push pop:editor:CheckWithEtalon ( "Поставить фокус в левую половину ААК" )
;

PROCEDURE "Открыть вкладку 'Редакции' и отметить редакцию " STRING IN aNameRedaction 
 "Открыть вкладку Список редакций"
 "Найти атрибут {(aNameRedaction)} в дереве {(контрол::RedactionTree)}"
 "Выделить текущий элемент"
;

WORDWORKER "##Выставить диалогу чата размер и выполнить" INTEGER IN X INTEGER IN Y
 "Ставим форме {(форма::ChatWindow)} размеры {( X Y )} и {(@ ( WordToWork DO ) )}"
;

PROCEDURE "Вывести окно чата на передний план"
 "Узнать Handle диалога чата" "Восстановить активное окно"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Скопировать в буфер текст с вкладки 'Предупреждение'"
 "Дождаться переключения вкладок"
 "Перевести фокус в {(контрол::Viewer)} на форме {(форма::Warning)} типа {(Простое_предупреждение)}"
 "Выделить всё"
 "Копировать"
;

PROCEDURE "Вставить текст из буфера и кликнуть на ссылку в окне чата"
 "##Выставить диалогу чата размер {( 400 300 )} и выполнить" (
  "Вставить"
  "Вывести окно чата на передний план"  
  "Ставим указатель мыши на конец текущего параграфа редактора {(контрол::BottomEditor:push)} со смещением {( 5 -30 )}"
  "Дождаться переключения вкладок"
  "Дождаться появления хинта"
  "Клик левой кнопкой мыши"
 )
;

WordAlias "Выделить и скопировать текущий текст" "Выделить текст термина и скопировать его в буфер"

 PROCEDURE "Сравнить с эталоном, что введено в поле 'Слова в тексте'"
 "Убедиться, что фокус в редакторе"
 "Перевести фокус в поле 'Слова в тексте' в ППР"
 'В поле "Слова в тексте" введено: ' . 
 "Сравнить абзац текущего редактора с эталоном"
 "Отделить текст в эталоне"
; 

PROCEDURE "##Готовимся к выполнению теста K562611367"
 "Список всех документов"
 "Открыть фильтры"
 "Дождаться переключения вкладок"
 "Вызвать из главного меню {('Анализ/Фильтры/05. Книги')}"
 ОМ
;

PROCEDURE "Сравнить с эталоном настройки стиля " STRING IN aNameStyle
  PROCEDURE Действия_с_контролом OBJECT IN aCtrl
   Если ( ( aCtrl ЯВЛЯЕТСЯ class::TvtLabel )
    ИЛИ ( aCtrl ЯВЛЯЕТСЯ class::TElPopupButton )
    ИЛИ ( aCtrl ЯВЛЯЕТСЯ class::TvtCheckBox )
    ИЛИ ( aCtrl ЯВЛЯЕТСЯ class::TvtComboBoxQS )
    ИЛИ ( aCtrl ЯВЛЯЕТСЯ class::TScrollBox )
   ) то
   ( aCtrl "Имя компонента" .
   'Активность: ' aCtrl "Убедиться, что контрол активен" ToPrintable Cat . 
   'Видимость: ' aCtrl pop:Control:Visible ToPrintable Cat . 
    Если ( aCtrl ЯВЛЯЕТСЯ class::TeeCheckBox ) то
     ( 'Галочка: ' "Получить состояние чекбокса {(aCtrl)}" ToPrintable Cat . ) 
    иначе
     ( 'Заголовок: ' aCtrl pop:Control:Caption ToPrintable Cat .  )
   "Отделить текст в эталоне"
  ) 
;

 PROCEDURE Проверка_значений
  "Установить фокус в Дерево стилей"
  "Переместиться в начало дерева"
  "Найти ссылку {(aNameStyle)} в дереве {(контрол::StyleTreeView)} и перейти по ней"
  "Нажать {('Tab')}"
  OBJECT VAR "Настройки редактора стилей"
  "Контрол в фокусе" "Получить родительскую форму" >>> "Настройки редактора стилей"
  "Выполнить для всех контролов {("Настройки редактора стилей")}" Действия_с_контролом
 ;

 "Выполнить с редактором стилей" ( Проверка_значений )
;

PROCEDURE "Выбрать цвет и фон для стиля " STRING IN aColor STRING IN aBackColor STRING IN aNameStyle
 PROCEDURE Изменяем_параметры_редактора_стилей:_цвет_и_фон
  "Установить фокус в Дерево стилей"
  "Найти ссылку {(aNameStyle)} в дереве {(контрол::StyleTreeView)} и перейти по ней"
  "Установить фокус в комбобокс выбора цвета"
  "Сразу выбрать в текущем комбобоксе значение {(aColor)}"
  "Установить фокус в комбобокс выбора цвета фона"
  "Сразу выбрать в текущем комбобоксе значение {(aBackColor)}"
  "Кликаем Ок в Настройке конфигурации"
  ;

 "Выполнить с редактором стилей" ( Изменяем_параметры_редактора_стилей:_цвет_и_фон )
;

PROCEDURE "Установить всем настройкам тип наследования 'Собственный' и выставить все галочки в чекбоксах для стиля " STRING IN aNameStyle
  PROCEDURE Действия_с_контролом OBJECT IN aCtrl
   Если ( 
    ( aCtrl "Имя компонента" РАВНО контрол::FontNameInheritanceButton ) 
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontForeColorInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontBackColorInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontSizeInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontBoldInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontItalicInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontUnderlineInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontStrikeoutInheritanceButton )
   ) то 
   (  
    Если ( aCtrl "Заголовок контрола" РАВНО 'Р' ) то
     ( "Установить фокус в {(aCtrl)}"
      "Нажать Enter" ) 
    Если ( aCtrl "Заголовок контрола" РАВНО 'П' ) то
     ( "Установить фокус в {(aCtrl)}"
      "Нажать Enter" )
   )
  Если ( aCtrl ЯВЛЯЕТСЯ class::TvtCheckBox ) то (
   "Установить фокус в {(aCtrl)}" 
   "Поставить галочку в чекбоксе"  )
  "Кликаем Ок в Настройке конфигурации"
  ;

 PROCEDURE Изменяем_параметры_редактора_стилей:_наследование_и_чекбоксы
  "Установить фокус в Дерево стилей"
  "Найти ссылку {('Цветовое выделение')} в дереве {(контрол::StyleTreeView)} и перейти по ней"
  "Нажать {('Tab')}"
  OBJECT VAR "Настройки редактора стилей"
  "Контрол в фокусе" "Получить родительскую форму" >>> "Настройки редактора стилей"
  "Выполнить для всех контролов {("Настройки редактора стилей")}" Действия_с_контролом
 ;

 "Выполнить с редактором стилей" ( Изменяем_параметры_редактора_стилей:_наследование_и_чекбоксы )
;

PROCEDURE "Установить всем настройкам тип наследования 'Родительский' для стиля " STRING IN aNameStyle
  PROCEDURE Действия_с_контролом OBJECT IN aCtrl
   Если ( 
    ( aCtrl "Имя компонента" РАВНО контрол::FontNameInheritanceButton ) 
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontForeColorInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontBackColorInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontSizeInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontBoldInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontItalicInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontUnderlineInheritanceButton )
    ИЛИ ( aCtrl "Имя компонента" РАВНО контрол::FontStrikeoutInheritanceButton )
   ) то 
   (  
    Если ( aCtrl "Заголовок контрола" РАВНО 'П' ) то
     ( "Установить фокус в {(aCtrl)}"
      "Нажать Enter" ) 
    Если ( aCtrl "Заголовок контрола" РАВНО 'С' ) то
     ( "Установить фокус в {(aCtrl)}"
      "Нажать Enter" )
   )
   "Кликаем Ок в Настройке конфигурации"
  ;

 PROCEDURE Изменяем_параметры_редактора_стилей:_наследование
  "Установить фокус в Дерево стилей"
  "Найти ссылку {('Сравнение редакций. Добавленный фрагмент')} в дереве {(контрол::StyleTreeView)} и перейти по ней"
  "Нажать {('Tab')}"
  OBJECT VAR "Настройки редактора стилей"
  "Контрол в фокусе" "Получить родительскую форму" >>> "Настройки редактора стилей"
  "Выполнить для всех контролов {("Настройки редактора стилей")}" Действия_с_контролом
 ;

 "Выполнить с редактором стилей" ( Изменяем_параметры_редактора_стилей:_наследование )
;

PROCEDURE "Ищем некорректный контекст через БП (указываем 'Продолжить поиск')" STRING IN aIncorrectContext
 2 wait:Choice
 TRY
  "В БП ищем контекст {(aIncorrectContext)}"
 FINALLY
  waited:? ?ASSURE 'Не дождались диалога!'
 END
;

VOID WORDWORKER "Открыть диалог 'О программе' и выполнить"
 @ "О программе..." MODAL ( WordToWork DO )
;

VOID WORDWORKER "Открыть диалог 'Открыть документ по номеру' и выполнить"
 @ ( "Нажать {('Alt+N')}" ) MODAL ( WordToWork DO )
;

VOID WORDWORKER "Открыть диалог 'Условия использования' и выполнить"
 @ "Условия использования" MODAL ( WordToWork DO )
;

VOID WORDWORKER "Открыть модальный диалог 'Новая папка' и выполнить"
 "##Дать тесту время для отрисовки контролов" 
 @ (
  OBJECT VAR Parent
  "Контрол в фокусе" 2 раза ( "Получить родительскую форму" ) =: Parent
  "Найти контрол {(контрол::FoldersTree)} на форме {(Parent)}" "Установить фокус"
  "Создать папку" )
 MODAL ( 
  ( WordToWork DO ) 
  "Нажать Esc"
 )
;

VOID WORDWORKER "Открыть модальный диалог 'Мои документы (Сохранить как...)' и выполнить"
 @ ( "Сохранить в Мои документы" ) MODAL ( 
  ( WordToWork DO )
  "##Дать тесту время для отрисовки контролов" 
  "Нажать Esc"
 )
;

VOID WORDWORKER "Открыть диалог 'Анализ списка' и выполнить"
 @ "Анализ списка" MODAL ( WordToWork DO )
;

PROCEDURE "Установить фокус во вкладку синхронного просмотра документа Инфарма"
 OBJECT VAR Parent
 "Контрол в фокусе"  2 раза ( "Получить родительскую форму" ) =: Parent
 "Найти контрол {(контрол::Text)} на форме {(Parent)}" "Установить фокус"
 "Дождаться переключения вкладок"
;

VOID WORDWORKER "Открыть диалог 'Настройка страницы' и выполнить"
 @ "Настройка страницы" MODAL ( WordToWork DO )
;

VOID WORDWORKER "Открыть диалог 'Информация о картинке' и выполнить"
 @ ( "Нажать {('Alt+I')}" ) MODAL ( WordToWork DO )
;

VOID WORDWORKER "Открыть диалог 'Регистрационные данные' и выполнить"
 @ "Изменить мои регистрационные данные" MODAL ( WordToWork DO )
;

VOID WORDWORKER "Открыть диалог 'Включить Машину времени' и выполнить"
 @ "Включить Машину Времени (показать диалог)" MODAL ( WordToWork DO )
;

VOID WORDWORKER "Вернуться к текущему окну Гаранта, предварительно выполнив"
 INTEGER VAR "Первое главное окно" 
 0 >>> "Первое главное окно"
 "Сохранить активное окно" >>> "Первое главное окно" 
 ( WordToWork DO )
 "##Дать тесту время для отрисовки контролов"
 "Первое главное окно" "Восстановить активное окно"
;

PROCEDURE "Перетащить третий документ списка в сохраненный список во вкладке 'Мои документы'"
 "Открыть вкладку 'Мои документы' и выполнить" (
  "Развернуть текущее дерево"
  "Перевести фокус в список"
  "##Дать тесту время для отрисовки контролов"
  "Установить курсор мыши по координатам {(70 120)} относительно контрола {(контрол::tvList:push)}"
  THREAD ( 300 SLEEP
   OBJECT VAR "Дерево вкладки Мои документы"
   "Найти контрол {(контрол::FoldersTree)} на форме {("Главное окно")}"  =: "Дерево вкладки Мои документы"
   1 wait:Choice
   TRY
    "Установить курсор мыши по координатам {(100 30)} относительно контрола {("Дерево вкладки Мои документы")}"
    2 раза ( "##Дать тесту время для отрисовки контролов" )
    "Отпустить левую кнопку мыши"
   FINALLY
    waited:? ?ASSURE 'Не дождались диалога!'
   END
  )
  "Зажать левую кнопку мыши"
 )
;

PROCEDURE "Сравнить сохраненный список с эталоном"
 "Открыть сохранённый список из Моих документов и выполнить" (
  "Сравнить текущий список с эталоном"
 )
;

PROCEDURE "Проскроллировать мышкой текст вниз и убедиться, что скроллирование проходит корректно"
 OBJECT VAR aEditor
 контрол::Text:push =: aEditor
 "Прокрутить колесо мыши вниз {(30)} раз для контрола {(aEditor)}"
 "Узнать позицию вертикального скроллбара у контрола {(aEditor)}" БОЛЬШЕ 5 ?ASSURE 'Документ скроллируется до комментария!' 
;

VOID WORDWORKER "##Удалить залипший комментарий из документа , который получился по сценарию" STRING IN aNameDoc
 TRY
  ( WordToWork DO )
 FINALLY
  "Открыть список документов с комментариями"
  "Найти документ {(aNameDoc)} в списке и открыть его"
  "В документе не должно быть комментариев"
 END
;

PROCEDURE "Ввести строку (выпадающий список убрать)" STRING IN aContex
 "Ввести строку {(aContex)}"
 "##Дать тесту время для отрисовки контролов" 
 "Количество открытых выпадающих списков {('TnscSubTree')}" РАВНО 1 ? (
  "Нажать Esc"
 )
;

PROCEDURE "Убедиться, что в левой и правой редакциях горизонтальные скроллеры занимают правильные позиции"
 "##Дать тесту время для отрисовки контролов"
 "Перевести фокус в правую редакцию"
 "Позиция горизонтального скроллбара у текущего редактора" "в интервале" ( 1700 2300 ) ?ASSURE 'Позиция горизонтального скроллера в правой редакции вышла из диапазана!' 
 "Перевести фокус в левую редакцию"
 "Позиция горизонтального скроллбара у текущего редактора" "в интервале" ( 2400 3000 ) ?ASSURE 'Позиция горизонтального скроллера в левой редакции вышла из диапазана!' 
;

VOID WORDWORKER "Выбрать второй вариант в диалоге, выполнив"
 2 wait:Choice
 TRY
  ( WordToWork DO )
 FINALLY
  waited:? ?ASSURE 'Не дождались диалога!'
 END
;

WordAlias "Продолжить поиск, после появления диалога о некорректном контексте, после выполнения" "Выбрать второй вариант в диалоге, выполнив"

PROCEDURE "Открыть документ сразу в сравнении с предыдущей редакцией"
 "Выбрать второй вариант в диалоге, выполнив" (
  "Нажать Enter"
 )
 "Дождаться переключения вкладок"
;

PROCEDURE "Сделать вкладку 'Оглавление' автораспахивающейся"
 "Дождаться переключения вкладок"
 "Перевести фокус в оглавление"
 "Свернуть текущее дерево"
 "Сделать оглавление неплавающим"
 "Сделать левый навигатор автораспахивающимся"
 3 раза ( "Дождаться переключения вкладок" )
;

PROCEDURE "Сделать вкладку 'Оглавление' НЕавтораспахивающейся"
 "Перевести фокус в оглавление"
 "Сделать левый навигатор НЕавтораспахивающимся"
 3 раза ( "Дождаться переключения вкладок" )
 "Дать системе перерисоваться"
 "Перевести фокус в оглавление"  
;

PROCEDURE "Выделить первую строку в таблице (кликнуть слева от первой ячейки)"
 OBJECT VAR aSubPanel
 контрол::SubPanel:push =: aSubPanel 
 INTEGER VAR aWidth
 "Померить ширину {(aSubPanel)}" =: aWidth
 aWidth 3 + =: aWidth 
 "Установить курсор мыши по координатам {( aWidth  271 )} относительно контрола {(aSubPanel)}"
 "Дождаться появления хинта и сравнить его текст с эталоном"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Сравнить следующих изменений в СР с эталоном" INTEGER IN aCountFollowingChange
 "##Дать тесту время для отрисовки контролов"
 aCountFollowingChange раз (
  "Следующее изменение"
  'ParaID: ' "Узнать номер текущего параграфа" ToPrintable Cat .
  "Сравнить абзац текущего редактора с эталоном"
  "##Отделить текст в эталоне"
 )
;

PROCEDURE "Выделить пункт 6 статьи 1, статью 4 и статью 6 в оглавлении"
 "Перевести фокус в оглавление"
 "Развернуть текущее дерево"
 "Найти атрибут {('Статья 6. Несоответствие нормативных правовых актов о налогах и сборах настоящему Кодексу')} в дереве {(контрол::ContentsTree)}"
 "Зажать кнопку {('Ctrl')} и выполнить" (
  "Установить курсор мыши по координатам {(110 312)} относительно контрола {(контрол::ContentsTree:push)}"
  "Клик левой кнопкой мыши"
  "Установить курсор мыши по координатам {(110 152)} относительно контрола {(контрол::ContentsTree:push)}"
  "Клик левой кнопкой мыши"
 )
;

PROCEDURE "Кликнуть на медаль" STRING IN aReminderName
 aReminderName "Найти контрол по имени в стеке" "Кликнуть"
 "Проверяем, что баллон у медали {(aReminderName)} видим"
 "##Дать тесту время для отрисовки контролов"
;

VOID WORDWORKER "Выставить минимальную высоту редактору и выполнить"
 OBJECT VAR "Вкладка"
 INTEGER VAR "Первоначальная высота вкладки"
 INTEGER VAR "Первоначальная высота редактора"
 INTEGER VAR "Конечная высота редактора"
 "Конечная высота редактора" := 0
 контрол::ChildZonePanel "Главное окно"  pop:Control:FindControlByName =: "Вкладка"
 "Вкладка" "Объект существует?" ?ASSURE 'Вкладка не найдена' 
 TRY
  "Вкладка" "Померить высоту" =: "Первоначальная высота вкладки"
  контрол::Text:push "Померить высоту" =: "Первоначальная высота редактора"
  "Первоначальная высота редактора" "Первоначальная высота вкладки" + =: "Конечная высота редактора"
  "Установить высоту контрола {("Вкладка")} в {("Конечная высота редактора")} пикселей"
  "##Дать тесту время для отрисовки контролов"
  ( WordToWork DO )
 FINALLY
  "Установить высоту контрола {("Вкладка")} в {("Первоначальная высота вкладки")} пикселей"
 END
;

PROCEDURE "Удалить строки до и после таблицы в пользовательском комментарии"
 "Перейти на параграф вверх"
 "Нажать Del"
 3 раза ( "Перейти на параграф вниз" )
 "Нажать Del"
;

VOID WORDWORKER "Создать новую папку и выполнить"
 "##Дать тесту время для отрисовки контролов"
 TRY
  "Создать папку"
  ( WordToWork DO ) 
 FINALLY
  "Удалить сохраненный объект из вкладки 'Мои документы'"
 END
;

PROCEDURE "Установить левому навигатору обычную ширину и сделать скриншот области поля ввода имени элемента"
 "Установить ширину контрола {("Левый навигатор")} в {(300)} пикселей"
 OBJECT VAR aElementName
 "Контрол в фокусе" =: aElementName 
 "Установить фокус в БП"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(aElementName)}, от левого верхнего угла до координат {(100 20)}"
;

PROCEDURE "Выделить мышкой текст текущего редактора (от правого к левому краю)"
 "Установить курсор мыши на правый край текущего редактора" 
 INTEGER VAR X
 INTEGER VAR Y
 "Запомнить позицию мыши" =: Y =: X
 "Установить курсор мыши на левый край текущего редактора"
 THREAD (
  300 SLEEP 
  X Y "Восстановить позицию мыши"
  100 SLEEP
  "Отпустить левую кнопку мыши"
 )
 "Зажать левую кнопку мыши"
;

VOID WORDWORKER "Поставить документ на контроль и выполнить" INTEGER IN aNumDoc
 "Выполнить {(@ ( WordToWork DO ) )} с документом {(aNumDoc)} установленным на контроль"
;

PROCEDURE "Установить курсор мыши на ссылку 'Изменить дату или выключить Машину времени' в баллоне зелёной медали МВ"
 "Установить фокус в баллон зелёной медали МВ"
 "Перейти на параграф вниз"
 VAR Editor
 VAR x
 VAR y
 "Контрол в фокусе" >>> Editor
 Editor pop:editor:ParaMiddleCoordsToScreen >>> y >>> x
 y 3 + >>> y
 x y mouse:SetCursorPosition
 ProcessMessages
;

PROCEDURE "Убедиться, что на передний план не вышло внешнее окно"
 1000 SLEEP // - это чтобы успеть перевести фокус на другое окно в целях тестирования слов :)
 Если ( GetForegroundWindow wnd:WindowIsMine ! ) то
  ( false ?ASSURE 'На передний план вышло внешнее окно' )
;

PROCEDURE "Перенести курсор мыши на первый значок документа в списке"
 OBJECT VAR "Значок документа"
 "Перевести фокус в список"
 "Контрол в фокусе" =: "Значок документа"
 "Установить курсор мыши по координатам {(40 20)} относительно контрола {("Значок документа")}"
 "Дождаться переключения вкладок"
;

PROCEDURE "Проверить, что фокус находится в правой редакции"
 "Дождаться переключения вкладок"
 Если ( "Контрол в фокусе" "Получить родительскую форму" ЯВЛЯЕТСЯ  class::TRightEditionForm ) то
  ( 'Фокус в правой редакции' . )
 иначе
  ( 'Фокус в: ' "Контрол в фокусе" "Получить родительскую форму" ToPrintable Cat . )
;

PROCEDURE "Проверить состояние свернутости (false) / развернутости (true) всех групп в КЗ ППР"
 'Контекстный поиск:' . 
 "Группа {('AT_TEXT_NAME')} развернута в КЗ" .
 'Основные реквизиты документа:' .
 "Группа {('AT_TYPE')} развернута в КЗ" .
 'Правовой календарь:' .
 "Группа {('AT_LC_IN_DATE')} развернута в КЗ" .
 'Реквизиты регистрации в Минюсте:' .
 "Группа {('AT_REG_IN_MU')} развернута в КЗ" .
 'Расширенные реквизиты документа:' . 
 "Группа {('AT_NORM')} развернута в КЗ" .
;

PROCEDURE "Выбрать в КМ жёлтой медали пункт 'Показать текст предупреждения'"
 "Установить курсор мыши на линию медалей формы {(Текст_документа)} со смещением {( 20 20 )}"
 THREAD ( 600 SLEEP 
  "Установить курсор мыши на линию медалей формы {(Текст_документа)} со смещением {( 40 60 )}"
  "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
 ) 
 "Клик правой кнопкой мыши" 
 "##Дать тесту время для отрисовки контролов"
;

WordAlias "Выбрать в КМ жёлтой медали пункт 'Скрыть текст предупреждения'" "Выбрать в КМ жёлтой медали пункт 'Показать текст предупреждения'"

PROCEDURE "Сравнить с эталоном видимость кнопки в БП" STRING IN aNameType
 "Установить фокус в БП"
 OBJECT VAR l_VG
 aNameType "Контрол в фокусе" pop:Control:GetParentForm pop:Control:FindVGControlByName =: l_VG
 [ 'Видимость кнопки ' aNameType ': ' l_VG vg:control:Visible ToPrintable ] strings:Cat .
;

PROCEDURE "Переключиться на раздел 'Кадровые вопросы' в ОМ на базе mini и сделать скриншот этого раздела"
 "Установить фокус в БП после переключения баз"
 "Установить курсор мыши по координатам {( 220 -10 )} относительно контрола {(контрол::tvTaxes:push)}"
 TRY
  "Клик левой кнопкой мыши"
  "##Дать тесту время для отрисовки контролов"
  "Сделать эталон-скриншот для контрола hfTaxes"
 FINALLY
  4 раза (
   "##Дать тесту время для отрисовки контролов"
   "Клик левой кнопкой мыши"
  )
 END
;

PROCEDURE "Выбрать в календаре поля 'Дата принятия: По' любой невисокосный год"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(250 -10)}"
 "Клик левой кнопкой мыши"
 2 раза ( "##Дать тесту время для отрисовки контролов" )
 THREAD ( 600 SLEEP
  "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(50 -15)}"
  "Клик левой кнопкой мыши"
 )
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(50 15)}"
 "Клик левой кнопкой мыши"
 2 раза ( "##Дать тесту время для отрисовки контролов" )
;

PROCEDURE "Сделать эталон-картинку левой части ААК-Содержания"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, от левого верхнего угла до координат {(440 560)}"
 // 1450 880
;

PROCEDURE "Сделать эталон-скриншот ссылки 'Информация об изменениях'"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(330 65)} и до координат {(600 100)}"
 // НК 1350 800
;

PROCEDURE "Сделать эталон-скриншот иконки версионного комментария в баллоне 'Информация об изменениях'"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(16 104)} и до координат {(42 134)}"
 // НК 1350 800
;

PROCEDURE "Сделать эталон-скриншот редактора от координат до " INTEGER IN X0 INTEGER IN Y0 INTEGER IN X1 INTEGER IN Y1
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(X0 Y0)} и до координат {(X1 Y1)}"
;

PROCEDURE "Свернуть и развернуть правый навигатор"
 "##Дать тесту время для отрисовки контролов"
 "Сделать правый навигатор свернутым"
 "##Дать тесту время для отрисовки контролов"
 "Сделать правый навигатор развернутым"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Сделать эталон-скриншот атрибута 'ФИО пользователя' в КЗ ППО"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Editor:push)}, отступив от левого верхнего угла  на {(100 40)} и до координат {(277 80)}"
 // 1400 800
;

PROCEDURE "Кликнуть левой кнопкой мыши по сниппету третьего документа с зажатой клавишей " STRING IN aButton
 "Установить курсор мыши по координатам {(120 280)} относительно контрола {(контрол::tvList:push)}"
 "Зажать кнопку {(aButton)} и выполнить" ( 
  "Клик левой кнопкой мыши"
 )
;

PROCEDURE "Кликнуть левой кнопкой мыши по сниппету второго документа"
 "##Дать тесту время для отрисовки контролов"
 "Установить курсор мыши по координатам {(120 180)} относительно контрола {(контрол::tvList:push)}"
 "Клик левой кнопкой мыши"
;  

PROCEDURE "Сделать эталон-скриншот левой части списка"
 "Сделать эталон-скриншот части контрола {(контрол::tvList:push)}, от левого верхнего угла до координат {(200 400)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот заголовков юридического и версионного комментариев в НК"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(14 100)} и до координат {(490 177)}"
 // НК 1350 800
;

PROCEDURE "Сделать эталон-скриншот правого колонтитула в Предварительном просмотре"
 "Сделать эталон-скриншот части контрола {(контрол::PreviewPanel:push)}, отступив от левого верхнего угла  на {(700 30)} и до координат {(1240 90)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот пользовательского комментария"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, от левого верхнего угла до координат {(300 90)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот первой ссылки в правой части ААК-Содержания"
 OBJECT VAR "Правая часть ААК"
 "Найти контрол {(контрол::pnRight)} на форме {("Главное окно")}" =: "Правая часть ААК"
 "Правая часть ААК" "Объект существует?" ?ASSURE 'Не найдена правая часть ААК-Содержания' 
 "Сделать эталон-скриншот части контрола {("Правая часть ААК")}, отступив от левого верхнего угла  на {(145 7)} и до координат {(875 25)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот списка встроенных объектов"
 OBJECT VAR "Список встроенных объектов"
 "Найти контрол {(контрол::lstExternalObjects)} на форме {("Левый навигатор")}" =: "Список встроенных объектов"
 "Список встроенных объектов" "Объект существует?" ?ASSURE 'Не найден список встроенных объектов' 
 "Сделать эталон-скриншот части контрола {("Список встроенных объектов")}, от левого верхнего угла до координат {(265 60)}"
 // Конституция (+перенос по словам) 1350 800
;

PROCEDURE "Сделать эталон-скриншот для проверки обрамления окон системы"
 "Сделать эталон-скриншот части контрола {(контрол::SubPanel:push)}, отступив от левого верхнего угла  на {(-3 -3)} и до координат {(50 455)}"
 // 800 600
;

PROCEDURE "Сделать эталон-скриншот левой части списка (на 2 документа)"
 "Сделать эталон-скриншот части контрола {(контрол::tvList:push)}, от левого верхнего угла до координат {(160 117)}"
 // 1440 900
;

PROCEDURE "Сделать эталон-скриншот логических условий в ППР"
 "Сделать эталон-скриншот части контрола {(контрол::Editor:push)}, отступив от левого верхнего угла  на {(240 180)} и до координат {(397 231)}"
 // 1350 800
;

USES
 @\ExCtrls.script
;

PROCEDURE "Вернуться в поле 'Слова в названии' по стрелочке вверх"
 OBJECT VAR КЗ 
 "Контрол в фокусе" >>> КЗ 
 30 раз  ( 
  VAR "Предыдущий параграф"
  КЗ pop:Editor:PushParaFromCursor >>> "Предыдущий параграф"
  "Стрелка вверх"
  "Контрол в фокусе" "Узнать, в каком поле КЗ стоит фокус" РАВНО 'AT_TEXT_NAME' ? (
   выходим
  )
  VAR "Текущий параграф"
  КЗ pop:Editor:PushParaFromCursor >>> "Текущий параграф"
  Если ( "Предыдущий параграф" "Текущий параграф" Para:IsSame ) то 
   ( 
    false ?ASSURE 'Не смогли вернуться в поле Слова в названии (залипли на одном поле в КЗ)!' 
   ) 
 )
;

PROCEDURE "Сделать эталон-скриншот примера пользовательского комментария в Редакторе стилей"
 "Сделать эталон-скриншот части контрола {("Текстовое окно редактора стилей" )}, отступив от левого верхнего угла  на {(10 84)} и до координат {(550 125)}"
;

PROCEDURE "Сделать эталон-скриншот заголовка группы 'Контекстный поиск' в ППР"
 "Сделать эталон-скриншот части контрола {(контрол::Editor:push)}, от левого верхнего угла до координат {(355 44)}"
 // 1350 800
;

PROCEDURE "Скопировать в буфер обмена большой отрывок текста"
 "Копировать в буфер строку {('Я  жил  недорослем,  гоняя  голубей  и  играя  в  чахарду  с  дворовыми мальчишками.  Между   тем   минуло  мне  шестнадцать  лет.  Тут  судьба  моя переменилась. Однажды   осенью  матушка  варила  в  гостиной  медовое  варенье  а  я, облизываясь, смотрел  на кипучие  пенки.  Батюшка  у  окна читал  Придворный Календарь, ежегодно им получаемый.  Эта книга  имела  всегда сильное на него влияние: никогда  не перечитывал он ее без особенного участия, и  чтение это производило  в нем  всегда  удивительное волнение  желчи.  Матушка,  знавшая наизусть все его свычаи и обычаи, всегда старалась засунуть несчастную книгу как можно подалее, и таким образом Придворный Календарь  не попадался ему на глаза  иногда по  целым  месяцам. Зато,  когда он случайно  его находил,  то бывало по  целым часам  не  выпускал  уж  из своих рук. Итак  батюшка  читал Придворный  Календарь,  изредко пожимая  плечами  и   повторяя вполголоса: "Генерал-поручик!.. Он  у  меня  в роте  был сержантом!... Обоих  российских орденов кава-лер!.. А давно  ли мы..." Наконец батюшка швырнул календарь на диван, и погрузился в задумчивость, не предвещавшую ничего доброго. Вдруг он  обратился  к  матушке:  "Авдотья Васильевна,  а  сколько  лет Петруше?" - Да вот пошел семнадцатый годок, - отвечала матушка. - Петруша родился в тот самый год, как окривела тетушка Настасья Гарасимовна, и когда еще... "Добро"  - прервал  батюшка, - "пора  его в службу. Полно ему бегать по девичьим, да лазить на голубятни". Мысль о скорой  разлуке со  мною  так поразила матушку, что она уронила ложку в кастрюльку, и слезы потекли по ее лицу. Напротив того трудно описать мое  восхищение.  Мысль  о службе сливалась во мне с  мыслями о свободе, об удовольствиях петербургской жизни. Я воображал себя офицером гвардии, что по мнению моему было верьхом благополучия человеческого.  Батюшка  не  любил  ни  переменять свои намерения,  ни  откладывать  их исполнение.  День отъезду  моему был назначен. Накануне батюшка объявил, что намерен писать со  мною к будущему моему начальнику,  и  потребовал  пера  и бумаги. "Не забудь, Андрей Петрович", -  сказала  матушка  - "поклониться и от меня  князю  Б.;  я-дескать  надеюсь,  что  он  не  оставит  Петрушу  своими милостями". -  Что за вздор! - отвечал  батюшка нахмурясь.  - К какой стати стану я писать к князю Б.? "Да ведь ты сказал, что изволишь писать к начальнику Петруши". - Ну, а там что?"Да  ведь  начальник  Петрушин  -  князь  Б.  Ведь  Петруша  записан  в Семеновский полк". - Записан! А  мне  какое дело,  что он записан? Петруша в Петербург  не поедет. Чему  научится он  служа  в  Петербурге? мотать да повесничать? Нет, пускай  послужит он в армии, да потянет лямку,  да понюхает пороху, да будет солдат, а не шаматон. Записан в гвардии! Где его пашпорт? подай его сюда.')}"
;

PROCEDURE "Сделать эталон-скриншот верхних строк контекста в ППР"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Editor:push)}, отступив от левого верхнего угла  на {(330 -30)} и до координат {(650 35)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот контекстного фильтра в Левом навигаторе"
 "Сделать эталон-скриншот части контрола {("Левый навигатор" )}, отступив от левого верхнего угла  на {(25 59)} и до координат {(125 90)}"
 // 1350 800
;

PROCEDURE "Установить курсор мыши на вторую ссылку в правой части ААК-документа и сделать ее скриншот"
 OBJECT VAR "Правая часть ААК"
 "Найти контрол {(контрол::pnRightEx)} на форме {("Главное окно")}" =: "Правая часть ААК"
 "Установить курсор мыши по координатам {(150 100)} относительно контрола {("Правая часть ААК")}"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {("Правая часть ААК")}, отступив от левого верхнего угла  на {(30 80)} и до координат {(320 124)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот иконки версионного комментария на саб-панели НК"
 "Сделать эталон-скриншот части контрола {(контрол::SubPanel:push)}, отступив от левого верхнего угла  на {(20 145)} и до координат {(42 168)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот части параграфа с жирным и обычным шрифтом"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(0 94)} и до координат {(190 115)}"
 // 1350 800
;

PROCEDURE "Открыть вкладку Меню и вытащить ее мышкой из области вкладок"
 "Меню во вкладке"
 "Дождаться переключения вкладок"
 "Установить курсор мыши по координатам {(15 118)} относительно контрола {("Текущая активная вкладка")}" // установить курсор на заголовок вкладки в области вкладок
 THREAD ( 650 SLEEP 
 "Установить курсор мыши по координатам {(400 100)} относительно контрола {("Главное окно")}" // отдочить в любом месте Главного окна
 "Отпустить левую кнопку мыши"
 )
 "Зажать левую кнопку мыши"
 1600 SLEEP 
 "Дождаться переключения вкладок"
;

PROCEDURE "Изменить положение вкладки Меню, перетащив ее мышкой за заголовок"
 "Установить фокус в меню во вкладке" 
 OBJECT VAR "Форма вкладки"
 INTEGER VAR aFirstCoordX
 INTEGER VAR aFirstCoordY
 "Контрол в фокусе" 2 раза ( "Получить родительскую форму" ) =: "Форма вкладки"
 "Форма вкладки" pop:Control:Left =: aFirstCoordX 
 "Форма вкладки" pop:Control:Top =: aFirstCoordY
 "Установить курсор мыши по координатам {(50 -100)} относительно контрола {("Контрол в фокусе")}" // на заголовок отдоченной вкладки
 THREAD ( 650 SLEEP 
 "Установить курсор мыши по координатам {(900 200)} относительно контрола {("Главное окно")}" // перетащить в другое место Главного окна
 "Отпустить левую кнопку мыши"
 )
 "Зажать левую кнопку мыши"
 1600 SLEEP 
 "Дождаться переключения вкладок"
 "Форма вкладки" pop:Control:Left НЕРАВНО aFirstCoordX ?ASSURE 'Не случилось перемещения отдоченной вкладки по координате X!' 
 "Форма вкладки" pop:Control:Top НЕРАВНО aFirstCoordY ?ASSURE 'Не случилось перемещения отдоченной вкладки по координате Y!' 
;

PROCEDURE "Выбрать размер шрифта для стиля " STRING IN aStyleSize STRING IN aNameStyle   
 "Выполнить с редактором стилей" (
  "Установить фокус в Дерево стилей"
  "Найти ссылку {(aNameStyle)} в дереве {(контрол::StyleTreeView)} и перейти по ней"
  "Установить фокус в комбобокс выбора размера шрифта в Редакторе стилей"
  "Сразу выбрать в текущем комбобоксе значение {(aStyleSize)}"
  "Кликаем Ок в Настройке конфигурации" 
 )
;

PROCEDURE "Сделать эталон-скриншот 2 и 3 заголовка реквизита в ППР"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Editor:push)}, отступив от левого верхнего угла  на {(165 77)} и до координат {(295 225)}"
 // 1350 800
;

PROCEDURE "Установить в строке БП длинную подсказку"
 OBJECT VAR aQueryExample
 STRING VAR aText
 "Найти контрол {('QueryExampleLabel')} на форме {("Форма БП")}" =: aQueryExample
 INTEGER VAR aIteration
 1 =: aIteration 
 20 раз (
 OnTest
 aQueryExample vg:control:Text =: aText
 Если ( aText РАВНО 'Законодательство о налогах и сборах и иные нормативные правовые акты о налогах и сборах' ) то
  ( выходим )
 иначе
  (
   aQueryExample vg:control:Click 
   "Выделить всё"
   "Нажать Del"
   ++! aIteration
   Если ( aIteration РАВНО 19 ) то
    ( false ?ASSURE 'Не смогли подготовить правильную подсказку в строке БП!' )
  )
 )
;

PROCEDURE "Сделать эталон-скриншот подсказки в БП"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот контрола {("Форма БП")}, отступив от начальной точки {(218 42)} и задав измеряемую область в {(413 65)}"
 // 800 600
;

PROCEDURE "Сделать эталон-скриншот ссылки, ведущей на утративший силу документ"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот контрола {(контрол::Text:push)}, отступив от начальной точки {(550 107)} и задав измеряемую область в {(635 130)}"
 // 1350 800
;

PROCEDURE "Отдочить вкладки левого навигатора мышкой"
 "Установить курсор мыши по координатам {(35 20)} относительно контрола {("Левый навигатор")}" // шапка Левого навигатора
 THREAD ( 650 SLEEP 
  "Установить курсор мыши по координатам {(400 200)} относительно контрола {("Главное окно")}" // отдочить в любом месте Главного окна
  "Отпустить левую кнопку мыши"
  )
  "Зажать левую кнопку мыши"
  1400 SLEEP 
  "Дождаться переключения вкладок"
;

PROCEDURE "Убедиться, что вкладка ПЗ будет видна после клика в документе и клика на кнопке ПЗ на тулбаре"
 OBJECT VAR aNavigatorForm
 "Контрол в фокусе" "Получить родительскую форму" =: aNavigatorForm
 aNavigatorForm ЯВЛЯЕТСЯ class::TnscFloatingWindow ?ASSURE 'Работаем не с плавающим окном!' 
 "Проверить, что контрол {(aNavigatorForm)} видимый"
 "Перевести фокус в документ"
 "Установить курсор мыши по координатам {(50 50)} относительно контрола {(контрол::Text:push)}" 
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
 "Проверить, что контрол {(aNavigatorForm)} невидимый"
 "Кликаем кнопку {(контрол::bt_mo_Common_opTasksPanel)} на тулбаре"
 "##Дать тесту время для отрисовки контролов"
 "Проверить, что контрол {(aNavigatorForm)} видимый"
;

PROCEDURE "Сделать эталон-скриншот нижнего заголовка реквизита в ППР"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Editor:push)}, отступив от левого верхнего угла  на {(135 505)} и до координат {(295 568)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот ссылки и баллона 'Информация об изменениях' в НК"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(1 43)} и до координат {(475 388)}"
 // 900 600
;

PROCEDURE "Установить курсор мыши на левую ссылку 'информация об изменениях' в ОИД ( для НК)"
 VAR Editor
 VAR x
 VAR y
 "Контрол в фокусе" >>> Editor
 Editor pop:editor:ParaMiddleCoordsToScreen >>> y >>> x
 x 170 - >>> x
 y 110 + >>> y
 x y "Установить курсор мыши по координатам"
 "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crHandPoint' ! ? (
  'Не попали на ссылку Информация об изменениях! Тест прератил работу!' .
   HALT
 )
;

PROCEDURE "Сделать эталон-скриншот левой ссылки и баллона 'Информация об изменениях' в ОИД ( для НК)"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(10 110)} и до координат {(435 250)}"
 // 900 600
;

PROCEDURE "Сделать эталон-скриншот дерева FoldersTree"
 "Сделать эталон-скриншот части контрола {("Текущая активная вкладка")}, отступив от левого верхнего угла  на {(3 100)} и до координат {(210 250)}"
 // 1350 800
;

PROCEDURE "Открыть сохраненную закладку и сделать эталон-скриншот дерева FoldersTree"
 "Мои документы"
 "Развернуть текущее дерево"
 "Стрелка вниз"
 "Дождаться переключения вкладок"
 THREAD ( 350 SLEEP
  "Сделать эталон-скриншот дерева FoldersTree"
 )
 "Нажать Enter"
;

PROCEDURE "Сделать эталон-скриншот нескольких папок для модального окна 'Орган/Источник' в ППР"
 "Перевести фокус в поле 'Орган/Источник' в ППР"
 "Обработать Enter модально" (
  OBJECT VAR aWindowAttributeSelect
  INTEGER VAR aHeight
  "Контрол в фокусе" "Узнать главную форму" =: aWindowAttributeSelect
  aWindowAttributeSelect "Померить высоту" =: aHeight
 TRY
  650 aWindowAttributeSelect "Установить высоту" 
  "##Дать тесту время для отрисовки контролов"
  "Сделать эталон-скриншот части контрола {(контрол::AttributeTree:push)}, отступив от левого верхнего угла  на {(0 0)} и до координат {(62 310)}"
 FINALLY
  aHeight aWindowAttributeSelect "Установить высоту" 
 END
 )
;

PROCEDURE "Перейти по ссылке 'Открыть список редакций по скрипту' во вкладке Предупреждение"
 "Переключиться на вкладку {('Предупреждение')}"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-20 -10 )}"
 "Дождаться появления хинта и сравнить его текст с эталоном"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Закрыть обе отдоченные вкладки кликом на крестик"
 OBJECT VAR "Кнопка закрытия"
 'CLOSE' "Отдоченная форма" pop:Control:FindControlByName =: "Кнопка закрытия"
 "Кнопка закрытия" "Объект существует?" ?ASSURE 'Не нашли крестик для закрытия формы! ' 
 "Установить курсор мыши по координатам {(5 5)} относительно контрола {("Кнопка закрытия")}"
 "Клик левой кнопкой мыши"
 2 раза ( "##Дать тесту время для отрисовки контролов" )
 "Дождаться появления хинта"
 Если ( "Текущий хинт" РАВНО 'Закрыть' ) то
  ( "Клик левой кнопкой мыши" )
 иначе
  ( 'Не попали курсором мыши на кнопку Закрыть!' . )
;

PROCEDURE "Установить курсор мыши на заголовок первой вкладки"
 "Установить курсор мыши по координатам {(10 10)} относительно контрола {("Главное окно")}"
;

PROCEDURE "Сравнить с эталоном хинт первой вкладки"
 "Установить курсор мыши на заголовок первой вкладки"
 "Дождаться появления хинта и сравнить его текст с эталоном"
;

PROCEDURE "Повторить сценарий, описанный в K593231946"
 THREAD ( 300 SLEEP
  "Установить курсор мыши по координатам {(140 199)} относительно контрола {("Главное окно")}"
  "Клик левой кнопкой мыши"
 )
 THREAD ( 550 SLEEP
  "Установить курсор мыши по координатам {(140 189)} относительно контрола {("Главное окно")}"
  50 SLEEP
  2 раза ( "Клик левой кнопкой мыши" )
 )
 THREAD ( 1300 SLEEP
  "Установить курсор мыши по координатам {(140 199)} относительно контрола {("Главное окно")}"
 )
 THREAD ( 2000 SLEEP
  "Установить курсор мыши по координатам {(40 189)} относительно контрола {("Главное окно")}"
  2 раза ( "Клик левой кнопкой мыши" )
 )
 "Установить курсор мыши по координатам {(140 39)} относительно контрола {("Главное окно")}"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Сравнить с эталоном название группы настроек Настройки интерфейса\Вкладки Основного окна"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(1)} раз вниз, {(6)} раз Tab"
  OBJECT VAR "GroupBox"
  "Контрол в фокусе" 2 раза ( "Перейти к родительской форме" ) =: "GroupBox"
  Если ( "GroupBox" ЯВЛЯЕТСЯ class::TvtGroupBox ) то
   ( "GroupBox" "Заголовок контрола" . )
  иначе
   ( false ?ASSURE 'Не попали в GroupBox с выбором перехода по ссылкам и документам!' )  
 )
;

PROCEDURE "Сравнить с эталоном содержимое группы настроек конфигурации 'Настройки интерфейса\Вкладки Основного окна'"
 PROCEDURE Действия_с_контролом OBJECT IN aCtrl
  aCtrl "Заголовок контрола" .
  ( aCtrl pop:object:ClassName РАВНО 'TGroupButton' ) ? (
   'Радиобаттон выбран: ' aCtrl "Узнать, отмечен ли RadioButton?" ToPrintable Cat . )
  "Отделить текст в эталоне"
 ;
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(1)} раз вниз, {(6)} раз Tab"
  OBJECT VAR "GroupBox"
  "Контрол в фокусе" 2 раза ( "Перейти к родительской форме" ) =: "GroupBox"
  "GroupBox" ЯВЛЯЕТСЯ class::TvtGroupBox ?ASSURE 'Не попали в GroupBox с выбором перехода по ссылкам и документам!'  
  "Выполнить для всех контролов {("GroupBox")}" Действия_с_контролом 
 )
;

PROCEDURE "Кликнуть несколько раз в баллоне 'Информация об изменениях' левой кнопкой мыши"
 "Провести мышью вниз на {(30)} пикселей"
 3 раза (
  "Дождаться переключения вкладок"
  300 SLEEP
  "Клик левой кнопкой мыши"
 )
;

PROCEDURE "Сделать эталон-скриншот командного меню в режиме с вкладками"
 "Сделать эталон-скриншот части контрола {("Главное окно")}, отступив от левого верхнего угла  на {(0 36)} и до координат {(480 54)}"
;

PROCEDURE  "Установить курсор мыши на пункт 'Файл' командного меню в режиме с вкладками"
 "Установить курсор мыши по координатам {(10 40)} относительно контрола {("Главное окно")}"
 "##Дать тесту время для отрисовки контролов"
;

VOID WORDWORKER "Поставить текущий документ на контроль и выполнить"
 "Поставить на контроль и выполнить {(@ ( WordToWork DO ) )}"
;

PROCEDURE "Проверить, что дерево ППС в нужном состоянии"
 "Поставить фокус в дерево ситуаций второго уровня в Стандартной ППС"
 "Переместиться в начало дерева"
 контрол::AttributeTree:push tree:CurrentNode:IsExpanded ? cc:TreeCollapse
 "Дать системе перерисоваться"
;

PROCEDURE "Отметить следующие 5 атрибутов в дереве ППС"
 "Проверить, что дерево ППС в нужном состоянии"
 5 раз (
  "Выбрать атрибут ИЛИ"
  "Стрелка вниз"
 )
 "Дать системе перерисоваться"
;

PROCEDURE "Снять выделение у последних трёх отмеченных атрибутов"
 "Проверить, что дерево ППС в нужном состоянии"
 "Стрелка вниз"
 3 раза (
  "Стрелка вниз"
  "Выбрать атрибут ИЛИ"
 )
 "Дать системе перерисоваться"
;

VOID WORDWORKER "Открыть диалог 'Настройка...' и выполнить"
 @ моп::Настройка_системы_Настройка... MODAL ( WordToWork DO )
;

STRING FUNCTION "Имя подсвеченного вида информации в контроле" OBJECT IN aCtrl
 OBJECT VAR tab
 INTEGER VAR n
 tab := aCtrl
 n := ( tab vg:ComboBox:ItemIndex )
 n := ( tab vg:ComboBox:GetHighLightItemIndex )
 n НЕРАВНО -1 ?ASSURE 'Голубой подсветки нет!' 
 n tab vg:ComboBox:GetItem =: Result
;

STRING FUNCTION "Имя подсвеченного вида информации в пункте Ещё"
 "Имя подсвеченного вида информации в контроле {(контрол::MoreTab:push)}" =: Result
;

PROCEDURE "Сравнить с эталоном имя подсвеченного голубой заливкой вида информации в пункте Ещё"
 "Имя подсвеченного вида информации в пункте Ещё" .
;

OBJECT FUNCTION "Значок к метке на саб-панели к фрагменту текста на форме" INTEGER IN aLabelNum OBJECT IN aForm
  PROCEDURE Действия
    PROCEDURE Действия_с_каждым_значком OBJECT IN aSubDescription INTEGER IN aHandle
     aSubDescription subdescriptor:GetVisible ? ( 
      aHandle РАВНО aLabelNum ? (
       aSubDescription =: Result
       "Закончить перебор контролов"
      )
     )
    ;

   OBJECT VAR aCtrl
   "Найти контрол {(контрол::SubPanel)} на форме {(aForm)}" >>> aCtrl
   @ ( Действия_с_каждым_значком ) aCtrl IterateSubDecriptorsOnSubPanel
  ;
 Result := nil
 "Выполнить {(@ Действия )} обработав исключение {(cBreak)}"
 Result "Объект существует?" ?ASSURE [ 'Не нашли метку ' aLabelNum IntToStr ' на саб-панели формы ' aForm pop:Component:Name ] 
;

PROCEDURE "Убедиться, что на саб-панели есть метка " INTEGER IN aLabelNum
 Если ( "Значок к метке {(aLabelNum)} на саб-панели к фрагменту текста на форме {("Главное окно")}" "Объект существует?" ) то
  ( [ 'Метка ' aLabelNum IntToStr ' найдена!' ] strings:Cat . )
;

PROCEDURE "Сбросить выбранный тип информации и очистить строку поиска"
 "Установить фокус в БП и сбросить ее в умолчательное состояние"
 "Очистить строку БП"
;

VOID WORDWORKER "Выполнить только для х32"
 Если ( "Система x64?" ) то (
  'EAssertionFailed' .
  'Высота списка параграфов почему-то нулевая ' . 
  // костыль для теста K338461114 
 )
 иначе (
  ( WordToWork DO )
 )
;

PROCEDURE "Восстановить настройки в диалоге Редактор стилей"
 OBJECT VAR "Восстановить"
 "Найти контрол {(контрол::bt_enResult_opRestore)} по имени на форме {("Диалог Редактор стилей")}" >>> "Восстановить"
 "Ответить один раз Да для {(@ ( "Восстановить" "Кликнуть" ) )}"
 "##Дать тесту время для отрисовки контролов" 
;

PROCEDURE "Сравнить пять следующих изменений в СР с эталоном"
 "Сравнить {(5)} следующих изменений в СР с эталоном"
;

PROCEDURE "Кликнуть по ссылке в баллоне 'Информация об изменениях' в НК"
 OBJECT VAR "Вкладка"
 контрол::ChildZonePanel "Главное окно"  pop:Control:FindControlByName =: "Вкладка"
 "Вкладка" "Объект существует?" ?ASSURE 'Вкладка не найдена' 
 "Установить высоту контрола {("Вкладка")} в {(550)} пикселей"
 "Установить курсор мыши по координатам {(450 145)} относительно контрола {("Вкладка")}"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
 "Установить курсор мыши по координатам {(450 315)} относительно контрола {("Вкладка")}"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Сравнить с эталоном имя подсвеченного голубой заливкой области поиска в комбобоксе AreaCombo"
 "Имя подсвеченного вида информации в контроле {(контрол::AreaCombo:push)}" .
;

PROCEDURE "Установить курсор мыши на крестик закрытия первой вкладки"
 "Установить курсор мыши по координатам {(167 17)} относительно контрола {("Главное окно")}"
;

PROCEDURE "Установить курсор мыши на заголовок окна"
 "Установить курсор мыши по координатам {(400 17)} относительно контрола {("Главное окно")}"
;

PROCEDURE "Открыть новое окно, переключиться на первое, затем на второе окно и сравнить его статусбар с эталоном"
 INTEGER VAR "Первое"
 INTEGER VAR "Второе"
 "Сохранить активное окно" =: "Первое" 
 "После работы теста активным должно остаться {("Первое")} окно" (
  "Открыть новое окно гаранта"
  "##Дать тесту время для отрисовки контролов"
  "Сохранить активное окно" =: "Второе"
  "Убедиться, что {("Второе")} окно заменило {("Первое")} окно"
  "Восстановить {("Первое")} активное окно"
  "##Дать тесту время для отрисовки контролов"
  "Восстановить {("Второе")} активное окно"
  "##Дать тесту время для отрисовки контролов"
  "Сравнить статусбар с эталоном"
 )
;

PROCEDURE "Убедиться, что новое окно имеет тот же размер и открывается поверх" BOOLEAN IN aOver
 INTEGER VAR "Первое"
 INTEGER VAR "Второе"
 "Сохранить активное окно" =: "Первое" 
 OBJECT VAR "Первое окно"
 INTEGER VAR "Отступ слева для первого окна"
 INTEGER VAR "Отступ сверху для первого окна"
 INTEGER VAR "Ширина первого окна"
 INTEGER VAR "Высота первого окна"
 "Ширина главной формы" =: "Ширина первого окна"
 "Высота главной формы" =: "Высота первого окна"
 "Главное окно" =: "Первое окно"
 "Отступ слева для" "Первое окно" =: "Отступ слева для первого окна"
 "Отступ сверху для" "Первое окно" =: "Отступ сверху для первого окна"
 "После работы теста активным должно остаться {("Первое")} окно" (
  "Открыть новое окно гаранта"
  "##Дать тесту время для отрисовки контролов"
  "Сохранить активное окно" =: "Второе"
  "Убедиться, что {("Второе")} окно заменило {("Первое")} окно"
  "Убедиться, что ширина для текущего окна такая же как {("Ширина первого окна")}"
  "Убедиться, что высота для текущего окна такая же как {("Высота первого окна")}"
  Если ( aOver ) то (
   "Убедиться, что отступ слева для текущего окна такой же как {("Отступ слева для первого окна")}"
   "Убедиться, что отступ сверху для текущего окна такой же как {("Отступ сверху для первого окна")}"
   // поверх старого
  ) иначе (
   "Учитывая {("Отступ слева для первого окна")} и {("Отступ сверху для первого окна")} убедиться, что текущее окно открылось каскадом"
   // каскадом
  )
 )
;

PROCEDURE "Убедиться, что новое окно имеет тот же размер и открывается поверх старого"
 "Убедиться, что новое окно имеет тот же размер и открывается поверх {(true)}"
;

PROCEDURE  "Убедиться, что новое окно имеет тот же размер и открывается каскадом"
 "Убедиться, что новое окно имеет тот же размер и открывается поверх {(false)}"
;

PROCEDURE "Убедиться, что в окне есть вкладки"
 HasTabs ?ASSURE 'В окне нет вкладок (режим notabs)!' 
;

PROCEDURE "##Восстановить первоначальные размеры второго окна"
 "##Запомнить главное окно Гаранта и выполнить" (
  "Открыть новое окно гаранта"
  "Развернуть {("Главное окно")} окно"
 )
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Убедиться, что после закрытия нижнего окна и открытия нового оно займёт его место"
 "##Дать тесту время для отрисовки контролов"
 INTEGER VAR "Второе"
 "Сохранить активное окно" =: "Второе" 
 OBJECT VAR "Второе окно"
 INTEGER VAR "Отступ слева для второго окна"
 INTEGER VAR "Отступ сверху для второго окна"
 INTEGER VAR "Ширина второго окна"
 // INTEGER VAR "Высота второго окна"
 // Высота нового окна будет отличаться от закрытого, т.к. минимальный размер у нового - 600 пикселей
 "Ширина главной формы" =: "Ширина второго окна"
 "Главное окно" =: "Второе окно"
 "Отступ слева для" "Второе окно" =: "Отступ слева для второго окна"
 "Отступ сверху для" "Второе окно" =: "Отступ сверху для второго окна"
 "Закрыть {("Второе")} сохраненное окно"
 "##Дать тесту время для отрисовки контролов"
 "Открыть новое окно гаранта"
 "##Дать тесту время для отрисовки контролов"
 "Убедиться, что ширина для текущего окна такая же как {("Ширина второго окна")}"
 "Убедиться, что отступ слева для текущего окна такой же как {("Отступ слева для второго окна")}"
 "Убедиться, что отступ сверху для текущего окна такой же как {("Отступ сверху для второго окна")}"
;

PROCEDURE "Перейти по текущей ссылке и закрыть открывшееся окно"
 INTEGER VAR aCountWindow
 "Количество открытых окон Гаранта" =: aCountWindow
 "##Запомнить главное окно Гаранта и выполнить" (
  "Вернуться к текущему окну Гаранта, предварительно выполнив" (
   "Клик левой кнопкой мыши"
   "##Дать тесту время для отрисовки контролов"
   "Количество открытых окон Гаранта" НЕРАВНО aCountWindow ?ASSURE 'Новое окно не открылось!' 
  )
 )
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Кликнуть на пункте 'Помощь' командного меню, затем кликнуть на заголовке окна"
 THREAD (
  800 SLEEP
  "Установить курсор мыши по координатам {(500 2)} относительно контрола {("Главное окно")}"
  "Клик левой кнопкой мыши"
 )
 "Установить курсор мыши по координатам {(425 42)} относительно контрола {("Главное окно")}"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Кликнуть в комбобокс выбора страны, затем рядом с комбобоксом, сделать эталон-скриншот комбобокса и панели контексного поиска"
 THREAD ( 1500 SLEEP
  "Установить курсор мыши по координатам {(240 10)} относительно контрола {("Комбобокс для выбора страны в списке фармацевтических фирм")}"
  "Клик левой кнопкой мыши"
  "##Дать тесту время для отрисовки контролов" 
  "Сделать эталон-скриншот комбобокса и панели контексного поиска"
 )
 "Установить курсор мыши по координатам {(40 10)} относительно контрола {("Комбобокс для выбора страны в списке фармацевтических фирм")}"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов" 
;

PROCEDURE "Сравнить с эталоном активность кнопки 'Назад' на тулбаре"
 'Активность кнопки Назад:' .
 "Проверить доступность кнопки {(контрол::bt_enHistory_opBack)}"
 "##Отделить текст в эталоне"
;

VOID WORDWORKER "Убедиться, что после выполнения сценария активным останется первое окно"
 "##Запомнить главное окно Гаранта и выполнить" (
  INTEGER VAR "Первое окно"
  "Сохранить активное окно" =: "Первое окно"
  ( WordToWork DO ) 
  "Сохранить активное окно" РАВНО "Первое окно" ?ASSURE 'Активно не первое окно!' 
 )
;

PROCEDURE "Открыть первый документ из списка в новом окне (через КМ)"
 THREAD ( 600 SLEEP
  "Установить курсор мыши по координатам {(150 50)} относительно контрола {(контрол::tvList:push)}"
  "Клик левой кнопкой мыши"
  "##Дать тесту время для отрисовки контролов"
 )
 "Установить курсор мыши по координатам {(120 20)} относительно контрола {(контрол::tvList:push)}"
 "Клик правой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

VOID OPERATOR "Изменить настройки редактора стилей: установить значение в поле 'Отступ после текста' равное" ^ IN aSizeSpaceAfter
 "Выполнить с редактором стилей" (
  "Установить фокус в комбобокс Отступ после текста"
  aSizeSpaceAfter DO "Ввести строку"
  "Нажать Enter"
 )
;

PROCEDURE "Зажать Ctrl и перетащить картинку вниз документа"
 "Зажать кнопку {('Ctrl')} и выполнить" (
  THREAD ( 300 SLEEP 
   INTEGER VAR aCoordY
   ( контрол::Text:push "Померить высоту" ) 20 - =: aCoordY
   "Установить курсор мыши по координатам {(30 aCoordY)} относительно контрола {(контрол::Text:push)}"
   "Отпустить левую кнопку мыши"
  )
  "Ставим указатель мыши на конец текущего параграфа редактора {(focused:control:push)} со смещением {(-20 -50)}"
  "Зажать левую кнопку мыши"
 )
;

PROCEDURE "Выделить одно слово и провести его поиск в ТС"
 "Выделить слово справа"
 "Найти выделенное в толковом словаре"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Сравнить с эталоном название открытого термина и контекст, введенный в фильтр"
 "Сравнить абзац текущего редактора с эталоном"
 "Проверить, что введено в контекстый фильтр"
;

PROCEDURE "Вызвать контекстное меню на первой метке в термине"
 "Установить курсор мыши по координатам {( 10 15 )} относительно контрола {(контрол::SubPanel:push)}"
 THREAD ( 500 SLEEP
  "Установить курсор мыши по координатам {( 1 1 )} относительно контрола {(контрол::SubPanel:push)}"
  "Клик левой кнопкой мыши"
  )
 "Клик левой кнопкой мыши" 
;

PROCEDURE "Перейти к ссылке " STRING IN CaptionLink
 STRING VAR "Текущая ссылка"
 STRING VAR "Предыдущая ссылка"
 "Перейти к следующей ссылке" 
 "Выделенный текст текущего редактора" =: "Текущая ссылка"
 ПОКА ( CaptionLink НЕРАВНО "Текущая ссылка" ) то
 BEGIN
  "Текущая ссылка" =: "Предыдущая ссылка"
  "Перейти к следующей ссылке" 
  "Выделенный текст текущего редактора" =: "Текущая ссылка"
  "Предыдущая ссылка" НЕРАВНО "Текущая ссылка" ?ASSURE 'Не нашли нужную ссылку!'
 END
;

PROCEDURE "Перейти по ссылке " STRING IN CaptionLink
 "Перейти к ссылке {(CaptionLink)}"
 "Перейти по текущей ссылке"
; 

PROCEDURE "Сравнить с эталоном текст в комбобоксе с выбором типа на вкладке СКР"
 OBJECT VAR "Комбобокс с выбором типа на вкладке СКР"
 "Найти контрол {(контрол::bt_enCRList_SetType)} на форме {("Главное окно")}" =: "Комбобокс с выбором типа на вкладке СКР" 
 "Сравнить заголовок контрола {("Комбобокс с выбором типа на вкладке СКР")} с эталоном"
;

VOID WORDWORKER "Построить СКР по типу 'Отраслевая информация' для всего документа и выполнить"
 "Установить курсор мыши по координатам {( 5 5 )} относительно контрола {(контрол::SubPanel:push)}"
 THREAD ( 1500 SLEEP
  "Установить курсор мыши по координатам {( 35 85 )} относительно контрола {(контрол::SubPanel:push)}"
  4 раза ( "##Дать тесту время для отрисовки контролов" )
  "Установить курсор мыши по координатам {( 285 165 )} относительно контрола {(контрол::SubPanel:push)}"
  4 раза ( "##Дать тесту время для отрисовки контролов" )
  "Клик левой кнопкой мыши"
  2 раза ( "##Дать тесту время для отрисовки контролов" )
  ( WordToWork DO ) 
 )
 "Клик левой кнопкой мыши"
;

INTEGER FUNCTION "Запомнить номер текущей вкладки"
 HasTabs ?ASSURE 'Требуется режим с вкладками!'
 vcm:tabs:Active =: Result
;

VOID WORDWORKER "##Запомнить текущую вкладку и выполнить"
 INTEGER VAR NumberCurrentTab
 "Запомнить номер текущей вкладки" =: NumberCurrentTab
 TRY
  WordToWork DO
 FINALLY
  NumberCurrentTab vcm:tabs:SetActive
  "##Дать тесту время для отрисовки контролов"
  vcm:tabs:CloseAllButCurrent
 END
;

PROCEDURE "Убедиться, что вкладка стала активной" INTEGER IN NumTab
 NumTab 1 - =: NumTab
 // поправка номера вкладки, в тестах они считаются с нулевой
 "##Дать тесту время для отрисовки контролов"
 vcm:tabs:Active РАВНО NumTab ?ASSURE 'Новая вкладка не стала активной!'
;

PROCEDURE "Убедиться, что новая вкладка стала активной"
 "Убедиться, что вкладка {(2)} стала активной"
;

PROCEDURE "Убедиться, что новая вкладка не стала активной"
 "##Дать тесту время для отрисовки контролов"
 vcm:tabs:Active РАВНО 0 ?ASSURE 'Новая вкладка стала активной!'
;

PROCEDURE "Сравнить с эталоном количество открытых вкладок"
 [ 'Количество открытых вкладок: ' vcm:tabs:Count IntToStr ] strings:Cat .
;

PROCEDURE "Переключиться на вкладку 'Дисциплинарная ответственность' во флеше 5421327"
 "Установить курсор мыши по координатам {(750 230)} относительно контрола {("Форма с флешем")}"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Перейти по ссылке на ТК из вкладки 'Дисциплинарная ответственность' флеша 5421327"
 "Установить курсор мыши по координатам {(510 290)} относительно контрола {("Форма с флешем")}"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

VOID WORDWORKER "Переключиться на базу и выполнить" STRING IN NameBase
 TRY
  "Выполнить {(@ WordToWork DO )} с базой {(NameBase)}"
 FINALLY
  ТБ24
 END
;

PROCEDURE "Дублировать вкладку" INTEGER IN NumTab
 NumTab vcm:tabs:CanDuplicate ?ASSURE [ 'Нет возможности дублировать ' NumTab IntToStr ' вкладку!' ] 
 NumTab vcm:tabs:Duplicate
;

PROCEDURE "Восстановить вкладку"
 vcm:tabs:CanReopen ?ASSURE [ 'Нет возможности восстановить вкладку!' ] 
 vcm:tabs:Reopen
;

VOID WORDWORKER "Дублировать первую вкладку и выполнить"
 "##Запомнить текущую вкладку и выполнить" (
  "Дублировать {(0)} вкладку"
  "Убедиться, что новая вкладка стала активной"
  WordToWork DO
 )
;

VOID WORDWORKER "Восстановить вкладку и выполнить"
 "##Запомнить текущую вкладку и выполнить" (
  "Восстановить вкладку"
  "Убедиться, что новая вкладка стала активной"
  WordToWork DO
 )
;

PROCEDURE "Убедиться, что в текущей вкладке есть пустой список"
 OBJECT VAR "Пустой список"
 "Найти контрол {("Информация о пустом списке")} на форме {("Текущая активная вкладка")}" >>> "Пустой список"
 "Узнать, виден ли контрол {("Пустой список")}" ?ASSURE 'Пустой список есть, но невидим!'
;

PROCEDURE "Выделить и перетащить в левую часть ААК-Содержания фрагмент текста"
 "Выделить {(3)} параграфа"
 "Установить курсор мыши чуть правее левого края текущего редактора"
 "Зажать кнопку {('Ctrl')} и выполнить" ( 
  THREAD ( "Секундная пауза" 
   "Установить курсор мыши по координатам {(170 170 )} относительно контрола {("Левая часть ААК-содержания")}"
   "Отпустить левую кнопку мыши"
  ) 
  "Зажать левую кнопку мыши"
 ) 
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Сравнить с эталоном оценку документа"
 INTEGER VAR AssessmentDoc
 DocumentText "Оценка, поставленная документу" =: AssessmentDoc 
 AssessmentDoc РАВНО 0 ? ( 'Оценки нет!' . )
 AssessmentDoc РАВНО 1 ? ( 'Документ нравится!' . )
 AssessmentDoc РАВНО 2 ? ( 'Документ не нравится!' . )
;

PROCEDURE "Дублировать первую вкладку"
 "Дублировать {(0)} вкладку"
 "Убедиться, что новая вкладка стала активной"
;

PROCEDURE "Дублировать вторую вкладку"
 vcm:tabs:Count БОЛЬШЕ 1 ?ASSURE 'Нет возможности дублировать вторую вкладку!'
 "Дублировать {(1)} вкладку"
 "Убедиться, что вкладка {(3)} стала активной"
;

PROCEDURE "Сделать эталон-скриншот части плашки 'Напишите нам' в ААК" 
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот контрола {("Найти плашку в ААК")}, отступив от начальной точки {(100 2)} и задав измеряемую область в {(170 18)}"
 // 1350 850
;

PROCEDURE "Сделать эталон-картинку левой части ААК-Содержания и отступа для правой части"
 "##Дать тесту время для отрисовки контролов"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, от левого верхнего угла до координат {(550 620)}"
 // 1400 850
;

PROCEDURE "Сравнить контекстное меню списка с эталоном"
 "Сравнить контекстное меню для контрола {(контрол::tvList:push)} для точки {(0 0)} с эталоном"
;

PROCEDURE "Сравнить с эталоном номер активной вкладки"
 STRING  VAR NumActiveTabs
 vcm:tabs:Active 1 + IntToStr =: NumActiveTabs
 [ 'Активна ' NumActiveTabs ' (из ' vcm:tabs:Count IntToStr ') вкладка!' ] strings:Cat .
;

VOID WORDWORKER "Открыть новую вкладку и выполнить"
 "##Запомнить текущую вкладку и выполнить" (
  "Открываем новую вкладку"
  "##Дать тесту время для отрисовки контролов"
  "Убедиться, что новая вкладка стала активной"
  WordToWork DO
 )
;

PROCEDURE "Список литературы"
 "Кликаем кнопку {(контрол::bt_enDocument_opLiteratureListForDictionary)} на тулбаре"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Убедиться, что во второй вкладке иконка для новостной рассылки Прайм"
 vcm:tabs:Count >= 2  ?ASSURE 'Нет второй открытой вкладки!'
 "Индекс иконки для {(2)} вкладки" РАВНО 20 ?ASSURE 'Неправильная иконка! См. [$596403052]'
;

PROCEDURE "Сравнить с эталоном хинт второй вкладки"
 "Установить курсор мыши по координатам {(250 10)} относительно контрола {("Главное окно")}"
 "Дождаться появления хинта и сравнить его текст с эталоном"
;

PROCEDURE "Выбрать мышкой логическое условие КРОМЕ"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-80 -20)}"
 "Дождаться появления хинта"
 Если ( "Текущий хинт" РАВНО 'Логическое условие ИЛИ' ) то
  ( "Клик левой кнопкой мыши"
   "Дождаться появления хинта"
   "Клик левой кнопкой мыши"
  )
 иначе
  ( false ?ASSURE 'Не попали курсором мыши на кнопку с выбором логического условия!' )
;

PROCEDURE "Убедиться, что оглавление НК отфильтровано по контексту 'пункт 22'"
 "Перевести фокус в оглавление"
 "Контрол в фокусе" "Количество элементов дерева" РАВНО 5 ?ASSURE 'Оглавление не отфильтровано!'
;

PROCEDURE "Дублировать первую вкладку и сразу закрыть новую"
 "Дублировать первую вкладку и выполнить" (
  "Ничего не делаем"
 )
;

VOID WORDWORKER "Открыть новую вкладку по ссылке, переключиться на нее и выполнить"
 "##Запомнить текущую вкладку и выполнить" (
  "Открыть гиперссылку в новой вкладке"
  "Убедиться, что новая вкладка не стала активной"
  vcm:tabs:Count РАВНО 2 ?ASSURE 'Новая вкладка по ссылке не открылась!' 
  1 vcm:tabs:SetActive
  "##Дать тесту время для отрисовки контролов"
  WordToWork DO
)
;

VOID WORDWORKER "Открыть документ из списка и выполнить" STRING IN NameDoc
 "##Запомнить текущую вкладку и выполнить" (
  "Найти документ {(NameDoc)} в списке"
  "Нажать Enter"
  "##Дать тесту время для отрисовки контролов"
  "Убедиться, что новая вкладка стала активной"
  WordToWork DO
 )
;

PROCEDURE "Убедиться, что в первой вкладке иконка для БП"
 "Индекс иконки для {(1)} вкладки" РАВНО 26 ?ASSURE 'Неправильная иконка! См. [$596403052]'
;

PROCEDURE "Сравнить с эталоном активность кнопок 'Найти' и 'Найти предыдущий контекст'"
 'Найти ( активность ) : ' "Узнать, активна ли кнопка Найти в панели БП?" ToPrintable Cat .
 'Найти предыдущий контекст ( активность) : ' "Узнать, активна ли кнопка 'Найти предыдущий контекст' в панели БП?" ToPrintable Cat .
;

PROCEDURE "Сравнить с эталоном, что введено в контекстный фильтр и включен ли он"
 "Проверить, что введено в контекстый фильтр"
 OBJECT VAR "Кнопка контекстного фильтра"
 "Найти контрол {('ContextFilterButton')} на форме {("Текущая активная вкладка")}" =: "Кнопка контекстного фильтра"
 'Контекстный фильтр включен: ' "Узнать численную переменную {('Down')} объекта {( "Кнопка контекстного фильтра" )}" 0 ?!= ToPrintable Cat .
;

PROCEDURE "Убедиться, что в активной вкладке одна форма БП"
 INTEGER VAR CountBaseSearchForm
 CountBaseSearchForm := 0
 PROCEDURE Действия_с_контролом OBJECT IN aCtrl
  aCtrl ЯВЛЯЕТСЯ class::TNewBaseSearchForm ? (
   ++! CountBaseSearchForm
  )
 ;

 "Выполнить для всех контролов {("Текущая активная вкладка")}" Действия_с_контролом 
 Если ( CountBaseSearchForm НЕРАВНО 1 ) то (
  Если ( CountBaseSearchForm РАВНО 0 ) то
   ( false ?ASSURE 'Нет открытой формы БП!' )
  Если ( CountBaseSearchForm БОЛЬШЕ 1 ) то
   ( false ?ASSURE 'Открытых форм БП больше одной!' )
 )
;

PROCEDURE "Закрыть вкладку" INTEGER IN NumTab
 ( NumTab 1 - ) vcm:tabs:Close
;

PROCEDURE "Сравнить с эталоном номер открытого документа"
 "Перевести фокус в текст"
 'Номер открытого документа: ' контрол::Text textform:GetDocumentID IntToStr ToPrintable Cat .
;

WordAlias "Сравнить индексы иконок всех вкладок с эталоном" "Сравнить индексы иконок всех вкладок окна с эталоном"

PROCEDURE "Переключиться на первую вкладку мышкой"
 vcm:tabs:Active БОЛЬШЕ 0 ?ASSURE 'Первая вкладка уже активна!'
 "Установить курсор мыши на заголовок первой вкладки"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
 vcm:tabs:Active РАВНО 0 ?ASSURE 'Первая вкладка не стала активной!' 
;

PROCEDURE "Открыть ссылку по 'прямой' ссылке из БП" STRING IN Context
 "Ввести строку {(Context)}"
 "Дождаться переключения вкладок"
 "Нажать {('Down')}"
 "Нажать Enter"
;

PROCEDURE "Сделать эталон-скриншот найденного контекста в правой половине ААК-Содержания"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(57 124)} и до координат {(227 145)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот найденного контекста в левой половине ААК-Содержания"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(40 78)} и до координат {(250 103)}"
 // 1350 800
;

PROCEDURE "Сделать эталон-скриншот текста со знаком переноса в левой половине ААК-Содержания"
 "Сделать эталон-скриншот части контрола {(контрол::Text:push)}, отступив от левого верхнего угла  на {(42 266)} и до координат {(160 327)}"
 // 1350 800
;

VOID WORDWORKER "##Удалить после теста все лишние фильтры и объекты из Моих документов"
 TRY
  "##Удалить после теста все лишнее из Моих документов" (
  WordToWork DO
 )
 FINALLY
  "Убедиться, что нет лишних фильтров"
 END
;

PROCEDURE "Переключиться на вкладку" INTEGER IN RealNumTab
 INTEGER VAR NumTab
 RealNumTab 1 - =: NumTab
 vcm:tabs:Count БОЛЬШЕ NumTab ?ASSURE [ 'Не можем переключиться на ' RealNumTab IntToStr ' вкладку (она не открыта)!' ] 
 "Запомнить номер текущей вкладки" НЕРАВНО NumTab ?ASSURE [ RealNumTab IntToStr ' вкладка уже активна!' ]
 NumTab vcm:tabs:SetActive
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Переключиться на первую вкладку"
 "Переключиться {(1)} на вкладку"
;

PROCEDURE "Переключиться на вторую вкладку"
 "Переключиться {(2)} на вкладку"
;

PROCEDURE "Переключиться на третью вкладку"
 "Переключиться {(3)} на вкладку"
;

PROCEDURE "Сравнить все значения дерева SelectedTree с эталоном"
 OBJECT VAR Parent
 "Контрол в фокусе" pop:Control:GetTopParentForm =: Parent
 "Найти контрол {(контрол::SelectedTree)} на форме {(Parent)}" "Установить фокус" 
 "Сравнить все элементы текущего дерева с эталоном" 
;

PROCEDURE "Установить курсор мыши на крестик закрытия второй вкладки"
 "Установить курсор мыши по координатам {(345 17)} относительно контрола {("Главное окно")}"
;

PROCEDURE "Убедиться, что новое открытое окно стало активным"
 INTEGER VAR ID_First_window
 ID_First_window := "Сохранить активное окно"
 "Открыть новое окно Гаранта и выполнить" ( 
  "Сохранить активное окно" РАВНО ID_First_window ! ?ASSURE 'Новое открытое окно не стало активным!' 
 )
;

VOID WORDWORKER "Открыть документ из списка в новой вкладке и выполнить"
 "##Запомнить текущую вкладку и выполнить" (
  оп::Список_Открыть_документ_в_новой_вкладке
  "Убедиться, что новая вкладка не стала активной"
  vcm:tabs:Count РАВНО 2 ?ASSURE 'Новая вкладка по ссылке не открылась!' 
  "##Дать тесту время для отрисовки контролов"
  WordToWork DO
)
;

VOID WORDWORKER "##Вернуть фокус в документ, выполнив"
 TRY
  WordToWork DO
 FINALLY
  "##Дать тесту время для отрисовки контролов"
  "##Установить фокус в документ после переключения баз"
 END
;

VOID WORDWORKER "Открыть новостную ленту и выполнить"
 "##Запомнить текущую вкладку и выполнить" (
  "Открываем новостную ленту"
  "Убедиться, что новая вкладка стала активной"
  WordToWork DO
 )
;

PROCEDURE "##Вернуться к вкладке без индекса"
 2 раза ( "##Дать тесту время для отрисовки контролов" )
 "Открываем новую вкладку"
 "##Дать тесту время для отрисовки контролов"
 vcm:tabs:CloseAllButCurrent
;

VOID WORDWORKER "Переключиться на первую вкладку, закрыть её и выполнить"
 "Переключиться на первую вкладку"
 TRY
  vcm:tabs:CloseCurrent 
  WordToWork DO
 FINALLY
  "##Вернуться к вкладке без индекса"
 END
;

PROCEDURE "Убедиться, что новая вкладка открылась и стала активной"
 vcm:tabs:Count НЕРАВНО 1 ?ASSURE 'Вкладка не открылась!'
 "Убедиться, что новая вкладка стала активной"
;

PROCEDURE "Сделать эталон-скриншот части открытой картинки" 
 "##Дать тесту время для отрисовки контролов"
 "Контрол в фокусе" ЯВЛЯЕТСЯ class::TImageEnView ?ASSURE [ 'Фокус в ' "Контрол в фокусе" pop:Component:Name ', а должен быть в ieViewer!' ]
 "Сделать эталон-скриншот контрола {("Контрол в фокусе")}, отступив от начальной точки {(330 36)} и задав измеряемую область в {(380 70)}"
 // 1350 850
;

PROCEDURE "Сравнить с эталоном свойство 'SizeableSides' объекта ChildZone"
 OBJECT VAR ChildZone
 "Найти контрол {(контрол::ChildZone)} на форме {("Текущая активная вкладка")}" =: ChildZone
 ( ChildZone ЯВЛЯЕТСЯ class::TvtSizeablePanel )
 И ( ChildZone pop:Control:GetAnotherParentForm ЯВЛЯЕТСЯ class::TDictionContainerForm ) ?ASSURE 'Нашли какую-то другую ChildZone!'
 "Аккуратно сравнить с эталоном целочисленное свойство {( 'SizeableSides' )} объекта {(ChildZone)}"
;

WordAlias "Сравнить с эталоном весь текст из списка" "Сравнить с эталоном результат применения фильтра: если список есть - то названия документов, если список пустой - весь текст сообщения об этом"

PROCEDURE "Кликнуть на зелёную стрелку и перейти на предыдущий документ (текущий 5421357)"
 "Установить курсор мыши по координатам {(630 530)} относительно контрола {("Форма с флешем")}"
 "##Дать тесту время для отрисовки контролов"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

VOID WORDWORKER "##После теста снять с контроля документ, отсутствующий в базе"
 TRY
  WordToWork DO
 FINALLY
  "##Дать тесту время для отрисовки контролов"
  "Открыть вкладку Документы на контроле с проверкой"
  "Заголовок текущего контрола" РАВНО 'Документ отсутствует в базе' ?ASSURE 'Не смогли найти и удалить документ на контроле!'
  "Нажать Delete и ответить 'Да' в появившемся диалоге" 
 END
;

PROCEDURE "В БП ищем контекст по виду и проверить отсутствие диалога с кнопкой Да" STRING IN Context STRING IN Type
 PROCEDURE Действия
  "В БП ищем контекст {(Context)} по типу {(Type)}"
 ;

 "{(@ Действия)} и проверить отсутствие диалога с кнопкой Да"
;

PROCEDURE "Сравнить количество элементов командного меню Анализ с эталоном"
 "Найти элементы меню {('Анализ')} на форме {("Текущая активная вкладка")}" "Количество элементов меню" .
;

VOID WORDWORKER "Открыть документ в новом окне и выполнить" INTEGER IN NumDoc
 "Открыть документ {(NumDoc)} в новом окне, предварительно выполнив с ним {(@ NOP )} и сделать {(@ ( WordToWork DO ) )}"
;

PROCEDURE "Сравнить с эталоном заголовки открытых вкладок"
 INTEGER VAR aCurrentTab
 aCurrentTab := 0 
 vcm:tabs:Count раз (
  [ 'Заголовок ' ( aCurrentTab 1 + ) IntToStr ' вкладки: ' aCurrentTab vcm:tabs:GetCaption ] strings:Cat .
  ++! aCurrentTab
 )
;

PROCEDURE "Установить курсор мыши чуть выше центра крестика закрытия второй вкладки"
 "Установить курсор мыши по координатам {(347 14)} относительно контрола {("Главное окно")}"
;

PROCEDURE "Сравнить с эталоном состав подраздела 'Справочная информация - Инфарм' вкладки Меню"
 "Свернуть текущее дерево"
 2 раза ( "Стрелка вниз" )
 Если ( "Заголовок текущего контрола" РАВНО 'Справочная информация' ) то
  ( "Спускаемся в дереве на уровень вниз"
    8 раз ( "Стрелка вниз" )
    Если ( "Заголовок текущего контрола" РАВНО 'Инфарм' ) то
     ( "Спускаемся в дереве на уровень вниз"
       5 раз ( "Сравнить заголовок текущего контрола с эталоном"
        "Стрелка вниз" )
     )
  иначе ( false ?ASSURE 'Не попали в раздел Инфарм!' )
  )
 иначе ( false ?ASSURE 'Не попали в раздел Справочная информация!' )
;

VOID WORDWORKER "Открыть ссылку в новой вкладке и выполнить"
 "##Запомнить текущую вкладку и выполнить" (
  "Открыть гиперссылку в новой вкладке"
  "Убедиться, что новая вкладка не стала активной"
  vcm:tabs:Count РАВНО 2 ?ASSURE 'Новая вкладка по ссылке не открылась!' 
  "##Дать тесту время для отрисовки контролов"
  WordToWork DO
 )
;

PROCEDURE "Убедиться, что вкладку можно дублировать" INTEGER IN NumTab
 NumTab 1 - =: NumTab
 NumTab vcm:tabs:CanDuplicate ?ASSURE 'Указанную вкладку НЕЛЬЗЯ дублировать!'
;

PROCEDURE "Убедиться, что вкладку нельзя дублировать" INTEGER IN NumTab
 NumTab 1 - =: NumTab
 NumTab vcm:tabs:CanDuplicate ! ?ASSURE 'Указанную вкладку МОЖНО дублировать!'
;

PROCEDURE "Сравнить с эталоном выбранное значение, активность и хинт контрола " OBJECT IN Ctrl
 OBJECT VAR CurrentControl
 Ctrl =: CurrentControl
 'Значение по-умолчанию равно: ' CurrentControl pop:Control:Caption ToPrintable Cat .
 "Сравнить с эталоном активность контрола {(CurrentControl)}"
 "Аккуратно сравнить с эталоном строковое значение свойства {('Hint')} объекта {(CurrentControl)}"
;

PROCEDURE "Сравнить с эталоном выбранное значение, активность и хинт текущего контрола"
 "Сравнить с эталоном выбранное значение, активность и хинт контрола {("Контрол в фокусе")}"
;

PROCEDURE "Сравнить с эталоном свойства контролов на первой странице Настроек конфигурации - Конфигурация"
 PROCEDURE Действия OBJECT IN Контрол
  Если ( ( Контрол ЯВЛЯЕТСЯ class::TnscComboBoxWithReadOnly ) 
    ИЛИ ( Контрол "Заголовок контрола" РАВНО 'Название конфигурации:' ) 
    ИЛИ ( Контрол "Заголовок контрола" РАВНО 'Описание конфигурации:' ) 
  ) то
   ( "Сравнить с эталоном выбранное значение, активность и хинт контрола {(Контрол)}"
    "##Отделить текст в эталоне"
   )
 ;
 "Диалог Настройка конфигурации" "Выполнить для всех контролов" Действия
;

VOID WORDWORKER "Переключиться на конфигурацию и выполнить" STRING IN NameConf
 TRY
  "Переключиться на конфигурацию {(NameConf)}"
  ( WordToWork DO )
 FINALLY
  "Переключиться на конфигурацию {('Основная')}"
 END
;

PROCEDURE "Копировать расширенную конфигурацию, задать новое название и описание " STRING IN NewNameConf STRING IN NewDescriptionConf
 "Открыть вкладку 'Список конфигураций' и выполнить" (
  "Найти конфигурацию {('Расширенная')}"
  @ "Копировать текущую конфигурацию" MODAL (  
   "Путь до контрола: {(0)} раз вниз, {(1)} раз Tab"
   "Ввести строку {(NewNameConf)}"
   "Путь до контрола: {(0)} раз вниз, {(1)} раз Tab"
   "Ввести строку {(NewDescriptionConf)}"
   "Кликаем Ок в Настройке конфигурации"
  )  
 )
;

VOID WORDWORKER "Нажать Enter и выполнить с диалогом"
 @ ( "Нажать Enter" ) MODAL ( 
  ( WordToWork DO )
 )
;

PROCEDURE "##Костыль, чтобы корректно восстановить Количество элементов в истории"
 // Нужен до исправления ошибки: {requestlink:423171494}
 "Открыть диалог Настройка конфигурации и выполнить" (
 "Путь до контрола: {(0)} раз вниз, {(10)} раз Tab" 
 "Убедиться, что текущий контрол {('TvtSpinEdit')}"
 "Заголовок текущего контрола" РАВНО 7 ?ASSURE 'Другой SpinEdit!'
 "Ввести строку {('10')}" 
 "Кликаем Ок в Настройке конфигурации"
 ) 
;

PROCEDURE "Заполнить историю навигации (открыть 11 терминов подряд)"
 "Очистить историю"
 "Толковый словарь"
 "Перевести фокус в дерево терминов"
 11 раз ( "Стрелка вниз" "Дождаться переключения вкладок" )
;

PROCEDURE "Сравнить с эталоном умолчательные параметры спиннера 'Количество элементов в истории' и изменить значение на 7"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(1)} раз вниз, {(10)} раз Tab" 
  OBJECT VAR CurrentControl
  "Контрол в фокусе" =: CurrentControl
  "Убедиться, что текущий контрол {('TvtSpinEdit')}"
  "Сравнить с эталоном активность контрола {(CurrentControl)}"
  "Аккуратно сравнить с эталоном строковое значение свойства {('Hint')} объекта {(CurrentControl)}"
  'Значение по-умолчанию у SpinEdit равно ' CurrentControl pop:Control:Caption ToPrintable Cat .
  "Ввести строку {('7')}" 
  "Кликаем Ок в Настройке конфигурации"
 )
 "##Отделить текст в эталоне"
 'Изменили на 7: ' .
;

STRING FUNCTION "Заголовок текущей вкладки"
 vcm:tabs:Active vcm:tabs:GetCaption =: Result
;

PROCEDURE "Сравнить с эталоном заголовок текущей вкладки"
 "Заголовок текущей вкладки" .
;

PROCEDURE "Открыть документ из списка и сравнить с эталоном количество открытых вкладок и окон"
 "##Запомнить текущую вкладку и выполнить" (
  "##Запомнить главное окно Гаранта и выполнить" (
   "В БП ищем контекст {('устройства электропроигрывающие')}"
   "Открыть текущий документ списка"
   'Открыли документ из списка:' .
   "Сравнить с эталоном количество открытых вкладок"
   [ 'Количество открытых окон: ' "Количество открытых окон Гаранта" IntToStr ] strings:Cat .
  )
 )
;

PROCEDURE "Открыть ссылку из документа и сравнить с эталоном количество открытых вкладок и окон"
 "##Запомнить текущую вкладку и выполнить" (
  "Открываем {(890312)}"
  "Перейти к следующей ссылке"
  "Кликнуть по гиперссылке и выполнить" (
   'Открыли ссылку из документа:' .
   "Сравнить с эталоном количество открытых вкладок"
   [ 'Количество открытых окон: ' "Количество открытых окон Гаранта" IntToStr ] strings:Cat .
  )
 )
;

VOID WORDWORKER "##Вернуться к вкладке без индекса после выполнения"
 TRY
  WordToWork DO
 FINALLY
  "##Вернуться к вкладке без индекса"
 END
;

PROCEDURE "В настройке конфигурации выбираем: Поведение системы - Фильтры - Карточки поиска: Показывать " STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(8)} раз Tab"
  "Поставить галочку в чекбоксе"
  2 раза ( "Нажать {('Tab')}" )
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"  
  "Кликаем Ок в Настройке конфигурации" 
 )
;

PROCEDURE "В настройке конфигурации выбираем: Поведение системы - Фильтры - Карточки поиска: Показывать слева"
 "В настройке конфигурации выбираем: Поведение системы - Фильтры - Карточки поиска: Показывать {('Слева')}"
;

PROCEDURE "В настройке конфигурации выбираем: Поведение системы - Фильтры - Карточки поиска: Показывать справа"
 "В настройке конфигурации выбираем: Поведение системы - Фильтры - Карточки поиска: Показывать {('Справа')}"
;

PROCEDURE "В настройке конфигурации выбираем: Поведение системы - Фильтры - Карточки поиска: Не закреплен"
 "В настройке конфигурации выбираем: Поведение системы - Фильтры - Карточки поиска: Показывать {('Не закреплен')}"
;

PROCEDURE "В настройке конфигурации снимаем галочку у: Поведение системы - Фильтры - Список"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(9)} раз Tab"
  "Снять галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации" 
 )
;

PROCEDURE "В настройке конфигурации выбираем: Поведение системы - Фильтры - Список: Показывать справа"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(10)} раз Tab"
  Если ( "Контрол в фокусе" ЯВЛЯЕТСЯ class::TvtComboBoxQS ) то
   ( "Сразу выбрать в текущем комбобоксе значение {('Справа')}" )
  иначе
   ( "Контрол в фокусе" . )
  "Кликаем Ок в Настройке конфигурации" 
 )
;

PROCEDURE "Изменить настройки конфигурации: снять галочку у пункта 'Звуковой сигнал при неверном вводе'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(14)} раз Tab"
  "Снять галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Основное меню: показывать '" STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(2)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Нажать {('Tab')}"
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"  
  "Кликаем Ок в Настройке конфигурации"
 )
;


PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Основное меню: показывать Слева'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Основное меню: показывать {('Слева')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Основное меню: показывать Справа'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Основное меню: показывать {('Справа')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Основное меню: Не закреплен'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Основное меню: показывать {('Не закреплен')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Мои документы: показывать '" STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(3)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Нажать {('Tab')}"
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"  
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Мои документы: показывать Слева'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Мои документы: показывать {('Слева')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Мои документы: показывать Справа'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Мои документы: показывать {('Справа')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Мои документы: Не закреплен'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Мои документы: показывать {('Не закреплен')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Конфигурации: показывать '" STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(4)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Нажать {('Tab')}"
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"  
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Конфигурации: показывать Слева'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Конфигурации: показывать {('Слева')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Конфигурации: показывать Справа'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Конфигурации: показывать {('Справа')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Конфигурации: Не закреплен'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Конфигурации: показывать {('Не закреплен')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - На контроле: показывать '" STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(5)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Нажать {('Tab')}"
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"  
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - На контроле: показывать Слева'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - На контроле: показывать {('Слева')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - На контроле: показывать Справа'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - На контроле: показывать {('Справа')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - На контроле: Не закреплен'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - На контроле: показывать {('Не закреплен')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Панель задач: показывать '" STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(2)} раз вниз, {(6)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Нажать {('Tab')}"
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"  
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Панель задач: показывать Слева'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Панель задач: показывать {('Слева')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Панель задач: показывать Справа'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Панель задач: показывать {('Справа')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Панель задач: Не закреплен'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Поведение системы - Вкладки - Панель задач: показывать {('Не закреплен')}'"
;

PROCEDURE "Сравнить с эталоном реальный масштаб открытой картинки"
 OBJECT VAR PictureForm
 "Найти контрол {(контрол::ieViewer)} на форме {("Текущая активная вкладка")}" "Получить родительскую форму" =: PictureForm
 "Аккуратно сравнить с эталоном целочисленное свойство {( 'Scale' )} объекта {(PictureForm)}"
;

PROCEDURE "Выбрать в комбобоксе масштаб 2000% (мышкой)"
 OBJECT VAR Combobox
 "Найти контрол {(контрол::bt_enPicture_opResize)} на форме {("Текущая активная вкладка")}" =: Combobox
 "Установить фокус в {(Combobox)}"
 "Нажать {('Down')}"
 "##Дать тесту время для отрисовки контролов"
 "Установить курсор мыши по координатам {( 20 33 )} относительно контрола {(Combobox)}"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Убедиться, что активна вкладка" INTEGER IN RealNumTab
 "##Дать тесту время для отрисовки контролов"
 INTEGER VAR NumTab
 RealNumTab 1 - =: NumTab
 "Запомнить номер текущей вкладки" РАВНО NumTab ?ASSURE [ RealNumTab IntToStr ' вкладка неактивна!' ]
;

VOID WORDWORKER "##Оставить после теста текущей вкладкой последнюю активную"
 TRY
  ( WordToWork DO )
 FINALLY
  "Закрыть все вкладки, кроме текущей"
 END
;

PROCEDURE "Сравнить с эталоном количество элементов в текущем дереве"
 'Количество элементов в текущем дереве: ' "Контрол в фокусе" "Количество элементов дерева" ToPrintable Cat .
;

PROCEDURE "Отдочить вкладку" INTEGER IN NumTab
 vcm:tabs:Count "БОЛЬШЕ ИЛИ РАВНО" NumTab ?ASSURE 'Указан неправильный номер вкладки, их столько не открыто!'
 NumTab 1 - =: NumTab
 INTEGER VAR aHandle
 aHandle := "Сохранить активное окно" 
 NumTab vcm:tabs:CanUndock ?ASSURE 'Указанную вкладку НЕЛЬЗЯ отдочить!'
 NumTab vcm:tabs:Undock 
 "##Дать тесту время для отрисовки контролов"
 "Количество открытых окон Гаранта" БОЛЬШЕ 1 ?ASSURE 'Новое окно не открылось, хотя должно!'
 ++! NumTab
 Если ( NumTab РАВНО 1 ) то (
  "Сохранить активное окно" РАВНО aHandle ?ASSURE 'Первая вкладка отдочена в новое окно, но не переключились в него!' )
 иначе
  ( "Сохранить активное окно" НЕРАВНО aHandle ?ASSURE 'Вкладка отдочена в новое окно, но не переключились в него!' )
;

VOID WORDWORKER "Отдочить вкладку и выполнить" INTEGER IN NumTab
 "##Запомнить главное окно Гаранта и выполнить" (
  "Отдочить {(NumTab)} вкладку"
  WordToWork DO
  "##Дать тесту время для отрисовки контролов"
 )
;

PROCEDURE "Кликнуть колесиком мыши по названию первого документа"
 "##Дать тесту время для отрисовки контролов"
 "Установить курсор мыши по координатам {(150 50)} относительно контрола {(контрол::tvList:push)}"
 "Клик средней кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;  

WORDWORKER "Сравнить с эталоном количество открытых вкладок и окон после выполнения"
 "##Запомнить текущую вкладку и выполнить" (
  "##Запомнить главное окно Гаранта и выполнить" (
   ( WordToWork DO )
   "Сравнить с эталоном количество открытых вкладок"
   "Сравнить с эталоном количество открытых окон Гаранта"
  )
 )
;

PROCEDURE "Изменить настройки конфигурации: Поиск - Список после Базового Поиска - Полный"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(3)} раз вниз, {(2)} раз Tab"
  "Сразу выбрать в текущем комбобоксе значение {('Полный')}"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Списки документов - Автоматический переход'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(4)} раз вниз, {(3)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Открыть новую вкладку через КМ заголовка второй (активной) вкладки"
 THREAD (
  800 SLEEP
  "Установить курсор мыши по координатам {(380 25)} относительно контрола {("Главное окно")}"
  "Клик левой кнопкой мыши"
 )
 "Установить курсор мыши по координатам {(347 14)} относительно контрола {("Главное окно")}"
 "Клик правой кнопкой мыши"
;

PROCEDURE "Изменить настройки конфигурации: снять галочку у пункта 'Списки документов - В режиме синхронного просмотра по умолчанию показывать аннотацию к документу'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(4)} раз вниз, {(6)} раз Tab"
  "Снять галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: 'Списки документов - Тип сортировки: '" STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(4)} раз вниз, {(1)} раз Tab"
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"
 7 раз ( "Нажать {('Tab')}" )
 4 раза ( "Нажать {('Up')}"
  OnTest )
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: 'Списки документов - Порядок сортировки: '" STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(4)} раз вниз, {(2)} раз Tab"
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Списки документов - Экспортировать и печатать списки без вхождений: Препараты'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(4)} раз вниз, {(5)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: снять галочку у пункта 'Документ - Показывать вкладку с текстом предупреждений'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(1)} раз Tab"
  "Снять галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Документ - Показывать вкладку с информацией о документе'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(2)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: снять галочку у пункта 'Документ - Показывать вкладку с переводом'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(3)} раз Tab"
  "Снять галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: 'Документ - Показывать информацию об изменениях в тексте документа: В свернутом виде'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(5)} раз Tab"
  "Выбрать в комбобоксе {("Контрол в фокусе")} значение {('В свернутом виде')}"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Документ - Вкладки - Редакции: показывать '" STRING IN WhereToShow
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(14)} раз Tab"
  "Поставить галочку в чекбоксе"
  "Нажать {('Tab')}"
  "Сразу выбрать в текущем комбобоксе значение {(WhereToShow)}"  
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Документ - Вкладки - Редакции: показывать Слева'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Документ - Вкладки - Редакции: показывать {('Слева')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Документ - Вкладки - Редакции: показывать Справа'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Документ - Вкладки - Редакции: показывать {('Справа')}'"
;

PROCEDURE "Изменить настройки конфигурации: поставить галочку у пункта 'Документ - Вкладки - Редакции: Не закреплен'"
 "Изменить настройки конфигурации: поставить галочку у пункта 'Документ - Вкладки - Редакции: показывать {('Не закреплен')}'"
;

PROCEDURE "Изменить настройки конфигурации: выбрать у пункта 'Документ - Масштаб графических изображений: значение '" STRING IN НовыйМасштаб
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(8)} раз Tab"
  "Сразу выбрать в текущем комбобоксе значение {(НовыйМасштаб)}"  
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Изменить настройки конфигурации: Документ\Первая вкладка - - " STRING IN SCRView STRING IN Type
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(10)} раз Tab"
  "Сразу выбрать в текущем комбобоксе значение {(SCRView)}"
  Если ( SCRView НЕРАВНО 'Не показывать' ) то (
   "Нажать {('Tab')}"
   "Сразу выбрать в текущем комбобоксе значение {(Type)}"
  )
  иначе (
   [ 'Не можем установить тип: ' Type ' , т.к. первая пользовательская вкладка не показывается!' ] strings:Cat .
  )
  "Кликаем Ок в Настройке конфигурации" 
 )
;

PROCEDURE "Изменить настройки конфигурации: Документ\Вторая вкладка - - " STRING IN SCRView STRING IN Type
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(12)} раз Tab"
  "Сразу выбрать в текущем комбобоксе значение {(SCRView)}"
  Если ( SCRView НЕРАВНО 'Не показывать' ) то (
   "Нажать {('Tab')}"
   "Сразу выбрать в текущем комбобоксе значение {(Type)}"
  )
  иначе (
   [ 'Не можем установить тип: ' Type ' , т.к. вторая пользовательская вкладка не показывается!' ] strings:Cat .
  )
  "Кликаем Ок в Настройке конфигурации" 
 )
;

PROCEDURE "Изменить настройки конфигурации: снять галочку у пункта 'Документ - Экспортировать вместе с фрагментами текста их названия'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(5)} раз вниз, {(4)} раз Tab"
  "Снять галочку в чекбоксе"
  "Кликаем Ок в Настройке конфигурации"
 )
;

PROCEDURE "Сделать эталон-скриншот верхней части флеш-документа" 
 "##Дать тесту время для отрисовки контролов"
 "Контрол в фокусе" ЯВЛЯЕТСЯ class::TvtShockwaveFlashEx ?ASSURE [ 'Фокус в ' "Контрол в фокусе" pop:Component:Name ', а должен быть в Flash!' ]
 "Сделать эталон-скриншот контрола {("Контрол в фокусе")}, отступив от начальной точки {(0 0)} и задав измеряемую область в {(100 140)}"
 // 1350 850
;

PROCEDURE "Установить курсор мыши на заголовок третьей вкладки"
 "Установить курсор мыши по координатам {(410 15)} относительно контрола {("Главное окно")}"
;

PROCEDURE "Открыть новую вкладку через КМ, вызванное на третьей вкладке"
 THREAD ( 800 SLEEP
  "Установить курсор мыши по координатам {(425 25)} относительно контрола {("Главное окно")}"
  "Клик левой кнопкой мыши"
  "##Дать тесту время для отрисовки контролов" 
 )
 "Установить курсор мыши на заголовок третьей вкладки"
 "Клик правой кнопкой мыши"
;

PROCEDURE "Перейти на вкладку ТК во флеше"
 "Установить курсор мыши по координатам {( 380 100 )} относительно контрола {("Контрол в фокусе")}"
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "Убедиться, что текущий кадр флеша - вкладка ТК"
 "##Дать тесту время для отрисовки контролов"
 "Проверить что номер кадра флеша равен {(34)}"
;

PROCEDURE "Пересечь текущий список с сохраненным в МД"
 @ "Пересечь со списком" MODAL ( 
  "Развернуть текущее дерево"
  "Стрелка вниз"
  "Заголовок текущего контрола" НЕРАВНО 'Общие' ?ASSURE 'Нет списка для пересечения!'
  "Дождаться переключения вкладок" 
  OBJECT VAR "Модальный диалог работы с МД"
  OBJECT VAR "Кнопка ОК"
  "Контрол в фокусе" 2 раза ( "Получить родительскую форму" ) =: "Модальный диалог работы с МД"
  "Модальный диалог работы с МД" "Объект существует?" ?ASSURE 'Не нашли модальный диалог работы с МД'
  контрол::bt_enResult_opOk "Модальный диалог работы с МД" pop:Control:FindControlByName =: "Кнопка ОК"
  "Кнопка ОК" pop:Control:Enabled ?ASSURE 'Кнопку ОК невозможно нажать (неактивна)!'
  "Кнопка ОК" "Кликнуть"
 )
 "##Дать тесту время для отрисовки контролов"
;

PROCEDURE "##Еще один костыль, чтобы корректно восстановить Количество элементов в истории"
 // Нужен до исправления ошибки: {requestlink:423171494}
 "Восстановить настройки"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(1)} раз вниз, {(10)} раз Tab" 
  "Убедиться, что текущий контрол {('TvtSpinEdit')}"
  "Заголовок текущего контрола" РАВНО 10 ?ASSURE 'Другой SpinEdit!'
  "Ввести строку {('9')}"
  "Кликаем Ок в Настройке конфигурации"
 ) 
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Путь до контрола: {(0)} раз вниз, {(10)} раз Tab" 
  "Убедиться, что текущий контрол {('TvtSpinEdit')}"
  "Заголовок текущего контрола" РАВНО 9 ?ASSURE 'Другой SpinEdit!'
  "Ввести строку {('10')}"
  "Кликаем Ок в Настройке конфигурации"
 ) 
;

PROCEDURE "Восстановить настройки и сравнить с эталоном параметры спиннера 'Количество элементов в истории'"
 "Открыть диалог Настройка конфигурации и выполнить" (
  "Ответить один раз Да для {(@ "Нажать кнопку Восстановить все в Настройке конфигурации" )}"
  "Путь до контрола: {(1)} раз вниз, {(10)} раз Tab" 
  OBJECT VAR CurrentControl
  "Контрол в фокусе" =: CurrentControl
  "Убедиться, что текущий контрол {('TvtSpinEdit')}"
  'После восстановления настроек значение у SpinEdit равно ' CurrentControl pop:Control:Caption ToPrintable Cat .
  "##Отделить текст в эталоне"
 )
;

VOID WORDWORKER "Восстановить после теста K423171494 корректные настройки"
 TRY
  WordToWork DO
 FINALLY 
  "##Еще один костыль, чтобы корректно восстановить Количество элементов в истории"
 END
;

PROCEDURE "Сравнить с эталоном тулбар с выбором языка в ТС"
 "Сравнить  содержимое тулбара {(форма::Diction)} объекта {('tbenDictionBottom')} с эталоном"
;

PROCEDURE "Сохранить объект с именем , затем изменить имя сохраненного объекта на " STRING IN FirstName STRING IN NewName
 "Сохраняем объект в папку Мои документы с именем {(FirstName)}"
 ОМ
 "Мои документы"
 "Развернуть текущее дерево"
 "Стрелка вниз"
 "Кликаем кнопку {(контрол::bt_enFolderElement_opEdit)} на тулбаре"
 "Заголовок текущего контрола" РАВНО FirstName ?ASSURE 'Не попали в поле "Имя" свойств объекта!'
 "Ввести строку {(NewName)}"
 "Нажать Enter"
 "Заголовок текущего контрола" РАВНО NewName ?ASSURE 'Имя объекта не изменилось!'
;

WordAlias "Открыть список из Моих документов" "Нажать Enter"

PROCEDURE "Развернуть первый сворачиваемый блок в 57970704"
 "Поставить фокус в правую половину ААК-Содержания"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(0 -150)}"
 "Дождаться переключения вкладок"
 "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crHandPoint' ?ASSURE 'Не попали мышкой на первый сворачиваемый блок!'
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
 "В начало документа"
 "Узнать номер текущего параграфа" РАВНО 42 ?ASSURE 'Не развернулся первый сворачиваемый блок (не попали на вложенную в него ссылку)!'
;

PROCEDURE "Развернуть второй сворачиваемый блок в 57970704"
 "Поставить фокус в правую половину ААК-Содержания"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-200 40)}"
 "Дождаться переключения вкладок"
 "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crHandPoint' ?ASSURE 'Не попали мышкой на второй сворачиваемый блок!'
 "Клик левой кнопкой мыши"
 "##Дать тесту время для отрисовки контролов"
 INTEGER VAR НомерИтерации
 НомерИтерации := 1
 3 раза (
  "Стрелка вниз"
  "Узнать номер текущего параграфа" РАВНО 44 ?
   ( выходим )
  ++! НомерИтерации
  НомерИтерации МЕНЬШЕ 3 ?ASSURE 'Не развернулся второй сворачиваемый блок (не попали на вложенную в него ссылку)!'
 )
 // тройной переход (с запасом) потому что пропадает фокус с ссылки при разворачивании блока
;

PROCEDURE "Развернуть оба сворачиваемых блока в 57970704"
 "Развернуть первый сворачиваемый блок в 57970704"
 "Развернуть второй сворачиваемый блок в 57970704"
;

PROCEDURE "Кликнуть 3 раза над верхней плашкой в ААК-Содержании"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(0 -65)}"
 "Дождаться переключения вкладок"
 "Узнать индекс курсора мыши" "Узнать имя индекса курсора мыши" РАВНО 'crHandPoint' ?ASSURE 'Курсор изменился!'
 3 раза ( "Клик левой кнопкой мыши" )
;

PROCEDURE "Установить курсор мыши на второй сворачиваемый блок"
 "Ставим указатель мыши на конец текущего параграфа редактора {("Контрол в фокусе")} со смещением {(-100 25)}"
 "Клик левой кнопкой мыши"
;

PROCEDURE "Установить курсор мыши на второй сворачиваемый блок (свернут)"
 "Установить курсор мыши на второй сворачиваемый блок"
 "Узнать номер текущего параграфа" РАВНО 540 ?ASSURE 'Не установили курсор на второй сворачиваемый блок!'
;

PROCEDURE "Установить курсор мыши на второй сворачиваемый блок (развернут)"
 "Установить курсор мыши на второй сворачиваемый блок"
 "Узнать номер текущего параграфа" РАВНО 43 ?ASSURE 'Не установили курсор на второй сворачиваемый блок!'
;

