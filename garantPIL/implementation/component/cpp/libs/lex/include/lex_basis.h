///////////////////////////////////////////////////////////////////////////////
#ifndef	LEX_BASIS_H
#define	LEX_BASIS_H

#include "lex_parser.h"

///////////////////////////////////////////////////////////////////////////////

class	Char : public Parser {
public:
	Char(char val);
	~Char();

virtual	Match	Parse(const char *buf);

private:
	char	m_val;
};

///////////////////////////////////////////////////////////////////////////////

class	String : public Parser {
public:
	String(const char *val);
	~String();

virtual	Match	Parse(const char *buf);

private:
	char	*m_val;
	char	m_length;
};

///////////////////////////////////////////////////////////////////////////////

class	Digit : public Parser {
public:
	Digit();
	~Digit();

virtual	Match	Parse(const char *buf);
};

///////////////////////////////////////////////////////////////////////////////

class	Anychar : public Parser {
public:
	Anychar();
	~Anychar();

virtual	Match	Parse(const char *buf);
};

///////////////////////////////////////////////////////////////////////////////

class	Alpha : public Parser {
public:
	Alpha();
	~Alpha();

virtual	Match	Parse(const char *buf);
};

///////////////////////////////////////////////////////////////////////////////

class	Alnum : public Parser {
public:
	Alnum();
	~Alnum();

virtual	Match	Parse(const char *buf);
};

#endif
///////////////////////////////////////////////////////////////////////////////
