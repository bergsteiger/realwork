
<html>

<head>
<title>Activity: Develop Iteration Plan</title>
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="Microsoft Border" content="rb">
</head>

<body><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><!--msnavigation--><td valign="top">
<h2 class="banner"><a name="Top"></a><a name="XE_Iteration_Plan_document__developing"></a>Активность: Разработать план итерации</h2>
<div align="center">
<div align="center"><center>

<table border="1" width="85%" cellspacing="0" cellpadding="2" style="border: 1px solid rgb(128,128,128)">
  <tr>
    <td colspan="2" valign="top" bordercolor="#808080"><strong><font face="Arial"><small>Цель</small></font></strong><font size="4"><br>
    <small>Разработать подробный план итерации, включающий:</small></font>
    <ul>
      <li><font size="4"><small>детализированную декомпозию работ по активности и назначенные обязанности.</small></font></li>
      <li><font size="4"><small>внутриитерационные milestone'ы и поставляемые артефакты</small></font></li>
      <li><font size="4"><small>критерии оценки итерации</small></font></li>
    </ul>
    </td>
  </tr>
  <tr>
    <td colspan="2" valign="top" bordercolor="#808080"><small><strong><font face="Arial">Шаги</font></strong></small>
    <ul>
      <li><a href="#Determine the Iteration Scope">Определить границы итерации</a></li>
      <li><a href="#Define Iteration Evaluation Criteria">Задать критерии оценки итерации</a></li>
      <li><a href="#Define Iteration Activities">Задать активности итерации</a></li>
      <li><a href="#Assign Responsibilities">Назначить ответственности</a></li>
    </ul>
    </td>
  </tr>
  <tr>
    <td width="255" valign="top" bordercolor="#808080"><small><font face="Arial"><strong>Входящие артефакты:</strong></font></small>
    <ul>
      <li><a href="../../artifacts/projectmanagement/pa_sdp.htm">План разработки ПО</a></li>
      <li><a href="../../artifacts/analysisndesign/pa_sad.htm">Документ Программная архитектура</a></li>
      <li><a href="../../artifacts/environment/pa_devcase.htm">Положение о разработке</a></li>
      <li><a href="../../artifacts/projectmanagement/pa_risklist.htm">Список рисков</a></li>
      <li><a href="../../artifacts/requirements/pa_vision.htm">Видение</a></li>
    </ul>
    </td>
    <td width="255" style="text-indent: 0px" valign="top" bordercolor="#808080"><small><font face="Arial"><strong>Результирующие артефакты:</strong></font></small>
    <ul>
      <li>
        <p align="left"><a href="../../artifacts/projectmanagement/pa_itplan1.htm">План итерации</a></p>
      </li>
    </ul>
    </td>
  </tr>
  <tr>
    <td width="596" valign="top" colspan="2" style="text-indent: 4px" bordercolor="#808080"><small><font face="Arial"><strong>Частота:</strong></font></small>
    Один раз в итерацию</td>
  </tr>
  <tr>
    <td width="596" valign="top" colspan="2" style="text-indent: 4px" bordercolor="#808080"><strong><font face="Arial"><small>Роль:</small>
    </font></strong><a href="http://process/RationalUnifiedProcess/process/workers/wk_projm.htm">Менеджер проекта</a></td>
  </tr>
</table>
</center></div>

</div>

<p>Итерация - это набор распределенных во времени задач, сфокусированный на выпуске выполнимого модуля. Для всех итераций, 
кроме последней, результат - это промежуточный продукт, выпускаемый для снижения рисков и подготовке проекта к последующему 
успешному завершению.</p>
<p>Итерационность подразумевает точное определение объемов работ. Она необходима для выпуска качественного продукта: создавая
промежуточные продукты и оценивая годность архитектуры продукта <strong>часто и заранее</strong>, качество конечного
продукта повышается, пока изменения не очень дороги и легко внедримы.</p>

<h3><a name="XE_Iteration_Plan_document__determining_scope_of_iteration"></a><a name="XE_iteration__determining_scope_of"></a><a name="Determine the Iteration Scope">Определить границы итерации</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<div align="center"><center>

<table border="1" width="85%" cellspacing="0" cellpadding="2" style="border: 1px solid rgb(128,128,128)">
  <tr>
    <td width="365" valign="top" bordercolor="#808080"><small><strong><font face="Arial">Цель</font></strong></small>
    <ul>
      <li>Выбрать прецеденты для реализации в итерации.</li>
      <li>Задать нефункциональные требования, которые должны быть проработаны в итерации.</li>
    </ul>
    </td>
  </tr>
  <tr>
    <td width="596" valign="top" style="text-indent: 4px" bordercolor="#808080"><small><font face="Arial"><strong>Руководство:
    </strong></font></small><a href="http://process/RationalUnifiedProcess/process/modguide/md_itpln.htm">План итерации</a></td>
  </tr>
</table>
</center></div>

<p>Границы итерации определяются на основании следующих факторов:
<ul>
  <li>наивысшие риски проекта</li>
  <li>необходимая функциональность системы</li>
  <li>время, определенное в Плане проекта</li>
  <li>фаза и ее специфичные цели (см. <a href="../../phases/overview.htm">Фазы</a>)</li>
</ul>
<h4>На фазе <a href="../../phases/elaboration.thm">Уточнение</a>:</h4>
<p>Имеется 3 основных критерия для задания целей итерации на Фазе Уточнение:
<ul>
  <li>Риски</li>
  <li>Критичность</li>
  <li>Охват</li>
</ul>
<p>Основное - это риски. Вам нужно смягчить или избавится от рисков как можно раньше. Это основное условия на фазе Уточнение,
где большинство рисков должны быть уменьшены. Однако, этот процесс может продолжится и на фазе Конструирование, если останутся 
высокие риски или появятся новые. Одна из целей фазы Уточнение - определить архитектуру, в связи с чем появляется необходимость
в уверенности, что принятая архитектура  включает все аспекты разрабатываемого программного обеспечения (<strong>Охват</strong>).
Архитектура используется для дальнешего планирования: организации команды разработчиков, оценки разрабатываемого кода и т.п.</p>
<p>Наконец, фокусируясь на важных рисках, нужно помнить, что является основной целью системы; решение всех сложных проблем - 
это одна сторона медали, другая же - это то, что это решение не должно идти вразрез с ключевой функциональностью: будьте уверены,
что критичные функции системы действительно рассмотрены (<strong>критичность</strong>), даже если нет рисков, связанных с ними.</p>
<p>Из Списка рисков для наиболее опасных из них определите сценарий в нескольких прецедентах, который должен заставить команду 
разработчиков бороться с риском.</p>
<p class="exampleheading">Примеры</p>
<blockquote>
  <ul>
    <li>Если выделен риск интерации например &quot;СУБД D корректно работает на ОС Y&quot;, создайте сценарий, который включает
      даже самое скромное взаимодействие с СУБД.</li>
    <li>Если выделен риск производительности &quot;Время вычисления траектории полета самолета&quot;, создайте сценарий, который 
      включает такое вычисление как минимум для самого ясного или частого случая.</li>
  </ul>
</blockquote>
<p>Для <strong>Критичности</strong>, включите в итерацию основные функции, реализуемые системой.
<a href="../../artifacts/pa_sad.htm">Артефакт: Документ Программная Архитектура</a> используется для выбора соответствующих 
прецедентов, когда специалист, исполняющий <a href="http://process/RationalUnifiedProcess/process/workers/wk_archt.htm">Роль:
Программный Архитектор</a> расставил приоритеты, отражающие архитектурно значимые прецеденты и сценарии.</p>
<p class="exampleheading">Пример</p>
<blockquote>
  <ul>
    <li>Для переключателя телефонов, простой звонок станция-станция является очевидной функцией и должна быть реализована в 
      ранних итерациях. Это намного более важно, чем реализация ошибочных состояний в конфигурации оператора подсистемы 
      обработки ошибок.</li>
  </ul>
</blockquote>
<p><strong>Охват</strong>, включает то, что нужно разработать, несмотря даже на то, что это ни критично, ни связано с рисками.</p>
<p>Часто экономически выгодно создавать сценарии, которые отрабатывают несколько функций одновременно.</p>
<p>Более опасно создавать сценарии &quot;сверх-толстые&quot;, например, попытаться покрыть очень много различных аспектов, 
вариантов и ошибочных ситуаций. (см. <a href="http://process/RationalUnifiedProcess/process/modguide/md_itpln.htm">Руководство:
План итерации</a>)</p>
<p>Также на фазе Уточнение важно помнить, что есть риски, связанные с человеческой и программистской природой: культура командной
работы, обучение, подбор инструментария, новая технология и пр. и только выполнив итерацию, вы снизите такие риски.</p>
<p class="exampleheading">Примеры</p>
<blockquote>
  <ol>
    <strong>
    <li>Создать одну запись подписчика на клиенской рабочей станции, которая будет сохранена на сервере, включая пользовательский
      диалог, но не включая все поля и допуская, что не обнаруживается ошибок.<br>
      </strong>Комбинируется несколько критичных функций и несколько интеграционных рисков (ПО СУБД и связи), а также 
      интеграционные цели (работа с 2 различными платформами). Также дизайнеры познакомятся с новым GUI-средством. Выпустим 
      прототип, который продемонстрируем конечному пользователю для обратной реакции.</li>
    <strong>
    <li>Сделать возможным создание около 20,000 подписчиков, и доступ каждому из них к системе не превышает 200 мс.<br>
    </strong>Реализуем несколько ключевых требований к производительности (объем данных, время ответа), которые могут 
    драматически показать несоответствие выбранной архитектуры для задачи.</li>
    <strong>
    <li>Сделать возврат (undo) на изменение адреса подписчика.<br>
    </strong>Эта простая функция направит дизайнеров на проектирование дизайна всех аналогичных функций.</li>
  </ol>
</blockquote>

<h4>На фазе <a href="../../phases/construction.htm">Конструирование</a>:</h4>
<p>Как проект перейдет на фазу Конструирование, риски останутся ключевым фактором, особенно новые, ранее непредвиденные. Но
уже начинает играть роль законченность прецедента. Итерации могут быть запланированы от одной функциональной возможности к 
другой, пытаясь завершить самые критичные раньше, чтобы их можно было протестировать в течение нескольких итераций. К концу 
фазы трудоемкость прецедентов будет основным фактором.</p>
<p class="exampleheading">Примеры</p>
<blockquote>
  <ol>
    <strong>
    <li>Реализовать все варианты переадресации звонков, включая ошибочные.<br>
    </strong>Это набор связанных функций. Некоторые из них могли быть реализованы на фазе Уточнение для 
    implemented during the elaboration phase, and will serve as a prototype for
    the rest of the development.</li>
    <strong>
    <li>Complete all telephone operator features except night service.<br>
    </strong>Another set of features.</li>
    <strong>
    <li>Achieve 5,000 transactions per hour on a 2 computer set-up.<br>
    </strong>This may step up the required performance relative to what was
    actually achieved in the previous iteration (only 2,357/hour)</li>
    <strong>
    <li>Integrate new version of Geographical Information System.<br>
    </strong>This may be a modest architectural change, necessitated by some
    problem discovered earlier.</li>
    <strong>
    <li>Fix all level 1 and level 2 defects<br>
    </strong>Fixes defects discovered during testing in the previous iteration
    and not fixed immediately but deferred<strong>.</strong></li>
  </ol>
</blockquote>
<h4>In the <a href="../itrwkfls/iwf_lit.htm">transition phase</a>:</h4>
<p>Finishing this generation of the product is the main goal. Objective for an
iteration are set in terms of which bugs are fixed, which improvements in
performance or usability are included. If features had to be dropped (or
disabled) in order to get in time to the end of construction (IOC milestone, or
&quot;beta&quot;), they may now be completed, or turned on, if they do not
jeopardize what has been achieved so far.</p>
<p class="exampleheading">Examples</p>
<blockquote>
  <ol>
    <strong>
    <li>Fix all severity 1 problems discovered on beta customer sites.<br>
    </strong>A goal in term of quality, may be related to credibility on the
    market.</li>
    <strong>
    <li>Eliminate all startup crashes due to mismatched data.<br>
    </strong>Another goal expressed in terms of quality.</li>
    <strong>
    <li>Achieve 2,000 transactions per minute.<br>
    </strong>Performance tuning, involving some optimization: data structure
    change, caching and smarter algorithm.</li>
    <strong>
    <li>Reduce the number of different dialog boxes by 30%.<br>
    </strong>Improve usability by reducing the visual clutter</li>
    <strong>
    <li>Produce German and Japanese versions.<br>
    </strong>The beta was produced only for English customers by lack of time
    and to reduce rework.</li>
  </ol>
</blockquote>
<h3><a name="XE_transition_iteration__evaluating"></a><a name="XE_Iteration_Plan_document__defining_evaluation_criteria"></a><a name="XE_iteration__defining_evaluation_criteria"></a><a name="XE_evaluation_criteria__of_iteration"></a><a name="XE_construction_iteration__evaluating"></a><a name="Define Iteration Evaluation Criteria">Define
Iteration Evaluation Criteria</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Each iteration results in an executable release. The release is not generally
production-quality (except in the final Transition iteration), but it can be
evaluated nonetheless.</p>
<h4><a name="XE_inception_iteration__evaluating"></a>Evaluating Inception
Iterations</h4>
<p>The Inception iteration generally focuses on proving the concept of the
product and building the support necessary to approve project funding. As a
result, the Iteration release is generally a functional proof-of-concept
prototype which lacks real implementation code under a thin veneer of user
interface. The evaluation criteria are oriented toward user acceptance and
qualitative measures.</p>
<p>Under some circumstances, key technical hurdles must be overcome in inception
before product funding is provided; if so, the evaluation criteria must reflect
this.</p>
<p>See the <a href="../itrwkfls/ms_lco.htm">evaluation
criteria for the inception phase</a>.</p>
<h4><a name="XE_elaboration_iteration__evaluating"></a>Evaluating Elaboration
Iterations</h4>
<p>Elaboration Iterations focus on creating a stable architecture. As a result,
Elaboration evaluation criteria must focus on assessing the stability of the
architecture. Measures that can be used are:
<ul>
  <li>Interface stability (or breakage)</li>
  <li>The rate of change in the Architecture (compared to an architectural
    baseline)</li>
  <li>performance of key functionality</li>
</ul>
<p>The key goal is to ensure that changes during the Construction phase do not
ripple throughout the system, causing excessive re-work.</p>
<p>See the <a href="../itrwkfls/ms_lca.htm">evaluation
criteria for the elaboration phase</a>.</p>
<h4>Evaluating Construction and Transition Iterations</h4>
<p>Construction and Transition iterations are measured along traditional
software testing and change management dimensions such as breakage, defect
density, and fault discovery rates. The focus in these iterations is finding
errors so that they can be fixed.</p>
<p>Errors are discovered in a number of ways: inspections and code reviews,
functional tests, performance tests and load tests. Each technique is oriented
toward discovering a particular set of defects, and each has its place.
Specifics on these techniques are discussed in the Rational Unified Process Testing
Workflow.</p>
<p>See the <a href="../itrwkfls/ms_ioc.htm">evaluation
criteria for the construction phase</a>, and also see the <a href="../itrwkfls/ms_pr.htm">evaluation
criteria for the transition phase</a>.</p>
<h3><a name="XE_Iteration_Plan_document__defining_iteration_activities"></a><a name="XE_iteration__defining_activities_in"></a><a name="Define Iteration Activities">Define
Iteration Activities</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Based upon the goals of the iteration, the set of activities to be performed
during the iteration must be selected. Typically, each iteration will make a
partial pass through all the activities in the software lifecycle:
<ul>
  <li>Use cases and scenarios are selected which exercise the required
    functionality</li>
  <li>The use case (or scenario) behavior is researched and documented</li>
  <li>The behavior is analyzed and allocated amongst subsystems and classes
    which provide the required behavior</li>
  <li>The classes and subsystems are designed, implemented and unit tested</li>
  <li>The system is integrated and tested as a whole</li>
  <li>For external releases (alpha, beta, and general availability) the product
    is packaged into a releasable form and transitioned to into its user
    environment.</li>
</ul>
<p>The degree to which these activities are performed varies with the iteration
and the phase of the project. The individual workflows (Requirements, Analysis
&amp; Design, Test, etc.) define the generic activities, which in turn are
tailored to the organization during process configuration.</p>
<h4>Identify affected artifacts and activities involved</h4>
<p>Once the scenarios or full blown use cases to be developed (plus defects to
be fixed) have been selected and briefly sketched, you need to find what are the
artifacts that will be affected:
<ul>
  <li>Which classes are to be revisited?</li>
  <li>Which subsystems are affected, or even created?</li>
  <li>Which interfaces are probably to be modified</li>
  <li>Which documents have to be updated</li>
</ul>
<p>Then extract from the process workflows the activities that are involved and
place them in your plan. Some activities are done once per iteration (example
here), some have to be done once per class, per use case, per subsystem
(example). Connect the activities with their obvious dependencies, and allocate
some estimated effort. Most of the activities described for the process are
small enough to be accomplished by one person, or a very small group of persons
in a matter of a few hours to a few days.</p>
<p>It is likely the case that you discover there is not enough time in the
iteration to accomplish all this. Rather than extending the iteration (hence
either extending the final delivery time, or reducing the number of iterations),
reduce the iteration ambitions. Depending on which phase you are in, make
scenarios simpler, eliminate or disable features.</p>
<h3><a name="XE_Iteration_Plan_document__assign_responsibilities"></a><a name="XE_iteration__assign_responsibilities"></a><a name="Assign Responsibilities">Assign
Responsibilities</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Once the set of activities for the iteration have been defined, they must be
assigned to individual project team members. Depending on the staff resources
available and the scope of the iteration, the activities may either be carried
out by a single individual or a team. Reviews and Inspections are, of course,
inherently team activities. Other activities, such as authoring use cases or
designing and implementing classes, are inherently solitary (except in the case
where a junior team member may be teamed with a senior team member who acts as a
mentor).</p>
<p>In general, each work product must be the responsibility of a single
individual, even if the work is done by a team:
<ul>
  <li>Use cases</li>
  <li>Subsystems</li>
  <li>Classes</li>
  <li>Tests and test plans</li>
  <li>etc.</li>
</ul>
<p>Without a single point of contact, ensuring consistency becomes nearly
impossible.<br>
<br>
<p><font face="Arial"><a href="../../copyrite/copyrite.htm"><small><small>Copyright&nbsp;
© 1987 - 2000 Rational Software Corporation</small></small></a></font>
<!--msnavigation--></td><td valign="top" width="24"></td><td valign="top" width="1%">
<p><a href="../../index.htm"></a></p>
<script language="JavaScript">
<!--
function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    if(window.name=="ory_doc")
    {
      window.name = "xyz1234";
    }
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
       top.location = new_ory_doc_loc;
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->
</script>
</body>

</html>
