uses
  States, Clicks, common, RunPrograms, DocumentWork,
  MenuWork, FoldersWork, SettingsWork, ListWork, SearchWork;

////////////////------Общие функции------///////////////////////////////////////

{                  
  TYPE: Документ / Комментарии
  DESC: Функция устанавливает комментарий по месту курсора
  RESULT:
  REMARK: Для установкикомментария через контекстное меню то необходжимо передать wndWithPopupMenu
}            

function Insert_Comment(
  const textComments: string;// текст комментария
  const wndWithPopupMenu : OleVariant = nil; // объект окна, на котором есть попап-меню
  const isUsePopupMenu : boolean = false; // использовать попап-меню
  const isBufer : boolean = false // Вбивать текст из клавиатуры, или вставлять из буфера по Ctrl+V
) : boolean;
begin
try
  if textComments = '' then Log.Error('Текст комментария Не передан');
   
  if isUsePopupMenu then  
  begin
    Sys.Keys ( '[Apps]' ) ;
    if NOT IsExists ( wndWithPopupMenu ) then Raise( 'Окно popup меню не найдено!' );
    if NOT ClickByPopUpMenuItem ( wndWithPopupMenu, 'Добавить мой комментарий' ) then
      Raise('Не удалось вызвать контекстную операцию ДОБАВИТЬ МОЙ КОММЕНТАРИЙ' );
  end
  else    
    PressKeyWithCheck(['[Enter]']);
    
  WaitForConfirmationWindow(Options.Run.Timeout div 20, 'Да', '*показ*комментариев*выключен*хотите*включить*' );  
  Delay ( Options.Run.Timeout div 60 );  
  if NOT isBufer then
    Sys.Keys(textComments)
  else
    if NOT ClickByMainMenuItem ( 'Правка\Вставить' ) then Raise( 'Не удалось вызвать: "Правка\Вставить"' );
    
  result := true;    
except
  Log.Message ( 'Insert_Comment: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;
end;
end;

{
  TYPE: Работа с документом
  DESC: Позиционирование в конец искомого контекста
  RESULT:
  REMARK: 
}  
function PositionInEndContext(
  wnd: OleVariant;  //Окно редактора с текстом, на котором будет вызвана функция
  context : string //искомый контекст  
 ) : boolean;      
begin
try
  if NOT IsExists(wnd) then Raise('Окно не существует!');  
  if NOT BaseSearchInDocument(wnd, context) then Raise('Искомый контекст не найден, переход невозможен!');
  wnd.SetFocus;
  Sys.Keys('[Right]');
  result := true;
except
  Log.Message('PositionInEndContext: ' + ExceptionMessage, '', pmNormal, GetLogAttr('EXCEPTION')); 
  result := false;
  CommonExceptionHandler;
end;
end;       


{
  TYPE: Работа с документом
  DESC: Перетягивает медаль в правый нижний угол документа документе
  RESULT: false, если комментарий существует
  REMARK:           (ПОКА НЕ использовать, надо тнемного переделать)
}  
function DragMedalsInDocument(
  wnd : string;  // Окно документа
  medal : string // Какая медалька будет перетянута
 ) : boolean;
var
  obj;
  x, y;
  dX, dY;
begin
try
  case medal of
    'МЕДАЛЬКА: РЕДАКЦИЯ НЕ ДЕЙСТВУЕТ' : obj := GetFromEditor('ЗНАЧОК: РЕДАКЦИЯ НЕ ДЕЙСТВУЕТ');    
    
    else Raise('Передан неправильный параметр medal!');    
  end;  
  
  if NOT IsExists(obj) then Raise('Неудалось найти значок искомой медальки');
  x := obj.Left + (obj.Width  div 2);
  y := obj.Top  + (obj.Height div 2);
  dX := wnd.Width  - x - (obj.Width  div 2)  - 20;
  dY := wnd.Height - y - (obj.Height  div 2) - 20;
  common.ScreenToClient(obj, x, y);
  if NOT DragExt(obj, x, y, dX, dY, '', 2) then Raise('Не удалось перетенуть медальку при помощи DragExt');
  result := true;
except
  Log.Message('DragMedalsInDocument: ' + ExceptionMessage, '', 10); 
  result := false;
  CommonExceptionHandler;
end;
end;

{
  TYPE: Работа с документом
  DESC: Проверяет, является ли выделенное конкретное слово гиперрссылкой
  RESULT: true, если только конкретно выделенное слово является гиперссылкой
  REMARK: Например: 
  1)Есть строка "Мой комментарий из n слов", гиперссылкой является полностью вся строка,
  выделенным является слово "комментарий". Тогда результатом ф-ции будет false, так как гиперссылкой
  является вся сторока, а не конкретное  выделенное слово.
  2)Есть строка "Мой комментарий из n слов", гиперссылкой является слово "комментарий",
  выделенным является слово "комментарий". Тогда результатом ф-ции будет true, так как только конкретное
  выделенное слово является гиперссылкой.    
}  
function SelectedWordIsHyperLink(
  wnd : string  // Окно документа
) : boolean;
var
  obj;
  x1, y1;
  x2, y2;
begin    
try                     
  if NOT MoveMouseToObject(wnd, 'start_selection.bmp', 0, 0) then Raise('Не удалось найти начало выделения');
  x1 := Sys.Desktop.MouseX;
  y1 := Sys.Desktop.MouseY;
  
  if NOT MoveMouseToObject(wnd, 'end_selection.bmp', 0, 0) then Raise('Не удалось найти конец выделения');
  x2 := Sys.Desktop.MouseX;
  y2 := Sys.Desktop.MouseY;  
  
  common.ScreenToClient(wnd, x1, y1);
  common.ScreenToClient(wnd, x2, y2);
  

  
except
  Log.Message('SelectedWordIsHyperLink: ' + ExceptionMessage, '', 10);
  result := false;
  CommonExceptionHandler;
end;
end;
/////////////////------Скрипты-------/////////////////////////////////////////

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.1: Проверить вызов команды Добавить пользовательский комментарий 
      из контекстного меню по правой кнопке мыши в тексте документа:
        HLTC76.1.1.1: на обычном тесте
}
function HLTC76_1_1_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий HLTC76_1_1_1';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber ( DOC_NUM ) then Raise( 'Не удалось открыть документ по Alt+N' ); 
  obj := GetFromEditor( 'ТЕКСТ ДОКУМЕНТА' );
  if NOT IsExists( obj ) then Raise( 'Не удалось получить ТЕКСТ ДОКУМЕНТА' );
  obj.SetFocus;
  Sys.Keys(' ^[Home]' );
  PressKeyNCount( '[Down]' , 5 );
  if NOT Insert_Comment ( COMMENT , obj , true) then
  begin  
    Log.Error('Не удалось поставить комментарий через контекстное меню'); 
    Raise( 'Не удалось поставить комментарий через контекстное меню' );
  end;  
  Sys.Keys( '^[Home]' );
  PressKeyNCount( '[Down]' , 6 );
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result :=  StringCompare(str, COMMENT );
  if NOT  result then
    Log.Error( 'Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning( 'Не было удалено ни одного комментария' );
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_1_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.1: Проверить вызов команды Добавить пользовательский комментарий 
      из контекстного меню по правой кнопке мыши в тексте документа:
        HLTC76.1.1.2: в заголовке
}
function HLTC76_1_1_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий HLTC76_1_1_2';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  if NOT Insert_Comment( COMMENT , obj , true ) then
  begin  
    Log.Error('Не удалось поставить комментарий через контекстное меню'); 
    Raise('Не удалось поставить комментарий через контекстное меню');
  end;  
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  Sys.Keys('[Down]');  
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT  result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_1_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.1: Проверить вызов команды Добавить пользовательский комментарий 
      из контекстного меню по правой кнопке мыши в тексте документа:
        HLTC76.1.1.3: в таблице
}
function HLTC76_1_1_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 2206319;
  CONTEXT = 'подъездные пути';
  COMMENT = 'Комментарий HLTC76_1_1_3';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  if NOT Insert_Comment( COMMENT , obj , true ) then
  begin  
    Log.Error('Не удалось поставить комментарий через контекстное меню'); 
    Raise('Не удалось поставить комментарий через контекстное меню');
  end;  
  Sys.Keys('^[Home]');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  Sys.Keys('[Down]');
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_1_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.1: Проверить вызов команды Добавить пользовательский комментарий 
      из контекстного меню по правой кнопке мыши в тексте документа:
        HLTC76.1.1.4: в тексте юридического комментария
        HLTC76.1.1.6: на ссылке
}
function HLTC76_1_1_4_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  CONTEXT = 'комментарий к преамбуле Конституции РФ';
  COMMENT = 'Комментарий HLTC76_1_1_4';
var
  obj;
  str;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  if NOT Insert_Comment( COMMENT , obj , true ) then
  begin  
    Log.Error('Не удалось поставить комментарий через контекстное меню'); 
    Raise('Не удалось поставить комментарий через контекстное меню');
  end;  
  Sys.Keys('^[Home]');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  Sys.Keys('[Down]');
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_1_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.1: Проверить вызов команды Добавить пользовательский комментарий 
      из контекстного меню по правой кнопке мыши в тексте документа:
        HLTC76.1.1.5: в тексте уже существующего пользовательского комментария
}
function HLTC76_1_1_5_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'HLTC76_1_1_5';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  PressKeyNCount( '[Down]' , 5 );
  if NOT Insert_Comment('Обычный ' + COMMENT) then Raise('Не удалось поставить комментарий');
  if NOT Insert_Comment('Контекстный ' + COMMENT , obj , true ) then
  begin  
    Log.Error('Не удалось поставить комментарий через контекстное меню'); 
    Raise('Не удалось поставить комментарий через контекстное меню');
  end;  
  Sys.Keys('^[Home]');
  PressKeyNCount( '[Down]', 7 );
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, 'Контекстный ' + COMMENT + 'Обычный ' + COMMENT);
  if NOT result then
    Log.Error('Комментарий, после добавления из контекстного меню - не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_1_5_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

 {
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.1: Проверить вызов команды Добавить пользовательский комментарий 
      из контекстного меню по правой кнопке мыши в тексте документа:
        HLTC76.1.1.7: в подписи принятия документа (слева и справа нажать правую кнопку мыши и 
        посмотреть, что присутствует команда        
}
function HLTC76_1_1_7_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM =	12017850;
  CONTEXT = 'Президента';
var
  obj;
  x, y;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT GetCoordsSearchContext(obj, CONTEXT, x, y) then Raise('Не удалось получить координаты искомого контекста');
  
  //Проверяем, что есть контекстная операция <Добавить пользовательский комментарий>
  obj.ClickR(1, y);
  if NOT  IsPopupMenuItemExists( obj, 'Добавить мой комментарий', true ) then
  begin
    Log.Error('В начале подписи нет пункта контекстного меню "Добавить мой комментарий"');
    Raise('В начале подписи нет пункта контекстного меню "Добавить мой комментарий"');
  end;  
  obj.ClickR(obj.Width -20, y);
  if NOT  IsPopupMenuItemExists( obj, 'Добавить мой комментарий', true ) then
  begin
    Log.Error('В конце подписи нет пункта контекстного меню "Добавить мой комментарий"');
    Raise('В начале подписи нет пункта контекстного меню "Добавить мой комментарий"');
  end;
  //Выполняем контекстную операцию <Добавить пользовательский комментарий>
  obj.ClickR(1, y);
  if NOT ClickByPopUpMenuItem ( obj, 'Добавить мой комментарий' )then
  begin
    Log.Error('В начале подписи Не удалось вызвать контекстную операцию ДОБАВИТЬ МОЙ КОММЕНТАРИЙ');
    Raise;
  end;  
  obj.ClickR(obj.Width -20, y);
  if NOT ClickByPopUpMenuItem ( obj, 'Добавить мой комментарий' )then
  begin
    Log.Error('В конце подписи Не удалось вызвать контекстную операцию ДОБАВИТЬ МОЙ КОММЕНТАРИЙ');
    Raise;
  end;
  result := true;  
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_1_7_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.1: Проверить вызов команды Добавить пользовательский комментарий 
      из контекстного меню по правой кнопке мыши в тексте документа:
        HLTC76.1.1.8: к пустому абзацу
}
function HLTC76_1_1_8_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий HLTC76_1_1_8';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  Sys.Keys('[Down]');
  if NOT Insert_Comment( COMMENT , obj , true ) then
  begin  
    Log.Error('Не удалось поставить комментарий через контекстное меню'); 
    Raise('Не удалось поставить комментарий через контекстное меню');
  end;
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');  
  PressKeyNCount( '[Down]' , 3 );  
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );  
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
    
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_1_8_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.1: Проверить вызов команды Добавить пользовательский комментарий 
      из контекстного меню по правой кнопке мыши в тексте документа:
        HLTC76.1.1.9: за пределами документа
}
function HLTC76_1_1_9_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 9015;
  COMMENT = 'Комментарий HLTC76_1_1_9';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  PressKeyWithCheck(['^[End]']);
  if NOT Insert_Comment( COMMENT , obj , true ) then
  begin  
    Log.Error('Не удалось поставить комментарий через контекстное меню'); 
    Raise('Не удалось поставить комментарий через контекстное меню');
  end;  
  obj.SetFocus;  
  Sys.Keys('^[Home]^[End][Left]');  
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_1_9_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;



{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.2: Проверить вызов команды Добавить пользовательский комментарий, нажав ENTER (комментарий 
      появляется после абзаца, в котором находился маркер-курсор в момент нажатия ENTER):
        HLTC76.1.2.1: на обычном тесте
}
function HLTC76_1_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий HLTC76_1_2_1';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber ( DOC_NUM ) then Raise( 'Не удалось открыть документ по Alt+N' ); 
  obj := GetFromEditor( 'ТЕКСТ ДОКУМЕНТА' );
  if NOT IsExists( obj ) then Raise( 'Не удалось получить ТЕКСТ ДОКУМЕНТА' );
  obj.SetFocus;
  Sys.Keys(' ^[Home]' );
  PressKeyNCount( '[Down]' , 5 );
  if NOT Insert_Comment (COMMENT) then
  begin  
    Log.Error('Не удалось поставить комментарий по Enter'); 
    Raise( 'Не удалось поставить комментарий по Enter' );
  end;  
  Sys.Keys( '^[Home]' );
  PressKeyNCount( '[Down]' , 6 );
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare(str, COMMENT );
  if NOT result then
    Log.Error( 'Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning( 'Не было удалено ни одного комментария' );
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.2: Проверить вызов команды Добавить пользовательский комментарий, нажав ENTER (комментарий
      появляется после абзаца, в котором находился маркер-курсор в момент нажатия ENTER):
        HLTC76.1.2.2: в заголовке
}
function HLTC76_1_2_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий HLTC76_1_2_2';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  Sys.Keys('[Right]');
  if NOT Insert_Comment( COMMENT ) then
  begin  
    Log.Error('Не удалось поставить комментарий по Enter'); 
    Raise('Не удалось поставить комментарий по Enter');
  end;  
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  Sys.Keys('[Down]');  
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_2_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.2: Проверить вызов команды Добавить пользовательский комментарий, нажав ENTER (комментарий
      появляется после абзаца, в котором находился маркер-курсор в момент нажатия ENTER):
        HLTC76.1.2.3: в таблице
}
function HLTC76_1_2_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 2206319;
  CONTEXT = 'подъездные пути';
  COMMENT = 'Комментарий HLTC76_1_1_3';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  if NOT Insert_Comment( COMMENT ) then
  begin  
    Log.Error('Не удалось поставить комментарий по Enter'); 
    Raise('Не удалось поставить комментарий по Enter');
  end;  
  Sys.Keys('^[Home]');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  Sys.Keys('[Down]');
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_2_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.2: Проверить вызов команды Добавить пользовательский комментарий, нажав ENTER (комментарий
      появляется после абзаца, в котором находился маркер-курсор в момент нажатия ENTER):
        HLTC76.1.2.4: в тексте юридического комментария
        
        HLTC76.1.2.6: на ссылке
}
function HLTC76_1_2_4_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  CONTEXT = 'комментарий к преамбуле Конституции РФ';
  COMMENT = 'Комментарий HLTC76_1_2_4';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  if NOT Insert_Comment( COMMENT ) then
  begin  
    Log.Error('Не удалось поставить комментарий по Enter'); 
    Raise('Не удалось поставить комментарий по Enter');
  end;
  obj.SetFocus;  
  Sys.Keys('^[Home]');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  obj.SetFocus;
  Sys.Keys('[Down]');
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_2_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.2: Проверить вызов команды Добавить пользовательский комментарий, нажав ENTER (комментарий
      появляется после абзаца, в котором находился маркер-курсор в момент нажатия ENTER):
        HLTC76.1.2.5: в тексте уже существующего пользовательского комментария
}
function HLTC76_1_2_5_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = '76_1_2_5';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');
  if NOT Insert_Comment( COMMENT ) then
  begin  
    Log.Error('Не удалось поставить комментарий по Enter'); 
    Raise('Не удалось поставить комментарий по Enter');
  end;  
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  Sys.Keys('[Down][Home]');
  //Выделяем весь комментарий
  Sys.Keys(KeyPause + '![Down]');  PressKeyNCount('![Right]', length(COMMENT));
  str := CopyToClipBoard( obj , '' , 'Trim:=true' );
  result := StringCompare( str, COMMENT + EndOfLine + COMMENT);
  if NOT result then
    Log.Error('Текст комментария не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_2_5_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

 {
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.2: Проверить вызов команды Добавить пользовательский комментарий, нажав ENTER (комментарий
      появляется после абзаца, в котором находился маркер-курсор в момент нажатия ENTER):
        HLTC76.1.2.7: в подписи принятия документа  
}
function HLTC76_1_2_7_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM =	12017850;
  CONTEXT = 'Президента';
  COMMENT = 'Комментарий HLTC76_1_2_7';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  if NOT Insert_Comment( COMMENT ) then
  begin  
    Log.Error('Не удалось поставить комментарий по Enter'); 
    Raise('Не удалось поставить комментарий по Enter');
  end;  
  Sys.Keys('^[Home]');
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  PressKeyNCount( '[Down]' , 3 );  
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_2_7_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.2: Проверить вызов команды Добавить пользовательский комментарий, нажав ENTER (комментарий
      появляется после абзаца, в котором находился маркер-курсор в момент нажатия ENTER):
        HLTC76.1.2.8: к пустому абзацу
}
function HLTC76_1_2_8_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий HLTC76_1_2_8';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  if NOT Insert_Comment( COMMENT ) then
  begin  
    Log.Error('Не удалось поставить комментарий по Enter'); 
    Raise('Не удалось поставить комментарий по Enter');
  end;  
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  Sys.Keys('[Down]');
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_2_8_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.2: Проверить вызов команды Добавить пользовательский комментарий, нажав ENTER (комментарий
      появляется после абзаца, в котором находился маркер-курсор в момент нажатия ENTER):
        HLTC76.1.2.9: за пределами документа
}
function HLTC76_1_2_9_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 9015;
  COMMENT = 'Комментарий HLTC76_1_2_9';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  PressKeyNCount('^[End]', 3);
  if NOT Insert_Comment( COMMENT ) then
  begin  
    Log.Error('Не удалось поставить комментарий по Enter'); 
    Raise;
  end;  
  Sys.Keys('^[End][Left]');
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_2_9_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1: Создание
      HLTC76.1.3: Проверить вызов команды Добавить пользовательский комментарий в справке к документу
}
function HLTC76_1_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 1055132;
  COMMENT = 'Комментарий HLTC76_1_3';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := OpenInDocument('СПРАВКА');
  if NOT IsExists(obj) then Raise('Не удалось получить СПРАВКА');
  obj.SetFocus;
  Sys.Keys('^[Home]' + keyPause + '[Down]');
  if NOT Insert_Comment( COMMENT , obj, true) then
  begin  
    Log.Error('Не удалось поставить комментарий через контекстное меню'); 
    Raise('Не удалось поставить комментарий через контекстное меню');
  end;  
  Sys.Keys('^[Home]' + keyPause + '[Down]' + keyPause + '[Down]');
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT );
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  Sys.Keys('[Del]');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1.4: Проверить отсутствие команды в контекстном меню списка и в рубрикаторе
}
function HLTC76_1_4_Execute (var  CurrentState: OleVariant): OleVariant;
var
  obj;
  menuTab;
begin                                  
try
  menuTab := OpenMenuTab;
  if NOT IsExists(menuTab) then Raise('Не удалось получить вкладку МЕНЮ');
  
  if NOT OpenObjectFromFolder( LIST_RUBR_MAIN , menuTab ) then Raise('Не удалось открыть : ' + LIST_RUBR_MAIN);
  obj := GetFromList('СПИСОК РУБРИКАТОРА');   
  if NOT IsExists(obj) then Raise('Не удалось получить СПИСОК РУБРИКАТОРА');
  obj.SetFocus;
  Sys.Keys('[Apps]');
  if IsPopupMenuItemExists(obj, 'Добавить мой комментарий', true) then
  begin
    Log.Error('Пункт контекстного меню "Добавить мой комментарий" существует, хотя не должен');
    Raise('Пункт контекстного меню "Добавить мой комментарий" существует, хотя не должен');
  end;
  
  if NOT OpenObjectFromFolder(LIST_MAIN , menuTab ) then Raise('Не удалось открыть список : ' + LIST_MAIN);
  obj := GetFromList('СПИСОК ДОКУМЕНТОВ');   
  if NOT IsExists(obj) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ');
  obj.SetFocus;
  Sys.Keys('[Apps]');
  if IsPopupMenuItemExists(obj, 'Добавить мой комментарий', true) then
  begin
    Log.Error('Пункт контекстного меню "Добавить мой комментарий" существует, хотя не должен');
    Raise('Пункт контекстного меню "Добавить мой комментарий" существует, хотя не должен');
  end;  
  result := true;  
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76: Пользовательские комментарии
  HLTC76.1: Создание
    HLTC76.1.5: Проверить вызов команды Добавления польз. комментария в информации 
    к списку (должно быть невозможно)
}
function HLTC76_1_5_Execute (var  CurrentState: OleVariant): OleVariant;
var
  obj;
begin                                  
try
  if NOT OpenObjectFromFolder( LIST_MAIN , OpenMenuTab ) then Raise('Не удалось открыть : ' + LIST_MAIN);
  obj := OpenInList('СПРАВКА К СПИСКУ');
  if NOT IsExists(obj) then Raise('Не удалось получить СПРАВКА К СПИСКУ');  
  obj.SetFocus;
  Sys.Keys('[Apps]');
  if IsPopupMenuItemExists(obj, 'Добавить мой комментарий', true) then
  begin
    Log.Error('Пункт конт. меню "Добавить мой комментарий" существует в справке о списке, хотя не должен');
    Raise('Пункт конт. меню "Добавить мой комментарий" существует в справке о списке, хотя не должен');
  end;
  result := true;  
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_1_5_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.3: Проверить изменение текста пользовательского комментария:
    HLTC76.2.3.1: добавить несколько букв в начале текста комментария
}
function HLTC76_2_3_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий HLTC76_2_3_1';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось поставить комментарий по Enter');
  Sys.Keys('[Home]' + keyPause + COMMENT);
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str, COMMENT + COMMENT);
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_3_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.3: Проверить изменение текста пользовательского комментария:
    HLTC76.2.3.2: добавить строку с текстом перед имеющимся текстом комментария
    HLTC76.2.3.3: добавить строку без текста перед имеющимся текстом комментария
    HLTC76.2.3.4: добавить несколько строк в середине имеющегося текста комментария
    HLTC76.2.3.5: добавить несколько строк в конец текста комментария
}
function HLTC76_2_3_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT_1 = 'комментарий HLTC76_2_3_2';
  COMMENT_2 = 'средина HLTC76_2_3_2';
  COMMENT_3 = 'конец HLTC76_2_3_2';  
var
  obj;
  str;
  etalon;
begin                                  
try
  etalon := 
    //'' + EndofLine + 
    'Начало Комментарий Конец';
        
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('[Enter]' + keyPause + 'Комментарий' + keyPause + '[Home]' + keyPause + 'Начало ');
  Sys.Keys('[End]' + keyPause + ' Конец');  
  //if NOT SelectComment(obj) then Raise('Не удалось выделить текст комментария');
  Sys.Keys('[End]' + keyPause + '![Home]');
  str := CopyToClipBoard(obj , '');
  result := StringCompare( str, etalon);
  if NOT result then
    Log.Error('Комментарий не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_3_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.4: Проверить изменение ссылки из пользовательского комментария
    HLTC76.2.4.1: изменить ссылку на другой документ и проверить, что переход осуществляется верно
}
function HLTC76_2_4_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM_1  = 10003000;
  DOC_NUM_2  = 1055132;  
  DOC_NUM_3  = 10003790;
  DOC_NAME_1 = 'конституция российской федерации';
  DOC_NAME_2 = 'договор';
  COMMENT    = 'ссылка';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  if NOT SetBookMark(DOC_NAME_1) then Raise('Не удалось установить закладку');
  if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');  
  if NOT SetBookMark(DOC_NAME_2) then Raise('Не удалось установить закладку');
  
  if NOT OpenDocByNumber(DOC_NUM_3) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := OpenInDocument('ТЕКСТ');
  if NOT IsExists(obj) then Raise('Не удалось открыть ТЕКСТ');  
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');
  Sys.Keys('[Left][Left]');
  if NOT SetHyperLink( obj , MY_DOCS_PATH + DOC_NAME_2) then Raise('Не удалось поставить ссылку на объект');
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки комментария');
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке'); 
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );//что б знать, что открылась ссылка
  if NOT StringCompare( str , DOC_NAME_2 ) then
    Raise('После перехода по ссылке заголовок документа не эталонный');
    
  if NOT OpenDocByNumber(DOC_NUM_3) then Raise('Не удалось открыть документ по Alt+N');   
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки комментария');   
  if NOT ChangeHyperLink(obj, MY_DOCS_PATH + DOC_NAME_1) then 
  begin
    Log.Error('Не удалось изменить ссылку');
    Raise('Не удалось изменить ссылку');
  end;  
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки комментария');
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');       
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );//что б знать, что открылась ссылка
  result := StringCompare( str, DOC_NAME_1);
  if NOT result then
    Log.Error('После перехода по изменённой ссылке заголовок документа не эталонный');
  if NOT OpenDocByNumber(DOC_NUM_3) then 
    Log.Warning('Не удалось открыть документ по Alt+N');   
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  if NOT DeleteAllInMyDoc then Log.Warning('Не удалось удалить все объекты из моих документов');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_4_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.4: Проверить изменение ссылки из пользовательского комментария
    HLTC76.2.4.2: удалить ссылку из текста пользовательского комментария
}
function HLTC76_2_4_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий ссылка';
  DOC_NAME = 'Конституция';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  if NOT SetBookMark( DOC_NAME ) then Raise('Не удалось установить закладку');
    
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');
  if NOT SetHyperLink( obj , MY_DOCS_PATH + DOC_NAME) then Raise('Не удалось поставить ссылку на объект');
    
  Sys.Keys( '[End]' + keyPause + '!^[Left]');  
  Sys.Keys('[Del]');    
  
  str := CopyToClipBoard( obj , 'STRING' , 'Trim:=true' );
  result := StringCompare( str , 'комментарий' );
  if NOT result then
    Log.Error('После перехода по ссылке заголовок документа не эталонный');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  if NOT DeleteAllInMyDoc then
    Log.Warning('Не удалось удалить все объекты из моих документов');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_4_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.4: Проверить изменение ссылки из пользовательского комментария
  
  HLTC76.2.5: Проверить, что у пользовательского комментария свой специфический стиль
}
function HLTC76_2_5_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий HLTC76_2_5';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');  
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');    
  
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');
  CopyToClipBoard(obj, 'STRING');
  result := IsTextItalic;
  if NOT result then
    Log.Error('Шрифт пользовательского комментария не является курсивом');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_5_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.6: Во время редактирования произвести следующие действия (проверить, что заканчивается 
  редактирование текста пользовательского комментария и происходит адекватное выполнение системой выбранных 
  пользователем действий, при этом сохраняется введенный текст пользовательского комментария):
    HLTC76.2.6.1: насильное изменение положения курсора в тексте документа
    HLTC76.2.6.2: перенос фокуса из окна документа в другие окна
    HLTC76.2.6.3: переход к просмотру списка    
    HLTC76.2.6.5: переход в рубрикатор
}
function HLTC76_2_6_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_2_6_1';
var
  obj;
  doc;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  DeleteAllUserCommentsFromContents; 
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');  
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT IsExists(obj) then Raise('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT Position_Internal( obj, COMMENT,  '\', false, 'isPressHome:=true') then  
  begin
    Log.Error('Имя комментария не эталонно после перевода фокуса на вкладку "ДЕРЕВО "МОИ КОММЕНТАРИИ""');
    Raise('Имя комментария не эталонно после перевода фокуса на вкладку "ДЕРЕВО "МОИ КОММЕНТАРИИ""');
  end;
  doc := GetFromEditor('ТЕКСТ ДОКУМЕНТА');  
  if NOT IsExists(doc) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  doc.SetFocus;
  if NOT ClickNearIconOnSubInDocument(doc, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ');
  Sys.Keys('111' + keyPause + '[Down]');
  if NOT ClickNearIconOnSubInDocument(doc, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ');
  str := CopyToClipboard(doc, 'STRING', 'Trim:=true');
  result := StringCompare('111' + COMMENT, str);
  if NOT result then
    Log.Error('Имя комментария не эталонно после перемещения курсора из текста коммениария в документ', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_6_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.6: Во время редактирования произвести следующие действия (проверить, что заканчивается 
  редактирование текста пользовательского комментария и происходит адекватное выполнение системой выбранных 
  пользователем действий, при этом сохраняется введенный текст пользовательского комментария):
    HLTC76.2.6.4: переход в карточки запросов ППС/ППР
}
function HLTC76_2_6_4_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_2_6_4';
var
  obj;  
  str;
begin                                  
try
  DeleteAllUserCommentsFromContents;
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');  
  if NOT GoToPPR then Raise('Не удалось перейти в ППР');
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');   
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');  
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  obj.SetFocus;
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ');
  str := CopyToClipboard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(COMMENT, str);
  if NOT result then
    Log.Error('Имя комментария не эталонно после перемещения курсора из текста коммениария в документ', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except
  DeleteAllUserCommentsFromContents;
  Log.Message( 'HLTC76_2_6_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.6: Во время редактирования произвести следующие действия (проверить, что заканчивается 
  редактирование текста пользовательского комментария и происходит адекватное выполнение системой выбранных 
  пользователем действий, при этом сохраняется введенный текст пользовательского комментария):
    HLTC76.2.6.6: переход в ОМ
}
function HLTC76_2_6_6_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_2_6_6';
var
  obj;  
  str;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N'); 
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');  
  if NOT GoToMainMenu then Raise('Не удалось перейти в ППР');
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');   
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');  
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  obj.SetFocus;
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ');
  str := CopyToClipboard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(COMMENT, str);
  if NOT result then
    Log.Error('Имя комментария не эталонно после перемещения курсора из текста коммениария в документ', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_6_6_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;


{
HLTC76.2: Редактирование
  HLTC76.2.7: Проверить, что возможно редактировать текст пользовательского комментария 
  становится возможным сразу после попадания маркера в текст этого комментария:
    HLTC76.2.7.1: при переводе маркера мышью в текст пользовательского комментария
}
function HLTC76_2_7_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_2_7_1';
var
  obj;
  sub; 
  x, y;
begin                                  
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');

  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  Sys.Keys('^[Home]');
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');  
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(sub) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  
  if NOT MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then 
    Raise('Не удалось найти иконку пользовательского комментария на САБ Панели');    
  y := Sys.Desktop.MouseY; 
  x := Sys.Desktop.MouseX;
  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  
  common.ScreenToClient(obj, x, y);
  obj.Click(10, y);
 
  Sys.Keys('1');
  
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT IsExists(obj) then Raise('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  result := Position_Internal( obj, '1' + COMMENT,  '\', false, 'isPressHome:=true');
  if NOT result then
    Log.Error('Имя комментария не эталонно после перевода фокуса на вкладку "ДЕРЕВО "МОИ КОММЕНТАРИИ""');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_7_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.7: Проверить, что возможно редактировать текст пользовательского комментария 
  становится возможным сразу после попадания маркера в текст этого комментария:
    HLTC76.2.7.2: при переводе маркера клавиатурой в текст пользовательского комментария
}
function HLTC76_2_7_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_2_7_2';
var
  obj;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');  
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  Sys.Keys('[Down][Home]');
  Sys.Keys('1');
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT IsExists(obj) then Raise('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  result := Position_Internal( obj, '1' + COMMENT,  '\', false, 'isPressHome:=true');
  if NOT result then
    Log.Error('Имя комментария не эталонно после перевода фокуса на вкладку "ДЕРЕВО "МОИ КОММЕНТАРИИ""');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_7_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.8: Проверить, что в текст пользовательского комментария невозможно ввести два пробела подряд
}
function HLTC76_2_8_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  TEXT =     'комментарий   HLTC76_2_8';
  COMMENT  = 'комментарий HLTC76_2_8';
var
  obj;
begin                                  
try
  DeleteAllUserCommentsFromContents;
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  if NOT Insert_Comment( TEXT ) then Raise('Не удалось установить комментарий');   
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT IsExists(obj) then Raise('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  result := Position_Internal( obj, COMMENT,  '\', false, 'isPressHome:=true');
  if NOT result then
    Log.Error('Имя комментария не эталонно');
  if DeleteAllUserCommentsFromContents < 1 then
   Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_8_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.9: Проверить, что невозможно ввести пробел в начале любой строки пользовательского комментария
}
function HLTC76_2_9_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  TEXT =    ' комментарий_HLTC76_2_9';
  COMMENT = 'комментарий_HLTC76_2_9';
var
  obj;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  if NOT Insert_Comment( TEXT ) then Raise('Не удалось установить комментарий');   
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT IsExists(obj) then Raise('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  result := Position_Internal( obj, COMMENT,  '\', false, 'isPressHome:=true');
  if NOT result then
    Log.Error('Не удалось спозиционироватьспозиционироваться на комментарий, значит его Имя не эталонно!');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_9_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.2: Редактирование
  HLTC76.2.10: Проверить изменение режима вставки текста – набора текста поверх (клавиша INSERT)
}

function HLTC76_2_10_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  TEXT = '111111';
  COMMENT = 'комментарий_HLTC76_2_8';
var
  obj;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  DeleteAllUserCommentsFromContents;
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  if NOT Insert_Comment( TEXT ) then Raise('Не удалось установить комментарий');   
  
  Sys.Keys('^[Home]');
  if NOT ClickOnContext(obj, 'КОНСТИТУЦИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ') then  Raise('Не удалось кликнуть на искомый контекст');
  Sys.Keys('[Down]' + keyPause + '[Home]' + '[Ins]' + keyPause + COMMENT + '[Ins]');  
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT IsExists(obj) then Raise('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  result := Position_Internal( obj, COMMENT,  '\', false, 'isPressHome:=true');
  if NOT result then
    Log.Error('Имя комментария не эталонно');
  if DeleteAllUserCommentsFromContents < 1 then
   Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_2_10_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.1: проверить, что подсказка, всплывающая около иконки польз. комментария, содержит весь польз. 
  комментарий в случае когда выключен режим просмотра пользовательских комментариев
  
}

function HLTC76_3_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_3_1';
var
  obj;
  sub;
  str;
  x, y;
  hint;
begin                                  
try  
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');
  
  hint := 'Мой комментарий:*' + COMMENT;
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');  
  if NOT SetCommentsMode ( obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(sub) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  
  if NOT MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then 
    Raise('Не удалось найти иконку пользовательского комментария на САБ Панели');    
  y := Sys.Desktop.MouseY;
  x := Sys.Desktop.MouseX;
  str := GetHintTextByCoords(x, y);
  
  result := StringCompare(hint, str );
  if NOT  result then
    Log.Error('Хинт комментария не эталонный', str);
  obj.Refresh;  
  if NOT SetCommentsMode ( obj, USER_COMMENTS, MODE_SHOWN ) then
    Log.Warning ('Не удалось включить режим показа польз. комментариев');  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.1: проверить, что подсказка, всплывающая около иконки польз. комментария, содержит весь польз. 
  комментарий в случае когда выключен режим просмотра пользовательских комментариев
    HLTC76.3.1.1: Проверить, когда комментарий содержит символы табуляции – в подсказке должны быть 
    нормальный текст без квадратиков и т.п
}

function HLTC76_3_1_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
var                                          
  obj;
  sub;
  str;
  x, y;
  hint, text;
begin                                  
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');
    
  hint := 'Мой комментарий:*комментарий HLTC76_3_1_1';
  text := 'комментарий' + keyPause + '[Tab]' + keyPause + 'HLTC76_3_1_1';
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment( text ) then Raise('Не удалось установить комментарий');
  
  if NOT SetCommentsMode ( obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(sub) then Raise('Не удалось получить САБ ПАНЕЛЬ');

  if NOT MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then 
    Raise('Не удалось найти иконку пользовательского комментария на САБ Панели');    
  y := Sys.Desktop.MouseY; 
  x := Sys.Desktop.MouseX;
    
  str := GetHintTextByCoords(x, y);
  if NOT SetCommentsMode ( obj, USER_COMMENTS, MODE_SHOWN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  result :=  StringCompare(hint, str);
  if NOT result then
    Log.Error('Хинт комментария не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_1_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;


{
HLTC76.3: Специальные проверки
  HLTC76.3.1: проверить, что подсказка, всплывающая около иконки польз. комментария, содержит весь польз. 
  комментарий в случае когда выключен режим просмотра пользовательских комментариев
    HLTC76.3.1.2: Проверить, когда комментарий содержит символы перевода строки (Enter) – в подсказке 
    должны быть нормальный текст без квадратиков и т.п
}

function HLTC76_3_1_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
var                                          
  obj;
  sub;
  str;
  x, y;
  hint, text;
begin                                  
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');

  hint := 'Мой комментарий:*комментарий' + #13 + 'HLTC76_3_1_2';
  text := 'комментарий' + keyPause + '[Enter]' + keyPause + 'HLTC76_3_1_2';
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT Insert_Comment( text ) then Raise('Не удалось установить комментарий');
  
  if NOT SetCommentsMode ( obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(sub) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  
  if NOT MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then 
    Raise('Не удалось найти иконку пользовательского комментария на САБ Панели');    
  y := Sys.Desktop.MouseY; 
  x := Sys.Desktop.MouseX;
    
  str := GetHintTextByCoords(x, y);
  if NOT SetCommentsMode ( obj, USER_COMMENTS, MODE_SHOWN ) then
    Raise ('Не удалось включить режим показа польз. комментариев');
  result := StringCompare(hint, str);
  if NOT result then
    Log.Error('Хинт комментария не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_1_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.2: проверить показ-скрытие польз. комментариев.
    HLTC76.3.2.1: При включенных комментариях текст тултипа должен содержать только тип комментария.
}
function HLTC76_3_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_3_2_1';
  HINT = 'Мой комментарий';
var
  obj;
  sub;
  str;
  x, y;
begin                                  
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');

  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');
  
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(sub) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  
  if NOT MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then 
    Raise('Не удалось найти иконку пользовательского комментария на САБ Панели');    
  y := Sys.Desktop.MouseY; 
  x := Sys.Desktop.MouseX;
  str := GetHintTextByCoords(x, y);
  result := StringCompare(str, HINT);
  if NOT result then
    Log.Error('Хинт комментария не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.2: проверить показ-скрытие польз. комментариев.
    HLTC76.3.2.2: Проверить, что по умолчанию режим показа пользовательских комментариев - включен.
}
function HLTC76_3_2_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
var
  obj;
begin                                  
try
  if NOT SetDefaultSettings then Raise('Не удалось установить настройки по умолчанию');  
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT ( GetCommentsMode(obj, USER_COMMENTS) = MODE_SHOWN ) then
  begin
    Log.Error('Режим показа польз. комментариев по умолчанию Не включен');
    Raise('Режим показа польз. комментариев по умолчанию Не включен');
  end;
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_2_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.5: Перейти по ссылке в документ, выделить несколько абзацев и выполнить команду добавить
  польз. комментарий. Проверить, что выделенные абзацы не пропадут из просмотра.
}
function HLTC76_3_5_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM   = 1055132;
  COMMENT   = 'комментарий_HLTC76_3_5';
  CONTEXT   = 'Декларации';
  STR_START = '*о дальнейшем единении России и Беларуси*';
  STR_END   = '*Процесс всеобъемлющей интеграции Российской Федерации*Содружества Независимых Государств.*';
var
  obj;
  x, y;
  str;
  etalonText;
begin                                  
try
  etalonText := STR_START + COMMENT + STR_END;
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT ClickByHyperLink(obj, CONTEXT) then Raise('Не удалось кликнуть по искомой гиперссылке');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  Sys.Keys('[Down][Home]![Down]');
  if NOT GetTextSelectionCoords(obj, x, y) then 
    Raise('Не удалось найти выделенный текст');
  PressKeyNCount('![Down]' + keyPause, 14 );

  obj.ClickR(x + 5 , y + 5);
  
  if NOT Insert_Comment(COMMENT, obj, true ) then Raise('Не удалось установить комментарий из popup меню');

  str := CopyToClipBoard(obj, 'ALL', 'Trim:=true');
  result := StringCompare(etalonText, str);
  if NOT result then
    Log.Error('Выделенный текст не эталонный', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_5_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.7: Проверить, что при выключенном режиме показа пользовательских комментариев:
    HLTC76.3.7.1: Не видно текста пользовательских комментариев
}
function HLTC76_3_7_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_3_7_1';
var
  obj;
  str;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  Sys.Keys('^[Home]');
  PressKeyNCount('![Down]' + keyPause, 5 );
  str := CopyToClipBoard(obj, '', 'Trim:=true');
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_SHOWN ) then
    Raise ('Не удалось включить режим показа польз. комментариев');
  result :=   NOT StringCompare('*' + COMMENT + '*', str);
  if NOT result then
    Log.Error('Текс польз. комментария показывается при выключенном режиме показа польз. комментариев');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_7_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.7: Проверить, что при выключенном режиме показа пользовательских комментариев:
    HLTC76.3.7.2: Можно удалить пользовательский комментарий (правой кнопкой мыши по иконке 
    на полях документа)
}
function HLTC76_3_7_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_3_7_2';
var
  obj;
  str;
  sub;
  x, y;
begin                                  
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');

  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');  
  
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(sub) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  
  if NOT MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then
    Raise('Не удалось найти иконку пользовательского комментария на САБ Панели');    
  y := Sys.Desktop.MouseY; 
  x := Sys.Desktop.MouseX;
  common.ScreenToClient(sub, x, y);
  sub.ClickR(x, y);
  if NOT ClickByPopUpMenuItem(sub, 'Удалить комментарий') then 
  begin
    Log.Error('Не удалось вызвать контекстную операцию "Удалить комментарий" для иконки на САБ панели');
    Raise('Не удалось вызвать контекстную операцию "Удалить комментарий" для иконки на САБ панели');
  end;
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_SHOWN ) then
  Raise ('Не удалось включить режим показа польз. комментариев');

  if MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then
  begin
    Log.Error('Иконка пользовательского комментария на САБ Панели не удалилась');
    Raise('Иконка пользовательского комментария на САБ Панели не удалилась');
  end;
  obj := GetFromNavigator('ДЕРЕВО "МОИ КОММЕНТАРИИ" СО ВКЛАДКИ НАВИГАТОРА "СТРУКТУРА ДОКУМЕНТА"');
  if IsExists(obj) then   
  begin
    Log.Error('Блок Мои комментарнии не исчез из структуры, значит Комментарий не удалился после Ctrl+Z');
    DeleteAllUserCommentsFromContents;
    Raise('Блок Мои комментарнии не исчез из структуры, значит Комментарий не удалился после Ctrl+Z');
  end;
  result := true;    
  GoToMainMenu;
except
  DeleteAllUserCommentsFromContents;  
  Log.Message( 'HLTC76_3_7_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.7: Проверить, что при выключенном режиме показа пользовательских комментариев:
    HLTC76.3.7.3: При выключенных комментариях, соответствующая иконка должна оставаться на предыдущем
    параграфе. Тул-типом к ней должен служить текст комментария, предваренный типом 
    комментария - «Мой комментарий».
}

function HLTC76_3_7_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_3_7_3';
  CONTEXT = 'соединенные';
var
  obj;
  str;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');                  
  if NOT ClickOnContext( obj, CONTEXT ) then Raise('Не удалось кликнуть на искомый контекст');
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');
  if NOT SetCommentsMode ( obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ');
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  result := StringCompare('*' + CONTEXT + '*', str);
  if NOT result then  
    Log.Error('Иконка пользовательского комментария находится на не эталонной строке');
  if NOT SetCommentsMode ( obj, USER_COMMENTS, MODE_SHOWN ) then
    Log.Warning ('Не удалось включить режим показа польз. комментариев');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария'); 
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_7_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.7: Проверить, что при выключенном режиме показа пользовательских комментариев:
    HLTC76.3.7.4: Можно удалить пользовательский комментарий (комбинацией клавиш Ctrl+Z)
      HLTC76.3.7.4.1: При включенном показе пользовательских комментариев
}
function HLTC76_3_7_4_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_3_7_4_1';
var
  obj;  
  sub;
begin                                  
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_SHOWN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');
  
  PressKeyNCount( keyPause + '^z' , 2 );
  
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(sub) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  if MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then
  begin
    Log.Error('Иконка пользовательского комментария на САБ Панели не удалилась после Ctrl+Z');
    Raise('Иконка пользовательского комментария на САБ Панели не удалилась после Ctrl+Z');
  end;
  obj := GetFromNavigator('ДЕРЕВО "МОИ КОММЕНТАРИИ" СО ВКЛАДКИ НАВИГАТОРА "СТРУКТУРА ДОКУМЕНТА"');
  if IsExists(obj) then   
  begin
    Log.Error('Блок Мои комментарнии не исчез из структуры, значит Комментарий не удалился после Ctrl+Z');
    DeleteAllUserCommentsFromContents;
    Raise('Блок Мои комментарнии не исчез из структуры, значит Комментарий не удалился после Ctrl+Z');
  end;
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_7_4_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.7: Проверить, что при выключенном режиме показа пользовательских комментариев:
    HLTC76.3.7.4: Можно удалить пользовательский комментарий (комбинацией клавиш Ctrl+Z)
      HLTC76.3.7.4.2: При выключенном показе пользовательских комментариев
}
function HLTC76_3_7_4_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'комментарий_HLTC76_3_7_4_2';
var
  obj;
  str;
  sub; 
begin                                  
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment( COMMENT ) then Raise('Не удалось установить комментарий');  
  
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев');
  
  PressKeyNCount( keyPause + '^z' , 2 );
  
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_SHOWN ) then
    Raise ('Не удалось включить режим показа польз. комментариев');  
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(sub) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  if MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then
  begin
    Log.Error('Иконка пользовательского комментария на САБ Панели не удалилась после Ctrl+Z');
    Raise('Иконка пользовательского комментария на САБ Панели не удалилась после Ctrl+Z');
  end;
  obj := GetFromNavigator('ДЕРЕВО "МОИ КОММЕНТАРИИ" СО ВКЛАДКИ НАВИГАТОРА "СТРУКТУРА ДОКУМЕНТА"');
  if IsExists(obj) then   
  begin
    Log.Error('Блок Мои комментарнии не исчез из структуры, значит Комментарий не удалился после Ctrl+Z');
    DeleteAllUserCommentsFromContents;
    Raise('Блок Мои комментарнии не исчез из структуры, значит Комментарий не удалился после Ctrl+Z');
  end;
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_7_4_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.9: Проверить, что в структуре документа в папку «Мои комментарии» попадают 
  ссылки на все добавленные пользовательские комментарии:
    HLTC76.3.9.1: Проверить, что название элемента, представляющего в оглавлении пользовательский 
    комментарий документа соответствует тексту, содержащемуся в первом абзаце этого комментария.
}
function HLTC76_3_9_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM    = 10003000;
  COMMENT_1  = 'Комментарий_1';
  COMMENT_2  = 'Комментарий_2';
  COMMENT_PR = 'HLTC76_3_9_1';
var
  obj;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home][Enter]' + keyPause + COMMENT_1 + keyPause + '[Enter]' + keyPause + COMMENT_PR);
    
  Sys.Keys(keyPause + '[PageDown]' + keyPause);
  
  Sys.Keys('[Enter]' + keyPause + COMMENT_2 + keyPause + '[Enter]' + keyPause + COMMENT_PR);
  
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"'); 
  if NOT IsExists(obj) then Raise ('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  result := ( Position_Internal(obj, COMMENT_1, '\', false, 'isPressHome:=true') AND 
              Position_Internal(obj, COMMENT_2, '\', false, 'isPressHome:=true') );
  if NOT result then
    Log.Error('На вкладке ДЕРЕВО "МОИ КОММЕНТАРИИ" имена комментариев не эталонны');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_9_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.10: Переходы к пользовательским комментариям из оглавления
    HLTC76.3.10.1: Проверить, что осуществляется переход именно к тому польз. комментарию, 
    который выбрал пользователь в оглавлении
      HLTC76.3.10.1.1: Проверить, когда пользователь создавал комментарии в обычном порядке чтения 
      текста – от начала документа к концу.
}
function HLTC76_3_10_1_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'HLTC76_3_10_1_1_Комментарий_';
var
  obj;
  doc;
  i, j;
  str;
  isSetSettings;
begin                                  
try  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');   
  doc := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(doc) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  doc.SetFocus;
  Sys.Keys('^[Home]');
  randomize;
  j := 5;//Сколько ставим комментариев
  
  for i := 1 to j do
  begin
    if NOT Insert_Comment(COMMENT + IntToStr(i)) then Raise('Не удалось поставить комментарий');
    if i <> j then PressKeyNCount( keyPause + '[PageDown]'+ keyPause, 2 + random(3) );  
  end;//for i 
   
  for i := 1 to j do
  begin
    obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"'); 
    if NOT IsExists(obj) then Raise ('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');        
    doc.SetFocus;
    Sys.Keys('^[End]');    
    if NOT OpenObjectFromFolder( COMMENT+IntToStr(i) , obj ) then
      Raise('Не удалось открыть комментарий со вкладки ДЕРЕВО "МОИ КОММЕНТАРИИ:' + COMMENT + IntToStr(i));
    doc.SetFocus;
    if i = 1 then isSetSettings := true else isSetSettings := false;      
    if NOT ClickNearIconOnSubInDocument(doc, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ', nil, false, isSetSettings) then
      Raise('Не удалось кликнуть в докумнете возле иконки КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ');
    str := CopyToClipBoard(doc, 'STRING', 'Trim:=true');
    result := StringCompare(str, COMMENT+IntToStr(i));
    if NOT result then
    begin
      Log.Error('Спозиционировались на НЕ эталонный комментрий', str);
      break;
    end;
  end;//for  i
  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except
  OpenDocByNumber(DOC_NUM);
  DeleteAllUserCommentsFromContents;
  Log.Message( 'HLTC76_3_10_1_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.10: Переходы к пользовательским комментариям из оглавления
    HLTC76.3.10.1: Проверить, что осуществляется переход именно к тому польз. комментарию, 
    который выбрал пользователь в оглавлении
      HLTC76.3.10.1.2: Проверить, когда пользователь создавал комментарии, начиная с конца документа к 
      его началу
}
function HLTC76_3_10_1_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'HLTC76_3_10_1_2_Комментарий_';
var
  obj;
  doc;
  i, j;
  str;
  isSetSettings;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  doc := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(doc) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  doc.SetFocus;
  Sys.Keys('^[End]');
  randomize;
  j := 5;
  for i := 1 to j do
  begin
    if NOT Insert_Comment(COMMENT + IntToStr(i)) then Raise('Не удалось поставить комментарий');
    if i <> 5 then PressKeyNCount( '[PageUp]', 2 + random(3) );  
  end;
  
  
  
  for i := 1 to j do
  begin
    obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"'); 
    if NOT IsExists(obj) then Raise ('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');         
    doc.SetFocus;
    Sys.Keys('^[Home]');    
    if NOT OpenObjectFromFolder( COMMENT+IntToStr(i) , obj ) then
      Raise('Не удалось открыть комментарий со вкладки ДЕРЕВО "МОИ КОММЕНТАРИИ" ');
    doc.SetFocus;    
    if i = 1 then isSetSettings := true else isSetSettings := false;      
    if NOT ClickNearIconOnSubInDocument(doc, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ', nil, false, isSetSettings) then
      Raise('Не удалось кликнуть в докумнете возле иконки КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ');      
    str := CopyToClipBoard(doc, 'STRING', 'Trim:=true');
    result := StringCompare(str, COMMENT+IntToStr(i));
    if NOT result then
    begin
      Log.Error('Спозиционировались на НЕ эталонный комментраий', str);
      break;
    end;
  end;//for i
  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except
  OpenDocByNumber(DOC_NUM);
  DeleteAllUserCommentsFromContents;
  Log.Message( 'HLTC76_3_10_1_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.10: Переходы к пользовательским комментариям из оглавления
    HLTC76.3.10.2: Проверить, что режим показа юридических комментариев не меняется при активации 
    ссылки на пользовательский комментарий из структуры документа.
      HLTC76.3.10.2.1: режим показа юр. комментариев был выключен
}
function HLTC76_3_10_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий_HLTC76_3_10_2_1';
var
  obj;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');
  
  if NOT SetCommentsMode (obj, JUROR_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа юр. комментариев');  
  
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"'); 
  if NOT IsExists(obj) then Raise ('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT OpenObjectFromFolder(COMMENT , obj ) then
    Raise('Не удалось открыть комментарий со вкладки ДЕРЕВО "МОИ КОММЕНТАРИИ"');

  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  result := GetCommentsMode(obj, JUROR_COMMENTS) = MODE_HIDDEN; 
  if NOT result then
    Log.Error('Режим показа юр. комментариев не выключен');
  
  if NOT SetCommentsMode (obj, JUROR_COMMENTS, MODE_SHOWN ) then
    Log.Warning('Не удалось включить режим показа юр. комментариев');  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_10_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.10: Переходы к пользовательским комментариям из оглавления
    HLTC76.3.10.2: Проверить, что режим показа юридических комментариев не меняется при активации 
    ссылки на пользовательский комментарий из структуры документа.
      HLTC76.3.10.2.2: режим показа юр. комментариев был включен
}
function HLTC76_3_10_2_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий_HLTC76_3_10_2_2';
var
  obj;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');
  
  if NOT SetCommentsMode (obj, JUROR_COMMENTS, MODE_SHOWN ) then
    Raise ('Не удалось включить режим показа юр. комментариев');  
  
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"'); 
  if NOT IsExists(obj) then Raise ('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT OpenObjectFromFolder( COMMENT , obj ) then
    Raise('Не удалось открыть комментарий со вкладки ДЕРЕВО "МОИ КОММЕНТАРИИ"');

  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  result := GetCommentsMode(obj, JUROR_COMMENTS) = MODE_SHOWN;
  if NOT result then
    Log.Error('Режим показа юр. комментариев не включен');
  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_10_2_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.11: Проверить, что если режим показа пользовательских комментариев выключен, то:
    HLTC76.3.11.1: Нажатие ENTER приводит к вопросу о его включении.
}
function HLTC76_3_11_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
var
  obj;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА'); 
  
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев'); 
  
  obj.SetFocus;
  Sys.Keys('[Enter]');  
  result := NOT (WaitForConfirmationWindow( Options.Run.Timeout div 60, 'Нет', 
            'Показ ваших комментариев сейчас выключен, Вы хотите его включить?') = '');
  if NOT result then
    Log.Error('Не удалось обнаружить окно подтверждения с эталонным тестом');
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_SHOWN ) then
    Log.Warning('Не удалось включить режим показа польз. комментариев'); 
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_11_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.11: Проверить, что если режим показа пользовательских комментариев выключен, то:
    HHLTC76.3.11.2: Выбор из контекстного меню документа пункта «Добавить пользовательский комментарий» 
    приводит к включению режима показа пользовательских комментариев и созданию пользовательского 
    комментария
}
function HLTC76_3_11_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'HLTC76_3_11_2'; 
var
  obj;
begin                                  
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА'); 
  
  if NOT SetCommentsMode (obj, USER_COMMENTS, MODE_HIDDEN ) then
    Raise ('Не удалось выключить режим показа польз. комментариев'); 
  
  obj.SetFocus;  
  Sys.Keys('[Apps]');  
  
  if NOT ClickByPopUpMenuItem(obj, 'Добавить мой комментарий') then 
    Raise('Не удалось вызвать пункт контекстного меню "Добавить мой комментарий"');
  Sys.Keys(COMMENT);  

  if NOT ( GetCommentsMode(obj, USER_COMMENTS) = MODE_SHOWN ) then
  begin
    Log.Error('Режим показа польз. комментариев не включен');
    Raise('Режим показа польз. комментариев не включен');
  end;
  
  obj := OpenInDocument('ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if NOT IsExists(obj) then Raise('Не удалось получить ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  result := OpenObjectFromFolder(COMMENT, obj);
  if NOT result then
    Log.Error('Не удалось открыть комментарий со вкладки ДЕРЕВО "МОИ КОММЕНТАРИИ"');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_11_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;



{
HLTC76.4: Простановка ссылки
  HLTC76.4.1: Проставить ссылку на другой документ и проверить переход по ней:
    HLTC76.4.1.1: ссылкой является весь комментарий
}
function HLTC76_4_1_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM_1  = 10003000;
  DOC_NUM_2  = 1055132;
  PREF       = 'HLTC76_4_1_1';
  DOC_NAME_1 = '*Конституция Российской Федерации*';
var
  obj;
  str;
  caption;
begin
try
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT SetBookMark('Закладка' + PREF) then Raise('Не удалось установить закладку');
  
  if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N');
  DeleteAllUserCommentsFromContents;
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT InsertComment(obj, 'Комментарий' + PREF) then Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Home]' + keyPause + '![End]');
  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'Закладка' + PREF) then
  begin
    Log.Error('Не удалось установить ссылку на закладку из другого документа');
    Raise('Не удалось установить ссылку на закладку из другого документа');
  end;
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки комментария');
  
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');
  
  caption := GetMainWindow.Caption;
  if NOT StringCompare(DOC_NAME_1, caption) then
  begin
    Log.Error('Переход по ссылке на не эталонный документ', caption);
    Raise('Переход по ссылке на не эталонный документ');
  end;
  
  obj.SetFocus;
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');  
  result := StringCompare(DOC_NAME_1, str);
  if NOT result then
    Log.Error('Переход по ссылке не в эталонное место', str);
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из Моих документов');   
  if NOT OpenDocByNumber(DOC_NUM_2) then Log.Warning('Не удалось открыть документ по Alt+N');  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_1_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.1: Проставить ссылку на другой документ и проверить переход по ней:
    HLTC76.4.1.2: ссылкой является несколько слов в начале комментария
}
function HLTC76_4_1_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM_1  = 10003000;
  DOC_NUM_2  = 1055132;
  PREF       = 'HLTC76_4_1_2';
  DOC_NAME_1 = '*Конституция Российской Федерации*';
var
  obj;
  str;
  caption;
begin
try
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT SetBookMark('Закладка' + PREF) then Raise('Не удалось установить закладку');
  
  if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N');
  if NOT Insert_Comment('Комментарий из нескольких слов ' + PREF) then 
    Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Home]' + keyPause + '!^[Right]' + keyPause + '!^[Right]' + keyPause + '!^[Right]');
  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'Закладка' + PREF) then
  begin
    Log.Error('Не удалось установить ссылку на закладку из другого документа');
    Raise('Не удалось установить ссылку на закладку из другого документа');
  end;
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки комментария');
    
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');
  
  caption := GetMainWindow.Caption;
  if NOT StringCompare(DOC_NAME_1, caption) then
  begin
    Log.Error('Переход по ссылке на не эталонный документ', caption);
    Raise('Переход по ссылке на не эталонный документ');
  end;
  
  obj.SetFocus;
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');  
  result := StringCompare(DOC_NAME_1, str);
  if NOT result then
    Log.Error('Переход по ссылке не в эталонное место', str);
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из Моих документов');   
  if NOT OpenDocByNumber(DOC_NUM_2) then Log.Warning('Не удалось открыть документ по Alt+N');  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_1_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.1: Проставить ссылку на другой документ и проверить переход по ней:
    HLTC76.4.1.3: ссылкой является несколько слов в середине комментария
}
function HLTC76_4_1_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM_1  = 10003000;
  DOC_NUM_2  = 1055132;
  PREF       = 'HLTC76_4_1_3';
  DOC_NAME_1 = '*Конституция Российской Федерации*';
var
  obj;
  str;
  caption;
begin
try
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT SetBookMark('Закладка' + PREF) then Raise('Не удалось установить закладку');
  
  if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N');
  if NOT Insert_Comment('Комментарий из нескольких слов ' + PREF) then 
    Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Home]');
  PressKeyNCount('[Right]', 15);
  Sys.Keys('!^[Right]' + keyPause + '!^[Right]');
  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'Закладка' + PREF) then
  begin
    Log.Error('Не удалось установить ссылку на закладку, расположенную в другом документе');
    Raise('Не удалось установить ссылку на закладку, расположенную в другом документе');
  end;
  
  Sys.Keys('[Home]');
  PressKeyNCount('[Right]', 20);  
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');  
  caption := GetMainWindow.Caption;
  if NOT StringCompare(DOC_NAME_1, caption) then
  begin
    Log.Error('Переход по ссылке на не эталонный документ', caption);
    Raise('Переход по ссылке на не эталонный документ');
  end;
  
  obj.SetFocus;
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(DOC_NAME_1, str);
  if NOT result then
    Log.Error('Переход по ссылке не в эталонное место', str);
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из Моих документов');   
  if NOT OpenDocByNumber(DOC_NUM_2) then Log.Warning('Не удалось открыть документ по Alt+N');  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_1_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.1: Проставить ссылку на другой документ и проверить переход по ней:
    HLTC76.4.1.4: ссылкой является последнее слово комментария
}
function HLTC76_4_1_4_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM_1  = 10003000;
  DOC_NUM_2  = 1055132;
  PREF       = 'HLTC76_4_1_4';
  DOC_NAME_1 = '*Конституция Российской Федерации*';
var
  obj;
  str;
  caption;
begin
try
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT SetBookMark('Закладка' + PREF) then Raise('Не удалось установить закладку');
  
  if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N');
  if NOT Insert_Comment('Комментарий из нескольких слов ' + PREF) then 
    Raise('Не удалось установить комментарий');
  
  Sys.Keys('[End]' + keyPause + '!^[Left]');
  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'Закладка' + PREF) then
  begin
    Log.Error('Не удалось установить ссылку на закладку из другого документа');
    Raise('Не удалось установить ссылку на закладку из другого документа');
  end;
  
  Sys.Keys('[End]' + keyPause + '[Left]');
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');
    
  caption := GetMainWindow.Caption;
  if NOT StringCompare(DOC_NAME_1, caption) then
  begin
    Log.Error('Переход по ссылке на не эталонный документ', caption);
    Raise('Переход по ссылке на не эталонный документ');
  end;
  
  obj.SetFocus;
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(DOC_NAME_1, str);
  if NOT result then
    Log.Error('Переход по ссылке не в эталонное место', str);
  
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из Моих документов');   
  if NOT OpenDocByNumber(DOC_NUM_2) then Log.Warning('Не удалось открыть документ по Alt+N');  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_1_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.2: Проставить внутренние (на тот же документ) ссылки в большом  документе и 
  проверить переходы по ним:
    HLTC76.4.2.1: по ссылке осуществляется переход в начало документа
    
    HLTC76.4.2.2: по ссылке осуществляется переход выше по документу
}
function HLTC76_4_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10008000;
  PREF     = 'HLTC76_4_2_1';
  DOC_NAME = '*Уголовный кодекс Р*';
var
  obj;
  str;
  caption;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT SetBookMark('Закладка' + PREF) then Raise('Не удалось установить закладку');
  obj.SetFocus;
  Sys.Keys('^[End]' + keyPause + '[PageUp]');  
  if NOT Insert_Comment('Комментарий' + PREF) then 
    Raise('Не удалось установить комментарий');  
  Sys.Keys('[Left][Right]' + keyPause + '![Home]');
  Sys.Keys('[Apps]');
  Log.Picture(obj, 'Перед 1-м кликом по "Поставить ссылку"');//для отладки  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'Закладка' + PREF) then
  begin
    Log.Error('Не удалось установить ссылку на закладку из другого документа');
    Raise('Не удалось установить ссылку на закладку из другого документа');
  end;  
  Sys.Keys('[Home]');
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');  
  caption := GetMainWindow.Caption;
  if NOT StringCompare(DOC_NAME, caption) then
  begin
    Log.Error('Переход по ссылке на не эталонный документ', caption);
    Raise('Переход по ссылке на не эталонный документ');
  end;
  
  obj.SetFocus;
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');  
  result := StringCompare(DOC_NAME, str);
  if NOT result then
    Log.Error('Переход по ссылке не в эталонное место', str);
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из Моих документов');   
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.2: Проставить внутренние (на тот же документ) ссылки в большом  документе и 
  проверить переходы по ним:
    HLTC76.4.2.3: по ссылке осуществляется переход ниже по документу
}
function HLTC76_4_2_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10008000;
  PREF     = 'HLTC76_4_2_3';
  DOC_NAME = '*Уголовный кодекс РФ*';  
var
  obj;
  str;
  caption;
  bookMark;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT ClickOnContext(obj, 'Статья 360') then  Raise('Не удалось кликнуть на искомый контекст');
  bookMark := CopyToClipBoard(obj, 'STRING', 'Trim:=true');  
  if NOT SetBookMark('Закладка' + PREF) then Raise('Не удалось установить закладку');  
  obj.SetFocus;
  Sys.Keys('^[Home]');  
  if NOT Insert_Comment('Комментарий' + PREF) then   Raise('Не удалось установить комментарий');  
  Sys.Keys('[End]' + keyPause + '![Home]');  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'Закладка' + PREF) then
  begin
    Log.Error('Не удалось установить ссылку на закладку из другого документа');
    Raise('Не удалось установить ссылку на закладку из другого документа');
  end;  
  Sys.Keys('[Home]');
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');  
  caption := GetMainWindow.Caption;
  if NOT StringCompare(DOC_NAME, caption) then
  begin
    Log.Error('Переход по ссылке на не эталонный документ', caption);
    Raise('Переход по ссылке на не эталонный документ');
  end;  
  obj.SetFocus;
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');  
  result := StringCompare(str + '*', bookMark + '*');
  if NOT result then
    Log.Error('Переход по ссылке не в эталонное место', str);
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из Моих документов');   
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_2_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;


{
HLTC76.4: Простановка ссылки
  HLTC76.4.3: Проверить, что невозможно проставить ссылку, когда выделение:
    HLTC76.4.3.1: не является единым куском текста комментария (т.е. выделено несколько 
    отдельных кусков текста комментария и пытаются проставить ссылку)
}
function HLTC76_4_3_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Мой комментарий HLTC76_4_3_1';
var
  obj;  
  x, y;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
 
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Home]' + '!^[Right]');
  if NOT GetTextSelectionCoords (obj, x, y) then Raise('Не удалось найти выделенный фрагмент');
  if NOT DragExt(obj, x + 120, y + 3, 70, 0, 'skCtrl') then
    Raise('Не удалось сделать выделение при помощи DragExt');
  
  obj.SetFocus;
  Sys.Keys('[Apps]');
  result := NOT IsPopupMenuItemExists(obj, 'Поставить ссылку...', true);
  if NOT result then
    Log.Error('Пункт контекстного меню "Поставить ссылку..." доступен');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_3_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.3: Проверить, что невозможно проставить ссылку, когда выделение:
    HLTC76.4.3.2: в выделение входит не только текст пользовательского комментария, но и:
      HLTC76.4.3.2.1: текст документа
}
function HLTC76_4_3_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Мой комментарий HLTC76_4_3_2_1';
var
  obj;  
  x, y;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  PressKeyNCount('[Down]', 3);
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Home]');
  PressKeyNCount('![Down]', 3);

  if NOT GetTextSelectionCoords (obj, x, y) then Raise('Не удалось найти выделенный фрагмент');
  
  obj.ClickR(x + 20, y + 20);
  result := NOT IsPopupMenuItemExists(obj, 'Поставить ссылку...', true);
  if NOT result then
    Log.Error('Пункт контекстного меню "Поставить ссылку..." доступен');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_3_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.3: Проверить, что невозможно проставить ссылку, когда выделение:
    HLTC76.4.3.2: в выделение входит не только текст пользовательского комментария, но и:
      HLTC76.4.3.2.2: текст юридического комментария
}
function HLTC76_4_3_2_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Мой комментарий HLTC76_4_3_2_2';
  CONTEXT = 'Раздел первый';
var
  obj;
  x, y;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT SetCommentsMode(obj, JUROR_COMMENTS, MODE_SHOWN ) 
    then Raise('Не удалось включить режим показа юр. комментариев');
 
  if NOT PositionInEndContext(obj, CONTEXT) then Raise('Не удалось спозиционироваться на искомый контекст');
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Home]');
  PressKeyNCount('![Down]', 3);

  if NOT GetTextSelectionCoords (obj, x, y) then Raise('Не удалось найти выделенный фрагмент');
  
  obj.ClickR(x + 20, y + 20);
  result := NOT IsPopupMenuItemExists(obj, 'Поставить ссылку...', true);
  if NOT result then
    Log.Error('Пункт контекстного меню "Поставить ссылку..." доступен');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_3_2_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.1: Удалить пользовательский комментарий
    HLTC76.5.1.1: без ссылок
}
function HLTC76_5_1_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий HLTC76.5.1.1';
var
  obj;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий'); 
  
  Sys.Keys('[Apps]');  
  if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then
    Raise('Не удалось вызвать контекстную операцию "Удалить комментарий"');
   
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_5_1_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.1: Удалить пользовательский комментарий
    HLTC76.5.1.2: с ссылками на другой документ
      HLTC76.5.1.2.1: ссылкой является весь комментарий
}
function HLTC76_5_1_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Комментарий';
  FOLDER_PREF='HLTC76_5_1_2_1';
var
  obj;
begin
try
  if NOT OpenDocByNumber(2001) then Raise('Не удалось открыть документ по Alt+N'); 
  SimpleSaveToFolders(FOLDER_PREF);

  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  if NOT SetHyperLink(obj, MY_DOCS_PATH + FOLDER_PREF) then
    Raise('Не удалось установить ссылку');
  
  obj.SetFocus;
  Sys.Keys('[Apps]');  
  if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then
    Raise('Не удалось вызвать контекстную операцию "Удалить комментарий"');
   
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');    
  end;
  result := true;
  DeleteAllInMyDoc;  
except
  DeleteAllInMyDoc;  
  Log.Message( 'HLTC76_5_1_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.1: Удалить пользовательский комментарий
    HLTC76.5.1.2: с ссылками на другой документ
      HLTC76.5.1.2.2: ссылкой является несколько слов в начале комментария
}
function HLTC76_5_1_2_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Мой Комментарий из нескольких слов';
  FOLDER_PREF = 'HLTC76_5_1_2_2';
var
  obj;
begin
try
  if NOT OpenDocByNumber(2001) then Raise('Не удалось открыть документ по Alt+N'); 
  SimpleSaveToFolders(FOLDER_PREF);
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  Sys.Keys('[Home]');
  PressKeyNCount('!^[Right]' + keyPause, 3);
  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + FOLDER_PREF) then
    Raise('Не удалось установить ссылку');
  
  obj.SetFocus;  
  Sys.Keys('[Apps]');  
  if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then
    Raise('Не удалось вызвать контекстную операцию "Удалить комментарий"');
   
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  result := true;
  DeleteAllInMyDoc;
except
  DeleteAllInMyDoc;    
  Log.Message( 'HLTC76_5_1_2_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.1: Удалить пользовательский комментарий
    HLTC76.5.1.2: с ссылками на другой документ
      HLTC76.5.1.2.3: ссылкой является несколько слов в середине комментария
}
function HLTC76_5_1_2_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;   
  FOLDER_PREF = 'HLTC74_3_10_3_3';
  COMMENT = 'Мой Комментарий из нескольких слов';
  
var
  obj;
begin
try
  if NOT OpenDocByNumber(2001) then Raise('Не удалось открыть документ по Alt+N'); 
  SimpleSaveToFolders(FOLDER_PREF);
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  Sys.Keys('[Home]' + keyPause + '!^[Right]' + keyPause + '[Left][Right]');
  PressKeyNCount('!^[Right]' + keyPause, 2);
  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + FOLDER_PREF) then
    Raise('Не удалось установить ссылку');
  
  obj.SetFocus;  
  Sys.Keys('[Apps]');  
  if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then
    Raise('Не удалось вызвать контекстную операцию "Удалить комментарий"');
   
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  result := true;
  DeleteAllInMyDoc;   
except
  DeleteAllInMyDoc;
  DeleteAllUserCommentsFromContents;    
  Log.Message( 'HLTC76_5_1_2_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.1: Удалить пользовательский комментарий
    HLTC76.5.1.2: с ссылками на другой документ
      HLTC76.5.1.2.4: ссылкой является последнее слово комментария
}
function HLTC76_5_1_2_4_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT = 'Мой Комментарий из нескольких слов';
  FOLDER_PREF = 'HLTC76_5_1_2_4';
var
  obj;
begin
try
  if NOT OpenDocByNumber(2001) then Raise('Не удалось открыть документ по Alt+N'); 
  SimpleSaveToFolders(FOLDER_PREF);  

  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  Sys.Keys('[End]' + keyPause + '!^[Left]');
  if NOT SetHyperLink(obj, MY_DOCS_PATH + FOLDER_PREF) then
    Raise('Не удалось установить ссылку');
  obj.SetFocus;  
  Sys.Keys('[Apps]');  
  if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then
    Raise('Не удалось вызвать контекстную операцию "Удалить комментарий"');
   
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  result := true;
  DeleteAllInMyDoc;
except
  DeleteAllInMyDoc;  
  Log.Message( 'HLTC76_5_1_2_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.1: Удалить пользовательский комментарий
    HLTC76.5.1.3: с внутренними ссылками на этот же документ
}
function HLTC76_5_1_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  COMMENT  = 'Комментарий';
  BOOKMARK = 'Закладка HLTC76_5_1_3';
var
  obj;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT SetBookMark(BOOKMARK) then Raise('Не удалось установить закладку');
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
    
  if NOT SetHyperLink(obj, MY_DOCS_PATH + BOOKMARK) then
    Raise('Не удалось установить ссылку ');
  
  obj.SetFocus;  
  Sys.Keys('[Apps]');  
  if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then
    Raise('Не удалось вызвать контекстную операцию "Удалить комментарий"');  
  if NOT IsNotExistsComment(COMMENT) then
  begin    
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из моих документов');   
  GoToMainMenu;
  result := true;
except
  DeleteAllInMyDoc;  
  Log.Message( 'HLTC76_5_1_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.2: Проверить удаление пользовательского комментария
    HLTC76.5.2.1: при выполнении действия «Удалить пользовательских комментарий» в контекстном меню, 
    появляющемся при нажатии правой кнопки мыши над иконкой пользовательского комментария на полях документа
}
function HLTC76_5_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  COMMENT  = 'Комментарий HLTC76_5_2_1';
var
  obj;
  sub;
  x, y;
begin
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');  
  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(obj) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  if NOT MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then 
    Raise('Не удалось найти иконку пользовательского комментария');
  x := Sys.Desktop.MouseX;
  y := Sys.Desktop.MouseY;
  common.ScreenToClient(sub, x, y);
  sub.ClickR(x + 3, y + 3);
  obj.SetFocus;  
  if NOT ClickByPopUpMenuItem(sub, 'Удалить комментарий') then
  begin
    Log.Error('Не удалось удалить комментарий с САБ панели');
    Raise('Не удалось удалить комментарий с САБ панели');
  end;  
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_5_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.2: Проверить удаление пользовательского комментария
    HLTC76.5.2.2: при работе с клавиатуры (клавиша DELETE)
}
function HLTC76_5_2_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  COMMENT  = 'Комментарий HLTC76_5_2_2';
var
  obj;  
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  Sys.Keys('[Home]' + keyPause + '![End]' + keyPause + '[Del]');
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_5_2_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.2: Проверить удаление пользовательского комментария
    HLTC76.5.2.3: при использовании действия удаления комментария из контекстного меню 
    (правая кнопка мыши на пользовательском комментарии)
}
function HLTC76_5_2_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  COMMENT  = 'Комментарий HLTC76_5_2_3';
var
  obj;  
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Apps]');  
  if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then
    Raise('Не удалось вызвать контекстную операцию "Удалить комментарий"');
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_5_2_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.2: Проверить удаление пользовательского комментария
    HLTC76.5.2.4: при выделении текста пользовательского комментария и нажатия комбинации SHIFT-DELETE
}
function HLTC76_5_2_4_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  COMMENT  = 'Комментарий HLTC76_5_2_4';
var
  obj;  
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Home]' + keyPause + '![End]' + keyPause + '![Del]');
   
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_5_2_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.2: Проверить удаление пользовательского комментария
    HLTC76.5.2.5: при выделении текста пользовательского комментария и нажатия комбинации CTRL-DELETE
}
function HLTC76_5_2_5_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  COMMENT  = 'Комментарий HLTC76_5_2_5';
var
  obj;  
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');
  
  Sys.Keys('[Home]' + keyPause + '![End]' + keyPause + '^[Del]');
   
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_5_2_5_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.5: Удаление 
  HLTC76.5.2: Проверить удаление пользовательского комментария
    HLTC76.5.2.6:  в подписи: открыть документ 10064306, поставить курсор в подписи перед "Р.И. Хасбулатов" 
    и нажать Enter. Пишем коментарий. Вызываем ППР и опять заходим в тот же документ. Теперь, кликая правой 
    кнопкой по значку польз. комментария, выбрать из контекстного меню "удалить..." Проверить, что иконка 
    удалилась вместе с комментарием, а также что комментарий удалился на вкладке структура документа.
}
function HLTC76_5_2_6_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10064306;
  COMMENT = 'Комментарий HLTC76_5_2_6';
  CONTEXT = 'Хасбулатов';
var
  obj;
  sub;
  x, y;
begin
try
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', true])]) then 
    Raise('Не удалось в настройках включить показ КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX');

  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  //DeleteAllUserCommentsFromContents;
  
  obj.SetFocus;
  if NOT ClickOnContext(obj, CONTEXT) then Raise('Не удалось кликнуть по искомому контексту');
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось установить комментарий');

  if NOT GoToPPR then Raise('Не удалось перейти в ППР');
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');  

  sub := GetFromEditor('САБ ПАНЕЛЬ');
  if NOT IsExists(obj) then Raise('Не удалось получить САБ ПАНЕЛЬ');
  if NOT MoveMouseToObject(sub, 'User_Comments.bmp', 0, 0) then 
    Raise('Не удалось найти иконку пользовательского комментария');
  x := Sys.Desktop.MouseX;
  y := Sys.Desktop.MouseY;
  common.ScreenToClient(sub, x, y);
  sub.ClickR(x + 3, y + 3);
  if NOT ClickByPopUpMenuItem(sub, 'Удалить комментарий') then
  begin
    Log.Error('Не удалось удалить комментарий с САБ панели');
    Raise('Не удалось удалить комментарий с САБ панели');
  end;  
   
  if NOT IsNotExistsComment(COMMENT) then
  begin
    Log.Error('Комментарий не корректно удалился');
    DeleteAllUserCommentsFromContents;
    Raise('Комментарий не корректно удалился');
  end;
  
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_5_2_6_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  DeleteAllUserCommentsFromContents;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.1: На закладке «Мои документы» должна быть специальная папка «Мои комментарии» с 
  единственным элементом внутри «Документы с комментариями пользователя».
}
function HLTC76_6_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  NAME = 'Документы с комментариями пользователя';
var
  obj;  
  str;
begin
try
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');
  
  if NOT Position_Internal(obj, 'Мои комментарии\' + NAME) then
  begin
    Log.Error('Не удалось спозиционироваться на элементе "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элементе "Документы с комментариями пользователя"');
  end;
  
  Sys.Keys('[Right]');
  str := common.GetWindowText(obj.Handle);
  if NOT StringCompare(str, NAME) then
  begin
    Log.Error('Активный элемент не эталонный, должнен быть "Документы с комментариями пользователя"');
    Raise('Активный элемент не эталонный, должнен быть "Документы с комментариями пользователя"');
  end;
    
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_6_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.1: Проверить, когда в базе нет документов с комментариями пользователя (например, если 
    пользователь только зарегистрировался в системе) – должно выдаваться предупреждение «В установленном 
    у Вас информационном...»
}
function HLTC76_6_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  PATH    = 'Мои комментарии\Документы с комментариями пользователя';
  USER    = 'HLTC76_6_2_1';
  WARNING = 'Документы с комментариями пользователя отсутствуют!';
var
  obj;  
  str;
  count;
begin
try
  count := 5; 
  RestartF1Shell(count, Options.Run.Timeout div 6, USER, USER);
  
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');
  
  if NOT Position_Internal (obj, PATH) then
  begin
    Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
  end;
  Sys.Keys('[Enter]');
  
  str := WaitForWarningWindow(-1, '', true, 'OK');
  if str = '' then
  begin
    Log.Error('Не удалось обнаружить окно предупреждения');
    Raise('Не удалось обнаружить окно предупреждения');
  end;
  
  if NOT StringCompare(str, WARNING) then
  begin
    Log.Error('Текст предупреждения не эталонный', str);
    Raise('Текст предупреждения не эталонный');
  end;
    
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_6_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;


{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.2: В случае, когда Документы с комментариями пользователя есть, то будет показан список всех 
    документов, в которых пользователь установил свои комментарии
      HLTC76.6.2.2.1: Этот список должен иметь иерархическую. структуру, т.е должны быть вхождения 
      на те места, где установлены комментарии.
}
function HLTC76_6_2_2_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM_1   = 10003000;
  DOC_NUM_2   = 1055132;
  DOC_NUM_3   = 10064306;
  DOC_NAME_1  = 'Конституция Российской Федерации*';
  DOC_NAME_2  = 'Договор*';
  DOC_NAME_3  = 'Постановление ВС РСФСР от 12 декабря*';    
  CONTEXT_1_1 = 'Статья 10';
  CONTEXT_1_2 = 'Статья 15';
  CONTEXT_2   = 'Статья 6';  
  CONTEXT_3   = 'Москва';
  PATH        = 'Мои комментарии\Документы с комментариями пользователя';  
  COMMENT     = 'комментарий HLTC76_6_2_2_1';
  USER        = 'HLTC76_6_2_2_1';
var
  obj;
  doc;
  str;
  context;
  i, doc_num, doc_name;
  count;
begin
try   
  count := 5; 
  RestartF1Shell(count, Options.Run.Timeout div 6, USER, USER);
  
  for i := 1 to 4 do
  begin      
    case i of
      1: begin  doc_num := DOC_NUM_1;  context := CONTEXT_1_1;  end;
      2: begin  doc_num := DOC_NUM_1;  context := CONTEXT_1_2;  end;
      3: begin  doc_num := DOC_NUM_2;  context := CONTEXT_2;    end;
      4: begin  doc_num := DOC_NUM_3;  context := CONTEXT_3;    end;
    end;
    if NOT OpenDocByNumber(doc_num) then Raise('Не удалось открыть документ по Alt+N');
    if i = 1 then obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
    if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
    if NOT ClickOnContext(obj, context) then Raise('Не удалось кликнуть по искомому контексту');  
    if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');    
  end;
  
  for i := 1 to 4 do
  begin
    case i of
      1:  begin  doc_name := DOC_NAME_1 + '*\*Вхождение 1';  context := CONTEXT_1_1;  end;
      2:  begin  doc_name := DOC_NAME_1 + '*\*Вхождение 2';  context := CONTEXT_1_2;  end;    
      3:  begin  doc_name := DOC_NAME_2 + '*\*Вхождение 1';  context := CONTEXT_2;    end;
      4:  begin  doc_name := DOC_NAME_3 + '*\*Вхождение 1';  context := CONTEXT_3;    end;
    end;
    
    obj := OpenMyDocTab;
    if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');

    if NOT Position_Internal (obj, PATH) then
    begin
      Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
      Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    end;
    Sys.Keys('[Enter]');    
    obj := GetFromList('СПИСОК ДОКУМЕНТОВ');
    if NOT IsExists(obj) then
    begin
      Log.Error('Не удалось получить СПИСОК ДОКУМЕНТОВ после открытия Документов с комментариями');
      Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ после открытия Документов с комментариями');
    end;    
    if NOT OpenDocFromList(doc_name, obj) then 
      Raise('Не удалось открыть документ "' + doc_name + '" из списка');
    obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
    if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
    str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
    if NOT StringCompare(context + '*', str) then
    begin
      Log.Error('Спозиционировались не в эталонном месте', str);
      Raise('Спозиционировались не в эталонном месте');
    end;
    
    if i <> 1 then
      if DeleteAllUserCommentsFromContents < 1 then
        Log.Warning('Не было удалено ни одного комментария');
  end;//for
    
  result := true;
  CloseTabIfNeeded;
except  
  Log.Message( 'HLTC76_6_2_2_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  DeleteAllUserCommentsFromContents;
  CommonExceptionHandler;             
end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.2: В случае, когда Документы с комментариями пользователя есть, то будет показан список всех 
    документов, в которых пользователь установил свои комментарии
      HLTC76.6.2.2.2: Название списка должно быть – «Документы с моими комментариями».
}
function HLTC76_6_2_2_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  PATH    = 'Мои комментарии\Документы с комментариями пользователя';  
  COMMENT = 'комментарий HLTC76_6_2_2_2';
  CAPTION = '*Список : Документы с моими комментариями';
var           
  obj;
  str;
begin
try   
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');    
    
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');
  if NOT Position_Internal (obj, PATH) then
  begin
    Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
  end;
  Sys.Keys('[Enter]');
  obj := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(obj) then
  begin
    Log.Error('Не удалось получить СПИСОК ДОКУМЕНТОВ после открытия Документов с комментариями');
    Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ после открытия Документов с комментариями');
  end;
  str := GetMainWindow.Caption;  
  result := StringCompare(CAPTION, str);
  if NOT result then
    Log.Error('Caption списка "Документы с моими комментариями" не эталонный', str);
  if NOT OpenDocByNumber(DOC_NUM) then Log.Warning('Не удалось открыть документ по Alt+N');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_6_2_2_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  DeleteAllUserCommentsFromContents;
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.2: В случае, когда Документы с комментариями пользователя есть, то будет показан список всех 
    документов, в которых пользователь установил свои комментарии
      HLTC76.6.2.2.3: В справке к списку должно быть написано – «Список документов, 
      содержащих мои комментарии».
}
function HLTC76_6_2_2_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  PATH    = 'Мои комментарии\Документы с комментариями пользователя';  
  COMMENT = 'комментарий HLTC76_6_2_2_3';
  TEXT = 'Список документов, содержащих мои комментарии';
var
  obj;
  str;
begin
try   
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');    
    
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');
  if NOT Position_Internal (obj, PATH) then
  begin
    Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
  end;
  Sys.Keys('[Enter]');
  obj := OpenInList('СПРАВКА К СПИСКУ');
  if NOT IsExists(obj) then
  begin
    Log.Error('Не удалось открыть СПРАВКА К СПИСКУ');
    Raise('Не удалось открыть СПРАВКА К СПИСКУ');
  end;
  str := CopyToClipBoard(obj, 'ALL', 'Trim:=true');  
  result := StringCompare(str, TEXT);
  if NOT result then
    Log.Error('Текст на вкладке СПРАВКА К СПИСКУ не эталонный', str);
  if NOT OpenDocByNumber(DOC_NUM) then Log.Warning('Не удалось открыть документ по Alt+N');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_6_2_2_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.3: Проверить, что находятся документы:
      HLTC76.6.2.3.1: Когда в тексте документа есть обычный комментарий (слово, фраза, параграф, текст).
}
function HLTC76_6_2_3_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  DOC_NAME = 'Конституция Российской Федерации*';
  PATH     = 'Мои комментарии\Документы с комментариями пользователя';  
  COMMENT  = 'Мой комментарий HLTC76_6_2_3_1';
var
  obj;
  str;
begin
try  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  Sys.Keys('^[Home]');
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');    
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');    
    
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');
  if NOT Position_Internal (obj, PATH) then
  begin
    Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
  end;
  Sys.Keys('[Enter]');
  
  obj := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(obj) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ');  
  if NOT OpenDocFromList(DOC_NAME, obj) then 
    Raise('Не удалось открыть документ "' + DOC_NAME + '" из списка');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  if NOT StringCompare(DOC_NAME, str) then
  begin
    Log.Error('В документе спозиционировались не в эталонном месте', str);
    Raise('В документе спозиционировались не в эталонном месте');
  end;  
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в документе возле иконки комментария');
  PressKeyNCount('![Down]' + keyPause, 2); 
  
  str := CopyToClipBoard(obj, '', 'Trim:=true');
  result := StringCompare(COMMENT + EndOfLine + COMMENT, str );
  if NOT result then
    Log.Error('Комментарий не эталонный, после открытия его из Списка: Док-ты с моими комментариями', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  CloseTabIfNeeded;
except  
  Log.Message( 'HLTC76_6_2_3_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.3: Проверить, что находятся документы:
      HLTC76.6.2.3.2: Когда в тексте документа есть комментарий, содержащий таблицы.
}
function HLTC76_6_2_3_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  DOC_NAME = 'Конституция Российской Федерации*';
  PATH     = 'Мои комментарии\Документы с комментариями пользователя';  
  COMMENT  = 'Мой комментарий HLTC76_6_2_3_2';
var
  obj;
  str;
begin
try  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  Sys.Keys('^[Home]' + keyPause + '[Enter]' + keyPause + '[Apps]' + keyPause);
  if NOT  ClickByPopUpMenuItem(obj, 'Вставить таблицу') then 
    Raise('Не удалось из контекстного меню вставить Таблицу');
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');
  if NOT Position_Internal (obj, PATH) then
  begin
    Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
  end;
  Sys.Keys('[Enter]');  
  obj := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(obj) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ');
  if NOT OpenDocFromList(DOC_NAME, obj) then 
    Raise('Не удалось открыть документ "' + DOC_NAME + '" из списка');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(DOC_NAME, str);
  if NOT result then
    Log.Error('В документе спозиционировались не в эталонном месте', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  CloseTabIfNeeded;
except  
  Log.Message( 'HLTC76_6_2_3_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.3: Проверить, что находятся документы:
      HLTC76.6.2.3.3: Когда в тексте документа есть комментарий, содержащий картинки.
}
function HLTC76_6_2_3_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  DOC_NAME = 'Конституция Российской Федерации*';
  PATH     = 'Мои комментарии\Документы с комментариями пользователя';  
var
  obj;
  str;
begin
try  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  DeleteAllUserCommentsFromContents;
  obj.SetFocus;
  Sys.Keys('^[Home]' + keyPause + '[Enter]' + keyPause + '[PrtSc]' + keyPause + '[Apps]');
  if NOT  ClickByPopUpMenuItem(obj, 'Вставить') then 
    Raise('Не удалось из контекстного меню вставить комментарий в виде картинки');
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');
  if NOT Position_Internal (obj, PATH) then
  begin
    Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
  end;
  Sys.Keys('[Enter]');  
  obj := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(obj) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ');
  if NOT OpenDocFromList(DOC_NAME, obj) then 
    Raise('Не удалось открыть документ "' + DOC_NAME + '" из списка');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(DOC_NAME, str);
  if NOT result then
    Log.Error('В документе спозиционировались не в эталонном месте', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  CloseTabIfNeeded;
except  
  Log.Message( 'HLTC76_6_2_3_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  GoToMainMenuWithCloseTabsExceptOne;             
end;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.3: Проверить, что находятся документы:
      HLTC76.6.2.3.4: Должны находится редакции, если в них есть комментарий пользователя.
}
function HLTC76_6_2_3_4_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 8901010;
  CONTEXT  = 'Это предыдущая';
  PATH     = 'Мои комментарии\Документы с комментариями пользователя';
  PATH_DOC = 'Документ с нормальной цепочкой редакций. ACTIVE 21/04/2003\Редакции\' +
             '*(от *';
  COMMENT  = 'Мой комментарий HLTC76_6_2_3_4';
var
  obj;
  str;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  DeleteAllUserCommentsFromContents;
  if NOT ClickOnContext(obj, CONTEXT) then Raise('Не удалось кликнуть по искомому контексту');
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');        
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');
  if NOT Position_Internal (obj, PATH) then
  begin
    Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
  end;
  Sys.Keys('[Enter]');
      
  obj := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(obj) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ');
  if NOT OpenDocFromList(PATH_DOC, obj) then 
    Raise('Не удалось открыть документ "' + PATH_DOC + '" из списка');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  if NOT StringCompare(CONTEXT + '*', str) then
  begin
    Log.Error('В документе спозиционировались не в эталонном месте', str);
    Raise('В документе спозиционировались не в эталонном месте');
  end;  

  Sys.Keys('[Down]');
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(str, COMMENT);
  if NOT result then
    Log.Error('Комментарий не эталонный, после открытия его из Списка: Док-ты с моими комментариями', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  CloseTabIfNeeded;
except  
  Log.Message( 'HLTC76_6_2_3_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
HLTC76.6: Поиск документов с пользовательскими комментариями
  HLTC76.6.2: Поиск документов с комментариями осуществляется кликом на элементе  
  «Документы с комментариями пользователя»:
    HLTC76.6.2.4: Проверить, что не находится документ, если в нем сначала создать пользовательские 
    комментарии, а потом удалить.
}
function HLTC76_6_2_4_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM  = 10003000;
  DOC_NAME = 'Конституция Российской Федерации*';
  PATH     = 'Мои комментарии\Документы с комментариями пользователя';
  COMMENT  = 'Мой комментарий HLTC76_6_2_4';
var
  obj;
  str;
begin
try
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');
  
  if DeleteAllUserCommentsFromContents < 1 then Raise('Не было удалено ни одного комментария');
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise ('Не удалось получить вкладку Мои документы');  
  if NOT Position_Internal (obj, PATH) then
  begin
    Log.Error('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
    Raise('Не удалось спозиционироваться на элемент "Документы с комментариями пользователя"');
  end;
  Sys.Keys('[Enter]');  
  str := WaitForWarningWindow(-1, '', true, 'OK');
  if str = '' then
  begin
    //Если вдруг ещё в каких то других документах есть комментарии
    //(т.е. если при открытии "Документы с комментариями пользователя" нет предупреждения), то проверяем, что в 
    //постоевшемся списке нет искомого докеумента
    obj := GetFromList('СПИСОК ДОКУМЕНТОВ');
    if NOT IsExists(obj) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ ');
    if Position_Internal(obj, DOC_NAME, '\', true, 'isPressHome:=true') then
    begin
      Log.Error('В списке "Документы с комментариями пользователя" находится документ с удалёнными комментариями');
      Raise;
    end;
  end;
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_6_2_4_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
  HLTC76.3.15: Создание нескольких коментариев к одному параграфу
    HLTC76.3.15.1: Открыть ТС и поставить курсор в самое начало толкования. 
    Нажать клавишу “Enter” и ввести произвольный текст толкования Опять поставить курсор в начало 
    толкования и нажать “Enter”, курсор должен переместиться в только что созданный комметарий пользователя,
    не должен появиться новый отдельный комментарий отделенный горизонтальными линиями.
}
function HLTC76_3_15_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  COMMENT  = 'Мой комментарий HLTC76_3_15_1';
  TEMP_FILE = 'Comments_TC.bmp';
var
  obj;
  pathToImage;
begin
try
  pathToImage := GetTempDirectory + '\' + TEMP_FILE;
  if NOT GoToDictionary then Raise('Не удалось перейти в ТС');
  obj := GetFromDictionary('ТЕКСТ СТАТЬИ');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ СТАТЬИ');  
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');
  obj.Picture.SaveToFile(pathToImage);  
  obj.SetFocus;
  Sys.Keys('^[Home]' + keyPause + '[Enter]');
    
  result := Regions.Compare(obj, pathToImage, false, true, false, 0);
  if NOT result then  
    Log.Error('Скриншот области ТЕКСТ СТАТЬИ в ТС не эталонная');
  
  obj.SetFocus;
  Sys.Keys('[Apps]');
  if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then
    Log.Warning('Не удалось кликнуть по контекстной операции "удалить комментарий"');  
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_15_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
 HLTC76.3.16: Удаление нескольких пользовательских комментариев
  HLTC76.3.16.1: Откыть толкование термина «Абандон (1)». Установить курсор на начало 1-го параграфа 
  толкования и нажать клавишу «Enter». Набрать произвольный текст в комментарии пользователя, выделить его
  и скопировать в буффер. Установить курсор на начало 2-го параграфа и нажав клавишу Enter, вставить из
  буффера текст комментария. Аналогичным образом сделать комментарий к 3-му параграфу. Кликнуть правой
  кнопокй мыши в комментарии к 3-ему параграфу и удалить его командой контекстного меню. Аналогичным образом
  удалить коментарий ко 2-ому и 1-ому параграфу. Шелкнуть правой кнопкой мыши на 3-ем параграфе
  толкования – не должно появиться сообщении об ошибке.
}
function HLTC76_3_16_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  PATH = '*Абандон*1*';             
  COMMENT = 'Мой комментарий HLTC76_3_16_1';
  CONTEXT_2 = 'нецелесообразны';
  CONTEXT_3 = 'В дальнейшем';
  
var
  obj;
  i;
  context;
  pathToImage;
begin
try  
  if NOT GoToDictionary then Raise('Не удалось перейти в ТС');
  obj := GetFromDictionary('СПИСОК ТЕРМИНОВ');
  if NOT IsExists(obj) then Raise('Не удалось получить СПИСОК ТЕРМИНОВ');
  if NOT Position_Internal(obj, PATH, '\', true, 'isPressHome:=true') then 
    Raise('Не удалось спозиционироваться на термине в списке терминов ТС');
  Sys.Keys('[Enter]');
  obj := GetFromDictionary('ТЕКСТ СТАТЬИ');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ СТАТЬИ');
  //Убираем с саб панели "иконку польз. комментраиев", что бы зафиксировать по ширине область документа, 
  //так как в дальнейшем придётся сравнивать эту картинку 
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', false])]) then
    Raise('Не удалось в настройках конфигурации выставить необходимое значение: ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ/КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]');
   
  obj.SetFocus;
  Sys.Keys('^[Home]');  
  for i := 1 to 3 do
  begin
    case i of
      2 : context := CONTEXT_2;
      3 : context := CONTEXT_3;
    end;    
    if i <> 1 then    
      if NOT ClickOnContext(obj, context) then Raise('Не удалось кликнуть по искомому контексту');    
    if i =1 then
    begin
      if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');
    end
    else      
      if NOT Insert_Comment(' ', nil, false, true) then Raise('Не удалось поставить коммент.');
    if i = 1 then     
      Sys.Keys('[End]' + keyPause + '![Home]' + keyPause + '^c' + keyPause + '[End]');    
  end;//for  
  for i := 1 to 3 do
  begin
    if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ', nil , true) then
      Raise('Не удалось кликнуть в докумнете возле иконки комментария'); 
    if NOT ClickByPopUpMenuItem(obj, 'Удалить комментарий') then 
      Raise('Не удалось кликнуть по контекстной операции "Удалить комментарий"');
  end;
  obj.SetFocus;
  Sys.Keys('^[Home]');
  //Ещё раз фиксируем область документа
  if NOT SetSettings ([(['ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ', 'КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]', false])]) then
    Raise('Не удалось в настройках конфигурации выставить необходимое значение: ДОКУМЕНТ\МЕТКИ НА ПОЛЯХ/КОММЕНТРАРИИ ПОЛЬЗОВАТЕЛЯ [CHECKBOX]');
 
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_16_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.3: Специальные проверки
 HLTC76.3.17: Пользовательские комментарии в новостной ленте
   1. Выбрать ПРАЙМ. Моя новостная лента
   2. В диалоге выбрать "Посмотреть все поступления в продукт ПРАЙМ"
   3. Перейти по ссылке в документ
   4. В документе перейти на вкладку «Аннотация»
   5. Создать там пользовательский комментарий
   6. Снова построить новостную ленту
   Комментарий должен отображаться

  7. Комментарий можно скрыть/показать через главное меню:
   Документ - Комментарии - Скрыть мои комментарии

  8. Убедиться, что комментарий нельзя изменить/удалить
   Если перейти в документ и открыть аннотацию - там можно.  
    
}
function HLTC76_3_17_Execute (var  CurrentState: OleVariant): OleVariant;
const
  CONTEXT = 'ссылка на блок 100 топика 2002';
  PATH = '*Абандон*1*';             
  COMMENT = 'Мой комментарий HLTC76_3_17';
  TEMP_FILE = 'Comments_TC.bmp';
var
  obj;
  str;
begin
try   
  obj := GoToPrime('', true); 
  if NOT IsExists(obj) then Raise('Не удалось открыть ПРАЙМ.Моя новостная лент');
  if NOT ClickByHyperLink(obj, 'ДОКУМЕНТ 2002 с 10 командами NAME ') then Raise('Не удалось перейти по гиперссылке "ДОКУМЕНТ 202" в НОвостной ленте');
  obj := OpenInDocument('АННОТАЦИЯ');
  if NOT IsExists(obj) then Raise('Не удалось открыть вкладку АННОТАЦИЯ');
  obj.SetFocus;
  if NOT Insert_Comment(COMMENT) then Raise('Не удалось поставить комментарий');
  obj := GoToPrime('', true); 
  if NOT IsExists(obj) then Raise('Не удалось открыть ПРАЙМ.Моя новостная лент');    
  str:= SelectTextComment(obj, 1);  
  if NOT StringCompare(COMMENT, str) then
  begin
    Log.Error('Комментарий в новостной ленте не отображается или не эталонен:' + str);
    Raise('Комментарий в новостной ленте не отображается или не эталонен:' + str);
  end;
  //7. Комментарий можно скрыть/показать через главное меню:
  //Документ - Комментарии - Скрыть мои комментарии
  if NOT ClickByMainMenuItem('Документы\Комментарии\Скрыть мои комментарии') then 
    Raise('Не удалось кликнуть в главном меню "Документы\Комментарии\Скрыть мои комментарии"');  
  str:= SelectTextComment(obj, 1);
  if NOT ( str = '') then
  begin
    Log.Error('Комментарий в новостной ленте Отображается, хотя не должен:' + str);
    Raise('Комментарий в новостной ленте Отображается, хотя не должен:' + str);  
  end;  
  if NOT ClickByMainMenuItem('Документы\Комментарии\Показать мои комментарии') then 
    Raise('Не удалось кликнуть в главном меню "Документы\Комментарии\Показать мои комментарии"');
  obj.SetFocus;
  Sys.Keys('^[Home]');    
  str:= SelectTextComment(obj, 1);    
  if NOT StringCompare(COMMENT, str) then
  begin
    Log.Error('Комментарий в новостной ленте, при включении его показа,  не отображается или не эталонен:' + str);
    Raise('Комментарий в новостной ленте, при включении его показа,  не отображается или не эталонен:' + str);
  end;
  //8. Убедиться, что комментарий нельзя изменить/удалить
  //Если перейти в документ и открыть аннотацию - там можно.
  Sys.Keys('[Del]');
  str:= SelectTextComment(obj, 1);    
  if NOT StringCompare(COMMENT, str) then
  begin
    Log.Error('Комментарий в новостной ленте УДАЛИЛСЯ:' + str);
    Raise('Комментарий в новостной ленте УДАЛИЛСЯ:' + str);
  end;
  
  if NOT ClickByHyperLink(obj, 'ДОКУМЕНТ 2002 с 10 командами NAME ') then Raise('Не удалось перейти по гиперссылке "ДОКУМЕНТ 202" в НОвостной ленте');
  obj := OpenInDocument('АННОТАЦИЯ');
  if NOT IsExists(obj) then Raise('Не удалось открыть вкладку АННОТАЦИЯ');
  obj.SetFocus; 
  str:= SelectTextComment(obj, 1);    
  if NOT StringCompare(COMMENT, str) then  
    Raise('Комментарий в аннотации  не эталонен:' + str);
  //Удаляем комментарий
  Sys.Keys('[Del]');
  //Проверям что в новостной ленте комментарий удалился
  obj := GoToPrime('', true); 
  if NOT IsExists(obj) then Raise('Не удалось открыть ПРАЙМ.Моя новостная лент');    
  str:= SelectTextComment(obj, 1);  
  if NOT StringCompare(str, '') then
  begin
    Log.Error('Комментарий в новостной ленте не удалился и ОТОБРАЖАЕТСЯ:' + str);
    Raise('Комментарий в новостной ленте не удалился и ОТОБРАЖАЕТСЯ:' + str);
  end;    
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_3_17_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
HLTC76.4: Простановка ссылки
 HLTC76.4.4: Проверить простановку ссылки вне выделенного текста комментария, когда правой кнопкой мыши
 кликают по невыделенному слову в пользовательском комментарии (ссылка должна проставиться на все слово
 целиком):
  HLTC76.4.4.1: проверить, что когда маркер текста находится перед словом 
  (после пробела перед буквой-цифрой), то ссылка ставится на слово, находящееся за маркером
}
function HLTC76_4_4_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM   = 10003000;
  COMMENT   = 'Комментарий проверка ссылок';
  FOLDER_PREF = 'HLTC76_4_4_1';
var
  obj;  
  list_Pref;
begin
  list_Pref := MY_DOCS_PATH + FOLDER_PREF;
try
  if NOT OpenDocByNumber(2001) then Raise('Не удалось открыть документ по Alt+N'); 
  SimpleSaveToFolders(FOLDER_PREF);
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  obj.SetFocus;
  Sys.Keys('[PageDown]');
  if NOT Insert_Comment(COMMENT) then 
    Raise('Не удалось установить комментарий');
  Sys.Keys('!^[Left]' + keyPause + '[Left]' + keyPause + '[Right]');
  
  if NOT SetHyperLink(obj, LIST_PREF) then  Raise('Не удалось установить ссылку!');
  
  Sys.Keys('[End]' + keyPause + '!^[Left]');
  PressKeyNCount( '[Left]' + keyPause, 4 );
  Sys.Keys('[Apps]');
  if NOT IsPopupMenuItemExists(obj, 'Поставить ссылку...', true) then
  begin
    Log.Error('Ссылка поставилась не на эталонное слово');
    Raise;
  end;
  
  Sys.Keys('[End]');
  PressKeyNCount( '[Left]' + keyPause, 4 );
  Sys.Keys('[Apps]');
  result := IsPopupMenuItemExists(obj, 'Изменить ссылку...', true);
  if NOT result then
    Log.Error('Ссылка на эталонное слово НЕ поставилась');
  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');  
  DeleteAllInMyDoc;
except
  DeleteAllInMyDoc;
  DeleteAllUserCommentsFromContents;
  Log.Message( 'HLTC76_4_4_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
 HLTC76.4.4: Проверить простановку ссылки вне выделенного текста комментария, когда правой кнопкой мыши
 кликают по невыделенному слову в пользовательском комментарии (ссылка должна проставиться на все слово
 целиком):
  HLTC76.4.4.2: проверить, что когда маркер текста находится после слова (после буквой-цифрой перед пробелом), 
  то ссылка ставится на слово, находящееся перед маркером.
}
function HLTC76_4_4_2_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM   = 10003000;
  COMMENT   = 'Комментарий проверка ссылок';
  FOLDER_PREF = 'HLTC76_4_4_2';
var
  obj;  
  list_Pref;
begin    
try
  list_Pref := MY_DOCS_PATH + FOLDER_PREF;
    
  if NOT OpenDocByNumber(2001) then Raise('Не удалось открыть документ по Alt+N'); 
  SimpleSaveToFolders(FOLDER_PREF);
  
  DeleteAllUserCommentsFromContents;
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');    
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  
  
  if NOT Insert_Comment(COMMENT) then 
    Raise('Не удалось установить комментарий');
  Sys.Keys('[End]' + keyPause + '!^[Left]' + keyPause + '[Left]');
  
  if NOT SetHyperLink(obj, LIST_PREF) then  Raise('Не удалось установить ссылку!');
  
  Sys.Keys('[End]');
  PressKeyNCount('[Left]' + keyPause, 3);
  Sys.Keys('[Apps]');
  if NOT IsPopupMenuItemExists(obj, 'Поставить ссылку...', true) then
  begin
    Log.Error('Ссылка поставилась не на эталонное слово');
    Raise;
  end;
  
  Sys.Keys('[End]' + keyPause + '!^[Left]');
  PressKeyNCount('[Left]' + keyPause, 4 );
  Sys.Keys('[Apps]');
  result := IsPopupMenuItemExists(obj, 'Изменить ссылку...', true);
  if NOT result then
    Log.Error('Ссылка на эталонное слово НЕ поставилась');
  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');  
  DeleteAllInMyDoc;
except
  DeleteAllInMyDoc;
  DeleteAllUserCommentsFromContents;
  Log.Message( 'HLTC76_4_4_2_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
 HLTC76.4.4: Проверить простановку ссылки вне выделенного текста комментария, когда правой кнопкой мыши
 кликают по невыделенному слову в пользовательском комментарии (ссылка должна проставиться на все слово
 целиком):
  HLTC76.4.4.3: проверить, когда маркер текста находится внутри слова – ссылка ставится на слово целиком
}
function HLTC76_4_4_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM   = 10003000;
  COMMENT   = 'Комментарий проверка ссылок';
  FOLDER_PREF = 'HLTC76_4_4_3';
var
  obj;  
begin
try  
  if NOT OpenDocByNumber(2001) then Raise('Не удалось открыть документ по Alt+N'); 
  SimpleSaveToFolders(FOLDER_PREF);
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  DeleteAllUserCommentsFromContents;    
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
   
  if NOT Insert_Comment(COMMENT) then 
    Raise('Не удалось установить комментарий');
  Sys.Keys('[End]' + keyPause + '!^[Left]');
  PressKeyNCount('[Left]' + keyPause, 3);
  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + FOLDER_PREF) then  Raise('Не удалось установить ссылку!');
  
  Sys.Keys('[End]');
  PressKeyNCount('[Left]' + keyPause, 3);
  Sys.Keys('[Apps]');
  if NOT IsPopupMenuItemExists(obj, 'Поставить ссылку...', true) then
  begin
    Log.Error('Ссылка поставилась не на эталонное слово');
    Raise;
  end;
  
  Sys.Keys('[End]' + keyPause + '!^[Left]');
  PressKeyNCount('[Left]' + keyPause, 4 );
  Sys.Keys('[Apps]');
  if NOT IsPopupMenuItemExists(obj, 'Изменить ссылку...', true) then
  begin
    Log.Error('Ссылка на эталонное слово НЕ поставилась');
    Raise;
  end;
  
  Sys.Keys('[Home]');
  PressKeyNCount('[Right]' + keyPause, 3);
  Sys.Keys('[Apps]');
  result := IsPopupMenuItemExists(obj, 'Поставить ссылку...', true);
  if NOT result then
    Log.Error('Ссылка поставилась не на эталонное слово');
  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');  
  DeleteAllInMyDoc;
except
  DeleteAllInMyDoc;
  DeleteAllUserCommentsFromContents;
  Log.Message( 'HLTC76_4_4_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
 HLTC76.4.7: Проверить работу с распределенными в сети сохраненными объектами:
  HLTC76.4.7.1: Установить ссылку на документ, расположенный в папке другого пользователя с правами чтения.
  
  HLTC76.4.7.3: Установить ссылку на список, расположенный в папке другого пользователя с правами чтения
  
  HLTC76.4.7.5: Установить ссылку на запрос, расположенный в папке другого пользователя с правами чтения
}
function HLTC76_4_7_Execute (var  CurrentState: OleVariant): OleVariant;
const
  PREF      = 'HLTC_76_4_7';
  DOC_NUM_1 = 10003000;
  DOC_NUM_2 = 1055132;  
var
  obj;
  str;
  count;
  login, pass;
  i;
  caption;
  etalon_name;
begin
try
 //Логинимся пользователем ..user1   
  login := PREF + '_user1';
  pass  := PREF;
  count := 5;
  RestartF1Shell(count, Options.Run.Timeout div 6, login, pass);
  
  obj := OpenMyDocTab;
  if NOT IsExists(obj) then Raise('Не удалось получить дерево папок');
  if NOT (
    CreateFolderFrom (true, 'Мои документы', PREF + 'doc_r'  , '', obj) AND    
    CreateFolderFrom (true, 'Мои документы', PREF + 'list_r' , '', obj) AND    
    CreateFolderFrom (true, 'Мои документы', PREF + 'quer_r' , '', obj)        
  ) then Raise ('Не удалось создать одну из папок');            
 
  if NOT (  
    RightAccess(MY_DOCS_PATH + PREF + 'doc_r'  , 'SET', 'Все', RIGHT_READ)   AND    
    RightAccess(MY_DOCS_PATH + PREF + 'list_r' , 'SET', 'Все', RIGHT_READ)   AND    
    RightAccess(MY_DOCS_PATH + PREF + 'quer_r' , 'SET', 'Все', RIGHT_READ)    
  ) then Raise ('Не удалось установить права доступа для одной из папок');
 
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N');
  if NOT SetBookMark('doc_r' , '', MY_DOCS_PATH + PREF + 'doc_r') then
    Raise ('Не удалось установить одну из закладкок');
     
  if NOT OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then 
    Raise('Не удалось открыть список из рубрикатора');
  if NOT SaveToFoldersExt(MY_DOCS_PATH + PREF + 'list_r' , 'list_r',  '') then 
    Raise ('Не удалось сохранить список в мои документы');
  
  if NOT GoToPPR then Raise('Не удалось перейти в ППР');
  Sys.Keys('конституция');
  if NOT SaveToFoldersExt(MY_DOCS_PATH + PREF + 'quer_r' , 'quer_r',  '') then 
    Raise ('Не удалось сохранить запрос в мои документы');
  
  //Логинимся пользователем ..user2
  login :=  PREF + '_user2';
  count := 5;
  RestartF1Shell(count, Options.Run.Timeout div 6, login, pass); 
                                                                 
  for i := 1 to 3 do
  begin
    if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N');            
    obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');          
    if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');
    if i <> 1 then DeleteAllUserCommentsFromContents;    
    case i of 
    1: 
      begin         
        str := 'Общие\' + PREF + '_user1\' + PREF + 'doc_r\doc_r';
        obj.SetFocus;  
        Sys.Keys('[Enter]' + keyPause + 'комментарий для проверки перехода по ссылке');  
        if NOT SetHyperLink(obj, str) then
          Raise('Не удалось установить ссылку на закладку из другого документа в папке др.польз.');        
        Sys.Keys('[Left]');//Чтоб значь, что курсор находится внутри гиперссылки
        if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');
        caption := GetMainWindow.Caption;
        etalon_name := '*Конституция Российской Федерации*';
      end;//1
     2:
      begin        
        str := 'Общие\' + PREF + '_user1\' + PREF + 'list_r\list_r';
        obj.SetFocus;  
        Sys.Keys('[Enter]' + keyPause + 'комментарий для проверки перехода по ссылке');    
        if NOT SetHyperLink(obj, str) then
          Raise('Не удалось установить ссылку на закладку из другого документа в папке др.польз.');
        Sys.Keys('[Left]');//Чтоб значь, что курсор находится внутри гиперссылки  
        if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');
        caption := GetMainWindow.Caption;
        etalon_name := '*list*';
      end;//2
      3:
      begin         
        str := 'Общие\' + PREF + '_user1\' + PREF + 'quer_r\quer_r';
        obj.SetFocus;  
        Sys.Keys('[Enter]' + keyPause + 'комментарий для проверки перехода по ссылке');    
        if NOT SetHyperLink(obj, str) then
          Raise('Не удалось установить ссылку на закладку из другого документа в папке др.польз.');
        Delay(Options.Run.Timeout div 60);  
        Sys.Keys('[Left]');//Чтоб значь, что курсор находится внутри гиперссылки  
        
        if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');
        
        Delay(Options.Run.Timeout div 30);  
        caption := GetMainWindow.Caption;
        etalon_name := '*По запросу: Искать в недействующих редакциях - *; СЛОВА В НАЗВАНИИ - конституция';
      end;//3
    end;//case  
    
    if NOT StringCompare(etalon_name, caption) then
    begin
      Log.Error('После перехода по гиперссылке на '+IntToStr(i)+'-ой итерации Окно(его Caption) не эталонно', caption);
      Raise;
    end;            

  end;//for
  
  if NOT OpenDocByNumber(DOC_NUM_2) then Log.Warning('Не удалось открыть документ по Alt+N');  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');    
  result := true;
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_7_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));  
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.8: Проверить, что при удалении списков и запросов переход по ссылке становится невозможным 
  (однако, форматирование ссылки не удаляется из текста комментария). Проверить, что при попытке нажатия
  левой кнопкой мыши над такой ссылкой не выдается сообщение об ошибке.
}
function HLTC76_4_8_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  COMMENT   = 'Комментарий проверка ссылок';
  PREF      = 'HLTC76_4_8';
  WARNING   = 'Вы пытаетесь перейти на закладку*удалена!';
var
  obj;
  str;
  i;
  list_path;
begin
try
  list_path := LIST_ALLCODES;
  if NOT OpenEtalonList(LIST_PATH) then Raise('Не удалось открыть список Всех кодексов');
  if NOT SaveToFoldersExt('Мои документы', 'list_' + PREF, '') then Raise('Не удалось сохранить список');
  
  if NOT GoToPPR then Raise('Не удалось перейти в ППР');
  if NOT SaveToFoldersExt('Мои документы', 'quer_' + PREF , '') then Raise('Не удалось сохранить запрос');

  for i := 1 to 2 do
  begin
    case i of
      1: str := MY_DOCS_PATH + 'list_' + PREF;    
      2: str := MY_DOCS_PATH + 'quer_' + PREF;
    end;  
    if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');  
    obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
    if NOT IsExists(obj) then Raise ('Не удалось получить ТЕКСТ ДОКУМЕНТА');  
    if NOT Insert_Comment(COMMENT) then 
      Raise('Не удалось установить комментарий');   
    if NOT SetHyperLink(obj, str) then  Raise('Не удалось установить ссылку!');
    if NOT DeleteObjectFromFolder(str) then Raise('Не удалось удалить список из моих документов');
    obj.SetFocus;
    Delay(Options.Run.Timeout div 60);
    Sys.Keys('[Left]' + keyPause);//Чтоб значь, что курсор находится внутри гиперссылки    
    if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');
    str := WaitForWarningWindow;
    if NOT StringCompare(WARNING, str) then
    begin
      Log.Error('После перехода по ссылке на несуществующийий список нет предупреждения', str);
      Raise;
    end;
    if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  end;//for
  result := true;
  GoToMainMenu;
except  
  DeleteAllUserCommentsFromContents;
  Log.Message( 'HLTC76_4_8_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.5: Установить ссылку на сохраненный запрос и перейти по ней, сверить, что результаты поиска при 
  непосредственном выполнении запроса и при переходе по ссылке совпадают.
}
function HLTC76_4_5_Execute (var  CurrentState: OleVariant): OleVariant;
const
  PREF = 'HLTC76_4_5';
  DOC_NUM = 10003000;
var
  obj;
  str;
  list;
  listArray;
  cardData;
begin
try
	 cardData :=
    [
    	CARD_PPR, 
      ([
        ([ FD_WORDS_IN_CAPTION,   ([ 'Конституция']) ]),        
        ([ FD_INOPERATIVE_EDITION,([ 'Да']) ])
      ])
    ];


  if NOT GoToPPR then Raise('Не удалось открыть ППР');
  if NOT FillPPRCard(cardData) then
    Raise('Не получилось заполнить карточку ППР!');  
  if NOT SaveToFoldersExt('Мои документы', 'query_' + PREF, '') then Raise('Не удалось сохранить запрос');
  Sys.Keys('^[Enter]');
  
  list := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(list) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ после выполнения запроса');
  listArray := GetElementsFromTree(list);
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT InsertComment(obj, PREF + ' Комментарий') then Raise('Не удалось установить комментарий');
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'query_' + PREF) then Raise('Не удалось поставить ссылку');
  Delay(Options.Run.Timeout div 60);
  Sys.Keys('[Left]' + keyPause);//Чтоб значь, что курсор находится внутри гиперссылки
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');  
  list := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(list) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ после выполнения запроса');
  result := CompareArray(GetElementsFromTree(list),listArray);
  if NOT result then
    Log.Error('Результирующий список не равен исходному');
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из моих документов');  
  if NOT OpenDocByNumber(DOC_NUM) then Loq.Warning('Не удалось открыть документ по Alt+N');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');  
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_5_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.6: Установить ссылку на сохраненный список и перейти по ней, удостовериться в том, что полученный
  при переходе по ссылке список совпадает со списком, который получен при непосредственной  загрузке.
}
function HLTC76_4_6_Execute (var  CurrentState: OleVariant): OleVariant;
const
  PREF = 'HLTC76_4_6';
  DOC_NUM = 10003000;
var
  obj;
  str;
  list;
  listArray;
  cardData;
begin
try
  cardData :=
    [
    	CARD_PPR, 
      ([
        ([ FD_WORDS_IN_CAPTION,   ([ 'Конституция']) ]),        
        ([ FD_INOPERATIVE_EDITION,([ 'Да']) ])
      ])
    ];
  if NOT GoToPPR then Raise('Не удалось открыть ППР');
  if NOT FillPPRCard(cardData) then
    Raise('Не получилось заполнить карточку ППР!');  
  Sys.Keys('^[Enter]');
  list := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(list) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ после выполнения запроса');
  listArray := GetElementsFromTree(list);
  
  if NOT SaveToFoldersExt('Мои документы', 'list_' + PREF, '') then Raise('Не удалось сохранить запрос');
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT InsertComment(obj, PREF + ' Комментарий') then Raise('Не удалось установить комментарий');
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'list_' + PREF) then Raise('Не удалось поставить ссылку');
  Delay(Options.Run.Timeout div 60);
  Sys.Keys('[Left]');//Чтоб значь, что курсор находится внутри гиперссылки
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');  
  list := GetFromList('СПИСОК ДОКУМЕНТОВ');
  if NOT IsExists(list) then Raise('Не удалось получить СПИСОК ДОКУМЕНТОВ после выполнения запроса');
  result := CompareArray(GetElementsFromTree(list),listArray);
  if NOT result then
    Log.Error('Результирующий список не равен исходному');
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из моих документов');  
  if NOT OpenDocByNumber(DOC_NUM) then Log.Warning('Не удалось открыть документ по Alt+N');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');  
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_6_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.9.3: Если имеется выделение, которое захватывает одну гипертекстовую ссылку, то при вызове
  контекстного меню [Apps] будут доступны операции – «изменить ссылку» и «открыть ссылку». Если имеется
  выделение, которое не захватывает ни одной гипертекстовой ссылки, то при вызове контекстного меню [Apps] 
  будет доступна только операция «поставить ссылку». Если выделения нет, то работает так, как будто есть 
  "выделение" по границам слова в котором стоит курсор, если выделение пустое (между двумя пробелами) - не 
  доступно ничего.
}
function HLTC76_4_9_3_Execute (var  CurrentState: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  FOLDER_PREF = 'HLTC76_4_9_3';
var
  obj;
  str;
  i;
  position;
begin
try
  if NOT OpenDocByNumber(2001) then Raise('Не удалось открыть документ по Alt+N'); 
  SimpleSaveToFolders(FOLDER_PREF);
  
  if NOT OpenDocByNumber(DOC_NUM) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  Sys.Keys('[Enter]' + 'Комментарий');
  if NOT SetHyperLink(obj, MY_DOCS_PATH + FOLDER_PREF) then
    Raise('Не удалось установить ссылку');
  for i := 1 to 4 do
  begin
    case i of 
      1: begin//Становим курсор в начало гиперссылке и вызываем контекстное меню   
           Sys.Keys('[Home]' + keyPause + '[Apps]');
           position := 'начале';
         end;
      2: begin //Становим курсор в средину гиперссылки и вызываем контекстное меню
           Sys.Keys('[Right][Right]' + keyPause + '[Apps]');
           position := 'средине';
         end;
      3: begin//Становим курсор в конец гиперссылке и вызываем контекстное меню
           Sys.Keys('[End]' + keyPause + '[Apps]');
           position := 'конце';
         end;
      4: begin//Вызываем контекстное меню на выделенной гиперссылке   
           Sys.Keys('[End]');
           PressKeyWithCheck(['![Home]']);
           Sys.Keys('[Apps]');
           position := 'начале';
         end;
    end;//case
    if NOT IsPopupMenuItemExists(obj, 'Изменить ссылку...', false) then
    begin
      Log.Error('Находясь в ' + position + ' гиперссылки нет контекстной операции "Изменить ссылку..."');
      Raise;
    end;
    if IsPopupMenuItemExists(obj, 'Поставить ссылку...', false) then
    begin
      Log.Error('Находясь в ' + position + ' гиперссылки есть контекстной операция "Поставить ссылку..."');
      Raise;
    end;
    if NOT IsPopupMenuItemExists(obj, 'Перейти по гиперссылке', false) then
    begin
      Log.Error('Находясь в ' + position + ' гиперссылки нет контекстной операции "Перейти по гиперссылке"');
      Raise;
    end;  
    if NOT IsPopupMenuItemExists(obj, 'Удалить гиперссылку', true) then
    begin
      Log.Error('Находясь в ' + position + ' гиперссылки нет контекстной операции "Удалить гиперссылку"');
      Raise;
    end;
  end;//for
  //Ставим новый комментарий и выделяем не ссылку
  PressKeyWithCheck(['[PageDown]']);
  if NOT InsertComment(obj, 'комментарий HLTC76_4_9_3') then Raise('Не удалось установить комментарий');  
  if NOT SetHyperLink(obj, MY_DOCS_PATH + FOLDER_PREF) then
    Raise('Не удалось установить ссылку');
  Sys.Keys('[Home]');
  PressKeyWithCheck(['!^[Right]']);
  Sys.Keys('[Apps]');
  if IsPopupMenuItemExists(obj, 'Изменить ссылку...', false) then
  begin
    Log.Error('В контекстном меню к выделенному слову(не ссылке) есть операция "Изменить ссылку..."');
    Raise;
  end;
  if NOT IsPopupMenuItemExists(obj, 'Поставить ссылку...', false) then
  begin
    Log.Error('В контекстном меню к выделенному слову(не ссылке)нет операции "Поставить ссылку..."');
    Raise;
  end;
  if IsPopupMenuItemExists(obj, 'Перейти по гиперссылке', false) then
  begin
    Log.Error('В контекстном меню к выделенному слову(не ссылке) есть операция "Перейти по гиперссылке"');
    Raise;
  end;  
  if IsPopupMenuItemExists(obj, 'Удалить гиперссылку', true) then
  begin
    Log.Error('В контекстном меню к выделенному слову(не ссылке) есть операция "Удалить гиперссылку"');
    Raise;
  end;
  //Ставим новый комментарий и выделяем пустую строку
  PressKeyWithCheck(['[PageDown]']);
  PressKeyNCount('[Enter]', 4 );
  PressKeyNCount('[Up]', 2);
  PressKeyWithCheck(['![End]']);
  Sys.Keys('[Apps]');
  if IsPopupMenuItemExists(obj, 'Изменить ссылку...', false) then
  begin
    Log.Error('В контекстном меню к выделенному пустой строке есть операция "Изменить ссылку..."');
    Raise;
  end;
  if IsPopupMenuItemExists(obj, 'Поставить ссылку...', false) then
  begin
    Log.Error('В контекстном меню к выделенному пустой строке есть операция "Поставить ссылку..."');
    Raise;
  end;
  if IsPopupMenuItemExists(obj, 'Перейти по гиперссылке', false) then
  begin
    Log.Error('В контекстном меню к выделенному пустой строке есть операция "Перейти по гиперссылке"');
    Raise;
  end;  
  if IsPopupMenuItemExists(obj, 'Удалить гиперссылку', true) then
  begin
    Log.Error('В контекстном меню к выделенному пустой строке есть операция "Удалить гиперссылку"');
    Raise;
  end;  
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');
  result := true;
  DeleteAllInMyDoc;
except
  DeleteAllInMyDoc;  
  Log.Message( 'HLTC76_4_9_3_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  DeleteAllUserCommentsFromContents;
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
  HLTC76.4.10: Проверить, что при удалении закладок переход по ссылке, установленной на эту 
  закладку, осуществляется корректно.
}
function HLTC76_4_10_Execute (var  CurrentState: OleVariant): OleVariant;
const
  PREF = 'HLTC76_4_10';
  DOC_NUM_1 = 10003000;
  DOC_NUM_2 = 1055132;
  CONTEXT   = 'руководствуясь волей народов России и Белоруссии';
var
  obj;
  str;
begin
try
  if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT ClickOnContext(obj, CONTEXT) then Raise('Не удалось кликнуть по искомому контексту');
  if NOT SaveToFoldersExt('Мои документы', 'bookmark_' + PREF, '') then Raise('Не удалось сохранить запрос');
 
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N');
  if NOT InsertComment(obj, 'Комментарий') then Raise('Не удалось установить комментарий');
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'bookmark_' + PREF) then Raise('Не удалось поставить ссылку');
  
  if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N');
  if NOT DeleteObjectFromFolder(MY_DOCS_PATH + 'bookmark_' + PREF) then  Raise('Не удалось удалить закладку');  
    
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N');
  if NOT ClickNearIconOnSubInDocument(obj, 'КОММЕНТАРИЙ ПОЛЬЗОВАТЕЛЯ') then
    Raise('Не удалось кликнуть в докумнете возле иконки комментария');
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');      
  
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(CONTEXT + '*', str);
  if NOT result then
    Log.Error('Переход по ссылке на удалённую закладку произошёл не на эталонное место', str);

  if NOT OpenDocByNumber(DOC_NUM_1) then Log.Warning('Не удалось открыть документ по Alt+N');
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');  
  
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_10_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;

{
HLTC76.4: Простановка ссылки
 HLTC76.4.11: Проверить переход по истории после перехода по ссылкам:
  HLTC76.4.11.1: Зайти в Договор о создании союзного гос-ва, поставить две закладки: на начало и на середину
  документа, зайти в Конституцию, где-нибудь в середине документа сделать комментарий, в нем проставить две
  ссылки на закладки (начало и середину Договора), перейти по ссылке на середину документа и возвратиться
  назад по истории - попали в правильное место, туда, где находится комментарий, перейти по ссылке на начало
  документа и возвратиться назад по истории. Должны попасть не   в начало документа, а туда, где находился
  комментарий.  
}
function HLTC76_4_11_1_Execute (var  CurrentState: OleVariant): OleVariant;
const
  PREF = 'HLTC76_4_11_1';
  DOC_NUM_1 = 10003000;
  DOC_NUM_2 = 1055132;
  CONTEXT_1 = 'Статья 70';
  CONTEXT_2 = 'Статья 69';
  COMMENT   =  'HOME MIDDLE';
var
  obj;
  str;
  toolBar;
begin
try
  if NOT OpenDocByNumber(DOC_NUM_2) then Raise('Не удалось открыть документ по Alt+N');
  obj := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
  if NOT IsExists(obj) then Raise('Не удалось получить ТЕКСТ ДОКУМЕНТА');
  if NOT SaveToFoldersExt('Мои документы', 'home_' + PREF, '') then Raise('Не удалось сохранить запрос');
  
  if NOT ClickOnContext(obj, CONTEXT_2) then Raise('Не удалось кликнуть по искомому контексту');
  if NOT SaveToFoldersExt('Мои документы', 'middle_' + PREF, '') then Raise('Не удалось сохранить запрос');
  
  if NOT OpenDocByNumber(DOC_NUM_1) then Raise('Не удалось открыть документ по Alt+N');
  if NOT ClickOnContext(obj, CONTEXT_1) then Raise('Не удалось кликнуть по искомому контексту');
  if NOT InsertComment(obj, COMMENT) then Raise('Не удалось установить комментарий');
  Sys.Keys('[End]');
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'middle_' + PREF) then Raise('Не удалось поставить ссылку');
  Sys.Keys('[Home]');
  if NOT SetHyperLink(obj, MY_DOCS_PATH + 'home_' + PREF) then Raise('Не удалось поставить ссылку');
  Sys.Keys('[End]' + keyPause + '[Left]');
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');      
  
  toolBar := GetFromMainWindow('ТУЛБАР');
  if NOT IsExists(toolBar) then Raise('Не удалось получить ТУЛБАР');
  if NOT ClickToolBarButton(toolBar, 'Назад*') then 
    Raise('Не удалось кликнуть по кнопке на тулбаре');
    
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  if NOT StringCompare(str, COMMENT) then
  begin
    Log.Error('После возврата по истории попали не в эталонное место', str);
    Raise;
  end;
  Sys.Keys('[Home]');
  if NOT GoByHyperLink(obj) then Raise('Не удалось перейти по гиперссылке');  
  if NOT ClickToolBarButton(toolBar, 'Назад*') then Raise('Не удалось кликнуть по кнопке на тулбаре');
  str := CopyToClipBoard(obj, 'STRING', 'Trim:=true');
  result := StringCompare(str, COMMENT);
  if NOT result then
    Log.Error('После возврата по истории попали не в эталонное место', str);
  if DeleteAllUserCommentsFromContents < 1 then
    Log.Warning('Не было удалено ни одного комментария');  
  if NOT DeleteAllInMyDoc then                    
    Log.Warning('Не удалось удалить все объекты из моих документов');  
  GoToMainMenu;
except  
  Log.Message( 'HLTC76_4_11_1_Execute: ' + ExceptionMessage , '' , pmNormal, GetLogAttr('EXCEPTION'));
  result := false;
  CommonExceptionHandler;             
end;
end;
///////////////////////////////////////////////////////////////////////////////

procedure RykovTest76;
var cur;
begin
  gbl_F1ShellTabsEnabled := true;
//--19.07.06-----------------------------
  
 { Log.Message( HLTC76_1_1_1_Execute(cur)    );
  Log.Message( HLTC76_1_1_2_Execute(cur)    );
  Log.Message( HLTC76_1_1_3_Execute(cur)    );
  Log.Message( HLTC76_1_1_3_Execute(cur)    ); 
  Log.Message( HLTC76_1_1_4_Execute(cur)    );
  Log.Message( HLTC76_1_1_5_Execute(cur)    );
//--20.07.06-----------------------------
  Log.Message( HLTC76_1_1_7_Execute(cur)    );
  Log.Message( HLTC76_1_1_8_Execute(cur)    ); 
  Log.Message( HLTC76_1_1_9_Execute(cur)    );
  Log.Message( HLTC76_1_1_10_1_Execute(cur) );
  Log.Message( HLTC76_1_2_1_Execute(cur)    );
  Log.Message( HLTC76_1_2_2_Execute(cur)    );
  Log.Message( HLTC76_1_2_3_Execute(cur)    );
  Log.Message( HLTC76_1_2_4_Execute(cur)    );
  Log.Message( HLTC76_1_2_5_Execute(cur)    );
  //Log.Message( HLTC76_1_2_7_Execute(cur)    );
  Log.Message( HLTC76_1_2_8_Execute(cur)    );
  Log.Message( HLTC76_1_2_9_Execute(cur)    );
  Log.Message( HLTC76_1_3_Execute(cur)      );
  Log.Message( HLTC76_1_4_Execute(cur)      );  
  Log.Message( HLTC76_1_5_Execute(cur)      );  
//--21.07.06----------------------------- 
  Log.Message( HLTC76_2_3_1_Execute(cur)    );
  Log.Message( HLTC76_2_3_2_Execute(cur)    );
  Log.Message( HLTC76_2_4_1_Execute(cur)    );
  Log.Message( HLTC76_2_4_2_Execute(cur)    );
  Log.Message( HLTC76_2_5_Execute(cur)      );//Посмотреть и переделать
//--24.07.06-----------------------------
  Log.Message( HLTC76_2_6_1_Execute(cur)    );
  Log.Message( HLTC76_2_6_4_Execute(cur)    );
  Log.Message( HLTC76_2_6_6_Execute(cur)    );
  Log.Message( HLTC76_2_7_1_Execute(cur)    );
  Log.Message( HLTC76_2_7_2_Execute(cur)    );
  Log.Message( HLTC76_2_8_Execute(cur)      );
  Log.Message( HLTC76_2_9_Execute(cur)      );
  Log.Message( HLTC76_2_10_Execute(cur)     );
  Log.Message( HLTC76_3_1_Execute(cur)      ); 
  Log.Message( HLTC76_3_1_1_Execute(cur)    );  
  Log.Message( HLTC76_3_1_2_Execute(cur)    );
//--25.07.06-----------------------------   
  Log.Message( HLTC76_3_2_1_Execute(cur)    );
  Log.Message( HLTC76_3_2_2_Execute(cur)    );
  Log.Message( HLTC76_3_5_Execute(cur)      );
  Log.Message( HLTC76_3_7_1_Execute(cur)    );
  Log.Message( HLTC76_3_7_2_Execute(cur)    ); 
  Log.Message( HLTC76_3_7_2_Execute(cur)    );
  Log.Message( HLTC76_3_7_3_Execute(cur)    );
  Log.Message( HLTC76_3_7_4_1_Execute(cur)  );
  Log.Message( HLTC76_3_7_4_2_Execute(cur)  );
//--26.07.06-----------------------------
  Log.Message( HLTC76_3_8_1_Execute(cur)    );
  Log.Message( HLTC76_3_8_2_Execute(cur)    );
  Log.Message( HLTC76_3_8_3_Execute(cur)    );
  Log.Message( HLTC76_3_9_1_Execute(cur)    );
  Log.Message( HLTC76_3_10_1_1_Execute(cur) );
  Log.Message( HLTC76_3_10_1_2_Execute(cur) );
  Log.Message( HLTC76_3_10_2_1_Execute(cur) );
  Log.Message( HLTC76_3_10_2_2_Execute(cur) );
  Log.Message( HLTC76_3_11_1_Execute(cur)   );
  Log.Message( HLTC76_3_11_2_Execute(cur)   );
//--27.07.06----------------------------- 
  Log.Message( HLTC76_4_1_1_Execute(cur)    );
  Log.Message( HLTC76_4_1_2_Execute(cur)    ); 
  Log.Message( HLTC76_4_1_3_Execute(cur)    );
  Log.Message( HLTC76_4_1_4_Execute(cur)    );
  Log.Message( HLTC76_4_2_1_Execute(cur)    );
  Log.Message( HLTC76_4_2_3_Execute(cur)    );
  Log.Message( HLTC76_4_3_1_Execute(cur)    );
  Log.Message( HLTC76_4_3_2_1_Execute(cur)  );
  Log.Message( HLTC76_4_3_2_2_Execute(cur)  );
{//--28.07.06-----------------------------   
  Log.Message( HLTC76_5_1_1_Execute(cur)    );
  Log.Message( HLTC76_5_1_2_1_Execute(cur)  );
  Log.Message( HLTC76_5_1_2_2_Execute(cur)  ); 
  Log.Message( HLTC76_5_1_2_3_Execute(cur)  );
  Log.Message( HLTC76_5_1_2_4_Execute(cur)  );
  Log.Message( HLTC76_5_1_3_Execute(cur)    );
  Log.Message( HLTC76_5_2_1_Execute(cur)    );
  Log.Message( HLTC76_5_2_2_Execute(cur)    );
  Log.Message( HLTC76_5_2_3_Execute(cur)    );
  Log.Message( HLTC76_5_2_4_Execute(cur)    );
  Log.Message( HLTC76_5_2_5_Execute(cur)    );
  Log.Message( HLTC76_5_2_6_Execute(cur)    ); 
//--31.07.06-----------------------------
  Log.Message( HLTC76_6_1_Execute(cur)      );
  Log.Message( HLTC76_6_2_1_Execute(cur)    );  
  Log.Message( HLTC76_6_2_2_1_Execute(cur)  ); 
  Log.Message( HLTC76_6_2_2_2_Execute(cur)  );
  Log.Message( HLTC76_6_2_2_3_Execute(cur)  );
  Log.Message( HLTC76_6_2_3_1_Execute(cur)  );  
  Log.Message( HLTC76_6_2_3_2_Execute(cur)  );
  Log.Message( HLTC76_6_2_3_3_Execute(cur)  ); 
//--2.08.06-----------------------------       
  Log.Message( HLTC76_6_2_3_4_Execute(cur)  );
  Log.Message( HLTC76_6_2_4_Execute(cur)    );  
  Log.Message( HLTC76_3_15_1_Execute(cur)   );
  Log.Message( HLTC76_3_16_1_Execute(cur)   );
{//--4.08.06-----------------------------     }
  Log.Message( HLTC76_3_17_Execute(cur)     );//Переделать
  {Log.Message( HLTC76_4_4_1_Execute(cur)    );
  Log.Message( HLTC76_4_4_2_Execute(cur)    ); 
  Log.Message( HLTC76_4_4_3_Execute(cur)    );
  Log.Message( HLTC76_4_7_Execute(cur)      );
  Log.Message( HLTC76_4_8_Execute(cur)      );
//--22.08.06-----------------------------    
  Log.Message( HLTC76_4_5_Execute(cur)      );
  Log.Message( HLTC76_4_6_Execute(cur)      );
  Log.Message( HLTC76_4_10_Execute(cur)     ); 
  Log.Message( HLTC76_4_11_1_Execute(cur)   );}
//--5.09.06-----------------------------
      
  //Log.Message( HLTC76_4_9_3_Execute(cur)    ); 
  
end;
