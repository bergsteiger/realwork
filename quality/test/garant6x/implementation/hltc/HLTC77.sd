//////////////////////////////////////////////////////////////////////////////
//  Набор тест-кейсов
//  HLTC 77 ПОИСК
//////////////////////////////////////////////////////////////////////////////

uses SettingsWork, States, Clicks, common, DocumentWork, FileWork, FoldersWork, ListWork, 
MenuWork, RunPrograms, SearchWork;

//////////////////////////////////////////////////////////////////////////////
{
HLTC77.1.2 Поиск по ситуации 
	HLTC77.1.2.1 «Авизо»
    HLTC77.1.2.1.1 В тестовой базе:
      Соглашение о мерах по обеспечению улучшения расчетов между хозяйственными организациями стран-участниц Содружества Независимых Государств (Ташкент, 15 мая 1992 г.). Переход на «Статью 4»
}
function HLTC77_1_2_1_1_Execute(var  current_state: OleVariant): OleVariant;
var
  i, w;
  listTree;
  ppsData: array[0..0] of string;
	listArray: array [0..0] of String;
begin
	Result := false;
  ppsData[0] := 'Авария общая';
  listArray[0] := 'Кодекс торгового мореплавания Российской Федерации от 30 апреля 1999 г. N 81-ФЗ (с изм. и доп. от 26 мая 2001 г.)';

  if SearchInPPS(ppsData) then
  begin
    listTree := GetList;
    listTree.SetFocus;
    Result := CompareArray(GetElementsFromTree(listTree), listArray)
              and Position_Internal(listTree, listArray[0] + '\Статья 419');
    if not Result then
    	Log.Error('Результат ППС не корректен!');
  end
  else
   	Log.Error('Невозможно осуществить поиск в ППС');

  GoToMainMenu;
end;

{
HLTC77.1.2 Поиск по ситуации 
  HLTC77.1.2.2 «Акции»\«акции организаций газоснабжения»
  	Результат: 1-ин документ с 2-мя вхождениями
   Федеральный закон от 31 марта 1999 г. N 69-ФЗ "О газоснабжении в Российской Федерации"
   Статья 15
   Часть Третья Статьи 7 
}
function HLTC77_1_2_2_Execute(var  current_state: OleVariant): OleVariant;
var
  ppsData, docName, docsName;    
begin
  try	
    Result := true;

    ppsData := ['Акции\акции*организаций*газоснабжения'];

    docName := 'Федеральный закон от 31 марта 1999 г. N 69-ФЗ*';
    docsName := 
    [
      ([FL_EXISTS_INT, docName + '\*Часть Третья Статьи 7']),
      ([FL_EXISTS_INT, docName + '\Статья 15'])
    ];

    if not SearchInPPS(ppsData) then
    	Raise('Не получилось выполнить поиск ППС');
    if not FindInList(docsName) then
    	Raise('Список неверен, видимо вхождения в списке или внутри документа не соответсвует ожидаемым.');
  except
    Result := False;
    Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  end;
  GoToMainMenu;
end;

{
HLTC77.1.2 Поиск по ситуации 
  HLTC77.1.2.4: Банк»/«Банковские идентификационные коды (БИК)»
  	Результат:
    HLTC77.1.2.4.1: В тестовой базе:
    Справочник банковских идентификационных кодов участников расчетов на территории Российской Федерации ("Справочник БИК РФ") по состоянию на 1 марта 2002 г
}    
function HLTC77_1_2_4_1_Execute(var  current_state: OleVariant): OleVariant;
var
  i, w;
  listTree;
  ppsData: array[0..0] of string;
	listArray: array [0..0] of String;
begin
	Result := false;
  ppsData[0] := 'Банк\банковские идентификационные коды (БИК)';
  listArray[0] := 'Справочник банковских идентификационных кодов участников расчетов на территории Российской Федерации ("Справочник БИК РФ") по состоянию на 1 марта 2002 г.';

  if SearchInPPS(ppsData) then
  begin
    listTree := GetList;
    listTree.SetFocus;             
    Result := CompareArray(GetElementsFromTree(listTree), listArray);
    if not Result then
    	Log.Error('Результат ППС не верен!');
  end
  else
   	Log.Error('Невозможно осуществить поиск в ППС');

  GoToMainMenu;
end;

{
HLTC77.1.6: Поиск по классификатору
  HLTC77.1.6.1: Поиск 1: 
    Правовой навигатор\Основы государственно-правового устройства\Столицы и административные центры
  Результат: 
    Постановление Правительства РФ от 29 мая 1999 г. N 574...
}
function  HLTC77_1_6_1_Execute(var  current_state: OleVariant): OleVariant;
const
	LISTPATH1 = 'Правовой навигатор\Основы государственно-правового устройства\Столицы и административные центры';
  DOCNAME = '*Постановление Правительства РФ от 29 мая 1999 г. N 574*С.Степашин*';
var
  rubricatorTree;
  docText;
  w;
begin
	Result := false;
  rubricatorTree:= OpenMenuTab;
	if common.Position_Internal(rubricatorTree, LISTPATH1) then
	begin
  	Sys.Keys('[Enter]');
    w := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
    docText := CopyToClipboard(w, 'ALL');
		Result := IsExists(w) and w.Visible and StringCompare(DOCNAME, docText);
    if not Result then
    	Log.Error('Открывается несоответствующий документ!', docText);
  end
  else
  	Log.Error('Невозможно открыть рубрикатор "' + LISTPATH1 + '"');
    
  CollapseTreeInNavigator(LISTPATH1);    
  GoToMainMenu;
end;

{
HLTC77.1.6.2: Поиск 2
  Правовой навигатор\Законодательство об обороне\Социальная защита военнослужащих и членов их семей\Право на трудоустройство
  Результат: 
    Соглашение о санаторно-курортном лечении и организованном отдыхе военнослужащих и членов их семей государств - участников Содружества Независимых Государств (Минск, 4 июня 1999 г.)
}
function  HLTC77_1_6_2_Execute(var  current_state: OleVariant): OleVariant;
const
	LISTPATH1 = 'Правовой навигатор\Законодательство об обороне\Социальная защита военнослужащих и членов их семей\Право на трудоустройство';
  DOCNAME = '*Соглашение*военнослужащих*(Минск, 4 июня 1999 г.)';
var
  rubricatorTree;
  docText;
  w;
begin
	Result := false;
  rubricatorTree:= OpenMenuTab;
	if common.Position_Internal(rubricatorTree, LISTPATH1) then
	begin
  	Sys.Keys('[Enter]');
    w := GetFromEditor('ТЕКСТ ДОКУМЕНТА');
    docText := CopyToClipboard(w, 'ALL');
		Result := IsExists(w) and w.Visible and StringCompare(DOCNAME + '*', docText);
    if not Result then
    	Log.Error('Открывается несоответствующий документ!', docText);
  end
  else
  	Log.Error('Невозможно открыть рубрикатор "' + LISTPATH1 + '"');

  CollapseTreeInNavigator(LISTPATH1);
  GoToMainMenu;
end;

{
HLTC77.1.6: Поиск по классификатору
HLTC77.1.6.3: Поиск 3
  Банковская деятельность – Расчеты – Безналичные расчеты
}                     
function  HLTC77_1_6_3_Execute(var  current_state: OleVariant): OleVariant; 
var
  rubricatorTree, listTree;
	listArray;  
  LISTPATH1;
begin
	LISTPATH1 := PNAV + '\Банковская деятельность\Расчеты\Безналичные расчеты';
	Result := false;
  listArray := [
                'Федеральный закон от 8 января 1998 г. N 2-ФЗ "Транспортный устав железных дорог Российской Федерации"',
                'Циркулярное письмо Госстроя РФ от 15 ноября 1999 г. N ЛЧ-12-12/762 "О безакцептном списании средств со счетов потребителей за потребленные энергетические ресурсы"',
                'Постановление Президиума Высшего Арбитражного Суда РФ от 9 января 1997 г. N 4991/96 Взыскание с должника процентов за пользование чужими денежными средствами в связи с невыделением бюджетных средств, поступающих на счет ответчика целевым назначением для расчетов c истцом-подрядчиком, признано неправильным',
                'Новые таблицы и формулы. Указание ЦБР от 16 января 2004 г. N 1376-У "О перечне, формах и порядке составления и представления форм отчетности кредитных организаций в Центральный банк Российской Федерации" (с изменениями и дополнениями) (утратило силу)',
                'Указание ЦБР от 16 января 2004 г. N 1376-У "О перечне, формах и порядке составления и представления форм отчетности кредитных организаций в Центральный банк Российской Федерации" (с изменениями и дополнениями)',
                'Решение Совета Евразийской экономической комиссии от 16 июля 2012 г. N 54*',
                'Домашняя правовая энциклопедия. Дом (жилище) (подготовлено экспертами компании "Гарант")',
                'Положение об организации расчетов между банками разных республик (приложение 2 к Положению о безналичных расчетах в Российской Федерации от 9 июля 1992 г.) (утратило силу)',
                'Телеграмма ЦБР от 6 августа 1992 г. N 172-92 О расчетах по взаимным поставкам товаров между государствами-бывшими республиками СССР (утратила силу)'
                ];
 
  rubricatorTree:= OpenMenuTab;
	if common.Position_Internal(rubricatorTree, LISTPATH1) then
	begin
    Sys.Keys('[Enter]');
    listTree := GetList;
    listTree.SetFocus;             
    Result := CompareArray(listArray, GetElementsFromTree(listTree), true, true);
    if not Result then
    	Log.Error('Открывается несоответствующий список при переходе по классификатору!');
  end
  else
  	Log.Error('Невозможно открыть рубрикатор "' + LISTPATH1 + '"');

  CollapseTreeInNavigator(LISTPATH1);
  GoToMainMenu;
end;
 
{
  HLTC77.1.10.1: Контексты со «*»:
    HLTC77.1.10.1.1 : "констит*", результат – не меньше 530 документов.
}
function  HLTC77_1_10_1_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
  Result := false;
  GoToMainMenu;

  docsName := 
    [
      ([FL_NUMBER_BIG_MORE, '530'])
    ];
  if SearchInPPR( [CARD_PPR, ([ ([FD_WORDS_IN_TEXT, (['констит*']) ]) ]) ]) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');

  GoToMainMenu;
end;

{
  HLTC77.1.10.1.2: "1234567890*", результат – 2 документа (первый со вхождением)
}
function  HLTC77_1_10_1_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
  Result := false;
  GoToMainMenu;

  docsName := 
    [
      ([FL_NUMBER_BIG, '2']),
      ([FL_EXISTS_INT, 'ДОКУМЕНТ 2002*\BLOCK 300*'])
    ];
  if BaseSearch(nil, '1234567890*') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска БП не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск БП');

  GoToMainMenu;
end;

{
  HLTC77.1.10.1.3: «ах*», результат – 11 документ
}
function  HLTC77_1_10_1_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
  Result := false;
  GoToMainMenu;

  docsName := 
    [
      ([FL_NUMBER_BIG, '11'])  // gen: http://mdp.garant.ru/pages/viewpage.action?pageId=557862275&focusedCommentId=562606109#comment-562606109
    ];
  if SearchInPPR( [CARD_PPR, ([ ([FD_WORDS_IN_TEXT, (['ах*']) ]) ]) ]) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');

  GoToMainMenu;
end;

{
  HLTC77.1.10.2: Поиск <число>.<число>
    1. В ОМ в БП вбиваем контекст: 1.1
    2. Заходим в первый нашедшийся документ
    3. Ищем в документе тот же контекст
    Должен найтись хотя бы один.
}
function  HLTC77_1_10_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
  Result := false;
  GoToMainMenu;

  docsName := 
    [
      ([FL_EXISTS_CONTEXT_SEARCH, 'Кодекс Российской Федерации об административных правонарушениях*', (['1.1'])]),
      ([FL_EXISTS_CONTEXT_SEARCH, 'Методическое пособие по организации деятельности*', (['1.1'])])
    ];
  if BaseSearch(nil, '1.1') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска БП не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск БП');

  GoToMainMenu;
end;

{
HLTC77.1 Проверка поисков 
  Для конкретной базы проверить совпадение результатов поиска
  HLTC77.1.1 Поиск по реквизитам 
    HLTC77.1.1.1 Тип = & Приказ & Рекомендации
    Номер = 149
    Дата принятия С и По- 28.06.2000 
    Вид правовой информации - Акты органов власти
    Территория - РФ
    Орган – Федеральные министерства и ведомства\Госстрой России
    Разделы: Гражданское законодательство, приватизация\Обязательственное право, договоры\Страхование\Добровольное страхование\Имущественное страхование
    Контекст: «ЖКХ»
  Результат:
    Приказ Госстроя РФ от 28 июня 2000 г. N 149 "Об утверждении Рекомендаций по дальнейшему развитию страхования в жилищно-коммунальном комплексе"
}
function  HLTC77_1_1_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, resArray;
  listTree;	listArray;    
begin
	Result := false;
  listArray := 
  [
    'Приказ Госстроя РФ от 28 июня 2000 г. N 149 "Об утверждении Рекомендаций по дальнейшему развитию страхования в жилищно-коммунальном комплексе"'
  ];

  cardData := [
  	CARD_PPR, ([([
  	FD_WORDS_IN_TEXT, ([
  		'ЖКХ']) ]),([
  	FD_TYPE, ([
  		'[И]Приказ',
  		'[И]Рекомендации']) ]),([
  	FD_SOURCE, ([
  		'[ИЛИ]Федеральные министерства и ведомства\Госстрой России']) ]),([
  	FD_THEME, ([
  		'[ИЛИ]Гражданское законодательство, приватизация\Обязательственное право, договоры\Страхование\Добровольное страхование\Имущественное страхование']) ]),([
  	FD_ACCEPTANCE_DATE_FROM, ([
  		'28.06.2000']) ]),([
  	FD_ACCEPTANCE_DATE_TO, ([
  		'28.06.2000']) ]),([
  	FD_NUMBER, ([
  		'149']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]),([
  	FD_KIND_OF_INFORMATION, ([
  		'[ИЛИ]Акты органов власти']) ]),([
  	FD_REGULATION_TERRITORY, ([
  		'[ИЛИ]Российская Федерация']) ]) ]) 
  ];
  if SearchInPPR(cardData) then
  begin
    listTree := GetList;
    listTree.SetFocus;
    resArray := GetElementsFromTree(listTree);
    Result := CompareArray(resArray, listArray);
    if not Result then
    	Log.Error('Результат ППР не верен, см. результирующий список', Array2String(resArray, EndOfLine));
  end
  else
    Log.Error('Не получилось произвести ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.2 Тип: Нормативно-техническая документация КРОМЕ Акт
  Дата: с 05.03.99 по 05.06.99
  Результат: список из 9 документов, среди которых нет «Строительные нормы и правила СНиП 12-03-99 "Безопасность труда в строительстве. Часть 1. Общие требования" (утв. Постановлением Госстроя РФ от 25 мая 1999 г. N 40) (с изм. и доп. от 26 октября 2000 г.) (не действуют)». Этот документ имеет дату 25.05.1999 и оба типа на Sub
}
function  HLTC77_1_1_2_Execute(var  current_state: OleVariant): OleVariant;
const
  DOCNAME = 'Строительные нормы и правила СНиП 12-03-99 "Безопасность труда в строительстве. Часть 1. Общие требования" (утв. Постановлением Госстроя РФ от 25 мая 1999 г. N 40) (с изм. и доп. от 26 октября 2000 г.) (не действуют)';
var
  cardData, resArray;
  listTree;
begin
	Result := False;

  cardData := 
    [
  	CARD_PPR, ([([
  	FD_TYPE, ([
  		'[ИЛИ]Нормативно-техническая документация',
  		'[КРОМЕ]Акт']) ]),([
  	FD_ACCEPTANCE_DATE_FROM, ([
  		'05.03.1999']) ]),([
  	FD_ACCEPTANCE_DATE_TO, ([
  		'05.06.1999']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    listTree := GetList;
    listTree.SetFocus;
    resArray := GetElementsFromTree(listTree);
    Result := (ArrayLength(resArray) = 9) and (not FindElement(resArray, DOCNAME));
    if not Result then
    	Log.Error('Результат ППР не верен, в списке присутствует "' + DOCNAME + 
       '" см. результирующий список', Array2String(resArray, EndOfLine));
  end
  else
    Log.Error('Не получилось произвести ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.3 
  Номер: 01-04-147
  Результат: 
  Письмо Минстроя РФ и Минобороны РФ от 9 сентября 1996 г., 23 января 1997 г. NN 01-04-147, 3/773 «О лицензировании деятельности по эксплуатации инженерных систем городов и населенных пунктов» 
}
function  HLTC77_1_1_3_Execute(var  current_state: OleVariant): OleVariant;
const
  DOCNAME = 'Письмо Минстроя РФ и Минобороны РФ от 9 сентября 1996 г., 23 января 1997 г. NN 01-04-147, 3/773 О лицензировании деятельности по эксплуатации инженерных систем городов и населенных пунктов';
var
  cardData, resArray;
  listTree;
begin
	Result := False;

  cardData := 
    [
  	CARD_PPR, ([([
  	FD_NUMBER, ([
  		'01-04-147']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    listTree := GetList;
    listTree.SetFocus;
    resArray := GetElementsFromTree(listTree);
    Result := (ArrayLength(resArray) = 1) and (FindElement(resArray, DOCNAME));
    if not Result then
    	Log.Error('Результат ППР не верен, в списке НЕ присутствует "' + DOCNAME + 
       '" см. результирующий список', Array2String(resArray, EndOfLine));
  end
  else
    Log.Error('Не получилось произвести ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.4 Орган: Центральная избирательная комиссия России
  Раздел: Основы государственно-правового устройства
  Результат: 
HLTC77.1.1.4.1 В тестовой базе:
  Обращение Председателей Центральной комиссии Республики Беларусь по выборам и проведению республиканских референдумов, Центральной избирательной комиссии Республики Казахстан, Центральной комиссии по выборам и проведению референдумов Кыргызской Республики, Центральной избирательной комиссии Российской Федерации 
}
function  HLTC77_1_1_4_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
	Result := False;

  docsName := 
    [    
    ([FL_NUMBER, '2']),
    ([FL_EXISTS, 'Документ 2018*']),
    ([FL_EXISTS, 'Обращение Председателей Центральной комиссии Республики Беларусь по выборам*'])
    ];
  cardData := 
    [
  	CARD_PPR, ([([
  	FD_SOURCE, ([
      '[ИЛИ]ЦИК России (Центральная избирательная комиссия РФ)']) ]),([
  	FD_THEME, ([
  		'[ИЛИ]Основы государственно-правового устройства']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];
    
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
    
  GoToMainMenu;
end;

{
HLTC77.1.1.5 Пустая КЗ
  Построить список по пустой КЗ.
  Убедиться, что нет ошибок, и нашлось порядка 13 000 документов. 
}
function  HLTC77_1_1_5_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
	Result := false;

  docsName :=
    [
      ([FL_NUMBER_BIG_MORE, '13000'])
    ];
  cardData :=
    [
    	CARD_PPR, ([([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ]) ])
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось выполнить поиск ППР для списка всех документов');
    
  GoToMainMenu;
end;

{
HLTC77.1.1.14 Тип: Нормативно-техническая документация КРОМЕ МДС
  Дата: с 05.03.99 по 05.06.99
  Результат: список из 5 документов, среди которых НЕТ: 
    Рекомендации по деятельности Управляющего проектом при разработке и реализации проектной и рабочей документации на строительство предприятий, зданий и сооружений МДС 11-2.99 (утв. письмом Госстроя РФ от 10 июня 1999 г. N ЛБ-1992/5)
    Методические рекомендации по проведению экспертизы материалов инженерных изысканий для технико-экономических обоснований (проектов, рабочих проектов) строительства объектов.
HLTC77.2.1.19: Проверить, что в качестве поисковых атрибутов из комбобоксов можно выбирать как листьевые, так и не лисьтьевые (ветви) элементы. 
  Т.е можно выбрать в качестве типа как «Форма документа\Акт», так и всю ветку «Форма документа»     
}
function  HLTC77_1_1_14_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
	Result := False;

  docsName :=
    [    
    ([FL_NUMBER, '5']),
    ([FL_NOT_EXISTS, 'Рекомендации по деятельности Управляющего проектом при разработке и реализации проектной и рабочей документации на строительство предприятий, зданий и сооружений МДС 11-2.99 (утв. письмом Госстроя РФ от 10 июня 1999 г. N ЛБ-1992/5)']),
    ([FL_NOT_EXISTS, 'Методические рекомендации по проведению экспертизы материалов инженерных изысканий для технико-экономических обоснований (проектов, рабочих проектов) строительства объектов.'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_TYPE, ([
    		'[ИЛИ]Нормативно-техническая документация',
    		'[КРОМЕ]МДС']) ]),([
    	FD_ACCEPTANCE_DATE_FROM, ([
    		'05.03.1999']) ]),([
    	FD_ACCEPTANCE_DATE_TO, ([
    		'05.06.1999']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1 Проверка поисков 
    HLTC77.1.1.16 Тип =  Выписка & Приказ
Искать в недействующих редакциях = Да
Результат:

Документ 8902001 (первоначальная)
· Документ 8902000
    · Редакции
        · первоначальная
 }
function  HLTC77_1_1_16_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
	Result := False;
  docsName := 
    [    
    ([FL_NUMBER_BIG, '2']),
    ([FL_EXISTS_INT, 'Документ 8902000\Редакции\*первоначальная*'])
    ];
  //
  cardData := [
  	CARD_PPR, ([([
  	FD_TYPE, ([
  		'[ИЛИ]Выписка',
  		'[И]Приказ']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;


{HLTC77.1 Проверка поисков 
HLTC77.1.1.17 Орган = Президент России и СССР
Тип = Выписка
Раздел = Основы государственно-правового устройства\Основы конституционного строя
Искать в недействующих редакциях = Да
В списке помимо прочих должны быть:
Документ с нормальной цепочкой редакций. ACTIVE 21/04/2003
--- вхождение 1
--- 3 редакции

Документ 8902000
--- вхождение 1
--- одна редакция 
}
function  HLTC77_1_1_17_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
	Result := false;
  docsName := 
    [    
      ([FL_EXISTS_INT, 'Документ 8902000*\*Вхождение 1']),
      ([FL_EXISTS_INT, 'Документ 8902000*\Редакции\*первоначальная*']),
      ([FL_EXISTS_INT, 'Документ с нормальной цепочкой редакций. ACTIVE 21/04/2003*\*Вхождение 1']),
      ([FL_EXISTS_INT, 'Документ с нормальной цепочкой редакций. ACTIVE 21/04/2003*\Редакции\*будет*']),
      ([FL_EXISTS_INT, 'Документ с нормальной цепочкой редакций. ACTIVE 21/04/2003*\Редакции\*01.01.2020*']),
      ([FL_EXISTS_INT, 'Документ с нормальной цепочкой редакций. ACTIVE 21/04/2003*\Редакции\*01.04.2003*'])
    ];
  cardData := 
    [
  	CARD_PPR, ([([
  	FD_TYPE, ([
  		'[ИЛИ]Выписка']) ]),([
  	FD_SOURCE, ([
  		'[ИЛИ]Президент России и СССР']) ]),([
  	FD_THEME, ([
  		'[ИЛИ]Основы государственно-правового устройства\Основы конституционного строя']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.18 Тип = Выписка ИЛИ Положение
Раздел = И Международное право, международные отношения\Международные споры\ТПП РФ
Искать в недействующих редакциях = Да
 Результат:

 Документ 2007 из сегмента 21 и 22 (Налоги, бухучет, предпринимательство. Москва и Архивы ГАРАНТа. Москва). Старая редакция. (первоначальная)
}
function  HLTC77_1_1_18_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [    
    ([FL_NUMBER, '1']),
    ([FL_EXISTS_INT, 'Документ 2007 из сегмента 21 и 22*\Редакции\*первоначальная*\*Это начало блока 10'])
    ];
  cardData := 
    [
  	CARD_PPR, ([([
  	FD_TYPE, ([
  		'[ИЛИ]Выписка',
  		'[ИЛИ]Положение']) ]),([
  	FD_THEME, ([
  		'[И]Международное право, международные отношения\Международные споры\ТПП РФ']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.19 
Тип = Положение
Раздел = Основы государственно-правового устройства\Основы конституционного строя И Международное право\Международные споры\ТПП РФ
Значимость = Общие
Территория = РФ
Вид правовой информации = Акты органов власти
Искать в недействующих редакциях = Да
Результат:
 Документ 2007 из сегмента 21 и 22 (Налоги, бухучет, предпринимательство. Москва и Архивы ГАРАНТа. Москва). Старая редакция. (первоначальная)
}
function  HLTC77_1_1_19_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS_INT, 'Документ 2007 из сегмента 21 и 22 (Налоги, бухучет, предпринимательство. Москва и Архивы ГАРАНТа. Москва)\Редакции\*первоначальная*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_TYPE, ([
    		'[ИЛИ]Положение']) ]),([
    	FD_THEME, ([
    		'[ИЛИ]Основы государственно-правового устройства\Основы конституционного строя',
    		'[И]Международное право, международные отношения\Международные споры\ТПП РФ']) ]),([
    	FD_MEANING, ([
    		'Общие']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]),([
    	FD_KIND_OF_INFORMATION, ([
    		'[ИЛИ]Акты органов власти']) ]),([
    	FD_REGULATION_TERRITORY, ([
    		'[ИЛИ]Российская Федерация']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.20 Номер = 8903001 ИЛИ 8905000
Искать в недействующих редакциях = Да
Результат:
 Документ 8903001. Старая редакция документа 8908903000 (первоначальная)
 Документ 8905000. Verlink на топик 5001 с несколькими периодами активности
 Документ 8905001. (первоначальная)
}
function  HLTC77_1_1_20_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '2']),
    ([FL_EXISTS_INT, 'Документ 8903000. У него 2 verlink на разные (существующие) топики\Редакции\*первоначальная*']),
    ([FL_EXISTS_INT, 'Документ 8905000. Verlink на топик 5001*\*Вхождение 1']),
    ([FL_EXISTS_INT, 'Документ 8905000. Verlink на топик 5001*\*Редакции\*первоначальная*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_NUMBER, ([
    		'8903001',
    		'8905000']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.21 Номер = 8903001 ИЛИ 8905000
Дата = с 03.03.2003 по 31.03.2003
Искать в недействующих редакциях = Да
Результат:

 Документ 8905001. (первоначальная)
 
}
function  HLTC77_1_1_21_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [    
    ([FL_NUMBER, '1']),
    ([FL_EXISTS_INT, 'Документ 8905000. Verlink на топик 5001 с несколькими периодами активности\Редакции\*первоначальная*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_ACCEPTANCE_DATE_FROM, ([
    		'03.03.2003']) ]),([
    	FD_ACCEPTANCE_DATE_TO, ([
    		'31.03.2003']) ]),([
    	FD_NUMBER, ([
    		'8903001',
    		'8905000']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;


{
HLTC77.1.1.22 Дата регистрации в МЮ = 10.04.2003
Номер регистрации в МЮ = 8902001
Результат: 8902001
Искать в недействующих редакциях = Да
Результат:

 Документ 8902001 (первоначальная)
 
HLTC77.2.1.16.2.1: Дата регистрации
}
function  HLTC77_1_1_22_Execute(var   current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [    
    ([FL_NUMBER, '1']),
    ([FL_EXISTS_INT, 'Документ 8902000\Редакции\*первоначальная*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_MU_REG_DATE_FROM, ([
    		'10.04.2003']) ]),([
    	FD_MU_REG_DATE_TO, ([
    		'10.04.2003']) ]),([
    	FD_MU_REG_NUMBER, ([
    		'8902001']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.23 Номер = 123*. Проверить, что после «*» ничего вводить нельзя. 
Провести поиск. Результат: найден 23 документ.
}
function  HLTC77_1_1_23_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, cardDataIncorrect;
begin
  Result := False;
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_NUMBER, ([
    		'123*']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if PositionInPPR(FD_NUMBER) then
  begin                                                            //после «*» ничего не должно вводиться
    Result := not FillField(GetFromPPR('КАРТОЧКА ЗАПРОСА'), [FD_NUMBER, (['123*asfцфмьз3'])]);
    if not Result then
      Log.Error('Ввелись символы после "*", хотя ничего вводиться не должно.'); 
  end
  else
    Log.Error('Не получилось спозиционироваться на поле Номер');
  if SearchInPPR(cardData) then
  begin
    if not FindInList( [([FL_NUMBER_BIG, '23'])] ) then
      Result := ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось выполнить поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24: Поиск по контексту (со словоформами)
HLTC77.1.1.24.1: Ввести в ППР контекст = "АБАЯ" (без кавычек). Провести поиск  и построить список. Проверить правильность списка (см. ниже) и проверить, что в каждом документе списка подсвечен соответствующий контекст. 
Результат:
HLTC77.1.1.24.1.1: В тестовой базе:
Письмо ГТК РФ от 13 февраля 1996 г. N 01-15/2480 "О временном положении о доставке и транзите товаров"
Письмо ГТК РФ от 14 октября 1998 г. N 22-05/7678 Список адресов таможенных органов и служебных телефонов должностных лиц таможенных органов Республики Казахстан
Строительные нормы и правила СНиП II-7-81* "Строительство в сейсмических районах" (утв. постановлением Госстроя СССР от 15 июня 1981 г. N 94) (с изм. и доп. от 3 июня 1987 г., 16 августа 1989 г., 26 июля 1995 г., 28 июля 1997 г., 27 декабря 1999 г., 3 июня 1987 г.)
Письмо Высшего Арбитражного Суда РФ от 28 октября 1994 г. N ОМ-328 "О реквизитах судебно-арбитражных органов Армении, Казахстана, Узбекистана и Киргизии и новых ставках государственной пошлины в Киргизии"
Письмо ГТК РФ от 1 июня 1999 г. N 03-10/15634 "О классификаторе таможенных органов и их структурных подразделений" (с изм. и доп. от 10 ноября 1999 г.) (утратило силу)
Письмо ГТК РФ от 22 января 1999 г. N 03-10/1596 "О классификаторе таможенных органов и их структурных подразделений" (утратило силу)
Письмо ГТК РФ от 16 апреля 1998 г. N 07-10/7793 Образцы оттисков печатей и подписей должностных лиц ТПП Республики Казахстан (утратило силу)
}
function  HLTC77_1_1_24_1_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '8']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 13 февраля 1996 г. N 01-15/2480 "О временном положении о доставке и транзите товаров"']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 14 октября 1998 г. N 22-05/7678 Список адресов таможенных органов и служебных телефонов должностных лиц таможенных органов Республики Казахстан']),
    ([FL_EXISTS, 'Строительные нормы и правила СНиП II-7-81* "Строительство в сейсмических районах" (утв. постановлением Госстроя СССР от 15 июня 1981 г. N 94) (с изм. и доп. от 3 июня 1987 г., 16 августа 1989 г., 26 июля 1995 г., 28 июля 1997 г., 27 декабря 1999 г., 3 июня 1987 г.)']),
    ([FL_EXISTS, 'Письмо Высшего Арбитражного Суда РФ от 28 октября 1994 г. N ОМ-328 "О реквизитах судебно-арбитражных органов Армении, Казахстана, Узбекистана и Киргизии и новых ставках государственной пошлины в Киргизии"']),
    ([FL_EXISTS, 'Решение Совета Евразийской экономической комиссии от 16 июля 2012 г. N 54*']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 1 июня 1999 г. N 03-10/15634 "О классификаторе таможенных органов и их структурных подразделений" (с изм. и доп. от 10 ноября 1999 г.) (утратило силу)']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 22 января 1999 г. N 03-10/1596 "О классификаторе таможенных органов и их структурных подразделений" (утратило силу)']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 16 апреля 1998 г. N 07-10/7793 Образцы оттисков печатей и подписей должностных лиц ТПП Республики Казахстан (утратило силу)'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'АБАЯ']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.2: Ввести в ППР контекст = "АБУ" (без кавычек).
    HLTC77.1.1.24.2.1: В тестовой базе 6 документов...
}
function  HLTC77_1_1_24_2_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '6']),
    ([FL_EXISTS, 'Приказ МИД РФ от 10 июня 2008 г. N 7203*']),    
    ([FL_EXISTS, 'Список кредитных организаций*']),
    ([FL_EXISTS, 'Соглашение между Правительством Российской Федерации и Правительством Республики Таджикистан*']),
    ([FL_EXISTS, 'Соглашение между Правительством Российской Федерации и Правительством Киргизской Республики*']),
    ([FL_EXISTS, 'Соглашение между Правительством Российской Федерации и Правительством Республики Беларусь*']),
    ([FL_EXISTS, 'Приказ Федеральной таможенной службы от 26 мая 2010 г. N 1022**'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'АБУ']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.3: Ввести в ППР контекст = "яровой" (без кавычек).
  HLTC77.1.1.24.3.1: В тестовой базе:
  ... 10 доков
}
function  HLTC77_1_1_24_3_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '10']),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Постановление Госстандарта РФ от 23 февраля 1998 г. N 5*',(['яровая'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Документ, в котором много таблиц.*',(['яровое'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Строительные нормы и правила СНиП 2.06.03-85*',(['яровые','яровая'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Указание ГТК РФ от 16 октября 1995 г. N 01-12/1245*',(['яровая'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Указание ГТК РФ от 7 сентября 1995 г. N 01-12/1103*',(['яровая', 'яровых', 'яровой'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Указание ГТК РФ от 25 апреля 1995 г. N 01-12/618*',(['яровая', 'яровых', 'яровой'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Еще один Документ, в котором много таблиц*',(['яровой'])]),    
    ([FL_EXISTS_CONTEXT_SEARCH, 'Общероссийский классификатор*329*',(['яровой'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Общероссийский классификатор*159*',(['Яровое'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Федеральный закон от 4 июля 2003 г. N 93-ФЗ*',(['яровой'])])
    ];

  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'яровой']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.4: 
  При поиске «день» не должно подсвечиваться «дел»
  1. Ввести в ППР контекст = "день" (без кавычек).
  2. Провести поиск и построить список.
  3. Применить фильтр Федеральные акты
  4. Открыть Таможенный кодекс (будет во второй половине монитора)

  Убедиться, что:
  В Статье 1 не подсвечены слова: дело, делом, дела.
  В Статье 392 не подсвечены слова: делам, дел.
}
function  HLTC77_1_1_24_4_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, docWOContextName, 
  i, pointsContents;
begin
  try      
    Result := true;
    docWOContextName := 'Таможенный кодекс Российской Федерации от*';
    pointsContents := 
      [    
      'Раздел I*\Глава 1*\Статья 1*',
      'Раздел IV*\Глава 37*\Статья 392*'
      ];
    docsName := 
      [
      ([FL_EXISTS_CONTEXT, 'Правила процедуры Административного совета Евразийской патентной организации (утв. Административным советом Евразийской патентной организации на втором (первом очередном) заседании 1 декабря 1995 г.)',(['дня'])]),
      ([FL_EXISTS_CONTEXT, 'Решение о сроке, месте проведения и предложениях в проект повестки дня очередного заседания Совета глав государств Содружества Независимых Государств (Москва, 30 ноября 2001 г.)',(['дел'])])
      ];
    cardData := 
      [                
      	CARD_PPR, ([([
      	FD_WORDS_IN_TEXT, ([
      		'день']) ]),([
      	FD_INOPERATIVE_EDITION, ([
      		'Да']) ])
        ]) 
      ];
    // проверка наличия найденных контекстов
    if not SearchInPPR(cardData) then
      Raise('Не получилось произвести поиск ППР');
    if not FindInList(docsName) then
     	Result := ErrorResult('Результат поиска ППР не соответствует эталону');

    // проверка отсутствия контекстов
    if not SearchInPPR(cardData) then
      Raise('Не получилось произвести поиск ППР');
    if not OpenDocFromList(docWOContextName, GetList) then
      Raise('Не получилось из списка открыть документ: ' + docWOContextName);
    for i:= VarArrayLowBound(pointsContents, 1) to VarArrayHighBound(pointsContents, 1) do  
    begin
      if not Position_Internal(GetFromNavigator('ВКЛАДКА НАВИГАТОРА "СТРУКТУРА ДОКУМЕНТА"'), pointsContents[i], DELIM_CHAR, true, 'IsPressHome:=true;ExpandKey:=[NumMinus][NumPlus]') then
        Raise('Не получилось открыть пункт оглавления: ' + pointsContents[i]);
      if IsTextHighlight then
        Result := ErrorResult('Найдена подсветка контекста в: ' + pointsContents[i]);
    end;
    CloseTabIfNeeded; 
  except
    Result := false;
    Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
HLTC77.1.1.24.5:  Ввести в ППР, в "Слова в тексте" ввести: день! Провести поиск.
  Проверить, что в найденных документах списка подсвечивается именно "день", а не "дни/дней/дня...".
  (Регистр не учитывается)
}
function  HLTC77_1_1_24_5_Execute(var  current_state: OleVariant): OleVariant;
const
  SEARCH_CONTEXT = 'день!';
  RES_CONTEXT = '*день';
  RES_ERROR_CONTEXT = '*дней';
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [    
    ([FL_EXISTS_CONTEXT_SEARCH_AND_HIGHLIGHT, 'Трудовой кодекс Российской Федерации от 30 декабря 2001 г. N 197*', ([SEARCH_CONTEXT]), RES_CONTEXT]),
    ([FL_EXISTS_CONTEXT_NOT_SEARCH_OR_NOT_HIGHLIGHT, 'Трудовой кодекс Российской Федерации от 30 декабря 2001 г. N 197*', ([SEARCH_CONTEXT]), RES_ERROR_CONTEXT]),
    ([FL_EXISTS_CONTEXT_SEARCH_AND_HIGHLIGHT, 'Арбитражный процессуальный кодекс Российской Федерации от 24 июля 2002 г. N 95*', ([SEARCH_CONTEXT]), RES_CONTEXT]),
    ([FL_EXISTS_CONTEXT_NOT_SEARCH_OR_NOT_HIGHLIGHT, 'Арбитражный процессуальный кодекс Российской Федерации от 24 июля 2002 г. N 95*', ([SEARCH_CONTEXT]), RES_ERROR_CONTEXT])
    ];
  cardData :=
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		SEARCH_CONTEXT]) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.6: Ввести в ППР контекст = "Лорд" (без кавычек). 
Провести поиск  и построить список. Проверить правильность списка (см. ниже) и проверить, что в каждом документе списка 
ищется соответствующий контекст (в обоих документах списка должен находиться контекс "лорд"). 
Результат:
HLTC77.1.1.24.6.1: В тестовой базе:
 ДОКУМЕНТ 2002 с 10 командами NAME по 73 символа каждая.*
 Приказ Минтранса РФ от 14 мая 2001 г. N 84 "Об утверждении Инструкции о взаимодействии федеральных органов исполнительной власти по согласованию и выдаче разрешений на разовые полеты воздушных судов иностранных государств в Российской Федерации"
}
function  HLTC77_1_1_24_6_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '2']),
    ([FL_EXISTS, 'ДОКУМЕНТ 2002 с 10 командами NAME по 73 символа каждая.*']),
    ([FL_EXISTS_CONTEXT, 'Приказ Минтранса РФ от 14 мая 2001 г. N 84 "Об утверждении Инструкции о взаимодействии федеральных органов исполнительной власти по согласованию и выдаче разрешений на разовые полеты воздушных судов иностранных государств в Российской Федерации"',(['лорд'])])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'Лорд']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.7: Ввести в ППР контекст = "цепочками" (без кавычек), поиск в недействующих редакциях = «Да». 
  Провести поиск  и построить список. Проверить правильность списка (см. ниже) и проверить, что в указанных ниже документах списка ищется соответствующий контекст (“цепочкой”). 
  HLTC77.1.1.24.7.1: В тестовой базе 36 документов, среди которых должны быть:
    Документ с нормальной цепочкой редакций. ACTIVE 21/04/2003 и 4 его редакции
}
function  HLTC77_1_1_24_7_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [    
    ([FL_NUMBER, '36']),
    ([FL_EXISTS_EDITION, 'Документ с нормальной цепочкой редакций. ACTIVE 21/04/2003*',
      ([
        '*будет*от 21.04.2003*',
        '*2020*от 21.04.2003*',
        '*от 30.03.2003*',
        '*первоначальная*'
      ])
     ]) 
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'цепочками']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.8: (Провести поиск по контексту, область поиска «Слова в названии»).
  HLTC77.1.1.24.8.1: Контекст = «йод». Результат:
    HLTC77.1.1.24.8.1.1: В тестовой базе:  
      Соглашение о профилактике йод-дефицитных состояний среди населения государств-участников Содружества Независимых Государств (Минск, 31 мая 2001 г.)
      Если искать по всему тексту, то должно найтись 29 документов
}
function  HLTC77_1_1_24_8_1_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS, 'Соглашение о профилактике йод-дефицитных состояний среди населения государств-участников Содружества Независимых Государств (Минск, 31 мая 2001 г.)'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'йод']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');

  docsName := 
    [
    ([FL_NUMBER, '29'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'йод']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    if not FindInList(docsName) then
    	Result := ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');    
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.8: Слова в названии.
    HLTC77.1.1.24.8.2: Контекст = «NOTTM». Результат: 2 документа.
}
function  HLTC77_1_1_24_8_2_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
    ([FL_NUMBER, '2'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'NOTTM']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.8.3: Контекст = «Протокольное решение о праздновании 50-летия Международной гражданской авиации ИКАО об объявлении ООН и Советом ИКАО 7 Декабря Всемирным днем Международной гражданской авиации об участии Государств - участников Содружества Независимых Государств в работе Всемирной авиатранспортной конференции ИКАО и защите как национальных интересов гражданской авиации так и интересов Содружества». Результат: 1 документ.
}
function  HLTC77_1_1_24_8_3_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_NUMBER, '1']),
      ([FL_EXISTS, 'Протокольное решение о праздновании 50-летия Международной гражданской авиации (ИКАО)*'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'Протокольное решение о праздновании 50-летия Международной гражданской авиации ИКАО об объявлении ООН и Советом ИКАО 7 Декабря Всемирным днем Международной гражданской авиации об участии Государств - участников Содружества Независимых Государств в работе Всемирной авиатранспортной конференции ИКАО и защите как национальных интересов гражданской авиации так и интересов Содружества']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.8.4: Контекст = Федеральный закон N 151-ФЗ
    Должны получить список из 2-х документов. Оба должны содержать в названии "Федеральный закон" и "N 151-ФЗ".
}
function  HLTC77_1_1_24_8_4_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_NUMBER, '2']),
      ([FL_EXISTS, 'Федеральный закон от 22 августа 1995 г. N 151-ФЗ*']),      
      ([FL_EXISTS, 'Федеральный закон от 17 декабря 1997 г. N 151-ФЗ*'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'Федеральный закон N 151-ФЗ']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.8.5: Контекст = конвенция 25 ноября 1998
    В названиях документов полученного списка, должны быть "Конвенция(ции)" и "25 ноября 1998".
}
function  HLTC77_1_1_24_8_5_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_NUMBER_BIG_MORE, '40']),
      ([FL_EXISTS, 'Конвенци*25 ноября 1998*'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'25 ноября 1998']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.9: (поиск словосочетания) Ввести в ППР контекст = " чечевицы мелкосеменные " (без кавычек). 
Провести поиск  и построить список. Проверить правильность списка (см. ниже) и проверить, что в каждом документе списка ищется соответствующий контекст. 
Результат:
HLTC77.1.1.24.9.1: В тестовой базе: 
  Постановление Госстандарта РФ от 23 февраля 1998 г. N 5 "О "Номенклатуре продукции и услуг (работ), подлежащих обязательной сертификации" (с изменениями от 14, 28 апреля, 6 октября 1998 г., 22 января, 4 марта, 12, 27 апреля, 19, 29 октября 1999 г., 27, 28 июня, 8 августа, 4, 8 сентября, 18 декабря 2000 г., 8 февраля, 27 марта, 24 апреля, 10 мая, 3 июля, 14 августа, 27 сентября, 8 октября, 18 октября 2001 г., 28 января 2002 г.)
И не должно быть документа
  Товарная номенклатура внешнеэкономической деятельности Содружества Независимых Государств (ТН ВЭД СНГ) (по состоянию на 1 января 1997 г.) (с изменениями от 4 июня 1999 г.) 
}
function  HLTC77_1_1_24_9_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_EXISTS, 'Постановление Госстандарта РФ от 23 февраля 1998 г. N 5*']),
    ([FL_NOT_EXISTS, 'Товарная номенклатура внешнеэкономической деятельности Содружества Независимых Государств (ТН ВЭД СНГ) (по состоянию на 1 января 1997 г.) (с изм. и доп. от 4 июня 1999 г.)'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'чечевицы мелкосеменные']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.10: (контексты в двух полях) Ввести в ППР контекст = "чечевицы" и в другом 
поле (добавляется при нажатии кнопки плюс, либо комбинацией Shift+Enter) "мелкосеменные" (без кавычек). 
Провести поиск  и построить список. Проверить правильность списка (см. ниже) и проверить, что в каждом документе 
списка ищется соответствующий контекст (то, что должно находиться в документе указано в скобках и подчёркнуто, 
если указано несколько контекстов, то проверить, что находятся все указанные).

HLTC77.1.1.24.10.1: В тестовой базе:
  Постановление Правительства РФ от 27 ноября 2006 г. N 718*
  Новые таблицы. Постановление Правительства РФ от 27 ноября 2006 г. N 718 "О Таможенном тарифе Российской Федерации и товарной номенклатуре, применяемой при осуществлении внешнеэкономической деятельности" (с изменениями и дополнениями)
  Постановление Госстандарта РФ от 23 февраля 1998 г. N 5*
  ТН ВЭД СНГ. Группа 07. Овощи и некоторые съедобные корнеплоды и клубнеплоды <u>("чечевицы","мелкосеменные")
  Решение Совета Евразийской экономической комиссии от 16 июля 2012 г. N 54*  
}
function  HLTC77_1_1_24_10_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '5']),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Постановление Правительства РФ от 27 ноября 2006 г. N 718*',(['чечевица', 'мелкосеменные'])]),
    ([FL_EXISTS, 'Новые таблицы. Постановление Правительства РФ от 27 ноября 2006 г. N 718*']),
    ([FL_EXISTS_CONTEXT, 'Постановление Госстандарта РФ от 23 февраля 1998 г. N 5*',(['чечевица', 'мелкосеменная'])]),
    ([FL_EXISTS_CONTEXT, 'ТН ВЭД СНГ. Группа 07. Овощи и некоторые съедобные корнеплоды и клубнеплоды',(['чечевица', 'мелкосеменные'])]),
    ([FL_EXISTS, 'Решение Совета Евразийской экономической комиссии от 16 июля 2012 г. N 54*'])    
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'чечевицы',
        'мелкосеменные']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.12: Ввести в ППР контекст = "ёлка" (без кавычек).
  Провести поиск  и построить список. Результат – список документов, среди которых должен быть «Документ 2003».
}
function  HLTC77_1_1_24_12_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_EXISTS, 'Документ 2003'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'ёлка']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.13: (контексты в двух полях) 
  Ввести в ППР контекст = "Реструктуризации" и в другом поле "исполнит* влас*" (без кавычек).
  Провести поиск и построить список. Проверить, что в каждом документе списка ищется соответствующий контекст.
}
function  HLTC77_1_1_24_13_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
  x;
begin
  Result := false;
  x := (['Реструктуриз', 'исполнит', 'влас']);
  docsName := 
    [
    ([FL_EXISTS_CONTEXT_BY_NUM, '2', x]),
    ([FL_EXISTS_CONTEXT_BY_NUM, '3', x]),
    ([FL_EXISTS_CONTEXT_BY_NUM, '8', x])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'Реструктуризации', 'исполнит* влас*']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.14:  Ввести в ППР контекст = "граф* объект". 
Провести поиск – в документах, найденных по этому поиску должен искаться контекст <u> «графический объект» </u>
}
function  HLTC77_1_1_24_14_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
  x;
begin
  Result := False;
  x := (['граф* объект']);
  docsName := 
    [
    ([FL_EXISTS_CONTEXT_BY_NUM, '1', x]),
    ([FL_EXISTS_CONTEXT_BY_NUM, '3', x]),
    ([FL_EXISTS_CONTEXT_BY_NUM, '7', x]),
    ([FL_EXISTS_CONTEXT_BY_NUM, '16', x])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'граф* объект']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.15: Ввести в ППР контекст = "граф объект". 
    Провести поиск – в документах, найденных по этому поиску НЕ должен искаться контекст <u> «графический объект» </u>
}
function  HLTC77_1_1_24_15_Execute(var  current_state: OleVariant): OleVariant;
const
  SEARCH_CONTEXT = 'граф объект';
  RES_CONTEXT = 'графический объект';
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NOT_EXISTS_CONTEXT_BY_NUM, '1', ([RES_CONTEXT])]),
    ([FL_EXISTS_CONTEXT_NOT_SEARCH_OR_NOT_HIGHLIGHT, 'Межгосударственный стандарт ГОСТ 10807-78*', ([SEARCH_CONTEXT]), RES_CONTEXT]),
    ([FL_EXISTS_CONTEXT_SEARCH_AND_HIGHLIGHT, 'Межгосударственный стандарт ГОСТ 10807-78*', ([SEARCH_CONTEXT]), SEARCH_CONTEXT])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		SEARCH_CONTEXT]) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.16: Ввести в ППР контекст = "АБАЙ"  (без кавычек).
    HLTC77.1.1.24.16.1: В тестовой базе:
      Письмо ГТК РФ от 13 февраля 1996 г. N 01-15/2480 "О временном положении о доставке и транзите товаров"
      Письмо ГТК РФ от 14 октября 1998 г. N 22-05/7678 Список адресов таможенных органов и служебных телефонов должностных лиц таможенных органов Республики Казахстан
      Строительные нормы и правила СНиП II-7-81* "Строительство в сейсмических районах" (утв. постановлением Госстроя СССР от 15 июня 1981 г. N 94) (с изм. и доп. от 3 июня 1987 г., 16 августа 1989 г., 26 июля 1995 г., 28 июля 1997 г., 27 декабря 1999 г., 3 июня 1987 г.)
      Письмо Высшего Арбитражного Суда РФ от 28 октября 1994 г. N ОМ-328 "О реквизитах судебно-арбитражных органов Армении, Казахстана, Узбекистана и Киргизии и новых ставках государственной пошлины в Киргизии"
      Решение Совета Евразийской экономической комиссии от 16 июля 2012 г. N 54*
      Письмо ГТК РФ от 1 июня 1999 г. N 03-10/15634 "О классификаторе таможенных органов и их структурных подразделений" (с изм. и доп. от 10 ноября 1999 г.) (утратило силу)
      Письмо ГТК РФ от 22 января 1999 г. N 03-10/1596 "О классификаторе таможенных органов и их структурных подразделений" (утратило силу)
      Письмо ГТК РФ от 16 апреля 1998 г. N 07-10/7793 Образцы оттисков печатей и подписей должностных лиц ТПП Республики Казахстан (утратило силу) </u>
}
function  HLTC77_1_1_24_16_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '8']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 13 февраля 1996 г. N 01-15/2480 "О временном положении о доставке и транзите товаров"']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 14 октября 1998 г. N 22-05/7678 Список адресов таможенных органов и служебных телефонов должностных лиц таможенных органов Республики Казахстан']),
    ([FL_EXISTS, 'Строительные нормы и правила СНиП II-7-81* "Строительство в сейсмических районах" (утв. постановлением Госстроя СССР от 15 июня 1981 г. N 94) (с изм. и доп. от 3 июня 1987 г., 16 августа 1989 г., 26 июля 1995 г., 28 июля 1997 г., 27 декабря 1999 г., 3 июня 1987 г.)']),
    ([FL_EXISTS, 'Письмо Высшего Арбитражного Суда РФ от 28 октября 1994 г. N ОМ-328 "О реквизитах судебно-арбитражных органов Армении, Казахстана, Узбекистана и Киргизии и новых ставках государственной пошлины в Киргизии"']),
    ([FL_EXISTS, 'Решение Совета Евразийской экономической комиссии от 16 июля 2012 г. N 54*']),    
    ([FL_EXISTS, 'Письмо ГТК РФ от 1 июня 1999 г. N 03-10/15634 "О классификаторе таможенных органов и их структурных подразделений" (с изм. и доп. от 10 ноября 1999 г.) (утратило силу)']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 22 января 1999 г. N 03-10/1596 "О классификаторе таможенных органов и их структурных подразделений" (утратило силу)']),
    ([FL_EXISTS, 'Письмо ГТК РФ от 16 апреля 1998 г. N 07-10/7793 Образцы оттисков печатей и подписей должностных лиц ТПП Республики Казахстан (утратило силу)'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'АБАЙ']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.17: Ввести в ППР контекст = "ПОДРЯ" (без кавычек). 
Провести поиск  и построить список.
HLTC77.1.1.24.17.1: Проверить, что в результате в тестовой базе найдется 13 документов. 
Проверить наличие в построенном списке документов (можно использовать контекстный поиск 
для удобства):
 Письмо Минстроя РФ от 15 ноября 1996 г. N ВБ-26/12-369
}
function  HLTC77_1_1_24_17_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '13']),    
    ([FL_EXISTS, 'Письмо Минстроя РФ от 15 ноября 1996 г. N ВБ-26/12-369*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'ПОДРЯ']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.18: Проверить, что в поле контекста можно вводить любые символы и не будет сообщения о том, что контекст нераспознан.
}
function  HLTC77_1_1_24_18_Execute(var  current_state: OleVariant): OleVariant;
const
  TEST_CONTEXT = '1234567890аяaz{|}<=>?#$%&()]\_"`:./!';
var
  cardData, errorText;
begin
try
  Result := False;
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		TEST_CONTEXT]) ]),([
    	FD_WORDS_IN_TEXT, ([
    		TEST_CONTEXT]) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if NOT FillPPRCard(cardData) then
    Raise('Не получилось заполнить карточку ППР, возможно при заполнении появляется окно предупреждения!');

  errorText := GetParam( WaitForAnyMessageWindow('', Options.Run.Timeout div 30, '', 'OK'), WFMF_RES_MSGTEXT, '');
  Result := errorText = '';
  if not Result then
  	Raise('Появляется предупреждение об ошибке с текстом "' + errorText + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.19: 
    1. В поле "Слова в тексте" ввести: контекст пепелац
    Должен найтись один документ.

    2. В поле "Слова в названии" ввести: префикс пепелац
    Ничего найтись не должно.  
}
function  HLTC77_1_1_24_19_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS, 'Документ N5601*'])
    ];
 
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'контекст пепелац']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
 
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'префикс пепелац']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
   	Result := ErrorResult('Результат поиска ППР не соответствует эталону. Поиск прошел, но не должен был.');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.21: Ввести в поле «Слова в названии» контекст «приказ», Тип «Акт». Выполнить запрос. Найдется 5 документа. Выполнить  тот же самый запрос с контекстом «один». Проверить, что найдутся те же самые документы, т.к. в тестовой базе слова «приказ» и «один» являются синонимами.
}
function  HLTC77_1_1_24_21_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, context, i;
begin
try      
  Result := true;
  for i:= 1 to 2 do
  begin   
    case i of
      1: begin context := 'один'; end;
      2: begin context := 'приказ'; end;
    end;  
    docsName := 
    [
      ([FL_NUMBER, '5']),
      ([FL_EXISTS, 'Документ N56021*']),
      ([FL_EXISTS, 'Приказ Минтранса РФ от 12 июля 2007 г. N 95*'])
    ];
    cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		context]) ]),([
    	FD_TYPE, ([
    		'[ИЛИ]Акт']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ])
    ];
    if SearchInPPR(cardData) then
    begin
      Result := FindInList(docsName) and Result;
      if not Result then
      	Raise('Результат поиска ППР не соответствует эталону');
    end
    else
    	Raise('Не получилось выполнить поиск ППР');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.22: Контексты со «*»:
    HLTC77.1.1.24.22.1: Слова в названии "констит*", результат – 21 документов.
    HLTC77.1.1.24.22.2: Результат – не меньше 530 документов.
}
function  HLTC77_1_1_24_22_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, context_type, docs_num, chech_type,i;
begin
try      
  Result := true;
  for i:= 1 to 2 do
  begin   
    case i of
      1: begin docs_num := '530'; context_type := FD_WORDS_IN_TEXT; chech_type := FL_NUMBER_BIG_MORE; end;
      2: begin docs_num := '21'; context_type := FD_WORDS_IN_CAPTION; chech_type := FL_NUMBER_BIG; end;
    end;  
    docsName := 
    [
      ([chech_type, docs_num])
    ];
    
    
    cardData := 
    [                
    	CARD_PPR, ([([
    	context_type, ([
    		'констит*']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ])
      ]) 
    ];         
    if SearchInPPR(cardData) then
    begin
      if not FindInList(docsName) then
      	Result := ErrorResult('Результат поиска ППР не соответствует эталону');
    end
    else
    	Raise('Не получилось выполнить поиск ППР');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{HLTC77.1.1.24.22: Контексты со «*»:
  HLTC77.1.1.24.22.3: Слова  в тексте: "в* новая технология производства", Тип: "ГОСТ", результат – 4 документа.
}
function  HLTC77_1_1_24_22_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '4']),
    ([FL_EXISTS, 'Государственный стандарт СССР ГОСТ 11118-73*']),
    ([FL_EXISTS, 'Государственный стандарт СССР ГОСТ 13578-68*']),
    ([FL_EXISTS, 'Государственный стандарт Союза ССР ГОСТ 26633 - 91*'])
  ];
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_TEXT, ([
  		'в* новая технология производства']) ]),([
  	FD_TYPE, ([
  		'[ИЛИ]ГОСТ']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.22.4: Слова в тексте "1234567890*", результат – 2 документа.
}
function  HLTC77_1_1_24_22_4_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '2']),
    ([FL_EXISTS, 'ДОКУМЕНТ 2002 с 10 командами NAME по 73 символа каждая*']),
    ([FL_EXISTS, 'Инструкция о порядке похорон и содержании кладбищ в Российской Федерации. МДС 13-2.2000*'])
  ];
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_TEXT, ([
  		'1234567890*']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.22.5: Слова в названии "12345*", результат – 1 документ.
}
function  HLTC77_1_1_24_22_5_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS, 'Распоряжение Госстроя РФ от 27 июня 2001 г. N 20*'])
  ];
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_CAPTION, ([
  		'12345*']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.22: Контексты со «*»:
  HLTC77.1.1.24.22.6: Слова в названии «ах*», результат – 1 документ.
  HLTC77.1.1.24.22.7: Слова в тексте «ах*», результат – 11 документ.
}
function  HLTC77_1_1_24_22_6_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, context_type, docs_num, i;
begin
try      
  Result := true;
  for i:= 1 to 2 do
  begin   
    case i of
      1: begin docs_num := '1'; context_type := FD_WORDS_IN_CAPTION; end;
      2: begin docs_num := '11'; context_type := FD_WORDS_IN_TEXT; end;
    end;          
    docsName := 
    [
      ([FL_NUMBER_BIG, docs_num])
    ];
    cardData := 
    [                
    	CARD_PPR, ([([
    	context_type, ([
    		'ах*']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ])
      ]) 
    ];         
    if SearchInPPR(cardData) then
    begin
    	if docs_num = '0' then 
        Raise('Поиск прошел для поиска "' + context_type + '"')
      else
      if not FindInList(docsName) then
      	Result := ErrorResult('Результат поиска ППР не соответствует эталону');
    end
    else
    if docs_num <> '0' then
    	Raise('Не получилось выполнить поиск ППР');    
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.23: Обрезание длинных запросов:
  HLTC77.1.1.24.23.1: Проверить, что если в поле «Слова в названии» ввести контекст 
    «ДОКУМЕНТ 2002 с 10 командами NAME по 73 символа каждая. Это команда 1. ыыыыыыы1 Это команда 2. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы кодекс», будет найден один документ.
}
function  HLTC77_1_1_24_23_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS, 'ДОКУМЕНТ 2002*'])
  ];
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_CAPTION, ([
  		'ДОКУМЕНТ 2002 с 10 командами NAME по 73 символа каждая. Это команда 1. ыыыыыыы1 Это команда 2. ыыыыыыыыыыыы ыыыыыыыыыыыы ыыыыыыыыыыыыыыы кодекс']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно учитывается 16 слово в названии. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Возможно учитывается 16 слово в названии. Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.23: Обрезание длинных запросов:
  HLTC77.1.1.24.23.2: Проверить:
    1. В поле «Слова в тексте» вводим контекст:
      «Решением Арбитражного суда Московской области оставленным без изменения постановлением апелляционной инстанции исковые требования удовлетворены протестом заместителя генерального ыфвоаывра»
    2. Жмём Искать. Должен найтись один документ, в котором подсвечены только первые 15 слов из запроса. «заместителя Генерального» - подсвечиваться не должно.
}
function  HLTC77_1_1_24_23_2_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'Решением Арбитражного суда Московской области оставленным без изменения постановлением апелляционной инстанции исковые требования удовлетворены протестом ыфвоаывра';
  HL_WORDS = 'Решением Арбитражного суда Московской области оставленным без изменения постановлением апелляционной инстанции исковые требования удовлетворены*протесте';
var
  cardData;
begin
try      
  Result := true;
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_TEXT, ([
  		CONTEXT1]) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Нет']) ])
    ]) 
  ];         
  if not SearchInPPR(cardData) then
  	Raise('Возможно учитывается 16 слово в тексте. Не получилось выполнить поиск ППР');  
  if not FindInList([([FL_NUMBER, '1'])]) then
    Raise('Возможно учитывается 16 слово в тексте. Результат поиска ППР не соответствует эталону');

  if not OpenDocFromList('*', GetList) then
    Raise('Не получилось открыть документ из списка');
  if not BaseSearchInDocument(GetEditor, CONTEXT1) then
  	Raise('БП в документе не прошел');
  if not CheckHighlightWords(GetEditor, HL_WORDS) then
  	Raise('В найденом документе не выделены слова "' + HL_WORDS + '"');
  
  CloseTabIfNeeded;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
  HLTC77.1.1.24.23.3: Проверить, что если в поле «Слова в тексте» ввести контекст В КАВЫЧКАХ "См. комментарии к статье 12 Конституции РФ Статья 13 1. В Российской Федерации признается идеологическое многообразие. 2. Никакая идеология не может устанавливаться в качестве государственной или обязательной. 3. В Российской Федерации признаются политическое многообразие, многопартийность. 4. Общественные объединения равны перед законом.", то после нажатия кнопки «Искать», кнопки «Enter» или сочетания клавиш «Ctrl+Enter» будет найден один документ, в котором подсвечены только первые 15 слов из запроса.
}
function  HLTC77_1_1_24_23_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '2'])
  ];
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_TEXT, ([
  		'"См. комментарии к статье 12 Конституции РФ Статья 13 1. В Российской Федерации признается идеологическое многообразие. 2. Никакая идеология не может устанавливаться в качестве государственной или обязательной. 3. В Российской Федерации признаются политическое многообразие, многопартийность. 4. Общественные объединения равны перед законом."']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Нет']) ])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.24: Проверка релевантности
  HLTC77.1.1.24.24.1: Ввести в поле слова в тексте «один два три» и выбрать номер REL. 
  Должно найтись 14 документов, отсортированных в порядке уменьшения релевантности. 
  Релевантность в статусной строке должна соответствовать релевантности, указанной в названиях документов.
HLTC72.2.2.4: Проверить, что после поиска с морфологией по ППР в статусной строке отображается релевантность для каждого документа(только для внутренней версии).     
}
function  HLTC77_1_1_24_24_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [ 
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5605*', '35']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5612*', '25']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5608*', '25']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5611*', '18']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5609*', '18']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5610*', '17']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56041*', '14']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56021*', '11']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5606*', '10']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56101*', '9']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5601*', '8']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56059*', '2']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56031*', '0']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N5607*', '0'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'один два три']) ]),([
   FD_NUMBER, ([
    'RЕL']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24.2: Ввести в поле слова в тексте «закон о престолонаследии».
    Проверить, что среди прочих есть документы 58001-58005, релевантность которых соответсвует их названию.
}
function  HLTC77_1_1_24_24_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*58001*', '39']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*58004*', '39']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*58002*', '31']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*58003*', '25']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*58005*', '25'])    
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'закон о престолонаследии']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24.3: Ввести в поле слова в тексте «ФЗ об оружии». 
    Проверить, что среди прочих есть документы 58006-58008, релевантность которых соответствует их названию.
}
function  HLTC77_1_1_24_24_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*58006*', '35']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*58008*', '35']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*58007*', '27'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'ФЗ об оружии']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24.4: Ввести в поле слова в тексте «summand f». 
    Проверить, что в найденных документах релевантность соответсвует названию. 
}
function  HLTC77_1_1_24_24_4_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59016*32*', '32']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59017*28*', '28']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59001*36*', '36']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59002*36*', '36']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59003*26*', '26']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59004*32*', '32']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59005*28*', '28']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59006*18*', '18']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59007*34*', '34']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59008*32*', '32']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59009*22*', '22']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59011*28*', '28']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59012*28*', '28']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59013*24*', '24']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59014*32*', '32']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59015*24*', '24']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59018*30*', '30']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59019*26*', '26']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59020*24*', '24']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59021*30*', '30']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59022*32*', '32']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ*59023*28*', '28'])
  ];  
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'summand f']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Нет']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24.5: Ввести контексты: (отличаются направлением слеша)
    топик-2009\080612
    топик-2009/060612

  В обоих случаях должен найтись документ 2009 с релевантностью 41.
}
function  HLTC77_1_1_24_24_5_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, context, i;
begin
try      
  Result := true;
  for i:= 1 to 2 do
  begin   
    case i of
      1: context := 'топик-2009\080612';      
      2: context := 'топик-2009/060612';      
    end;  
    docsName := 
    [
      ([FL_EXISTS_RELEVANCE_INT, '*Документ*2009*', '41'])
    ];
    cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		context]) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ])
    ];
    if SearchInPPR(cardData) then
    begin
      Result := FindInList(docsName) and Result;
      if not Result then
      	Raise('Результат поиска ППР не соответствует эталону');
    end
    else
    	Raise('Не получилось выполнить поиск ППР');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.24.6: Информеры
  По контексту:
    Что такое тестовое опорное понятие

  Должны находиться:
    - Документ 2183. Блок 20 – релевантность 93.
    - Документ 2185. Блок 20 – релевантность 23.
    - Документ 2186. Блок 20 – релевантность 13.
}
function  HLTC77_1_1_24_24_6_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  Result := true;
  docsName := 
  [
    ([FL_EXISTS_RELEVANCE_INT, '*2183*', '93']),
    ([FL_EXISTS_RELEVANCE_INT, '*2185*', '23']),
    ([FL_EXISTS_RELEVANCE_INT, '*2186*', '13'])
  ];

  if BaseSearch(nil, 'Что такое тестовое опорное понятие') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска БП не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.24.7: Категории
  По запросу:
    Проверка учета категории в релевантности

  Должны найтись топики 2215 и 2214.
  Релевантность 2215 на 3 больше, чем у 2214.
}
function  HLTC77_1_1_24_24_7_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  Result := true;
  docsName := 
  [
    ([FL_EXISTS_RELEVANCE_INT, '*2215*', '16']),
    ([FL_EXISTS_RELEVANCE_INT, '*2214*', '13'])
  ];
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_TEXT, ([
  		'Проверка учета категории в релевантности']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ])
    ])
  ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName) and Result;
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.24.8: Афоризм пословица поговорка
  По запросу:
  афоризм пословица поговорка: в здоровом теле здоровый дух - редкое исключение

  Должен находиться документ № 9099 с релевантностью 6.
}
function  HLTC77_1_1_24_24_8_Execute(var  current_state: OleVariant): OleVariant;
const
  DOC_NAME = '*9099*';
var
  docsName, cardData;
begin
try      
  Result := true;
  docsName := 
  [
    ([FL_EXISTS_RELEVANCE_INT, DOC_NAME, '6'])
   
  ];
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_TEXT, ([
  		'афоризм пословица поговорка: в здоровом теле здоровый дух - редкое исключение']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ])
    ])
  ];
  
  if not SearchInPPR(cardData) then
  	Raise('Не получилось выполнить поиск ППР');
  if not FindInList(docsName) then
    Raise('Результат поиска ППР не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24.9: 
    Релевантность у документа 2251
    По запросу:
    Релевантность у документа 2251 должна быть на 12 больше, чем у 2252

    Должны находиться документы 2251 и 2252.
    Релевантность 2251 должна быть на 12 больше, чем у 2252.
}
function  HLTC77_1_1_24_24_9_Execute(var  current_state: OleVariant): OleVariant;
const
  DOC_NAME1 = 'Picture 2251*';
  DOC_NAME2 = 'Picture 2252*';
  CONTEXT = 'Релевантность у документа 2251 должна быть на 12 больше, чем у 2252';
  REL_OFFSET = 12;
var
  rel;
begin
try      
  Result := true;
  if not BaseSearch(nil, CONTEXT) then
    Raise('Не получилось произвести поиск БП');
  if not Position_Internal(GetList, DOC_NAME2, DELIM_CHAR, true, 'IsPressHome:=true') then
    Raise('Не нашли документ "' + DOC_NAME2 + '" в списке после БП-поиска');
      
  rel := GetRelevanceForCurrentElementInList(GetList);
  if not FindInList(
                    [ 
                      ([FL_EXISTS_RELEVANCE_INT, DOC_NAME1, rel + REL_OFFSET]),
                      ([FL_EXISTS_RELEVANCE_INT, DOC_NAME2, rel])
                    ]
  ) 
  then
    Raise('Результат поиска БП не соответствует эталону, видимо релевантность между документами отличается НЕ на ' + IntToStr(REL_OFFSET));
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24: Проверка релевантности
    HLTC77.1.1.24.24.10: Слишком узкий диапазон
      По запросу: "слишком узкий диапазон" должны находиться 2 документа:
          Picture 3310 - с релевантностью больше 1.
          Picture 3311 - с релевантностью 1.
}
function  HLTC77_1_1_24_24_10_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [ 
    ([FL_EXISTS_RELEVANCE_MORE_INT, '*3310*', '1']),
    ([FL_EXISTS_RELEVANCE_INT, '*3311*', '1'])    
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'слишком узкий диапазон']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24: Проверка релевантности
    HLTC77.1.1.24.24.12: +10 за CODE
      По контексту: Повеление царя боярам REL-2
      Должен находиться документ 57011 с релевантностью такой, как указано в названии документа.
}
function  HLTC77_1_1_24_24_12_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [ 
    ([FL_EXISTS_RELEVANCE_INT, '*57011*', '55'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'Повеление царя боярам REL-2']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24: Проверка релевантности
    HLTC77.1.1.24.24.13: По запросу: пулемет кольт
      Должен находиться документ 3414 с релевантностью больше 80.
}
function  HLTC77_1_1_24_24_13_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [ 
    ([FL_EXISTS_RELEVANCE_MORE_INT, '*3414*', '80'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'пулемет кольт']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.24: Проверка релевантности
    HLTC77.1.1.24.24.14: По контексту: винтовка мосина
      Должны найтись 2 документа 3416 и 3415.
      Релевантность 3415 должна быть на 8 меньше, чем у 3416.
}
function  HLTC77_1_1_24_24_14_Execute(var  current_state: OleVariant): OleVariant;
const
  DOC_NAME1 = '*3416*';
  DOC_NAME2 = '*3415*';
  CONTEXT = 'винтовка мосина';
  REL_OFFSET = 8;
var
  rel;
begin
try      
  Result := true;

  if not SearchInPPR([ CARD_PPR, ([([ FD_WORDS_IN_TEXT, ([CONTEXT]) ]) ]) ]) then
    Raise('Не получилось произвести ППР');
  if not Position_Internal(GetList, DOC_NAME1, DELIM_CHAR, true, 'IsPressHome:=true') then
    Raise('Не нашли документ "' + DOC_NAME1 + '" в списке после ППР');
      
  rel := GetRelevanceForCurrentElementInList(GetList);
  if not FindInList(
                    [ 
                      ([FL_NUMBER, '2']),
                      ([FL_EXISTS_RELEVANCE_INT, DOC_NAME1, rel]),
                      ([FL_EXISTS_RELEVANCE_INT, DOC_NAME2, rel - REL_OFFSET])
                    ]
  ) 
  then
    Raise('Результат поиска ППР не соответствует эталону, видимо релевантность между документами отличается НЕ на ' + IntToStr(REL_OFFSET));
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.25: Поиск синонимов.
  При поиске используем словарь синонимов аббревиатур, в котором по общему правилу указана 
  аббревиатура и синонимичное ей выражение. Выражение может состоять из одного слова или из 
  нескольких слов. Порядок слов задан жестко. Одной аббревиатуре может соответствовать одно или 
  несколько выражений. Сама аббревиатура в редких случаях может представлять собой словосочетание,
  включающее аббревиатуру. Если при этом аббревиатуре соответствует 2 или более выражений, 
  то система обрабатывает запросы на каждое выражение.
  HLTC77.1.1.24.25.1: В поле слова в тексте вести «НДС».
    Проверить, что в списке есть документы:
    – Налоговый кодекс Российской Федерации (НК РФ)*
    С подсвеченным контекстом «налог на добавленную стоимость»

    - Приказ Минфина РФ от 30 декабря 2008 г. N 148н*
    С подсвеченным контекстом «НДС» и «налог на добавленную стоимость»

    Проверить, что в списке НЕТ документа, с текстом в названии «800200»
    (он содержит контекст «добавленная стоимость на налог», который не является синонимом НДС). 
}
function  HLTC77_1_1_24_25_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_EXISTS, 'Налоговый кодекс Российской Федерации (НК РФ)*']),
    ([FL_EXISTS, 'Приказ Минфина РФ от 30 декабря 2008 г. N 148н*']),
    ([FL_NOT_EXISTS, '*800200*'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'НДС']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.2: Ввести «рынок ЦБ». Проверить, что найдется «рынок ценных бумаг» в различных падежах.
}
function  HLTC77_1_1_24_25_2_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_EXISTS, 'Конвенция о координации деятельности государств-участников Содружества Независимых Государств на рынках ценных бумаг (Москва, 25 ноября 1998 г.)']),
    ([FL_EXISTS, 'Соглашение о регулировании межгосударственного рынка ценных бумаг (Минск, 22 января 1993 г.)']),
    ([FL_EXISTS, 'Статус Соглашения о регулировании межгосударственного рынка ценных бумаг (Минск, 22 января 1993 г.) (по состоянию на 15 мая 2001 г.)'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'рынок ЦБ']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.3: В поле слова в тексте в вести «ГКО РФ».
    Проверить, что в найденных документах подсвечен контекст
    ГКО\государственные краткосрочные обязательства
      и
    РФ\Россия\Российская федерация

    Документа 2001 в списке быть не должно.
}
function  HLTC77_1_1_24_25_3_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_EXISTS, 'Письмо Госналогслужбы РФ от 14 сентября 1998 г.*']),
    ([FL_EXISTS, 'Приказ ЦБР от 4 июня 1996 г. N 02-196а*']),
    ([FL_NOT_EXISTS, 'Документ 2001*'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'ГКО РФ']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.4:
  1. По запросу Слова в названии = "Документ" + Слова в тексте = "Балтфлот" в тексте должны находиться Балтфлот и БФ. Контекст Балтийский флот находиться НЕ должен. То есть в ТБ24 (по состоянию на 22.101.2010) должно находиться 10 документов и среди них НЕ должно быть 2003
  2. По запросу Слова в названии = "Документ" + Слова в тексте = "Балтийский флот" в тексте должны находиться и Балтийский флот, и БФ и Балтфлот. То есть в ТБ24 (по состоянию на 22.101.2010) должно находиться 11 документов и среди них ДОЛЖЕН быть 2003
}
function  HLTC77_1_1_24_25_4_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin                        
try
  Result := true;
  //1
  cardData :=
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'Документ']) ]),([
    	FD_WORDS_IN_TEXT, ([
    		'Балтфлот']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  docsName := 
    [
    ([FL_NUMBER_BIG, '10']),
    ([FL_NOT_EXISTS, 'Документ 2003*']),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Документ 2001*',(['Балтфлот'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Документ 2004*',(['БФ'])])
    ];
  if SearchInPPR(cardData) then
  begin
    if not FindInList(docsName) then
    	Result := ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    Result := ErrorResult('Не получилось произвести поиск ППР');

  //2
  cardData :=
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'Документ']) ]),([
    	FD_WORDS_IN_TEXT, ([
    		'Балтийский флот']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  docsName := 
    [
    ([FL_NUMBER_BIG, '11']),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Документ 2001*',(['Балтфлот'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Документ 2003*',(['Балтийский флот'])]),
    ([FL_EXISTS_CONTEXT_SEARCH, 'Документ 2004*',(['БФ'])])
    ];
  if SearchInPPR(cardData) then
  begin
    if not FindInList(docsName) then
    	Result := ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    Result := ErrorResult('Не получилось произвести поиск ППР');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;      
  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.5: В поле слова в тексте вести БФ, проверить, что в конце списка в документе "Документ 2003" оно будет найдено как неустойчивое словосочетание, т.е. слова "Балтийском" и "флотов" идут не подряд.
}
function  HLTC77_1_1_24_25_5_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
      ([FL_EXISTS, 'Документ 2003*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'БФ']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Возможно неправильно проходит поиск синонимов. Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.6: По контексту "фз 160" среди найденных должен быть 
    "Методическое пособие по организации деятельности государственного заказчика на строительство и заказчика-застройщика. МДС 11-15.2001"
      в тексте которого находится "160 ФЗ".
}
function  HLTC77_1_1_24_25_6_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
     ([FL_EXISTS, 'Методическое пособие по организации деятельности государственного заказчика*'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'фз 160']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.7: По контексту "закон ГУВД г.Москвы " НЕ должен находиться документ 2008.
}
function  HLTC77_1_1_24_25_7_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
      ([FL_NOT_EXISTS, 'NAME в топике 2008 со всеми атрибутами'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'закон ГУВД г.Москвы']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.8: По контексту "снип 2.01.51-90" НЕ должен находиться документ 2008 
    (который имеет тип СНиП и в котором есть контекст "2.01.51-90") и НЕ должен находиться документ 2009.
}
function  HLTC77_1_1_24_25_8_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
      ([FL_NOT_EXISTS, 'NAME в топике 2008 со всеми атрибутами']),
      ([FL_NOT_EXISTS, 'Документ 2009. Имеет корреспондентов к блокам с разными видами правовой информации.'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'снип 2.01.51-90']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.9: По контексту "министерство по налогам и сборам" в том числе должен находиться документ 2001 (в котором есть контекст "МНС").
}
function  HLTC77_1_1_24_25_9_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_INT, 'Документ 2001.*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'министерство по налогам и сборам']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.10: По контексту «ф з» должны находиться документы с подсвеченным «фз».
}
function  HLTC77_1_1_24_25_10_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, 'Воздушный кодекс РФ от 19*', (['*фз*'])]),      
      ([FL_EXISTS_CONTEXT_IN_STRING, 'Градостроительный кодекс РФ от 7*', (['*фз*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, 'Информация Госстроя РФ "Лицензирование отдельных видов деятельности"', (['*158-ФЗ*'])]),
      ([FL_NUMBER_BIG_MORE, '900'])      
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'ф з']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.11: По контексту «форма р14001» находятся документы:
    2001 – контекст «форма 14001»
    2002 – контекст «форма р 14001»

  По контексту «форма р-14001» находится только документ 2002 (контекст «форма р 14001»).
}
function  HLTC77_1_1_24_25_11_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, 'Документ 2002*', (['*форма р 14001*'])]),      
      ([FL_EXISTS_CONTEXT_IN_2STRING, 'Документ 2001*', (['*форма*14001*'])])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'форма р14001']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат 1ого поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести 1ый поиск ППР');

  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, 'Документ 2002*', (['*форма р 14001*'])])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'форма р-14001']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    if not FindInList(docsName) then
      Result := ErrorResult('Результат 2ого поиска ППР не соответствует эталону');
  end
  else
    Result := ErrorResult('Не получилось произвести 2ой поиск ППР');

  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.12: По контекстам:
  Шаромов сюрвея Устюгом
  и
  Шаромова сюрвея Устюг

  Должен находиться документ 2204, и при открытии, выделяться слова «Шармов», «сюрвеем» и «Устюге».
}
function  HLTC77_1_1_24_25_12_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2204*', (['*Шаромов заведует сюрвеем в Устюге*'])])      
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'Шаромов сюрвея Устюгом']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат 1ого поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести 1ый поиск ППР');

  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'Шаромова сюрвея Устюг']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    if not FindInList(docsName) then
      Result := ErrorResult('Результат 2ого поиска ППР не соответствует эталону');
  end
  else
    Result := ErrorResult('Не получилось произвести 2ой поиск ППР');

  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.13: По запросу: дтп
  Должны находиться документы:
  - Picture 2202 – с подсвеченным контекстом «дорожно-транспортное происшествие»
  - Picture 2203 – с подсвеченным контекстом «дорожное транспортное происшествие»

  НЕ должны находиться документы:
  - Picture 2194 – с подсвеченным контекстом «дорожное вставка транспортное вставка происшествие»
  - Picture 2195 – с подсвеченным контекстом «дорожно-транспортное вставка происшествие»
}
function  HLTC77_1_1_24_25_13_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2202*', (['*дорожно-транспортное происшествие*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2203*', (['*дорожное транспортное происшествие*'])]),
      ([FL_NOT_EXISTS, '*2194*']),
      ([FL_NOT_EXISTS, '*2195*'])                  
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'дтп']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.14: По запросу: форс-мажор
  Должны найтись документы:
  - Picture 2196 – с подсвеченным контекстом «форс-мажор»
  - Picture 2197 – с подсвеченным контекстом «форс мажор»
  - Picture 2198 – с подсвеченным контекстом «непреодолимая сила»
}
function  HLTC77_1_1_24_25_14_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2196*', (['*форс-мажор*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2197*', (['*форс мажор*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2198*', (['*непреодолимая сила*'])])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'форс-мажор']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.15: По запросу: сервисцентр
  Должны найтись документы:
  - Picture 2199 – с подсвеченным контекстом «сервисный центр»
  - Picture 2200 – с подсвеченным контекстом «сервисцентр»
  - Picture 2201 – с подсвеченным контекстом «сервис-центр»
}
function  HLTC77_1_1_24_25_15_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2199*', (['*сервисный центр*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2200*', (['*сервисцентр*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2201*', (['*сервис-центр*'])])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'сервисцентр']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.16: Рамочное словосочетание
  По контексту: рамочное словосочетание
  Должны находиться:
  - Документ 56021 – с подсвеченным контекстом «СЛОВ», «РАМОЧНЫХ СОЧЕТАНИЕ»
  - Документ 5601 – с подсвеченным контекстом «РАМОЧНЫЕ», «СОЧЕТАНИЯ» и «СЛОВ»

  НЕ должен находиться:
  - Документ 56031 – с подсвеченным контекстом «РАМОЧНОЕ», «СОЧЕТАНИЕ» и «СЛОВ».
  Т.к. максимальное расстояние между словами для этого синонима N<=(3+2), а в 56031 оно = 7.
}
function  HLTC77_1_1_24_25_16_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*56021*', (['*СЛОВ*РАМОЧНЫХ СОЧЕТАНИЕ*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*5601*', (['*РАМОЧНЫЕ*СОЧЕТАНИЯ*СЛОВ*'])]),
      ([FL_NOT_EXISTS, '*56031*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'рамочное словосочетание']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.17: По запросу: 08.04.1979
  Должен находиться топик 2217 с подсвеченным «8 апреля 1979».
}
function  HLTC77_1_1_24_25_17_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_2STRING, '*2217*', (['*8 апреля 1979*'])])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'08.04.1979']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.18: По запросу: ФАП
  Помимо прочих, должны найтись документы:
  - Picture 2221 – с контекстом: ФАП
  - Picture 2222 – с контекстом: федеральные авиационные правила
  - Picture 2223 – с контекстом: фельдшерско-акушерский пункт
}
function  HLTC77_1_1_24_25_18_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2221*', (['*ФАП'])]),
      ([FL_EXISTS_CONTEXT_IN_2STRING, '*2222*', (['*федеральные авиационные*правила*'])]),
      ([FL_EXISTS_CONTEXT_IN_2STRING, '*2223*', (['*фельдшерско-акушерский*пункт*'])])            
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'ФАП']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.25.19: По запросу: ФАПА
  Помимо прочих, должны найтись документы:
  - Picture 2219 – с контекстом: ФАПА
  - Picture 2222 – с контекстом: федеральные авиационные правила
  - Picture 2223 – с контекстом: фельшерско-акушерский пункт
  - Picture 2224 – с контекстом: ФАПу
  - Picture 2225 – с контекстом: ФАПой
  - Picture 2226 – с контекстом: ФАПом
}
function  HLTC77_1_1_24_25_19_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2219*', (['*ФАПА*'])]),
      ([FL_EXISTS_CONTEXT_IN_2STRING, '*2222*', (['*федеральные авиационные*правила*'])]),
      ([FL_EXISTS_CONTEXT_IN_2STRING, '*2223*', (['*фельдшерско-акушерский*пункт*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2224*', (['*ФАПу*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2225*', (['*ФАПой*'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*2226*', (['*ФАПом*'])])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'ФАПА']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	ErrorResult('Результат поиска ППР не соответствует эталону');
  end
  else
    ErrorResult('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.21.1 По контексту: бронеавтомобиль
    Должен найтись документ 3365, с подсвеченным "бронированный автомобиль"
}
function  HLTC77_1_1_24_25_21_1_Execute(var  current_state: OleVariant): OleVariant;
const
  SEARCH_CONTEXT = 'бронеавтомобиль';
  RES_CONTEXT = 'бронированный автомобиль';
var
  cardData, docsName;
begin
try      
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_SEARCH_AND_HIGHLIGHT, '*3365*', ([SEARCH_CONTEXT]), RES_CONTEXT])
    ];
  cardData :=
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		SEARCH_CONTEXT]) ])
      ])
    ];
  if not SearchInPPR(cardData) then
  	Raise('Не получилось выполнить поиск ППР');
  Result := FindInList(docsName);
  if not Result then
    Raise('Результат поиска ППР не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.21.2 По запросу: бронепоезд
    Должен найтись топик 3363 с контекстом "бронепоезд"
}
function  HLTC77_1_1_24_25_21_2_Execute(var  current_state: OleVariant): OleVariant;
const
  SEARCH_CONTEXT = 'бронепоезд';
  RES_CONTEXT = 'Бронепоезд';
var
  cardData, docsName;
begin
try      
  Result := false;
  docsName := 
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*3363*', ([RES_CONTEXT])])
    ];
  cardData :=
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		SEARCH_CONTEXT]) ])
      ])
    ];
  if not SearchInPPR(cardData) then
  	Raise('Не получилось выполнить поиск ППР');
  Result := FindInList(docsName);
  if not Result then
    Raise('Результат поиска ППР не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.25.22.1: По запросу: 7 сентября 1812
    Должен находиться документ 3371 с контекстном "7 СЕНТЯБРЯ 1812"
    Должен находиться документ 3373 с контекстом "1812 СЕНТЯБРЯ 7"
    (строгости больше нет)

    НЕ должен находиться документ 3372 с контекстом "7.09.1812"
    (потому что там ".09.", а даты до 1900 года не синонимизируются)
}
function  HLTC77_1_1_24_25_22_1_Execute(var  current_state: OleVariant): OleVariant;
const
  SEARCH_CONTEXT = '7 сентября 1812';
  RES_CONTEXT1 = '7 СЕНТЯБРЯ 1812';
  RES_CONTEXT2 = '1812 СЕНТЯБРЯ 7';
var
  cardData, docsName;
begin
try
  Result := false;
  docsName :=
    [
      ([FL_EXISTS_CONTEXT_IN_STRING, '*3371*', ([RES_CONTEXT1])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, '*3373*', ([RES_CONTEXT2])]),
      ([FL_NOT_EXISTS, '*3372*'])
    ];
  cardData :=
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		SEARCH_CONTEXT]) ])
      ])
    ];
  if not SearchInPPR(cardData) then
  	Raise('Не получилось выполнить поиск ППР');
  Result := FindInList(docsName);
  if not Result then
    Raise('Результат поиска ППР не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.26: Номера как устойчивые словосочетания
  HLTC77.1.1.24.26.1: В ППР в поле слова в названии ввести «01-05». Проверить, что найдутся 4 документа.
  HLTC77.1.1.24.26.2: В ППР в поле слова в названии ввести «01 05». Провести контекстный поиск в списке контекста «01-05». Проверить, что он найдется только в первых 4-х документах.
}
function  HLTC77_1_1_24_26_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin                        
  Result := False;
  //HLTC77.1.1.24.26.1
  docsName := 
    [
      ([FL_NUMBER, '4'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'01-05']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  //HLTC77.1.1.24.26.2
  docsName := 
    [
      ([FL_EXISTS, 'Строительные нормы и правила СНиП 5.01.05-85 "Нормы расхода материалов, изделий и труб на 1 млн.руб. сметной стоимости строительно-монтажных работ по объектам водохозяйственного строительства"*']),
      ([FL_EXISTS, 'Письмо Госэнергонадзора РФ и Госстроя РФ от 22, 20 ноября 2000 г. NN 32-01-05/87, 12-07/755 "О государственном энергетическом надзоре и работе с персоналом энергетических организаций системы жилищно-коммунального хозяйства Российской Федерации"']),
      ([FL_EXISTS, 'Письмо Минстроя РФ от 6 февраля 1996 г. N 01-05-25 "О нормах расхода топлива на работу оборудования спецмашин"']),
      ([FL_EXISTS, 'Письмо Госстроя РФ от 2 декабря 1997 г. N 01-05-197/28 О направлении приказа Госстроя РФ от 1 декабря 1997 г. N 17-122'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'01 05']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName) and Result;
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
   
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.26.3: В ППР в поле слова в тексте ввести «ЮК-1». Проверить, что найдутся 4 документа.
}
function  HLTC77_1_1_24_26_3_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin                        
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '4'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'ЮК-1']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.26.4: В ППР в поле слова в тексте ввести «01-06/1302». Проверить, что найдутся 3 документа.
}
function  HLTC77_1_1_24_26_4_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin                        
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '3'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'01-06/1302']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
HLTC77.1.1.24.26.5: В ППР в поле слова в названии ввести «N123». Проверить, что найдутся 14 документов.
}
function  HLTC77_1_1_24_26_5_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '14'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'N123']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.26.6: В ППР в поле СЛОВА В НАЗВАНИИ ввести 27.09.905022. Проверить, что найдется 1 документ (905021).
}
function  HLTC77_1_1_24_26_6_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin                        
  Result := False;
  docsName := 
    [
      ([FL_NUMBER, '1']),
      ([FL_EXISTS, '*905021*'])
    ];
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'27.09.905022']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.26.7: Проверить, что в ППР при поиске в поле "Слова в тексте" контекстов «кодекс-статья» и "кодекс статья"(последнее в кавычках) найдется одинаковое количество документов - 23
}
function  HLTC77_1_1_24_26_7_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, context, numberOfdocs, i;
begin
try      
  Result := true;
  for i:= 1 to 2 do
  begin   
    case i of
      1: begin context := 'кодекс-статья'; numberOfdocs := '23'; end;      
      2: begin context := '"кодекс статья"'; numberOfdocs := '23'; end;      
    end;  
    docsName := 
    [
      ([FL_NUMBER_BIG, numberOfdocs])
    ];
    cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		context]) ])
      ])
    ];
    if SearchInPPR(cardData) then
    begin
      if not FindInList(docsName) then
        Result := ErrorResult('Результат поиска ППР не соответствует эталону');
    end
    else
    	Raise('Не получилось выполнить поиск ППР');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.26.8: Проверить, что в ППР при поиске в поле слова в названии контекстов 
  «правила-дорожного-движения» и "правила дорожного движения"(последнее в кавычках) найдется одинаковое количество документов - 3.
}
function  HLTC77_1_1_24_26_8_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, context, i;
begin
try      
  Result := true;
  for i:= 1 to 2 do
  begin   
    case i of
      1: begin context := 'правила-дорожного-движения';   docsName := [([FL_NUMBER, '3'])]; end;
      2: begin context := '"правила дорожного движения"'; docsName := [([FL_NUMBER, '3'])]; end;      
    end;  

    cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		context]) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ])
    ];
    if SearchInPPR(cardData) then
    begin
      if not FindInList(docsName) then
        Result := ErrorResult('Результат поиска ППР не соответствует эталону');
    end
    else
    	Raise('Не получилось выполнить поиск ППР');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.26.9: Проверить, что в ППР при поиске в поле слова в тексте контекстов «69-фз» и «69-ФЗ» 
найдется одинаковое количество документов – 21. Релевантность документов после поиска также должна совпадать 
в первом и втором запросах.
}
function  HLTC77_1_1_24_26_9_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, context, i;
begin
try      
  Result := true;
  for i:= 1 to 2 do
  begin   
    case i of
      1: begin context := '69-фз'; end;
      2: begin context := '69-ФЗ'; end;
    end;  
    docsName := 
    [
      ([FL_NUMBER, '21']),
      ([FL_EXISTS_RELEVANCE_INT, 'Федеральный закон от 31 марта 1999 г. N 69-ФЗ "О газоснабжении в Российской Федерации"', '41']),
      ([FL_EXISTS_RELEVANCE_INT, 'Документы, в которые вносятся изменения, вступающие в силу с 1 января 2002*', '13']),
      ([FL_EXISTS_RELEVANCE_INT, 'Письмо Госналогслужбы РФ от 5 ноября 1997 г. N ВЗ-6-03/772*', '0'])
    ];
    cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		context]) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ])
    ];
    if SearchInPPR(cardData) then
      Result := FindInList(docsName) and Result
    else
    	Raise('Не получилось выполнить поиск ППР');
  end;
  if not Result then
  	Raise('Результат поиска ППР не соответствует эталону'); 
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.26.10: Проверить, что при поиске в БП контекста «бело-синий цвет» найдется один документ 57001.
}
function  HLTC77_1_1_24_26_10_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
  Result := false;
  GoToMainMenu;
  docsName := 
    [
      ([FL_NUMBER, '1']),
      ([FL_EXISTS_INT, 'Документ 57001*'])
    ];
  if BaseSearch(nil, 'бело-синий цвет') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска БП не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск БП');
    
  GoToMainMenu;
end;

{
HLTC77.1.1.24.27: Преобразование дат.
Датами считать:
- четырехзначное число от 1800 до 2100
- записи вида xx/yy/zzzz или xx.yy.zzzz, где yy от 1 до 12
1. Если в строке запросе пользователя есть подстрока "дата г." или "дата года", то запрос надо преобразовать:
- искать "дата г." (или "дата года") как устойчивое словосочетание
- не искать "г." (или "года")
пример: введено "от 1/2/2004 года".
будет выполнено два запроса, "от 1/2/2004 года" (и "года" должно идти сразу за 2004), и "от 1/2/2004". Результаты будут объединены.
2. Если в строке запроса есть подстрока "датаг." или "датагода" (например, 2005года", или "1/2/2004г.", то перед "года" (или "г.") вставить пробел и обработать согласно пункту 1.

  HLTC77.1.1.24.27.1: Ввести «закон от 19.12.1991 г» в поле "слова в тексте". Проверить, что найдутся 14 документов.
}
function  HLTC77_1_1_24_27_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData, context_string, i;
begin
try      
  Result := true;
  for i:= 1 to 1 do
  begin   
    case i of
      1: begin context_string := 'закон от 19.12.1991 г';end;
      //2: begin context_string := '2005 г';end;
      //3: begin context_string := '2005г';end;
    end;  
    docsName := 
    [
      ([FL_NUMBER, '14']),
      ([FL_NUMBER_BIG, '14'])
    ];
    cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		context_string]) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];         
    if SearchInPPR(cardData) then
    begin
      Result := FindInList(docsName) and Result;
      if not Result then
      	Log.Error('Результат поиска ППР не соответствует эталону');
    end
    else
    	Raise('Возможно ошибка преобразования даты. Не получилось выполнить поиск ППР');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.28: Запросы на поиск документа
  HLTC77.1.1.24.28.1: Запросы I типа. К ним относятся запросы, начинающиеся с «О» или «Об». В этом случае начинается поиск по названиям. При этом, если максимальная релевантность документов меньше 3-х, то дополнительно запускается поиск по тексту, выбрасывая предлоги «о» и «об».
  Ввести в поле «слова в тексте» контекст «о царе Салтане». Должны найтись 	документы 57010 (релевантность 20), 2003 (релевантность 4), 2001 	(релевантность 0). В документе 2001 буква «о» подсвечиваться не должна.
}
function  HLTC77_1_1_24_28_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N57010*', '20']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ 2003*', '4']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ 2001*', '0'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'о царе Салтане']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов, результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
    
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_CAPTION, ([
    'о царе Салтане']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
   	Raise('Поиск не должен был пройти, возможно несоответствие релевантности документов');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.2.1: Ввести в поле «слова в тексте» контекст «Повеление царя боярам № REL-2 Про царицу и приплод». 
    Должно найтись 2 документа: 57011 (релевантность 66) и 57012 (релевантность 34).
}
function  HLTC77_1_1_24_28_2_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_INT, '*Документ 57011*', '66']),
    ([FL_EXISTS_RELEVANCE_INT, '*Документ 57012*', '34'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'Повеление царя боярам № REL-2 Про царицу и приплод']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.2.2: Ввести в поле «слова в тексте» контекст «35-УПК единолично». Не должно ничего найтись, т.к. номера 35-УПК нет в ТБ.
}
function  HLTC77_1_1_24_28_2_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    '35-УПК единолично']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  Result := not SearchInPPR(cardData);
  if not Result then
  	Log.Error('Поиск прошел, хотя не должен был');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.3: Запросы III типа. К ним относятся запросы, в которых указан документ + его структурная единица(пункт, статья, раздел, глава), после которой стоит число(целое, больше 1 и меньше 9999). В случае отсутствия числа, запрос рассматривается как обычный.
    HLTC77.1.1.24.28.3.1: После структурной единицы(статья, глава, раздел) идет число, а далее полное или сокращенное наименования кодекса.
    Пример1. "Статья 23 Налогового кодекса". Релевантность 250.
    Пример2. "ГК статья 23". Релевантность 250.
}
function  HLTC77_1_1_24_28_3_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_INT, 'Налоговый кодекс Российской Федерации*\*Статья 23*', '250'])
  ];
  if BaseSearch(nil, 'Статья 23 Налогового кодекса') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск БП');

  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_INT, 'Гражданский кодекс Российской Федерации*\*Статья 23*', '250'])
  ];
  if BaseSearch(nil, 'ГК статья 23') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.3.2: После структурной единицы(статья, глава, раздел) идет число, а далее указан тип 
  документа. Например, «глава 1 письма о кодексе синонимов». Должен построиться список, содержащий Документ 57015 с релевантностью больше 200.
}
function  HLTC77_1_1_24_28_3_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName :=
  [
    ([FL_EXISTS_RELEVANCE_MORE_INT, '*Документ 57015*', '200'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'глава 1 письма о кодексе синонимов']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.3.3: После структурной единицы(пункт) идет число, а далее еще одна структурная единица(статья, глава, раздел). 
  В этом случае из запроса отбрасывается «пункт N» и запрос обрабатывается по правилам 1 и 2. 
  После найденных документов в список добавляется результат введенного контекстного запроса «пункт N ...». 
  Например, по запросу «пункт 1 главы 1 письма о кодексе синонимов» релевантность первого должна быть больше 200.
}
function  HLTC77_1_1_24_28_3_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_MORE_INT, '*Документ 57015*', '200'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'пункт 1 главы 1 письма о кодексе синонимов']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.3.4: Проверить, что по контексту «статья 1 закона о почтовой связи» должно найтись 5 документов.
}
function  HLTC77_1_1_24_28_3_4_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_NUMBER, '5'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'статья 1 закона о почтовой связи']) ])
    ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.3.5: Проверить, что по контексту «статья 1.2. коап» должен находится первый документ "Кодекс РФ об административных правонарушениях..." с релевантностью больше 250.
}
function  HLTC77_1_1_24_28_3_5_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_MORE_INT, 'Кодекс Российской Федерации об административных правонарушениях*', '250'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'статья 1.2. коап']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов или результат поиска не верен.');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.28.8.1: В БП ищем контекст:
  ст 25 95-ФЗ

  Должны получить список, включающий документы:
  - 5601 – находится контекст «статья 25». Релевантность больше 100.
  - 56021 – находится контекст «статья 25» и «95-ФЗ». Релевантность меньше 100.
}
function  HLTC77_1_1_24_28_8_1_Execute(var  current_state: OleVariant): OleVariant;
var docsName;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_MORE_INT, 'Документ N5601*', '100']),
    ([FL_EXISTS_RELEVANCE_LOWER_INT, 'Документ N56021*', '100'])
  ];
  if BaseSearch(nil, 'ст 25 95-ФЗ') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск БП');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.8.2: Запрос в кавычках.
  Ввести в БП контекст «ст 25 95-ФЗ» (в кавычках) – не должен найтись документ 5601.

    Что-либо найтись может только в том случае, если в документе встречается именно этот контекст.
    В ТБ24 на 29.12.2011 таких документов не было, так что список не строился.
}
function  HLTC77_1_1_24_28_8_2_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = '"ст 25 95-ФЗ"';  
begin
try      
  GoToMainMenu;
  
  Result := not BaseSearch(nil, CONTEXT);
  if not Result then
  	Log.Error('Поиск БП прошел по контексту: "' + CONTEXT + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.9: Запросы V типа
    HLTC77.1.1.24.28.9.1: В БП пишем контекст: 10-ФЗ глава 1

    Должны получить список, включающий документы:
    - 56031 – находится контекст «глава 1». Релевантность больше 100.
    - 5605 – находится контекст «10-ФЗ» и «Глава 1». Релевантность меньше 100, но больше, чем у топика 56041
    - 56041 – находится контекст «Глава 1» и «10-ФЗ». Релевантность меньше 100, и меньше, чем у 5605.    
}
function  HLTC77_1_1_24_28_9_1_Execute(var  current_state: OleVariant): OleVariant;
var docsName;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_MORE_INT, 'Документ N56031*', '100']),
    ([FL_EXISTS_RELEVANCE_LOWER_INT, 'Документ N5605*', '100']),    
    ([FL_EXISTS_RELEVANCE_MORE_INT, 'Документ N5605*', '10']), // ...но больше, чем у топика 56041
    ([FL_EXISTS_RELEVANCE_LOWER_INT, 'Документ N56041*', '100']),        
    ([FL_EXISTS_RELEVANCE_LOWER_INT, 'Документ N56041*', '10']) // ...и меньше, чем у 5605
  ];
  if BaseSearch(nil, '10-ФЗ глава 1') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск БП');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.28.9.2: Запрос в кавычках
    Ввести в БП контекст «10-ФЗ глава 1» (в кавычках) – не должен найтись документ 56041.

    Что-либо найтись может только в том случае, если в документе встречается именно этот контекст.
    В ТБ24 на 29.12.2011 таких документов не было, так что список не строился.
}
function  HLTC77_1_1_24_28_9_2_Execute(var  current_state: OleVariant): OleVariant;
var docsName;
begin
try      
  docsName := 
  [                             
    ([FL_NOT_EXISTS, 'Документ N56041*'])
  ];
  Result := not BaseSearch(nil, '"10-ФЗ глава 1"');
  if not Result then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.29: Проверить, что если контекст находится в поле слова в тексте, то поиск идет и 
  по названиям документов тоже. Ввести «Типография Министерства внутренних дел». Проверить, что найдется документ 
  «Право суда и помилования как прерогативы Российской державы, К.Ф.Хартулари , С-Петербург, Типография Министерства внутренних дел, 1899 г.»
}
function  HLTC77_1_1_24_29_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS, 'Право суда и помилования как*Типография Министерства внутренних дел*1899*'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'Типография Министерства внутренних дел']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30: Исправление опечаток
    HLTC77.1.1.24.30.1: В ППР в поле «слова в названии» ввести «банкы» и нажать искать. 
    Должно показаться сообщение с нераспознанным контекстом и предложениями исправить запрос и продолжить поиск, 
    а введенный контекст стать красным. Нажать «исправить запрос», должны вернуться к полю контекста.
}
function  HLTC77_1_1_24_30_1_Execute(var  current_state: OleVariant): OleVariant;
const
  WORD_IN_CAPTION = 'банкы';
var
  cardData;
begin
try      
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_CAPTION, ([
    WORD_IN_CAPTION]) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Нет']) ]) ]) 
  ];
     
  if not SearchInPPR(cardData, 'IsContinueAfterMisprint:=false') then
  begin
    Result := StringCompare(WORD_IN_CAPTION, GetObjectText(GetFromPPR('КАРТОЧКА ЗАПРОСА').Selection));
    if not Result then
      Raise('Фокус не перешел к содержимому поля или неправильно работает механизм опечаток');
  end
  else
  	Raise('Поиск ППР прошел!');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30: Исправление опечаток
    HLTC77.1.1.24.30.2: В ППР в поле «слова в тексте» ввести «бальшой даговор» и нажать искать. 
    Должно показаться сообщение с нераспознанным контекстом и предложениями исправить запрос и продолжить поиск,
    а введенный контекст должен исправиться на «бальшой договор», при этом «бальшой» подсвечен красным. 
    Нажать «продолжить поиск», должно показаться сообщение о том, что ничего не найдено.
}
function  HLTC77_1_1_24_30_2_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, cardDataRes;
begin
try      
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'бальшой даговор']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Нет']) ]) ]) 
  ];
  cardDataRes :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'бальшой договор']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Нет']) ]) ]) 
  ];   
     
  if not SearchInPPR(cardData) then
  begin
    Result := CompareQueryCardData(cardDataRes, ExtractQueryCardData(GetFromPPR('КАРТОЧКА ЗАПРОСА')));
    if not Result then
      Raise('Видимо отличается содержимое контестного поля, возможно не исправлено 2-ое слово с опечатками.');
  end
  else
  	Raise('Поиск ППР прошел!');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.3: В БП ввести контекст «роздельное разъединение». Контекст должен автоматически исправиться на «раздельное разъединение» и должен найтись один документ. 
}
function  HLTC77_1_1_24_30_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  Result := false;
  GoToMainMenu;
  docsName := 
    [
      ([FL_NUMBER_BIG, '1'])
    ];
  if BaseSearch(nil, 'роздельное разъединение') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска БП не соответствует эталону, видимо не были исправлены опечатки в запросе');
  end
  else
    Raise('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.4: Открыть конституцию и провести поиск в документе контекста «демакратическое гасударство».
    Контекст должен автоматически исправиться на «демократическое государство» и подсветить найденный результат.
}
function  HLTC77_1_1_24_30_4_Execute(var  current_state: OleVariant): OleVariant;
const
  DOC_NUM = 10003000;
  HL_WORDS = 'демократическое*государство'; 
begin
try      
  Result := false;
  if not OpenDocByNumber(DOC_NUM) then
    Raise('Не получилось открыть "Конституцию РФ"');
  Result := BaseSearchInDocument(GetEditor, 'демакратическое гасударство');
  if not Result then
  	Raise('Поиск БП не прошел, видимо в запросе не были исправлены опечатки');
  if not CheckHighlightWords(GetEditor, HL_WORDS) then
  	Raise('В документе ' + IntToStr(DOC_NUM) + ' не выделены слова "' + HL_WORDS + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.5: В ППР в поле «слова в тексте» ввести «яхонтово» и нажать искать. Должно показаться сообщение с нераспознанным контекстом и предложениями исправить запрос и продолжить поиск, а введенный контекст стать красным. Нажать «продолжить поиск». Должно найтись 2 документа.
}
function  HLTC77_1_1_24_30_5_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '2'])
  ];
  cardData := 
  [                
  	CARD_PPR, ([([
  	FD_WORDS_IN_TEXT, ([
  		'яхонтово']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Нет']) ])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.6: Исправление опечаток из словаря базы. В БП ввести «дыгывыр» и провести поиск. 
  Контекст должен исправиться на «договор» и должен открыться список.
}
function  HLTC77_1_1_24_30_6_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  Result := false;
  GoToMainMenu;
  docsName := 
    [
      ([FL_NUMBER_BIG_MORE, '50'])
    ];
  if BaseSearch(nil, 'дыгывыр') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска БП не соответствует эталону, видимо не были исправлены опечатки в запросе');
  end
  else
    Raise('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.7: Проверить что при вводе в БП слова "акно" оболочка не заменяет его на "окно" или еще что-либо, 
  а подсвечивает красным и говорит, что это опечатка.
}
function  HLTC77_1_1_24_30_7_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, res;
begin
try      
  Result := false;
  GoToMainMenu;
  res := BaseSearch(nil, 'акно' ,'IsExtendedResult:=true;IsContinueAfterMisprint:=false;');
  if not GetParam(res, 'Result', true) then
  begin
    Result := StringCompare('*запрос*не*дать*коррект*', GetParam(res, 'InfoMsgText', '')); 
    if not Result then
      Raise('Не найдено окно предупреждения об опечатке в слове "акно"');
  end
  else
    Raise('Поиск БП почему-то прошел');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30: Исправление опечаток
    HLTC77.1.1.24.30.9: В БП ввести контекст: «пырт» (без кавычек)

    Он не должен исправиться на «порт».
    Найтись должно то же, что и по контексту «пепелац».    
}
function  HLTC77_1_1_24_30_9_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'пепелац';
var
  docsName;
begin
try      
  Result := false;
  GoToMainMenu;
  docsName := 
    [
      ([FL_NUMBER_BIG, '1']),
      ([FL_EXISTS_INT, 'Документ N5601*'])
    ];
  if BaseSearch(nil, 'пырт', 'IsCloseWindow:=false') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Result := ErrorResult('Результат поиска БП не соответствует эталону, видимо не были исправлены опечатки в запросе');
    if not StringCompare(CONTEXT, GetValueFromBaseSearch) then
      Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT + '"');
  end
  else
    Raise('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.10: В БП запрос: мама мыла hfve  Должен исправляться на: мама мыла раму
}
function  HLTC77_1_1_24_30_10_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'мама мыла раму';
var
  docsName;
begin
try      
  Result := false;
  GoToMainMenu;
  if BaseSearch(nil, 'мама мыла hfve', 'IsCloseWindow:=false') then
  begin
    Result := StringCompare(CONTEXT, GetValueFromBaseSearch); 
    if not Result then
      Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT + '"');
  end
  else
    Raise('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.11: В БП запрос: ccskrf на документ 2002, ghbyflkt;fobq и 213 сегменту
    Должен исправляться на: ссылка на документ 2002, принадлежащий и 213 сегменту
}
function  HLTC77_1_1_24_30_11_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'ссылка на документ 2002, принадлежащий и 213 сегменту';
var
  docsName;
begin
try      
  Result := false;
  GoToMainMenu;
  if BaseSearch(nil, 'ccskrf на документ 2002, ghbyflkt;fobq и 213 сегменту', 'IsCloseWindow:=false') then
  begin
    Result := StringCompare(CONTEXT, GetValueFromBaseSearch); 
    if not Result then
      Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT + '"');
  end
  else
    Raise('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.12: Синонимия дат с прилипшими буквами
    В БП ввести запросы:
    Приказ Минфина РФ от30 декабря 2008г. N 148н
    Приказ Минфина РФ от 30.12.2008г. N 148н
    Приказ Минфина РФ от30.12.2008 г. N 148н
    Приказ Минфина РФ от30.12.2008г. N 148н

    Во всех случаях должен найтись документ:
    Приказ Минфина РФ от 30 декабря 2008 г. N 148н "Об утверждении Инструкции по бюджетному учету"
}
function  HLTC77_1_1_24_30_12_Execute(var  current_state: OleVariant): OleVariant;
var
  contexts, docsName, i;
begin
try      
  Result := true;
  contexts := 
    [
      'Приказ Минфина РФ от30 декабря 2008г. N 148н',
      'Приказ Минфина РФ от 30.12.2008г. N 148н',
      'Приказ Минфина РФ от30.12.2008 г. N 148н',
      'Приказ Минфина РФ от30.12.2008г. N 148н'
    ];
  docsName := 
    [                   
      ([FL_EXISTS_INT, 'Приказ Минфина РФ от 30 декабря 2008 г. N 148н*'])
    ];

  for i:= VarArrayLowBound(contexts, 1) to VarArrayHighBound(contexts, 1) do
  begin
    GoToMainMenu;
    if BaseSearch(nil, contexts[i], 'IsCloseWindow:=false') then
    begin
      if not FindInList(docsName) then
      	Result := ErrorResult('Результат поиска БП не соответствует эталону, запрос: ' + contexts[i]);
    end
    else
      Result := ErrorResult('Не получилось произвести поиск БП: ' + contexts[i]);
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.30.13: Слеши не должны удаляться из строки БП
  Найти контексты:
  Ввести контексты: (отличаются направлением слеша)
  топик-2009\080612
  топик-2009/060612

  В строке БП, запрос не должен измениться: слеш направлен в ту же сторону, «-» не пропал.
}
function  HLTC77_1_1_24_30_13_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'топик-2009\080612';
  CONTEXT2 = 'топик-2009/060612';  
begin
try      
  Result := true;
  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести 1ый поиск БП');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('1ый контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');

  if not BaseSearch(nil, CONTEXT2, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести 2ой поиск БП');
  if not StringCompare(CONTEXT2, GetValueFromBaseSearch) then
    Result := ErrorResult('2ой контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT2 + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.30.14.1: Найти контекст: м.л.морозова
  После построения списка, убедиться, что в строке БП, контекст не изменился (точки никуда не переехали и т.п.).
}
function  HLTC77_1_1_24_30_14_1_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'м.л.морозова';
begin
try      
  Result := true;
  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести поиск БП');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.14.2: Найти контекст: с.п.рязанское
    После построения списка, убедиться, что в строке БП, контекст не изменился (точки никуда не переехали и т.п.).
}
function  HLTC77_1_1_24_30_14_2_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'с.п.рязанское';
begin
try      
  Result := true;
  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести поиск БП');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.14.3: Найти контекст: постановление правительства рф от 16.04.2003 N 255 (с изм.и.доп)
    После построения списка, убедиться, что в строке БП, контекст не изменился (скобки не пропали, точки никуда не переехали и т.п.).
}
function  HLTC77_1_1_24_30_14_3_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'постановление правительства рф от 16.04.2003 N 255 (с изм.и.доп)';
begin
try      
  Result := true;
  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести поиск БП');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.14.4: Найти контекст: комментарий к упк науч.ред. в.т.томин
    Вылезет подтверждение, нажать «Продолжить поиск»
    После построения списка, убедиться, что в строке БП, контекст не изменился («науч»  не заменилось на «научить», точки никуда не переехали и т.п.).
}
function  HLTC77_1_1_24_30_14_4_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'комментарий к упк науч.ред. в.т.томин';
begin
try      
  Result := true;
  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести поиск БП');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.14.5: Найти контекст: комментарий к тк рф отв.ред. гейхман сидоренко
    Вылезет подтверждение, нажать «Продолжить поиск»
    После построения списка, убедиться, что в строке БП, контекст не изменился («отв»  не заменилось на «тов», точки никуда не переехали и т.п.).
}
function  HLTC77_1_1_24_30_14_5_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'комментарий к тк рф отв.ред. гейхман сидоренко';
begin
try      
  Result := true;
  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести поиск БП');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.14.6: Найти контекст: справочник кадровика 7 изд. перераб. и доп.
    После построения списка, убедиться, что в строке БП, контекст не изменился ("изд"  не заменилось на "издаю", точки никуда не переехали и т.п.).
}
function  HLTC77_1_1_24_30_14_6_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'справочник кадровика 7 изд. перераб. и доп.';
begin
try      
  Result := true;
  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести поиск БП');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.30.15: Разделители и цифры
  Проверить для контекстов:
  пырт0123,пырт/пырт.пырт_пырт
  и
  пырт,пырт/0123.пырт_пырт

  При нажатии «Найти», ни один «пырт» не должен исправиться на «пепелац».
  Ни один разделитель не должен пропасть.
  
  пока Monitored, см. http://mdp.garant.ru/pages/viewpage.action?pageId=390582200 
}
function  HLTC77_1_1_24_30_15_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'пырт0123,пырт/пырт.пырт_пырт';
  CONTEXT2 = 'пырт,пырт/0123.пырт_пырт';
begin
try      
  Result := true;
  GoToMainMenu;
  BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('1ый контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');

  BaseSearch(nil, CONTEXT2, 'IsCloseWindow:=false');
  if not StringCompare(CONTEXT2, GetValueFromBaseSearch) then
    Result := ErrorResult('2ой контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT2 + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.16: По запросу: 1.07.94 N 01-04-89
    Должен находиться документ:
    Письмо Госстроя РФ от 1 июля 1994 г. N 01-04-89 "О льготах по оплате жилья и коммунальных услуг"
}
function  HLTC77_1_1_24_30_16_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_EXISTS, 'Письмо Госстроя РФ от 1 июля 1994 г. N 01-04-89*'])
  ];
  cardData := 
  [                
  	CARD_PPR, 
    ([ 
      ([FD_WORDS_IN_TEXT, (['1.07.94 N 01-04-89'])])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.17: По запросу: 22.08.00 N 04-03-17
    Должен находиться документ:
    Письмо Департамента налоговой политики Минфина РФ от 22 августа 2000 г. N 04-03-17 О порядке применения НДС при перепродаже украинских товаров на территории РФ
}
function  HLTC77_1_1_24_30_17_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_EXISTS, 'Письмо Департамента налоговой политики Минфина РФ от 22 августа 2000 г. N 04-03-17*'])
  ];
  cardData := 
  [                
  	CARD_PPR, 
    ([ 
      ([FD_WORDS_IN_TEXT, (['22.08.00 N 04-03-17'])])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.18: По запросу: 29.11.99 N02-1-16
    Должен находиться документ:
    Письмо МНС РФ от 29 ноября 1999 г. N 02-1-16 О льготах при налогообложении прибыли, полученной от вновь созданных производств
}
function  HLTC77_1_1_24_30_18_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_EXISTS, 'Письмо МНС РФ от 29 ноября 1999 г. N 02-1-16*'])
  ];
  cardData := 
  [                
  	CARD_PPR, 
    ([ 
      ([FD_WORDS_IN_TEXT, (['29.11.99 N02-1-16'])])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.30.19: По запросу: 16.01.1998г. 05-03/79
    Должен находиться документ:
    Письмо Представительства таможенной службы РФ при таможенной службе Республики Беларусь от 16 января 1998 г. N 05-03/79 О результатах заседания Экономического Суда СНГ, проходившего 13 и 15 января 1998 г. в г. Минске
}
function  HLTC77_1_1_24_30_19_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_EXISTS, 'Письмо Представительства таможенной службы РФ при таможенной службе Республики Беларусь от 16 января 1998 г. N 05-03/79*'])
  ];
  cardData := 
  [                
  	CARD_PPR, 
    ([ 
      ([FD_WORDS_IN_TEXT, (['16.01.1998г. 05-03/79'])])
    ]) 
  ];         
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.31.2: В БП ввести «кайзер». Проверить, что найдутся 2 документа, в которых будет найден контекст "кайзеру"
}
function  HLTC77_1_1_24_31_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  Result := false;
  GoToMainMenu;
  docsName := 
    [
      ([FL_NUMBER_BIG, '2']),
      ([FL_EXISTS_CONTEXT_IN_STRING, 'Документ N56021*\*кайзеру', (['кайзеру'])]),
      ([FL_EXISTS_CONTEXT_IN_STRING, 'Документ N5601*\*кайзеру', (['кайзеру'])])
    ];
  if BaseSearch(nil, 'кайзер') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска БП не соответствует эталону');
  end
  else
    Raise('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.31.3: Проверить, что при поиске в БП контекстов «петрокам»(в кавычках и без) и «петрокам!» 
    будет найден и подсвечен искомый контекст в документе 5601.
}
function HLTC77_1_1_24_31_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, contexts, i;
begin
try      
  Result := true;
  
  contexts := ['петрокам', '"петрокам"', 'петрокам!'];
  docsName := 
  [
    ([FL_EXISTS, '*Документ*N5601*'])
  ];

  for i := VarArrayLowBound(contexts, 1) to VarArrayHighBound(contexts, 1) do
  begin   
    GoToMainMenu;
    
    if BaseSearch(nil, contexts[i]) then
    begin
      if not FindInList(docsName) then
        Result := ErrorResult('Результат поиска БП по запросу "' + contexts[i] + '" не соответствует эталону');
    end
    else
      Raise('Результат поиска БП не соответствует эталону');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.32: Транслитерация
    HLTC77.1.1.24.32.1: В ППР в поле «слова в тексте» ввести «gtgtkfw». Проверить, что найдется документ 5601 по контексту «пепелац».
}
function  HLTC77_1_1_24_32_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
try      
  Result := false;
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'gtgtkfw']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Нет']) ]) ]) 
  ];
  docsName := 
    [
      ([FL_NUMBER, '1']),
      ([FL_EXISTS_CONTEXT_SEARCH, 'Документ N5601*',(['пепелац'])])
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону, возможно транслитерация не была выполнена');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.32.2: В БП ввести «ak'i njgbr». Проверить, что найдутся 6 документов по контексту «флэш топик».
}
function  HLTC77_1_1_24_32_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  Result := false;
  GoToMainMenu;
  docsName := 
    [
      ([FL_NUMBER_BIG, '6'])
    ];
  if BaseSearch(nil, 'ak''i njgbr') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска БП не соответствует эталону, возможно транслитерация не была выполнена');
  end
  else
    Raise('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.33: Ручные маски
    HLTC77.1.1.24.33.1: В ППР в поле «слова в тексте» ввести «блок 100». Проверить, что в списке присутствует документ 2001 и его релевантность 30.
}
function  HLTC77_1_1_24_33_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_INT, '*Документ 2001*', '30'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'блок 100']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.33.2: В БП ввести «ручная маска». Проверить, что в списке присутствует документ 2001 и его релевантность = 30.
}
function  HLTC77_1_1_24_33_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [                             
    ([FL_EXISTS_RELEVANCE_MORE_INT, '*Документ 2001*', '29'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'ручная маска']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.33.3: В ППР в поле «слова в тексте» ввести «четыре пять шесть семь», в поле номер выбрать HANDMASK. 
  Должно найтись 5 документов, отсортированных в порядке уменьшения релевантности. Релевантность в статусной строке должна соответствовать релевантности, указанной в названиях документов.
}
function HLTC77_1_1_24_33_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56019*', '37']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56017*', '33']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56018*', '12']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56015*', '4']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ N56016*', '4'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'четыре пять шесть семь']) ]),([
   FD_NUMBER, ([
    'НАNDМАSК']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Возможно несоответствие релевантности документов. Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.34: Проверка контекстов, отсутствующих в библиотеке морфологии
    HLTC77.1.1.24.34.1: В ППР в поле «слова в тексте» ввести контекст «БЕНЗОТРИФТОРИД». Должно найтись 2 документа.
}
function HLTC77_1_1_24_34_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '2'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'БЕНЗОТРИФТОРИД']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.34.2: В БП ввести контекст «гимов». В сообщении об опечатках нажать искать. Должно найтись 5 документов. В документе 2008 должен быть подсвечен контекст гимиче.
}
function  HLTC77_1_1_24_34_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  Result := false;
  GoToMainMenu;

  docsName := 
    [
      ([FL_NUMBER_BIG, '5']),
      ([FL_EXISTS, '*2008*'])
    ];
  if BaseSearch(nil, 'гимов') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска БП не соответствует эталону');
  end
  else
    Raise('Не получилось произвести поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.35: Поиск названий блоков
    HLTC77.1.1.24.35.1: В ППР в поле «слова в тексте» ввести контекст девять-тысяч-шестнадцать. Ничего не должно найтись.
}
function  HLTC77_1_1_24_35_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData;
begin
try      
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'девять-тысяч-шестнадцать']) ])
    ]) 
  ];   
  Result := not SearchInPPR(cardData);
  if not Result then
   	Raise('ППР прошел, но не должен был');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.35.2: В ППР в поле «слова в тексте» ввести контекст «Блок 10 в документе девять тысяч семнадцать в базе от 24 сентября». Должен найтись документ 9017.
}
function HLTC77_1_1_24_35_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS, 'Документ 9017*'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'Блок 10 в документе девять тысяч семнадцать в базе от 24 сентября']) ])
    ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.35.3: В БП ввести контекст в кавычках "девять тысяч восемнадцать". Ничего не должно найтись.
}
function HLTC77_1_1_24_35_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    '"девять тысяч восемнадцать"']) ])
    ]) 
  ];   
  Result := not SearchInPPR(cardData);
  if not Result then
   	Raise('ППР прошел, но не должен был');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.35.4: В БП ввести «девять тысяч девятнадцать». Должен найтись документ 9019.
}
function HLTC77_1_1_24_35_4_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  docsName := 
  [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS, 'Документ 9019*'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'девять тысяч девятнадцать']) ])
    ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.35.5: В БП ввести «fixnames». Должен найтись документ 2002.
}
function  HLTC77_1_1_24_35_5_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
  Result := false;
  GoToMainMenu;
  docsName := 
    [
      ([FL_NUMBER, '1']),
      ([FL_EXISTS_INT, 'ДОКУМЕНТ 2002*'])
    ];
  if BaseSearch(nil, 'fixnames') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска БП не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск БП');
    
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.35.6: В ППР в поле «слова в тексте» ввести «TextOnlyInName». 
    Должны найтись документы 2009, 9020, 2014, 2008, 2012 с релевантностью, соответственно: 36, 28, 28, 24, 20.
}
function HLTC77_1_1_24_35_6_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  Result := false;

  docsName := 
  [
    ([FL_EXISTS_RELEVANCE_INT, 'Документ 2009*', '33']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ 9020*', '25']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ 2014*', '25']),
    ([FL_EXISTS_RELEVANCE_INT, '*2008*', '21']),
    ([FL_EXISTS_RELEVANCE_INT, 'Документ с хитрой схемой и словами не из морфологии*', '17'])
  ];
 
  cardData :=
  [
    CARD_PPR, ([([
    FD_WORDS_IN_TEXT, ([
    'TextOnlyInName']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.36: Лексемы-исключения и словоформы
    HLTC77.1.1.24.36.1:  Ввес ти в БП «контекст будет искаться как псевдографика». 
    Должны найтись документы 2003, 2007, 2002, 56021, 5601.
    Причем в последнем слово "псевдографика" есть, но подсвечиваться не должно.
}
function HLTC77_1_1_24_36_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try      
  Result := false;

  docsName := 
  [
    ([FL_NUMBER, '5']),
    ([FL_EXISTS, 'Документ 2003*']),
    ([FL_EXISTS, 'Документ 2007*']),
    ([FL_EXISTS, 'Документ 2002*']),
    ([FL_EXISTS, 'Документ N56021*']),
    ([FL_EXISTS, 'Документ N5601*'])
  ];
 
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'контекст будет искаться как псевдографика']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Нет']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.36.2:  Ввести в БП «Пушкин которого будет царь». Должен найтись 1 документ, в котором помимо прочего будет подсвечен контекст «которого».
}
function HLTC77_1_1_24_36_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try
  Result := false;

  docsName := 
  [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS_CONTEXT_SEARCH_AND_HIGHLIGHT, 'Документ 2003*', (['Пушкин которого будет царь']), 'царем Пушкин'])
  ];
  cardData :=
  [
   CARD_PPR, ([([
   FD_WORDS_IN_TEXT, ([
    'Пушкин которого будет царь']) ]),([
   FD_INOPERATIVE_EDITION, ([
    'Да']) ]) ]) 
  ];   
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.35.7: В БП ввести «Это блок 200 топика 12024178». Должен найтись один документ с релевантностью 25.
}
function HLTC77_1_1_24_35_7_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  Result := false;
  GoToMainMenu;

  docsName := 
  [
    ([FL_NUMBER_BIG, '1']),
    ([FL_EXISTS_RELEVANCE_INT, 'Приказ Минтранса РФ от 14 мая 2001 г. N 84*', '25'])
  ];
  if BaseSearch(nil, 'Это блок 200 топика 12024178') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска БП не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.37.1: Ввести в БП «немало немного будто мультиссылка на все документы». 
  Проверить, что количество найденных документов совпадает с запросом «мультиссылка на все документы».
}
function HLTC77_1_1_24_37_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData1, cardData2, numOfDocs1, numOfDocs2;
begin
try      
  Result := false;
  cardData1 :=
  [
    CARD_PPR, ([([
    FD_WORDS_IN_TEXT, ([
      'немало немного будто мультиссылка на все документы']) ]),([
    FD_INOPERATIVE_EDITION, ([
      'Да']) ]) ]) 
  ];
  cardData2 :=
  [
    CARD_PPR, ([([
    FD_WORDS_IN_TEXT, ([
      'мультиссылка на все документы']) ]),([
    FD_INOPERATIVE_EDITION, ([
      'Да']) ]) ]) 
  ];   

  if SearchInPPR(cardData1) then
  begin
    numOfDocs1 := CountElementInList(GetList);
    if SearchInPPR(cardData2) then
    begin
      numOfDocs2 := CountElementInList(GetList);
      Result := numOfDocs1 = numOfDocs2;
      if not Result then
        Raise('Отличается количество документов результирующих списков, для первого поиска: ' + IntToStr(numOfDocs1) + ', второго: ' + IntToStr(numOfDocs2));
    end
    else
    	Raise('Не получилось выполнить поиск ППР №2');
  end
  else
  	Raise('Не получилось выполнить поиск ППР №1');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.37.2: Ввести в БП «ИЛИ НЕТ Далее четыре раза БЫЛ написана одна и та же формула взята из ИНАЯ редактора формул Архивариуса СФЕРА». 
    Проверить, что среди прочих найден документ 2001.
}
function HLTC77_1_1_24_37_2_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  Result := false;
  GoToMainMenu;

  docsName := 
  [
    ([FL_EXISTS, 'Документ 2001*'])
  ];
  if BaseSearch(nil, 'ИЛИ НЕТ Далее четыре раза БЫЛ написана одна и та же формула взята из ИНАЯ редактора формул Архивариуса СФЕРА') then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска БП не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск БП');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
 HLTC77.1.1.24.37.3: 
  По запросу: как Иван рубил дрова топором
    Должен найтись документ Picture 2207 с подсвеченными словами «Иван таскал» и «руками».
    Слово «хворост» не должно подсвечиваться.
}
function HLTC77_1_1_24_37_3_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'как Иван рубил дрова топором';
var
  docsName;
begin
try      
  Result := true;
  GoToMainMenu;

  docsName := 
  [
    ([FL_EXISTS_CONTEXT_SEARCH_AND_HIGHLIGHT, 'Picture 2207*', ([CONTEXT]), 'Иван таскал руками'])
  ];
  if not BaseSearch(nil, CONTEXT) then
  	Raise('Не получилось выполнить поиск БП');
  if not FindInList(docsName) then
    Raise('Результат поиска БП не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.39.1: Проверить, что при поиске контекстов 
    «пензаавтокомплекта», «алмазоабразивный», «алмазобрабатывающие», «холецистограммой», 
    «ввинчиваемости» найдется документ 2008 и найденный контекст будет в нем подсвечен.
}
function HLTC77_1_1_24_39_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, contexts, i;
begin
try      
  Result := true;
  contexts := ['пензаавтокомплекта', 'алмазоабразивный', 'алмазобрабатывающие', 'холецистограммой', 'ввинчиваемости'];
  docsName := 
  [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS, '*2008*'])
  ];

  for i := VarArrayLowBound(contexts, 1) to VarArrayHighBound(contexts, 1) do
  begin   
    GoToMainMenu;
    
    if BaseSearch(nil, contexts[i]) then
    begin
      if not FindInList(docsName) then
        Result := ErrorResult('Результат поиска БП по запросу "' + contexts[i] + '" не соответствует эталону');
    end
    else
      Raise('Результат поиска БП не соответствует эталону');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.40: В ТБ27, в панель БП забиваем: «документ законодательство нк» (без кавычек).
    Жмём «Найти». Должен получиться список не менее, чем из 14 документов, содержащий НК
}
function  HLTC77_1_1_24_40_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  Result := true;
  GoToMainMenu;
  docsName := 
    [
      ([FL_EXISTS, 'Налоговый кодекс*']),
      ([FL_NUMBER_BIG_MORE, '14'])
    ];
  if not BaseSearch(nil, 'документ законодательство нк') then
    Raise('Не получилось произвести поиск БП');
  if not FindInList(docsName) then
    Raise('Результат поиска БП не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.41: Добавление строки поиска
    Для полей контекстного поиска (слова в названиях/тексте) новая строка поиска должна добавляться:
    1. При нажатии кнопки «+»
    2. При нажатии Shift+Enter
    3. При вводе точки с запятой «;»
}
function  HLTC77_1_1_24_41_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'закон1';
  CONTEXT2 = 'закон2';
  CONTEXT3 = 'закон3';
  CONTEXT4 = 'закон4';
  CONTEXT5 = 'закон5';
var
  w, cardDataRes;
begin
try      
  Result := false;
  GoToMainMenu;
  w := GoToPPR('', true);
  if not IsExists(w) then
    Raise('Не получилось перейти в КЗ ППР');

  w.Keys(CONTEXT1); 
  if not MoveMouseToObject(w, 'querycard_plus.bmp', 0, 0, true) then // При нажатии кнопки «+»
    Raise('Не получилось найти или кликнуть по зеленому плюсу в КЗ ППР');
  w.Keys(CONTEXT2 + ';'); // При вводе точки с запятой «;»
  w.Keys(CONTEXT3 + '![Enter]'); // При нажатии Shift+Enter
  w.Keys(CONTEXT4);
  if not MoveMouseToObject(w, 'querycard_plus.bmp', 0, 0, true) then // При нажатии кнопки «+»
    Raise('Не получилось найти или кликнуть по 2-ому зеленому плюсу в КЗ ППР');
  w.Keys(CONTEXT5);

  cardDataRes :=
  [
   CARD_PPR, ([
     ([
       FD_WORDS_IN_CAPTION, ([
          CONTEXT1, CONTEXT2, CONTEXT3, CONTEXT4, CONTEXT5]) 
      ])
    ]) 
  ];   
  Result := CompareQueryCardData(cardDataRes, ExtractQueryCardData(GetFromPPR('КАРТОЧКА ЗАПРОСА')));
  if not Result then
    Raise('Заполненная КЗ отличается, видимо неправильно работает добавление новых значений поля ' + FD_WORDS_IN_CAPTION);
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.44: Через БП ищем контекст:
    ставка единый социальный налог

    Открываем документ:
    Действующие налоги и сборы в Российской Федерации (подготовлено экспертами компании Гарант)

    Скролим колесом мыши вниз (около трёх мониторов)
    Не должно случиться ошибок/падения оболочки.
}
function  HLTC77_1_1_24_44_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'ставка единый социальный налог';
  DOCNAME = 'Действующие налоги и сборы в Российской Федерации*';
var
  i, w, errorText;
begin
try      
  Result := false;
  if not BaseSearch(nil, CONTEXT) then
    Raise('Не получилось произвести поиск БП по контексту: ' + CONTEXT);
  if not OpenDocFromList(DOCNAME, GetList) then
    Raise('Не получилось из списка открыть документ: ' + DOCNAME);

  w := GetEditor;
  if not IsExists(w) then
    Raise('Окно редактора не найдено');
  w.SetFocus;
  for i := 1 to 100 do w.MouseWheel(-Random(16)); // скролл колесом к концу документа

  errorText := GetParam(WaitForAnyMessageWindow('', Options.Run.Timeout div 30, '', 'OK'), WFMF_RES_MSGTEXT, '');
  Result := errorText = '';
  if not Result then
  	Raise('Появляется сообщение об ошибке с текстом "' + errorText + '"');
    
  CloseTabIfNeeded;    
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
  HLTC77.1.1.24.45: Невидимый блочный текст
    HLTC77.1.1.24.45.1: Невидимый блочный и обычный текст  
    По контекстам:
    сообщение пфр организации
    и
    сообщение уведомление пфр организация

    Должен:
    - найтись документ 2205, с вхождением
    - при открытии, спозиционироваться на блоке 283 (чтобы увидеть номер – надо включить отображение меток на полях)
}
function HLTC77_1_1_24_45_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, contexts, i;
begin
try      
  Result := true;
  contexts := [
                'сообщение пфр организации', 
                'сообщение уведомление пфр организация'
              ];
  docsName := 
  [  
    ([FL_EXISTS_CONTEXT_IN_STRING, 'Picture 2205*3. Плательщики*', (['*3. Плательщики страховых взносов*'])])
  ];

  for i := VarArrayLowBound(contexts, 1) to VarArrayHighBound(contexts, 1) do
  begin   
    GoToMainMenu;
    
    if BaseSearch(nil, contexts[i]) then
    begin
      if not FindInList(docsName) then
        Result := ErrorResult('Результат поиска БП по запросу "' + contexts[i] + '" не соответствует эталону');
    end
    else
      Raise('Результат поиска БП не соответствует эталону');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.46.1: На ТБ24, по запросу: нижнетагилмежрайгаз
    Должны находиться:
    - Энциклопедия решений. Совмещение… - № 57972022
    - Энциклопедия решений. Купля-продажа - № 57974013
    (искомый контекст слева)

    НЕ должен находиться:
    - Энциклопедия решений. Безвозмездное пользование… - № 57974003
    (т.к. искомый контекст справа).
}
function HLTC77_1_1_24_46_1_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try
  Result := false;
  docsName := 
  [
    ([FL_EXISTS, 'Энциклопедия решений. Совмещение*']),
    ([FL_EXISTS, 'Энциклопедия решений. Купля-продажа*']),
    ([FL_NOT_EXISTS, 'Энциклопедия решений. Безвозмездное пользование*'])
  ];
  cardData :=
  [
   CARD_PPR, ([
   ([ FD_WORDS_IN_TEXT, (['нижнетагилмежрайгаз']) ])
   ]) 
  ];
     
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.46.2: На ТБ24, обновлённой до ТБ27, по запросу: нижнетагилмежрайгаз
    Должны находиться:
        Энциклопедия решений. Совмещение… - № 57972022
        Энциклопедия решений. Купля-продажа - № 57974013
        (искомый контекст слева)

    НЕ должны находиться:
        Энциклопедия решений. Безвозмездное пользование… - № 57974003
        Топик 57970003 Новый АААК-Текст - № 57970003
        (т.к. искомый контекст справа).
}
function HLTC77_1_1_24_46_2_Execute(var  current_state: OleVariant): OleVariant;
var
  tmpBase, docsName, cardData;
begin
  try
    Result := true;
    docsName := 
    [
      ([FL_EXISTS, 'Энциклопедия решений. Совмещение*']),
      ([FL_EXISTS, 'Энциклопедия решений. Купля-продажа*']),
      ([FL_NOT_EXISTS, 'Энциклопедия решений. Безвозмездное пользование*']),
      ([FL_NOT_EXISTS, 'Топик 57970003*'])
    ];
    cardData :=
    [
       CARD_PPR, ([
       ([ FD_WORDS_IN_TEXT, (['нижнетагилмежрайгаз']) ])
       ]) 
    ];

    tmpBase := GetDataBaseType('ACTIVE');
    if tmpBase <> DBT_OLD then
      Raise('Текущая база "' + tmpBase + '" отличается от "' + DBT_OLD + '", продолжение невозможно!');
    try
      if not SwitchDatabase(DBT_NEW, 'IsSwitchOnTheFly := true') then
        Raise('Переключение базы на "' + DBT_NEW + '" не удалось!');
      if not SearchInPPR(cardData) then
        Raise('Не получилось выполнить поиск ППР');
      if not FindInList(docsName) then
        Raise('Результат поиска ППР не соответствует эталону');
    finally
      SwitchDataBase(tmpBase, 'IsSwitchOnTheFly:=true');
    end;
  except
    Result := False;
    Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.46.3: На ТБ27, по запросу: нижнетагилмежрайгаз
    Должны находиться:
    - Энциклопедия решений. Совмещение… - № 57972022
    - Энциклопедия решений. Купля-продажа - № 57974013
    (искомый контекст слева)

    НЕ должен находиться:
    - Энциклопедия решений. Безвозмездное пользование… - № 57974003
    - Топик 57970003 Новый АААК-Текст - № 57970003
    (т.к. искомый контекст справа).
}
function HLTC77_1_1_24_46_3_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try
  Result := false;
  docsName := 
  [
    ([FL_EXISTS, 'Энциклопедия решений. Совмещение*']),
    ([FL_EXISTS, 'Энциклопедия решений. Купля-продажа*']),
    ([FL_NOT_EXISTS, 'Энциклопедия решений. Безвозмездное пользование*']),
    ([FL_NOT_EXISTS, 'Топик 57970003*'])
  ];
  cardData :=
  [
   CARD_PPR, ([
   ([ FD_WORDS_IN_TEXT, (['нижнетагилмежрайгаз']) ])
   ]) 
  ];
     
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.47: Предпосчитанные поиски
    HLTC77.1.1.24.47.1: Просто поиск
      Через БП ищем контекст:
      в* путин

      Прогрессбар «Идёт поиск…», после отрисовки, должен СРАЗУ показать 100%.
      Если прогрессбар заполняется постепенно - ошибка.
}
function HLTC77_1_1_24_47_1_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'в* путин';
var
  w;
begin
try
  Result := true;
  if not GoToMainMenu then
    Raise('Не получилось открыть ОМ');
  if not EnterContextInBaseSearch(CONTEXT, 'IsDoSearch:=true') then
    Raise('Не получилось выполнить поиск БП');
  Delay(Options.Run.Timeout div 5);
  w := GetFromShell('ОКНО ПРОГРЕСС ИНДИКАТОРА ПОИСКА', 1000);
  if IsExists(w) then
    Raise('Найдено ОКНО ПРОГРЕССА ИНДИКАТОРА ПОИСКА. Видимо поиск выполняется слишком длительно.');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.47.2: Поиск с синонимами
    Через БП ищем контекст:
    изумруд

    Прогрессбар «Идёт поиск…», после отрисовки, должен СРАЗУ показать 100%.
    Если прогрессбар заполняется постепенно - ошибка.

    В полученном списке, кроме прочего, должны быть документы:

        Picture 2247 – имеет контекст «изумруд»
        Picture 2248 – имеет контекст «жемчугом» - синоним
}
function HLTC77_1_1_24_47_2_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'изумруд';
var
  docsName, w;
begin
try
  Result := false;
  if not GoToMainMenu then
    Raise('Не получилось открыть ОМ');
  if not EnterContextInBaseSearch(CONTEXT, 'IsDoSearch:=true') then
    Raise('Не получилось выполнить поиск БП');
  Delay(Options.Run.Timeout div 5);
  w := GetFromShell('ОКНО ПРОГРЕСС ИНДИКАТОРА ПОИСКА', 1000);
  if IsExists(w) then
    Raise('Найдено ОКНО ПРОГРЕССА ИНДИКАТОРА ПОИСКА. Видимо поиск выполняется слишком длительно.');

  docsName := 
  [
    ([FL_EXISTS_CONTEXT_IN_STRING, 'Picture 2247*', (['Изумруд'])]),
    ([FL_EXISTS_CONTEXT_IN_STRING, 'Picture 2248*', (['Жемчуг'])])
  ];
  Result := FindInList(docsName);
  if not Result then
  	Raise('Результат поиска не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.48.1: Поиск по базе
    1. Ввести в БП: persona non grata
    2. Начать поиск
    Не должно выскочить никаких предупреждений, и текст в строке БП не должен подсветиться красным.

    В результате, получим список.
    3. Открыть несколько документов, убедиться, что позиционирование происходит на искомый контекст и он подсвечивается.
}
function HLTC77_1_1_24_48_1_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'persona non grata';
var
  docsName;
begin
try
  Result := false;
  docsName := 
  [
    ([FL_EXISTS_CONTEXT_IN_2STRING, 'Консульская конвенция*Таджикистан*', [CONTEXT]]),
    ([FL_EXISTS_CONTEXT_IN_2STRING, 'Консульская конвенция*Украиной*', [CONTEXT]]),    
    ([FL_EXISTS_CONTEXT_IN_2STRING, 'Постановление Правительства РФ от 5 июня 2001 г. N 439*', [CONTEXT]])
  ];

  if not BaseSearch(nil, CONTEXT) then
  	Raise('Не получилось выполнить поиск БП');
  Result := FindInList(docsName);
  if not Result then
    Raise('Результат поиска БП не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.48.2: Поиск в документе
    1. Открыть 2441525
    2. Поискать в документе:
    persona non grata

    Не должно выскочить никаких предупреждений, и текст в строке БП не должен подсветиться красным.

    Должны найтись 2 совпадения.
}
function  HLTC77_1_1_24_48_2_Execute(var  current_state: OleVariant): OleVariant;
const
  DOC_NUM = 2441525;
  CONTEXT = 'persona non grata';
var
  cardData;
begin
try      
  Result := true;
  
  if not OpenDocByNumber(DOC_NUM) then
    Raise('Не получилось открыть Документ № ' + IntToStr(DOC_NUM));
  if not BaseSearchInDocument(GetEditor, CONTEXT, 'IsCloseWindow:=false') then
    Raise('Не прошел 1ый поиск контекста "' + CONTEXT + '" в документе № ' + IntToStr(DOC_NUM));
  if not BaseSearchInDocument(GetEditor, CONTEXT, 'IsCloseWindow:=false;IsContinueSearch:=true') then
    Raise('Не прошел 2ой поиск контекста "' + CONTEXT + '" в документе № ' + IntToStr(DOC_NUM));
  if not CheckHighlightWords(GetEditor, CONTEXT) then
  	Raise('В найденом документе не выделен найденный контекст "' + CONTEXT + '"');
  if BaseSearchInDocument(GetEditor, CONTEXT, 'IsContinueSearch:=true') then
    Raise('Прошел 3ий поиск контекста "' + CONTEXT + '" в документе № ' + IntToStr(DOC_NUM));
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.24.49: Курс доллара и евро
    По запросу:
    Курс доллара и евро

    Должен найтись документ «Курсы доллара США и евро» (№ 455501).
    При этом, оболочка не должна упасть.

    В списке могут быть и другие документы.
}
function HLTC77_1_1_24_49_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName, cardData;
begin
try
  Result := false;
  docsName := 
  [
    ([FL_EXISTS, 'Курсы доллара США и евро*'])
  ];
  cardData :=
  [
   CARD_PPR, ([
   ([ FD_WORDS_IN_TEXT, (['Курс доллара и евро']) ])
   ]) 
  ];
     
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Raise('Результат поиска ППР не соответствует эталону');
  end
  else
  	Raise('Не получилось выполнить поиск ППР');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.1.1.24.52.3: В тестовой базе:
  * Постановление Правительства РФ от 27 ноября 2006 г. N 718 "О Таможенном тарифе Российской Федерации и товарной номенклатуре, применяемой при осуществлении внешнеэкономической деятельности" (с изм. и доп. от 30 декабря 2006 г., 16, 17, 18, 23 января, 14, 20, 26 февраля, 10, 14, 30 апреля, 5, 8, 26 мая, 9, 12, 14, 19, 20, 29 июня, 9 июля, 11 августа 2007 г.)
  * Новые таблицы. Постановление Правительства РФ от 27 ноября 2006 г. N 718 "О Таможенном тарифе Российской Федерации и товарной номенклатуре, применяемой при осуществлении внешнеэкономической деятельности" (с изменениями и дополнениями)
  * ТН ВЭД СНГ. Группа 07. Овощи и некоторые съедобные корнеплоды и клубнеплоды ("чечевица","мелкосеменные")
  * Решение Совета Евразийской экономической комиссии от 16 июля 2012 г. N 54*
  и НЕ должен находиться документ Постановление Госстандарта РФ от 23 февраля 1998 г. N 5...  
}
function  HLTC77_1_1_24_52_3_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '4']),
    ([FL_EXISTS, 'Новые таблицы. Постановление Правительства РФ от 27 ноября 2006 г. N 718*']), 
    ([FL_EXISTS, 'Постановление Правительства РФ от 27 ноября 2006 г. N 718*']),
    ([FL_EXISTS, 'ТН ВЭД СНГ. Группа 07. Овощи и некоторые съедобные корнеплоды и клубнеплоды']),
    ([FL_EXISTS, 'Решение Совета Евразийской экономической комиссии от 16 июля 2012 г. N 54*']),
    ([FL_NOT_EXISTS, 'Постановление Госстандарта РФ от 23 февраля 1998 г. N 5*'])
    ];
  cardData := 
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'чечевицы',
        'мелкосеменные!']) ]) ]) 
    ];
  if SearchInPPR(cardData) then
  begin
    Result := FindInList(docsName);
    if not Result then
    	Log.Error('Результат поиска ППР не соответствует эталону');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.1.26: В ТБ27 строим список всех документов по пустой КЗ. Должны получить не меньше 13 000 документов
}
function HLTC77_1_1_26_Execute(var  current_state: OleVariant): OleVariant;
var
  docsName;
begin
try      
  Result := true;
  docsName := 
  [
    ([FL_NUMBER_BIG_MORE, '13000'])
  ];
  if not IsExists(GetListOfAllDocuments) then
    Raise('Не получилось построить список всех документов!');
  if not FindInList(docsName) then
    Raise('Результат поиска не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.27.1: Бухгалтерские проводки
    Провести поиск:
    Слова в тексте: серый волк
    Вид правовой информации: Комментарии\Бухгалтерские проводки

    Должен найтись документ 2160. С релевантностью больше 1
    При его открытии, должны позиционироваться на блок 20.

    Просто поиск по запросу
    Слова в тексте: серый волк
    должен найти документ 2160. с релевантностью 1
}
function HLTC77_1_1_27_1_Execute(var  current_state: OleVariant): OleVariant;
var
  i, cardData, docsName;
begin
try      
  Result := true;
  
  for i := 1 to 2 do
  begin
    case i of
    1: begin
      cardData :=
      [
        CARD_PPR, ([ 
          ([FD_WORDS_IN_TEXT, (['серый волк'])]),
          ([FD_KIND_OF_INFORMATION, (['[ИЛИ]Комментарии\Бухгалтерские проводки'])])
        ]) 
      ];
      docsName :=
      [
        ([FL_EXISTS_RELEVANCE_MORE_INT, '*2160*', '1']),
        ([FL_EXISTS_CONTEXT_IN_STRING, '*2160*', (['СЕРЫЙ один два три*'])])
      ];
      end;

    2: begin
      cardData :=
      [
        CARD_PPR, ([ 
          ([FD_WORDS_IN_TEXT, (['серый волк'])])
        ]) 
      ];
      docsName :=
      [
        ([FL_EXISTS_RELEVANCE_INT, '*2160*', '1'])
      ];
      end;
    end;

    if not SearchInPPR(cardData) then
    	Raise('Не получилось выполнить поиск ППР №' + IntToStr(i));
    if not FindInList(docsName) then
    	Result := ErrorResult('Список не соответствует эталону после ' + IntToStr(i) + '-ого поиска');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.27.2: Поиск по разным видам в рамках одной сессии
    1. В ППР вбиваем:
    Слова в тексте: приказ
    Вид правовой информации: Проекты законов

    2. Строим список
    Нашлось одно количество документов (4, на момент написания HLTC)

    3. Снова открываем КЗ ППР (можно вернуться в неё по истории), выбираем:
    Слова в тексте: приказ
    Вид правовой информации: Комментарии

    4. Строим список
    Должно найтись гораздо больше документов (431, на момент написания HLTC)
}
function HLTC77_1_1_27_2_Execute(var  current_state: OleVariant): OleVariant;
var
  i, cardData, docsName;
begin
try      
  Result := true;
  
  for i := 1 to 2 do
  begin
    case i of
    1: begin
      cardData :=
      [
        CARD_PPR, ([ 
          ([FD_WORDS_IN_TEXT, (['приказ'])]),
          ([FD_KIND_OF_INFORMATION, (['[ИЛИ]Проекты законов'])])
        ]) 
      ];
      docsName :=
      [
        ([FL_NUMBER_BIG_LESS, '10'])
      ];
      end;

    2: begin
      cardData :=
      [
        CARD_PPR, ([ 
          ([FD_WORDS_IN_TEXT, (['приказ'])]),
          ([FD_KIND_OF_INFORMATION, (['[ИЛИ]Комментарии'])])
        ]) 
      ];
      docsName :=
      [
        ([FL_NUMBER_BIG_MORE, '431'])
      ];
      end;
    end;

    if not SearchInPPR(cardData) then
    	Raise('Не получилось выполнить поиск ППР №' + IntToStr(i));
    if not FindInList(docsName) then
    	Result := ErrorResult('Список не соответствует эталону после ' + IntToStr(i) + '-ого поиска');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.27.3.1: 
    1. Слова в тексте: дед мороз
    Вид правовой информации: Формы документов

    Должен найтись документ 2160. с релевантностью больше 1.
    При его открытии, должны позиционироваться на блок 10.

    2. Просто поиск по запросу: Слова в тексте: дед мороз
    Должен найти документ 2160. С релевантностью 1. 
}
function HLTC77_1_1_27_3_1_Execute(var  current_state: OleVariant): OleVariant;
var
  i, cardData, docsName;
begin
try      
  Result := true;
  
  for i := 1 to 2 do
  begin
    case i of
    1: begin
      cardData :=
      [
        CARD_PPR, ([ 
          ([FD_WORDS_IN_TEXT, (['дед мороз'])]),
          ([FD_KIND_OF_INFORMATION, (['[ИЛИ]Формы документов'])])
        ]) 
      ];
      docsName :=
      [
        ([FL_EXISTS_RELEVANCE_MORE_INT, '*2160*', '1']),
        ([FL_EXISTS_CONTEXT_IN_STRING, '*2160*', (['ДЕД один два*'])])
      ];
      end;

    2: begin
      cardData :=
      [
        CARD_PPR, ([ 
          ([FD_WORDS_IN_TEXT, (['дед мороз'])])
        ]) 
      ];
      docsName :=
      [
        ([FL_EXISTS_RELEVANCE_INT, '*2160*', '1'])
      ];
      end;
    end;

    if not SearchInPPR(cardData) then
    	Raise('Не получилось выполнить поиск ППР №' + IntToStr(i));
    if not FindInList(docsName) then
    	Result := ErrorResult('Список не соответствует эталону после ' + IntToStr(i) + '-ого поиска');
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.27.3.2: Слова в тексте: юридическое лицо
    Вид правовой информации: Формы документов

    В числе прочего, должен найтись документ 2005 (блок 100)
    При входе в него, позиционируемся на строчку, где есть слово «Юридические лица», и слово подсвечивается.
}
function HLTC77_1_1_27_3_2_Execute(var  current_state: OleVariant): OleVariant;
const
  DOCNAME = 'Документ 2005*';
  STRING_SEARCH_TEXT = 'юридическое лицо';
  STRING_TEXT = 'Юридические лица';
var
  cardData1, docsName1;
begin
try      
  Result := true;
  cardData1 :=
  [
    CARD_PPR, ([ 
      ([FD_WORDS_IN_TEXT, ([STRING_SEARCH_TEXT])]),
      ([FD_KIND_OF_INFORMATION, (['[ИЛИ]Формы документов'])])
    ]) 
  ];
  docsName1 :=
  [
    ([FL_EXISTS_CONTEXT_IN_STRING, DOCNAME, (['*' + STRING_TEXT + '*'])]),
    ([FL_EXISTS_CONTEXT_SEARCH_AND_HIGHLIGHT, DOCNAME, ([STRING_SEARCH_TEXT]), STRING_TEXT])
  ];

  if not SearchInPPR(cardData1) then
  	Raise('Не получилось выполнить поиск ППР');
  if not FindInList(docsName1) then
  	Raise('Список не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.27.3.3: Слова в тексте: формы юридического лица
    Вид правовой информации: Формы документов.

    В числе прочего, должен найтись документ 2005 (блок 100)
    При входе в него, позиционируемся на строчку, где есть "Юридические лица", само слово подсвечивается.
}
function HLTC77_1_1_27_3_3_Execute(var  current_state: OleVariant): OleVariant;
const
  DOCNAME = 'Документ 2005';
  STRING_TEXT = 'CLASS*Юридические лица*';
var
  cardData1, docsName1;
begin
try      
  Result := true;
  cardData1 :=
  [
    CARD_PPR, ([ 
      ([FD_WORDS_IN_TEXT, (['формы юридического лица'])]),
      ([FD_KIND_OF_INFORMATION, (['[ИЛИ]Формы документов'])])
    ]) 
  ];
  docsName1 :=
  [
    ([FL_EXISTS_CONTEXT_IN_STRING, DOCNAME, ([STRING_TEXT])])
  ];

  if not SearchInPPR(cardData1) then
  	Raise('Не получилось выполнить поиск ППР');
  if not FindInList(docsName1) then
  	Raise('Список не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.27.3.4: Слова в тексте: «юридическое лицо»
    Вид правовой информации: Формы документов.

    В числе прочего, должен найтись документ 2005 (блок 100)
    При входе в него, позиционируемся на строчку, где НЕТ слова «Формы», а есть только «Юридические лица».
}
function HLTC77_1_1_27_3_4_Execute(var  current_state: OleVariant): OleVariant;
const
  DOCNAME = 'Документ 2005';
  STRING_TEXT = 'CLASS*Юридические лица*';
var
  cardData1, docsName1;
begin
try      
  Result := true;
  cardData1 :=
  [
    CARD_PPR, ([ 
      ([FD_WORDS_IN_TEXT, (['"юридическое лицо"'])]),
      ([FD_KIND_OF_INFORMATION, (['[ИЛИ]Формы документов'])])
    ]) 
  ];
  docsName1 :=
  [
    ([FL_EXISTS_CONTEXT_IN_STRING, DOCNAME, ([STRING_TEXT])])
  ];

  if not SearchInPPR(cardData1) then
  	Raise('Не получилось выполнить поиск ППР');
  if not FindInList(docsName1) then
  	Raise('Список не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.27.4: Поиск контекста с исключённым Видом правовой информации
    В ППР вбиваем:
      Слова в тексте: закон
      Вид правовой информации: КРОМЕ Судебная практика

    Список должен построиться, в логе не должно быть -lm_alert-ов
}
function HLTC77_1_1_27_4_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
try      
  Result := true;
  cardData :=
  [
    CARD_PPR, ([ 
      ([FD_WORDS_IN_TEXT, (['закон'])]),
      ([FD_KIND_OF_INFORMATION, (['[КРОМЕ]Судебная практика'])])
    ]) 
  ];
  docsName :=
  [
    ([FL_NUMBER_BIG_MORE, '2000'])
  ];
  if not SearchInPPR(cardData) then
  	Raise('Не получилось выполнить поиск ППР');
  if not FindInList(docsName) then
  	Raise('Список после поиска не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.28: Номер = ГОСТ 8.321-78
    Найдётся один документ

    Заходим в него
    Выделяем в заголовке: ГОСТ 8.321-78
    Копируем
    Открываем КЗ ППР, дерево номеров
    Вставляем из буфера в контекстный фильтр
    В логе не должно появиться alert-ов.
}
function  HLTC77_1_1_28_Execute(var  current_state: OleVariant): OleVariant;
const
  NUMBER_NAME = 'ГОСТ 8.321-78';  
  NUMBER_PPRNAME = 'Г0СТ 8.321-78';
var
  cardData, docsName,
  w, filter_w, logErrors;
begin
  try
    Result := true;
    docsName := 
      [
        ([FL_NUMBER, '1'])
      ];
    cardData := 
      [
      	CARD_PPR, ([([
      	FD_NUMBER, ([
      		NUMBER_PPRNAME]) ]) ])
      ];
    if not SearchInPPR(cardData) then
      Raise('Не получилось произвести поиск ППР');
    if not FindInList(docsName) then
      Raise('Результат поиска ППР не соответствует эталону');

    w := GoToPPR('', true); 
    if not IsExists(w) then
      Raise('Окно КЗ ППР не найдено!');      
    if not PositionInQueryCard(w, FD_NUMBER, [CT_COMBOBOX]) then
      Raise('Не получилось спозиционироваться в КЗ ППР на поле "' + CT_COMBOBOX + '"!');
    w.Keys('[Enter]');
    w := GetFromAttributeSelect('ВЫБОР ЗНАЧЕНИЙ РЕКВИЗИТА');
    if NOT IsExists(w) then 
      Raise('Не получилось найти диалог выбора значений реквизита!');
    filter_w := GetFromAttributeSelect('ПОЛЕ "КОНТЕКСТНЫЙ ФИЛЬТР"');
    if not IsExists(filter_w) then
      Raise('Поле "КОНТЕКСТНЫЙ ФИЛЬТР" в окне выбора реквизита "' + FD_NUMBER + '" не найдено!');

    Sys.Clipboard := NUMBER_NAME;
    if not PasteFromClipboard(filter_w, 'HowToPaste:=KEYBOARD') then
      Raise('Не получилось вставить строку из клипбоарда!');
    if not CompareArray(GetElementsFromTree(GetFromAttributeSelect('ДЕРЕВО АТТРИБУТОВ')), [NUMBER_PPRNAME]) then
      Raise('Отличается список после фильтрации!');
    w.Close;

    logErrors := ProcessingLogForErrors;
    if logErrors <> '' then
      Raise('После выполнения сценария теста в логе найдены ошибки: ' + EndOfLine + logErrors);
  except
    Result := false;
    Sys.Keys('[Esc]');
    Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  end;
  GoToMainMenu;
end;

{
  HLTC77.1.1.29.1: Для поля "Вступление в силу:" указываем: с 10.02.2004 по 10.02.2004
    В полученном списке не должно быть документа 9003 
}
function  HLTC77_1_1_29_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin
  try
  	Result := False;

    docsName :=
      [    
        ([FL_NOT_EXISTS, '*9003*'])
      ];
    cardData :=
      [
      	CARD_PPR, ([([
      	FD_LC_IN_DATE_FROM, ([
      		'10.02.2004']) ]),([
      	FD_LC_IN_DATE_TO, ([
      		'10.02.2004']) ]) ]) 
      ];

    if not SearchInPPR(cardData) then
      Raise('Не получилось произвести поиск ППР');

    Result := FindInList(docsName);
    if not Result then
      Raise('Результат поиска ППР не соответствует эталону');
  except
    Result := false;
    Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  end;
  GoToMainMenu;
end;

{
HLTC77.1.3:  Фильтры
  HLTC77.1.3.1: Создать и применить фильтр по: 
  Статус = «Действующие», 
  Значимость = «Общие», 
  Статус регистрации = «Зарегистрированные», 
  Информационный блок = «Международное право (Россия - СНГ)», 
  Вид правовой информации = «Формы документов», 
  «Территория регулирования» = Российская Федерация. Провести поиск по пустой ППР

  HLTC77.1.3.1.1: В тестовой базе находится 9 документов:
  
HLTC199.1: Создание фильтра
  HLTC199.1.2: Создание фильтра полностью совпадает с процессом создания запроса ППР. Сохранение производится при нажатии специальной кнопки «Сохранить»
    HLTC199.1.2.1: При этом появляется стандартное окно сохранения элемента.
}
function  HLTC77_1_3_1_1_Execute(var  current_state: OleVariant): OleVariant;
const
  FILTERNAME = 'HLTC77_1_3_1_1';
var
  cardData, docsName;
begin
  Result := False;
  docsName := 
    [
    ([FL_NUMBER, '9']),
    ([FL_EXISTS, 'Приказ Минфина РФ от 23 декабря 2005 г. N 153н*']),
    ([FL_EXISTS, 'Приказ Минтранса РФ от 12 июля 2007 г. N 95*']),
    ([FL_EXISTS, 'Приказ ГТК РФ от 26 июня 2001 г. N 598*']),
    ([FL_EXISTS, 'Приказ ФПС РФ от 15 декабря 2000 г. N 660*']),
    ([FL_EXISTS, 'Приказ ГТК РФ от 21 августа 2000 г. N 741 *']),
    ([FL_EXISTS, 'Приказ ГТК РФ и МНС РФ от 11 апреля 2000 г. N 294/АП-3-03/139*']),    
    ([FL_EXISTS, 'Приказ ГТК РФ от 24 декабря 1998 г. N 870*']),    
    ([FL_EXISTS, 'Инструкция о порядке выдачи ветеринарных сопроводительных документов на подконтрольные госветнадзору грузы*']),
    ([FL_EXISTS, 'Документ N56021*'])
    ];
  cardData := 
    [
  	CARD_FILTER, ([([
  	FD_MU_REG_STATUS, ([
  		'Зарегистрированные']) ]),([
  	FD_MEANING, ([
  		'Общие']) ]),([
  	FD_STATUS, ([
  		'Действующие']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]),([
  	FD_KIND_OF_INFORMATION, ([
  		'[ИЛИ]Формы документов']) ]),([
  	FD_REGULATION_TERRITORY, ([
  		'[ИЛИ]Российская Федерация']) ]),([
  	FD_INFORMATIONAL_BLOCK, ([
  		'Международное право (Россия - СНГ)']) ]) ]) 
    ];
  if GoToPPR and OpenFilterTab 
     and CreateFilterAndUse(GetFilterTree, FILTERNAME, cardData) then
  begin
    Result := SearchInPPR('', 'IsFillCard:=false') and FindInList(docsName);
    if not Result then
    	Log.Error('Фильтр "' + FILTERNAME + '" работает неправильно. Список не соответствует эталону');
    if not WorkWithFilters(GetFilterTree, 'set', '-' + FILTERNAME) then
      Log.Error('Не получилось отключить Фильтр "' + FILTERNAME + '"');
    if not DeleteFilter(FILTERNAME) then
      Log.Error('Не получилось удалить Фильтр "' + FILTERNAME + '"');
  end
  else
    Log.Error('Не получилось создать и сохранить фильтр "' + FILTERNAME + '"');
  GoToMainMenu;
end;

{
HLTC77.1.3.2: Создать и применить фильтр по: Вид правовой информации = «Формы документов» ИЛИ «Проекты законов», 
  Территория регулирования = «Субъекты Российской Федерации\Чувашская республика\Чувашская республика». 
  Провести поиск по пустой ППР
HLTC77.1.3.2.1: В тестовой базе нет документов, удовлетворяющих фильтру.
}
function  HLTC77_1_3_2_1_Execute(var  current_state: OleVariant): OleVariant;
const
  FILTERNAME = 'HLTC77_1_3_2_1';
var
  cardData, formInfo;
begin
  Result := False;
  cardData :=
    [
    	CARD_FILTER, ([([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]),([
    	FD_KIND_OF_INFORMATION, ([
    		'[ИЛИ]Формы документов',
    		'[ИЛИ]Проекты законов']) ]),([
    	FD_REGULATION_TERRITORY, ([
    		'[ИЛИ]Субъекты Российской Федерации\Чувашская Республика\Чувашская Республика']) ]) ])
    ];
  if GoToPPR and OpenFilterTab
     and CreateFilterAndUse(GetFilterTree, FILTERNAME, cardData) then
  begin
    formInfo := SearchInPPR('', 'IsFillCard:=false;IsReturnMessageForm:=true');
    Result := GetParam(formInfo, WFMF_RES_MSGTYPE, MFT_UNKNOWN) = MFT_CONFIRMATION;
    if not Result then
    	Log.Error('Не найдено окно с предупреждением, что в результате поиска с примененным фильтром, типа нет ни одного документа.',
                 GetParam(formInfo, WFMF_RES_MSGTYPE, MFT_UNKNOWN) + ': ' + GetParam(formInfo, WFMF_RES_MSGTEXT, ''));
    if not DeleteFilter(FILTERNAME) then
      Log.Error('Не получилось удалить Фильтр "' + FILTERNAME + '"');
  end
  else
    Log.Error('Не получилось создать и сохранить фильтр "' + FILTERNAME + '"');
  GoToMainMenu;
end;

{
HLTC77.1.3.3: 
  Создать и применить фильтр по: Статус = «Действующие», 
  Вид правовой информации = «Акты органов власти» И «Судебная практика». 
  Провести поиск по пустой ППР
    HLTC77.1.3.3.1: 
      В тестовой базе найдётся 21 документ, или больше.
      Если больше 50 – надо задать вопрос Максу Смолькину в К: «правильно ли это?»
}
function  HLTC77_1_3_3_1_Execute(var  current_state: OleVariant): OleVariant;
const
  FILTERNAME = 'HLTC77_1_3_3_1';
var
  cardData, docsName;       
begin
  Result := false;
  docsName := 
    [
      ([FL_NUMBER_BIG_MORE, '22']),
      ([FL_NUMBER_BIG_LESS, '50'])
    ];
  cardData :=
    [
    	CARD_PPR, ([([
    	FD_STATUS, ([
    		'Действующие']) ]),([
     	FD_KIND_OF_INFORMATION, ([
    		'[ИЛИ]Акты органов власти',
    		'[И]Судебная практика']) ]) ]) 
    ];
  if GoToPPR and OpenFilterTab
     and CreateFilterAndUse(GetFilterTree, FILTERNAME, cardData) then
  begin
    Result := SearchInPPR('', 'IsFillCard:=false') and FindInList(docsName);
    if not Result then
    	Log.Error('Фильтр "' + FILTERNAME + '"' + ' работает неправильно. Список не соответствует эталону');
    if not WorkWithFilters(GetFilterTree, 'set', '-' + FILTERNAME) then
      Log.Error('Не получилось отключить Фильтр "' + FILTERNAME + '"');
    if not DeleteFilter(FILTERNAME) then
      Log.Error('Не получилось удалить Фильтр "' + FILTERNAME + '"');
  end
  else
    Log.Error('Не получилось создать и сохранить фильтр "' + FILTERNAME + '"');
  GoToMainMenu;
end;

{
HLTC77.1.5.1: Реквизиты: Тип = «Комментарии», Дата с = 06.03.1997.
		Создать и сохранить фильтр на соответствующей вкладке. Фильтр по: 
    Информаионный блок = «Законодательство о строительстве». 
    Сделать фильтр применённым и провести поиск в ППР.
		Результат:
HLTC77.1.5.1.1: В тестовой базе:
  Методика учета экземпляров текущих версий электронного периодического справочника "Система Гарант" у пользователя (Саблина С.М.)
  Единый поисковый регистр электронных версий бераторов
  Документ N5605
}
function  HLTC77_1_5_1_1_Execute(var  current_state: OleVariant): OleVariant;
const
  FILTERNAME = 'HLTC77_1_5_1_1';
var
  pprData, filterData, docsName;
begin
  Result := False;
  docsName := 
    [
      ([FL_NUMBER, '3']),
      ([FL_EXISTS, 'Методика учета экземпляров текущих версий электронного периодического справочника "Система Гарант" у пользователя (Саблина С.М.)']),
      ([FL_EXISTS, 'Единый поисковый регистр электронных версий бераторов']),
      ([FL_EXISTS, 'Документ N5605*'])
    ];
  filterData :=
    [
    	CARD_PPR, ([([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]),([
    	FD_INFORMATIONAL_BLOCK, ([
    		'Законодательство о строительстве']) ]) ]) 
    ];
  pprData :=
    [
  	CARD_PPR, ([([
  	FD_TYPE, ([
  		'[ИЛИ]Комментарии']) ]), ([
  	FD_ACCEPTANCE_DATE_FROM, ([
  		'06.03.1997']) ]) , ([
  	FD_ACCEPTANCE_DATE_TO, EMPTY_FIELD_VALUES ]), ([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];
  if FillPPRCard(pprData, 'IsOpenNewCard:=true') then
  begin
    if OpenFilterTab and CreateFilterAndUse(GetFilterTree, FILTERNAME, filterData) then
    begin
      Result := SearchInPPR('', 'IsFillCard:=false') and FindInList(docsName);
      if not Result then
      	Log.Error('Поиск с включенным Фильтром "' + FILTERNAME + '" ' + 'работает неправильно. Список не соответствует эталону');
      if not WorkWithFilters(GetFilterTree, 'set', '-' + FILTERNAME) then
        Log.Warning('Не получилось отключить Фильтр "' + FILTERNAME + '"');
      if not DeleteFilter(FILTERNAME) then
        Log.Warning('Не получилось удалить Фильтр "' + FILTERNAME + '"');
    end
    else
      Log.Error('Не получилось создать и сохранить фильтр "' + FILTERNAME + '"');
  end
  else
    Log.Error('Не получилось заполнить карточку ППР');
  GoToMainMenu;
end;

{
  HLTC77.1.5.2: 
    1. В Настройках конфигурации "Поиск\Карточки запроса" переключаемся на Стандартную КЗ.
    2. Выбираем ситуации первого уровня: «Авизо (набор документов - не настоящий)» ИЛИ «Автомобили. Импорт».
    3. На вкладке фильтр создать новый фильтр по реквизитам: Вид правовой информации = «Формы документов», применить этот фильтр.
    4. Проводим поиск.
  HLTC77.1.5.2.1: В тестовой базе:
    Временный порядок контроля за автотранспортными средствами, ввозимыми физическими лицами в Российскую Федерацию транзитом через территорию Республики Беларусь (с изм. и доп. от 15 июня 1999 г.)
}                   
function  HLTC77_1_5_2_1_Execute(var  current_state: OleVariant): OleVariant;
const
  FILTERNAME = 'HLTC77_1_5_2_1';
var
  ppsData, filterData, docsName;
begin
try
  try
    Result := False;
  
    if not SetSettings([(['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]', 'Стандартная'])]) then 
      Raise('Не получилось установить Стандартную КЗ ППС в настройках');
    
    docsName := 
      [
      ([FL_NUMBER, '1']),
      ([FL_EXISTS, 'Временный порядок контроля за автотранспортными средствами, ввозимыми физическими лицами в Российскую Федерацию транзитом через территорию Республики Беларусь (с изм. и доп. от 15 июня 1999 г.)'])
      ];
    filterData :=
      [
    	CARD_PPR, ([([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]),([
    	FD_KIND_OF_INFORMATION, ([
    		'[ИЛИ]Формы документов']) ]) ]) 
      ];
    ppsData :=
      ['Авизо (набор документов - не настоящий)',
       'Автомобили. Импорт'
      ];
    if GoToPPS and OpenFilterTab and
       CreateFilterAndUse(GetFilterTree, FILTERNAME, filterData) then
    begin
      if SearchInPPS(ppsData, true, false) then
      begin
        Result := FindInList(docsName);
        if not Result then
        	Log.Error('Поиск ППС с включенным Фильтром "' + FILTERNAME + '"' + 'работает неправильно. Список не соответствует эталону');
        if not WorkWithFilters(GetFilterTree, 'set', '-' + FILTERNAME) then
          Log.Warning('Не получилось отключить Фильтр "' + FILTERNAME + '"');
        if not DeleteFilter(FILTERNAME) then
           Log.Warning('Не получилось удалить Фильтр "' + FILTERNAME + '"');
      end
      else
        Log.Error('Не получилось произвести поиск ППС');
    end
    else
      Log.Error('Не получилось создать и сохранить фильтр "' + FILTERNAME + '"');  
  finally
    SetDefaultSettings;
    GoToMainMenu;
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  CommonExceptionHandler;
end;  
end;

{
HLTC77.1.5.3: Ключевые слова (первого уровня): «Авизо» ИЛИ «Автомобили. Импорт». 
  На вкладке фильтр создать новый фильтр по реквизитам: 
  Территория регулирования = «Субъекты Российской Федерации\Чувашская республика\Чувашская республика», 
  применить этот фильтр, провести поиск.
HLTC77.1.5.3.1: В тестовой базе документов, сответствующих фильтру нет
}
function  HLTC77_1_5_3_1_Execute(var  current_state: OleVariant): OleVariant;
const
  FILTERNAME = 'HLTC77_1_5_3_1';
var
  ppsData, filterData, docsName;
begin
try
  try
    Result := false;
  
    if not SetSettings([(['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]', 'Стандартная'])]) then 
      Raise('Не получилось установить Стандартную КЗ ППС в настройках');

    filterData :=
        [
      	CARD_FILTER, ([([
      	FD_INOPERATIVE_EDITION, ([
      		'Да']) ]),([
      	FD_REGULATION_TERRITORY, ([
      		'[ИЛИ]Субъекты Российской Федерации\Чувашская Республика\Чувашская Республика']) ]) ]) 
        ];
    ppsData :=
      ['Авизо (набор документов - не настоящий)',
       'Автомобили. Импорт'
      ];
    if GoToPPS and OpenFilterTab and
       CreateFilterAndUse(GetFilterTree, FILTERNAME, filterData) then
    begin
      if SearchInPPS(ppsData, true, false) then
      begin
        Result := WaitForConfirmationWindow(Options.Run.Timeout div 4, 'Нет') <> '';
        if not Result then
        	Log.Error('Не найдено окно с предупреждением');
        if not DeleteFilter(FILTERNAME) then
          Log.Error('Не получилось удалить Фильтр "' + FILTERNAME + '"');
      end
      else
        Log.Error('Не получилось произвести поиск ППС');
    end
    else
      Log.Error('Не получилось создать и сохранить фильтр "' + FILTERNAME + '"');  
  finally
    SetDefaultSettings;
    GoToMainMenu;
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  CommonExceptionHandler;
end;  
end;

{
HLTC77.1.5.4: 
  Редактирование своих фильтров и применение заново
  1. Получаем какой либо список, например по типу "Акт".
  2. На тулбаре вкладки "Фильтры" жмем кнопку "Создать новый фильтр"
  3. На форме создания фильтра ничего не делаем и сохраняем пустой фильтр.
  4. Применяем к списку фильтр "Только действующие"
  5. Применяем наш (который пустой).
  6. В контекстном меню для нашего фильтра выбираем "Редактировать фильтр".
  7. В поле «Слова в тексте» фильтра набираем несуществующий контекст в этих документах, например "мультиссылка".
  8. Жмем Сохранить.
  (Запрашивается подтверждение перезаписи фильтра – соглашаемся)
  9. На вкладке щелкаем правой кнопкой мыши и выбираем "Применить фильтры заново"
  Система должна выдать предупреждение:
  «В процессе работы фильтры были изменены. В результате операции получился пустой список.
  Отменить действие всех фильтров?»
  10. В диалоге нажать «ДА»

  11. Редактируем собственный фильтр и делаем его пустым.
  (Снова подтверждаем перезапись)
  12. Применяем фильтр «Только действующие» и собственный.
  13. Вновь изменяем собственный фильтр и в поле «Слова в тексте» пишем «мультиссылка»
  14. Сохраняем фильтр.
  (Подтверждаем перезапись)
  15. На вкладке «Фильтры» снимаем фильтр «Только действующие».
  Должен получиться пустой список, и на его месте текст:
  «Ни один документ не удовлетворяет условиям фильтров:

      * <имя фильтра>

  Отменить все фильтры»

HLTC199.3.1: Проверить, что можно включать фильтр (ставить галку).
  HLTC199.3.1.1: При этом Фильтр применяется к загруженному списку.
HLTC199.3.2: Проверить, что можно выключать фильтр (снимать галку). При этом Фильтр снимается и список показывается в исходном (до фильтрации) состоянии.  
  HLTC199.3.9.3: Проверить редактирование (и последующие сохранение изменений) неприменнёного фильтра.
}
function HLTC77_1_5_4_Execute(var  current_state: OleVariant): OleVariant;
const
  FILTERNAME = 'HLTC77_1_5_4';
  FILTERNAME1 = '*действующие*';
var
  pprData, filterData, filterData1;
  message_str, numOfDocs;
begin
try
  filterData :=
      [
    	CARD_FILTER, ([ ([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ])
      ];
  filterData1 :=
      [
    	CARD_FILTER, ([ ([
    	FD_WORDS_IN_CAPTION, ([
    		'мультиссылка']) ]) ])
      ];
  pprData :=
      [
      	CARD_PPR, ([([
      	FD_TYPE, ([
      		'[ИЛИ]Акт']) ]),([
      	FD_INOPERATIVE_EDITION, ([
      		'Да']) ]) ]) 
      ];
  Result := true;      
  if not SearchInPPR(pprData) then Raise('Не получилось построить список из ППР');
  numOfDocs := CountElementInList(GetList);
  if numOfDocs = 0 then Raise('Не получилось посчитать количество документов в списке');  
    
  if not OpenFilterTab then Raise('Не получилось открыть вкладку "Фильтры"');
  if not CreateFilter(GetFilterTree, FILTERNAME, filterData) then 
    Raise('Не получилось создать и сохранить фильтр "' + FILTERNAME + '"');
  if not (WorkWithFilters(GetFilterTree, 'set', '+' + FILTERNAME)) then
    Raise('Не получилось применить фильтр "' + FILTERNAME + '"');
  if not (WorkWithFilters(GetFilterTree, 'set', '+' + FILTERNAME1)) then
    Raise('Не получилось применить фильтр "' + FILTERNAME1 + '"');
  if not EditFilter(GetFilterTree, FILTERNAME, filterData1) then 
    Raise('Не получилось отредактировать фильтр и пересохранить его');
  if not IsExists(GetList) then
    Raise('Не найден список документов!');   
  GetFilterTree.SetFocus;
  Sys.Keys('[Apps]');
  if not ClickByPopupMenuItem(GetFilterTree, 'Применить фильтры заново') then
    Raise('Не получилось Применить фильтры заново');
  message_str := WaitForConfirmationWindow(Options.Run.Timeout div 5, 'Да');
  if not StringCompare('*получается*пустой*список*отменить*действие*всех*фильтров*', message_str) then
    Raise('Неправильный текст в окне подтверждения: "' + message_str +'"');  
  if not FindInList([
                      ([FL_NUMBER, IntToStr(numOfDocs)]), // это количество должно соответствовать количеству документов до фильтра
                      ([FL_EXISTS, 'Документ N56021*'])
                    ]) then
    Raise('Несоответствующий список после "Применить фильтры заново".');                    
                    
  if not WorkWithFilters(GetFilterTree, 'set', '-' + FILTERNAME1) then
    Raise('Не получилось отменить фильтр "' + FILTERNAME1 + '"');

  Raise('OK');
except
  if ExceptionMessage <> 'OK' then
  begin
    Result := false; 
    Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  end;
  if not DeleteFilter(FILTERNAME) then
    Log.Error('Не получилось удалить Фильтр "' + FILTERNAME + '"');
  GoToMainMenu;
  CommonExceptionHandler;
end;  
end;

{
  HLTC77.2.1.2: Проверить открытие словарей поисковых атрибутов через кнопки-ссылки на форме и 
    выбор значений из них по различным операциям – И, ИЛИ, КРОМЕ:
  HLTC77.2.1.2.1: Тип
  HLTC77.2.1.3.1: Тип
  HLTC77.2.1.16.1.1: Тип
}
function  HLTC77_2_1_2_1_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_TYPE, ([
    		'[ИЛИ]Акт',
    		'[И]Бухгалтерские проводки по новому Плану счетов',
    		'[И]ГСНр',
    		'[КРОМЕ]ГОСТ']) ]) ]) 
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true');
  if not Result then
    Log.Error('Не получилось заполнить поле Тип с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.2: Орган/Источник
HLTC77.2.1.3.2: Орган/Источник
HLTC77.2.1.16.1.2: Орган/Источник
}
function  HLTC77_2_1_2_2_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_SOURCE, ([
    		'[ИЛИ]Правительство России и СССР\Правительство России',
    		'[ИЛИ]Правительство России и СССР\Правительство СССР',
    		'[И]Органы законодательной власти России и СССР\ВС СССР',
    		'[И]Правительство России и СССР\Комиссия по реформированию ЖКХ',
    		'[КРОМЕ]Органы законодательной власти России и СССР\ВС России',
    		'[КРОМЕ]Правительство России и СССР\Совет народных Комиссаров РСФСР']) ])
         ]) 
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true');
  if not Result then
    Log.Error('Не получилось заполнить поле Орган/Источник с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.3: Раздел/Тема
HLTC77.2.1.3.3: Раздел/Тема
HLTC77.2.1.16.1.3: Раздел/Тема
}
function  HLTC77_2_1_2_3_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_THEME, ([
    		'[ИЛИ]Основы государственно-правового устройства\Основы конституционного строя',
    		'[ИЛИ]Основы государственно-правового устройства\Столицы и административные центры',
    		'[И]Основы государственно-правового устройства\Разграничение компетенции между органами власти РФ и ее субъектов',
    		'[И]Основы государственно-правового устройства\Государственный язык, языки народов Российской Федерации',
    		'[КРОМЕ]Основы государственно-правового устройства\Государственная граница']) ])
      ]) 
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true');
  if not Result then
    Log.Error('Не получилось заполнить поле Раздел/Тема с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.4: Статус (элементы выбираются только по ИЛИ)
HLTC77.2.1.16.4.2: Статус
}
function  HLTC77_2_1_2_4_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData, pprData1;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_STATUS, ([
    		'Действующие',
    		'Утратившие силу',
    		'Не вступившие в силу']) ]) ]) 
    ];  
  pprData1 :=
    [
    	CARD_PPR, ([([
    	FD_STATUS, ([
    		'[И]Действующие']) ]) ]) 
    ];  
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true') and (not FillPPRCard(pprData1, 'IsOpenNewCard:=true'));
  if not Result then
    Log.Error('Не получилось заполнить поле Статус с применением логических операций');
  GoToMainMenu;
end;

{
  HLTC77.2.1.2.5: Дата принятия – открывается специальная форма
  HLTC77.2.1.2.6: Дата регистрации – открывается специальная форма
}
function HLTC77_2_1_2_5_Execute(var  current_state: OleVariant): OleVariant;
var
  w, w_form;
begin
try
  Result := true;
  
  w := GoToPPR('', true); 
  if not IsExists(w) then
    Raise('Окно КЗ ППР не найдено!');
  if not PositionInQueryCard(w, FD_ACCEPTANCE_DATE, [CT_LABEL]) then
    Raise('Не получилось спозиционироваться в КЗ ППР на поле "' + FD_ACCEPTANCE_DATE + '"!');
  try
    w.Keys('[Enter]');
    w_form := GetFromShell('ФОРМА ВВОДА ДАТЫ В КЗ ППР');
    if not IsExists(w_form) then
      Raise('Форма ввода даты не открылась!');
    if not StringCompare(FD_ACCEPTANCE_DATE, w_form.WndCaption) then
      Result := ErrorResult('Название формы ввода даты изменилось на ' + w_form.WndCaption + ', ожидали: ' + FD_ACCEPTANCE_DATE);
  finally
    Sys.Keys('[Esc]');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.2.6: Дата регистрации – открывается специальная форма
}
function HLTC77_2_1_2_6_Execute(var  current_state: OleVariant): OleVariant;
var
  w, w_form;
begin
try
  Result := true;
  
  w := GoToPPR('', true); 
  if not IsExists(w) then
    Raise('Окно КЗ ППР не найдено!');
  if not PositionInQueryCard(w, FD_MU_REG_DATE, [CT_LABEL]) then
    Raise('Не получилось спозиционироваться в КЗ ППР на поле "' + FD_MU_REG_DATE + '"!');
  try
    w.Keys('[Enter]');
    w_form := GetFromShell('ФОРМА ВВОДА ДАТЫ В КЗ ППР');
    if not IsExists(w_form) then
      Raise('Форма ввода даты не открылась!');
    if not StringCompare(FD_MU_REG_DATE, w_form.WndCaption) then
      Result := ErrorResult('Название формы ввода даты изменилось на ' + w_form.WndCaption + ', ожидали: ' + FD_MU_REG_DATE);
  finally
    Sys.Keys('[Esc]');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.2.1.2.7: Значимость (элементы выбираются только по ИЛИ)
HLTC77.2.1.16.4.1: Значимость
}
function  HLTC77_2_1_2_7_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData, pprData1;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_MEANING, ([
    		'Индивидуальные',
    		'Общие']) ]) ])
    ];
  pprData1 :=
    [
    	CARD_PPR, ([([
    	FD_MEANING, ([
    		'[И]Индивидуальные',
    		'[КРОМЕ]Общие']) ]) ])
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true') and (not FillPPRCard(pprData1, 'IsOpenNewCard:=true'));
  if not Result then
    Log.Error('Не получилось заполнить поле Значимость с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.8: Вид правовой информации
HLTC77.2.1.16.4.4: Вид правовой информации
}
function  HLTC77_2_1_2_8_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([
      ([
    	FD_KIND_OF_INFORMATION, ([
    		'[ИЛИ]Акты органов власти',
    		'[ИЛИ]Комментарии',
    		'[И]Формы документов',
    		'[КРОМЕ]Проекты законов',
    		'[И]Международные договоры']) ]) ]) 
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true');
  if not Result then
    Log.Error('Не получилось заполнить поле Вид правовой информации с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.9: Территория регулирования
HLTC77.2.1.16.4.5: Территория регулирования
HLTC77.2.1.2.13: Отметить логическим условием «листьевой» элемент - если его родитель (ветвь) не был отмечен логическим условием, то  у него (родителя) должна появиться отметка, что данная «ветвь» содержит выделенные элементы.
}
function  HLTC77_2_1_2_9_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([
        ([
    	FD_REGULATION_TERRITORY, ([
    		'[ИЛИ]Российская Федерация',
    		'[ИЛИ]Субъекты Российской Федерации\Санкт-Петербург',
    		'[И]Субъекты Российской Федерации\Москва',
    		'[И]Субъекты Российской Федерации\Волгоградская область',
    		'[КРОМЕ]Субъекты Российской Федерации\Чувашская Республика\Чувашская Республика']) ]) ]) 
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true');
  if not Result then
    Log.Error('Не получилось заполнить поле Территория регулирования с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.10: Информационный блок (должна быть доступна только по ИЛИ)
HLTC77.2.1.16.4.6: Информационный блок
}
function  HLTC77_2_1_2_10_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData, pprData1;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([ ([
    	FD_INFORMATIONAL_BLOCK, ([
    		'Международное право (Россия - СНГ)',
    		'Суд и Арбитраж',
    		'Законодательство о строительстве',
    		'Налоги, бухучет, предпринимательство. Москва']) ]) ])
    ];
  pprData1 :=
    [
    	CARD_PPR, ([ ([
    	FD_INFORMATIONAL_BLOCK, ([
    		'[И]Международное право (Россия - СНГ)']) ]) ])
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true') and (not FillPPRCard(pprData1, 'IsOpenNewCard:=true'));
  if not Result then
    Log.Error('Не получилось заполнить поле Информационный блок с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.14: Так же проверить открытие словарей поисковых атрибутов через кнопки-ссылки
HLTC77.2.1.2.14.1: Номер (элементы выбираются только по ИЛИ)
HLTC77.2.1.16.1.5: Номер
}
function  HLTC77_2_1_2_14_1_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData, pprData1;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_NUMBER, ([
    		'01-01/1302',
    		'01-01/7810',
    		'01-04-77',
    		'01-06/10674']) ]) ])
    ];
  pprData1 := 
    [
    	CARD_PPR, ([([
    	FD_NUMBER, ([
    		'[И]01-01/1302']) ]) ])
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true') and (not FillPPRCard(pprData1, 'IsOpenNewCard:=true'));
  if not Result then
    Log.Error('Не получилось заполнить поле Номер с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.14.2: Статус регистрации (элементы выбираются только по ИЛИ)
HLTC77.2.1.16.2.3: Статус регистрации
}
function  HLTC77_2_1_2_14_2_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData, pprData1;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_MU_REG_STATUS, ([
    		'Зарегистрированные',
    		'Отказано в регистрации',
    		'Иные']) ])
         ]) 
    ];
  pprData1 := 
    [
    	CARD_PPR, ([([
    	FD_MU_REG_STATUS, ([
    		'[И]Зарегистрированные']) ])
         ])
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true') and (not FillPPRCard(pprData1, 'IsOpenNewCard:=true'));
  if not Result then
    Log.Error('Не получилось заполнить поле Статус регистрации с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.2.14.3: Регистрационный номер (элементы выбираются только по ИЛИ)
HLTC77.2.1.16.2.2: Регистрационный номер
}
function  HLTC77_2_1_2_14_3_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData, pprData1;
begin
  Result := False;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_MU_REG_NUMBER, ([
    		'1012',
    		'1056',
    		'1216',
    		'160']) ]) ]) 
    ];
  pprData1 := 
    [
    	CARD_PPR, ([([
    	FD_MU_REG_NUMBER, ([
    		'[И]1012']) ]) ])
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true') and (not FillPPRCard(pprData1, 'IsOpenNewCard:=true'));
  if not Result then
    Log.Error('Не получилось заполнить поле Регистрационный номер с применением логических операций');
  GoToMainMenu;
end;

{
HLTC77.2.1.3: Проверить открытие словарей поисковых атрибутов через комбобоксы 
выбора значений по различным операциям – И, ИЛИ, КРОМЕ («открыть дерево реквизитов»):
HLTC77.2.1.4: Проверить выбор значений из комбобоксов:
  HLTC77.2.1.4.1: Статус (только по ИЛИ)
  HLTC77.2.1.4.2: Статус регистрации (только по или)
  HLTC77.2.1.4.4: Значимость (только по ИЛИ)  
  HLTC77.2.1.4.5: Вид правовой информации (доступны все 3 операции)  
  HLTC77.2.1.4.6: Территория регулирования (доступны все 3 операции)  
  HLTC77.2.1.4.7: Информационный блок (должна быть доступна только по ИЛИ)    
  HLTC77.2.1.4.9: Искать в недействующих редакциях (операции нет), доступные области:
    HLTC77.2.1.4.9.1: Да  
    HLTC77.2.1.4.9.2: Нет
  HLTC77.2.1.5: Проверить выбор номера документа для поиска и номера регистрации для поиска    
HLTC77.2.1.16.4.3: Искать в недействующих редакциях
}
function  HLTC77_2_1_4_1_Execute(var  current_state: OleVariant): OleVariant;
var
  i, fielddata, textData;
begin
  textData :=
  [
  ([FD_STATUS, 'Утратившие силу', 1]),
  ([FD_MU_REG_STATUS, 'Отказано в регистрации', 1]),
  ([FD_MEANING, 'Общие', 2]),
  ([FD_KIND_OF_INFORMATION, 'Международные договоры', 4]),
  ([FD_REGULATION_TERRITORY, 'Российская Федерация', 0]),
  ([FD_INFORMATIONAL_BLOCK, 'Суд и Арбитраж', 3]),
  ([FD_INOPERATIVE_EDITION, 'Нет', 0]),
  ([FD_INOPERATIVE_EDITION, 'Да', -1]),
  ([FD_NUMBER, '01-04-129', 10]),
  ([FD_MU_REG_NUMBER, '1326', 7])
  ];
  Result := true;
  for i := VarArrayLowBound(textData,1) to VarArrayHighBound(textData,1) do
  begin
    if PositionInPPR(textData[i][0], false) then
    begin
      Sys.Keys('^[Down]');
      if textData[i][2] >= 0 then 
        PressKeyNCount('[Down]', textData[i][2])
      else
        PressKeyNCount('[Up]', Abs(textData[i][2]));      
      Sys.Keys('[Enter]');
      fielddata := GetValueFromEdit;
      if not StringCompare(fielddata, textData[i][1]) then
      begin
        Result := false;
        Log.Error('Выбралось неправильное значение "' + fielddata + '" из комбобокса для поля ' + textData[i][0] +
                  '. Должно быть "' + textData[i][1] + '"');
      end;
    end
    else
    begin
      Result := false;
      Log.Error('Не получилось спозиционироваться на поле ' + textData[i][0]);
    end;
  end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.6: Проверить, что не менее чем 5 последних введенных контекстов в поле 
  Контекст запоминаются в списке значений для выбора комбобокса.
  HLTC77.2.1.16.5.2: Слова в тексте
}
function  HLTC77_2_1_6_Execute(var  current_state: OleVariant): OleVariant;
var
  i, fielddata;
begin
  Result := true;
  for i := 10 to 15 do
    Result := Result and SearchInPPR(
      [
      	CARD_PPR, ([([
      	FD_WORDS_IN_TEXT, ([
      		IntToStr(i)]) ]) ])
      ]);
      
  if Result then
  begin
    if PositionInPPR(FD_WORDS_IN_TEXT) then
    begin
      Sys.Keys('^[Down]');
      PressKeyNCount('[Down]', 4);
      Sys.Keys('[Enter]');
      fielddata := GetValueFromEdit;
      Sys.Keys('^[Down]');
      PressKeyNCount('[Down]', 1);
      Sys.Keys('[Enter]');
      Result := fielddata <> GetValueFromEdit;
      if not Result then
        Log.Error('Сохраняется меньше 5 последних введенных контекстов в поле Контекст');
    end
    else
      Log.Error('Не получилось спозиционироваться на поле ' + FD_WORDS_IN_TEXT);
  end
  else
    Log.Error('Не получилось выполнить серию поисков ППР');
  GoToMainMenu;
end;

{
HLTC77.2.1.11: Проверить переход по TAB между контролами КЗ.
Переход должен осуществляться между активными элементами:
    * Поля
    * Ссылки-названия полей (при нажатии на которые, открывается окно: Тип, Орган/Источник…)
    * Заголовки разделов (сворачивающие/разворачивающие группы)
    * Кнопки «Удалить/очистить строку ввода» и «Добавить строку ввода»
Переход НЕ должен осуществляться к:
    * Неактивным названиям полей:
          o Слова в названии
          o Слова в тексте
          o Искать в недействующих редакциях
    * Неактивным надписям в полях дат:
          o С:
          o По:
}
function  HLTC77_2_1_11_Execute(var  current_state: OleVariant): OleVariant;
begin
  Result := GoToPPR;
  if not Result then
    Log.Error('Не получилось открыть ППР!')
  else
  begin
    PressKeyNCount('[Tab]', 15);
    PressKeyNCount('![Tab]', 7);
    Sys.Keys('^[Down]');
    Sys.Keys('[Enter]');
    if GetValueFromEdit <> 'Основы государственно-правового устройства' then
      Result := ErrorResult('Клавишей TAB выбралось неправильное поле или фокус изначально не в поле ввода контекста!');
  end;    

  GoToMainMenu;
end;

{
  HLTC77.2.1.12: Проверить, что по нажатию кнопки Искать начинается поиск
    HLTC77.2.1.12.1: Процесс поиска должен сопровождаться прогресс-баром
}
function HLTC77_2_1_12_1_Execute(var  current_state: OleVariant): OleVariant;
var
  w;
begin
try
  Result := true;

  if not FillPPRCard([CARD_PPR, ([ ([FD_WORDS_IN_TEXT, (['1* при* да*']) ]) ]) ]) then
    Raise('Не получилось заполнить карточку ППР');

  w := GetFromPPR('КЗ');
  if not IsExists(w) then
    Raise('Не найдена КЗ ППР');

  if WaitForProgressIndicatorAbsence(Options.Run.Timeout div 10, 'ResultIfIndicatorExists:=true') then
    Result := ErrorResult('Почему-то найден прогресс-индикатор до начала поиска ППР');

  w.Keys('[Enter]');
  //ClickToolbarButton( GetFromPPR('НИЖНИЙ ТУЛБАР КАРТОЧКИ ЗАПРОСА'), 'Искать' );  

  if not WaitForProgressIndicatorAbsence(Options.Run.Timeout, 'ResultIfIndicatorExists:=true') then
    Raise('Не появлялся или не найден прогресс-индикатор поиска ППР');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.2.1.4.11: В пустой КЗ выбрать один атрибут ТИП и один атрибут ОРГАН\ИСТОЧНИК. Справа от выбранного атрибута ТИП нажать кнопку в виде «зеленого плюса». 
  Ничего не трогая нажать аналогичную кнопку напротив ОРГАН\ИСТОЧНИК-а – система не должна выдать ошибки.
HLTC77.2.1.9: Выбрать атрибут из словаря и добавить новое поле для введения другого значения поиска кнопкой +.  
}
function  HLTC77_2_1_4_11_Execute(var  current_state: OleVariant): OleVariant;
var
  tmpWindow;
begin
  Result := GoToPPR;
  if not Result then
    Log.Error('Не получилось открыть ППР!')
  else
  begin
    tmpWindow := Sys.Desktop.ActiveWindow();
    PositionInPPR(FD_TYPE, false);
    Sys.Keys('^[Down]');
    Sys.Keys('[Enter]');
    PositionInPPR(FD_SOURCE, false);
    Sys.Keys('^[Down]');
    Sys.Keys('[Enter]');
    PressKeyNCount('![Tab]', 3);
    Sys.Keys('[Enter]');
    PressKeyNCount('[Tab]', 5);
    Sys.Keys('[Enter]');
    Result := IsWndEqual(Sys.Desktop.ActiveWindow(), tmpWindow);
    if not Result then
      Log.Error('После последовательности нажатий появилось неизвестное окно!');
  end;    
  //
  GoToMainMenu;
end;

{
HLTC77.2.1.8: Проверить удаление отдельных строк ввода выбранных параметров в КЗ. 
  Для проверки заполнить несколько полей для поиска - для их удаления предназначена
  специальная кнопка в виде крестика рядом с заполненным полем
HLTC77.2.1.23: Проверить, что введённые атрибуты можно удалять прямо с формы ППР без вызова дилога выбора, путём нажатия кнопки «Х» - при этом поле ввода очищается, если оно было единственное или удаляется совсем, если не единственное.  
HLTC77.2.1.16.5.1: Слова в названии
}
function  HLTC77_2_1_8_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData;
begin
  Result := false;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'123124',
    		'124124',
    		'1412124',
    		'1414124',
    		'1424',
    		'14324',
    		'12412',
    		'14124']) ])
         ]) 
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true');
  if not Result then
    Log.Error('Не получилось заполнить Карточку запроса ППР!')
  else
  begin
    PositionInPPR(FD_WORDS_IN_CAPTION, false);
    PressKeyNCount('[Tab][Enter]', 8);
    PositionInPPR(FD_WORDS_IN_CAPTION, false);
    Result := GetValueFromEdit = '';
    if not Result then
      Log.Error('Неправильно работает кнопка очистки "Крастный крестик". Поле ' +
                 FD_WORDS_IN_CAPTION + ' не очистилось.');
  end;    
  //
  GoToMainMenu;
end;

{
  HLTC77.2.1.10: Проверить изменение логического условия поиска непосредственно из карточки запроса.
    После изменения проверить, что поиск производится по нужному критерию.
}
function  HLTC77_2_1_10_Execute(var  current_state: OleVariant): OleVariant;
var
  w, pprData, docsName;
begin
  Result := false;
  docsName := 
    [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS, 'Сборник сметных норм затрат на строительство временных зданий и сооружений ГСН 81-05-01-2001 (утв. постановлением Госстроя РФ от 7 мая 2001 г. N 45)'])
    ];
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_TYPE, ([
    		'[ИЛИ]Акт',
    		'[ИЛИ]ГСН']) ]),([
    	FD_SOURCE, ([
    		'[ИЛИ]Федеральные министерства и ведомства']) ])
         ]) 
    ];
  Result := FillPPRCard(pprData, 'IsOpenNewCard:=true');
  if not Result then
    Log.Error('Не получилось заполнить Карточку запроса ППР!')
  else
  begin
    w := GetFromPPR('КАРТОЧКА ЗАПРОСА');
    PositionInQueryCard(w, FD_TYPE, [CT_STATE_BUTTON]);
    LogicButtonState(w.selection, 'SET', BTN_STATE_AND);
    PositionInQueryCard(w, FD_TYPE, [CT_STATE_BUTTON]);
    LogicButtonState(w.selection, 'SET', BTN_STATE_NOT);
    PositionInQueryCard(w, FD_SOURCE, [CT_STATE_BUTTON]);
    LogicButtonState(w.selection, 'SET', BTN_STATE_AND);

    Result := ClickToolbarButton( GetFromPPR('НИЖНИЙ ТУЛБАР КАРТОЧКИ ЗАПРОСА'), 'Искать' );
    if not Result then
      Log.Error('Не получилось нажать кнопку Искать для поиска ППР')
    else
    begin
      Result := FindInList(docsName);
      if not Result then
      	Log.Error('Видимо состояние состояние операций установлено Неправильно. Результирующий список отдичается от эталона.');
    end;
  end;

  GoToMainMenu;
end;

{
  HLTC77.2.1.12.2: После окончания поиска выводится о сообщение о количестве найденных документов (или о том, что ничего не найдено). 
    С подверждением на построение списка - при согласии строится список, а в случае отказа возвращаемся к КЗ
}
function  HLTC77_2_1_12_2_Execute(var  current_state: OleVariant): OleVariant;
var
  i;
begin
try  
  try
    Result := true;

    if not SetSettings([(['ПОИСК\ПОДТВЕРЖДЕНИЯ', 'ПОСТРОЕНИЕ СПИСКА\ПОДТВЕРЖДАТЬ ПОСТРОЕНИЕ СПИСКА [CHECKBOX]', true])]) then 
      Raise('Не получилось включить настройку "Подтверждать построение списка"');
    for i := 1 to 2 do 
    begin
      if GoToPPR and SearchInPPR(nil, 'IsFillCard:=false;IsConfirmListBuild:=none') then
        Raise('Поиск выполнился, возможно не появляется подтверждение "Подтверждать построение списка"');
      if WaitForConfirmationWindow(-1, Choose(i = 1, 'Нет', 'Да')) = '' then
        Raise('С включенной настройкой "Подтверждать построение списка" не появляется соответствующее подтверждение');
      case i of
        1: // нажимали "Нет" 
          if not IsExists(GetFromPPR('КАРТОЧКА ЗАПРОСА')) then
            Result := ErrorResult('КЗ ППР не найдена, видимо выполнился поиск после нажатия кнопки "Нет" подтверждения построения списка');
        2: // нажимали "Да" 
          if not IsExists(GetList) then
            Result := ErrorResult('Список не найден, видимо НЕ выполнился поиск после нажатия кнопки "Да" подтверждения построения списка');
      end;
    end;    
  finally
    SetDefaultSettings;
    GoToMainMenu;
  end;  
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.1.13: Проверить, что по нажатию кнопки Очистить все параметры, 
    введенные в КЗ, возвращаются в начальное состояние.
  HLTC77.2.6.1.7.1: Проверить, что после очистки карточки оба поле также очищаются
}
function  HLTC77_2_1_13_Execute(var  current_state: OleVariant): OleVariant;
var
  clearData, pprData;
begin
  Result := false;
  clearData :=
      [
      	CARD_PPR, ([([
      	FD_WORDS_IN_CAPTION, ([
      		'']) ]),([
      	FD_WORDS_IN_TEXT, ([
      		'']) ]),([
      	FD_TYPE, ([
      		'']) ]),([
      	FD_SOURCE, ([
      		'']) ]),([
      	FD_THEME, ([
      		'']) ]),([
      	FD_ACCEPTANCE_DATE_FROM, ([
      		REDACTION_EMPTY_DATE]) ]),([
      	FD_ACCEPTANCE_DATE_TO, ([
      		REDACTION_EMPTY_DATE]) ]),([
      	FD_NUMBER, ([
      		'']) ]),([
      	FD_MU_REG_DATE_FROM, ([
      		REDACTION_EMPTY_DATE]) ]),([
      	FD_MU_REG_DATE_TO, ([
      		REDACTION_EMPTY_DATE]) ]),([
      	FD_MU_REG_NUMBER, ([
      		'']) ]),([
      	FD_MU_REG_STATUS, ([
      		'']) ]),([
      	FD_MEANING, ([
      		'']) ]),([
      	FD_STATUS, ([
      		'']) ]),([
      	FD_INOPERATIVE_EDITION, ([
      		'Нет']) ]),([
      	FD_KIND_OF_INFORMATION, ([
      		'']) ]),([
      	FD_REGULATION_TERRITORY, ([
      		'']) ]),([
      	FD_INFORMATIONAL_BLOCK, ([
      		'']) ]) ]) 
      ];
      
  pprData :=
      [
      	CARD_PPR, ([([
      	FD_WORDS_IN_CAPTION, ([
      		'12',
      		'24']) ]),([
      	FD_WORDS_IN_TEXT, ([
      		'33',
      		'64']) ]),([
      	FD_TYPE, ([
      		'[ИЛИ]Бухгалтерские проводки по новому Плану счетов',
      		'[ИЛИ]Выписка']) ]),([
      	FD_SOURCE, ([
      		'[ИЛИ]Президент России и СССР',
      		'[ИЛИ]Органы власти г. Москвы']) ]),([
      	FD_THEME, ([
      		'[ИЛИ]Основы государственно-правового устройства',
      		'[ИЛИ]My Class B']) ]),([
      	FD_ACCEPTANCE_DATE_FROM, ([
      		'03.05.2006']) ]),([
      	FD_ACCEPTANCE_DATE_TO, ([
      		'27.05.2006']) ]),([
      	FD_NUMBER, ([
      		'01-01/7810']) ]),([
      	FD_MU_REG_DATE_FROM, ([
      		'01.05.2006']) ]),([
      	FD_MU_REG_DATE_TO, ([
      		'06.05.2006']) ]),([
      	FD_MU_REG_NUMBER, ([
      		'1056',
      		'1326']) ]),([
      	FD_MU_REG_STATUS, ([
      		'Иные']) ]),([
      	FD_MEANING, ([
      		'Общие']) ]),([
      	FD_STATUS, ([
      		'Действующие',
      		'Утратившие силу',
      		'Не вступившие в силу']) ]),([
      	FD_INOPERATIVE_EDITION, ([
      		'Да']) ]),([
      	FD_KIND_OF_INFORMATION, ([
      		'[ИЛИ]Проекты законов',
      		'[ИЛИ]Судебная практика']) ]),([
      	FD_REGULATION_TERRITORY, ([
      		'[ИЛИ]Российская Федерация']) ]),([
      	FD_INFORMATIONAL_BLOCK, ([
      		'Налоги, бухучет, предпринимательство. Москва',
      		'Законодательство в схемах. Налоги, бухучет']) ]) ]) 
      ];
  if FillPPRCard(pprData, 'IsOpenNewCard:=true') then
  begin
    Result := ClickToolbarButton(GetFromPPR('НИЖНИЙ ТУЛБАР КАРТОЧКИ ЗАПРОСА'), 'Очистить');
    Result := Result and CompareQueryCardData(ExtractQueryCardData(GetFromPPR('КАРТОЧКА ЗАПРОСА'), false), clearData);
    if not Result then
      Log.Error('КЗ очищается неправильно по нажатию кнопки Очистить!');
  end
  else
    Log.Error('Не получилось заполнить Карточку запроса ППР!');

  GoToMainMenu;
end;

{
  HLTC77.2.1.14: Проверить, что по нажатию кнопки Отмена осуществляется возврат по истории на 1 шаг
}
function  HLTC77_2_1_14_Execute(var  current_state: OleVariant): OleVariant;
var
  clearData, pprData;
begin
  Result := false;
  If not GoToDictionary then
    Log.Error('Не получилось открыть Толковый словарь');
  if GoToPPS then
  begin
    if GoToPPR then
    begin
      Result := ClickToolbarButton( GetFromPPR('НИЖНИЙ ТУЛБАР КАРТОЧКИ ЗАПРОСА'), 'Отмена' );
      Result := Result and IsExists(GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ'));
      if not Result then 
        Log.Error('Не получилось вернуться назад по истории (кнопка Отмена)');
    end
    else
    Log.Error('Не получилось открыть ППР');
  end
  else
    Log.Error('Не получилось открыть ППС');
  //
  GoToMainMenu;
end;

{
  HLTC77.2.1.18: Проверить, что есть возможность восстановить ранее введённые запросы (история запросов):
  HLTC77.2.1.18.1: Создать запрос, выполнить, его, снова войти в КЗ и нажать кнопку раскрытия списка «История запросов» – выбрать из списка запрос, он должен загрузится.
}
function  HLTC77_2_1_18_1_Execute(var  current_state: OleVariant): OleVariant;
var
  clearData, pprData;
begin
  Result := false;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'тема']) ]),([
    	FD_WORDS_IN_TEXT, ([
    		'дня']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(pprData) then
  begin
    if GoToPPR and 
      ClickByPopupMenuItem(
        ClickToolbarButton(GetFromPPR('ТУЛБАР "ПОИСК: ПО РЕКВИЗИТАМ"'), 
          'История запросов*' ,
          'ClickForPopupMenu:=true' ), 
        'Запрос*тема*') then
    begin
      Result := CompareQueryCardData(pprData, ExtractQueryCardData(GetFromPPR('КАРТОЧКА ЗАПРОСА')));
      if not Result then
      	Log.Error('Загруженный список из Истории запросов (выпадающее меню кнопки) отличается от сохраненного!');
    end
    else
    Log.Error('Не получилось кликнуть по выпадающему меню кнопки История запросов ППР');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');    
  //
  GoToMainMenu;
end;

{
HLTC77.2.1.18.2: Проверить, что при обычном нажатии на кнопку «История запросов» загружается последний введённый запрос.
HLTC77.2.1.24: Должна быть возможность загрузить ранее сохранённый запрос – кнопка на панели инструментов
}
function  HLTC77_2_1_18_2_Execute(var  current_state: OleVariant): OleVariant;
var
  pprData;
begin
  Result := false;
  pprData :=
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'гражданин']) ]),([
    	FD_WORDS_IN_TEXT, ([
    		'Россия']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ]) ]) 
    ];
  if SearchInPPR(pprData) then
  begin
    if GoToPPR and ClickToolbarButton(GetFromPPR('ТУЛБАР "ПОИСК: ПО РЕКВИЗИТАМ"'), 'История запросов*') then
    begin
      Result := CompareQueryCardData(pprData, ExtractQueryCardData(GetFromPPR('КАРТОЧКА ЗАПРОСА')));
      if not Result then
      	Log.Error('Загруженный список из Истории запросов (выпадающее меню кнопки) отличается от сохраненного!');
    end
    else
    Log.Error('Не получилось кликнуть по выпадающему меню кнопки История запросов ППР');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');    
  GoToMainMenu;
end;

{
HLTC77.2.1.18.3: Проверить, что если запросы ранее не вводились, то кнопка «История запросов» недоступна.
}
function  HLTC77_2_1_18_3_Execute(var  current_state: OleVariant): OleVariant;
var
  but;
begin
  Result := JurnalClear;
  if Result then
  begin
    if GoTOPPR then
    begin
      but := GetToolbarButton(GetFromPPR('ТУЛБАР "ПОИСК: ПО РЕКВИЗИТАМ"'), 'История запросов*');
      Result := IsExists(but) and (not but.NativeDelphiObject.Enabled);
      if not Result then
        Log.Error('Кнопка История запросов ППР активна для пустого Журнала работы');
    end
    else
      Log.Error('Не получилось открыть ППР');
  end
  else  
    Log.Error('Не получилось очистить Журнал работы');
  //
  GoToMainMenu;
end;


{
HLTC77.2.1.17.2.7: Проверить, что порядок введенных слов не играет роли, т.е. введенные слова ищутся в любом порядке
HLTC77.2.1.17.2.7.1: Ввести «федеральный закон», затем стереть и ввести «закон федеральный». 
  Должен остаться «федеральный закон» в обоих случаях.
}
function  HLTC77_2_1_17_2_7_1_Execute(var  current_state: OleVariant): OleVariant;
const
  doctype1 = 'федеральный закон';
  doctype2 = 'закон федеральный';
var
  clbrd;  
begin
  Result := false;
  if PositionInPPR(FD_TYPE) then
  begin
    Sys.Keys(doctype1 + '[Enter]');
    clbrd := GetValueFromEdit;
    Result := StringCompare(doctype1, clbrd);
    if not Result then
      Log.Error('Ввод значения "' + doctype1 + '" в поле Тип, ввелось "' + clbrd + '"');
  end
  else
    Log.Error('Не получилось спозиционироваться в поле Тип');
  //
  if PositionInPPR(FD_TYPE) then
  begin
    Sys.Keys(doctype2 + '[Enter]');
    clbrd := GetValueFromEdit;
    if not StringCompare(doctype1, clbrd) then
    begin
      Result := false;
      Log.Error('При вводе значения "' + doctype2 + '" в поле Тип, ввелось "' + clbrd + '"');
    end;
  end
  else
  begin
    Result := false;
    Log.Error('Не получилось спозиционироваться в поле Тип');
  end;
  GoToMainMenu;
end;

{
HLTC77.2.1.17.2.1: Например, если  набрали «При», то система автоматически фильтрует и 
в списке остаются только: «Приказ»  и «Форма документа\Приказ»
} 
function  HLTC77_2_1_17_2_1_Execute(var  current_state: OleVariant): OleVariant;
const
  doctype1 = 'При';
  doctype2 = 'Форма документа\Приказ';
var
  clbrd;  
begin
  Result := false;
  if PositionInPPR(FD_TYPE) then
  begin
    Sys.Keys(doctype1 + '[Enter]');
    clbrd := GetValueFromEdit;
    Result := StringCompare(doctype2, clbrd);
    if not Result then
      Log.Error('Ввод значения "' + doctype1 + '" в поле Тип, ввелось "' + clbrd + '"');
  end
  else
    Log.Error('Не получилось спозиционироваться в поле Тип');
  GoToMainMenu;
end;

{
  HLTC77.2.1.17.2.2: А если ввести «Форма документа», то в списке останется только реквизит с именем «Форма документа».
}
function  HLTC77_2_1_17_2_2_Execute(var  current_state: OleVariant): OleVariant;
const
  doctype1 = 'Форма документа';
var
  w;
begin
try
  Result := false;
  if not PositionInPPR(FD_TYPE) then
    Raise('Не получилось спозиционироваться в поле Тип');

  Sys.Keys(doctype1);

  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА КЗ ППР');
  if not IsExists(w) then
    Raise('Не найден "ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА КЗ ППР"');
           
  Result := StringCompare(doctype1, common.GetWindowText(w)) and (CountElementInTree(w) = 1);
  if not Result then
    Log.Error('После ввода "' + doctype1 + '" в поле Тип, выпадающий список содержит более 1-ого реквизита или реквизит не соответствует"');
  Sys.Keys('[Esc]');    
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.2.1.17.2.3: Проверить, что при нажатии «Tab» происходит подстановка строки, а символ «*» игнорируется
}
function  HLTC77_2_1_17_2_3_Execute(var  current_state: OleVariant): OleVariant;
const
  doctype1 = 'Комм*';
  doctype2 = 'Комментарии';
var
  clbrd;  
begin
  Result := false;
  if PositionInPPR(FD_TYPE) then
  begin
    Sys.Keys(doctype1 + '[Tab]');
    clbrd := GetValueFromEdit;
    Result := StringCompare(doctype2, clbrd);
    if not Result then
      Log.Error('Ввод значения "' + doctype1 + '" в поле Тип с использованием TAB прошел неправильно, ввелось "' + clbrd + '"');
  end
  else
    Log.Error('Не получилось спозиционироваться в поле Тип');
  GoToMainMenu;
end;

{
HLTC77.2.1.17.2.3.3: Проверить, когда несколько отфильтрованных элементов – двойное нажатие Tab приводит к подстановке выделенного элемента. 
Ввести «инс», в списке стрелкой сместиться вниз, 2 раза Tab, подставилась «инструкция»
}
function  HLTC77_2_1_17_2_3_3_Execute(var  current_state: OleVariant): OleVariant;
const
  doctype1 = 'инс*';
  doctype2 = 'Инструкция';
var
  clbrd;  
begin
  Result := false;
  if PositionInPPR(FD_TYPE) then
  begin
    Sys.Keys(doctype1 + '[Down][Tab]');
    clbrd := GetValueFromEdit;
    Result := StringCompare(doctype2, clbrd);
    if not Result then
      Log.Error('При вводе значения "' + doctype1 + '" в поле Тип, ввелось "' + clbrd + '"');
  end
  else
    Log.Error('Не получилось спозиционироваться в поле Тип');
  GoToMainMenu;
end;

{
HLTC77.2.1.17.2.6: Проверить, что если ввести строку,
с которой не начинается ни одного реквизита, то неправильная часть подсветится красным.
Например, вводим в поле «Тип» «Формы» - подсветится.
}
function  HLTC77_2_1_17_2_6_Execute(var  current_state: OleVariant): OleVariant;
const
  doctype1 = 'Формы';
  doctype2 = 'Форма документа';
var
  clbrd;  
begin
  Result := false;
  if PositionInPPR(FD_TYPE) then
  begin
    Sys.Keys(doctype1 + '[Tab]');
    clbrd := GetValueFromEdit;
    Result := StringCompare(doctype2, clbrd);
    if not Result then
      Log.Error('Ввод значения "' + doctype1 + '" в поле Тип с использованием TAB прошел неправильно, ввелось "' + clbrd + '"');
  end
  else
    Log.Error('Не получилось спозиционироваться в поле Тип');
  GoToMainMenu;
end;

{
  HLTC77.2.1.17.1: Доступные реквизиты отображаются в выпадающем списке комбобокса в виде структурированного дерева (такое же как и в отдельном окне выбора реквизитов)
}
function  HLTC77_2_1_17_1_Execute(var  current_state: OleVariant): OleVariant;
const
  doctype2 = 'Органы законодательной власти России и СССР\Федеральное Собрание\Совет Федерации Федерального Собрания';
var
  clbrd;  
begin
  Result := false;
  if PositionInPPR(FD_SOURCE) then
  begin
    Sys.Keys('^[Down]' + KEY_EXPAND_FOLDER + keypause + 
             '[Down]' + KEY_EXPAND_FOLDER + 
             '[Down]' + keypause + '[Enter]');
    clbrd := GetValueFromEdit;
    Result := StringCompare(doctype2, clbrd);
    if not Result then
      Log.Error('Ввод значения из раскрывающегося списка по CTRL + DOWN прошел неправильно. Ввелось "' + clbrd + '", должно "' + doctype2 + '"');
  end
  else
    Log.Error('Не получилось спозиционироваться в поле ' + FD_THEME);
  GoToMainMenu;
end;

{  
  HLTC77.2.1.20: В ППР перейти к диaлогу выбора словарного атрибута по кнопке-ссылке (например Тип). Проверить контекстную фильтрацию.
    HLTC77.2.1.20.1: Если подстрока фильтрации встречается в названии подузла, то узел-родитель также отображается.
    HLTC77.2.1.20.2: Если подстрока фильтрации встречается в названии узла, то все подузлы также остаются после фильтрации.
    HLTC77.2.1.20.3: Если подстрока встречается и в названии узла и в названиях подэлементов – все равно остаются даже те подэлементы, у которых нет искомой подстроки.
    HLTC77.2.1.20.5: Проверить введение другого контекста, когда уже какой-то фильтр введен и применен.
    HLTC77.2.1.20.9: Ввести контекстный фильтр, включить контекстную фильтрацию, закрыть окно выбора реквизитов. Снова открыть окно выбора реквизитов  - контекстный фильтр должен быть сброшен.
}
function  HLTC77_2_1_20_1_Execute(var  current_state: OleVariant): OleVariant;
const
  WORD1 = 'коммент';
  WORD2 = 'бухгалтер';
var
  w, rubricator, listFull, listWord1, listWord2;
begin
try
  listFull := [
    'Акты органов власти',
    'Судебная практика',
    'Комментарии', 'Правовой консалтинг ГАРАНТ', 'Энциклопедии*', 'Бухгалтерские проводки*', 'Вопрос-ответы', 'Статьи', 'Книги',
    'Формы документов',
    'Международные договоры',
    'Проекты законов',
    'Пользовательская (вкладка)'
  ];
  listWord1 := ['Комментарии', 'Правовой консалтинг ГАРАНТ', 'Энциклопедии*', 'Бухгалтерские проводки*', 'Вопрос-ответы', 'Статьи', 'Книги'];
  listWord2 := ['Комментарии', 'Бухгалтерские проводки'];
  Result := true;
  if not PositionInPPR(FD_KIND_OF_INFORMATION) then
    Raise('Не получилось спозиционироваться в поле Вид правовой информации');

  Sys.Keys('[Enter]');
  rubricator := GetFromAttributeSelect('ДЕРЕВО АТТРИБУТОВ');
  if not IsExists(rubricator) then
    Raise('Не найдено окно "ДЕРЕВО АТТРИБУТОВ"');
  w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromAttributeSelect('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));       
  w.Keys('[End]![Home]' + WORD1);
  if not CompareArray(listWord1, GetElementsFromTree(rubricator, true), true, true) then
    Result := ErrorResult('После контекстной фильтрации по "' + WORD1 + '", результирующий список отличается от эталонного');

  w.Keys('[End]![Home]' + WORD2);
  if not CompareArray(listWord2, GetElementsFromTree(rubricator, true), true, true) then
    Result := ErrorResult('После контекстной фильтрации по "' + WORD2 + '", результирующий список отличается от эталонного');

  Sys.Keys('[Esc]');
  Sys.Keys('[Enter]');
  rubricator := GetFromAttributeSelect('ДЕРЕВО АТТРИБУТОВ');
  if not IsExists(rubricator) then
    Raise('Не найдено окно "ДЕРЕВО АТТРИБУТОВ"');
  w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromAttributeSelect('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));
  if common.GetWindowText(w) <> '' then
    Result := ErrorResult('Поле контекстного фильтра Дерева аттрибутов не пустое: "' + common.GetWindowText(w) + '"');
  if not CompareArray(listFull, GetElementsFromTree(rubricator, true), true, true) then
    Result := ErrorResult('Без контекстной фильтрации список всех аттрибутов Вид правовой информации отличается');
  Sys.Keys('[Esc]');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.20: В ППР перейти к диaлогу выбора словарного атрибута по кнопке-ссылке (например Тип). Проверить контекстную фильтрацию. 
  HLTC77.2.1.20.6: Проверить «снятие» контекстной фильтрации.
  HLTC77.2.1.20.7: Проверить введение контекста, по которому в ППР не отфильтруется ни одного элемента.
  HLTC77.2.1.20.8: Должна быть кнопка ВКЛ/ВЫКЛ фильтрации на тулбаре
}
function  HLTC77_2_1_20_6_Execute(var  current_state: OleVariant): OleVariant;
const
	DOCNAME = 'xxaczbz';
var
  w, button, toolbar, rubricator;
  listRubr;
begin
	Result := false;
  if PositionInPPR(FD_TYPE) then
  begin
    Sys.Keys('[Enter]');
    rubricator := GetFromAttributeSelect('ДЕРЕВО АТТРИБУТОВ');
    toolbar := GetFromAttributeSelect('ТУЛБАР "ПОИСК: ВЫБОР РЕКВИЗИТА"');
    w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromAttributeSelect('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));
    button := GetFromContextFilterForm('КНОПКА "ВКЛЮЧИТЬ КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromAttributeSelect('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));
    if not IsExists(rubricator) then 
    	Log.Error('Не найдено окно "ДЕРЕВО АТТРИБУТОВ" для поля Тип')
    else
    if not IsExists(w) then 
    	Log.Error('Не найдено поле ввода Контекстного фильтра')
    else
    if not IsExists(button) then 
    	Log.Error('Не найдена кнопка ВКЛ/ВЫКЛ Контекстного фильтра')
    else
    begin
      w.SetFocus;
      Sys.Keys('[End]![Home]' + DOCNAME);
      rubricator.SetFocus;
      listRubr := GetElementsFromTree(rubricator);
      //
      Result := button.Down;
      if not Result then 
      	Log.Error('Кнопка ВКЛ/ВЫКЛ Контекстного фильтра не включилась при вводе контекста')
      else
      begin
        if (button.Down) then button.Click();
        rubricator.SetFocus;
        Result := Result and CompareArray(listRubr, GetElementsFromTree(rubricator))
                  and (not button.Down);
        if not Result then 
        	Log.Error('Разные списки Контекстного фильтра до и после ввода несуществующего контекста');
      end;
    end;
    Sys.Keys('[Esc]');
  end
  else
    Log.Error('Не получилось спозиционироваться в поле ' + FD_TYPE);
  //  
  GoToMainMenu;
end;

{
  HLTC77.2.1.21.1: Проверить для поиска по реквизитам, в котором введен контекст в поле в «Слова в тексте».
  HLTC77.2.1.21.2: Проверить для базового поиска. 
  HLTC77.2.1.21.3: Проверить, что выделение можно сбросить опцией в главном меню «Правка/Подсвечивать найденный контекст» и шоткатом Ctrl+Alt+A.
}
function  HLTC77_2_1_21_1_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'деда';
var
  searchType, i;
begin
  try      
    Result := true;
    for i := 1 to 2 do
    begin
      case i of
        1: 
        begin
          searchType := 'ППР';
          if not SearchInPPR([CARD_PPR, ([([	FD_WORDS_IN_TEXT, ([CONTEXT]) ]) ])]) then
            Raise('Не получилось произвести поиск ППР');
        end;
        2:
        begin
          searchType := 'БП';
          if not BaseSearch(nil, CONTEXT) then
            Raise('Не получилось произвести поиск БП');
        end;
      end;
      if not OpenDocFromList('*', GetList) then
        Raise('Не получилось открыть первый документ из списка после поиска ' + searchType);
      if not IsTextHighlight then
        Raise('Не найдена подсветка контекста в документе после после поиска ' + searchType);

      // HLTC77.2.1.21.3
      if not ClickByMainMenuItem('Правка\Подсвечивать найденный контекст') then
        Raise('Не получилось кликнуть по пункту меню "Правка\Подсвечивать найденный контекст"');
      if IsTextHighlight then
        Raise('Подсветка контекста не выключилась после отключения из главного меню. Документ был открыт после поиска ' + searchType);
      
      CloseTabIfNeeded;        
    end;
  except
    Result := false;
    Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  end;
  GoToMainMenuWithCloseTabsExceptOne;
end;

{
HLTC77.2.6.2: Ограничения бизнес-логики
HLTC77.2.6.2.1: Проверить, что при введении ДАТЫ С более поздней чем ДАТА ПО и
 нажатии кнопки «Искать» система выдаёт предупрежедние..
HLTC77.2.1.16.1.4: Дата принятия
}
function  HLTC77_2_6_2_1_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, resArray;
  listTree;
begin
	Result := False;
  //
  cardData := 
    [
  	CARD_PPR, ([
      ([
  	FD_ACCEPTANCE_DATE_FROM, ([
  		'05.06.1999']) ]),([
  	FD_ACCEPTANCE_DATE_TO, ([
  		'05.03.1999']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];
  if FillPPRCard(cardData) then
  begin
    Sys.Keys('^[Enter]');
    Result := WaitForErrorWindow <> '';
    if not Result then
    	Log.Error('Не найдено окно с ошибкой неправильно введенной Дате с > Дате по');
  end
  else
    Log.Error('Не получилось заполнить Карточку Запроса ППР');
  GoToMainMenu;
end;

{
  HLTC77.2.7: Контекст
    HLTC77.2.7.1: Ввести контекст, не содержащий других символов, кроме цифр и букв (латинских и русских). Разрешённые символы:
    HLTC77.2.7.1.1: При вводе контекста разрешается использование только ниже перечисленных символов: буквы (a..z, A..Z, а..я, А..Я), цифры (0..9), символы <@>, <№>, <–>, <_> <“>, <пробел>, </> и <.>; символы <!> и <*> (только в конце слов).
    HLTC77.2.7.4: Поиск строки всех разрешенных символов: «@№0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzёАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя». Проверить для полей «слова в названии» и «слова в тексте».
}
//  HLTC77.2.7.5: Поиск строки всех запрещенных символов: {|}<=>?#$%&()[\]`:!
//  Проверить для полей «слова в названии» и «слова в тексте».  
function  HLTC77_2_7_Execute(var  current_state: OleVariant): OleVariant;
const
  CONT_EXISTS = '@№0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzёАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя';
  CONT_NOTEXISTS = '()\/{|}<=>?#$%&()[]`:!';
var
  i, formInfo, error_str;
begin
	Result := true;
  if PositionInPPR(FD_WORDS_IN_CAPTION) then
  begin              
    Sys.Keys(CONT_EXISTS);
    formInfo := SearchInPPR('', 'IsFillCard:=false;IsReturnMessageForm:=true');
    Result := StringCompare('Информация*запрос*отсутствует*', GetParam(formInfo, WFMF_RES_MSGTEXT, ''));
    if not Result then
    	ErrorResult('Предупреждение о несуществующем результате поиска НЕ выдается!');
  end
  else
    Result := ErrorResult('Не получилось спозиционироваться в поле ' + FD_WORDS_IN_CAPTION);
    
  for i:=1 to Length(CONT_NOTEXISTS) do
  if PositionInPPR(FD_WORDS_IN_CAPTION) then
  begin
    case CONT_NOTEXISTS[i] of
      '!':
      begin
        Sys.Keys('*!!');
        if not (GetValueFromEdit = '!') then 
          Result := ErrorResult('Ввелось "' + GetValueFromEdit + '", должно "!"');
      end;
      '[':
      begin
        Sys.Keys('[[');
      end;
      else
        Sys.Keys(CONT_NOTEXISTS[i]);
    end;
    Sys.Keys('^[Enter]');
    
    // разрешенные символы, проверяются в общем цикле
    if ((CONT_NOTEXISTS[i] = '!') and (WaitForErrorWindow(Options.Run.Timeout div 10, '*Символ*может использоваться*') = '') or
        (
         (CONT_NOTEXISTS[i] = '`')or
         (CONT_NOTEXISTS[i] = ':')or
         (CONT_NOTEXISTS[i] = '№')or
         (CONT_NOTEXISTS[i] = '(')or(CONT_NOTEXISTS[i] = ')')or
         (CONT_NOTEXISTS[i] = '\')or(CONT_NOTEXISTS[i] = '/')or
         (CONT_NOTEXISTS[i] = '{')or(CONT_NOTEXISTS[i] = '}')or
         (CONT_NOTEXISTS[i] = '<')or(CONT_NOTEXISTS[i] = '>')or
         (CONT_NOTEXISTS[i] = '[')or(CONT_NOTEXISTS[i] = ']')
        ) and (WaitForWarningWindow(Options.Run.Timeout div 10, '*отсутствует*в установленном*комплекте*', true, '#Вернуться*') = '')
    ) then
      Result := ErrorResult('При вводе символа " ' + CONT_NOTEXISTS[i] + ' " не появляется предупреждение об ошибке, что символ не может использоваться при контекстном поиске');
    //
    
    error_str := WaitForErrorWindow(Options.Run.Timeout div 30);
    if error_str <> '' then
      Result := ErrorResult('При вводе символа " ' + CONT_NOTEXISTS[i] + ' " вылетело сообщение об ошибке "' + error_str + '"');       

    error_str := WaitForWarningWindow(Options.Run.Timeout div 30);
    if error_str <> '' then
      Result := ErrorResult('При вводе символа " ' + CONT_NOTEXISTS[i] + ' " вылетело предупреждение с сообщением "' + error_str + '"');
    error_str := WaitForWarningWindow(Options.Run.Timeout div 30, '', true, '#Вернуться*');
    if error_str <> '' then
      Result := ErrorResult('При вводе символа " ' + CONT_NOTEXISTS[i] + ' " вылетело предупреждение с сообщением "' + error_str + '"');
  end
  else
    Result := ErrorResult('Не получилось спозиционироваться в поле ' + FD_WORDS_IN_CAPTION);
  GoToMainMenu;
end;

{
  HLTC77.2.7.3: При вставке контекста в КЗ из Clipboard должны фильтроваться (заменяться на пробелы) все символы, кроме допустимых. 
    При этом фильтруются также и символы <!> и <*> , т.к. они управляющие и считается, что при копировании из Clipboard они, скорее всего, попадают в запрос случайно.
}
function  HLTC77_2_7_3_Execute(var  current_state: OleVariant): OleVariant;
const
  TEXT_SOURCE = '№ ! * 012 345 67 89 ! * / < = > ? # $ % № ( ) ] [ [ \ _ " ` : . / '' | @ *|';
  TEXT_RESULT = '№ 012 345 67 89 / < > % № ( ) ] [ [ \ ` : . / ''';
var
  str;
begin
try
	Result := true;
  if not PositionInPPR(FD_WORDS_IN_CAPTION) then
    Raise('Не получилось перейти к полю "' + FD_WORDS_IN_CAPTION + '"');
                
  Sys.Clipboard := TEXT_SOURCE;
  if not PasteFromClipboard then
    Raise('Не получилось вставить строку в КЗ ППР');
  if SearchInPPR('', 'IsFillCard:=false') then
    Raise('Поиск прошел, хотя не должен');

  str := GetValueFromEdit;
  if not StringCompare(TEXT_RESULT, str) then
    Raise('Отфильтровалось неправильное значение при вставке в поле контекста ППР, ожидаемое "' + TEXT_RESULT + '", ввелось "' + str + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.7.6: Поиск длинного контекста(более 600 символов), например такого: "ааааааа..."
}
function  HLTC77_2_7_6_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, formInfo;
  context_type, i;
begin
try      
  Result := true;
  for i:= 1 to 2 do
  begin   
    case i of
      1: context_type := FD_WORDS_IN_TEXT;
      2: context_type := FD_WORDS_IN_CAPTION;
    end;  
    cardData := 
    [                
    	CARD_PPR, ([([
    	context_type, ([
    		'аааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааааа']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];         
    formInfo := SearchInPPR(cardData, 'IsReturnMessageForm:=true');
    Result := (GetParam(formInfo, WFMF_RES_MSGTYPE, MFT_UNKNOWN) = MFT_WARNING) and Result;
    if not Result then
    	Raise('Не найдено окно с предупреждением о неуспешном поиске ПРР ("600 букв a")');    
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;
{
HLTC77.2.7.7: Поиск большого контекста, состоящего из нескольких одинаковых слов: «один один один один один один один один один один»
HLTC77.2.7.8: Поиск большого контекста в поле «Слова в тексте», состоящего из нескольких неодинаковых слов: «один один один один один один один один один два»
}                 
function  HLTC77_2_7_7_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, 
  context, context_type, num, i, res;
begin       
try      
  Result := true;
  for i:= 1 to 4 do
  begin   
    case i of
      1:begin
          num := 1;
          context := 'один один один один один один один один один один';
          context_type := FD_WORDS_IN_TEXT;
        end;
      2:begin
          num := 0;
          context_type := FD_WORDS_IN_CAPTION;
        end;
      3:begin
          num := 1;
          context := 'один один один один один один один один один два';
          context_type := FD_WORDS_IN_TEXT;
        end;
      4:begin
          num := 0;
          context_type := FD_WORDS_IN_CAPTION;
        end;        
    end;
    cardData := 
    [
    	CARD_PPR, ([([
    	context_type, ([
    		context]) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Да']) ])
      ]) 
    ];
    Log.Message('Начинаем поиск по "' + context_type + ':=' + context + '"');
    res := SearchInPPR(cardData);     
    if num = 0 then
    begin
      if res then
        Result := ErrorResult('Поиск по "' + context_type + ':=' + context + '" прошел!');
    end
    else
    begin
      if not res then
        Result := ErrorResult('Поиск по "' + context_type + ':=' + context + '" НЕ прошел!');
    end;
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));  
end;
  GoToMainMenu;
end;

{
HLTC77.2.7.9: Поиск большого контекста в поле «Слова в тексте», состоящего из нескольких разных слов: 
  «420 2 245 сто тысяч триста тысяч один два четыреста восемьдесят 26». 
  Найдется один документ "Уголовный кодекс РФ от 13 июня 1996 г. N 63-ФЗ (действующая редакция)".
  
  Причем найдется второй параграф части 245 УК, с подсвеченным контекстом: 420, 2, 245 ... 26.
}
function  HLTC77_2_7_9_Execute(var  current_state: OleVariant): OleVariant;
const
  SEARCH_CONTEXT = '420 2 245 сто тысяч триста тысяч один два четыреста восемьдесят 26';
  RES_CONTEXT = '*420*2*ста тысяч трехсот тысяч одного четырехсот восьмидесяти*245*26*';
var
  cardData, docsName;
begin       
try      
  Result := true;
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		SEARCH_CONTEXT ]) ])
      ]) 
    ];
  docsName := 
    [
      ([FL_NUMBER, '1']),
      ([FL_EXISTS_CONTEXT_SEARCH_AND_HIGHLIGHT, 'Уголовный кодекс*N 63-ФЗ*', ([SEARCH_CONTEXT]), RES_CONTEXT])
    ];
  if not SearchInPPR(cardData) then
  	Raise('Не получилось выполнить поиск ППР');
  if not FindInList(docsName) then
   	Raise('Результат поиска ППР не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.2.7.10: Поиск большого контекста в поле «Слова в тексте», состоящего из нескольких разных слов: 
  «Количество бюджетополучателей средств федерального бюджета до которых органом Федерального казначейства доводятся лимиты бюджетных обязательств и объемы финансирования в соответствии с приказом Минфина РФ от 10.06.2003 N 50н».  
  Найдется 2 документа:
    Новые таблицы. Приказ Федерального казначейства от 8 августа 2005 г. N 9н*
    Приказ Федерального казначейства от 8 августа 2005 г. N 9н*
}
function  HLTC77_2_7_10_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, docsName;
begin       
try      
  Result := true;
  cardData := 
    [                
    	CARD_PPR, ([([
    	FD_WORDS_IN_TEXT, ([
    		'Количество бюджетополучателей средств федерального бюджета до которых органом Федерального казначейства доводятся лимиты бюджетных обязательств и объемы финансирования в соответствии с приказом Минфина РФ от 10.06.2003 N 50н']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ])
      ]) 
    ];
  docsName := 
    [
      ([FL_NUMBER, '2']),
      ([FL_EXISTS_INT, 'Новые таблицы. Приказ Федерального казначейства от 8 августа 2005 г. N 9н*']),
      ([FL_EXISTS_INT, 'Приказ Федерального казначейства от 8 августа 2005 г. N 9н*'])
    ];
  if not SearchInPPR(cardData) then
  	Raise('Не получилось выполнить поиск ППР');
  if not FindInList(docsName) then
   	Raise('Результат поиска ППР не соответствует эталону');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.2.1.22: Перейти в диалог выбора реквизитов, выбрать несколько. Проверить, что в нижнем фрейме окна отображены выбранные атрибуты вместе с логическими условиями.
  HLTC77.2.1.22.1: Проверить, что в списке выбранных условий можно удалять элементы, что приведет к автоматической очистке соответствующих атрибутов.
}
function  HLTC77_2_1_22_Execute(var  current_state: OleVariant): OleVariant;
var
  attributes, cardData, cardData1;
begin
	Result := false;
  cardData := 
    [
    	CARD_PPR, ([ ([
    	FD_TYPE, ([
    		'[ИЛИ]Акт',
    		'[ИЛИ]Выписка',
    		'[ИЛИ]ГЭСН']) ])
         ]) 
    ];
  cardData1 := 
    [
    	CARD_PPR, ([ ([
    	FD_TYPE, ([
    		'[ИЛИ]Акт',
    		'[ИЛИ]ГЭСН']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ]) ]) 
    ];
  if not FillPPRCard(cardData) then
    Log.Error('Не получилось заполнить Карточку Запроса ППР')
  else
  if PositionInPPR(FD_TYPE, false) then
  begin
    Sys.Keys('[Enter]');
    attributes := GetFromAttributeSelect('ВЫБРАННЫЕ АТТРИБУТЫ');
    if not IsExists(attributes) then
    	Log.Error('Не найдено окно "ВЫБРАННЫЕ АТТРИБУТЫ" для поля Тип')
    else
    begin
      attributes.SetFocus;
      Sys.Keys('[Home]');
      Result := Position_by_Text(attributes, 'Выписка');
      Sys.Keys('[Del][Home]');
      Result := Result and (not Position_by_Text(attributes, 'Выписка'));
      if not Result then
        Log.Error('Не удалился элемент "Выписка" из "ВЫБРАННЫЕ АТТРИБУТЫ" для поля Тип')
      else
      begin
        ClickToolbarButton( GetFromAttributeSelect('НИЖНИЙ ТУЛБАР'), 'Ок');
        Result := Result and CompareQueryCardData(cardData1, ExtractQueryCardData(GetFromPPR('КАРТОЧКА ЗАПРОСА')));
        if not Result then
          Log.Error('Удаление элемента "Выписка" из "ВЫБРАННЫЕ АТТРИБУТЫ" для поля Тип не отразилось на КЗ');
      end;
    end;
  end
  else
    Log.Error('Не получилось спозиционироваться в поле ' + FD_TYPE);

  GoToMainMenu;
end;

{
HLTC77.2.1.27: Проверить, что есть возможность поиска в текущем списке:
  HLTC77.2.1.27.1: Опция «Поиск в текущем списке» (в комбобоксе на тулбаре в ППР) доступна только, если КЗ вызвана из списка.
}  
function  HLTC77_2_1_27_1_Execute(var  current_state: OleVariant): OleVariant;
var
  w;
begin
	Result := False;
  //
  if GoToPPR then
  begin
    w := GetToolbarObject(GetFromPPR('НИЖНИЙ ТУЛБАР КАРТОЧКИ ЗАПРОСА'), 'COMBOBOX', 'Тип поиска*');  
    Result := IsExists(w) and (not w.Enabled);
    if not Result then
    	Log.Error('Комбобокс Тип поиска (все или в текущем списке) активен для обычного ППР!');
  end
  else
    Log.Error('Не получилось открыть Карточку Запроса ППР');
  GoToMainMenu;
end;

{
HLTC77.2.1.27.2: Провести поиск по реквизитам, построить список (или просто получить список). 
  Вызвать в списке КЗ, выбрать опцию «Поиск в текущем списке», заполнить поля для поиска и провести его – проверить корректность проведённого поиска. Т.е поиск должен пройти именно в списке.
}
function  HLTC77_2_1_27_2_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData, cardTempData, docsName;
begin
	Result := False;
  docsName := 
    [
    ([FL_NUMBER, '3']),
    ([FL_EXISTS, 'Строительные нормы и правила СНиП 3.05.02-88*']),
    ([FL_EXISTS, 'Строительные нормы и правила СНиП 3.01.03-84 "Геодезические работы в строительстве" (утв. постановлением Госстроя СССР от 4 февраля 1985 г. N 15)']),
    ([FL_EXISTS, 'Строительные нормы и правила СНиП 12-03-99 "Безопасность труда в строительстве. Часть 1. Общие требования" (утв. Постановлением Госстроя РФ от 25 мая 1999 г. N 40) (с изм. и доп. от 26 октября 2000 г.) (не действуют)'])
    ];
  cardData := 
    [
  	CARD_PPR, ([([
  	FD_TYPE, (['[ИЛИ]Акт']) ]),([
  	FD_INOPERATIVE_EDITION, ([
  		'Да']) ]) ]) 
    ];

  if SearchInPPR(cardData) then
  begin
    if not ClickByMainMenuItem('Анализ\Уточнить список') then
      Raise('Не получилось кликнуть по пункту меню "Уточнить список"');
    if not BaseSearchInList(GetList, 'Строительные нормы и правила', 'IsOpenWindow:=false') then
      Raise('Не получилось Уточнить список!');
    Result := FindInList(docsName);
    if not Result then
      Log.Error('Результат поиска не соответствует эталону! Не получилось корректно Уточнить список');
  end
  else
    Log.Error('Не получилось произвести поиск ППР');
  GoToMainMenu;
end;

{
  HLTC77.2.1.7: Проверить, что в карточке ППР нет пунктов поиска по ситуациям (нет словаря ППС)
  HLTC77.2.1.15: Проверить, что область поиска контекст по умолчанию «По всему тексту», причём и при очистке КЗ (по кнопке «Очистить»)
  HLTC77.2.2.11: Проверить, словарь ключевых слов отображается в виде двух уровней: слева ситуации первого уровня (линейный список), а справа – в виде дерева (ситуации первого уровня с вложенными ситуациями второго уровня)
}
function  HLTC77_2_1_7_Execute(var  current_state: OleVariant): OleVariant;
var
  cardData;
begin
	Result := false;

  if GoToPPR then
  begin 
  	Result := not(
                  IsExists(GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ')) or 
                  IsExists(GetFromPPS('СИТУАЦИИ ДОПОЛНИТЕЛЬНОГО УРОВНЯ'))
                );
    if not Result then
    	Log.Error('В КЗ ППР найден словарь ситуаций ППС');
  end
  else
    Log.Error('Не получилось зайти в КЗ ППР');

  GoToMainMenu;
end;

{
  HLTC77.2.1.25: Должна быть возможность сохранить введённый запрос – кнопка на панели инструментов
}
function  HLTC77_2_1_25_Execute(var  current_state: OleVariant): OleVariant;
const
  SAVEDNAME = 'HLTC77_2_1_25';
var
  cardData;
begin
  Result := false;
  cardData := 
    [
    	CARD_PPR, ([ ([
    	FD_TYPE, ([
    		'[ИЛИ]Акт',
    		'[ИЛИ]Выписка',
    		'[ИЛИ]ГЭСН']) ])
         ]) 
    ];
  if FillPPRCard(cardData) then
  begin
    if ClickToolbarButton(GetFromPPR('ТУЛБАР "ПОИСК: ПО РЕКВИЗИТАМ"'), 'Сохранить в Мои*' ) then
    begin
      Result := SimpleSaveToFolders(SAVEDNAME, true) and DeleteObjectFromFolder(MY_DOCS_PATH + SAVEDNAME);
      if not Result then
      	Log.Error('Не получилось сохранить и удалить запрос ППР');
    end
    else
    	Log.Error('Не получилось кликнуть по "Сохранить в Мои документы" (возможно кнопка не существует на тулбаре)');
  end
  else
    Log.Error('Не получилось заполнить Карточку Запроса ППР');
  //  
  GoToMainMenu;
end;

{
  HLTC77.2.1.26: Проверить, что можно стирать введённые значения из полей.
}
function HLTC77_2_1_26_Execute(var  current_state: OleVariant): OleVariant;
const
  doctype1 = 'Форма документа';
var
  i;
begin
try
  Result := false;
  if not PositionInPPR(FD_TYPE) then
    Raise('Не получилось спозиционироваться в поле Тип');

  Sys.Keys(doctype1 + '[Enter]');
  if not StringCompare(doctype1, GetValueFromEdit) then
    Raise('Ввелось неправильное значение, ожидаемое "' + doctype1 + '", ввелось "' + GetValueFromEdit + '"');

  Sys.Keys('[End]'); for i := 1 to 15 do Sys.Keys('[BS]');
  Result := GetValueFromEdit = ''; 
  if not Result then
    Raise('Поле не очистилось! Содержимое: "' + GetValueFromEdit + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.28: Выйти и снова зайти в оболочку под тем же пользователем. 
    Проверить, что свернутость/развернутость групп поисковых атрибутов осталась такой же, как и до выхода.
}
function HLTC77_2_1_28_Execute(var  current_state: OleVariant): OleVariant;
const
  LOGINNAME = 'HLTC77_2_1_28';
var
  i, groupData, queryCard, isHideCard;
begin
try
  Result := true;

  groupData :=
    [
      FD_GROUP_CONTEXT_SEARCH,
      FD_GROUP_BASIC_REQ,
      FD_GROUP_LAW_CALENDAR,
      FD_GROUP_MU_REG,
      FD_GROUP_EXTENDED_REQ
    ];

  if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
    Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');

  // проверка сохранения свернутости групп 
  queryCard := GoToPPR('', true);
  if not IsExists(queryCard) then Raise('Не получилось открыть КЗ ППР');
  for i := VarArrayHighBound(groupData, 1) downto VarArrayLowBound(groupData, 1) do
  begin
    if not PositionInQueryCard(queryCard, groupData[i], [CT_GROUP]) then
      Raise('Не получилось спозиционироваться на группе "' + groupData[i] + '" в КЗ ППР');
    queryCard.Keys(GRAY_MINUS);
  end;

  if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
    Raise('Не получилось перезапустить оболочку под тем же пользователем "' + LOGINNAME + '"');

  queryCard := GoToPPR('', true);
  if not IsExists(queryCard) then Raise('Не получилось открыть КЗ ППР');
  for i := VarArrayLowBound(groupData, 1) to VarArrayHighBound(groupData, 1) do
  begin
    if not PositionInQueryCard(queryCard, groupData[i], [CT_GROUP]) then
      Raise('Не получилось спозиционироваться на группе "' + groupData[i] + '" в КЗ ППР');
    queryCard.Keys('[Tab]');
    isHideCard := (GetControlType(queryCard.selection) = CT_GROUP) or
                  ((GetControlType(queryCard.selection) <> CT_COMBOBOX) and (GetControlType(queryCard.selection) <> CT_LABEL));
    if not isHideCard then
      Result := ErrorResult('Группа реквизитов "' + groupData[i] + '" видимо развернута!');
  end;

  // проверка сохранения развернутости групп  
  queryCard := GoToPPR('', true);
  if not IsExists(queryCard) then Raise('Не получилось открыть КЗ ППР'); 
  for i := VarArrayHighBound(groupData, 1) downto VarArrayLowBound(groupData, 1) do
  begin
    if not PositionInQueryCard(queryCard, groupData[i], [CT_GROUP]) then
      Raise('Не получилось спозиционироваться на группе "' + groupData[i] + '" в КЗ ППР');
    queryCard.Keys(GRAY_MINUS);
    queryCard.Keys(GRAY_PLUS);  
  end;

  if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
  Raise('Не получилось перезапустить оболочку под тем же пользователем "' + LOGINNAME + '"');

  queryCard := GoToPPR('', true);
  if not IsExists(queryCard) then Raise('Не получилось открыть КЗ ППР');
  for i := VarArrayLowBound(groupData, 1) to VarArrayHighBound(groupData, 1) do
  begin
    if not PositionInQueryCard(queryCard, groupData[i], [CT_GROUP]) then
      Raise('Не получилось спозиционироваться на группе "' + groupData[i] + '" в КЗ ППР');
    queryCard.Keys('[Tab]');
    isHideCard := (GetControlType(queryCard.selection) = CT_GROUP) or
                  ((GetControlType(queryCard.selection) <> CT_COMBOBOX) and (GetControlType(queryCard.selection) <> CT_LABEL));
    if isHideCard then
      Result := ErrorResult('Группа реквизитов "' + groupData[i] + '" видимо свернута!');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.29: При прерывании поиска кнопкой Отмена должно выдаваться сообщение "Поиск был прерван пользователем. 
    Для получения дополнительных консультаций вы можете обратиться к специалистам линии Правовой поддержки онлайн".
}
function HLTC77_2_1_29_Execute(var  current_state: OleVariant): OleVariant;
const
  QUERY = '1* 2* 3*';
  WARN_MSG = 'Поиск был прерван пользователем*Для получения дополнительных консультаций вы можете обратиться к специалистам линии Правовой поддержки онлайн*';
var
  s;
begin
try      
  if not GoToBaseSearch then
    Raise('Не получилось открыть панель БП');
  if not EnterContextInBaseSearch(query, 'IsDoSearch:=true') then
    Raise('Не получилось выполнить поиск');

  // поиск со * стал быстрее в 7.8.1, отключаем 
  //if WaitForProgressIndicatorAbsence(Options.Run.Timeout div 4) then
  //  Raise('Не найден прогресс-индикатор БП');
  // и это тоже, делаем через Esc
  //w := GetFromShell('КНОПКА "ОТМЕНА" ОКНА ПРОГРЕССА ИНДИКАТОРА ПОИСКА');
  //if not IsExists(w) then
  //  Raise('Не найдена КНОПКА "ОТМЕНА" ОКНА ПРОГРЕССА ИНДИКАТОРА ПОИСКА');    
  //if not ClickOnVgSceneObject(w) then
  //  Raise('Не получилось кликнуть КНОПКА "ОТМЕНА" ОКНА ПРОГРЕССА ИНДИКАТОРА ПОИСКА');

  Sys.Keys(KeyPause + KeyPause + KeyPause + '[Esc]');
  s := WaitForWarningWindow;
  
  Result := StringCompare(WARN_MSG, s);
  if not Result then
    Raise('Не найдено окно предупреждения об отмене поиска пользователем или текст окна отличается: "' + s + '"');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.31.1.5: Проверить, что во всех полях с датами по умолчанию включен режим замены.
}
function HLTC77_2_1_31_1_5_Execute(var  current_state: OleVariant): OleVariant;
const
  DATE_TEXT = '11.12.2013';  
var
  i, value, arr_fields;
begin
try
  Result := true;

  arr_fields := [
    FD_ACCEPTANCE_DATE_FROM, FD_ACCEPTANCE_DATE_TO,
    FD_LC_IN_DATE_FROM, FD_LC_IN_DATE_TO,
    FD_LC_ABOLISHED_DATE_FROM, FD_LC_ABOLISHED_DATE_TO,
    FD_LC_CHANGED_DATE_FROM, FD_LC_CHANGED_DATE_TO,
    FD_MU_REG_DATE_FROM, FD_MU_REG_DATE_TO
  ];
  for i := VarArrayLowBound(arr_fields, 1) to VarArrayHighBound(arr_fields, 1) do  
    if not PositionInPPR(arr_fields[i]) then
      Result := ErrorResult('Не получилось перейти к полю КЗ ППР "' + arr_fields[i] + '"')
    else
    begin
      Sys.Keys('[Home]02032004[Home]' + DATE_TEXT);
      value := GetValueFromEdit;
      if not StringCompare(DATE_TEXT, value) then
        Result := ErrorResult('Неправильно работает ввод даты с заменой в поле КЗ ППР "' + arr_fields[i] + '".' + EndOfLine + 'Ожидали: "' + DATE_TEXT + '", получили: "' + value + '"');
    end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.31.1.2.8: Проверить, что при вводе даты 01.15.00 она подсвечивается красным.  
}
function HLTC77_2_1_31_1_2_8_Execute(var  current_state: OleVariant): OleVariant;
const
  DATE_TEXT = '01.15.00';  
var
  i, w, x, y;
  font_name, font_size;
  emu_text_img, arr_fields, arr_sets, arr_sets_values;
begin
try
  Result := true;

  arr_fields := [
    FD_ACCEPTANCE_DATE_FROM, FD_ACCEPTANCE_DATE_TO,
    FD_LC_IN_DATE_FROM, FD_LC_IN_DATE_TO,
    FD_LC_ABOLISHED_DATE_FROM, FD_LC_ABOLISHED_DATE_TO,
    FD_LC_CHANGED_DATE_FROM, FD_LC_CHANGED_DATE_TO,
    FD_MU_REG_DATE_FROM, FD_MU_REG_DATE_TO
  ];
  arr_sets := GetSettingsStyleEditor([
                (['ТЕКСТ', 'КОМБОБОКС "НАЗВАНИЕ"']),
                (['ТЕКСТ', 'КОМБОБОКС "РАЗМЕР"'])
              ]);
  font_name := arr_sets[0][2];
  font_size := arr_sets[1][2];
  if font_name = '' then 
    Raise('Не смогли получить название шрифта!'); 
  if font_size = '' then
    Raise('Не смогли получить размер шрифта!');   
  
  for i := VarArrayLowBound(arr_fields, 1) to VarArrayHighBound(arr_fields, 1) do  
    if not PositionInPPR(arr_fields[i]) then
      Result := ErrorResult('Не получилось перейти к полю КЗ ППР "' + arr_fields[i] + '"')
    else
    begin
      w := GetFromPPR('КАРТОЧКА ЗАПРОСА');
      if not IsExists(w) then
        Raise('КЗ ППР не найдена!');
      
      Sys.Keys('[Down][Down][Up][Up]' + DATE_TEXT); //для полной отрисовки поля
      Sys.Keys('[Home]' + DATE_TEXT);

      emu_text_img := RenderTextToPicture(DATE_TEXT, font_name, font_size, 'TextColor:=clRed; BkColor:=clWhite');
      if not FindPicture(w, emu_text_img, x, y) then
      begin
        Log.Picture(emu_text_img, 'Изображение для проверки текста даты');
        Result := ErrorResult('В поле КЗ ППР "' + arr_fields[i] + '" дата ' + DATE_TEXT + ' отображается неправильно или не подсвечивается красным! Возможно неправильно читается шрифт из настроек: "' + font_name + '" / "'  + font_size + '"');
      end;
    end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.32: Между тулбаром и первой группирующей кнопкой располагается шапка, состоящая из иконки ППР и названия КЗ: «Поиск по реквизитам».
}
function HLTC77_2_1_32_Execute(var  current_state: OleVariant): OleVariant;
begin
try
  Result := true;

  GoToMainMenu;
  if not GotoPPR then
    Raise('Не получилось открыть ППР');

  if not IsExists(GetFromPPR('ЗАГОЛОВОК КЗ')) then
    Result := ErrorResult('Заголовок "Поиск по реквизитам" в КЗ ППР не найден или изменился.');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.33: Поле, в котором находится курсор, обводится голубой рамкой.
}
function HLTC77_2_1_33_Execute(var  current_state: OleVariant): OleVariant;
var
  queryCard, fieldsArray, i;  
begin
try
  Result := true;
  queryCard := GotoPPR('', true); 
  if not IsExists(queryCard) then
    Raise('Не получилось открыть ППР');

  fieldsArray :=
    [
      ([FD_GROUP_CONTEXT_SEARCH, CT_GROUP]),  
      ([FD_GROUP_BASIC_REQ, CT_GROUP]),      
      ([FD_GROUP_LAW_CALENDAR, CT_GROUP]),  
      ([FD_GROUP_MU_REG, CT_GROUP]),      
      ([FD_GROUP_EXTENDED_REQ, CT_GROUP]),  
      ([FD_WORDS_IN_CAPTION, CT_COMBOBOX]),      
      ([FD_WORDS_IN_TEXT, CT_COMBOBOX]),  
      ([FD_TYPE, CT_COMBOBOX]),      
      ([FD_MU_REG_STATUS, CT_COMBOBOX]),  
      ([FD_REGULATION_TERRITORY, CT_COMBOBOX])
    ];

  for i := VarArrayHighBound(fieldsArray, 1) downto VarArrayLowBound(fieldsArray, 1) do
  begin
    if not PositionInQueryCard(queryCard, fieldsArray[i][0], [fieldsArray[i][1]]) then
      Result := ErrorResult('Не получилось перейти к полю "' + fieldsArray[i][0] + '" в КЗ ППР')
    else
    if fieldsArray[i][1] = CT_COMBOBOX then
    begin
      queryCard.Keys('[Down][Up]');
      if not IsBlueRectExists(queryCard) then
        Result := ErrorResult('Не найдена голубая рамка для поля "' + fieldsArray[i][0] + '" КЗ ППР');
    end
    else
    begin
      if IsBlueRectExists(queryCard) then
        Result := ErrorResult('Найдена голубая рамка для поля "' + fieldsArray[i][0] + '" КЗ ППР');
    end;
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.8: Нефункциональные требования
  HLTC77.2.8.2: Проверить функционирование шотката для вызова КЗ ППР F7
  HLTC77.2.8.3: Проверить функционирование шотката для вызова КЗ ППС F5
}
function  HLTC77_2_8_2_Execute(var  current_state: OleVariant): OleVariant;
begin
  Result := GoToMainMenu;
  Sys.Keys('[F7]'); // ППР
  if not IsExists(GetFromPPR('КАРТОЧКА ЗАПРОСА')) then
  begin
    Result := false;
    Log.Error('Не получилось открыть ППР через шоткат F7');
  end;
  Sys.Keys('[F5]'); // ППC
  if not IsExists(GetFromPPS('СИТУАЦИИ ДОПОЛНИТЕЛЬНОГО УРОВНЯ')) then
  begin
    Result := false;
    Log.Error('Не получилось открыть ППС через шоткат F5');
  end;
  //  
  GoToMainMenu;
end;

{
  HLTC77.2.8.5: Проверить для деревьев ППР, ППС и ППИО, что при нажатии кнопки «Очистить» очищаются только выбранные значения, а экран при этом остается в том же месте(скроллирования не происходит).
}
function HLTC77_2_8_5_Execute(var  current_state: OleVariant): OleVariant;
var
  i, w, w_sel, w_tb;
  last_value, last_count;
begin
try
  Result := true;
  for i := 1 to 4 do
  begin
    case i of
      1:  begin  
            Log.Message('Выполняем тест для ППР');
            if not PositionInQueryCard(GoToPPR('', true), FD_SOURCE, [CT_COMBOBOX]) then
              Raise('Не получилось спозиционироваться в КЗ ППР на поле "' + FD_SOURCE + '"!');
            Sys.Keys('[Enter]');
            w := GetFromAttributeSelect('ДЕРЕВО АТТРИБУТОВ');
            w_sel := GetFromAttributeSelect('ВЫБРАННЫЕ АТТРИБУТЫ');
            w_tb := GetFromAttributeSelect('НИЖНИЙ ТУЛБАР');
          end;
      2:  begin
            Log.Message('Выполняем тест для ППОИЗ');
            if not PositionInQueryCard(GoToAnalyticReview('', true), FD_SOURCE, [CT_COMBOBOX]) then
              Raise('Не получилось спозиционироваться в КЗ ППОИЗ на поле "' + FD_SOURCE + '"!');
            Sys.Keys('[Enter]');
            w := GetFromAttributeSelect('ДЕРЕВО АТТРИБУТОВ');
            w_sel := GetFromAttributeSelect('ВЫБРАННЫЕ АТТРИБУТЫ');
            w_tb := GetFromAttributeSelect('НИЖНИЙ ТУЛБАР');
          end;
      3:  begin
            // Есть ошибка http://mdp.garant.ru/pages/viewpage.action?pageId=274465491, пока отключаем  
            Continue;
            //  
            Log.Message('Выполняем тест для ППС');      
            if not GoToPPS then
              Raise('Не получилось спозиционироваться в КЗ ППС!');
            w := GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ');
            w_sel := GetFromPPS('ВЫБРАННЫЕ СИТУАЦИИ');
            w_tb := GetFromPPS('НИЖНИЙ ТУЛБАР');
          end;
      4:  begin
            Log.Message('Выполняем тест для ППИО');      
            if not GoToPPIO then
              Raise('Не получилось спозиционироваться в КЗ ППИО!');
            w := GetFromPPIO('ДЕРЕВО АТТРИБУТОВ');
            w_sel := GetFromPPIO('ВЫБРАННЫЕ АТТРИБУТЫ');
            w_tb := GetFromPPIO('НИЖНИЙ ТУЛБАР ППИО');
          end;
    end;

    if NOT IsExists(w) then 
      Raise('Не получилось найти ДЕРЕВО АТТРИБУТОВ из выбора значений реквизита!');
    if NOT IsExists(w_sel) then 
      Raise('Не получилось найти список ВЫБРАННЫЕ АТТРИБУТЫ');
    if NOT IsExists(w_tb) then 
      Raise('Не получилось найти тулбар с кнопкой очистить');

    try
      last_count := CountElementInTree(w_sel);
      w.Keys('[Ins][Ins][Ins][Up]');
      last_value := common.GetWindowText(w);
        
      if last_count = CountElementInTree(w_sel) then
        Raise('Значения не выбрались, т.к. количество выбранных элементов не изменилось.');
      if not ClickToolbarButton(w_tb, 'Очистить') then
        Raise('Не получилось Очистить выбранные значения');
      if last_value <> common.GetWindowText(w) then
        Result := ErrorResult('После очистки выбранных аттрибутов изменился текущий элемент списка на "' + common.GetWindowText(w) + '", ожидали "' + last_value + '"');
    finally
      if i < 3 then Sys.Keys('[Esc]');
    end;    
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.2.6.1.7: Проверить, что при вводе даты в поле С и переходе в другое место карточки (например нажати ТАБ) – 
  в поле По автоматически подставляется эта же дата.
HLTC77.2.6.1.6: Проверить, что контрол для ввода даты устроен так, что, 
  вводя цифры, автоматически происходит переход между днями, месяцами и годами
  (т.е. введя 2 цифры даты курсор перемещается автоматически для ввода месяца).
HLTC77.2.6.1.4: Проверить, что любые символы, кроме цифр, вводимые в поле даты, игнорируются.
HLTC77.2.6.1.2: Проверить ввод даты с клавиатуры непосредсвенно в поле (точка, 
  запятая и слеш – разделители в дате дней, месяцев и годов)
HLTC77.2.6.1.2.1: ввести 01.01.2001
HLTC77.2.6.1.2.2: ввести 01.01.1999
HLTC77.2.6.1.2.3: ввести 01.01.1901
HLTC77.2.6.1.2.4: ввести 01.01.1899
HLTC77.2.6.1.2.5: ввести 01.01.2099
HLTC77.2.6.1.2.6: ввести 01.01.2101
HLTC77.2.6.1.2.7: ввести 1.1.1 – должен расшириться до 01.01.2001
HLTC77.2.6.1.3: Проверить, что при вводе в поле даты дня и месяца,
 автоматически подставляется текущий год. Т.е вводим 01.01, затем переходим к другому полю (например по Tab) – система автоматически расширяет дату до 01.01.2006
HLTC77.2.1.31.1.7:
  Проверить, что при вводе даты в поле С и переходе в поле По (например нажатием Tab) – в поле По автоматически подставляется эта же дата. 
}
function  HLTC77_2_6_1_2_Execute(var  current_state: OleVariant): OleVariant;
var
  i, fielddata, textData;
  year, month, day;
begin
  utilities.DecodeDate(utilities.Date, year, month, day);

  textData :=
    [
    ([FD_ACCEPTANCE_DATE_FROM, '1[Right]1[Right]1', '01.01.2001']),
    ([FD_ACCEPTANCE_DATE_FROM, '№%abcd!a!b!c!d!a!b!c!d', '']),
    ([FD_ACCEPTANCE_DATE_FROM, '0101', '01.01.' + IntToStr(year)]), 
    ([FD_ACCEPTANCE_DATE_FROM, '01012001', '01.01.2001']),
    ([FD_ACCEPTANCE_DATE_FROM, '01011999', '01.01.1999']),
    ([FD_ACCEPTANCE_DATE_FROM, '01011901', '01.01.1901']),
    ([FD_ACCEPTANCE_DATE_FROM, '01011899', '01.01.1899']),
    ([FD_ACCEPTANCE_DATE_FROM, '01012099', '01.01.2099']),
    ([FD_ACCEPTANCE_DATE_FROM, '01012101', '01.01.2101']),
    ([FD_ACCEPTANCE_DATE_FROM, '24031576', '24.03.1576']),
    ([FD_ACCEPTANCE_DATE_TO, '', '24.03.1576'])
    ];
  Result := true;
  for i := VarArrayLowBound(textData,1) to VarArrayHighBound(textData,1) do
  begin
    // для проверки HLTC77.2.1.31.1.7 не открываем новую КЗ, а позиционируемся из заполненного поля С: в поле По:
    if PositionInPPR(textData[i][0], textData[i][0] <> FD_ACCEPTANCE_DATE_TO) then
    begin  
      if textData[i][0] <> FD_ACCEPTANCE_DATE_TO then 
      begin
        Sys.Keys(textData[i][1]);
        Sys.Keys('[Tab]![Tab]');
      end;

      fielddata := GetValueFromEdit;
      if not StringCompare(fielddata, textData[i][2]) then
      begin
        Result := false;
        Log.Error('Ввелось неправильное значение "' + fielddata + '" для поля ' + textData[i][0] + '. Должно быть "' + textData[i][2] + '"');
      end;
    end
    else
    begin
      Result := false;
      Log.Error('Не получилось спозиционироваться на поле ' + textData[i][0]);
    end;
  end;
  GoToMainMenu;
end;

{  
  HLTC77.2.2.2: Проверить контекстную фильтрацию.  
    HLTC77.2.2.2.1: Если подстрока фильтрации встречается в названии термина, то он попадает в результирующий список вместе с ключевым словом 1го уровня («узлом»).
    HLTC77.2.2.2.2: Если подстрока фильтрации встречается в названии узла, то все подузлы также показываются после фильтрации.
    HLTC77.2.2.2.3: Если подстрока встречается и в названии узла и в названиях подэлементов – в списке остаются даже те подэлементы, у которых нет искомой подстроки.
    HLTC77.2.2.2.6: Проверить введение другого контекста, когда уже какой-то фильтр введен и применен.
}
function  HLTC77_2_2_2_Execute(var  current_state: OleVariant): OleVariant;
const
  WORD1 = 'номерами топик';
  WORD2 = 'бухгалтер';
  WORD3 = 'ярмарки';
var
  w, ppsList, listWord1, listWord2, listWord3;
begin
try
  listWord1 := ['А это специальный ключ'];
  listWord2 := ['Бух. отчетность', 'Бух.учет и отчетность', 'Бухгалтер главный'];
  listWord3 := ['Рынки, ярмарки', 'Ярмарки, рынки'];
  if not GotoPPS then
    Raise('Не получилось открыть ППС');

  w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPS('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));  
  if not IsExists(w) then
    Raise('Поле контекстного фильтра не найдено');
  ppsList := GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ');
  if not IsExists(ppsList) then
    Raise('Не найдено окно СИТУАЦИИ ОСНОВНОГО УРОВНЯ');

  Result := true;      
  w.Keys('[Home]![End]' + WORD1);  
  if not CompareArray(listWord1, GetElementsFromTree(ppsList)) then
    Result := ErrorResult('После контекстной фильтрации по "' + WORD1 + '", результирующий список отличается от эталонного');
  w.Keys('[Home]![End]' + WORD2);  
  if not CompareArray(listWord2, GetElementsFromTree(ppsList, true)) then
    Result := ErrorResult('После контекстной фильтрации по "' + WORD2 + '", результирующий список отличается от эталонного');
  w.Keys('[Home]![End]' + WORD3);  
  if not CompareArray(listWord3, GetElementsFromTree(ppsList, true)) then
    Result := ErrorResult('После контекстной фильтрации по "' + WORD3 + '", результирующий список отличается от эталонного');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.2.2.7: Проверить «снятие» контекстной фильтрации.
  HLTC77.2.2.2.9: Должна быть кнопка ВКЛ/ВЫКЛ фильтрации на тулбаре
  HLTC77.2.2.12: Быстрый поиск в ППС
  HLTC77.2.2.12.1: Проверить, что находясь в дереве ситуаций при вводе с клавиатруы автоматически включается контекстная и фильтрация и дерево фильтруется.
}
function  HLTC77_2_2_2_7_Execute(var  current_state: OleVariant): OleVariant;
const
	DOCNAME = 'автостоянки';
var
  w, button, rubricator;
  listRubr, toolbar;
begin
	Result := false;
  if GoToPPS then
  begin
    rubricator := GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ');
    w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPS('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));
    button := GetFromContextFilterForm('КНОПКА "ВКЛЮЧИТЬ КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPS('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));
    if not IsExists(rubricator) then
    	Log.Error('Не найдено окно "СИТУАЦИИ ОСНОВНОГО УРОВНЯ" в ППС')
    else
    if not IsExists(w) then
    	Log.Error('Не найдено поле ввода Контекстного фильтра')
    else
    if not IsExists(button) then 
    	Log.Error('Не найдена кнопка ВКЛ/ВЫКЛ Контекстного фильтра')
    else
    begin
      w.Keys('[End]![Home]' + DOCNAME);
      rubricator.Keys('[Home]');
      listRubr := common.GetWindowText(rubricator.Handle);

      Result := button.Down;
      if not Result then 
      	Log.Error('Кнопка ВКЛ/ВЫКЛ Контекстного фильтра не включилась при вводе контекста')
      else
      begin
        if (button.Down) then button.Click;
        rubricator.Keys('[Home]');
        Delay(Options.Run.Timeout div 3);        
        Result := Result and (listRubr <> common.GetWindowText(rubricator.Handle)) and (not button.Down);
        if not Result then 
        	Log.Error('Контекстный фильтр работает неправильно при ВКЛ/ВЫКЛ, текущий элемент "' + common.GetWindowText(rubricator.Handle) + '", ожидалось "' + listRubr + '"');
      end;
    end;
  end
  else
    Log.Error('Не открыть ППС');
  
  GoToMainMenu;
end;

{
  HLTC77.2.2.4: Проверить, что при перемещении по ППС одновременно происходит позиционирование в дереве ППС во фрейме навигатора.
    В том числе проверить данное обстоятельство, когда во фрейме навигатора открыто не дерево ППС, а что-то иное (при переключении на дерево ППС в этом фрейме, он должен открыться на той позиции, на которой стоит курсор в карточке ППС).
  HLTC77.2.2.5: Проверить, что при перемещении по ППС во фрейме навигатора одновременно происходит позиционирование и в основной карточке ППС. При этом, правое окно должно начинаться с рубрики, выбранной слева.
  HLTC77.2.2.8: Проверить, что при попытке открытия ППС, он открывается с раскрытой рубрикой верхнего уровня и выделена верхняя рубрика (в том числе проверить данное обстоятельство при уже открытом ППС, в котором сделан выбор)
}
function  HLTC77_2_2_4_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'А это специальный ключ';
  CONTEXT2 = 'Авария общая';
  CONTEXT3 = 'Арест имущества';
var
  w1, w2;
begin
try
  try
    Result := true;

    if not SetSettings([(['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]', 'Стандартная'])]) then 
      Raise('Не получилось установить Стандартную КЗ ППС в настройках');
    if not GotoPPS then
      Raise('Не получилось открыть ППС');

    w1 := GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ');
    w2 := GetFromPPS('СИТУАЦИИ ДОПОЛНИТЕЛЬНОГО УРОВНЯ');
    if not StringCompare(CONTEXT1, common.GetWindowText(w1)) then
      Result := ErrorResult('Текущая ситуация основного уровня "' + common.GetWindowText(w1) + '" отличается от ожидаемой "' + CONTEXT1 + '"');
    if not StringCompare(CONTEXT1, common.GetWindowText(w2)) then
      Result := ErrorResult('Текущая ситуация дополнительного уровня "' + common.GetWindowText(w2) + '" отличается от ожидаемой "' + CONTEXT1 + '"');

    if not Position_Internal(w2, CONTEXT2, DELIM_CHAR, true, 'IsPressHome:=true') then
      Raise('Не нашли ситуацию "' + CONTEXT2 + '" в дополнительном уровне');
    Delay(Options.Run.Timeout div 5);
    if not StringCompare(CONTEXT2, common.GetWindowText(w1)) then
      Result := ErrorResult('Текущая ситуация основного уровня "' + common.GetWindowText(w1) + '" отличается от ожидаемой "' + CONTEXT2 + '"');

    if not IsExists(OpenMenuTab) then
      Raise('Не получилось открыть вкладку Меню');
    if not Position_Internal(w2, CONTEXT3, DELIM_CHAR, true, 'IsPressHome:=true') then
      Raise('Не нашли ситуацию "' + CONTEXT3 + '" в дополнительном уровне');
    if not SwitchToNavigatorPage('Ситуации') then
      Raise('Не получилось открыть вкладку Ситуации');
    Delay(Options.Run.Timeout div 5);
    if not StringCompare(CONTEXT3, common.GetWindowText(w1)) then
      Result := ErrorResult('Текущая ситуация основного уровня "' + common.GetWindowText(w1) + '" отличается от ожидаемой "' + CONTEXT3 + '"');
  finally
    SetDefaultSettings;
    GoToMainMenu;
  end;  
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.2.9: Проверить, что в ППС доступен выбор ситуации только по ИЛИ
    HLTC77.2.2.9.1: При клике на иконке слева от элемента первого уровня, то выделяются все ситуации второго уровня, соответствующие текущему элементу первого.
    HLTC77.2.2.9.2: При клике на иконке слева от элемента второго уровня, то только он отмечается по ИЛИ
    HLTC77.2.2.9.3: В контекстном меню доступен выбор только по ИЛИ
}
function  HLTC77_2_2_9_1_Execute(var  current_state: OleVariant): OleVariant;
const
  ELEM1 = 'Автозаправочные станции\противопожарная безопасность';
  ELEM2 = 'Автомобили. Импорт';
var
  pps_wnd;
begin
try
  try
    Result := true;
    if not SetSettings([(['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]', 'Стандартная'])]) then
      Raise('Не получилось установить Стандартную КЗ ППС в настройках');
    if not SearchInPPS([
                         ELEM1,
                         ELEM2,
                         ELEM1,
                         ELEM2
                        ], false) then
      Raise('Не получилось заполнить КЗ ППC');
    pps_wnd := GetFromPPS('ВЫБРАННЫЕ СИТУАЦИИ');
    if not IsExists(pps_wnd) then
      Raise('Не найдено окно "ВЫБРАННЫЕ СИТУАЦИИ" в ППС');
    if not CompareArray([
                          '*',
                          'Автозаправочные станции',
                          'противопожарная безопасность',
                          'Автомобили. Импорт'
                        ], GetElementsFromTree(pps_wnd), true, true) then
      Result := ErrorResult('Содержимое списка "ВЫБРАННЫЕ СИТУАЦИИ" КЗ ППС отличается, похоже изменился способ выбора элементов');

    pps_wnd := GetFromPPS('СИТУАЦИИ ДОПОЛНИТЕЛЬНОГО УРОВНЯ');
    if not IsExists(pps_wnd) then
      Raise('Не найдена КЗ ППС');
    if not OpenAndClickByPopupMenuItem(pps_wnd, 'ИЛИ') then
      Result := ErrorResult('Пункт "ИЛИ" не найден в попап-меню элемента КЗ ППС');
    if OpenAndClickByPopupMenuItem(pps_wnd, 'И') then
      Result := ErrorResult('Найден пункт попап-меню "И" для элемента КЗ ППС');
    if OpenAndClickByPopupMenuItem(pps_wnd, 'КРОМЕ') then
      Result := ErrorResult('Найден пункт попап-меню "КРОМЕ" для элемента КЗ ППС');
  finally
    SetDefaultSettings;
    GoToMainMenu;
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  CommonExceptionHandler;
end;  
end;

{
  HLTC77.2.2.10: Проверить, что есть возможность восстановления ранее введённых запросов (История запросов):
  HLTC77.2.2.10.1: Создать запрос, выполнить, его, снова войти в КЗ и нажать кнопку раскрытия списка «История запросов» – выбрать из списка запрос, он должен загрузится.
  HLTC77.2.2.10.4: Проверить, что имя запроса в истории запросов формируется в виде: «Запрос: <тип запроса>, <время>»
  HLTC77.2.2.10.5: Проверить, что при загрузке запроса с помощью этой кнопки, история не модифицируется.
}
function  HLTC77_2_2_10_1_Execute(var  current_state: OleVariant): OleVariant;
var         
  docsName, ppsData, list1, list2;
begin
try
  Result := true;
  docsName := 
    [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS_CONTEXT, 'Федеральный закон от 21 июля 1997 г. N 116-ФЗ "О промышленной безопасности опасных производственных объектов" (с изм. и доп. от 7 августа 2000 г.)*\*Вхождение 1', (['']) ])
    ];  
  ppsData :=
    ['Авария\авария'];

  if not JurnalClear then
    Raise('Не получилось очистить Журнал работы');  

  if not SearchInPPS(ppsData) then
    Raise('Не получилось произвести поиск ППС');
  if not GoToPPS then
    Raise('Не получилось перейти в ППС');
  if not ClickByPopupMenuItem(ClickToolbarButton(GetFromPPS('ТУЛБАР "ПОИСК: ПО СИТУАЦИИ (ПРЕЕМСТВЕННЫЙ)"'), 'История запросов*', 'ClickForPopupMenu:=true'),
        'Запрос*СИТУАЦИИ*Авария*авария*' + Utilities.DateToStr(utilities.Date) + '*') then 
    Raise('Не получилось кликнуть по выпадающему меню кнопки История запросов ППС');  
  if not (SearchInPPS('', true, false, true) and FindInList(docsName)) then
    Result := ErrorResult('Загруженный список из Истории запросов (выпадающее меню кнопки) отличается от сохраненного!');

  GoToMainMenu;
  if not IsExists(OpenJurnalTab) then
    Raise('Не получилось открыть Журнал работы');    
  list1 := GetElementsFromTree(GetFromNavigator('ВКЛАДКА НАВИГАТОРА "ЖУРНАЛ РАБОТЫ"'), true);
  if not GoToPPS then
    Raise('Не получилось перейти в ППС');
  if not ClickToolbarButton(GetFromPPS('ТУЛБАР "ПОИСК: ПО СИТУАЦИИ (ПРЕЕМСТВЕННЫЙ)"'), 'История запросов*') then
    Raise('Не получилось кликнуть по тулбарной кнопке История запросов в ППС');
  if not OpenObjectFromFolder('*\Поиск по ситуации\*Запрос*СИТУАЦИИ*', OpenJurnalTab) then
    Raise('Не получилось открыть запрос истории ППС из Журнала работы');
  list2 := GetElementsFromTree(GetFromNavigator('ВКЛАДКА НАВИГАТОРА "ЖУРНАЛ РАБОТЫ"'), true);
  if not CompareArray(list1, list2) then
    Result := ErrorResult('История работы в Журнале работы изменилась после открытия Запроса ППС из истории');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
HLTC77.2.2.10.2: Проверить, что при обычном нажатии на кнопку «История запросов» загружается последний введённый запрос.
}
function  HLTC77_2_2_10_2_Execute(var  current_state: OleVariant): OleVariant;
var         
  docsName, ppsData;
begin
  Result := false;
  docsName := 
    [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS_INT, 'Федеральный закон от 21 июля 1997 г. N 116-ФЗ "О промышленной безопасности опасных производственных объектов" (с изм. и доп. от 7 августа 2000 г.)\*Вхождение 1'])
    ];  
  ppsData :=
    ['Авария\авария'];
  if SearchInPPS(ppsData) then
  begin
    if GoToPPS and ClickToolbarButton(GetFromPPS('ТУЛБАР "ПОИСК: ПО СИТУАЦИИ (ПРЕЕМСТВЕННЫЙ)"'), 'История запросов*') then
    begin
      Result := SearchInPPS('', true, false, true) and FindInList(docsName);
      if not Result then
      	Log.Error('Загруженный список из Истории запросов (выпадающее меню кнопки) отличается от сохраненного!');
    end
    else
      Log.Error('Не получилось кликнуть по выпадающему меню кнопки История запросов ППС');
  end
  else                                                     
    Log.Error('Не получилось произвести поиск ППС и выполнить поиск');    

  GoToMainMenu;
end;

{
  HLTC77.2.2.10.3: Проверить, что если запросы ранее не вводились, то кнопка «История запросов» недоступна.
}
function  HLTC77_2_2_10_3_Execute(var  current_state: OleVariant): OleVariant;
var
  but;
begin
  Result := JurnalClear;
  if Result then
  begin
    if GoToPPS then
    begin                                 
      but := GetToolbarButton(GetFromPPS('ТУЛБАР "ПОИСК: ПО СИТУАЦИИ (ПРЕЕМСТВЕННЫЙ)"'), 'История запросов*');
      Result := IsExists(but);
      if not Result then
        Log.Error('Кнопка История запросов ППС не найдена')
      else
      begin
        Result := (not but.Enabled) and (not but.NativeDelphiObject.Enabled);
        if not Result then
          Log.Error('Кнопка История запросов ППС активна для пустого Журнала работы');
      end;      
    end
    else
      Log.Error('Не получилось открыть ППС');
  end
  else  
    Log.Error('Не получилось очистить Журнал работы');

  GoToMainMenu;
end;

{
  HLTC77.2.2.14: Между тулбаром и полем контекстного фильтра, располагается шапка, состоящая из иконки ППС и названия КЗ: «Поиск по ситуации».
  HLTC77.2.4.8: Между тулбаром и полем контекстного фильтра, располагается шапка, состоящая из иконки ППС и названия КЗ: «Поиск по ситуации».
}
function  HLTC77_2_2_14_Execute(var  current_state: OleVariant): OleVariant;
var
  i, pps_names;
begin
try
  Result := true;
  pps_names := ['Стандартная', 'Преемственная'];
  
  for i := VarArrayLowBound(pps_names, 1) to VarArrayHighBound(pps_names, 1) do
  begin
    if not SetSettings( [ (['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]', pps_names[i]]) ] ) then
      Raise('Не получилось установить "' + pps_names[i] + '" КЗ ППС в настройках');
    GoToMainMenu;
    if not GotoPPS then
      Raise('Не получилось открыть ППС');

    if not IsExists(GetFromPPS('ЗАГОЛОВОК КЗ')) then
      Result := ErrorResult('Заголовок "Поиск по ситуации" для КЗ "' + pps_name + '" не найден или изменился');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.2: ППС (стандартная)
    HLTC77.2.2.15: Если курсор находится в поле контекстного фильтра, поле обводится голубой рамкой.
}
function  HLTC77_2_2_15_Execute(var  current_state: OleVariant): OleVariant;
var
  form, w;
begin
try
  try
    Result := true;
    if not SetSettings([(['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]', 'Стандартная'])]) then
      Raise('Не получилось установить Стандартную КЗ ППС в настройках');
    if not GoToPPS then
      Raise('Не получилось перейти в КЗ ППС (Стандартная)');
    form := GetFromPPS('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"');
    if not IsExists(form) then
      Raise('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР" не найдена в КЗ ППС (Стандартная)');
    w := GetFromPPS('ПОЛЕ "КОНТЕКСТНЫЙ ФИЛЬТР"');
    if not IsExists(w) then
      Raise('ПОЛЕ "КОНТЕКСТНЫЙ ФИЛЬТР" не найдено в КЗ ППС (Стандартная)');
    w.SetFocus;
    if not IsBlueRectExists(form) then
      Result := ErrorResult('В КЗ ППС (Стандартная) не найдена голубая рамка для ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"');
  finally
    SetDefaultSettings;
    GoToMainMenu;
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  CommonExceptionHandler;
end;
end;

{
  HLTC77.2.4: ППС (преемственная)   
    HLTC77.2.4.9: Если курсор находится в поле контекстного фильтра, поле обводится голубой рамкой.
}
function  HLTC77_2_4_9_Execute(var  current_state: OleVariant): OleVariant;
var
  form, w;
begin
try
  try
    Result := true;
    if not SetSettings([(['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]', 'Преемственная'])]) then
      Raise('Не получилось установить Преемственную КЗ ППС в настройках');
    if not GoToPPS then
      Raise('Не получилось перейти в КЗ ППС (Преемственная)');
    form := GetFromPPS('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"');
    if not IsExists(form) then
      Raise('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР" не найдена в КЗ ППС (Преемственная)');
    w := GetFromPPS('ПОЛЕ "КОНТЕКСТНЫЙ ФИЛЬТР"');
    if not IsExists(w) then
      Raise('ПОЛЕ "КОНТЕКСТНЫЙ ФИЛЬТР" не найдено в КЗ ППС (Преемственная)');
    w.SetFocus;
    if not IsBlueRectExists(form) then
      Result := ErrorResult('В КЗ ППС (Преемственная) не найдена голубая рамка для ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"');
  finally
    SetDefaultSettings;
    GoToMainMenu;
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  CommonExceptionHandler;
end;
end;

{
  HLTC77.2.2.1: Должна быть возможность положить в папку и загрузить из папки запрос на поиск по ситуации – должны быть соответствующие кнопки на тулбаре (сохранить\загрузить запрос).
}
function  HLTC77_2_2_1_Execute(var  current_state: OleVariant): OleVariant;
const
  SAVEDNAME = 'HLTC77_2_2_1';
var
  ppsData, docsName;
begin
  Result := false;
  docsName := 
    [
    ([FL_NUMBER, '1']),
    ([FL_EXISTS_INT, 'Федеральный закон от 21 июля 1997 г. N 116-ФЗ "О промышленной безопасности опасных производственных объектов" (с изм. и доп. от 7 августа 2000 г.)*\*Вхождение 1'])
    ];  
  ppsData :=
    ['Авария\авария'];
  if SearchInPPS(ppsData,false) then
  begin
    if ClickToolbarButton(GetFromPPS('ТУЛБАР "ПОИСК: ПО СИТУАЦИИ (ПРЕЕМСТВЕННЫЙ)"'), 'Сохранить в Мои*') then
    begin
      Result := SimpleSaveToFolders(SAVEDNAME, true);
      if not Result then
      	Log.Error('Не получилось сохранить запрос ППС');
      if not (OpenObjectFromFolder(MY_DOCS_PATH + SAVEDNAME) and SearchInPPS('',true ,false, true)) then
        Result := ErrorResult('Не получилось открыть сохраненный запрос ППС и произвести поиск');
      if not FindInList(docsName) then
        Result := ErrorResult('Список не соответствует эталону');
      if not DeleteObjectFromFolder(MY_DOCS_PATH + SAVEDNAME) then
        Result := ErrorResult('Не получилось удалить сохраненный запрос ППС');
    end
    else
    	Log.Error('Не получилось кликнуть по "Сохранить в Мои документы" (возможно кнопка не существует на тулбаре)');
  end
  else
    Log.Error('Не получилось заполнить Карточку Запроса ППC');
  //  
  GoToMainMenu;
end;

{  
  HLTC77.2.10: Поиск по источнику опубликования
    HLTC77.2.10.1: Логика работы аналогична работе в ППС  
    HLTC77.2.10.2: Сама КЗ представляет из себя древовидную структуру реквизитов и область, в которой отображаются выбранные реквизиты.
    HLTC77.2.10.4: Проверить реализацию контекстной фильтрации.
      HLTC77.2.10.4.1: Если подстрока фильтрации встречается в названии термина, то он попадает в  результирующий список вместе с ключевым словом 1-го уровня («узлом»)
      HLTC77.2.10.4.2: Если подстрока фильтрации встречается в названии узла, то все подузлы также показываются после фильтрации.
      HLTC77.2.10.4.3: Если подстрока встречается и в названии узла и в названиях подэлементов – все равно показываются даже те подэлементы, у которых нет искомой подстроки.
      HLTC77.2.10.4.6: Проверить введение другого контекста, когда уже какой-то фильтр введен и применен.
}
function  HLTC77_2_10_4_1_Execute(var  current_state: OleVariant): OleVariant;
const
  WORD1 = 'курьер';
  WORD2 = 'ноябрь';
  WORD3 = 'финанс';
var
  w, ppioList, listWord1, listWord2, listWord3;
begin
try
  listWord1 := ['Газета "Московский налоговый курьер"', '2001', 'Декабрь', 'Газета "Московский налоговый курьер", 2001 год, N 23'];
  listWord2 := ['Журнал "Вестник московского университета. Серия право"', '1996' ,'Ноябрь', 'Журнал "Вестник московского университета. Серия право", 1996 год, N 11'];
  listWord3 := ['Газета "Финансовая газета. Региональный выпуск"', '2000', 'Октябрь', 'Газета "Финансовая газета. Региональный выпуск", 2000 год, N 41'];

  if not GotoPPIO then
    Raise('Не получилось открыть ППИО');

  w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPIO('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"')); 
  if not IsExists(w) then
    Raise('Поле контекстного фильтра не найдено');
  ppioList := GetFromPPIO('ДЕРЕВО ИЗДАНИЙ');
  if not IsExists(ppioList) then
    Raise('Не найдено окно ДЕРЕВО ИЗДАНИЙ ППИО');

  Result := true;      
  w.Keys('[Home]![End]' + WORD1);  
  if not CompareArray(listWord1, GetElementsFromTree(ppioList, true)) then
    Result := ErrorResult('После контекстной фильтрации по "' + WORD1 + '", результирующий список отличается от эталонного');
  w.Keys('[Home]![End]' + WORD2);  
  if not CompareArray(listWord2, GetElementsFromTree(ppioList, true)) then
    Result := ErrorResult('После контекстной фильтрации по "' + WORD2 + '", результирующий список отличается от эталонного');
  w.Keys('[Home]![End]' + WORD3);  
  if not CompareArray(listWord3, GetElementsFromTree(ppioList, true)) then
    Result := ErrorResult('После контекстной фильтрации по "' + WORD3 + '", результирующий список отличается от эталонного');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.10.3: Проверить, что есть возможность загрузки (восстановления) ранее введённых запросов:
    HLTC77.2.10.3.1: Проверить, что если запросы ранее не вводились, то кнопка «История запросов» недоступна
}
function  HLTC77_2_10_3_1_Execute(var  current_state: OleVariant): OleVariant;
var
  but;
begin
  Result := JurnalClear;
  if Result then
  begin                                                           
    if GoToAnalyticReview then
    begin
      but := GetToolbarButton(GetFromAnalyticReview('ТУЛБАР "ПОИСК: ПРАЙМ. ОБЗОР ИЗМЕНЕНИЙ ЗАКОНОДАТЕЛЬСТВА"'), 'История запросов*');
      Result := IsExists(but);
      if not Result then
        Log.Error('Не получилось открыть Обзор изменений законодательства')
      else
      begin
        Result := not but.NativeDelphiObject.Enabled;
        if not Result then
          Log.Error('Кнопка История запросов Обзора изменений законодательства активна для пустого Журнала работы');
      end;
    end
    else
      Log.Error('Не получилось открыть Обзор изменений законодательства');
  end
  else  
    Log.Error('Не получилось очистить Журнал работы');

  GoToMainMenu;
end;

{
  HLTC77.2.10.3.2: Проверить, что при обычном нажатии на кнопку «История запросов» загружается последний введённый запрос.
}
function  HLTC77_2_10_3_2_Execute(var  current_state: OleVariant): OleVariant;
var
  Data;
begin
  Result := false;
  Data :=
    [
    	CARD_PPOIZ, ([([
    	FD_SOURCE, ([
    		'[ИЛИ]Органы законодательной власти России и СССР']) ]),([
    	FD_THEME, ([
    		'[ИЛИ]Основы государственно-правового устройства']) ]) ]) 
    ];
  if SearchInAnalyticReview(Data) then
  begin
    if GoToAnalyticReview and ClickToolbarButton(GetFromAnalyticReview('ТУЛБАР "ПОИСК: ПРАЙМ. ОБЗОР ИЗМЕНЕНИЙ ЗАКОНОДАТЕЛЬСТВА"'), 'История запросов*') then
    begin
      Result := CompareQueryCardData(Data, ExtractQueryCardData(GetFromAnalyticReview('КАРТОЧКА ЗАПРОСА')));
      if not Result then
      	Log.Error('Загруженный список из Истории запросов отличается от сохраненного!');
    end
    else
    Log.Error('Не получилось кликнуть по выпадающему меню кнопки История запросов Обзор изменений законодательства');
  end
  else
    Log.Error('Не получилось произвести поиск Обзор изменений законодательства');

  GoToMainMenu;
end;

{
  HLTC77.2.10.3.3:  Создать запрос, выполнить, его, снова войти в КЗ и нажать кнопку раскрытия списка «История запросов» – выбрать из списка запрос, он должен загрузиться.
}
function  HLTC77_2_10_3_3_Execute(var  current_state: OleVariant): OleVariant;
var
  Data;
begin
  Result := false;
  Data :=
    [
    	CARD_PPOIZ, ([
        ([
    	FD_THEME, ([
    		'[ИЛИ]My Class A','[ИЛИ]My Class B','[ИЛИ]My Class C']) ]) ]) 
    ];
  if SearchInAnalyticReview(Data) then
  begin
    if GoToAnalyticReview and 
      ClickByPopupMenuItem(
        ClickToolbarButton(GetFromAnalyticReview('ТУЛБАР "ПОИСК: ПРАЙМ. ОБЗОР ИЗМЕНЕНИЙ ЗАКОНОДАТЕЛЬСТВА"'), 
          'История запросов*' ,
          'ClickForPopupMenu:=true' ), 
        'Запрос*РАЗДЕЛ*My Class A*My Class B*My Class C*') then
    begin
      Result := CompareQueryCardData(Data, ExtractQueryCardData(GetFromAnalyticReview('КАРТОЧКА ЗАПРОСА')));
      if not Result then
      	Log.Error('Загруженный список из Истории запросов (выпадающее меню кнопки) отличается от сохраненного!');
    end
    else
    Log.Error('Не получилось кликнуть по выпадающему меню кнопки История запросов Обзор изменений законодательства');
  end
  else
    Log.Error('Не получилось произвести поиск Обзор изменений законодательства');

  GoToMainMenu;
end;

{
  HLTC77.2.10.4.7: Проверить «снятие» контекстной фильтрации.
  HLTC77.2.10.4.8: Проверить введение контекста, по которому в карточке Поиска по публикации ничего не отфильтруется.
  HLTC77.2.10.5: Быстрый поиск в Поиске по Публикации
    HLTC77.2.10.5.1: Проверить, что при вводе букв система включает контекстный фильтр и фильтрует дерево.
}
function  HLTC77_2_10_4_7_Execute(var  current_state: OleVariant): OleVariant;
const
	DOCNAME = 'длинный';
var
  w, button, ppioList, arrPPIOList, textPPIOList;
begin
try
	Result := true;
  if not GotoPPIO then
    Raise('Не получилось открыть ППИО');
  w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPIO('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"')); 
  if not IsExists(w) then
    Raise('Поле контекстного фильтра не найдено');
  button := GetFromContextFilterForm('КНОПКА "ВКЛЮЧИТЬ КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPIO('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));
  if not IsExists(button) then 
  	Raise('Не найдена кнопка ВКЛ/ВЫКЛ Контекстного фильтра');
  ppioList := GetFromPPIO('ДЕРЕВО ИЗДАНИЙ');
  if not IsExists(ppioList) then
    Raise('Не найдено окно ДЕРЕВО ИЗДАНИЙ ППИО');
    
  arrPPIOList := GetElementsFromTree(ppioList, true);
  w.Keys('[End]![Home]' + DOCNAME);
  ppioList.Keys('[Home]');
  textPPIOList := common.GetWindowText(ppioList);
  if not button.Down then 
    Raise('Кнопка ВКЛ/ВЫКЛ Контекстного фильтра не включилась при вводе контекста');

  button.Click;
  ppioList.Keys('[Home]');
  if StringCompare(textPPIOList, common.GetWindowText(ppioList)) then
    Raise('Контекстный фильтр работает неправильно при ВКЛ/ВЫКЛ, т.к. первый элемент списка не изменяется');
  if not CompareArray(arrPPIOList, GetElementsFromTree(ppioList, true)) then
    Raise('Контекстный фильтр работает неправильно при ВКЛ/ВЫКЛ, т.к. отличаются списки элементов до и после');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.4.5: Проверить контекстную фильтрацию "Преемственной ППС": фильтроваться должны списки как ситуации первого уровня, так и второго уровня.
    HLTC77.2.4.5.1: Если ситуация 1 уровня отфильтровывается (не содержит контекста, введенного в поле контекстного фильтра), а ситуация 2го уровня – остается (содержит), то ситуация 1го уровня видна в списке.
    HLTC77.2.4.5.2: Если ситуация 1 уровня остается (содержит контекст, введенный в поле контекстного фильтра), то все соответствующие ситуации 2го уровня видны.
}
function  HLTC77_2_4_5_Execute(var  current_state: OleVariant): OleVariant;
const
  WORD1 = 'авария';
  WORD2 = 'авария общая ко';
var
  w, ppsList1, ppsList2, listWord1, listWord21, listWord22;
begin
try
  try
    listWord1 := ['Авария', 'Авария общая', 'Общая авария', 'Транспорт морской', 'Убытки'];
    listWord21 := ['Авария общая', 'Общая авария'];
    listWord22 := ['комиссия на расходы, возмещ.при распредел.', 'контрибуционная стоимость имущества'];

    if not SetSettings( 
        [
         (['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]', 'Преемственная'])
        ]
      ) then Raise('Не получилось установить Преемственную КЗ ППС в настройках');

    if not GotoPPS then
      Raise('Не получилось открыть ППС');

    w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPS('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));  
    if not IsExists(w) then
      Raise('Поле контекстного фильтра не найдено');
    ppsList1 := GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ');
    if not IsExists(ppsList1) then
      Raise('Не найдено окно СИТУАЦИИ ОСНОВНОГО УРОВНЯ');
    ppsList2 := GetFromPPS('СИТУАЦИИ ДОПОЛНИТЕЛЬНОГО УРОВНЯ');
    if not IsExists(ppsList2) then
      Raise('Не найдено окно СИТУАЦИИ ДОПОЛНИТЕЛЬНОГО УРОВНЯ');

    Result := true;      
    w.Keys('[Home]![End]' + WORD1);  
    if not CompareArray(listWord1, GetElementsFromTree(ppsList1)) then
      Result := ErrorResult('После контекстной фильтрации по "' + WORD1 + '", результирующий список ситуаций основного уровня отличается от эталонного');
    w.Keys('[Home]![End]' + WORD2);  
    if not CompareArray(listWord21, GetElementsFromTree(ppsList1, true)) then
      Result := ErrorResult('После контекстной фильтрации по "' + WORD2 + '", результирующий список ситуаций основного уровня отличается от эталонного');
    if not CompareArray(listWord22, GetElementsFromTree(ppsList2, true)) then
      Result := ErrorResult('После контекстной фильтрации по "' + WORD2 + '", результирующий список ситуаций дополнительного уровня отличается от эталонного');
  finally
    SetDefaultSettings;
    GoToMainMenu;  
  end;  
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.4.7.1: Открыть вкладку навигатора Меню, установить фокус в поле Контекст и несколько раз нажать Tab.
}
function  HLTC77_2_4_7_1_Execute(var  current_state: OleVariant): OleVariant;
var
  w_cb, w1, w2;
begin
try
  Result := true;

  if not GoToPPS then
    Raise('Не получилось открыть ППС');
  if not IsExists(OpenMenuTab) then
    Raise('Не получилось открыть вкладку Меню');

  w_cb := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromNavigator('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));
  w1 := GetFromPPS('ВЫБРАННЫЕ СИТУАЦИИ');
  w2 := GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ');

  w_cb.SetFocus;
  if not w_cb.Focused then
    Raise('Не получилось установить фокус в поле ввода контекстного фильтра вкладки Меню');

  Sys.Keys('[Tab][Tab][Tab]');
  if not w1.Focused then
    Raise('Не найден фокус в "ВЫБРАННЫЕ СИТУАЦИИ"');

  Sys.Keys('[Tab]');
  if not w2.Focused then
    Raise('Не найден фокус в "СИТУАЦИИ ОСНОВНОГО УРОВНЯ"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.4.4: В "Преемственной ППС" основная область разбита на две: область с ситуациями первого уровня и ситуациями второго уровня
  HLTC77.2.4.10: По умолчанию выбран преемственный вид ППС
}
function  HLTC77_2_4_4_Execute(var  current_state: OleVariant): OleVariant;
const
  PPS_NAME = 'Преемственная';
var
  sets, value;
begin
try
  Result := true;

  SetDefaultSettings;
  if not GoToPPS then
    Raise('Не получилось открыть ППС');

  sets := GetSettings([ (['ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]']) ]);
  value := GetFromSettingsArr(sets, 'ПОИСК', 'КАРТОЧКА ЗАПРОСА\ПОИСК ПО СИТУАЦИИ [COMBOBOX]'); 
  if value <> PPS_NAME then
    Result := ErrorResult('Не выбран Преемственный вид ППС в настройках конфигурации');

  if not IsExists(GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ')) then
    Result := ErrorResult('Не найдены СИТУАЦИИ ОСНОВНОГО УРОВНЯ');

  //Именно GetFromPPS_Std, а не просто GetFromPPS 
  if IsExists(GetFromPPS_Std('СИТУАЦИИ ДОПОЛНИТЕЛЬНОГО УРОВНЯ')) then
    Result := ErrorResult('По умолчанию не выбран Преемственный вид ППС');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.10.6: Между тулбаром и полем контекстного фильтра, располагается шапка, состоящая из иконки ППИО и названия КЗ: «Поиск по источнику опубликования».
}
function  HLTC77_2_10_6_Execute(var  current_state: OleVariant): OleVariant;
begin
try
  Result := true;

  if not GotoAnalyticReview then
    Raise('Не получилось открыть ППОИЗ');
  if not IsExists(GetFromAnalyticReview('ЗАГОЛОВОК КЗ')) then
    Result := ErrorResult('Заголовок "Обзор изменений законодательства" не найден или изменился');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.10.7: Если курсор находится в поле контекстного фильтра, поле обводится голубой рамкой.
}
function  HLTC77_2_10_7_Execute(var  current_state: OleVariant): OleVariant;
var
  form, w;
begin
try
  try
    Result := true;
    if not GoToPPIO then
      Raise('Не получилось перейти в КЗ ППИО');
    form := GetFromPPIO('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"');
    if not IsExists(form) then
      Raise('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР" не найдена в КЗ ППИО');
    w := GetFromPPIO('ПОЛЕ "КОНТЕКСТНЫЙ ФИЛЬТР"');
    if not IsExists(w) then
      Raise('ПОЛЕ "КОНТЕКСТНЫЙ ФИЛЬТР" не найдено в КЗ ППИО');
    w.SetFocus;
    if not IsBlueRectExists(form) then
      Result := ErrorResult('В КЗ ППИО не найдена голубая рамка для ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"');
  finally
    SetDefaultSettings;
    GoToMainMenu;
  end;
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
  CommonExceptionHandler;
end;
end;

{
  HLTC77.2.11: : Все выбранные значения (ППС/Поиск по источнику опубликования) должны отображаться в виде древовидной структуры в нижней части окна
    HLTC77.2.11.1: При этом, должно быть визуально показано какими логическими условиями они связаны(только для поиска по источнику опубликования).
    HLTC77.2.11.2: При удалении из списка, помимо собственно удаления, должна сниматься отметка в дереве выбора этих реквизитов.
    HLTC77.2.11.3: Проверить, что из этого дерева не исключаются элементы в случае контекстной фильтрации дерева выбора реквизитов.
    HLTC77.2.11.4: Проверить, что выбранные реквизиты группируются по логическим условиям (поиск по источнику опубликования), при этом верхним элементом дерева является логическое условие, а в него вложены выбранные реквизиты.
}
function  HLTC77_2_11_1_Execute(var  current_state: OleVariant): OleVariant;
var
  ppioList;
begin
try
	Result := true;
  
  if not SearchInPPIO([
                       '[ИЛИ]Специальный источник*',
                       '[И]Газета*Финанс*', 
                       '[КРОМЕ]Газета*Московски*\2001\Декабрь',
                       '[КРОМЕ]Журнал*\1996'
                       ], false) then
    Raise('Не получилось заполнить КЗ ППИО');
  if SearchInPPIO('', true, false, true) then
    Raise('Поиск ППИО прошел, но не должен был!');
      
  ppioList := GetFromPPIO('ВЫБРАННЫЕ ИЗДАНИЯ');
  if not IsExists(ppioList) then
    Raise('Не найдено окно "ВЫБРАННЫЕ ИЗДАНИЯ" в ППИО');

  if not CompareArray([
                        'Выбранные значения',
                        'ИЛИ:',
                        'Специальный источник*',
                        'И:',
                        'Газета*Финанс*',
                        'КРОМЕ:',
                        'Декабрь*[Газета*]',
                        '1996*[Журнал*\]'
                      ], GetElementsFromTree(ppioList), true, true) then
    Raise('Содержимое списка "ВЫБРАННЫЕ ИЗДАНИЯ" ППИО после заполнения КЗ отличается от эталонного');

  if not DeleteObjectFromFolder('Выбранные значения\И:\Газета*Финанс*', ppioList) then 
    Raise('Не получилось удалить элемент из списка "ВЫБРАННЫЕ ИЗДАНИЯ"');
  if not DeleteObjectFromFolder('Выбранные значения\КРОМЕ:\Декабрь*[Газета*]', ppioList) then
    Raise('Не получилось удалить элемент из списка "ВЫБРАННЫЕ ИЗДАНИЯ"');

  if not CompareArray([
                        'Выбранные значения',
                        'ИЛИ:',
                        'Специальный источник*',
                        'КРОМЕ:',
                        '1996*[Журнал*\]'
                      ], GetElementsFromTree(ppioList), true, true) then
    Raise('Содержимое списка "ВЫБРАННЫЕ ИЗДАНИЯ" ППИО после удаления элементов отличается от эталонного');

  if not SearchInPPIO('', true, false, true) then
    Raise('Поиск ППИО НЕ прошел, а должен был, возможно не повлияло изменение списка "ВЫБРАННЫЕ ИЗДАНИЯ"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  Этот тест НЕ трассируется на HLTC77.2.11.1-HLTC77.2.11.4, но функционально покрывает по ППС. 
  HLTC77.2.11.5: В ППС группировки по логическому условию не должно быть – сразу иерархия реквизитов.
}
function  HLTC77_2_11_5_Execute(var  current_state: OleVariant): OleVariant;
var
  ppsList;
begin
try
	Result := true;

  if not SearchInPPS([
                       'А это специальный ключ',
                       'Авария',
                       'Авиация\авиационные работы', 
                       'Авиация\авиационный персонал',
                       'Автостоянки'
                       ], false) then
    Raise('Не получилось заполнить КЗ ППC');
      
  ppsList := GetFromPPS('ВЫБРАННЫЕ СИТУАЦИИ');
  if not IsExists(ppsList) then
    Raise('Не найдено окно "ВЫБРАННЫЕ СИТУАЦИИ" в ППС');

  if not CompareArray([
                        'Выбранные значения',
                        'А это специальный ключ',
                        'Авария',
                        'Авиация',
                        'авиационные работы', 
                        'авиационный персонал',
                        'Автостоянки'
                      ], GetElementsFromTree(ppsList), true, true) then
    Raise('Содержимое списка "ВЫБРАННЫЕ СИТУАЦИИ" ППС после заполнения КЗ отличается от эталонного');

  if not DeleteObjectFromFolder('Выбранные значения\Авария', ppsList) then 
    Raise('Не получилось удалить элемент из списка "ВЫБРАННЫЕ СИТУАЦИИ"');
  if not DeleteObjectFromFolder('Выбранные значения\Авиация\авиационные работы', ppsList) then
    Raise('Не получилось удалить элемент из списка "ВЫБРАННЫЕ СИТУАЦИИ"');

  if not CompareArray([
                        'Выбранные значения',
                        'А это специальный ключ',
                        'Авиация',
                        'авиационный персонал',
                        'Автостоянки'
                      ], GetElementsFromTree(ppsList), true, true) then
    Raise('Содержимое списка "ВЫБРАННЫЕ СИТУАЦИИ" ППС после удаления элементов отличается от эталонного');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.1: Расположен в виде постоянной панели в ОМ, под разделом «Изменения в законодательстве». А так же, в списке и документе в виде вызываемой/скрываемой панели под тулбаром.
  HLTC77.2.15.2: Можно вызвать из командного меню, тулбара и шоткатом F4. При этом область поиска должна переключаться на «Все документы».
}
function  HLTC77_2_15_1_Execute(var  current_state: OleVariant): OleVariant;
var i;
begin
try
  Result := true;
  for i:= 1 to 3 do
  begin
    if not GoToPPR then
      Raise('Не получилось открыть ППР');
    if not GoToBaseSearch(IntToStr(i)) then
      Raise('Не получилось открыть панель БП через способ № ' + IntToStr(i));

    if not StringCompare(SRCH_BASE_THEME_ALL_DOCS, GetKindInBaseSearch) then
      Result := ErrorResult('Текущая область поиска "' + GetKindInBaseSearch + '" БП (способ открытия № ' + IntToStr(i) + ') отличается от ожидаемой "' + SRCH_BASE_THEME_ALL_DOCS + '"');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.3: Вкладки с видами информации
    HLTC77.2.15.3.1: Везде на панели базового поиска находятся вкладки для переключения поиска по видам информации(кроме проектов законов и международных договоров). 
      При отсутствии какого-либо вида информации в комплекте пользователя соответствующая вкладка становится задизейбленой.
    HLTC77.2.15.3.2: Если поле контекст заполнено, то при смене вида информации должен сразу выполняться поиск, без нажатия кнопки найти.
    HLTC77.2.15.3.3: Если поле контекст пустое, то при смене вида информации ничего не происходит. 
      При этом, если нажать кнопку найти, выдается сообщение «Введите описание своего вопроса для поиска».

    !!! Требуется база мини_но_прайм без 3х видов правовой информации    
}
function  HLTC77_2_15_3_Execute(var  current_state: OleVariant): OleVariant;
var
  w, wMenu;
begin
try
  Result := true;
  
  if not GoToMainMenu then
    Raise('Не получилось открыть ОМ');
  w := GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"');
  if not IsExists(w) then
    Raise('Не найден КОМБОБОКС "БАЗОВЫЙ ПОИСК"');

  EnterContextInBaseSearch('', 'IsDoSearch:=true');
  if not StringCompare('Введите описание своего*проса для поиска*', WaitForInfoWindow(Options.Run.Timeout div 3)) then
    Result := ErrorResult('Не найдено правильное сообщение, возникающее при поиске БП по пустому запросу');
    
  if SetKindInBaseSearch(SRCH_BASE_THEME_FORM_DOCS) then 
    Result := ErrorResult('Удалось выбрать несуществующий вид информации: ' + SRCH_BASE_THEME_FORM_DOCS);
  if SetKindInBaseSearch(SRCH_BASE_THEME_PROJECTS_OF_LAWS) then 
    Result := ErrorResult('Удалось выбрать несуществующий вид информации: ' + SRCH_BASE_THEME_PROJECTS_OF_LAWS);

  wMenu := GoToMainMenu('', true);
  if not IsExists(wMenu) then
    Raise('Область ОМ не найдена');  
  if not SetKindInBaseSearch(SRCH_BASE_THEME_ACTS) then 
    Raise('Не удалось выбрать вид информации: ' + SRCH_BASE_THEME_ACTS);
  if not SetKindInBaseSearch(SRCH_BASE_THEME_ALL_DOCS) then 
    Raise('Не удалось выбрать вид информации: ' + SRCH_BASE_THEME_ALL_DOCS);
  if not IsExists(wMenu) then
    Raise('После переключения вкладок панели БП, область ОМ не найдена');

  w.Keys('1 2 3 4');
  SetKindInBaseSearch(SRCH_BASE_THEME_ACTS);
  if not FindInList( [([FL_NUMBER_BIG_MORE, '1'])] ) then
    Result := ErrorResult('Результат БП не верен (или список не найден), возможно НЕ производится поиск после переключения закладок видов информации');
  if not StringCompare(SRCH_BASE_THEME_ACTS, GetKindInBaseSearch) then
    Result := ErrorResult('Текущая область поиска БП: "' + GetKindInBaseSearch + '" отличается от ожидаемой "' + SRCH_BASE_THEME_ACTS + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.3.4: Проверить, что если при положении переключателя «Список: в документах» и смене вида информации ничего не нашлось, 
    то при нажатии отмены в диалоге с предложением искать по всем документам, вкладка с видом информации вернется в прежнее состояние, если контекст не менялся. 
    И останется в новом состоянии, если контекст поменяли.

    1. В БП вбиваем «грамотность»
    2. Жмём Искать
    3. В переключателе области поиска, ставим «Список: в документах»
    4. Выбираем вид поиска «Судебная практика»
    Появилось подтверждение поиска по всем документам
    5. Жмём Нет
    Переключатель вида информации должен вернуться на «Все документы»

    6. Меняем контекст на «величие»
    7. Выбираем вид поиска «Судебная практика»
    Появилось подтверждение поиска по всем документам
    8. Жмём Нет
    Переключатель вида информации должен остаться на «Судебная практика»
}
function  HLTC77_2_15_3_4_Execute(var  current_state: OleVariant): OleVariant;
var
  w;
begin
try
  Result := true;
  // 1 - 5
  if not BaseSearch(nil, 'грамотность', 'IsCloseWindow:=false') then
    Raise('Не получилось произвести поиск БП');
  w := GetFromBaseSearch('КОМБОБОКС "ОБЛАСТЬ ПОИСКА"');
  if not IsExists(w) then
    Raise('КОМБОБОКС "ОБЛАСТЬ ПОИСКА" не найден');
  if not SelectInCombobox(w, SRCH_IN_LIST) then
    Raise('Не получилось выбрать нужную область БП-поиска "' + SRCH_IN_LIST + '"');
  if not SetKindInBaseSearch(SRCH_BASE_THEME_JUDICAL_PRACTICS, 'IsSetByClick:=true') then 
    Raise('Не удалось выбрать вид информации в БП: ' + SRCH_BASE_THEME_JUDICAL_PRACTICS);
  if WaitForConfirmationWindow(Options.Run.Timeout div 4, 'Нет') = '' then
    Raise('Не получилось кликнуть в диалоге подтвержения по кнопке "Нет"');
  if not StringCompare(SRCH_BASE_THEME_ALL_DOCS, GetKindInBaseSearch) then
    Result := ErrorResult('Текущая область поиска БП: "' + GetKindInBaseSearch + '" отличается от ожидаемой "' + SRCH_BASE_THEME_ALL_DOCS + '"');

  // 6 - 8
  if not EnterContextInBaseSearch('величие') then
    Raise('Не получилось ввести контекст БП');
  if not SetKindInBaseSearch(SRCH_BASE_THEME_JUDICAL_PRACTICS, 'IsSetByClick:=true') then 
    Raise('Не удалось выбрать вид информации в БП: ' + SRCH_BASE_THEME_JUDICAL_PRACTICS);
  if WaitForConfirmationWindow(Options.Run.Timeout div 4, 'Нет') = '' then
    Raise('Не получилось кликнуть в диалоге подтвержения по кнопке "Нет"');
  if not StringCompare(SRCH_BASE_THEME_JUDICAL_PRACTICS, GetKindInBaseSearch) then
    Result := ErrorResult('Текущая область поиска БП: "' + GetKindInBaseSearch + '" отличается от ожидаемой "' + SRCH_BASE_THEME_JUDICAL_PRACTICS + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.3.5: Кнопка «Ещё»:
    HLTC77.2.15.3.5.1: Кнопка показывается, если на экране не помещаются все виды информации, имеющиеся в базе.
    (В ТБ24, на один монитор все виды информации не помещаются)
}
function  HLTC77_2_15_3_5_1_Execute(var  current_state: OleVariant): OleVariant;
begin  
try
  Result := true;
  if not GoToMainMenu then 
    Raise('Не получилось зайти в ОМ');
  if not IsExists(GetFromBaseSearch('КНОПКА-ССЫЛКА "ЕЩЕ"')) then
    Raise('Кнопка "Еще" дополнительных видов информации не найдена на панели БП');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.15.3.5.2: Кнопка НЕ показывается, если на экране помещаются все виды информации, имеющиеся в базе.
}
function  HLTC77_2_15_3_5_2_Execute(var  current_state: OleVariant): OleVariant;
begin  
try
  Result := true;
  if not GoToMainMenu then 
    Raise('Не получилось зайти в ОМ');
  if IsExists(GetFromBaseSearch('КНОПКА-ССЫЛКА "ЕЩЕ"')) then
    Raise('На базе с минимальным кол-ом видов информации найдена кнопка "Еще" панели БП');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.15.3.5.3: При нажатии на кнопку, появляется список недостающих видов информации.
}
function  HLTC77_2_15_3_5_3_Execute(var  current_state: OleVariant): OleVariant;
var
  button;
begin  
try
  Result := true;
  if not GoToMainMenu then 
    Raise('Не получилось зайти в ОМ');
  
  button := GetFromBaseSearch('КНОПКА-ССЫЛКА "ЕЩЕ"');
  if not IsExists(button) then
    Raise('Кнопка "Еще" дополнительных видов информации не найдена на панели БП');
  if not ClickOnVgSceneObject(button) then
    Raise('Не получилось кликнуть по КНОПКЕ-ССЫЛКЕ "ЕЩЕ"');
  if not IsExists(GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА КНОПКИ-ССЫЛКИ ЕЩЕ')) then
    Raise('После нажатия на кнопку-ссылку Еще не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА');  
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.15.3.6: Автоматическое переключение на Все документы
  1. ОМ, БП
  2. Выбрать тип поиска:
  Пользовательский

  3. Вбить контекст:
  МРОТ

  4. Начать поиск
  Появится сообщение об отсутствии результата и предложение начать поиск по всем документам.

  5. Согласиться.
  Построится список.
  В панели БП, вид информации должен автоматически переключиться на «Все документы».
}
function  HLTC77_2_15_3_6_Execute(var  current_state: OleVariant): OleVariant;
begin
try
  Result := true;
  if not BaseSearch(nil, 'МРОТ' ,'searchType:=' + SRCH_BASE_THEME_USER + ';IsContinueSearchIfConfirm:=true;IsCloseWindow:=false') then
    Raise('Не получилось выполнить БП-поиск для типа: ' + SRCH_BASE_THEME_USER);
  if not StringCompare(SRCH_BASE_THEME_ALL_DOCS, GetKindInBaseSearch) then
    Result := ErrorResult('Текущая область поиска "' + GetKindInBaseSearch + '" БП отличается от ожидаемой "' + SRCH_BASE_THEME_ALL_DOCS + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.4: При вызове из списка:  
    HLTC77.2.15.4.1: Дополняется выпадающим списком областей поиска:
      Везде  Список: в документах  Список: в названиях
      Располагается на одном уровне со строкой поиска.
}
function  HLTC77_2_15_4_1_Execute(var  current_state: OleVariant): OleVariant;
var
  w;
begin
try
  Result := true;
  
  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if not GoToBaseSearch then
    Raise('Не получилось открыть панель БП');
    
  w := GetFromBaseSearch('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ"');
  if not IsExists(w) then
    Raise('Не найден ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ"');
  if not w.IsSelected then
    Result := ErrorResult('Не выбран ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ" после вызова БП');    
  if not IsExists(GetFromBaseSearch('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "СПИСОК: В ДОКУМЕНТАХ"')) then
    Raise('Не найден ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "СПИСОК: В ДОКУМЕНТАХ"'); 
  if not IsExists(GetFromBaseSearch('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "СПИСОК: В НАЗВАНИЯХ"')) then
    Raise('Не найден ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "СПИСОК: В НАЗВАНИЯХ"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.4.2: Если вызов БП из списка произведен нажатием на кнопку «Поиск контекста» или CTRL+F
    1. При появлении панели БП, строка поиска несколько раз мигает, в неё переносится фокус
    2. По умолчанию выбирается условие «Список: в названиях»
    3. Доступны кнопки переключения видов информации  
}
function  HLTC77_2_15_4_2_Execute(var  current_state: OleVariant): OleVariant;
const
  COMBOBOX_ELEMENT_NAME = 'ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "СПИСОК: В НАЗВАНИЯХ"';
var
  w;
begin
try
  Result := true;
  
  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if not IsExists(OpenBaseSearch(SRCH_IN_LIST_DOC_NAMES)) then
    Raise('Не получилось открыть панель БП в списке');

  w := GetFromBaseSearch(COMBOBOX_ELEMENT_NAME);
  if not IsExists(w) then
    Raise('Не найден ' + COMBOBOX_ELEMENT_NAME);
  if not w.IsSelected then
    Raise('Не выбран ' + COMBOBOX_ELEMENT_NAME + ' после вызова БП из списка через Ctrl+F');
  if not IsKindsInBaseSearchEnabled then
    Result := ErrorResult('Кнопки видов информации НЕ доступны для переключения');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.4.3: Если вызов объекта из списка произведен из кнопки «Поиск», или клавишей F4, то:
    1. При появлении панели БП, строка поиска несколько раз мигает, в неё переносится фокус
    2. По умолчанию выбрана область поиска «Везде»
    3. Доступны кнопки переключения видов информации
}
function  HLTC77_2_15_4_3_Execute(var  current_state: OleVariant): OleVariant;
const
  COMBOBOX_ELEMENT_NAME = 'ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ"';
var
  w;
begin
try
  Result := true;
  
  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if not IsExists(OpenBaseSearch(SRCH_BASE)) then
    Raise('Не получилось открыть панель БП в списке');

  w := GetFromBaseSearch(COMBOBOX_ELEMENT_NAME);
  if not IsExists(w) then
    Raise('Не найден ' + COMBOBOX_ELEMENT_NAME);
  if not w.IsSelected then
    Raise('Не выбран ' + COMBOBOX_ELEMENT_NAME + ' после вызова БП из списка через кнопку на тулбаре "Поиск"');
  if not IsKindsInBaseSearchEnabled then
    Result := ErrorResult('Кнопки видов информации НЕ доступны для переключения');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.4.4: Если вызов БП из списка произведен операцией «Уточнить список» (из главного меню "Анализ\Уточнить список" (только в Nemesis) или ПЗ), по умолчанию выбрано условие «Список: в документах», то:
    1. При появлении панели БП, строка поиска несколько раз мигает, в неё переносится фокус
    2. По умолчанию выбрана область поиска «Список: в документах»
    3. Доступны кнопки переключения видов информации
}
function  HLTC77_2_15_4_4_Execute(var  current_state: OleVariant): OleVariant;
const
  COMBOBOX_ELEMENT_NAME = 'ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "СПИСОК: В ДОКУМЕНТАХ"';
var
  w;
begin
try
  Result := true;
  
  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if not IsExists(OpenBaseSearch(SRCH_IN_LIST_REFINE_LIST)) then
    Raise('Не получилось открыть панель БП в списке');

  w := GetFromBaseSearch(COMBOBOX_ELEMENT_NAME);
  if not IsExists(w) then
    Raise('Не найден ' + COMBOBOX_ELEMENT_NAME);
  if not w.IsSelected then
    Raise('Не выбран ' + COMBOBOX_ELEMENT_NAME + ' после вызова БП из списка через главное меню "' + SRCH_IN_LIST_REFINE_LIST + '"');
  if not IsKindsInBaseSearchEnabled then
    Result := ErrorResult('Кнопки видов информации НЕ доступны для переключения');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.4.5: Последний введенный контекст должен быть выделен.
}
function  HLTC77_2_15_4_5_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = '77 2 15 4 5';
begin
try
  Result := true;

  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if not BaseSearch(nil, CONTEXT) then
    Raise('Не получилось произвести поиск БП');

  if not IsExists(OpenBaseSearch) then
    Raise('Не получилось открыть панель БП в списке');
  if not StringCompare(CONTEXT, GetValueFromBaseSearch) then
    Raise('Последний введенный контекст, скопированный из БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.5.1: Дополняется переключателем области поиска «В данном документе» либо «Везде»;
  HLTC77.2.15.5.2: Если вызов объекта из документа произведен нажатием на кнопку «Поиск контекста» или CTRL+F, по умолчанию выбирается условие «В данном документе»;
}
function  HLTC77_2_15_5_2_Execute(var  current_state: OleVariant): OleVariant;
const
  COMBOBOX_ELEMENT_NAME = 'ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "В ДОКУМЕНТЕ"';
var
  w;
begin
try
  Result := true;

  if not OpenDocByNumber(10003000) then
    Raise('Не получилось открыть "Конституцию РФ"');
  if not IsExists(OpenBaseSearch(SRCH_IN_DOC)) then
    Raise('Не получилось открыть панель БП в списке');

  w := GetFromBaseSearch(COMBOBOX_ELEMENT_NAME);
  if not IsExists(w) then
    Raise('Не найден ' + COMBOBOX_ELEMENT_NAME);
  if not w.IsSelected then
    Raise('Не выбран ' + COMBOBOX_ELEMENT_NAME + ' после вызова БП из документа через Ctrl+F');
  if IsKindsInBaseSearchEnabled then
    Result := ErrorResult('Кнопки видов информации доступны для переключения');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.5.3: Если вызов объекта из документа произведен нажатием на кнопку «Поиск», или F4, то:
    1. При появлении панели БП, строка поиска несколько раз мигает, в неё переносится фокус
    2. По умолчанию выбрано условие «Везде»
    3. Кнопки переключения видов информации доступны
}
function  HLTC77_2_15_5_3_Execute(var  current_state: OleVariant): OleVariant;
const
  COMBOBOX_ELEMENT_NAME = 'ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ"';
var
  w;
begin
try
  Result := true;

  if not OpenDocByNumber(10003000) then
    Raise('Не получилось открыть "Конституцию РФ"');
  if not IsExists(OpenBaseSearch(SRCH_BASE)) then
    Raise('Не получилось открыть панель БП в документе');

  w := GetFromBaseSearch(COMBOBOX_ELEMENT_NAME);
  if not IsExists(w) then
    Raise('Не найден ' + COMBOBOX_ELEMENT_NAME);
  if not w.IsSelected then
    Raise('Не выбран ' + COMBOBOX_ELEMENT_NAME + ' после вызова БП из списка через тулбар "Поиск\Базовый поиск"');
  if not IsKindsInBaseSearchEnabled then
    Result := ErrorResult('Кнопки видов информации НЕ доступны для переключения');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.5.4: Последний введенный контекст должен быть выделен.
}
function  HLTC77_2_15_5_4_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = '77 2 15 5 4';
begin
try
  Result := true;

  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT) then
    Raise('Не получилось произвести поиск БП');

  if not OpenDocByNumber(10003000) then
    Raise('Не получилось открыть "Конституцию РФ"');
  if not IsExists(OpenBaseSearch) then
    Raise('Не получилось открыть панель БП в списке');
  if not StringCompare(CONTEXT, GetValueFromBaseSearch) then
    Raise('Последний введенный контекст, скопированный из БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.6: При вызове из формы не поддерживающей базовый поиск как панель (другие поисковые формы, предварительный просмотр и др.), открывается отдельная карточка базового поиска.
    HLTC77.2.15.6.1: Карточка состоит из поисковых элементов и несворачиваемого текста подсказки о правилах работы с поиском..
    HLTC77.2.15.6.2: Дополнительных переключателей области поиска (в списке/везде) в данной карточке нет.
    HLTC77.2.15.6.3: В нижней части карточки располагается история контекстов, заданных пользователем во всех случаях обращения к базовому поиску. При выборе одного из них (клик мышью или нажатие Enter), данный контекст подставляется в карточку.
    HLTC77.2.15.6.5: Последний введенный контекст должен быть выделен.
}
function  HLTC77_2_15_6_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = '77 2 15 6 1';
  CONTEXT2 = '77 2 15 6 2';
  COMBOBOX_ELEMENT = 'ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ"';
var
  wCombo, wHistory, wHelp;
begin
try
  Result := true;

  if not BaseSearch(nil, CONTEXT1) then
    Raise('Не получилось произвести поиск БП по "' + CONTEXT1 + '"');
  if not BaseSearch(nil, CONTEXT2) then
    Raise('Не получилось произвести поиск БП по "' + CONTEXT2 + '"');
    
  if not GoToPPR then
    Raise('Не получилось перейти в ППР');
  if not GoToBaseSearch then
    Raise('Не получилось перейти в БП');
  wHelp := GetFromBaseSearch('ПОДСКАЗКА');
  if not IsExists(wHelp) then
    Raise('Не найдено окно подсказки БП');
  wCombo := GetFromBaseSearch('КОМБОБОКС "ОБЛАСТЬ ПОИСКА"');
  if (not IsExists(wCombo)) or wCombo.Visible then
    Result := ErrorResult('КОМБОБОКС "ОБЛАСТЬ ПОИСКА" виден или не найден!');
  if not StringCompare(CONTEXT2, GetValueFromBaseSearch) then
    Result := ErrorResult('Последний введенный контекст, скопированный из БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT2 + '"');
    
  wHistory := GetFromBaseSearch('ИСТОРИЯ ЗАПРОСОВ БАЗОВОГО ПОИСКА');
  if not IsExists(wHistory) then
    Raise('Не найдено окно истории запросов БП');
  if not OpenObjectFromFolder('Запрос*' + CONTEXT1 + '*', wHistory) then
    Raise('Не получилось открыть запрос из истории БП "Запрос*' + CONTEXT1 + '*"');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Result := ErrorResult('Контекст загруженный из истории запросов и скопированный из БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT1 + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.6.4: Автоматический тест. Проверить, что высота подсказки не изменилась.
} 
function  HLTC77_2_15_6_4_Execute(var  current_state: OleVariant): OleVariant;
var
  w, wHeight;
begin
try
  try
    Result := false;
   
    GoToPPR;
    PressKeyWithCheck(['[F4]']);

    w := GetFromBaseSearch('ПОДСКАЗКА');
    if not IsExists(w) then
      Raise('Не найдено родственное окно подсказки БП');
    // устанавливаем макс. размеры
    SetMainWindowSize(Win32API.GetSystemMetrics(SM_CXSCREEN), Win32API.GetSystemMetrics(SM_CYSCREEN));
    wHeight := w.Height;
    // устанавливаем мин. размеры
    SetMainWindowSize(1, 1);
    Delay(Options.Run.Timeout div 5);
    
    Result := wHeight <> w.Height;
    if not Result then
      Log.Error('Не меняется размер области подсказки Базового поиска при изменении размера главного окна!');

  finally
    SetMainWindowSize(Win32API.GetSystemMetrics(SM_CXSCREEN), Win32API.GetSystemMetrics(SM_CYSCREEN));
    GoToMainMenu;
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.15.8: Объект базового поиска дополняется кнопкой-«крестом» для скрытия. Скрытие невозможно при вызове объекта в рамках Основного меню.
}
function  HLTC77_2_15_8_Execute(var  current_state: OleVariant): OleVariant;
begin
try
  Result := true;

  if not GoToMainMenu then
    Raise('Не получилось перейти в ОМ');
  if not IsExists(GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"')) then
    Raise('Не найден КОМБОБОКС "БАЗОВЫЙ ПОИСК"'); 

  if CloseBaseSearch then
    Result := ErrorResult('Видимо получилось закрыть БП в ОМ');
  if not OpenDocByNumber(10003000) then
    Raise('Не получилось открыть "Конституцию РФ"');
  if not IsExists(OpenBaseSearch) then
    Raise('Не получилось открыть панель БП в списке');
      
  if not CloseBaseSearch then
    Result := ErrorResult('Не получилось закрыть БП в документе');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.9: Если базовый поиск открыт, как "Панель", то эта панель остается открытой во всех объектах, где возможно до тех пор пока не будет явно закрыта вручную.
    Зайти в любой документ, открыть панель БП, перейти в ОМ, открыть список через правовой навигатор - панель БП должна быть открыта.
    Закрыть панель БП, зайти в документ по Alt+N - панель БП должна быть закрыта. 
    Открыть панель БП, построить список через ППР – панель БП должна быть закрыта.
    
  HLTC77.2.15.20: Если поиск был проведен из ОМ, то в этом случае считается, что пользователь сам вызвал панель БП, 
    и она будет показываться до тех пор, пока явно не будет закрыта. Кроме случаев, когда после этого был осуществлен любой поиск с построением списка, в т.ч. выполнение запроса из папки.    
}
function  HLTC77_2_15_9_Execute(var  current_state: OleVariant): OleVariant;
begin
try
  Result := true;

  if not OpenDocByNumber(10003000) then
    Raise('Не получилось открыть "Конституцию РФ"');
  if not CloseBaseSearch then
    Raise('Не получилось закрыть БП в ОМ');                                               
  if not IsExists(OpenBaseSearch) then
    Raise('Не получилось открыть панель БП в списке');
    
  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if not IsExists(GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"')) then
    Raise('Не найдена панель БП (КОМБОБОКС "БАЗОВЫЙ ПОИСК")');

  if not CloseBaseSearch then
    Raise('Не получилось закрыть БП в ОМ');                                               
  if not OpenDocByNumber(10003000) then
    Raise('Не получилось открыть "Конституцию РФ"');
  if IsExists(GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"')) then
    Raise('Найдена панель БП (КОМБОБОКС "БАЗОВЫЙ ПОИСК")');
    
  if not IsExists(OpenBaseSearch) then
    Raise('Не получилось открыть панель БП в списке');
  if not IsExists(GetListOfAllDocuments) then
    Raise('Не получилось построить список всех документов!');
  if IsExists(GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"')) then
    Raise('Найдена панель БП (КОМБОБОКС "БАЗОВЫЙ ПОИСК")');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.10: Если базовый поиск открыт как карточка запросов, то панель БП будет открываться везде, 
    где сможет(кроме случаев, когда после этого был осуществлен любой поиск с построением списка, 
    в т.ч. выполнение запроса из папки), но закрытие карточки не считается явным закрытием панели базового поиска. 
    Зайти в любой документ и закрыть панель БП(если она была открыта), открыть ППР, открыть БП, 
    открыть любой документ по Alt+N - панель БП должна быть открыта. 
    Открыть ППР, открыть БП, закрыть БП, открыть любой список через правовой навигатор - панель БП должна быть закрыта. 
    Построить список через ППС – панель БП должна быть закрыта.
}
function  HLTC77_2_15_10_Execute(var  current_state: OleVariant): OleVariant;
begin
try
  Result := true;

  if not OpenDocByNumber(10003000) then
    Raise('Не получилось открыть "Конституцию РФ"');
  if not CloseBaseSearch then
    Raise('Не получилось закрыть БП в ОМ');                                               
  if not GoToPPR then
    Raise('Не получилось перейти в ППР');
  if not GoToBaseSearch then
    Raise('Не получилось перейти в БП');
  if not OpenDocByNumber(2001) then
    Raise('Не получилось открыть Документ 2001');
  if not IsExists(GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"')) then
    Raise('Не найдена панель БП (КОМБОБОКС "БАЗОВЫЙ ПОИСК")');

  if not GoToPPR then
    Raise('Не получилось перейти в ППР');
  if not GoToBaseSearch then
    Raise('Не получилось перейти в БП');
  if not CloseBaseSearch then
    Raise('Не получилось закрыть БП в ОМ');
  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if IsExists(GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"')) then
    Raise('Найдена панель БП (КОМБОБОКС "БАЗОВЫЙ ПОИСК")');   
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.12: В журнале работы создается специальная папка Базовые поиски, куда сохраняются все запросы, выполненные из карточки БП.
}
function  HLTC77_2_15_12_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = '77 2 15 12';
var
  w, listArray;
begin
try
  Result := true;

  JurnalClear;
  GoToMainMenu;
  if not BaseSearch(nil, CONTEXT, 'IsCloseWindow:=false') then
    Raise('Не получилось произвести поиск БП');
  listArray := GetElementsFromTree(GetList);

  w := GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"');
  if not IsExists(w) then
    Raise('Не найдено поле ввода контекста в БП');
  w.Keys('[End]![Home][Del]');
  if not OpenObjectFromFolder('*\Базовый поиск\*' + CONTEXT + '*', OpenJurnalTab) then
    Raise('Не получилось открыть сохраненный запрос БП из истории Журнала работы');
  if not BaseSearch(nil, CONTEXT, 'IsContinueSearch:=true') then
    Raise('Не получилось произвести поиск БП после загрузки запроса из Журнала работы');

  if not CompareArray(listArray, GetElementsFromTree(GetList)) then
    Raise('Список, построенный по сохраненному в истории запросу БП отличается от изначального списка');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.13: При хождении по истории форма базового поиска подставляет последний найденный контекст, 
    если проводились поиски контекста через БП или через ППР и очищает строку контекста, если поиски не проводились.
    HLTC77.2.15.13.1: Зарегистрировать нового пользователя. Перейти по первой ветке рубрикатора до списка. 
      Открыть форму БП и ввести контекст "ымпвамвамвамва". Нажать кнопку "Искать". Закрыть сообщение об опечатках. 
      Перейти в любой документ списка. Вернуться по истории на 1 шаг. Строка для ввода контекста на форме БП должна быть пустой.
    HLTC77.2.15.13.2: Осуществить поиск в тексте документа контекста "президент РФ", используя ППР. 
      В полученном списке, перейти в произвольный документ. Вернутся на шаг назад. 
      В строке ввода контекста на форме БП должен быть введен контекст "президент РФ".
    HLTC77.2.15.13.3: На форме БП ввести контекст "ымпвамвамвамва". Нажать кнопку "Искать". 
      Закрыть окно с сообщением о неудачном поиске и перейти в произвольный документ. 
      При возврате назад по истории, в БП должен отображаться контекст "президент РФ".      
}
function  HLTC77_2_15_13_Execute(var  current_state: OleVariant): OleVariant;
const
  LOGINNAME = 'HLTC77_2_15_13';
  CONTEXT1 = 'ымпвамвамвамва';
  CONTEXT2 = 'президент РФ';
var
  tabsMode;
begin
try
  Result := true;

  if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
    Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');

  try
    // т.к. пока данные HLTC работает только на текущей вкладке
    tabsMode := gbl_F1ShellOpenDocsInNewTab; 
    gbl_F1ShellOpenDocsInNewTab := false;
    SetSettingsForF1ShellTabs;

    //HLTC77.2.15.13.1
    if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
      Raise('Не получилось открыть список "' + LIST_MAIN + '"');
    if BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false;IsContinueAfterMisprint:=false') then
      Raise('Получилось произвести поиск БП невалидного контекста "' + CONTEXT1 + '"');
    if not OpenDocFromList('*', GetList) then
      Raise('Не получилось открыть документ из списка');
    if not CloseTabOrGoBackByHistory then
      Raise('Не получилось закрыть вкладку или вернуться назад по истории');
    if GetValueFromBaseSearch <> '' then
      Result := ErrorResult('Поиск не прошел, поле контекста БП не пустое (возможно содержит невалидный контекст): "' + GetValueFromBaseSearch + '"');

    //HLTC77.2.15.13.2
    if not SearchInPPR([CARD_PPR, ([([FD_WORDS_IN_TEXT, ([CONTEXT2]) ]) ]) ]) then
      Raise('Не получилось произвести ППР');
    if not OpenDocFromList('*', GetList) then
      Raise('Не получилось открыть документ из списка');
    if not CloseTabOrGoBackByHistory then
      Raise('Не получилось закрыть вкладку или вернуться назад по истории');
    if not GoToBaseSearch then
      Raise('Не получилось перейти в БП');
    if not StringCompare(CONTEXT2, GetValueFromBaseSearch) then
      Result := ErrorResult('После поиска БП и возврата по истории назад, контекст БП отличается: "' + GetValueFromBaseSearch + '", должен быть : "' + CONTEXT2 + '"');

    //HLTC77.2.15.13.3
    if BaseSearch(nil, CONTEXT1, 'IsCloseWindow:=false;IsContinueAfterMisprint:=false') then
      Raise('Получилось произвести поиск БП невалидного контекста "' + CONTEXT1 + '"');
    if not OpenDocFromList('*', GetList) then
      Raise('Не получилось открыть документ из списка');
    if not CloseTabOrGoBackByHistory then
      Raise('Не получилось закрыть вкладку или вернуться назад по истории');
    if not StringCompare(CONTEXT2, GetValueFromBaseSearch) then
      Result := ErrorResult('После возврата по истории назад, контекст БП отличается: "' + GetValueFromBaseSearch + '", должен быть : "' + CONTEXT2 + '"');
  finally
    gbl_F1ShellOpenDocsInNewTab := tabsMode;
    CloseF1Shell;
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.15.14: При переключении области поиска с поддерживающей виды информации ("Везде" и "В списке") на не поддерживающую ("в Данном документе") вид информации сбрасывается в значение "Все документы".
    Открыть форму БП находясь в синхронном просмотре текста документа. 
    Выбрать область поиска "Везде" и вид правовой информации "Судебная практика". Перевести фокус в список. 
    Переключить несколько раз область поиска с "везде" на "в списке" - на форме БП ничего не должно меняться. 
    Перевести фокус в документ. Переключить область поиска на "В данном документе" - интерфейс выбора вида информации должен стать недоступным. 
    При последующем выборе, отличного от текущей области поиска, интерфейс выбора вида информации становится доступным и сбрасывается в "Все документы".
}
function  HLTC77_2_15_14_Execute(var  current_state: OleVariant): OleVariant;
var
  i, w, combobox;
begin
try
  Result := true;

  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if not IsExists(OpenInSynhroView('ТЕКСТ ДОКУМЕНТА')) then
    Raise('Не получилось открыть "ТЕКСТ ДОКУМЕНТА" в синхронном просмотре');    
  if not GoToBaseSearch then
    Raise('Не получилось перейти в БП');

  combobox := GetFromBaseSearch('КОМБОБОКС "ОБЛАСТЬ ПОИСКА"');
  if not IsExists(combobox) then 
    Raise('Не найден КОМБОБОКС "ОБЛАСТЬ ПОИСКА"');
  if not SelectInCombobox(combobox, SRCH_IN_ALL) then
    Raise('Не получилось выбрать область поиска "' + SRCH_IN_ALL + '"');

  ClearContextInBaseSearch;  
  if not SetKindInBaseSearch(SRCH_BASE_THEME_JUDICAL_PRACTICS) then 
    Raise('Не удалось выбрать вид информации: ' + SRCH_BASE_THEME_JUDICAL_PRACTICS);

  if not IsExists(GetList) then 
    Raise('Список не найден');
  GetList.Keys('[Home]');
  
  for i := 1 to 3 do 
  begin
    if not SelectInCombobox(combobox, SRCH_IN_LIST) then
      Raise('Не получилось выбрать область поиска "' + SRCH_IN_LIST + '"');
    if not SelectInCombobox(combobox, SRCH_IN_ALL) then
      Raise('Не получилось выбрать область поиска "' + SRCH_IN_ALL + '"');
  end;
  if not StringCompare(SRCH_BASE_THEME_JUDICAL_PRACTICS, GetKindInBaseSearch) then
    Result := ErrorResult('Изменился вид информации БП после переключения типа поиска. Должен быть: "' + SRCH_BASE_THEME_JUDICAL_PRACTICS + '", есть: "' + GetKindInBaseSearch + '"');
    
  GetFromSynchroView('ТЕКСТ ДОКУМЕНТА').Setfocus;  
  if IsKindsInBaseSearchEnabled then
    Result := ErrorResult('Кнопки видов информации доступны для переключения');
  
  if not IsExists(GetFromBaseSearch('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "В ДОКУМЕНТЕ"')) then 
    Raise('Не найден ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "В ДОКУМЕНТЕ""');
  if not GetFromBaseSearch('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "В ДОКУМЕНТЕ"').IsSelected then
    Result := ErrorResult('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "В ДОКУМЕНТЕ" не выбран после перевода фокуса в текст документа (синхронного просмотра)');
  
  if not SelectInCombobox(combobox, SRCH_IN_ALL) then
    Raise('Не получилось выбрать область поиска "' + SRCH_IN_ALL + '"');
  if not IsKindsInBaseSearchEnabled then
    Result := ErrorResult('Кнопки видов информации НЕ доступны для переключения');
  if not StringCompare(SRCH_BASE_THEME_ALL_DOCS, GetKindInBaseSearch) then
    Result := ErrorResult('Неправильный вид информации БП после переключения типа поиска. Должен быть: "' + SRCH_BASE_THEME_ALL_DOCS + '", есть: "' + GetKindInBaseSearch + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.15: Поиск должен начинаться по нажатию кнопки Найти, клавиши Enter или клавиш Ctrl+Enter.
}
function  HLTC77_2_15_15_Execute(var  current_state: OleVariant): OleVariant;
var
  i, key;
begin
try
  Result := true;
  for i := 1 to 3 do 
  begin
    case i of
      1: key := 'BUTTON';
      2: key := '[Enter]';
      3: key := '^[Enter]';
    end;

    GoToMainMenu;
    if not BaseSearch(nil, '1', 'IsCloseWindow:=false;searchKey:=' + key) then
      Result := ErrorResult('Поиск БП не прошел с использованием клавиши: "' + key + '"');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.16: Поведение переключателей "Базового поиска" при смене фокуса.
    HLTC77.2.15.16.3: При смене фокуса из документа в список переключатель "Область поиска" всегда ставиться в значение "Везде".
    HLTC77.2.15.16.4: При смене фокуса из списка в документ или, если переход в список или документ был осуществлен вызовом поиска контекста(Ctrl+F), по умолчанию в панели БП должен быть выставлен переключатель «В данном документе» или «В названиях документов списка».
}
function  HLTC77_2_15_16_Execute(var  current_state: OleVariant): OleVariant;
var
  comboboxElement;
begin
try
  Result := true;

  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  if not GoToBaseSearch then
    Raise('Не получилось перейти в БП');
  if not IsExists(OpenInSynhroView('ТЕКСТ ДОКУМЕНТА')) then
    Raise('Не получилось открыть "ТЕКСТ ДОКУМЕНТА" в синхронном просмотре');    

  comboboxElement := GetFromBaseSearch('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "В ДОКУМЕНТЕ"');
  if not IsExists(comboboxElement) then 
    Raise('Не найден ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "В ДОКУМЕНТЕ"');
  if not comboboxElement.IsSelected then
    Result := ErrorResult('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "В ДОКУМЕНТЕ" не выбран после перевода фокуса из списка в документ (синхронного просмотра)');
    
  Delay(Options.Run.Timeout div 10);
  
  if not IsExists(GetList) then 
    Raise('Список не найден!');
  GetList.SetFocus;
  //GetList.Keys('[Home]');

  Delay(Options.Run.Timeout div 10);
  
  comboboxElement := GetFromBaseSearch('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ"');
  if not IsExists(comboboxElement) then 
    Raise('Не найден ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ"');
  if not comboboxElement.IsSelected then
    Result := ErrorResult('ЭЛЕМЕНТ КОМБОБОКСА ОБЛАСТЬ ПОИСКА "ВЕЗДЕ" не выбран после перевода фокуса документа в список');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.17.1: При клике на пример, он подставляется в строку поиска, заменяя псевдонадпись.
}
function  HLTC77_2_15_17_1_Execute(var  current_state: OleVariant): OleVariant;
const
  LOGINNAME = 'HLTC77_2_15_17_1';
  EXAMPLE_COUNT = 16;
var
  i, wEx, wBS, exText;
begin
try
  Result := true;

  if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
    Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');
  if not SelectConfiguration(CONFIGURATION_LIGHT) then
    Raise('Не получилось переключиться на конфигурацию: ' + CONFIGURATION_LIGHT);

  if not GoToBaseSearch then
    Raise('Не получилось перейти в БП');
  wEx := GetFromBaseSearch('ССЫЛКА "ПРИМЕР"');
  if not IsExists(wEx) then 
    Raise('ССЫЛКА "ПРИМЕР" не найдена на панели БП');
  wBS := GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"');
  if not IsExists(wBS) then 
    Raise('КОМБОБОКС "БАЗОВЫЙ ПОИСК" не найден'); 
    
  for i := 1 to EXAMPLE_COUNT do 
  begin
    ClearContextInBaseSearch;    
    
    exText := wEx.Text; 

    ClickOnExampleInBaseSearch;
    
    if exText <> common.GetWindowText(wBS) then
      Result := ErrorResult('После клика на пример БП "' + exText + '", содержимое в поле ввода отличается "' + common.GetWindowText(wBS) + '"');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.17.2: Новый пример должен подставляться каждый 10 запуск.
}
function  HLTC77_2_15_17_2_Execute(var  current_state: OleVariant): OleVariant;
const
  LOGINNAME = 'HLTC77_2_15_17_2';
  EXAMPLE_COUNT = 10;
var
  i, wEx, exTextLast;
begin
try
  Result := true;

  for i := 1 to EXAMPLE_COUNT + 1 do 
  begin
    if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
      Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');
    if not GoToBaseSearch then
      Raise('Не получилось перейти в БП');
    wEx := GetFromBaseSearch('ССЫЛКА "ПРИМЕР"');
    if not IsExists(wEx) then 
      Raise('ССЫЛКА "ПРИМЕР" не найдена на панели БП');

    if i = 1 then
      exTextLast := wEx.Text;    

    if i < EXAMPLE_COUNT then
    begin
      if exTextLast <> wEx.Text then
        Result := ErrorResult('Текст примера изменился на ' + IntToStr(i) + '-ом перезапуске. Текст примера: "' + wEx.Text + '", должен быть: "' + exTextLast + '"');
    end
    else
    begin
      if exTextLast = wEx.Text then
        Result := ErrorResult('Текст примера НЕ изменился на ' + IntToStr(i) + '-ом перезапуске. Текст примера: "' + wEx.Text + '"');
    end;
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.17.3: При наведении на пример мышкой, должен появляться хинт, дублирующий пример-подсказку, только в случае, если текст примера не умещается (заканчивается многоточием).
}
function  HLTC77_2_15_17_3_Execute(var  current_state: OleVariant): OleVariant;
const
  TEXT_HINT = 'Законодательство о налогах и сборах и иные нормативные правовые акты о налогах и сборах';
  EXAMPLE_COUNT = 20;  
var
  i, wEx, text;
begin
try
  Result := true;

  if not (SelectConfiguration(CONFIGURATION_STANDART) and SelectConfiguration(CONFIGURATION_LIGHT)) then
    Raise('Не получилось переключиться на конфигурацию: ' + CONFIGURATION_LIGHT);

  if not GoToBaseSearch then
    Raise('Не получилось перейти в БП');

  for i := 1 to EXAMPLE_COUNT do 
  begin
    ClearContextInBaseSearch;  

    wEx := GetFromBaseSearch('ССЫЛКА "ПРИМЕР"');
    if not IsExists(wEx) then 
      Raise('ССЫЛКА "ПРИМЕР" не найдена на панели БП');
    text := wEx.Text;

    if StringCompare(TEXT_HINT, text) then
      break;
    
    ClickOnVgSceneObject(wEx, 'IsClickByAbsXY:=false');
  end;
  if i >= EXAMPLE_COUNT then
    Raise('Длинный пример-подсказка, заканчивающийся многоточием не найден в базе');

  ClearContextInBaseSearch;    
  text := GetHintTextByCoords(0, 0, wEx, true);
  if text = '' then
    Raise('Хинт примера-подсказки БП не найден');     
  if not StringCompare(TEXT_HINT, text) then
    Raise('Хинт обрезанного примера-подсказки "' + text + '" отличается от эталонного "' + TEXT_HINT + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.19.1: 
  Для списка:
    Если выставлена область поиска "Список: в названиях", то выдаётся сообщение
    "В названиях документов данного списка искомый контекст не найден. Провести поиск по всему информационному банку?" ДА, НЕТ

  Для документа:
    Если выставлена область поиска "В документе", то выдаётся сообщение
    "Искомый контекст не найден. Провести поиск по всему информационному банку?" ДА, НЕТ.
}
function  HLTC77_2_15_19_1_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'гипер код 29899';
var
  res, msgText;
begin
try
  Result := true;
  
  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  res := BaseSearch(GetList, CONTEXT, 'IsExtendedResult:=true;searchType:=' + SRCH_IN_LIST_DOC_NAMES);
  if GetParam(res, 'Result', false) then Raise('Поиск БП почему-то прошел');
  msgText := GetParam(res, 'InfoMsgText', '');
  if not StringCompare('В названиях документов данного списка искомый контекст не найден.*Провести поиск по всему информационному банку?', msgText) then
    Result := ErrorResult('Несоответствующее сообщение после невыполненного поиска: "' + msgText + '"');

  if not OpenDocByNumber(10003000) then
    Raise('Не получилось открыть "Конституцию РФ"');
  res := BaseSearch(GetEditor, CONTEXT,'IsExtendedResult:=true;searchType:=' + SRCH_IN_DOC);
  if GetParam(res, 'Result', false) then Raise('Поиск БП почему-то прошел');
  msgText := GetParam(res, 'InfoMsgText', '');
  if not StringCompare('Искомый контекст не найден.*Провести поиск по всему информационному банку?', msgText) then
    Result := ErrorResult('Несоответствующее сообщение после невыполненного поиска: "' + msgText + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.19.2: Если выставлено условие "В списке", то выдается сообщение 
  "В уточняемом списке нет документов, отвечающих Вашему запросу. Провести поиск по всему информационному банку?" ДА, НЕТ.
}
function  HLTC77_2_15_19_2_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'гипер код 29899';
var
  res, msgText;
begin
try
  Result := true;
  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  res := BaseSearchInList(GetList, CONTEXT, 'IsExtendedResult:=true');
  if GetParam(res, 'Result', false) then Raise('Поиск БП в списке почему-то прошел');
  msgText := GetParam(res, 'InfoMsgText', '');
  if not StringCompare('В уточняемом списке нет документов, отвечающих Вашему запросу.*Провести поиск по всему информационному банку?', msgText) then
    Result := ErrorResult('Несоответствующее сообщение после невыполненного поиска в списке: "' + msgText + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.19.3: Если выставлено условие "Везде" или "В списке", но выбран какой-то вид информации, отличный от "Все документы", то выдается сообщение 
  "Документов указанного вида информации не найдено. Провести поиск по всем документам?" ДА, НЕТ
}
function  HLTC77_2_15_19_3_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'гипер код 29899';
var
  res, msgText;
begin
try
  Result := true;

  if not OpenObjectFromFolder(LIST_MAIN, OpenMenuTab) then
    Raise('Не получилось открыть список "' + LIST_MAIN + '"');
  res := BaseSearchInTheme(GetList, CONTEXT, SRCH_BASE_THEME_ACTS, 'IsExtendedResult:=true');
  if GetParam(res, 'Result', false) then Raise('Поиск БП в списке почему-то прошел');
  msgText := GetParam(res, 'InfoMsgText', '');
  if not StringCompare('Документов указанного вида информации не найдено*Провести поиск по всем документам?', msgText) then
    Result := ErrorResult('Несоответствующее сообщение после невыполненного поиска по виду информации: "' + msgText + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.1: Ввести «кодекс». Должен появиться список подсказок, состоящий из 7 кодексов. 
    Выбрать трудовой(с клавиатуры и мышью), автоматически должен начаться поиск.
    Проверить, что список ранее введенных контекстов в комбобоксе остался без изменений (туда должен добавиться только последний проведенный поиск).
}
function  HLTC77_2_15_21_1_Execute(var  current_state: OleVariant): OleVariant;
const
  LOGINNAME = 'HLTC77_2_15_21_1';
  CONTEXT1 = 'кодекс';
  CONTEXT2 = '*Трудовой кодекс*';
var
  w, etalonList, list;
begin
try
  Result := true;

  etalonList := [
{
// было раньше, вдруг пригодиться этот список

                'Гражданский кодекс', 
                'Трудовой кодекс', 
                'Налоговый кодекс', 
                'КОАП', 
                'ГК РФ',
                'Уголовный кодекс', 
                'ГПК'
}

                'ГК[ - открыть документ|10164072.0]',
                'Трудовой кодекс[ - открыть документ|12125268.0]',
                'Трудовой кодекс. Статья 419[ - открыть статью 419 документа|12125268.419]',
                'Воздушный кодекс[ - открыть документ|10200300.0]',
                'Таможенный кодекс[ - открыть документ|12131077.0]',
                'Налоговый кодекс[ - открыть документ|10900200.0]',
                'Земельный кодекс[ - открыть документ|12124624.0]'
  ];

  if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
    Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');
 
  if not GotoBaseSearch then 
    Raise('Не получилось открыть БП');
  if not EnterContextInBaseSearch(CONTEXT1) then
    Raise('Не получилось ввести контекст в поле ввода БП');  

  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  list := GetElementsFromTree(w);
  if not CompareArray(list, etalonList) then
    Result := ErrorResult('Выпадающий список контекстов-подсказок отличается от ожидаемого'); 
  if not Position_By_Text(w, CONTEXT2, false, true) then
    Raise('Не получилось выбрать контекст "' + CONTEXT2 + '"');
  Sys.Keys('[Enter]'); 
  WaitForProgressIndicatorAbsence;
  
  w := GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"');
  if not IsExists(w) then
    Raise('КОМБОБОКС "БАЗОВЫЙ ПОИСК" не найден');
  w.Keys('^[Down]');
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  list := GetElementsFromTree(w);
  if FindElement(list, CONTEXT2, true) then
    Raise('Выпадающий список введенных контекстов "' + Array2String(list) + '" содержит "' + CONTEXT2 + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.2: Ввести «ндс». В списке подсказок с клавиатуры выбрать «возмещение ндс». 
    Стереть «ндс». Нажать Enter. Проверить, что список построился по контексту «возмещение».
}
function  HLTC77_2_15_21_2_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'НДС';
  CONTEXT2 = 'возмещение';
var
  w;
begin
try
  Result := true;

  if not GotoBaseSearch then 
    Raise('Не получилось открыть БП');
  if not EnterContextInBaseSearch(CONTEXT1) then
    Raise('Не получилось ввести контекст в поле ввода БП');  
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  if not Position_By_Text(w, CONTEXT2 + ' ' + CONTEXT1) then
    Raise('Не получилось выбрать контекст "' + CONTEXT2 + ' ' + CONTEXT1 + '"');
  Sys.Keys('[BS][BS][BS][BS]');
  Delay(1000);//Без задержки сбраывается
  Sys.Keys('[Enter]'); 
  WaitForProgressIndicatorAbsence;
  
  if not IsExists(GetList) then
    Result := ErrorResult('Список не найден, возможно БП не прошел');
  if not StringCompare(CONTEXT2, GetValueFromBaseSearch) then
    Raise('Поле запроса содержит "' + GetValueFromBaseSearch + '", ожидалось "' + CONTEXT2 + '"');    
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.3: Ввести «договор». В списке подсказок с клавиатуры выбрать последнюю. Нажать стрелку «вниз». 
    Текущий выделенный элемент в списке подсказок должен пропасть, а в строке ввода должен остаться контекст «договор».
    Нажать Enter. Проверить, что список построился по контексту «договор».
}
function  HLTC77_2_15_21_3_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'договор';
var
  w;
begin
try
  Result := true;

  if not GotoBaseSearch then 
    Raise('Не получилось открыть БП');
  if not EnterContextInBaseSearch(CONTEXT1) then
    Raise('Не получилось ввести контекст в поле ввода БП');  

  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  //7(строк во всплывающей подсказке)+1 раз нажимаем Вниз
  Sys.Keys('[Down][Down][Down][Down][Down][Down][Down][Down][Enter]');
  WaitForProgressIndicatorAbsence;
  
  if not IsExists(GetList) then
    Result := ErrorResult('Список не найден, возможно БП не прошел');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Raise('Поле запроса содержит "' + GetValueFromBaseSearch + '", ожидалось "' + CONTEXT1 + '"');    
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.4: Ввести «решение». В списке подсказок с клавиатуры выбрать «апелляционное решение». 
    Нажать Esc, затем Enter. Проверить, что список построился по контексту «решение».
}
function  HLTC77_2_15_21_4_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'решение';
  CONTEXT2 = 'заочное решение';
var
  w;
begin
try
  Result := true;

  if not GotoBaseSearch then 
    Raise('Не получилось открыть БП');
  if not EnterContextInBaseSearch(CONTEXT1) then
    Raise('Не получилось ввести контекст в поле ввода БП');  
  
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  if not Position_By_Text(w, CONTEXT2) then
    Raise('Не получилось выбрать контекст "' + CONTEXT2 + '"');
  Sys.Keys('[Esc][Enter]'); 
  WaitForProgressIndicatorAbsence;
  
  if not IsExists(GetList) then
    Result := ErrorResult('Список не найден, возможно БП не прошел');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Raise('Поле запроса содержит "' + GetValueFromBaseSearch + '", ожидалось "' + CONTEXT1 + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.5: Проверить, что есть возможность закрыть подсказки по ссылке в правом нижнем углу.
}
function  HLTC77_2_15_21_5_Execute(var  current_state: OleVariant): OleVariant;
const
  LOGINNAME = 'HLTC77_2_15_21_5';
  CONTEXT1 = 'договор';
var
  w;
begin
try
  Result := true;

  if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
    Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');

  if not GotoBaseSearch then 
    Raise('Не получилось открыть БП');
  if not EnterContextInBaseSearch(CONTEXT1) then
    Raise('Не получилось ввести контекст в поле ввода БП');  
  
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
    
  w.Click(w.Width - 32, w.Height - 10);

  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if IsExists(w) then
    Raise('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП видимо не закрылся после клика по "Закрыть"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.6: Открыть документ 10800200, ввести «счет-фактура». 
    Проверить, что подсказка «счет-фактура» показывается только при положении переключателя «В данном документе».
}
function  HLTC77_2_15_21_6_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'счет-фактура';
var
  w;
begin
try
  Result := true;

  if not OpenDocByNumber(10800200) then
    Raise('Не получилось открыть "НК РФ"');

  if not IsExists(OpenBaseSearch(SRCH_IN_DOC)) then 
    Raise('Не получилось открыть БП в документе');
  if not EnterContextInBaseSearch(CONTEXT1) then
    Raise('Не получилось ввести контекст в поле ввода БП');  
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  if not Position_By_Text(w, CONTEXT1) then
    Raise('Не получилось найти контекст "' + CONTEXT1 + '" в случае БП для поиска "В данном документе"');

  if not IsExists(OpenBaseSearch(SRCH_BASE)) then 
    Raise('Не получилось открыть БП для поиска "Везде"');
  if not EnterContextInBaseSearch(CONTEXT1) then
    Raise('Не получилось ввести контекст в поле ввода БП');  
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  if Position_By_Text(w, CONTEXT1) then
    Raise('Получилось найти контекст "' + CONTEXT1 + '" в случае БП для поиска "Везде"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.7: Открыть документ 10064072, ввести «гражданский кодекс». 
    Проверить, что подсказка показывается при обоих положениях переключателя поиска.
}
function  HLTC77_2_15_21_7_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'Гражданский кодекс';
  CONTEXT_RES = 'ГК[ - открыть документ|10164072.0]';
var
  w;
begin
try
  Result := true;

  if not OpenDocByNumber(10064072) then
    Raise('Не получилось открыть "ГК РФ"');

  if not IsExists(OpenBaseSearch(SRCH_IN_DOC)) then 
    Raise('Не получилось открыть БП в документе');
  if not EnterContextInBaseSearch(CONTEXT) then
    Raise('Не получилось ввести контекст в поле ввода БП');  
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден спиоск посказок (ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП)');
    
  if not Position_By_Text(w, CONTEXT_RES) then
    Raise('Не получилось найти контекст "' + CONTEXT_RES + '" в случае БП для поиска "В данном документе"');

  if not IsExists(OpenBaseSearch(SRCH_BASE)) then 
    Raise('Не получилось открыть БП для поиска "Везде"');
  if not EnterContextInBaseSearch(CONTEXT) then
    Raise('Не получилось ввести контекст в поле ввода БП');  
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 5);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  if not Position_By_Text(w, CONTEXT_RES) then
    Raise('Не получилось найти контекст "' + CONTEXT_RES + '" в случае БП для поиска "Везде"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.8: Проверить, что перемещаться по списку подсказок можно стрелками вверх/вниз.
    При этом, выделенная подсказка подсвечена синей полосой (заострённой справа), а текст подставляется в строку поиска.
}
function  HLTC77_2_15_21_8_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT0 = 'приказ';
  CONTEXT1 = 'приказ об увольнении работника';
  CONTEXT2 = 'приказ о предоставлении отпуска';
var
  w;
begin
try
  Result := true;

  if not GotoBaseSearch then 
    Raise('Не получилось перейти в БП');
  if not EnterContextInBaseSearch(CONTEXT0) then
    Raise('Не получилось ввести контекст в поле ввода БП');  
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 3);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');

  Sys.Keys('[Down][Down][Down][Down][Down]');
  if not StringCompare(CONTEXT1, GetValueFromBaseSearch) then
    Raise('Поле запроса содержит "' + GetValueFromBaseSearch + '", ожидалось "' + CONTEXT1 + '"');    
  Sys.Keys('[Up][Up][Up]');
  if not StringCompare(CONTEXT2, GetValueFromBaseSearch) then
    Raise('Поле запроса содержит "' + GetValueFromBaseSearch + '", ожидалось "' + CONTEXT2 + '"');    
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.21.11: Подсказка не должна проверяться на опечатки
    1. В БП ввести: Эта
    Появится список подсказок
    2. Выбрать:
    Эта подсказка есть в обоих базах mvar

    Запрос не должен никак измениться/исправиться (mvar так и остаётся mvar).
}
function  HLTC77_2_15_21_11_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'Эта';
  CONTEXT_RES = 'Эта подсказка есть в обоих базах mvar';
var
  w;
begin
try
  Result := true;
  GoToMainMenu;
  w := GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"');
  if not IsExists(w) then
    Raise('КОМБОБОКС "БАЗОВЫЙ ПОИСК" не найден');
  w.Keys(CONTEXT);
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП', Options.Run.Timeout div 3);
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  if not Position_By_Text(w, CONTEXT_RES) then
    Raise('Не получилось найти подсказку "' + CONTEXT_RES + '" выпадающего списка БП');
  Sys.Keys('[Enter]');
  WaitForProgressIndicatorAbsence;
    
  if not StringCompare(CONTEXT_RES, GetValueFromBaseSearch) then
    Result := ErrorResult('Контекст из поля ввода БП "' + GetValueFromBaseSearch + '" отличается от ожидаемого "' + CONTEXT_RES + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.22.1: Проверить, что при переключении области поиска на «В документе», кнопка Найти трансформируется в две кнопки, 
    которые осуществляют поиск вниз и вверх, причем последняя задизейблена.
  HLTC77.2.15.22.2: После ввода контекста и нажатия кнопки Найти или клавиши Enter рядом с переключателем появляется количество найденных фрагментов. 
    При этом, если их больше 999, то так и отображается (>999).
  HLTC77.2.15.22.3: При наведении мышки на число, обозначающее количество вхождений, должен всплывать хинт с текстом: 
    "Количество найденных в документе вхождений с искомым контекстом".
  HLTC77.2.15.22.4: Проверить, что кнопка поиска предыдущего фрагмента становится доступной при повторном нажатии кнопки Найти. 
    Проверить также ее корректную работу(когда находимся в середине документа, в начале, в конце).
}
function  HLTC77_2_15_22_1_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'налог';
  NUM_CONTEXT = ' >999';
  NUM_HINT = 'Количество найденных в документе вхождений с искомым контекстом';
var
  w, button, hint;
begin
try
  Result := true;

  if not OpenDocByNumber(10800200) then
    Raise('Не получилось открыть "НК РФ"');
  if not IsExists(OpenBaseSearch(SRCH_IN_DOC)) then 
    Raise('Не получилось открыть БП в документе');
    
  button := GetFromBaseSearch('КНОПКА "НАЙТИ ВВЕРХ"');
  if not IsExists(button) then
    Raise('КНОПКА "НАЙТИ ВВЕРХ" не найдена на панели БП');
  if IsButtonEnabled(button) then
    Result := ErrorResult('КНОПКА "НАЙТИ ВВЕРХ" изначально активна до выполненного поиска');
  if not BaseSearchInDocument(GetEditor, CONTEXT1, 'IsCloseWindow:=false') then
    Raise('Не получилось выполнить поиск контекста "' + CONTEXT1 + '"');
  if IsButtonEnabled(button) then
    Result := ErrorResult('КНОПКА "НАЙТИ ВВЕРХ" активна после первого поиска');
  if not BaseSearchInDocument(GetEditor, CONTEXT1, 'IsContinueSearch:=true;IsCloseWindow:=false') then
    Raise('Не получилось продолжить поиск контекста "' + CONTEXT1 + '"');
  if not IsButtonEnabled(button) then
    Result := ErrorResult('КНОПКА "НАЙТИ ВВЕРХ" НЕ активна после второго поиска');
  
  w := GetFromBaseSearch('НАДПИСЬ "КОЛИЧЕСТВО НАЙДЕННЫХ"');
  if not IsExists(w) then
    Raise('Не найдена НАДПИСЬ "КОЛИЧЕСТВО НАЙДЕННЫХ"');
  if not StringCompare(NUM_CONTEXT, w.Text) then
    Result := ErrorResult('Надпись не соответствует: "' + w.Text + '", ожидалось: "' + NUM_CONTEXT + '"');
  hint := GetHintTextByCoords(0, 0, w, true);
  if hint = '' then
    Raise('Хинт надписи "КОЛИЧЕСТВО НАЙДЕННЫХ" пустой или не получен');     
  if not StringCompare(NUM_HINT, hint) then
    Raise('Хинт надписи "КОЛИЧЕСТВО НАЙДЕННЫХ" "' + hint + '" отличается от эталонного "' + NUM_HINT + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.22.5: Проверить, что в случае, если искомый контекст находится в скрытом тексте (например, в выключенных юр. комментариях), то при поиске вниз и вверх, показ соответствующих комментариев будет включаться автоматически, а найденный контекст подсвечиваться.
  !!!Скрипт расчитан на расширенную конфу!!!
}
function  HLTC77_2_15_22_5_Execute(var  current_state: OleVariant): OleVariant;
const
  DOC_NUM = '10003000';
  CONTEXT = 'См. Декларацию о государственном суверенитете';
  STRING_TEXT = 'ГАРАНТ:*См. Декларацию о государственном*';
var 
  text;
begin
try
	Result := true;
  if not OpenDocByNumber(DOC_NUM) then
    Raise('Не получилось открыть документ "' + IntToStr(DOC_NUM) + '"');
  if not ClickToolbarButton(GetFromEditor('ТУЛБАР "ДОКУМЕНТ: ТЕКСТ ДОКУМЕНТА"'), 'Скрыть комментарии гаранта', 'SetToState:=released') then
    Raise('Не получилось отжать кнопку "Скрыть комментарии гаранта"');
  if not BaseSearchInDocument(GetEditor, CONTEXT) then
    Raise('Не получилось провести поиск контекста "' + CONTEXT + '"');
  text := CopyToClipboard(GetEditor, 'СТРОКА В ДОКУМЕНТЕ');
  if not StringCompare(STRING_TEXT, text) then
    Raise('После поиска контекста "' + CONTEXT + '", текущая строка "' + text + '" отличается от эталона "' + STRING_TEXT + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.15.23.1: Проверить, что при наличии в инишнике параметров  -BSUserPaneEnable (доступность пользовательской вкладки), и –BSUserPaneName(имя пользовательской вкладки), и прописанного в базе специального ключа(на ТБ прописан) на панели БП появляется вкладка с видом информации.
  HLTC77.2.15.23.2: Проверить, что при отсутствии параметра с именем выводится имя ключа из базы(в ТБ - "Пользовательский тип интерфейса").
  !!!Скрипт расчитан на декстопную версию!!!
}
function HLTC77_2_15_23_Execute(var  current_state: OleVariant): OleVariant;
const
  LOGINNAME = 'HLTC77_2_15_23';
  SRCH_BASE_THEME_USER_NAME = 'User Data';
  SRCH_BASE_THEME_DEFAULT_NAME = 'Пользовательский тип префикса';
var
  bsPages;
begin
try
  try
    Result := true;
    
    CloseF1Shell;
    if not SetValueToGarantINI('F1Server Params', '-BSUserPaneEnable', '1', true) then
      Raise('Не получилось создать параметр "[F1Server Params]"\"-BSUserPaneEnable"="1"');
    if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
      Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');
    if not GoToBaseSearch then
      Raise('Не получилось перейти к БП');    
    bsPages := GetFromBaseSearch('ЗАКЛАДКИ "ВИД ПРАВОВОЙ ИНФОРМАЦИИ"');
    if not IsExists(bsPages) then
      Raise('Не удалось получить ЗАКЛАДКИ "ВИД ПРАВОВОЙ ИНФОРМАЦИИ"');
    if not SwitchToPage(bsPages, SRCH_BASE_THEME_DEFAULT_NAME) then 
      Result := ErrorResult('Не удалось найти и переключиться на пользовательскую закладку: ' + SRCH_BASE_THEME_DEFAULT_NAME);

    CloseF1Shell;
    if not SetValueToGarantINI('F1Server Params', '-BSUserPaneName', SRCH_BASE_THEME_USER_NAME, true) then
      Raise('Не получилось создать параметр "[F1Server Params]"\"-BSUserPaneName"="' + SRCH_BASE_THEME_USER_NAME + '"');
    if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
      Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');
    if not GoToBaseSearch then
      Raise('Не получилось перейти к БП');    
    bsPages := GetFromBaseSearch('ЗАКЛАДКИ "ВИД ПРАВОВОЙ ИНФОРМАЦИИ"');
    if not IsExists(bsPages) then
      Raise('Не удалось получить ЗАКЛАДКИ "ВИД ПРАВОВОЙ ИНФОРМАЦИИ"');
    if not SwitchToPage(bsPages, SRCH_BASE_THEME_USER_NAME) then
      Result := ErrorResult('Не удалось найти и переключиться на пользовательскую закладку: ' + SRCH_BASE_THEME_USER_NAME);
  finally
    CloseF1Shell;
    SetValueToGarantINI('F1Server Params', '-BSUserPaneEnable', '0', true);
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.15.24.1: Проверить, что при базовом поиске показывается короткий(базовый) список документов(60 для ТБ). 
    Также проверить, что в ППР строится сразу полный список.
  HLTC77.2.15.24.2: Проверить, что если документов найдено меньше заданной величины, 
    то ссылки «полный список документов по запросу» и аналогичной опции в кнопке «Работа со списком» не будет.
  HLTC77.2.15.24.3: При нажатии на ссылку в конце списка «полный список документов по запросу» производится повторный поиск и выдаются все документы по этому запросу.
    При этом сохраняется позиционирование на выделенный документ.
  HLTC77.2.15.24.7.3: Проверить, что в полном списке (нет внизу ссылки «Построить полный список по запросу»), информация в статусной строке отображается по-старому:
    HLTC77.2.15.24.7.3.2: Для внутренней ТБ: «Документ N из M, выделено: К, релевантность L»
}
function HLTC77_2_15_24_1_Execute(var  current_state: OleVariant): OleVariant;
const
  STATUS_STR1 = 'Документ 60 из*, выделено 1, релевантность*';
  CONTEXT1 = 'а';
  CONTEXT2 = 'секрет 1 2';
  NUM_SHORT = '60';
  NUM_BIG = '1000';
var
  s;   
begin
try
  Result := true;
    
  if not BaseSearch(nil, CONTEXT1) then
    Raise('Не получилось выполнить поиск контекста "' + CONTEXT1 + '"');
  if not FindInList( [([FL_NUMBER_BIG, NUM_SHORT])] ) then
    Result := ErrorResult('Количество документов в коротком списке не равно ' + NUM_SHORT);
  GetList.Keys('[End][Down]');
  OpenDocFromList('', nil, 'How:=keyboard');
  if GetCurrentElementNumberInList(GetList) <> NUM_SHORT then
    Result := ErrorResult('Не сохраняется позиция в списке после нажатия в списке на "Полный список документов по запросу"');
  if not FindInList( [([FL_NUMBER_BIG_MORE, NUM_BIG])] ) then
    Result := ErrorResult('Количество документов в большом списке не больше ' + NUM_BIG);
  s := common.GetWindowText(GetFromMainWindow('СТАТУСБАР'));
  if not StringCompare(STATUS_STR1, s) then
    Result := ErrorResult('Отличается содержимое статусной строки: "' + s + '", ожидалось "' + STATUS_STR1 + '"');

  if not BaseSearch(nil, CONTEXT2) then
    Raise('Не получилось выполнить поиск контекста "' + CONTEXT2 + '"');
  GetList.Keys('[End][Down]');
  OpenDocFromList('', nil, 'How:=keyboard');
  Delay(Options.Run.Timeout div 5);
  if not IsExists(GetEditor) then
    Raise('Видимо для списка менее ' + NUM_SHORT + ' документов существует ссылка "Полный список документов по запросу"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenuWithCloseTabsExceptOne;  
end;

{
  HLTC77.2.15.24.4: Проверить, что в базовом списке доступны те же операции, что и для обычного списка: копирование, сортировка, сохранение, удаление элементов и т.д.). 
    При этом при копировании сниппеты должны сохраняться.
}
function HLTC77_2_15_24_4_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = '16';
  LISTPATH1 = 'Список_HLTC77_2_15_24_4';
var
  list1;
begin
try
  Result := true;
  
  if not BaseSearch(nil, CONTEXT1) then
    Raise('Не получилось выполнить поиск контекста "' + CONTEXT1 + '"');
  list1 := GetElementsFromTree(GetList, false);
  if not SimpleSaveToFolders(LISTPATH1) then
  	Raise('Не удалось сохранить список "' + LISTPATH1 + '" или список с таким именем уже существует');

  PressKeyWithCheck(['[Home][Down]', '![End]'], GetList);
  if CopyToClipboard(GetList, '', 'IsCleanClipboard:=false') = '' then
    Raise('Не получилось скопировать выделенные документы в буфер обмена');
	DelWithConfirm;
  if CountElementInList(GetList) > 1 then
    Raise('Видимо документы не удалились из списка, количество больше 1ого');
    
  if not OpenObjectFromFolder(MY_DOCS_PATH + LISTPATH1) then
    Raise('Не получилось открыть сохраненный список: "' + LISTPATH1 + '"');
  if not CompareArray(list1, GetElementsFromTree(GetList, false)) then
    Result := ErrorResult('Список, построенный через БП, после удаления и вставки скопированных документов отличается от начального');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  DeleteAllInMyDoc;
  GotoMainMenu;
end;

{
  HLTC77.2.15.24.5:
    Проверить, что для базового списка показываются сниппеты(вхождение с именем блока, содержащего самый релевантный фрагмент).

    1. В ТБ ввести контекст: сниппет
    Появится предупреждение
    2. Нажать "Продолжить поиск"
    Должны получить следующий список(именно с таким набором вхождений):
      Picture 3287. Слово "Сниппет" в нулевом параграфе. Поэтому сниппет не строится.
      Picture 3288. Слово "сниппет" находится в преформатированном параграфе. Поэтому сниппет не строится.
      Picture 3289. Слово "сниппет" находится в коммментарии юристов. Поэтому сниппет не строится.
      Picture 3290. Слово "сниппет" находится в версионном коммментарии. Поэтому сниппет не строится.
      Picture 3291. Слово "сниппет" в середине короткого параграфа. Проверка того, что границы параграфа являются безусловными границами фрагмента для сниппета.
          Начало короткого параграфа, в котором есть слово "сниппет". А тут у этого параграфа - окончание.
      Picture 3292 Слово "сниппет" в начале короткого параграфа. Проверка того, что границы параграфа являются безусловными границами фрагмента для сниппета.
          Сниппет в начале короткого параграфа. А тут у этого параграфа - окончание.
      Picture 3293 Слово "сниппет" в конце короткого параграфа. Проверка того, что границы параграфа являются безусловными границами фрагмента для сниппета.
          Начало короткого параграфа, в конце которого есть слово сниппет
      Picture 3294 Сниппет в большом параграфе. Больше 100 знаков после слова и больше 600 - перед словом.
          08 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77 80 83 86 89 92 95 и500 2 05 08 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77 80 83 86 89 92 95 и400 2 05 08 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77 80 83 86 89 92 95 и300 2 05 08 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77 80 83 86 89 92 95 и200 02 05 08 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77 80 83 86 89 92 95 и100 СНИППЕТ 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 93 96 100 Конец
      Picture 3295 Сниппет в большом параграфе. Больше 200 знаков перед словом. Больше 500 - после слова.
          Начало 02 05 08 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77 80 83 86 89 92 95 и100 2 05 08 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77 80 83 86 89 92 95 и200 СНИППЕТ 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 93 96 100 03 107 111 115 119 123 127 131 135 139 143 147 151 155 159 163 167 171 175 179 183 187 191 195 199 203 207 211 215 219 223 227 231 235 239 243 247 251 255 259 263 267 271 275 279 283 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 351 355 359 363 367 371 375 379 383 387 391 395
      Picture 3313. Слово "Сниппет" в первом параграфе. Поэтому сниппет не строится.
      Picture 3314. Слово "Сниппет" во втором параграфе. Поэтому сниппет не строится.
      Picture 3315. Слово "Сниппет" в третьем параграфе. Поэтому сниппет не строится.
      Picture 3316. Слово "Сниппет" в четвертом параграфе. Поэтому сниппет не строится.

    Если что-то не совпадает - повод для разбирательств.

  HLTC77.2.15.24.6: Проверить, что базовый список со снипеттами по умолчанию развернут.
}
function HLTC77_2_15_24_5_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'сниппет';
var
  docsName;
begin
try
  Result := true;
  
  docsName := 
    [
      ([FL_EXISTS, 'Picture 3291. Слово "сниппет"*' + EndOfLine + 'Начало*окончание.']), // HLTC77.2.15.24.6

      ([FL_EXISTS, 'Picture 3287*']),
      ([FL_EXISTS, 'Picture 3288*']),
      ([FL_EXISTS, 'Picture 3289*']),
      ([FL_EXISTS, 'Picture 3290*']),
      ([FL_EXISTS, 'Picture 3291*Начало*окончание.']),
      ([FL_EXISTS, 'Picture 3292*Сниппет*окончание.']),
      ([FL_EXISTS, 'Picture 3293*Начало*сниппет']),
      ([FL_EXISTS, 'Picture 3294*08*Конец']),
      ([FL_EXISTS, 'Picture 3295*Начало*395']),
      ([FL_EXISTS, 'Picture 3313*']),      
      ([FL_EXISTS, 'Picture 3314*']),      
      ([FL_EXISTS, 'Picture 3315*']),      
      ([FL_EXISTS, 'Picture 3316*'])      
    ];
  if not BaseSearch(nil, CONTEXT1) then
    Raise('Не получилось выполнить поиск контекста "' + CONTEXT1 + '"');
  if not FindInList(docsName) then
    Result := ErrorResult('Список со снипеттами отличается от эталона (не развернут после поиска, либо изменилось количество найденных документов');
except                                                                             
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GotoMainMenu;
end;

{
  HLTC77.2.15.24.7.1: Если список содержит более 100 документов: Документ N из M, выделено: К [, релевантность Z]; (полный список по запросу: более 100 документов).
    Например, запрос "президент Путин".   
  HLTC77.2.15.24.7.2: Если полный список содержит менее 100 документов: Документ N из M, выделено: К [, релевантность Z]; (полный список по запросу: около 100 документов).
    Например, запрос "101 201".  
}
function HLTC77_2_15_24_7_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'президент Путин';
  CONTEXT2 = '101 201';
  STATUS_STR1 = 'Документ 1 из*, выделено 1, релевантность*; (полный список по запросу: более 100 документов)';
  STATUS_STR2 = 'Документ 1 из*, выделено 1, релевантность*; (полный список по запросу: около 100 документов)';
var
  s: string;  
begin
try
  Result := true;
  
  if not BaseSearch(nil, CONTEXT1) then
    Raise('Не получилось выполнить поиск контекста "' + CONTEXT1 + '"');
  if not IsExists(GetList) then
    Raise('Список после поиска БП не найден');
  s := common.GetWindowText(GetFromMainWindow('СТАТУСБАР'));
  if not StringCompare(STATUS_STR1, s) then
    Result := ErrorResult('Отличается содержимое статусной строки: "' + s + '", ожидалось "' + STATUS_STR1 + '"');
    
  if not BaseSearch(nil, CONTEXT2) then
    Raise('Не получилось выполнить поиск контекста "' + CONTEXT2 + '"');
  if not IsExists(GetList) then
    Raise('Список после поиска БП не найден');
  s := common.GetWindowText(GetFromMainWindow('СТАТУСБАР'));
  if not StringCompare(STATUS_STR2, s) then
    Result := ErrorResult('Отличается содержимое статусной строки: "' + s + '", ожидалось "' + STATUS_STR2 + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GotoMainMenu;
end;

{
  HLTC77.2.15.24.8: Проверить, что фильтрация, сортировка и уточнение выполняются всегда для полного списка. 
    Также проверить, что после операции уточнения списка в базовый список можно вернуться по истории.
}
function HLTC77_2_15_24_8_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT1 = 'конституция';
  CONTEXT2 = 'кодекс';
  NUM = 250;
var
  lastNum;
begin
try
  Result := true;
  
  if not BaseSearch(nil, CONTEXT1) then
    Raise('Не получилось выполнить поиск контекста "' + CONTEXT1 + '"');
  if not SetSortParams(SORT_BY_PUBLICATION_DATE, SORT_ASCENDING) then
  	Raise('Невозможно включить нужный тип сортировки');
  if not FindInList( [ ([FL_NUMBER_BIG_MORE,  IntToStr(NUM)]) ] ) then
    Result := ErrorResult('Количество документов после сортировки видимо не соответствует большому списку');
  lastNum := CountElementInList(GetList); 
        
  if not BaseSearchInList(GetList, CONTEXT2, 'searchType:=' + SRCH_IN_LIST_REFINE_LIST) then
    Raise('Не получилось Уточнить список!');
  if not GoByHistory('НАЗАД') then
    Raise('Не получилось вернуться назад по истории');
  if lastNum <> CountElementInList(GetList) then
    Raise('Количество документов отличается после возврата по истории назад. Стало: ' + IntToStr(CountElementInList(GetList)) + ', должно быть: ' + IntToStr(lastNum));
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GotoMainMenu;
end;

{
  HLTC77.2.15.26 Ранее введенный контекст
    HLTC77.2.15.26.1: При нажатии на стрелку в правой части строки поиска, появляется выпадающий список с ранее введёнными контекстами (по которым проводился поиск).
    HLTC77.2.15.26.2: По выпадающему списку можно перемещаться с помощью стрелок вверх/вниз, но подсвеченный текст не будет подставляться в строку поиска.
}
function HLTC77_2_15_26_1_Execute(var  current_state: OleVariant): OleVariant;
const
  LOGINNAME = 'HLTC77_2_15_26_1';
var
  i, w, contexts;  
begin
try
  Result := true;

  if not RestartF1Shell(3, Options.Run.Timeout div 5, LOGINNAME, LOGINNAME) then
    Raise('Не получилось перезапустить оболочку под пользователем "' + LOGINNAME + '"');
    
  contexts := ['1', 'президент 1 2 3', '3'];
  for i := VarArrayLowBound(contexts, 1) to VarArrayHighBound(contexts, 1) do
    if not BaseSearch(nil, contexts[i]) then
      Raise('Не получилось выполнить поиск контекста "' + contexts[i] + '"');
  if not GoToBaseSearch then
    Raise('Не получилось открыть БП');    

  if not ClearContextInBaseSearch then
    Raise('Не удалось очистить поле ввода БП');

  w := GetFromBaseSearch('КНОПКА "ИСТОРИЯ ПОИСКА"');
  if not IsExists(w) then
    Raise('Не удалось найти КНОПКА "ИСТОРИЯ ПОИСКА"');
  if not ClickOnVgSceneObject(w, 'IsClickByAbsXY:=false') then
    Raise('Не получилось кликнуть по КНОПКА "ИСТОРИЯ ПОИСКА"');
  w := GetFromShell('ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП');
  if not IsExists(w) then
    Raise('Не найден ВЫПАДАЮЩИЙ СПИСОК КОМБОБОКСА БП, отображающий историю запросов поиска');
  if not Position_By_Text(w, contexts[1]) then
    Raise('Не получилось выбрать контекст "' + contexts[1] + '"');

  w.Keys('[Up][Up][Up][Up][Down][Down][Down][Down]');
  if GetValueFromBaseSearch <> '' then
    Raise('Поле ввода БП непустое, видимо подставилось значение из истории поиска: "' + GetValueFromBaseSearch + '"');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GotoMainMenu;
end;

{
  HLTC77.2.15.28.1: В ОМ
    1. Ставим фокус на кнопку вида информации «Все документы»
    2. Жмём Tab
    Порядок переключения должен быть следующим:
    - Кнопки выбора видов информации, включая «Ещё»
    - Строка поиска
    - Кнопка «Найти»
    - Нижеследующие элементы ОМ
}
function HLTC77_2_15_28_1_Execute(var  current_state: OleVariant): OleVariant;
const
  MAX_KIDS_COUNT = 16;
var
  i, w;
begin
try
  Result := true;

  if not GotoMainMenu then
    Raise('Не получилось ОМ');
  if not ClearContextInBaseSearch then
    Raise('Не получилось очистить поле ввода БП');
  if not SetKindInBaseSearch(SRCH_BASE_THEME_ALL_DOCS, 'IsSetByClick:=true') then 
    Raise('Не получилось кликнуть по кнопке "' + SRCH_BASE_THEME_ALL_DOCS + '" в БП');
  
  // фокус до кнопки "Еще"
  for i := 1 to MAX_KIDS_COUNT do
  begin
    if i = MAX_KIDS_COUNT then
      Raise('Перебрали максимальное количество видов информации, но не дождались фокуса на КНОПКЕ-ССЫЛКЕ "ЕЩЕ"!');    
    Sys.Keys('[Tab]' + keypause);
    w := GetFromBaseSearch('КНОПКА-ССЫЛКА "ЕЩЕ"'); 
    if not IsExists(w) then
      Raise('КНОПКА-ССЫЛКА "ЕЩЕ" не найдена');
    if w.IsFocused then break;
  end;         
  
  // фокус до поля ввода
  Sys.Keys('[Tab]' + keypause);
  w := GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"');
  if not IsExists(w) then
    Raise('Не найдено поле ввода контекста БП');
  if not w.Focused then
    Raise('Фокус не перешел в поле ввода БП');   
  
  // фокус до кнопки Найти
  Sys.Keys('[Tab]' + keypause);
  w := GetFromBaseSearch('КНОПКА "НАЙТИ"');
  if not IsExists(w) then
    Raise('Не найдена КНОПКА "НАЙТИ" на панели БП');
  if not w.IsFocused then
    Raise('Фокус не перешел к КНОПКЕ "НАЙТИ" на панели БП');   

  // фокус до списка спавок
  Sys.Keys('[Tab][Tab][Tab][Tab][Tab]' + keypause);  
  w := GetFromMainMenu('СПИСОК: БИЗНЕС СПРАВКИ');
  if not IsExists(w) then
    Raise('Не найден СПИСОК: БИЗНЕС СПРАВКИ');
  if not w.Focused then
    Raise('Фокус не перешел к СПИСКУ: БИЗНЕС СПРАВКИ');   
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
end;

{
  HLTC77.2.15.28.2: В списке/документе
    1. Ставим фокус на кнопку вида информации «Все документы»
    (в случае с документом, область поиска выставить «Везде», иначе невозможно переключать виды информации)

    2. Жмём Tab
    Порядок переключения должен быть следующим:
    - Кнопки выбора видов информации, включая «Ещё»
    - Список-переключатель области поиска
    - Строка поиска
    - Кнопка «Найти»
    - Элемент списка/документ
}
function HLTC77_2_15_28_2_Execute(var  current_state: OleVariant): OleVariant;
const
  MAX_KIDS_COUNT = 16;
var
  i, j, w, str;
begin
try
  Result := true;
  
  for j := 1 to 2 do 
  begin
    case j of
      1: 
        if not IsExists(GetListOfAllDocuments) then
          Raise('Не получилось построить список всех документов!');
      2:
        if not OpenDocByNumber(10003000) then
          Raise('Не получилось открыть "Конституцию РФ"');
    end; 
    if not GoToBaseSearch then
      Raise('Не получилось открыть панель БП');

    if not ClearContextInBaseSearch then
      Raise('Не получилось очистить поле ввода БП');
    if not SetKindInBaseSearch(SRCH_BASE_THEME_ALL_DOCS, 'IsSetByClick:=true') then 
      Raise('Не получилось кликнуть по кнопке "' + SRCH_BASE_THEME_ALL_DOCS + '" в БП');
  
    // фокус до кнопки "Еще"
    for i := 1 to MAX_KIDS_COUNT do
    begin
      if i = MAX_KIDS_COUNT then
        Raise('Перебрали максимальное количество видов информации, но не дождались фокуса на КНОПКЕ-ССЫЛКЕ "ЕЩЕ"!');    
      Sys.Keys('[Tab]' + keypause);
      w := GetFromBaseSearch('КНОПКА-ССЫЛКА "ЕЩЕ"'); 
      if not IsExists(w) then
        Raise('КНОПКА-ССЫЛКА "ЕЩЕ" не найдена');
      if w.IsFocused then break;
    end;         
  
    // фокус до поля ввода
    Sys.Keys('[Tab]' + keypause);
    w := GetFromBaseSearch('КОМБОБОКС "ОБЛАСТЬ ПОИСКА"');
    if not IsExists(w) then
      Raise('Не найден КОМБОБОКС "ОБЛАСТЬ ПОИСКА"');
    if not w.IsFocused then
      Raise('Фокус не перешел в поле ввода БП');   

    // фокус до поля ввода
    Sys.Keys('[Tab]' + keypause);
    w := GetFromBaseSearch('КОМБОБОКС "БАЗОВЫЙ ПОИСК"');
    if not IsExists(w) then
      Raise('Не найдено поле ввода контекста БП');
    if not w.Focused then
      Raise('Фокус не перешел в поле ввода БП');   
  
    // фокус до кнопки Найти
    Sys.Keys('[Tab]' + keypause);
    w := GetFromBaseSearch('КНОПКА "НАЙТИ"');
    if not IsExists(w) then
      Raise('Не найдена КНОПКА "НАЙТИ" на панели БП');
    if not w.IsFocused then
      Raise('Фокус не перешел к КНОПКЕ "НАЙТИ" на панели БП');   

    // фокус до списка документов / текста документа
    Sys.Keys('[Tab]' + keypause);
    case j of
      1: 
      begin
        w := GetList;
        str := 'Список документов'; 
      end; 
      2:
      begin
        w := GetEditor;
        str := 'Текст документа'; 
      end; 
    end; 
    if not IsExists(w) then
      Raise('Не найден ' + str);
    if not w.Focused then
      Raise('Фокус не перешел в ' + str);
  end;   
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GotoMainMenu;
end;

{
  HLTC77.2.1.16.6: Правовой календарь
    HLTC77.2.1.16.6.2: Вступление в силу
    HLTC77.2.1.16.6.3: Утрата силы
    HLTC77.2.1.16.6.4: Внесение изменений
}
function  HLTC77_2_1_16_6_2_Execute(var  current_state: OleVariant): OleVariant;
var
  i, cardData, groupData, queryCard;
begin
try
  Result := false;
  cardData :=
    [
    	CARD_PPR, ([([
    	FD_LC_IN_DATE_FROM, ([
    		'01.01.1990']) ]),([
    	FD_LC_IN_DATE_TO, ([
    		'02.03.2012']) ]),([
    	FD_LC_ABOLISHED_DATE_FROM, ([
    		'01.01.1990']) ]),([
    	FD_LC_ABOLISHED_DATE_TO, ([
    		'04.05.2012']) ]),([
    	FD_LC_CHANGED_DATE_FROM, ([
    		'01.01.1990']) ]),([
    	FD_LC_CHANGED_DATE_TO, ([
    		'06.07.2012']) ]) ]) 
    ];
  Result := FillPPRCard(cardData);
  if not Result then 
    Raise('Не получилось заполнить поля Правового календаря в КЗ ППР');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.1.1: Раскрыть все группы поисковых атрибутов, выбрать значения. 
    Проверить, что те группы, в которых были выбраны значения нельзя свернуть.
  HLTC77.2.1.16: Проверить, что в карточке запроса остались следующие группы реквизитов и их названия точно соответствуют приведённым ниже:
  HLTC77.2.1.16.1: Основные реквизиты документа:
  HLTC77.2.1.16.2: Реквизиты регистрации в Минюсте:
  HLTC77.2.1.16.4: Расширенные реквизиты документа:
  HLTC77.2.1.16.5: Контекстный поиск
}
function  HLTC77_2_1_16_1_Execute(var  current_state: OleVariant): OleVariant;
var
  i, cardData, groupData, queryCard;
begin
try
  Result := false;
  cardData :=
    [
    	CARD_PPR, ([([
    	FD_WORDS_IN_CAPTION, ([
    		'текст']) ]),([
    	FD_TYPE, ([
    		'[ИЛИ]Акт']) ]),([
    	FD_MU_REG_STATUS, ([
    		'Зарегистрированные']) ]),([
    	FD_MEANING, ([
    		'Индивидуальные']) ]),([
    	FD_INOPERATIVE_EDITION, ([
    		'Нет']) ]) ]) 
    ];
  groupData :=
    ['Основные реквизиты документа',
     'Контекстный поиск',
     'Расширенные реквизиты документа',
     'Реквизиты регистрации в Минюсте'
    ];

  if not FillPPRCard(cardData) then 
    Raise('Не получилось заполнить КЗ ППР');
    
  queryCard := GetFromPPR('КАРТОЧКА ЗАПРОСА');
  for i := VarArrayLowBound(groupData, 1) to VarArrayHighBound(groupData, 1) do
  begin
    if not PositionInQueryCard(queryCard, groupData[i], [CT_GROUP]) then
      Raise('Не получилось спозиционироваться на группе "' + groupData[i] + '" в КЗ ППР');
    queryCard.Keys(GRAY_MINUS);  
  end;

  Result := true;  
  for i := VarArrayLowBound(groupData, 1) to VarArrayHighBound(groupData, 1) do
  begin
    
    if not PositionInQueryCard(queryCard, groupData[i], [CT_GROUP]) then
      Raise('Не получилось спозиционироваться на группе "' + groupData[i] + '" в КЗ ППР');
    
    queryCard.Keys('[Tab]');

    if (
        (GetControlType(queryCard.selection) = CT_GROUP) or
        ((GetControlType(queryCard.selection) <> CT_COMBOBOX) and (GetControlType(queryCard.selection) <> CT_LABEL))
    ) then 
      Result := ErrorResult('Не пустая группа реквизитов "' + groupData[i] + '" видимо свернулась по клавише "Num-"');
  end;
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;
 
{
HLTC77.2.2.2.10: Проверить фильтрацию двух и более слов:
  HLTC77.2.2.2.10.1: Ввести «транспорт железнодорожный». Должны остаться 2 свернутых элемента(«железнодорожный транспорт» и «транспорт железнодорожный»).
}
function  HLTC77_2_2_2_10_1_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'транспорт железнодорожный';
var
	listArray, w;
  res;
begin
try
  listArray :=
    [
     'Железнодорожный транспорт',
     'Транспорт железнодорожный'
    ];
  if not GotoPPS then
    Raise('Не получилось открыть ППС');

  w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPS('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));  
  if not IsExists(w) then
    Raise('Поле контекстного фильтра не найдено');
  w.Keys('[Home]![End]' + CONTEXT);

  res := GetElementsFromTree(GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ'));
  Result := CompareArray(res, listArray);
  if not Result then
    Log.Error('Контекстная фильтрация ППС двух слов работает неправильно!');
except
  Result := False;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;

{
  HLTC77.2.2.2.10.2: Ввести «формы договора аренды». Должен остаться только «требования к форме договора аренды» и его родитель.
}
function  HLTC77_2_2_2_10_2_Execute(var  current_state: OleVariant): OleVariant;
const
  CONTEXT = 'формы договора аренды';
var
	w, listArray1, listArray2, res;
begin
try
  Result := true;
  listArray1 := ['Договоры аренды. Формы'];
  listArray2 := ['Требования к форме договора аренды'];

  if not GotoPPS then
    Raise('Не получилось открыть ППС');

  w := GetFromContextFilterForm('КОМБОБОКС "КОНТЕКСТНЫЙ ФИЛЬТР"', GetFromPPS('ФОРМА "КОНТЕКСТНЫЙ ФИЛЬТР"'));
  if not IsExists(w) then
    Raise('Поле контекстного фильтра не найдено');
  w.SetFocus;
  Sys.Keys('[Home]![End]' + CONTEXT);

  res := GetElementsFromTree(GetFromPPS('СИТУАЦИИ ОСНОВНОГО УРОВНЯ'));
  if not CompareArray(res, listArray1) then
    Result := ErrorResult('Контекстная фильтрация ППС двух слов работает неправильно, отличие в ситуациях основного уровня !');
  res := GetElementsFromTree(GetFromPPS('СИТУАЦИИ ДОПОЛНИТЕЛЬНОГО УРОВНЯ'));
  if not CompareArray(res, listArray2) then
    Result := ErrorResult('Контекстная фильтрация ППС двух слов работает неправильно, отличие в ситуациях дополнительного уровня!');
except
  Result := false;
  Log.Error(ExceptionMessage, '' ,  pmNormal, GetLogAttr('EXCEPTION'));
end;
  GoToMainMenu;
end;


////////////////////////////////////////////////////////////////////////////////
procedure RunMyTests77;
var currText, i, p, w : oleVariant;
fileKillAfterWaitName;
begin
//  HLTC77_1_2_1_1_Execute(p);
//  HLTC77_1_2_2_Execute(p);
//  HLTC77_1_2_3_Execute(p);
//  HLTC77_1_2_4_1_Execute(p);
//  HLTC77_1_6_1_Execute(p);
//  HLTC77_1_6_2_Execute(p);
//  HLTC77_1_6_3_Execute(p);
//  HLTC77_1_1_1_Execute(p);  
//  HLTC77_1_1_2_Execute(p);
//  HLTC77_1_1_3_Execute(p);
//  HLTC77_1_1_4_1_Execute(p);
//  HLTC77_1_1_5_Execute(p);  
//  HLTC77_1_1_14_Execute(p);
//  HLTC77_1_1_16_Execute(p);
//  HLTC77_1_1_17_Execute(p);
//  HLTC77_1_1_18_Execute(p);
//  HLTC77_1_1_19_Execute(p);
//  HLTC77_1_1_20_Execute(p);
//  HLTC77_1_1_21_Execute(p);
//  HLTC77_1_1_22_Execute(p);
//  HLTC77_1_1_23_Execute(p);

//  HLTC77_1_1_24_1_1_Execute(p);
//  HLTC77_1_1_24_2_1_Execute(p);
//  HLTC77_1_1_24_3_1_Execute(p);  
//  HLTC77_1_1_24_4_Execute(p);
//  HLTC77_1_1_24_5_Execute(p);
//  HLTC77_1_1_24_6_1_Execute(p);
//  HLTC77_1_1_24_7_1_Execute(p);
//  HLTC77_1_1_24_8_1_1_Execute(p);
//  HLTC77_1_1_24_8_2_Execute(p);
//  HLTC77_1_1_24_8_3_Execute(p);
//  HLTC77_1_1_24_8_4_Execute(p);
//  HLTC77_1_1_24_8_5_Execute(p);
//  HLTC77_1_1_24_9_1_Execute(p);
//  HLTC77_1_1_24_10_1_Execute(p);  
//  HLTC77_1_1_24_12_Execute(p);
//  HLTC77_1_1_24_13_Execute(p);  
//  HLTC77_1_1_24_14_Execute(p);
//  HLTC77_1_1_24_15_Execute(p);  
//  HLTC77_1_1_24_16_1_Execute(p);  
//  HLTC77_1_1_24_17_1_Execute(p);
//  HLTC77_1_1_24_18_Execute(p);
//  HLTC77_1_1_24_21_Execute(p);
//  HLTC77_1_1_24_22_1_Execute(p);
//  HLTC77_1_1_24_22_3_Execute(p);
//  HLTC77_1_1_24_22_4_Execute(p);
//  HLTC77_1_1_24_22_5_Execute(p);
//  HLTC77_1_1_24_22_6_Execute(p);
//  HLTC77_1_1_24_23_1_Execute(p);
//  HLTC77_1_1_24_24_1_Execute(p);
//  HLTC77_1_1_24_24_2_Execute(p);
//  HLTC77_1_1_24_24_3_Execute(p);
//  HLTC77_1_1_24_24_4_Execute(p);
//  HLTC77_1_1_24_24_5_Execute(p);
//  HLTC77_1_1_24_24_6_Execute(p);
//  HLTC77_1_1_24_24_7_Execute(p);
//  HLTC77_1_1_24_24_8_Execute(p);
//  HLTC77_1_1_24_24_9_Execute(p);
//  HLTC77_1_1_24_24_10_Execute(p);
//  HLTC77_1_1_24_24_12_Execute(p);
//  HLTC77_1_1_24_24_13_Execute(p);
//  HLTC77_1_1_24_24_14_Execute(p);
//  HLTC77_1_1_24_23_2_Execute(p);
//  HLTC77_1_1_24_23_3_Execute(p);
//  HLTC77_1_1_24_25_1_Execute(p); 
//  HLTC77_1_1_24_25_2_Execute(p);
//  HLTC77_1_1_24_25_3_Execute(p);
//  HLTC77_1_1_24_25_4_Execute(p);
//  HLTC77_1_1_24_25_5_Execute(p); 
//  HLTC77_1_1_24_25_6_Execute(p);
//  HLTC77_1_1_24_25_7_Execute(p);
//  HLTC77_1_1_24_25_8_Execute(p);
//  HLTC77_1_1_24_25_9_Execute(p);
//  HLTC77_1_1_24_25_10_Execute(p);
//  HLTC77_1_1_24_25_11_Execute(p);
//  HLTC77_1_1_24_25_12_Execute(p);
//  HLTC77_1_1_24_25_13_Execute(p);
//  HLTC77_1_1_24_25_14_Execute(p);
//  HLTC77_1_1_24_25_15_Execute(p);
//  HLTC77_1_1_24_25_16_Execute(p);
//  HLTC77_1_1_24_25_17_Execute(p);
//  HLTC77_1_1_24_25_18_Execute(p); 
//  HLTC77_1_1_24_25_19_Execute(p);  
//  HLTC77_1_1_24_25_21_1_Execute(p);
//  HLTC77_1_1_24_25_21_2_Execute(p);
//  HLTC77_1_1_24_25_22_1_Execute(p);
//  HLTC77_1_1_24_26_1_Execute(p);
//  HLTC77_1_1_24_26_3_Execute(p);
//  HLTC77_1_1_24_26_4_Execute(p);
//  HLTC77_1_1_24_26_5_Execute(p);
//  HLTC77_1_1_24_26_6_Execute(p);
//  HLTC77_1_1_24_26_7_Execute(p);
//  HLTC77_1_1_24_26_8_Execute(p);
//  HLTC77_1_1_24_26_9_Execute(p);
//  HLTC77_1_1_24_26_10_Execute(p);
//  HLTC77_1_1_24_28_3_5_Execute(p);
//  HLTC77_1_1_24_28_8_1_Execute(p);
//  HLTC77_1_1_24_28_8_2_Execute(p);
//  HLTC77_1_1_24_28_9_1_Execute(p);
//  HLTC77_1_1_24_28_9_2_Execute(p);
//  HLTC77_1_1_24_30_1_Execute(p);
//  HLTC77_1_1_24_30_2_Execute(p);
//  HLTC77_1_1_24_30_3_Execute(p);
//  HLTC77_1_1_24_30_4_Execute(p);
//  HLTC77_1_1_24_30_5_Execute(p);
//  HLTC77_1_1_24_30_6_Execute(p);
//  HLTC77_1_1_24_30_7_Execute(p);
//  HLTC77_1_1_24_30_9_Execute(p);
//  HLTC77_1_1_24_30_10_Execute(p);
//  HLTC77_1_1_24_30_11_Execute(p);
//  HLTC77_1_1_24_30_12_Execute(p);
//  HLTC77_1_1_24_30_13_Execute(p);
//  HLTC77_1_1_24_30_14_1_Execute(p);
//  HLTC77_1_1_24_30_14_2_Execute(p);
//  HLTC77_1_1_24_30_14_3_Execute(p);
//  HLTC77_1_1_24_30_14_4_Execute(p);
//  HLTC77_1_1_24_30_14_5_Execute(p);
//  HLTC77_1_1_24_30_14_6_Execute(p);
//  HLTC77_1_1_24_30_15_Execute(p);
//  HLTC77_1_1_24_30_16_Execute(p);
//  HLTC77_1_1_24_30_17_Execute(p);
//  HLTC77_1_1_24_30_18_Execute(p);
//  HLTC77_1_1_24_30_19_Execute(p);    
//  HLTC77_1_1_24_31_2_Execute(p);
//  HLTC77_1_1_24_31_3_Execute(p);
//  HLTC77_1_1_24_32_1_Execute(p);
//  HLTC77_1_1_24_32_2_Execute(p);
//  HLTC77_1_1_24_33_1_Execute(p);
//  HLTC77_1_1_24_33_2_Execute(p);
//  HLTC77_1_1_24_33_3_Execute(p);
//  HLTC77_1_1_24_34_1_Execute(p);
//  HLTC77_1_1_24_34_2_Execute(p);
//  HLTC77_1_1_24_35_1_Execute(p);
//  HLTC77_1_1_24_35_2_Execute(p);
//  HLTC77_1_1_24_35_3_Execute(p);
//  HLTC77_1_1_24_35_4_Execute(p);
//  HLTC77_1_1_24_35_5_Execute(p);
//  HLTC77_1_1_24_35_6_Execute(p);
//  HLTC77_1_1_24_35_7_Execute(p);
//  HLTC77_1_1_24_36_1_Execute(p);
//  HLTC77_1_1_24_36_2_Execute(p);
//  HLTC77_1_1_24_37_1_Execute(p);
//  HLTC77_1_1_24_37_2_Execute(p);
//  HLTC77_1_1_24_37_3_Execute(p);
//  HLTC77_1_1_24_39_1_Execute(p);
//  HLTC77_1_1_24_40_Execute(p);
//  HLTC77_1_1_24_41_Execute(p);
//  HLTC77_1_1_24_44_Execute(p);
//  HLTC77_1_1_24_45_1_Execute(p);
//  HLTC77_1_1_24_46_1_Execute(p);
//  HLTC77_1_1_24_46_2_Execute(p);
//  HLTC77_1_1_24_46_3_Execute(p);
//  HLTC77_1_1_24_48_1_Execute(p);
//  HLTC77_1_1_24_48_2_Execute(p);
//  HLTC77_1_1_24_47_1_Execute(p);
//  HLTC77_1_1_24_47_2_Execute(p);
//  HLTC77_1_1_24_49_Execute(p);
//  HLTC77_1_1_24_52_3_Execute(p);
//  HLTC77_1_1_26_Execute(p);
//  HLTC77_1_1_27_1_Execute(p);
//  HLTC77_1_1_27_2_Execute(p);
//  HLTC77_1_1_27_3_1_Execute(p);
//  HLTC77_1_1_27_3_2_Execute(p);
//  HLTC77_1_1_27_3_3_Execute(p);
//  HLTC77_1_1_27_3_4_Execute(p);
//  HLTC77_1_1_27_4_Execute(p);
//  HLTC77_1_1_28_Execute(p);
//  HLTC77_1_1_29_1_Execute(p);

//Filters
//  HLTC77_1_3_1_1_Execute(p);
//  HLTC77_1_3_2_1_Execute(p);  
//  HLTC77_1_3_3_1_Execute(p);

//  HLTC77_1_10_1_1_Execute(p);  
//  HLTC77_1_10_1_2_Execute(p);
//  HLTC77_1_10_1_3_Execute(p);
//  HLTC77_1_10_2_Execute(p);
//  HLTC77_1_5_1_1_Execute(p);
//  HLTC77_1_5_2_1_Execute(p);
//  HLTC77_1_5_3_1_Execute(p);  
//  HLTC77_1_5_4_Execute(p);
//  HLTC77_2_1_2_1_Execute(p);
//  HLTC77_2_1_2_2_Execute(p);  
//  HLTC77_2_1_2_3_Execute(p);    
//  HLTC77_2_1_2_4_Execute(p);
//  HLTC77_2_1_2_5_Execute(p);
//  HLTC77_2_1_2_6_Execute(p);
//  HLTC77_2_1_2_7_Execute(p);
//  HLTC77_2_1_2_8_Execute(p);  
//  HLTC77_2_1_2_9_Execute(p);    
//  HLTC77_2_1_2_10_Execute(p);
//  HLTC77_2_1_2_14_1_Execute(p);
//  HLTC77_2_1_2_14_2_Execute(p);  
//  HLTC77_2_1_2_14_3_Execute(p);
//  HLTC77_2_1_4_1_Execute(p);
//  HLTC77_2_1_6_Execute(p);
//  HLTC77_2_1_11_Execute(p);
//  HLTC77_2_1_4_11_Execute(p);
//  HLTC77_2_1_8_Execute(p);  
//  HLTC77_2_1_10_Execute(p);
//  HLTC77_2_1_12_1_Execute(p);
//  HLTC77_2_1_12_2_Execute(p);
//  HLTC77_2_1_13_Execute(p);
//  HLTC77_2_1_14_Execute(p);  
//  HLTC77_2_1_18_1_Execute(p);  
//  HLTC77_2_1_18_2_Execute(p);    
//  HLTC77_2_1_16_1_Execute(p);
//  HLTC77_2_1_16_5_3_Execute(p);
//  HLTC77_2_1_16_6_2_Execute(p);
//  HLTC77_2_1_17_2_7_1_Execute(p);
//  HLTC77_2_1_17_2_1_Execute(p);
//  HLTC77_2_1_17_2_2_Execute(p);
//  HLTC77_2_1_17_2_3_Execute(p);
//  HLTC77_2_1_17_2_3_3_Execute(p);
//  HLTC77_2_1_17_2_6_Execute(p);
//  HLTC77_2_1_17_1_Execute(p);
//  HLTC77_2_1_18_3_Execute(p);  
//  HLTC77_2_6_2_1_Execute(p);
//  HLTC77_2_7_Execute(p);
//  HLTC77_2_7_3_Execute(p);
//  HLTC77_2_7_6_Execute(p);
//  HLTC77_2_7_7_Execute(p);
//  HLTC77_2_7_9_Execute(p);
//  HLTC77_2_7_10_Execute(p);

//  HLTC77_2_1_21_1_Execute(p);
//  HLTC77_2_1_20_1_Execute(p);
//  HLTC77_2_1_20_6_Execute(p);
//  HLTC77_2_1_22_Execute(p);
//  HLTC77_2_1_26_Execute(p);
//  HLTC77_2_1_27_1_Execute(p);
//  HLTC77_2_1_27_2_Execute(p);
//  HLTC77_2_1_28_Execute(p);
//  HLTC77_2_1_29_Execute(p);
//  HLTC77_2_1_30_Execute(p);
//  HLTC77_2_1_31_1_5_Execute(p);
//  HLTC77_2_1_31_1_2_8_Execute(p);
//  HLTC77_2_1_32_Execute(p);
//  HLTC77_2_1_33_Execute(p);
//  HLTC77_2_1_7_Execute(p);  
//  HLTC77_2_1_25_Execute(p);
//  HLTC77_2_8_2_Execute(p);
//  HLTC77_2_8_5_Execute(p);
//  HLTC77_2_6_1_2_Execute(p);
//  HLTC77_2_2_2_7_Execute(p);
//  HLTC77_2_2_9_1_Execute(p);
//  HLTC77_2_2_10_1_Execute(p);
//  HLTC77_2_2_10_2_Execute(p);  
//  HLTC77_2_2_10_3_Execute(p);
//  HLTC77_2_2_14_Execute(p);
//  HLTC77_2_2_15_Execute(p);
//  HLTC77_2_2_1_Execute(p);
//  HLTC77_2_2_2_Execute(p);
//  HLTC77_2_2_2_10_1_Execute(p);
//  HLTC77_2_2_2_10_2_Execute(p);
//  HLTC77_2_2_4_Execute(p);
//  HLTC77_2_4_4_Execute(p);
//  HLTC77_2_4_5_Execute(p);
//  HLTC77_2_4_7_1_Execute(p);
//  HLTC77_2_4_9_Execute(p);
//  HLTC77_2_10_4_1_Execute(p);
//  HLTC77_2_10_3_1_Execute(p);
//  HLTC77_2_10_3_2_Execute(p);  
//  HLTC77_2_10_3_3_Execute(p);
//  HLTC77_2_10_4_7_Execute(p);
//  HLTC77_2_10_6_Execute(p);
//  HLTC77_2_10_7_Execute(p);
//  HLTC77_2_11_1_Execute(p);
//  HLTC77_2_11_5_Execute(p);
//  HLTC77_2_15_1_Execute(p);
//  HLTC77_2_15_3_Execute(p);
//  HLTC77_2_15_3_4_Execute(p);
//  HLTC77_2_15_3_5_1_Execute(p);
//  HLTC77_2_15_3_5_2_Execute(p);
//  HLTC77_2_15_3_5_3_Execute(p);
//  HLTC77_2_15_3_6_Execute(p);
//  HLTC77_2_15_4_1_Execute(p);
//  HLTC77_2_15_4_2_Execute(p);
//  HLTC77_2_15_4_3_Execute(p);
//  HLTC77_2_15_4_4_Execute(p);
//  HLTC77_2_15_4_5_Execute(p);
//  HLTC77_2_15_5_2_Execute(p);
//  HLTC77_2_15_5_3_Execute(p);
//  HLTC77_2_15_5_4_Execute(p);
//  HLTC77_2_15_6_Execute(p);  
//  HLTC77_2_15_6_4_Execute(p);
//  HLTC77_2_15_8_Execute(p);
//  HLTC77_2_15_9_Execute(p);
//  HLTC77_2_15_10_Execute(p);
//  HLTC77_2_15_12_Execute(p);
//  HLTC77_2_15_13_Execute(p);
//  HLTC77_2_15_14_Execute(p);
//  HLTC77_2_15_15_Execute(p);
//  HLTC77_2_15_16_Execute(p);
//  HLTC77_2_15_17_1_Execute(p);
//  HLTC77_2_15_17_2_Execute(p);
//  HLTC77_2_15_17_3_Execute(p);
//  HLTC77_2_15_19_1_Execute(p);
//  HLTC77_2_15_19_2_Execute(p);
//  HLTC77_2_15_19_3_Execute(p);
//  HLTC77_2_15_21_1_Execute(p);
//  HLTC77_2_15_21_2_Execute(p);
//  HLTC77_2_15_21_3_Execute(p);
//  HLTC77_2_15_21_4_Execute(p);
//  HLTC77_2_15_21_5_Execute(p);
//  HLTC77_2_15_21_6_Execute(p);
//  HLTC77_2_15_21_7_Execute(p);
//  HLTC77_2_15_21_8_Execute(p);
//  HLTC77_2_15_21_11_Execute(p);
//  HLTC77_2_15_22_1_Execute(p);
//  HLTC77_2_15_22_5_Execute(p);
//  HLTC77_2_15_23_Execute(p);
//  HLTC77_2_15_24_1_Execute(p);
//  HLTC77_2_15_24_4_Execute(p);
//  HLTC77_2_15_24_5_Execute(p);
//  HLTC77_2_15_24_7_Execute(p);
//  HLTC77_2_15_24_8_Execute(p);
//  HLTC77_2_15_26_1_Execute(p);
//  HLTC77_2_15_28_1_Execute(p);
//  HLTC77_2_15_28_2_Execute(p);
//  _SimpleGetCardData_;  exit;
//  Log.Message();
////////////////////////////////////////////////////////////////////////////////




  
   
  
  
  
  
  
end;