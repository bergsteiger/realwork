// =============================================================================================
// AutomatedQA SDK - Copyright (c) AutomatedQA Corp.
//
// This file is part of AutomatedQA SDK
//
// =============================================================================================
// 
// NOTE: Keep this file synchronized with tcConst.pas
//

#pragma once

// *****************************************************************************
//
//  Project node identifiers.
//

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Fake                  = { 0xC7DE7563, 0x8C55, 0x47C4, { 0x87, 0x25, 0xE1, 0xB3, 0x28, 0xF2, 0x41, 0x60 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Project               = { 0x362A8EE5, 0x675E, 0x43A9, { 0x86, 0x9D, 0x06, 0xEC, 0xE8, 0x0B, 0x0C, 0xB4 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Script                = { 0x9252F941, 0xDB23, 0x4FCA, { 0xAA, 0x50, 0x85, 0x8B, 0x33, 0xBB, 0x4A, 0x19 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Unit                  = { 0x291CAE9C, 0x4D20, 0x4F33, { 0x8B, 0x5F, 0xD4, 0x8B, 0x58, 0x7F, 0x3D, 0x65 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_LLContainer_Win32     = { 0x2D89293F, 0x6B07, 0x4679, { 0x99, 0x06, 0xEF, 0xAE, 0x4B, 0x1A, 0x43, 0x3C } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_LLProcedure_Win32     = { 0x62402E6C, 0x6E6D, 0x4AA5, { 0x9A, 0xFF, 0x5A, 0x20, 0xAD, 0x69, 0x1C, 0x44 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_LLContainer_WinCE     = { 0xAC01E13E, 0x418B, 0x4ca0, { 0xBA, 0x81, 0xAD, 0xEA, 0x67, 0xEB, 0x7F, 0xA0 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_LLProcedure_WinCE     = { 0xC6F8B3FD, 0xD335, 0x4268, { 0x9C, 0x13, 0x62, 0xE9, 0x36, 0xBB, 0x14, 0x55 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_TestedApps_Win32      = { 0x90D101C8, 0x80C7, 0x48D4, { 0x90, 0x55, 0x2E, 0x45, 0x1B, 0x9B, 0xCD, 0x75 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_TestedAppNode_Win32   = { 0xFD30A383, 0x63C2, 0x4C25, { 0x94, 0x8C, 0x25, 0x95, 0xC0, 0xF8, 0x13, 0x20 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_TestedApps_WinCE      = { 0xF5E4CEC0, 0x86A5, 0x455A, { 0x92, 0xC1, 0xE9, 0x85, 0x5D, 0x4B, 0xD4, 0xB5 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_TestedAppNode_WinCE   = { 0xDA011825, 0x4AF6, 0x48E2, { 0xBE, 0x27, 0xCB, 0x16, 0x91, 0x50, 0xBF, 0x8E } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores                = { 0x5238AF17, 0x5FE2, 0x48FF, { 0x8B, 0xCC, 0x98, 0x03, 0xA9, 0x75, 0xA4, 0xF4 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_Bitmaps        = { 0xDA6D7EF7, 0x5B05, 0x4735, { 0xAA, 0xF0, 0xA8, 0x5E, 0x47, 0xD4, 0x79, 0x89 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_Bitmap         = { 0x1FD256C1, 0x604C, 0x48A1, { 0x99, 0x90, 0x9A, 0x93, 0x29, 0x13, 0x9E, 0xC4 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_Objects        = { 0x30501691, 0x969F, 0x4007, { 0x92, 0x3F, 0xBA, 0x44, 0x59, 0xE5, 0x1E, 0x6A } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_Object         = { 0x5EFCFFBB, 0x0DF6, 0x45A2, { 0xAD, 0xB2, 0x4F, 0xD0, 0xBF, 0x2A, 0x28, 0x0B } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_Files          = { 0xAA2F3067, 0x5C9B, 0x4CCF, { 0x89, 0xD4, 0x1F, 0x93, 0xCE, 0x1C, 0x51, 0x0F } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_File           = { 0xFC92F8D9, 0x8A57, 0x4D74, { 0xB8, 0xB4, 0x47, 0x9A, 0xA5, 0x0B, 0xF6, 0x47 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_DataBases      = { 0xC3BE8E0F, 0xFB1F, 0x487B, { 0x9A, 0xE3, 0xBC, 0xFE, 0xB9, 0x1C, 0xBE, 0xFF } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_DataBaseTable  = { 0xAEC89722, 0xC97A, 0x47DA, { 0xA2, 0xFA, 0x3F, 0xC4, 0xC3, 0xAD, 0xCB, 0x30 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_ObjectTables   = { 0x70FC6ED0, 0xA122, 0x4A26, { 0x9B, 0x64, 0xED, 0xDB, 0xB2, 0xF1, 0x1A, 0x49 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_ObjectTable    = { 0xF1D3EE30, 0xC2A8, 0x4AFF, { 0x80, 0x1C, 0x1D, 0x39, 0xE2, 0xC9, 0x02, 0xF0 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_XMLs           = { 0xCCCFA5F5, 0xAB3B, 0x408F, { 0x95, 0xC9, 0x61, 0xDE, 0x90, 0xC5, 0xFA, 0xD5 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_XMLCheckPoint  = { 0xCEC2489F, 0xECDE, 0x4F42, { 0x9E, 0xD4, 0x4E, 0xB3, 0x22, 0x3B, 0x44, 0x4D } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Stores_XMLDocument    = { 0x5F54D491, 0xFD19, 0x4FF8, { 0xBC, 0xF2, 0x55, 0x77, 0x8E, 0xDA, 0xD3, 0xC6 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_LoadTesting           = { 0xE8C1C875, 0x39EB, 0x49BF, { 0xB1, 0x98, 0x62, 0x1F, 0x4D, 0xCE, 0x90, 0x77 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_LoadTestingTask       = { 0xC07A1787, 0x2A6A, 0x4FB5, { 0x89, 0xBF, 0x0E, 0xB8, 0xEF, 0x52, 0x5E, 0x24 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_UnitTestContainer     = { 0xCCBF15D3, 0x5453, 0x4E8D, { 0x89, 0x1C, 0x1C, 0x74, 0xB5, 0x7C, 0x69, 0x79 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_MSTest                = { 0x492BC0B1, 0x1985, 0x4453, { 0x9C, 0x35, 0x18, 0x4C, 0x83, 0x70, 0x32, 0xEC } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_NUnit                 = { 0x8EF2AC02, 0x5C6C, 0x450B, { 0xA9, 0x9E, 0xA3, 0x08, 0x77, 0x61, 0xD9, 0xD6 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_JUnit                 = { 0x8AF83060, 0x375A, 0x4AE8, { 0xB6, 0xF7, 0x93, 0x60, 0xC3, 0xD6, 0x61, 0x37 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_TCUnitTest            = { 0xA27365C8, 0xF012, 0x4712, { 0x90, 0xA9, 0xC8, 0x21, 0x7A, 0x59, 0x0B, 0xEF } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_DUnit                 = { 0x9D8941CB, 0xBF2F, 0x4F66, { 0xBF, 0xF6, 0xA8, 0xE6, 0x47, 0xCE, 0x92, 0xB0 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_NetworkSuite          = { 0x342AA317, 0xC8C7, 0x4232, { 0x8A, 0x60, 0x06, 0x97, 0x23, 0xAA, 0xFC, 0x67 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Jobs                  = { 0x54BD767E, 0x85A4, 0x491D, { 0xA3, 0xB2, 0xEC, 0x88, 0x68, 0x5B, 0xF3, 0xC8 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Hosts                 = { 0x1478418C, 0xD916, 0x49E9, { 0x8E, 0x78, 0xBF, 0x45, 0x61, 0xC1, 0x64, 0xF9 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Host                  = { 0x4C283132, 0xD38F, 0x4C25, { 0xB7, 0x2C, 0x75, 0xAD, 0x0D, 0x8A, 0x30, 0x93 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_SynchPoints           = { 0x0A9D19D7, 0x1488, 0x4023, { 0xB5, 0x1C, 0x2B, 0x5D, 0x64, 0x69, 0x2E, 0x77 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_SynchPoint            = { 0xB91252C0, 0x3B19, 0x4605, { 0xB8, 0x1B, 0x9B, 0x1C, 0x88, 0x69, 0xFE, 0xD5 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Job                   = { 0xE2AF080E, 0x4F10, 0x4DAC, { 0x88, 0x97, 0x10, 0x1F, 0xF5, 0x50, 0x9E, 0x65 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_Task                  = { 0x23C4D44E, 0x8AC2, 0x4667, { 0xBA, 0xFD, 0xDA, 0xD8, 0x9D, 0x94, 0x80, 0x4E } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_AX_Events_Container   = { 0xE7ABA87F, 0xE873, 0x4452, { 0x99, 0x21, 0x6F, 0x4B, 0xAA, 0xEB, 0x2B, 0xCC } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_AX_Objects_Container  = { 0xE2A0922E, 0x4FB3, 0x40D2, { 0xBD, 0xEC, 0xED, 0x1B, 0xAC, 0xEF, 0x16, 0x90 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_AX_Event              = { 0x8A98BAC4, 0x2A89, 0x4883, { 0xAA, 0xE7, 0xF0, 0x73, 0x37, 0xDF, 0x59, 0xD1 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_AX_Object             = { 0x78A9AE58, 0xD125, 0x449E, { 0x83, 0xAA, 0xA1, 0x09, 0xAB, 0x6B, 0xB7, 0x22 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_ManualTest            = { 0x1C954CF7, 0x8390, 0x4813, { 0xA6, 0x2A, 0x51, 0xA1, 0x0A, 0xDB, 0xF0, 0x33 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_ManualTests_Container = { 0xF57E13C5, 0x95C5, 0x4DC4, { 0xBE, 0x5A, 0x9A, 0x45, 0x6A, 0xE1, 0x8F, 0x15 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_ODT                   = { 0x7ABA5999, 0x8A66, 0x47F5, { 0x8D, 0x2C, 0x2C, 0x03, 0x34, 0x22, 0x3A, 0x97 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_ODTClasses            = { 0xEEF77318, 0x2B4E, 0x4834, { 0xA6, 0x8E, 0x97, 0x30, 0xBD, 0x06, 0x6B, 0x8B } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_ODTData               = { 0xB9B4EF8F, 0xE6EA, 0x4F24, { 0xB9, 0xAB, 0x7E, 0x93, 0x28, 0xD3, 0x84, 0xF6 } };

	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_WebServicesContainer  = { 0xB80B4499, 0xCFD0, 0x49B8, { 0xA3, 0x9C, 0x32, 0x64, 0xE9, 0xED, 0x90, 0x80 } };
	extern "C" const GUID __declspec(selectany) c_ProjectNodeType_WebService            = { 0xFDE830DE, 0xDB45, 0x4B3F, { 0x91, 0x58, 0x5C, 0x1F, 0xB0, 0xB4, 0x0C, 0x28 } };


// *****************************************************************************
//
//  Identifiers of options categories supported by the Project Suite Extender.
//

	extern "C" const GUID __declspec(selectany) c_PSExtebder_OptID_Main                 = { 0x0D6CD26F, 0x7A19, 0x4AAF, { 0x92, 0xC8, 0x60, 0x85, 0x57, 0xC3, 0x2C, 0xAB } };
	extern "C" const GUID __declspec(selectany) c_PSExtebder_OptID_Config               = { 0x8EBE6EB3, 0x803D, 0x4913, { 0xAD, 0x7A, 0xD7, 0x15, 0x52, 0x12, 0x3A, 0x67 } };



// *****************************************************************************
//
//  Identifier of the options slice holding values specific for local computer (used in ItcProjectNodeWithConfig).
//

	extern "C" const GUID __declspec(selectany) c_ProjectNodeCfgSlice_LocalePC          = { 0xD63362EA, 0x4E86, 0x4EC5, { 0xA6, 0xEC, 0xFB, 0xC4, 0x39, 0x53, 0x21, 0xF4 } };



// *****************************************************************************
//
//  Identifiers of supported scripting languages (used by the Syntax subsystem).
//

	extern "C" const GUID __declspec(selectany) langID_VBScript                        = { 0x897793E3, 0x73F3, 0x4895, { 0xA9, 0x56, 0x3D, 0x41, 0xD3, 0xA2, 0x4A, 0x45 } };  // VBScript
	extern "C" const GUID __declspec(selectany) langID_JScript                         = { 0xE42909F2, 0x4390, 0x4F5D, { 0x94, 0xB8, 0xFA, 0xBF, 0x59, 0xBA, 0xBF, 0xCE } };  // JScript
	extern "C" const GUID __declspec(selectany) langID_DelphiScript                    = { 0x9E432E59, 0x33EF, 0x4EAA, { 0x95, 0xC6, 0x63, 0xFC, 0x35, 0xAF, 0x69, 0xEE } };  // DelphiScript
	extern "C" const GUID __declspec(selectany) langID_CPPScript                       = { 0x16EA48F7, 0xF0F6, 0x48A6, { 0xB1, 0xFA, 0x74, 0x3F, 0x42, 0x0D, 0x46, 0x30 } };  // C++Script
	extern "C" const GUID __declspec(selectany) langID_CSScript                        = { 0x90813F19, 0x086D, 0x4670, { 0x83, 0xBC, 0xDB, 0x51, 0x38, 0x6D, 0xC2, 0x24 } };  // C#Script



// *****************************************************************************
//
//  Identifiers of test types.

	extern "C" const GUID __declspec(selectany) c_TestType_ProjectSuite              = { 0x20696026, 0x0DC0, 0x4504, { 0x8F, 0x6A, 0x1B, 0x83, 0xA8, 0xCB, 0x99, 0x68 } };

	extern "C" const GUID __declspec(selectany) c_TestType_Project                   = { 0x4F35CD33, 0x7E53, 0x4BFF, { 0xA6, 0xCE, 0x27, 0xF9, 0x00, 0x48, 0xC6, 0xD7 } };

	extern "C" const GUID __declspec(selectany) c_TestType_Script                    = { 0x2621A4BA, 0x5CE8, 0x4C05, { 0x8E, 0x54, 0x3C, 0xCF, 0x17, 0x09, 0x51, 0x70 } }; // Test provided by the Script project item (a container of script units with the specified main routine)
	extern "C" const GUID __declspec(selectany) c_TestType_Units                     = { 0x5FC128EC, 0xDD83, 0x46CD, { 0xA5, 0x09, 0x76, 0xAD, 0x19, 0xEA, 0x2A, 0x02 } }; // A test provided by the script routine (individual script routine, not the Script project item)

	extern "C" const GUID __declspec(selectany) c_TestType_LLContainer               = { 0x97C00BCD, 0x4FEF, 0x480F, { 0x8C, 0x8C, 0x4D, 0x05, 0xB7, 0x9E, 0x88, 0xED } };
	extern "C" const GUID __declspec(selectany) c_TestType_LLP                       = { 0x1B58AC95, 0x5A32, 0x40CC, { 0xBC, 0x68, 0x3C, 0x8E, 0x7E, 0x6A, 0xE4, 0x37 } };
	extern "C" const GUID __declspec(selectany) c_TestType_WND_LLP                   = { 0x5398C745, 0x2661, 0x47f9, { 0xB4, 0x35, 0xCE, 0xD2, 0xB7, 0x14, 0xDF, 0xEA } };

	extern "C" const GUID __declspec(selectany) c_TestType_CELLContainer             = { 0xB37C6981, 0x8CB3, 0x47bd, { 0xA4, 0x1C, 0x2E, 0x22, 0x88, 0xF0, 0xA7, 0x1D } };
	extern "C" const GUID __declspec(selectany) c_TestType_CELLP                     = { 0x75953229, 0x807D, 0x49c5, { 0x9C, 0xF4, 0x77, 0xFA, 0x1F, 0x1B, 0x71, 0x9E } };
	extern "C" const GUID __declspec(selectany) c_TestType_CEScript					 = { 0xf684855b, 0x8d84, 0x4455, { 0xbb, 0x66, 0x9a, 0x6c, 0x6f, 0x8a, 0x33, 0x46 } }; // {F684855B-8D84-4455-BB66-9A6C6F8A3346}

	extern "C" const GUID __declspec(selectany) c_TestType_UnitTest_MSTest           = { 0xE49E4683, 0x3060, 0x4AE1, { 0x98, 0xCE, 0x12, 0xEB, 0xC7, 0xD6, 0x67, 0xB4 } };
	extern "C" const GUID __declspec(selectany) c_TestType_UnitTest_NUnit            = { 0xF710E957, 0x67EC, 0x464B, { 0x87, 0x6C, 0x9C, 0x3E, 0xCE, 0xC9, 0xBB, 0xF0 } };

	extern "C" const GUID __declspec(selectany) c_TestType_NetSuiteJob               = { 0xE21C28A8, 0xC052, 0x46D9, { 0xB6, 0xA0, 0xAF, 0x51, 0x3A, 0x57, 0xCE, 0x3A } };
	extern "C" const GUID __declspec(selectany) c_TestType_NetSuite                  = { 0xB3800CF7, 0xBF70, 0x4B8D, { 0x9D, 0x35, 0x83, 0xAE, 0x1C, 0xDE, 0x09, 0x40 } };
	extern "C" const GUID __declspec(selectany) c_TestType_NetSuiteTask              = { 0x40B0F0E5, 0xB2E3, 0x49B2, { 0xBA, 0x2D, 0xDC, 0x55, 0xAA, 0xCB, 0x72, 0x6C } };

	extern "C" const GUID __declspec(selectany) c_TestType_ManualTesting             = { 0x97533F5B, 0xD2FE, 0x4A4A, { 0x85, 0x7C, 0xA2, 0x52, 0xB9, 0xAD, 0x4A, 0x68 } };

	extern "C" const GUID __declspec(selectany) c_TestType_ODT                       = { 0xCBEC7FAB, 0xF986, 0x41A5, { 0x88, 0x2A, 0xCE, 0xDD, 0xA9, 0x3A, 0x02, 0xE1 } };

	extern "C" const GUID __declspec(selectany) c_TestType_LoadTestingTest           = { 0x9B511DB8, 0x2C5E, 0x4AB0, { 0x97, 0x38, 0x5D, 0xEA, 0x7C, 0x19, 0x35, 0xB0 } };

// =============================================================================
//
//  Identifiers of basic types of objects in the Object Browser tree.
// 

	// The highest priority of a node extender. 
	// (Used when creating extendors for windows, process and other nodes of the Object tree.
	//  Specified in the ItcSysNodeCreateContainer interface),
	#define c_SysObject_MaxAllowedPriority (MaxInt - 1)

	// Sys node identifier
	extern "C" const GUID __declspec(selectany) c_SysObject_Sys            = { 0x4A9F9237, 0xC1F7, 0x4B80, { 0x95, 0x73, 0x84, 0x40, 0xD7, 0xB3, 0x7D, 0xC6 } };
	// Identifier of nodes of the Process type
	extern "C" const GUID __declspec(selectany) c_SysObject_Process        = { 0x89700BDC, 0xD5D8, 0x4BE2, { 0xAC, 0xC3, 0xE9, 0x34, 0xA7, 0x65, 0xA4, 0x5A } };
	// Identifier of nodes of the Window type
	extern "C" const GUID __declspec(selectany) c_SysObject_Window         = { 0xE9E061ED, 0x0F79, 0x433C, { 0x94, 0x1B, 0xA6, 0x23, 0x53, 0x28, 0xFA, 0x2C } };

	// Identifiers of PDA nodes
	extern "C" const GUID __declspec(selectany) SysNodePDA        = { 0x964D299B, 0x656A, 0x4A2A, { 0xAB, 0xE2, 0x23, 0x46, 0xD6, 0x7D, 0x5A, 0xB8 } };
	extern "C" const GUID __declspec(selectany) SysNodePDAProcess = { 0xC22462F5, 0x333B, 0x494E, { 0xB4, 0xAA, 0x7C, 0x7C, 0x6E, 0x26, 0xD9, 0x07 } };
	extern "C" const GUID __declspec(selectany) SysNodePDAWindow  = { 0x97DF0583, 0x07EA, 0x479D, { 0x8B, 0x6B, 0xA5, 0xE4, 0x64, 0x6B, 0xBD, 0x7D } };

	// Identifiers of the "Object tree model" option and the category holding this option
	extern "C" const GUID __declspec(selectany) tcEngineWinModelSettingGroupKey       = { 0x3237E806, 0xB928, 0x4704, { 0x93, 0x36, 0xF8, 0x64, 0xBE, 0xDA, 0x1E, 0x0C } }; // Category identifier
	extern "C" const GUID __declspec(selectany) tcDefaultEngineWinTreeModelSettingKey = { 0x6BE019A2, 0xA836, 0x4B31, { 0x84, 0xD9, 0xF9, 0xDE, 0x78, 0x86, 0x9D, 0x51 } }; // Option identifier
	#define tcEngineWinTreeModel (L"Tree")  // Value of the option
	#define tcEngineWinFlatModel (L"Flat")  // Value of the option

	extern "C" const GUID __declspec(selectany) key_UnitStoreMode = { 0x3EADAFE2, 0x0CD4, 0x4B1E, { 0xA2, 0xA9, 0xB1, 0x84, 0xE9, 0x4F, 0xDC, 0xC7 } };

// *****************************************************************************
//
//  Identifiers of properties common for process, windows and other objects residing in tested applications.
//

	extern "C" const GUID __declspec(selectany) c_SysNode_Name_Property				= { 0xD142DA3A, 0x7069, 0x43EF, { 0x86, 0xCE, 0x6E, 0x08, 0x87, 0x01, 0x55, 0x64 } }; // Identifier of the Name property. Result type - WideString.
	extern "C" const GUID __declspec(selectany) c_SysNode_CallSyntax_Property		= { 0xE38E283C, 0xD00E, 0x428E, { 0xB1, 0x46, 0xC2, 0x55, 0x58, 0x47, 0xE7, 0x58 } }; // Identifier of the CallSyntext property. Result type - IaqSyntaxElement. This property is not visible in the Object Browser.
	extern "C" const GUID __declspec(selectany) c_SysNode_CallNameMappingSyntax		= { 0x92721F5A, 0xF0D6, 0x4300, { 0x8D, 0x2E, 0x07, 0xDB, 0x96, 0xCC, 0x3B, 0xBC } }; // Identifier of the NameMapping CallSyntext property.
	extern "C" const GUID __declspec(selectany) c_SysNode_CallSyntaxShort_Property	= { 0x49AB793E, 0x88F7, 0x4b7a, { 0x82, 0xB4, 0xC6, 0xA3, 0xFC, 0xE3, 0x67, 0x94 } }; // Identifier of the short CallSyntax property (for recording). Result type - IaqSyntaxElement. This property is not visible in the Object Browser.
	extern "C" const GUID __declspec(selectany) c_SysNode_ID_Property           	= { 0x2EEC20DD, 0x5852, 0x4F53, { 0xBC, 0x46, 0x21, 0x53, 0x3C, 0x1D, 0x0F, 0x8B } }; // Identifier of the Id property. Result type - Integer.
	extern "C" const GUID __declspec(selectany) c_SysNode_Icon_Property         	= { 0x05DF7888, 0x0DC3, 0x4937, { 0xA1, 0xB4, 0x95, 0x09, 0x7F, 0x3D, 0x5F, 0x14 } }; // Identifier of the Picture property. Result type - Integer (bitmap handle).
	extern "C" const GUID __declspec(selectany) c_SysNode_Exists_Property       	= { 0xE03B1EB5, 0xBD8B, 0x42B0, { 0x81, 0x53, 0x6D, 0xD9, 0xAA, 0xEB, 0xCC, 0xFF } }; // Identifier of the Exists property. Result type - Boolean.
	extern "C" const GUID __declspec(selectany) c_SysNode_IsOpenApp             	= { 0xBC504B49, 0xB590, 0x4D80, { 0xB6, 0x90, 0x7F, 0xE7, 0x3B, 0xE0, 0x20, 0x3D } }; // Identifier of the IsOpenApp property. Result type - Boolean. This property is not visible in the Object Browser.
	extern "C" const GUID __declspec(selectany) c_SysNode_DispatchExtender      	= { 0x15269134, 0xA358, 0x4D05, { 0xA7, 0x20, 0xC4, 0x2F, 0xCF, 0x11, 0xCB, 0xA0 } }; // Identifier of the DispatchExtender property. Result type - IDispatch.  This property is not visible in the Object Browser.
	extern "C" const GUID __declspec(selectany) c_SysNode_CM_DispatchExtender		= { 0xCC8E49F1, 0x613D, 0x4413, { 0x95, 0x85, 0x31, 0xF7, 0x79, 0x3E, 0x02, 0xCF } }; // Identifier of the DispatchExtender property for the Compatibility Mode. Result type - IDispatch.  This property is not visible in the Object Browser.



// *****************************************************************************
//
//  Identifiers of contexts and statuses.
//

	// Identifiers of the Test Engine contexts
	extern "C" const GUID __declspec(selectany) ContextType_TestEngine            = { 0x73BD8AE3, 0x0F50, 0x47B6, { 0xB1, 0xE0, 0x14, 0x66, 0x98, 0x14, 0xAE, 0x32 } }; // Identifier of the Test Engine context
	extern "C" const GUID __declspec(selectany) context_TestEngine_Idle           = { 0x160E9506, 0x4F8D, 0x440F, { 0xBE, 0xF4, 0x81, 0xAC, 0x3D, 0x40, 0xC9, 0xD9 } }; // Indicates that no tests are being run or recorded
	extern "C" const GUID __declspec(selectany) context_TestEngine_Playing        = { 0xC02D6A1A, 0x4483, 0x497F, { 0x98, 0x35, 0xD6, 0xE2, 0xBF, 0xEF, 0xF7, 0x30 } }; // Indicates that a test is running
	extern "C" const GUID __declspec(selectany) context_TestEngine_Recording      = { 0x11A2F09E, 0x8045, 0x49D9, { 0x9E, 0x5F, 0xFF, 0x23, 0xFF, 0x14, 0x1E, 0x2E } }; // Indicates that a test is being recorded
	extern "C" const GUID __declspec(selectany) ContextType_TestPlaying           = { 0xD8418F0B, 0x3CD9, 0x40C6, { 0x9F, 0xCF, 0xB3, 0x00, 0x68, 0xD2, 0xBF, 0x3C } }; // Test execution context 
	extern "C" const GUID __declspec(selectany) context_TestPlaying_Idle          = { 0xBF678429, 0x605A, 0x4368, { 0x93, 0x86, 0x27, 0x91, 0xA6, 0x6E, 0x52, 0xA4 } }; // Indicates that a test is not running
	extern "C" const GUID __declspec(selectany) context_TestPlaying_Execution     = { 0x3DACEED8, 0x213B, 0x43BB, { 0x94, 0x43, 0x51, 0x1B, 0x44, 0x1B, 0xAC, 0xDF } }; // Indicates that a test is running
	extern "C" const GUID __declspec(selectany) context_TestPlaying_Pause         = { 0xE0583945, 0x014B, 0x4BFC, { 0xB8, 0xC3, 0x0F, 0x5B, 0x41, 0x97, 0x97, 0xF4 } }; // Indicates that a test execution is paused
	extern "C" const GUID __declspec(selectany) ContextType_TestRecording         = { 0x3727D648, 0xAF0E, 0x49FD, { 0xA8, 0x86, 0x85, 0x42, 0xAE, 0xDE, 0xD1, 0x0C } }; // Test recording context
	extern "C" const GUID __declspec(selectany) context_TestRecording_Idle        = { 0xF879F352, 0x6AC4, 0x45B9, { 0xA1, 0x06, 0x8C, 0x57, 0x32, 0xAD, 0x6C, 0x0F } }; // Indicates that test is not recorded
	extern "C" const GUID __declspec(selectany) context_TestRecording_Recording   = { 0x04A8A582, 0x7190, 0x4C8C, { 0xB8, 0x90, 0xE4, 0x8B, 0xD3, 0x4E, 0x73, 0x0F } }; // Indicates that the recording is in progress
	extern "C" const GUID __declspec(selectany) context_TestRecording_Pause       = { 0x74C65319, 0x1466, 0x4FCE, { 0xAF, 0x8C, 0x37, 0x55, 0xF7, 0xF9, 0x08, 0xC9 } }; // Indicates that the recording is paused

	// Idetifier of the Curren tEditor context 
	extern "C" const GUID __declspec(selectany) ContextType_CurrentEditor         = { 0xC94B1907, 0xC79A, 0x45A7, { 0xAC, 0xA4, 0x77, 0x58, 0x58, 0x25, 0x69, 0x27 } };
  // Idetifier of the Current EditItem context
	extern "C" const GUID __declspec(selectany) ContextType_CurrentEditItem       = { 0x4088E122, 0x836F, 0x4774, { 0xB4, 0xE4, 0x71, 0x45, 0xC3, 0x51, 0xEF, 0xAF } };


// ***************************************************************************
//
//  Identifiers of the Project Suite contexts.
//

	extern "C" const GUID __declspec(selectany) ContextType_ProjectSuiteActiveNode  = { 0xF7E470D5, 0xB092, 0x43F2, { 0xA9, 0x0D, 0x40, 0x57, 0x21, 0x03, 0x6C, 0xB1 } };



// *****************************************************************************
//
// Identifiers of some settings.
//

	//--------------------------------------------------------------------------
	// Tools | Options dialog.  General | Project options group. 

		extern "C" const GUID __declspec(selectany) c_setting_key_MainForm_AutoOpenLastProject   = { 0x8DDDFE68, 0x26DB, 0x4B1A, { 0x95, 0x14, 0xDC, 0xCE, 0x08, 0x5E, 0x53, 0x9B } }; // The "Auto open last project" option
		extern "C" const GUID __declspec(selectany) c_setting_key_Project_DefaultFolder          = { 0xBF1B288F, 0x24C5, 0x4279, { 0xBB, 0xAA, 0x15, 0x33, 0x65, 0xA9, 0x2B, 0x94 } }; // The "Default project folder" option
		extern "C" const GUID __declspec(selectany) c_setting_key_Project_DefaultLanguage        = { 0x63CE614F, 0x7E70, 0x45FF, { 0x86, 0x35, 0xE9, 0xA8, 0x6B, 0x0F, 0x77, 0x50 } }; // The "Default scripting language" option
		extern "C" const GUID __declspec(selectany) c_setting_key_Project_MaxMRU                 = { 0x8EE83D61, 0xCD20, 0x40BF, { 0xB2, 0x3F, 0xBE, 0x35, 0x8A, 0x10, 0xE4, 0x7D } }; // The "Number of recently used projects to keep" option


	//--------------------------------------------------------------------------
	// Playback settings (Project properties and Default project properties).

		extern "C" const GUID __declspec(selectany) cRunDelayBetweenEventsSettingKey              = { 0x2044DC7F, 0x423E, 0x4668, { 0x81, 0x14, 0x68, 0xD2, 0x3A, 0xE9, 0x7A, 0xD6 } }; // The "Delay between events" option
		extern "C" const GUID __declspec(selectany) cRunAutoWaitTimeoutSettingKey                 = { 0x9EB8E8E6, 0xD2F2, 0x4a8a, { 0xAD, 0xFB, 0x49, 0x2E, 0x8C, 0x0E, 0xAF, 0xEF } }; // The "Auto-wait timeout" option
		extern "C" const GUID __declspec(selectany) cRunCaseSensitiveSettingKey                   = { 0x0BE15905, 0x46A9, 0x40d6, { 0x9B, 0xE2, 0x89, 0x2E, 0xC4, 0xAA, 0xBB, 0xD4 } }; // The "Use case-sensitive parameters" option
		extern "C" const GUID __declspec(selectany) cRunDragSpeed                                 = { 0xC66145D3, 0x15CC, 0x47D3, { 0x8C, 0xD1, 0x6A, 0x57, 0x44, 0x64, 0x04, 0x05 } }; // The "Dragging delay" option
		extern "C" const GUID __declspec(selectany) cRunAmbigousRecognition                       = { 0xC3267834, 0x69E4, 0x4cd8, { 0xB1, 0x6A, 0xB6, 0x0A, 0x9B, 0xB8, 0xA3, 0xB4 } }; // The "Stop on window recognition error" option
		extern "C" const GUID __declspec(selectany) cRunKeySpeed                                  = { 0x9A7D3139, 0x5F96, 0x4992, { 0x87, 0x97, 0x53, 0xED, 0x99, 0x20, 0x49, 0x33 } }; // The "Key pressing delay" option
		extern "C" const GUID __declspec(selectany) cRunMinimizeTCSettingKey                      = { 0x2FCB2EB2, 0x336E, 0x4fd4, { 0x96, 0xA3, 0x87, 0x10, 0xA7, 0x3A, 0xDD, 0xD8 } }; // The "Minimize TestComplete" option
		extern "C" const GUID __declspec(selectany) c_settings_key_ScriptPlayer_ShowErrDlg        = { 0xA2568CC8, 0x7E8E, 0x42C5, { 0xA8, 0x7D, 0xB6, 0x96, 0x84, 0xA1, 0xE6, 0x16 } }; // The "Error dialog" option
		extern "C" const GUID __declspec(selectany) cRunMouseMovingDelaySettingKey                = { 0x66c9cfbe, 0xfd85, 0x4fe1, { 0x9f, 0xf3, 0xf1, 0x8c, 0xfc, 0x0e, 0x58, 0x46 } }; // The "Mouse moving delay" option

		extern "C" const GUID __declspec(selectany) c_tcObjectValidation_Setting_IgnoreOverlap    = { 0xD5773345, 0x4407, 0x4a8a, { 0xAC, 0xE6, 0x0F, 0x0A, 0x9C, 0x87, 0x87, 0xC8 } }; // The "Ignore overlapping window" option
		extern "C" const GUID __declspec(selectany) c_tcObjectValidation_Setting_IgnoreUnexpected = { 0x6BA39D6A, 0x88C9, 0x49B1, { 0xA3, 0x10, 0xA3, 0x1F, 0x46, 0x13, 0x6D, 0xFB } }; // The "Ignore unexpected window" option
		extern "C" const GUID __declspec(selectany) c_tcObjectValidation_Setting_StopExecution    = { 0x18FD096E, 0xE6B8, 0x4d3d, { 0x96, 0x19, 0x71, 0x67, 0x0F, 0xC8, 0x1D, 0x48 } }; // The "Stop execution" option
		extern "C" const GUID __declspec(selectany) c_tcObjectValidation_Setting_ClickFocused     = { 0x0DEF6033, 0x13D4, 0x4335, { 0x97, 0xE9, 0xCC, 0x6F, 0x1F, 0xC0, 0x43, 0x42 } }; // The "Click on focused control" option
		extern "C" const GUID __declspec(selectany) c_tcObjectValidation_Setting_PressEsc         = { 0x7E9D3E8B, 0xDFF5, 0x4737, { 0xA8, 0x77, 0xE9, 0x4B, 0x6B, 0x93, 0x2B, 0xCD } }; // The "Press Esc" option
		extern "C" const GUID __declspec(selectany) c_tcObjectValidation_Setting_PressEnter       = { 0xBF9B6482, 0xCEA1, 0x4402, { 0xBA, 0x61, 0x97, 0x02, 0x40, 0x4F, 0x1F, 0x12 } }; // The "Press Enter" option
		extern "C" const GUID __declspec(selectany) c_tcObjectValidation_Setting_SendClose        = { 0xE5242A20, 0x9B70, 0x4540, { 0xAE, 0xFD, 0x70, 0x12, 0x79, 0x1D, 0x32, 0x84 } }; // The "Send WM_CLOSE" option


	//--------------------------------------------------------------------------
	// Tools | Options dialog.  Engines | Events group.

		extern "C" const GUID __declspec(selectany) c_settings_key_AX_GenerateDefaultEvents      = { 0x18E92053, 0x9C3A, 0x4604, { 0xA0, 0x29, 0xEC, 0x22, 0x78, 0x1A, 0x8F, 0x83 } }; // The "Insert general events in new projects" option


	//--------------------------------------------------------------------------
	// Log settings.

		// In Playback settings 
		extern "C" const GUID __declspec(selectany) StopOnErrorSettingKey   = { 0x3AE91BBD, 0xF37D, 0x40E6, { 0xB4, 0x9D, 0xD2, 0xF1, 0xEF, 0x68, 0xE2, 0x85 } }; // The "Stop on error" option
		extern "C" const GUID __declspec(selectany) StopOnWarningSettingKey = { 0x90FD1116, 0xF071, 0x44C8, { 0xAB, 0x72, 0xF1, 0x91, 0x6C, 0x2B, 0x3A, 0x1B } }; // The "Stop on warning" option

		// Tools | Options dialog. Engines | Log group.
		extern "C" const GUID __declspec(selectany) StoreAllLogsSettingKey      = { 0xB0AEB6ED, 0xE738, 0x4E36, { 0x85, 0xBF, 0x7E, 0xCB, 0x5E, 0x0B, 0x57, 0xC6 } }; // The "Stores all logs" option
		extern "C" const GUID __declspec(selectany) ResentLogCountSettingKey    = { 0xF92386D4, 0x4DC1, 0x4BE9, { 0xA7, 0x9E, 0x7C, 0xFE, 0xB5, 0xB7, 0xD7, 0x36 } }; // The "Number of recent logs to keep" option
		extern "C" const GUID __declspec(selectany) ShowLogAfterStopSettingKey  = { 0x1B7156EA, 0x6296, 0x4969, { 0x9C, 0x90, 0x90, 0x30, 0x16, 0xF2, 0xF8, 0x88 } }; // The "Active after test run" option
		extern "C" const GUID __declspec(selectany) ShowLogInOnePanelSettingKey = { 0x5B67534E, 0x4AE3, 0x4217, { 0xB1, 0xAF, 0x2A, 0x04, 0xB2, 0x8F, 0xB3, 0x84 } }; // The "Open logs in the same panel" option
		extern "C" const GUID __declspec(selectany) LogAutosaveIntervalSettingKey={ 0x15C8845F, 0x53E4, 0x4045, { 0x98, 0x00, 0x74, 0x76, 0x6A, 0xBC, 0x4B, 0x34 } }; // Log Autosave interval



	//--------------------------------------------------------------------------
	// Project and project suite settings.

		extern "C" const GUID __declspec(selectany) c_pn_setting_key_PS_LogLocation              = { 0x5A85E200, 0xB5D2, 0x4F74, { 0x97, 0x2A, 0x02, 0x21, 0xF2, 0x95, 0x6A, 0x19 } }; // Project Suite properties. The "Log location" option.
		extern "C" const GUID __declspec(selectany) c_pn_setting_key_Project_LogLocation         = { 0x24DB98D6, 0x5EF8, 0x47BF, { 0x97, 0x7E, 0xC2, 0xFD, 0x2C, 0x5F, 0x5F, 0xB3 } }; // Project properties. The "Log location" option.



// *****************************************************************************
//
//  Helper constants. Used when creating extendors for nodes of the Object Browser tree.
//

	extern "C" const GUID __declspec(selectany) CUSTOM_ATTRIB_GUID = { 0x94E37ED7, 0x36B9, 0x4ae8, { 0xB4, 0x49, 0xAC, 0xD0, 0x01, 0x3A, 0xB5, 0x6A } };
	extern "C" const GUID __declspec(selectany) CUSTOM_TYPE_ATTRIB_GUID = { 0x50ED4A33, 0x7B9F, 0x4f2d, { 0xB1, 0x0A, 0x8B, 0xEF, 0xBA, 0x68, 0x90, 0x65 } };
	extern "C" const GUID __declspec(selectany) CUSTOM_DIMENSION_ATTRIB_GUID = { 0xD4E930AD, 0x586E, 0x4cc1, { 0xAD, 0x81, 0x3E, 0xC9, 0x57, 0xBA, 0x75, 0x90 } };
	extern "C" const GUID __declspec(selectany) CUSTOM_SEPARATOR_ATTRIB_GUID = { 0xB36E9B61, 0x80FB, 0x4352, { 0xA2, 0x0B, 0xF2, 0x57, 0x79, 0x3B, 0x5B, 0x0E } };
	extern "C" const GUID __declspec(selectany) CUSTOM_TC3COMP_ATTRIB_GUID = { 0x29DB324A, 0x965B, 0x4fe6, { 0x88, 0xF1, 0x60, 0xD6, 0xD6, 0x7E, 0xA8, 0xAA } };
	#define CUSTOM_TC3COMP_ATTRIB_VALUE (L"TC3");



// *****************************************************************************
//
//  Identifier of the default log implementation. Used when creating custom test players.
//

	extern "C" const GUID __declspec(selectany) DefaultLogDataKey = { 0x396D39B3, 0xE47D, 0x427D, { 0x91, 0xC2, 0x26, 0x26, 0x89, 0x4D, 0xFF, 0x17 } };


// *****************************************************************************
//
//  Exit code values
//

#define  ExitCodeOK            0
#define  ExitCodeWarning       1
#define  ExitCodeError         2
#define  ExitCodeCannotBeRun   3

#define  ExitCodeAlreadyStarted 1000
