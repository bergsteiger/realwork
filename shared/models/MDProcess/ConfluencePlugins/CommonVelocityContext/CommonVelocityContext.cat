
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.060314"
    charSet    	204)

(object Class_Category "CommonVelocityContext"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"name"
	    value      	"Common Velocity Context")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"vendor name"
	    value      	"ÎÎÎ ÍÏÏ 'Ãàðàíò-Ñåðâèñ'")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"vendor url"
	    value      	"www.garant.ru")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (java)"
	    value      	"w:/MDProcess/java/src/java/ru/garant/MDProcess/ConfluencePlugins/CommonVelocityContext/GlobalHelper.java::473D586C0019")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"WikiPageID (wiki)"
	    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Ìîäåëü ïðîåêòà "MDProcess"/ConfluencePlugins/CommonVelocityContext|473D57A3004A
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED WikiPageID (wiki)"
	    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Ìîäåëü ïðîåêòà "MDProcess"/ConfluencePlugins/CommonVelocityContext/GlobalHelper|473D586C0019::473D586C0019
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (wiki)"
	    value      	"wiki")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ElementCreationOrder"
	    value      	"19006861419"))
    quid       	"473D57A3004A"
    documentation 	"ñîäåðæèò íàøè êîìïîíåíòû, äîñòóïíûå èç âåëîñèòè øàáëîíîâ"
    stereotype 	"KPlugins"
    visible_categories 	(list visibility_relationship_list
	(object Visibility_Relationship
	    quid       	"473D592C02F9"
	    supplier   	"Logical View::MDProcess::ConfluencePlugins::FilterPanel"
	    quidu      	"473C40040346")
	(object Visibility_Relationship
	    quid       	"482D117E00B2"
	    supplier   	"Logical View::external::JavaTypes::javax.servlet.http"
	    quidu      	"482D114A0006")
	(object Visibility_Relationship
	    quid       	"4950970C0154"
	    supplier   	"Logical View::external::ConfluenceSupport::com.atlassian.confluence.pages"
	    quidu      	"4614919300FA")
	(object Visibility_Relationship
	    quid       	"53E8942B030C"
	    supplier   	"Logical View::external::ConfluenceSupport::com.atlassian.confluence.coreImpl"
	    quidu      	"4649E1A40231"))
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "GlobalHelper"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Factory auto reg"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Factory default impl"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Servant Pool"
		    value      	"none")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"context-key"
		    value      	"garHelper")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (java)"
		    value      	"w:/MDProcess/java/src/java/ru/garant/MDProcess/ConfluencePlugins/CommonVelocityContext/GlobalHelper.java")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*473D586C0019_CUSTOM_IMPORT*"
		    value      	"//#UC START# *473D586C0019_CUSTOM_IMPORT*¤import java.util.concurrent.ExecutionException;¤import com.google.common.cache.*;¤¤import ru.garant.shared.Core.Root.NoActiveFactory;¤import ru.garant.shared.ConfluenceCore.ActionSupport.ActionContext;¤import ru.garant.shared.ConfluenceCore.ActionSupport.ActionContextThreadLocalFactory;¤¤import ru.garant.MDProcess.ConfluenceMDChange.Releases.ReleaseLifeCycle;¤import ru.garant.MDProcess.ConfluencePlugins.FilterPanel.*;¤import ru.garant.MDProcess.ConfluencePlugins.IconsSelectorSupport.IconSelectorInVelocity;¤import ru.garant.MDProcess.ConfluencePlugins.UserData.FidNotFoundException;¤import ru.garant.MDProcess.ConfluencePlugins.UserData.UserData;¤¤import ru.garant.shared.GCI.I18N.Messages;¤import ru.garant.shared.ConfluenceCore.HibernateSupportImpl.QueryHelper;¤import ru.garant.shared.GCL.DateUtils;¤¤import ru.garant.MDProcess.ConfluencePlugins.DiscussionsSupport.DashboardFilter;¤import ru.garant.MDProcess.ConfluencePlugins.DiscussionsSupport.DiscussionVelocityContextPlugin;¤import ru.garant.MDProcess.ConfluencePlugins.DiscussionsSupport.VelocityItem;¤import ru.garant.MDProcess.ConfluencePlugins.EmailNotification.EmailGateway;¤import ru.garant.MDProcess.ConfluencePlugins.EntitySupport.GarantAbstractJobWithLock;¤import ru.garant.MDProcess.ConfluencePlugins.EventsLog.EventType;¤import ru.garant.MDProcess.ConfluencePlugins.EventsLog.EventsLogManager;¤import ru.garant.MDProcess.DocCardMailing.Mailing.CharsetDetector;¤import ru.garant.MDProcess.DocCardMailing.Mailing.TextExtractor;¤¤import java.io.ByteArrayInputStream;¤import java.io.Serializable;¤import java.math.BigInteger;¤import java.net.InetAddress;¤import java.sql.Connection;¤import java.sql.ResultSet;¤import java.sql.SQLException;¤import java.sql.Statement;¤import java.sql.Struct;¤import java.text.Normalizer;¤import java.text.ParseException;¤import java.text.SimpleDateFormat;¤import java.util.*;¤import java.util.concurrent.ConcurrentHashMap;¤import java.util.regex.MatchResult;¤import java.util.regex.Matcher;¤import java.util.regex.Pattern;¤¤import org.apache.commons.collections.CollectionUtils;¤import org.apache.commons.lang.StringEscapeUtils;¤import org.apache.commons.lang.StringUtils;¤import org.springframework.jdbc.core.JdbcTemplate;¤import org.springframework.jdbc.core.RowCallbackHandler;¤import org.springframework.jdbc.datasource.SingleConnectionDataSource;¤import org.springframework.orm.hibernate.SessionFactoryUtils;¤¤import com.atlassian.confluence.pages.Attachment;¤import com.atlassian.confluence.pages.Comment;¤import com.atlassian.confluence.pages.Page;¤import com.atlassian.confluence.labels.Label;¤import com.atlassian.confluence.pages.BlogPost;¤import com.atlassian.confluence.core.ContentEntityObject;¤import com.atlassian.confluence.renderer.radeox.macros.MacroUtils;¤import com.atlassian.confluence.security.PermissionHelper;¤import com.atlassian.confluence.security.SpacePermission;¤import com.atlassian.confluence.setup.bandana.ConfluenceBandanaContext;¤import com.atlassian.confluence.spaces.Space;¤import com.atlassian.confluence.user.AuthenticatedUserThreadLocal;¤import com.atlassian.confluence.user.UserInterfaceState;¤import com.atlassian.confluence.util.GeneralUtil;¤import com.atlassian.confluence.util.velocity.VelocityUtils;¤import com.atlassian.core.bean.EntityObject;¤import com.atlassian.mail.Email;¤import com.atlassian.user.Group;¤import com.atlassian.user.User;¤import com.opensymphony.webwork.ServletActionContext;¤¤import net.sf.hibernate.HibernateException;¤import net.sf.hibernate.Query;¤import net.sf.hibernate.Session;¤import ru.garant.shared.ConfluenceCore.SFI.*;¤import java.security.MessageDigest;¤import java.security.NoSuchAlgorithmException;¤//#UC END# *473D586C0019_CUSTOM_IMPORT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*473D586C0019_CUSTOM_CLASS_DEFINITION*"
		    value      	"//#UC START# *473D586C0019_CUSTOM_CLASS_DEFINITION*¤//#UC END# *473D586C0019_CUSTOM_CLASS_DEFINITION*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*473D586C0019_CUSTOM_METHODS_AND_DATA*"
		    value      	(value Text 
|//#UC START# *473D586C0019_CUSTOM_METHODS_AND_DATA*¤	¤	private static final String HTTPHDR_USER_AGENT = "User-Agent";¤	¤	private static Set<String> faultSpaces_ = new HashSet<String>();¤	private static Set<String> codeSpaces_ = new HashSet<String>();¤	static {¤		faultSpaces_.add("NMST");¤¤		codeSpaces_.add("NMS");¤		codeSpaces_.add("SHD");¤		codeSpaces_.add("SHR");¤		codeSpaces_.add("MDP");¤		codeSpaces_.add("NST");¤	}¤¤	private void makeCheckItem (Item item, ru.garant.MDProcess.ConfluencePlugins.GarantProfileSupport.ProfileVelocityContextPlugin pvcp) throws Exception {¤		Object s = pvcp.get(item.getId());¤		if (s != null && s.equals("true")) {¤			item.setChecked(true);¤		}¤	}¤¤	private void makeCheckedFilterItem (Item item, String s2) throws Exception {¤		if (item.getId().equals(s2)) {¤			item.setChecked(true);¤		}¤	}¤	¤	public long getTime() {¤		return System.currentTimeMillis();¤	}¤	¤	public long divide (int dividend, int[] divisors) {¤		long result = dividend;¤		for (long divisor : divisors) {¤			result /= divisor;¤		}¤		return result;¤	}¤	¤	public String getUserAgent (HttpServletRequest request) {¤		return request.getHeader(HTTPHDR_USER_AGENT);¤	}¤	¤	public String escapeHtml(String text) {¤		return StringEscapeUtils.escapeHtml(text);¤	}¤	¤    public static String getXHtmlBody (com.atlassian.confluence.core.ContentEntityObject ceo) {¤    	return ContainerManager.Factory.get().getWikiStyleRenderer().convertWikiToXHtml(ceo.toPageContext(), ceo.getContent());¤    }	¤    ¤    public static String getRelativeTime(Date date)¤    {¤        if (date == null)¤            return "No timestamp.";¤¤        long tstamp = date.getTime();¤        long t0 = System.currentTimeMillis();¤        long dt = t0 - tstamp;¤¤        long secs = dt / 1000;¤        long mins = secs / 60;¤        long hours = mins / 60;¤        long days = hours / 24;¤¤        String s_days = "" + days;¤        String s_hours = "" + hours;¤        String s_mins = "" + mins;¤        String symbol1, symbol2;¤        //if (days != 0) return days + " day" + (days == 1 ? " " : "s ") + " ago";¤		final Messages  mes = Messages.Factory.messages();¤¤        if (days != 0)¤        {¤        	symbol1 = s_days.substring(s_days.length() - 1);¤        	if(s_days.length() > 1)¤        		symbol2 = s_days.substring(s_days.length() - 2, s_days.length() - 1);¤        	else¤        		symbol2 = "";¤            if (days == 1)¤                return mes.get("one.day.ago");¤            else if(symbol1.equals("1") &&  !symbol2.equals("1"))¤                return mes.get("ends.one.days.ago", Arrays.asList("" + days));¤            else if((symbol1.equals("2") || symbol1.equals("3") || symbol1.equals("4")) && !symbol2.equals("1"))¤                return mes.get("two.three.four.days.ago", Arrays.asList("" + days));¤            else	¤                return mes.get("x.days.ago", Arrays.asList("" + days));¤        }¤¤        hours -= days * 24;¤¤        //if (hours != 0) return hours + " hour" + (hours == 1 ? " " : "s ") + "ago";¤¤        if (hours != 0)¤        {¤        	symbol1 = s_hours.substring(s_hours.length() - 1);¤        	if(s_hours.length() > 1)¤        		symbol2 = s_hours.substring(s_hours.length() - 2, s_hours.length() - 1);¤        	else¤        		symbol2 = "";¤            ¤        	if (hours == 1)¤                return mes.get("one.hour.ago");¤            else if(symbol1.equals("1") &&  !symbol2.equals("1"))¤                return mes.get("ends.one.hours.ago", Arrays.asList("" + hours));¤            else if((symbol1.equals("2") || symbol1.equals("3") || symbol1.equals("4")) && !symbol2.equals("1"))¤                return mes.get("two.three.four.hours.ago", Arrays.asList("" + hours));¤            else¤                return mes.get("x.hours.ago", Arrays.asList("" + hours));¤        }¤¤        mins -= (days * 24 + hours) * 60;¤¤        //if (mins != 0) return mins + " min" + (mins == 1 ? " " : "s ") + "ago";¤        if (mins != 0)¤        {¤        	symbol1 = s_mins.substring(s_mins.length() - 1);¤        	if(s_mins.length() > 1)¤        		symbol2 = s_mins.substring(s_mins.length() - 2, s_mins.length() - 1);¤        	else¤        		symbol2 = "";¤        	¤            if (mins == 1)¤                return mes.get("one.min.ago");¤            else if(symbol1.equals("1") &&  !symbol2.equals("1"))¤                return mes.get("ends.one.mins.ago", Arrays.asList("" + mins));¤            else if((symbol1.equals("2") || symbol1.equals("3") || symbol1.equals("4")) && !symbol2.equals("1"))¤                return mes.get("two.three.four.mins.ago", Arrays.asList("" + mins));¤            else¤                return mes.get("x.mins.ago", Arrays.asList("" + mins));¤        }¤¤        return mes.get("less.than.one.min");¤    }¤   ¤    private String getWhereInQueryPart (Item cur) {¤    	if (cur.getId().equals("code_entities") || cur.getId().equals("not_code_entities")) {¤    		//return "SELECT l.labelid FROM label l WHERE l.name like 'code_%'";¤    		return "WHERE cl.label.name LIKE 'code_%'";¤    	}¤    	List<String> labels = cur.getFilterLabels();¤    	if (labels == null || labels.size() == 0) {¤    		return null;¤    	}¤    	String ret = "";¤		for (Iterator<String> ls = labels.iterator(); ls.hasNext();) {¤			String name = ls.next();¤			com.atlassian.confluence.labels.Label l = ContainerManager.Factory.get().getLabelManager().getLabel(name);¤			if (l != null) {¤				if (ret.length() > 0) {¤					ret += ",";¤				}¤				ret += l.getId();¤			}¤		}¤		return ret;¤    }¤    ¤    private boolean doHasItemsQuery (String labelsInString, String spacesInString)  throws Exception {¤    	Session session = org.springframework.orm.hibernate.SessionFactoryUtils.getSession(ContainerManager.Factory.get().getSessionFactory(), true);¤    	Query q;¤    	if (spacesInString.length() > 0) {¤        	q = session.createQuery(¤        		"SELECT cl.id"¤        		+ " FROM Labelling as cl, SpaceContentEntityObject as sceo, Space space"¤        		+ ((labelsInString.startsWith("WHERE")) ? " " + labelsInString: " WHERE cl.label.id IN (" + labelsInString + ")")¤        		+ " AND cl.content = sceo"¤        		+ " AND sceo.space = space"¤        		+ " AND space.id IN (" + spacesInString + ")"¤        	);¤    	} else {¤        	q = session.createQuery(¤        		"SELECT cl.id"¤        		+ " FROM Labelling as cl"¤        		+ ((labelsInString.startsWith("WHERE")) ? " " + labelsInString: " WHERE cl.label.id IN (" + labelsInString + ")")¤        	);¤    	}¤    	//Logs.LOG_D(q.getQueryString());¤    	q.setMaxResults(1);¤    	q.setCacheable(true);¤    	Logs.LOG_W("doHasItemsQuery::q.list().size()=" + q.list().size());¤    	return (q.list().size() > 0);¤    }¤    ¤    private List<Item> filtrateItems (List<Item> items, List<Space> dashboardSpaces) throws Exception {¤    	List<Item> ret = new ArrayList<Item> ();¤		String spacesInString = spacesListToQueryString(dashboardSpaces);¤		long startQueryTime1 = System.currentTimeMillis();		¤		boolean processCodeEnities = false;¤		boolean hasCodeEnities = false;¤		for (Iterator<Item> it = items.iterator(); it.hasNext();) {¤			Item cur = it.next();¤			String labelsInString = getWhereInQueryPart (cur);¤			if (labelsInString == null) {¤				ret.add(cur);¤				continue;¤			}¤			if (labelsInString.length() == 0) {¤				continue;¤			}¤			if (cur.getId().equals("code_entities") || cur.getId().equals("not_code_entities")) {¤				if (false == processCodeEnities) {¤					hasCodeEnities = doHasItemsQuery (labelsInString, spacesInString);¤					processCodeEnities = true;¤				}¤				if (hasCodeEnities) {¤					ret.add(cur);¤				}¤			} else {¤				long startQueryTime4 = System.currentTimeMillis();		¤				if (doHasItemsQuery (labelsInString, spacesInString)) {¤					ret.add(cur);¤				}¤				Logs.LOG_D ("GlobalHelper::filtrateItems::doHasItemsQuery 2 " + (System.currentTimeMillis() - startQueryTime4) + "ms spaceKeys=" + spacesInString + " labelsInString=" + labelsInString);¤			}¤		}			¤		Logs.LOG_D ("GlobalHelper::filtrateItems:: " + (System.currentTimeMillis() - startQueryTime1) + "ms");¤    	return ret;¤    }¤    ¤	static private String spacesListToQueryString (List<com.atlassian.confluence.spaces.Space> ar) {¤		StringBuilder ret = new StringBuilder();¤		if (ar == null) {¤			return ret.toString();¤		}¤		for (Iterator<com.atlassian.confluence.spaces.Space> it = ar.iterator(); it.hasNext();) {¤			if (ret.length() > 0) {¤				ret.append(",");¤			}¤			ret.append(it.next().getId());¤		}¤		return ret.toString();¤	}¤¤	private String linkToPageInTooltip (long pageId) {¤		if (ContainerManager.Factory.get().getPageManager().getAbstractPage(pageId) == null) {¤			return "pages/viewpage.action?pageId=" + pageId;			¤		}		¤		return ContainerManager.Factory.get().getPageManager().getAbstractPage(pageId).getUrlPath();¤	}¤	¤	private String localeString (String key) {¤		return ru.garant.shared.GCI.I18N.Messages.Factory.messages().get(key);¤	}¤	¤	public String helpLink(long helpPageId, String i18nId) {¤		final String icon = IconSelectorInVelocity.getTypeIcon("forgui_help").toHtml();¤		final String template = "<br/><div style=\"margin-top:5px; height:15px\">%s&nbsp;<a href=\"%s\">%s</a></div>";¤		return String.format(template, icon, linkToPageInTooltip(helpPageId), localeString(i18nId));¤	}¤	¤	private ru.garant.MDProcess.ConfluencePlugins.GarantProfileSupport.ProfileVelocityContextPlugin profileOptions = null; ¤	¤	public String getHelpTooltipJs(String key) {¤		if(profileOptions == null)¤			profileOptions = new ru.garant.MDProcess.ConfluencePlugins.GarantProfileSupport.ProfileVelocityContextPlugin ();¤¤		if(profileOptions.get("FlagVisibleTooltips").equals("true"))¤			return renderTooltipJs(getTooltipMap().get(key), ", STICKY, true, WIDTH, -450, PADDING, 5, CLICKCLOSE, true, DELAY, 1000, OFFSETX, 5, OFFSETY, 15");¤		else ¤			return "";¤	}¤	¤	public String getHelpTooltip(String textTooltip) {¤		return renderTooltip(textTooltip, ", STICKY, true, WIDTH, -350, PADDING, 5, CLICKCLOSE, true, DELAY, 1000, OFFSETX, 5, OFFSETY, 5");¤	}¤¤	public String renderTooltip(String content, String attributes) {¤		final String template = "Tip('%s'%s);";¤		return String.format(template, content, attributes);¤	}¤¤	public String renderTooltipJs(String content, String attributes) {¤		final String template = "Tip('%s'%s);";¤		return String.format(template, StringEscapeUtils.escapeHtml(content), attributes);¤	}¤	¤	private static Map<String, String> tooltipMap_ = null;¤	¤	private Map<String, String> getTooltipMap () {¤		if (tooltipMap_ == null) {¤			synchronized (GlobalHelper.class) {¤				if (tooltipMap_ == null) {¤					tooltipMap_ = getTooltipMapImpl();¤				}¤			}¤		}¤		return tooltipMap_;¤	}¤	¤	private Map<String, String> getTooltipMapImpl () {¤		Map<String, String> ret = new ConcurrentHashMap<String, String> ();¤		ret.put(¤			"filterpanel.dashboard"¤			, localeString ("filterpanel.dashboard.1")¤				+ " " + localeString ("filterpanel.dashboard.2")¤				+ " " + localeString ("filterpanel.dashboard.3")¤				+ helpLink(13238641, "filterpanel.dashboard.4") // <a href=&quot;" + linkToPageInTooltip(13238641) + "&quot;>" + localeString ("filterpanel.dashboard.4") + "</a>"¤		);¤		ret.put(¤			"ACTIVE"¤			, localeString ("dashboard.active.discussions.1")¤				+ " " + localeString ("dashboard.active.discussions.2")¤				+ helpLink(10174, "dashboard.active.discussions.3") //<a href=&quot;" + linkToPageInTooltip(10174) + "&quot;>" + localeString ("dashboard.active.discussions.3") + "</a>"¤		);¤		ret.put(¤			"DEAD"¤			, localeString ("dashboard.dead.discussions.1")¤				+ " " + localeString ("dashboard.dead.discussions.2")¤				+ " " + localeString ("dashboard.dead.discussions.3")¤				+ " " + localeString ("dashboard.dead.discussions.4")¤				+ helpLink(10174, "dashboard.dead.discussions.5") //<a href=&quot;" + linkToPageInTooltip(10174) + "&quot;>" + localeString ("dashboard.dead.discussions.5") + "</a>"¤		);¤		ret.put(¤			"CLOSE"¤			, localeString ("dashboard.close.discussions.1")¤				+ " " + localeString ("dashboard.close.discussions.2")¤				+ " " + localeString ("dashboard.close.discussions.3")¤				+ helpLink(10174, "dashboard.close.discussions.4") //<a href=&quot;" + linkToPageInTooltip(10174) + "&quot;>" + localeString ("dashboard.close.discussions.4") + "</a>"¤		);¤		ret.put(¤			"RECENTLY"¤			, localeString ("dashboard.recently.discussions.1") ¤				+ " " + localeString ("dashboard.recently.discussions.2")¤				+ helpLink(295023, "dashboard.recently.discussions.3") //<a href=&quot;" + linkToPageInTooltip(295023) + "&quot;>" + localeString ("dashboard.recently.discussions.3") + "</a>"¤		);¤		ret.put(¤			"dashboard.discussions.commands.1"¤			, localeString ("dashboard.discussions.commands.1.1")¤				+ " " + localeString ("dashboard.discussions.commands.1.2")¤		);¤		ret.put(¤			"discussion.markasread"¤			, localeString ("discussion.markasunread")¤		);¤		ret.put(¤			"discussion.markasunread"¤			, localeString ("discussion.markasread")¤		);¤		ret.put(¤			"dashboard.tasks.title"¤			, localeString ("dashboard.tasks.title.1") ¤				+ " " + localeString ("dashboard.tasks.title.2")¤				+ helpLink(13240226, "dashboard.tasks.title.3") //<a href=&quot;" + linkToPageInTooltip(13240226) + "&quot;>" + localeString ("dashboard.tasks.title.3") + "</a>"¤		);		¤		ret.put(¤			"dashboard.tasks.activetask"¤			, localeString ("dashboard.tasks.activetask.1") ¤				+ " " + localeString ("dashboard.tasks.activetask.2")¤				+ helpLink(12185, "dashboard.tasks.activetask.3") //<a href=&quot;" + linkToPageInTooltip(12185) + "&quot;>" + localeString ("dashboard.tasks.activetask.3") + "</a>"¤		);		¤		ret.put(¤			"dashboard.tasks.order"¤			, localeString ("dashboard.tasks.order.1") ¤				+ " " + localeString ("dashboard.tasks.order.2")¤				+ helpLink(53182711, "dashboard.tasks.order.3") //<a href=&quot;" + linkToPageInTooltip(53182711) + "&quot;>" + localeString ("dashboard.tasks.order.3") + "</a>"¤		);¤		ret.put(¤			"dashboard.tasks.assigned"¤			, localeString ("dashboard.tasks.assigned.1") ¤				+ " " + localeString ("dashboard.tasks.assigned.2")¤				+ " " + localeString ("dashboard.tasks.assigned.3")¤				+ helpLink(13240226, "dashboard.tasks.assigned.4") //<a href=&quot;" + linkToPageInTooltip(13240226) + "&quot;>" + localeString ("dashboard.tasks.assigned.4") + "</a>"¤		);¤		ret.put(¤			"dashboard.tasks.waited"¤			, localeString ("dashboard.tasks.waited.1")¤		);¤		ret.put(¤			"dashboard.tasks.own"¤			, localeString ("dashboard.tasks.own.1") ¤				+ " " + localeString ("dashboard.tasks.own.2")¤				+ " " + localeString ("dashboard.tasks.own.3")¤				+ helpLink(13240226, "dashboard.tasks.own.4") //<a href=&quot;" + linkToPageInTooltip(13240226) + "&quot;>" + localeString ("dashboard.tasks.own.4") + "</a>"¤		);		¤		ret.put(¤			"dashboard.tasks.ownproject"¤			, localeString ("dashboard.tasks.ownproject.1") ¤				+ " " + localeString ("dashboard.tasks.ownproject.2")¤				+ " " + localeString ("dashboard.tasks.ownproject.3")¤				+ helpLink(13240226, "dashboard.tasks.ownproject.4") //<a href=&quot;" + linkToPageInTooltip(13240226) + "&quot;>" + localeString ("dashboard.tasks.ownproject.4") + "</a>"¤		);		¤		ret.put(¤			"dashboard.tasks.oncontrol"¤			, localeString ("dashboard.tasks.oncontrol.1") ¤				+ " " + localeString ("dashboard.tasks.oncontrol.2")¤				+ " " + localeString ("dashboard.tasks.oncontrol.3")¤				+  helpLink(13240226, "dashboard.tasks.oncontrol.4") //<a href=&quot;" + linkToPageInTooltip(13240226) + "&quot;>" + localeString ("dashboard.tasks.oncontrol.4") + "</a>"¤		);		¤		ret.put(¤			"WARNING_REQUEST"¤			, localeString ("dashboard.warning.1") ¤				+ " " + localeString ("dashboard.warning.2")¤				+ " " + localeString ("dashboard.warning.3")¤				+ helpLink(90446965, "dashboard.warning.4") //<a href=&quot;" + linkToPageInTooltip(90446965) + "&quot;>" + localeString ("dashboard.warning.4") + "</a>"¤		);	¤		/*ret.put(¤			"WARNING_REQUEST"¤			, "AAA" ¤				+ "<br>" + "BBB"¤				+ "<br>" + "CCC"¤				+ "<br><a href=&quot;" + linkToPageInTooltip(90446965) + "&quot;>" + "DDD" + "</a>"¤		);*/¤		¤		ret.put(¤			"viewpage.tooltip.type.request"¤			, localeString ("viewpage.tooltip.type.request.1") ¤				+  helpLink(12681, "viewpage.tooltip.type.request.2") //<a href=&quot;" + linkToPageInTooltip(13240226) + "&quot;>" + localeString ("dashboard.tasks.oncontrol.4") + "</a>"¤		);¤		¤		ret.put(¤			"viewpage.tooltip.type.contract"¤			, localeString ("viewpage.tooltip.type.contract.1")¤				+ "<ul>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.type.contract.2.1") + "</em>"¤				+ localeString ("viewpage.tooltip.type.contract.2.2")¤				+ "</li>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.type.contract.3.1") + "</em>"¤				+ localeString ("viewpage.tooltip.type.contract.3.2")¤				+ "</li>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.type.contract.4.1") + "</em>"¤				+ localeString ("viewpage.tooltip.type.contract.4.2")¤				+ "</li>"¤				+ "</ul>"¤				+  helpLink(114460651, "viewpage.tooltip.type.contract.5") //<a href=&quot;" + linkToPageInTooltip(13240226) + "&quot;>" + localeString ("dashboard.tasks.oncontrol.4") + "</a>"¤		);¤		¤		ret.put("viewpage.tooltip.type.case", localeString("viewpage.tooltip.type.case.1"));¤		¤		ret.put(¤			"viewpage.tooltip.userprop"¤			, localeString ("viewpage.tooltip.userprop.1") ¤				+  helpLink(124944941, "viewpage.tooltip.userprop.2") //<a href=&quot;" + linkToPageInTooltip(13240226) + "&quot;>" + localeString ("dashboard.tasks.oncontrol.4") + "</a>"¤		);¤		¤		ret.put(¤			"viewpage.tooltip.linkedto"¤			, localeString ("viewpage.tooltip.linkedto.1")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.importance.request"¤			, localeString ("viewpage.tooltip.importance.request.1")¤				+ "<ul>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.importance.request.2.1") + "</em>"¤				+ localeString ("viewpage.tooltip.importance.request.2.2")¤				+ "</li>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.importance.request.3.1") + "</em>"¤				+ localeString ("viewpage.tooltip.importance.request.3.2")¤				+ "</li>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.importance.request.4.1") + "</em>"¤				+ localeString ("viewpage.tooltip.importance.request.4.2")¤				+ "</li>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.importance.request.5.1") + "</em>"¤				+ localeString ("viewpage.tooltip.importance.request.5.2")¤				+ "</li>"¤				+ "</ul>"¤		);¤		¤		ret.put(¤			"viewpage.tooltip.importance.contract"¤			, localeString ("viewpage.tooltip.importance.contract.1")¤				+ "<ul>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.importance.contract.2.1") + "</em>"¤				+ localeString ("viewpage.tooltip.importance.contract.2.2")¤				+ "</li>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.importance.contract.3.1") + "</em>"¤				+ localeString ("viewpage.tooltip.importance.contract.3.2")¤				+ "</li>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.importance.contract.4.1") + "</em>"¤				+ localeString ("viewpage.tooltip.importance.contract.4.2")¤				+ "</li>"¤				+ "<li>"¤				+ "<em>" + localeString ("viewpage.tooltip.importance.contract.5.1") + "</em>"¤				+ localeString ("viewpage.tooltip.importance.contract.5.2")¤				+ "</li>"¤				+ "</ul>"¤		);¤		¤		ret.put(¤			"viewpage.tooltip.state.request"¤			, localeString ("viewpage.tooltip.state.request.1")¤				+  helpLink(12187, "viewpage.tooltip.state.request.2")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.state.contract"¤			, localeString ("viewpage.tooltip.state.contract.1")¤				+  helpLink(114460651, "viewpage.tooltip.state.contract.2")¤		);¤		¤		ret.put(¤				"viewpage.tooltip.contract.price"¤				, localeString ("viewpage.tooltip.contract.price")¤			);¤¤		ret.put(¤			"viewpage.tooltip.executor"¤			, localeString ("viewpage.tooltip.executor.1")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.developer"¤			, localeString ("viewpage.tooltip.developer.1")¤				+  helpLink(53182711, "viewpage.tooltip.developer.2")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.visaman"¤			, localeString ("viewpage.tooltip.visaman.1")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.plan"¤			, localeString ("viewpage.tooltip.plan.1")¤				+  helpLink(124944855, "viewpage.tooltip.plan.2")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.finishdate"¤			, localeString ("viewpage.tooltip.finishdate.1")¤				+  helpLink(122674695, "viewpage.tooltip.finishdate.2")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.ismaxpriority"¤			, localeString ("viewpage.tooltip.ismaxpriority.1")¤				+  helpLink(53182711, "viewpage.tooltip.ismaxpriority.2")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.tester"¤			, localeString ("viewpage.tooltip.tester.1")¤		);¤		¤		ret.put(¤			"viewpage.tooltip.release"¤			, localeString ("viewpage.tooltip.release.1")¤				+  helpLink(53182711, "viewpage.tooltip.release.2")¤		);¤		¤		ret.put(¤			"dashboard.discussions.commands.1.visible"¤			, localeString ("dashboard.discussions.commands.1.visible")¤		);¤		¤		ret.put(¤			"dashboard.discussions.commands.1.all"¤			, localeString ("dashboard.discussions.commands.1.all")¤		);¤		¤		ret.put(¤				"viewpage.tooltip.docissuer"¤				, localeString ("viewpage.tooltip.docissuer")¤			);¤¤		ret.put(¤				"viewpage.tooltip.document.type"¤				, localeString ("viewpage.tooltip.document.type")¤			);¤		ret.put(¤				"viewpage.tooltip.document.number"¤				, localeString ("viewpage.tooltip.document.number")¤			);¤		ret.put(¤				"viewpage.tooltip.document.date"¤				, localeString ("viewpage.tooltip.document.date")¤			);¤		¤		ret.put(¤				"viewpage.tooltip.registration.number"¤				, localeString ("viewpage.tooltip.registration.number")¤			);¤		ret.put(¤				"viewpage.tooltip.registration.date"¤				, localeString ("viewpage.tooltip.registration.date")¤			);¤		ret.put(¤				"viewpage.tooltip.restricted.status"¤				, localeString ("viewpage.tooltip.restricted.status")¤			);¤		ret.put(¤				"viewpage.tooltip.copies"¤				, localeString ("viewpage.tooltip.copies")¤			);¤		ret.put(¤				"viewpage.tooltip.additional.docissuer"¤				, localeString ("viewpage.tooltip.additional.docissuer")¤			);¤		ret.put(¤				"viewpage.tooltip.additional.document.number"¤				, localeString ("viewpage.tooltip.additional.document.number")¤			);¤		ret.put(¤				"viewpage.tooltip.document.name"¤				, localeString ("viewpage.tooltip.document.name")¤			);¤		return ret;¤	}¤	¤	public String getUserAtWorkTime() {¤		Calendar cur = Calendar.getInstance();¤		cur.set(Calendar.HOUR_OF_DAY, 5);¤		cur.set(Calendar.MINUTE, 0);¤		cur.set(Calendar.SECOND, 0);¤		cur.set(Calendar.MILLISECOND, 0);¤		return getUserAtWorkTime(AuthenticatedUserThreadLocal.getUsername(), cur.getTimeInMillis(), true);¤	}¤	¤	public String getUserAtWorkTime(String userName, long startTime, boolean workTimeWithSpecialText) {¤		¤		long l = EventsLogManager.Factory.get().getFullStateTimes(¤				userName¤				, startTime¤				, EventType.START_WORK¤				, EventType.STOP_WORK¤			);¤		long m = l / 1000 / 60;¤		long h = m / 60;¤		m = m % 60;¤		if(workTimeWithSpecialText){¤			return (h != 0) ? h + Messages.Factory.messages().get("sessionvelocitycontext.hours") + ":" + m + Messages.Factory.messages().get("sessionvelocitycontext.minutes") : m + Messages.Factory.messages().get("sessionvelocitycontext.min");¤		}else{¤			if(h == 0 && m == 0){¤				return "00:00";¤			}¤			String minutes = (m < 10)? "0" + String.valueOf(m) : String.valueOf(m);¤			String hours = (h < 10)? "0" + String.valueOf(h) : String.valueOf(h);¤			return (h != 0) ? hours + ":" + minutes : "00:" + minutes;¤		}¤	}¤¤	public String getUserAtWorkTimeInMonth () {¤		EventsLogManager eventsLogManager = EventsLogManager.Factory.get();¤		String userId = AuthenticatedUserThreadLocal.getUsername();¤		long firstMonthDayTime = getFirstDayOfMonthTime();¤		¤		long totalActiveDaysInMonth = eventsLogManager.getActiveDays(userId, firstMonthDayTime);¤		¤		long activeTimeInMonth = ¤			eventsLogManager.getFullStateTimes(userId, firstMonthDayTime, EventType.START_WORK, EventType.STOP_WORK);¤		long activeHoursInMonth = DateUtils.getTimeInHours(activeTimeInMonth);¤		long activeDaysInMonth = activeHoursInMonth / 8;¤		¤		return activeDaysInMonth + localeString("sessionvelocitycontext.day.of") + " " + totalActiveDaysInMonth + localeString("sessionvelocitycontext.day");¤	}¤	¤	public boolean isUserAtWork() {¤		if (EventType.START_WORK == EventsLogManager.Factory.get().whatIsLastUserEvent(¤				AuthenticatedUserThreadLocal.getUsername()¤				, Arrays.asList(new EventType[]{EventType.START_WORK, EventType.STOP_WORK})¤			)) {¤			return true;¤		}¤		return false;¤	}¤	¤	private long getFirstDayOfMonthTime () {¤		Calendar time = Calendar.getInstance();¤		time.set(Calendar.DAY_OF_MONTH, 1);¤		time.set(Calendar.HOUR_OF_DAY, 0);¤		time.set(Calendar.MINUTE, 0);¤		time.set(Calendar.SECOND, 0);¤		time.set(Calendar.MILLISECOND, 0);¤		return time.getTimeInMillis();¤	}	¤	¤	public String getText(String key){¤		final Messages  mes = Messages.Factory.messages();¤		return mes.get(key);¤	}¤	¤	public String getText(final String key, final  java.util.List<String> templateParams){¤		final Messages  mes = Messages.Factory.messages();¤		return mes.get(key, templateParams);¤	}¤	¤	public static boolean isMDPServer () {¤		try {¤			return "mdp.garant.ru".equals(InetAddress.getLocalHost().getCanonicalHostName());¤		} catch (Exception ex) {¤			Logs.LOG_SEX(ex);¤		}¤		return false;¤	}¤	¤	public static Calendar createCalendar (Date date) {¤		Calendar result = Calendar.getInstance();¤		result.setTime(date);¤		return result;¤	}¤	// âîçâðàùàåò íîâîñòè â çàâèñèìîñòè îò òèïà íîâîñòè ñîçäàííûå äàííûì ïîëüçîâàòåëåì¤	public static List<BlogPost> getTypedBlogposts(String nameUser, String labelNameBlogpost){¤		String sQueryPrevBlogPost = "select content from BlogPost as content where "¤			+ "content.id in (select l.content.id from Labelling as l where l.label.name='" + labelNameBlogpost + "') "¤			+ "and content.creatorName=\'" + nameUser + "\' "¤			+ "and content.contentStatus='current' and content.originalVersion is null "¤			+ "order by content.creationDate desc";¤		¤		long startH = System.currentTimeMillis();¤		Logs.LOG_D("START execute list query: " + sQueryPrevBlogPost);¤		¤		List<BlogPost> needBlogPosts = (List<BlogPost>) (List<?>) QueryHelper.getListByQuery(sQueryPrevBlogPost, 1);¤		long resH = System.currentTimeMillis() - startH;¤		Logs.LOG_D("FINISH Hibernate execute in " + resH + "ms");¤¤		return needBlogPosts;¤	}¤	//ïðîâåðêà äâóõ äàò íà èäåíòè÷íîñòü ñ òî÷íîñòüþ äî äíÿ¤	public static boolean isSameDay(Date datePrev, Date dateNext) {¤		Calendar calPrevDate = GlobalHelper.createCalendar(datePrev);¤		Calendar calCurrentDate = GlobalHelper.createCalendar(dateNext);¤¤		return calPrevDate.get(Calendar.DAY_OF_MONTH) == calCurrentDate¤				.get(Calendar.DAY_OF_MONTH)¤				&& calPrevDate.get(Calendar.MONTH) == calCurrentDate.get(Calendar.MONTH)¤				&& calPrevDate.get(Calendar.YEAR) == calCurrentDate.get(Calendar.YEAR);¤	}¤¤	public static Page createPage(String title, long parentId, String creatorName, Date creationDate, String spaceKey, String[] labelNames){¤		Page p = createEntityPage(title, parentId, creatorName, creationDate, spaceKey, labelNames, null, null);¤		return p;¤	}¤¤	public static Page createPageWithContentAndComment(String title, long parentId, String creatorName, Date creationDate, String spaceKey, String[] labelNames, String content, Comment comment){¤		Page p = createEntityPage(title, parentId, creatorName, creationDate, spaceKey, labelNames, content, comment);¤		return p;¤	}¤	¤	public static Page createPageWithContent(String title, long parentId, String creatorName, Date creationDate, String spaceKey, String[] labelNames, String content){¤		Page p = createEntityPage(title, parentId, creatorName, creationDate, spaceKey, labelNames, content, null);¤		return p;¤	}	¤¤	public static Page createEntityPage(String title, long parentId, String creatorName, Date creationDate, String spaceKey, String[] labelNames, String content, Comment comment){¤		Page p = new Page ();¤		Space space = ContainerManager.Factory.get().getSpaceManager().getSpace(spaceKey);¤		if(space == null){¤			return null;¤		}¤		p.setTitle(title);¤		p.setSpace(space);¤		Page parent = ContainerManager.Factory.get().getPageManager().getPage(parentId);¤		parent.addChild(p);¤		p.setParentPage(parent);¤		¤		if(!StringUtils.isEmpty(content)){¤			p.setContent(content);¤		}¤¤		ContainerManager.Factory.get().getPageManager().saveContentEntity(p, null);¤		if(comment != null){¤			comment.setPage(p);¤			ContainerManager.Factory.get().getCommentManager().saveContentEntity(comment, null);¤		}¤		if(labelNames != null && labelNames.length > 0){¤			for(String labelName : labelNames){¤				addLabelInAbstractPage(p, labelName);¤			}	¤		}			¤		return p;¤	}¤¤	public static void addLabelInAbstractPage(AbstractPage p, String labelName){¤		if(p == null){¤			return;¤		}¤		¤		Label label = ContainerManager.Factory.get().getLabelManager().getLabel(labelName);¤		if(label == null){¤			label = new Label(labelName);¤		}¤		ContainerManager.Factory.get().getLabelManager()¤				.addLabel(p, label);¤¤	}¤	¤	public static BlogPost createNews(String title, String creatorName, Date creationDate, String spaceKey, String[] labelNames){¤		BlogPost p = new BlogPost ();¤		Space space = ContainerManager.Factory.get().getSpaceManager().getSpace(spaceKey);¤		if(space == null){¤			return null;¤		}¤		¤		p.setTitle(title);¤		p.setCreatorName(creatorName);¤		p.setCreationDate(creationDate);¤		p.setLastModificationDate(creationDate);¤		p.setLastModifierName(creatorName);¤		p.setContentStatus("current");¤		p.setSpace(space);¤		try{¤			getSession().save (p);¤			getSession().flush();¤			if(labelNames != null && labelNames.length > 0){¤				for(String labelName : labelNames){¤					addLabelInAbstractPage(p, labelName);¤				}¤			}¤		}catch(Exception ex){¤			Logs.LOG_E("GlobalHelper : createNews : Unable to create blogpost. " + ex.getMessage());¤			return null;¤		}¤		return p;¤	}¤¤	private static Session getSession () {¤		Session session = SessionFactoryUtils.getSession(ContainerManager.Factory.get().getSessionFactory(),¤														false);¤		return session;¤	}¤	¤	public static Attachment getAttachmentFromConfigPage(String attachment_name){¤		Label label = ContainerManager.Factory.get().getLabelManager().getLabel("confluence_config");¤		if(label == null){¤			return null;¤		}	¤		List<ContentEntityObject> pages = (List<ContentEntityObject>)ContainerManager.Factory.get().getLabelManager().getContent(label);¤		if(!CollectionUtils.isNotEmpty(pages) || pages.size() != 1){¤			return null;¤		}¤		Page page = (Page)pages.get(0);¤		List<Attachment> attaches = page.getAttachments();¤		if (CollectionUtils.isEmpty(attaches)) {¤			return null;¤		}¤		for (Attachment attach : attaches) {¤			if (StringUtils.isNotEmpty(attachment_name) && attachment_name.contains(attach.getDisplayTitle())) {¤				return attach;¤			}¤		}¤		return null;¤	}¤	¤	public final static class AttrContainer {¤		public String number_ = null; ¤		public String type_ = null; ¤		public Date date_ = null;¤		public String ogv_ = null; ¤	}¤	¤	public static AttrContainer  getFromMatchFileDateAndNumber(final String pattern, String fullFileName, boolean isFile){¤		final String fileName = fullFileName;¤		final ForthAdapter forth = new SfiAdapter();¤		final class MatchResult { ¤			Boolean var = false;¤		};¤		final MatchResult mr = new MatchResult();¤		final AttrContainer ac = new AttrContainer();¤		¤		forth.addSystemWord("find", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				String var = forth.stackPopString();¤				Pattern p = Pattern.compile(var);¤				Matcher m = p.matcher(fileName);¤				if (m.find()) {¤					for (int i = 1; i <= m.groupCount(); i++) {¤						forth.stackPushString(StringUtils.isEmpty(m.group(i)) ? "" : m.group(i));¤					}¤				} else {¤					for (int i = 1; i < m.groupCount(); i++) {¤						forth.stackPushString("");¤					}¤				}¤				return true;¤			}¤		});¤		¤		forth.addSystemWord("number", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				String number = forth.stackPopString();¤				if(number == null){¤					number = "";¤				}¤				ac.number_ = number;¤				return true;¤			}¤		});¤		¤		forth.addSystemWord("normilize", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				String number = forth.stackPopString();¤				if(number == null){¤					number = "";¤				}¤				forth.stackPushString(number.replace(")", "/"));¤				return true;¤			}¤		});¤¤		forth.addSystemWord("date", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				String template = forth.stackPopString();¤				String date = forth.stackPopString();¤				try {¤					if(StringUtils.isEmpty(date)){¤						ac.date_ = null;¤					}else{¤						ac.date_ = new SimpleDateFormat(template).parse(date);¤					}¤				} catch (ParseException e) {¤					Logs.LOG_E("GlobalHelper::getFromMatchFileDateAndNumber::");¤					Logs.LOG_SEX(e);¤				}¤				return true;¤			}¤		});¤		¤		forth.addSystemWord("type", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				String type = forth.stackPopString();¤				if(type == null){¤					type = "";¤				}¤				ac.type_ = type;¤				return true;¤			}¤		});¤¤		forth.addSystemWord("ogv", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				String ogv = forth.stackPopString();¤				if(ogv == null){¤					ogv = "";¤				}¤				ac.ogv_ = ogv;¤				return true;¤			}¤		});¤¤		forth.addSystemWord("get-number", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				forth.stackPushString(StringUtils.isEmpty(ac.number_) ? "": ac.number_);¤				return true;¤			}¤		});¤¤		forth.addSystemWord("matchEquals", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				String match = forth.stackPopString();¤				String type = forth.stackPopString();¤				if(type.matches(match)){¤					forth.stackPushBoolean(true);¤				}else{¤					forth.stackPushBoolean(false);¤				}¤				return true;¤			}¤		});¤		¤		forth.addSystemWord("match", new SystemWord() {¤			@Override¤			public boolean execWord() {¤				if (mr.var) {¤					forth.stackPushBoolean(false);¤					return true;¤				}¤				¤				String match = forth.stackPopString();¤				Pattern p = Pattern.compile(match);¤				Matcher m = p.matcher(fileName);¤				if(m.matches()){¤					//ïîìåùàåì ãðóïïû â ñòýê¤					for (int i = 1; i <= m.groupCount(); i++) {¤						forth.stackPushString(StringUtils.isEmpty(m.group(i)) ? "" : m.group(i));¤					}¤					¤					mr.var = true;¤					forth.stackPushBoolean(true);¤				}else{¤					forth.stackPushBoolean(false);¤				}¤				return true;¤			}¤		});¤¤		forth.execute(pattern);¤		¤		return ac;¤	}¤	¤	public static boolean isMainServerMDP(){¤		String g = System.getenv("IS_MDP_SERVER");¤		if (StringUtils.isNotEmpty(g) && g.equalsIgnoreCase("1")) {¤			return true;¤		}¤		return false;¤	}¤¤	public static boolean isGardocSimilarIndexingOff(){¤		String g = System.getenv("GARDOC_SIMILAR_INDEXING_OFF");¤		if (StringUtils.isNotEmpty(g) && g.equalsIgnoreCase("1")) {¤			return true;¤		}¤		return false;¤	}¤¤	public static boolean isGardocSupermaximumSyncOff(){¤		String g = System.getenv("GARDOC_SUPERMAXIMIM_SYNC_OFF");¤		if (StringUtils.isNotEmpty(g) && g.equalsIgnoreCase("1")) {¤			return true;¤		}¤		return false;¤	}¤¤	public static boolean isGardocCheckTopicInHD(){¤		String g = System.getenv("GARDOC_CHECK_TOPIC_IN_HD");¤		if (StringUtils.isNotEmpty(g) && g.equalsIgnoreCase("1")) {¤			return true;¤		}¤		return false;¤	}¤¤	public static String unicoded1251ToString (final String s) throws Exception {¤		byte[] ar = new byte[s.length()];¤		for (int i= 0; i < s.length(); i++) {¤			ar[i] = (byte)s.codePointAt(i);¤		}¤		TextExtractor te = TextExtractor.Factory.make (CharsetDetector.Factory.make(), "txt");¤		String st = te.extract(new ByteArrayInputStream(ar));¤		return st;¤	}¤	¤	private static boolean getIsAllowedRequestTypes(Map<String, String> permissionProperties, List<Group> groups, String spaceKey){¤		for(Group group : groups){¤			if(permissionProperties.get("RequestSupport.AllowedRequestTypes." + group.getName() + "_" + spaceKey) != null){¤				return true;¤			}¤		}¤		return false;¤	}¤	¤	public static Map<String, Integer> getCountReleasesByStates(List<String> releasesIds){¤		Map<String, Integer> countReleasesInSpaces = new HashMap<String, Integer>();¤		String ids = "";¤		for(String releasesId : releasesIds){¤			if(StringUtils.isNotEmpty(ids)){¤				ids += ",";¤			}¤			ids += "'" + releasesId + "'";¤		}¤		try {¤			Query query = ContainerManager.Factory.get().getSession().createQuery(¤					"SELECT rel.page.space.key, count(rel.id) FROM ReleaseDAOProxy as rel, Labelling as l"¤					+ " WHERE rel.id = l.content.id"¤					+ " AND l.label.name in (" + ids + ") "¤					+ " group by rel.id"¤				);¤			List<Object> ql = (List<Object>)query.list();¤			for(Object obj : ql){¤				Object[] objs = (Object[]) obj;¤				countReleasesInSpaces.put((String)objs[0], (Integer)objs[1]);¤			}¤		} catch (Exception e) {¤			Logs.LOG_SEX(e);¤		}¤		return countReleasesInSpaces;¤	}¤	¤	private static boolean getIsContractCreator(String username, List<Group> groups, Map<String, String> permissionProperties, String spaceKey){¤		String creators = permissionProperties.get("ContractSupport.CreatorGroups_" + spaceKey);¤		if(StringUtils.isNotEmpty(creators)){¤			for(Group group : groups){¤				if(creators.contains(group.getName())){¤					return true;¤				}¤			}¤		}¤		return false;¤	}¤	¤	public static Map<String, Boolean> getSpacesAttributesFromSpaceAndUser(List<Space> spaces, User user){¤		Logs.LOG_W("start getSpacesAttributesFromSpaceAndUser");¤		Map<String, Boolean> spacesAttributes = new HashMap<String, Boolean>();¤		if(user != null){¤			List<Group> groups = ContainerManager.Factory.get().getUserAccessor().getGroupsAsList(user);¤			Map<String, String> permissionProperties = getBandanaPermissionProperties();¤			boolean isLeader = isLeaderFromHREntity(user.getName());¤			List<String> createPermissions = getCreatePermissions(user.getName(), groups);¤			Map<String, Integer> countReleasesInSpaces = getCountReleasesByStates(Arrays.asList(ReleaseLifeCycle.ST_PLANING.getId(), ReleaseLifeCycle.ST_IMPLEMENTATION.getId()));¤			for(Space space: spaces){¤//ïðîâåðêà ïðàâ íà ñîçäàíèå ñòðàíèöû							¤				boolean canCreatePage = createPermissions.contains(space.getKey() + "_" + SpacePermission.CREATEEDIT_PAGE_PERMISSION);¤				spacesAttributes.put("canCreatePage_" + space.getKey(), canCreatePage);¤//ïðîâåðêà ïðàâ íà ñîçäàíèå íîâîñòåé¤				boolean canCreateBlogpost = createPermissions.contains(space.getKey() + "_" + SpacePermission.EDITBLOG_PERMISSION);¤				spacesAttributes.put("canCreateBlogpost_" + space.getKey(), canCreateBlogpost);¤¤				if(canCreatePage){¤//ïðîâåðêà ïðàâ íà ñîçäàíèå çàïðîñà	è ðåëèçà				¤					if(getRequestCreatePerm(space.getKey(), user.getName(), groups, permissionProperties)){¤						if(getIsDevelopmentManager(permissionProperties, space.getKey(), user.getName(), "RequestSupport")){¤							Integer count  = countReleasesInSpaces.get(space.getKey());¤							spacesAttributes.put("canRelease_" + space.getKey(), (count != null)?(count > 0): false);¤						}else{¤							spacesAttributes.put("canRelease_" + space.getKey(), false);¤						}¤						spacesAttributes.put("canRequest_" + space.getKey(), true);¤					}else{¤						spacesAttributes.put("canRelease_" + space.getKey(), false);¤						spacesAttributes.put("canRequest_" + space.getKey(), false);¤					}¤//ïðîâåðêà ïðàâ íà ñîçäàíèå çàÿâêè		¤					spacesAttributes.put("canContract_" + space.getKey(), getContractCreatePerm(space.getKey(), user.getName(), groups, permissionProperties));¤//ïðîâåðêà ïðàâ íà ñîçäàíèå äåëà					¤					spacesAttributes.put("canCase_" + space.getKey(), getCaseCreatePerm(space.getKey(), user.getName(), groups, permissionProperties));¤//ïðîâåðêà ïðàâ íà ñîçäàíèå êàðòî÷åê¤					spacesAttributes.put("canUvsQuery_" + space.getKey(), getPermCreateUoQuery(space.getKey(), user.getName(), groups, permissionProperties, isLeader));¤					spacesAttributes.put("canCurrentDoc_" + space.getKey(), getPermCreateCurrentDoc(space.getKey(), user.getName(), groups, permissionProperties, isLeader));¤					spacesAttributes.put("canRegionPartnerUvsQuery_" + space.getKey(), getPermCreateRegionQuery(space.getKey(), user.getName(), groups, permissionProperties, isLeader));¤//ïðîâåðêà ïðàâ íà ñîçäàíèå êîðîòêîãî îò÷åòà çàÿâîê					¤					spacesAttributes.put("hasPermContractProtocolReport_" + space.getKey(), getShortReportCreatePerm(space.getKey(), user.getName(), groups, permissionProperties));¤¤					spacesAttributes.put("InActiveRole_" + space.getKey(), getInActiveRole(space.getKey(), user.getName(), groups, permissionProperties));¤					spacesAttributes.put("InExecutionState_" + space.getKey(), getInExecutionState(space.getKey(), permissionProperties));¤¤				}else{¤					spacesAttributes.put("canRelease_" + space.getKey(), false);¤					spacesAttributes.put("canRequest_" + space.getKey(), false);¤					spacesAttributes.put("canContract_" + space.getKey(), false);¤					spacesAttributes.put("canCase_" + space.getKey(), false);¤					spacesAttributes.put("canUvsQuery_" + space.getKey(), false);¤					spacesAttributes.put("canCurrentDoc_" + space.getKey(), false);¤					spacesAttributes.put("canRegionPartnerUvsQuery_" + space.getKey(), false);¤					spacesAttributes.put("hasPermContractProtocolReport_" + space.getKey(), false);¤					spacesAttributes.put("InActiveRole_" + space.getKey(), false);¤					spacesAttributes.put("InExecutionState_" + space.getKey(), false);¤				}¤				if(canCreateBlogpost){¤//ïðîâåðêà ïðàâ íà ñîçäàíèå îò÷åòà					¤					spacesAttributes.put("hasPermNews_" + space.getKey(), getCreatePerm(space.getKey(), permissionProperties, "RequestSupport.News_"));¤//ïðîâåðêà ïðàâ íà ñîçäàíèå îò÷åòà					¤					spacesAttributes.put("hasPermReport_" + space.getKey(), getCreatePerm(space.getKey(), permissionProperties, "RequestSupport.Report_"));¤//ïðîâåðêà ïðàâ íà ñîçäàíèå áðèôèíãà					¤					spacesAttributes.put("hasPermBriefing_" + space.getKey(), getCreatePerm(space.getKey(), permissionProperties, "RequestSupport.Briefing_"));¤//ïðîâåðêà ïðàâ íà ñîçäàíèå ñáîÿ¤					spacesAttributes.put("hasPermFault_" + space.getKey(), getCreatePerm(space.getKey(), permissionProperties, "RequestSupport.Fault_"));¤//ïðîâåðêà ïðàâ íà ñîçäàíèå åæåíåäåëüíîãî îò÷åòà¤					spacesAttributes.put("hasShortTypeReport_" + space.getKey(), getCreatePerm(space.getKey(), permissionProperties, "RequestSupport.ShortTypeReport_"));¤//ïðîâåðêà ïðàâ íà ñîçäàíèå ìåñÿ÷íîãî îò÷åòà äëÿ ðóêîâîäèòåëÿ					¤					spacesAttributes.put("hasPermMonthlyReport_" + space.getKey(), getHasPermissionsMontlyReport(permissionProperties, space, user.getName()));¤					//ïðîâåðêà ïðàâ íà ñîçäàíèå ìåñÿ÷íîãî îò÷åòà äëÿ ðóêîâîäèòåëÿ ÄÏÎ ÓÂÑ¤					spacesAttributes.put("hasPermDpoUvsMonthlyReport_" + space.getKey(), getHasPermissionsDpoUvsMontlyReport(permissionProperties, space, user.getName()));¤//ïðîâåðêà ðóêîâîäèòåëü ëè					¤					spacesAttributes.put("isDevelopmentManager_" + space.getKey(), ¤							getIsDevelopmentManager(permissionProperties, space.getKey(), user.getName(), "RequestSupport")  ¤							|| getIsDevelopmentManager(permissionProperties, space.getKey(), user.getName(), "ContractSupport")¤							|| getIsDevelopmentManager(permissionProperties, space.getKey(), user.getName(), "CaseSupport")¤							|| getIsDevelopmentManager(permissionProperties, space.getKey(), user.getName(), "DocCardSupport")¤					);¤				}else{¤					spacesAttributes.put("hasPermNews_" + space.getKey(), false);¤					spacesAttributes.put("hasPermReport_" + space.getKey(), false);¤					spacesAttributes.put("hasPermBriefing_" + space.getKey(), false);¤					spacesAttributes.put("hasPermFault_" + space.getKey(), false);¤					spacesAttributes.put("hasShortTypeReport_" + space.getKey(), false);¤					spacesAttributes.put("hasPermMonthlyReport_" + space.getKey(), false);¤					spacesAttributes.put("hasPermDpoUvsMonthlyReport_" + space.getKey(), false);¤					spacesAttributes.put("isDevelopmentManager_" + space.getKey(), false);¤				}¤				¤			}¤		}¤		Logs.LOG_W("end getSpacesAttributesFromSpaceAndUser");¤		return spacesAttributes;¤	}¤	¤	private static boolean getInExecutionState(String spaceKey, Map<String, String> permissionProperties){¤		String enabledRequestValue = permissionProperties.get("RequestSupport.Enabled_" + spaceKey);¤		String enabledContractValue = permissionProperties.get("ContractSupport.Enabled_" + spaceKey);¤		String enabledDpoUvsValue = permissionProperties.get("DocCardSupport.Enabled_" + spaceKey);¤		if(¤				enabledRequestValue != null && enabledRequestValue.contains("true") ||¤				enabledContractValue != null && enabledContractValue.contains("true") ||¤				enabledDpoUvsValue != null && enabledDpoUvsValue.contains("true") ¤		){¤			return true;¤		}¤		return false;¤	}¤	¤	private static boolean getInActiveRole(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties){¤		String enabledRequestValue = permissionProperties.get("RequestSupport.Enabled_" + spaceKey);¤		String enabledContractValue = permissionProperties.get("ContractSupport.Enabled_" + spaceKey);¤		String enabledCaseValue = permissionProperties.get("CaseSupport.Enabled_" + spaceKey);¤		String enabledDpoUvsValue = permissionProperties.get("DocCardSupport.Enabled_" + spaceKey);¤		boolean inActiveRole = false;¤		if(enabledRequestValue != null && enabledRequestValue.contains("true")){¤			inActiveRole = inActiveRole || getInActiveRole(permissionProperties, spaceKey, username, groups, "RequestSupport");¤			¤		}¤		if(enabledContractValue != null && enabledContractValue.contains("true")){¤			inActiveRole = inActiveRole || getInActiveRole(permissionProperties, spaceKey, username, groups, "ContractSupport");¤		}¤		if(enabledCaseValue != null && enabledCaseValue.contains("true")){¤			inActiveRole = inActiveRole || getCaseInActiveRole(permissionProperties, spaceKey, username, groups, "CaseSupport");¤		}¤		if(enabledDpoUvsValue != null && enabledDpoUvsValue.contains("true")){¤			inActiveRole = inActiveRole || getDocCardInActiveRole(permissionProperties, spaceKey, username, groups, "DocCardSupport");¤		}¤¤		return inActiveRole;¤	}¤	¤	private static boolean getDocCardInActiveRole(Map<String, String> permissionProperties, String spaceKey, String username, List<Group> groups, String propKey){¤		boolean isInUvsGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "DpoUvsGroup");¤		boolean isDpoUvsLeader = getIsUser(permissionProperties, spaceKey, username, propKey, "DpoUvsLeader");¤		boolean isUoLeader = getIsUser(permissionProperties, spaceKey, username, propKey, "UoLeader");¤		boolean isOdUoLeader = getIsUser(permissionProperties, spaceKey, username, propKey, "OdUoLeader");¤		boolean isRibLeader = getIsUser(permissionProperties, spaceKey, username, propKey, "RibLeader");¤		boolean isInDocsAcceptorsInUOGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "docsAcceptorsInUO");¤		boolean isInQueryPostersGroupInUOGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "queryPostersGroupInUO");¤		boolean isInUvsGroupWhoTransferDocsToUOGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "uvsGroupWhoTransferDocsToUO");¤		boolean isInGardocUoDocPostersGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "gardocUoDocPosters");¤		if(¤				isInUvsGroup ||¤				isDpoUvsLeader ||¤				isUoLeader ||¤				isOdUoLeader ||¤				isRibLeader ||¤				isInDocsAcceptorsInUOGroup ||¤				isInQueryPostersGroupInUOGroup ||¤				isInUvsGroupWhoTransferDocsToUOGroup ||¤				isInGardocUoDocPostersGroup¤		){¤			return true;¤		}¤		return false;¤	}¤	¤	private static boolean getCaseInActiveRole(Map<String, String> permissionProperties, String spaceKey, String username, List<Group> groups, String propKey){¤		boolean isInWorkGroup = getIsInListGroup(spaceKey, groups, permissionProperties, propKey, "WorkGroup");¤		boolean isInDeputyWorkGroup = getIsInListGroup(spaceKey, groups, permissionProperties, propKey, "DeputyWorkGroup");¤		boolean isInCuratorGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "CuratorGroup");¤		boolean isInCcManagementGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "CcManagementGroup");¤		boolean isInUvsManagementGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "UvsManagementGroup");¤		boolean isInDirectorGroup = getIsInGroup(spaceKey, groups, permissionProperties, propKey, "DirectorGroup");¤		if(¤				isInWorkGroup ||¤				isInDeputyWorkGroup ||¤				isInCuratorGroup ||¤				isInCcManagementGroup ||¤				isInUvsManagementGroup ||¤				isInDirectorGroup¤		){¤			return true;¤		}¤		¤		return false;¤	}¤¤	private static boolean getIsInListGroup(String spaceKey, List<Group> groups, Map<String, String> permissionProperties, String propKey, String nameGroup){¤		String groupInBandana = permissionProperties.get(propKey + "." + nameGroup + "_" + spaceKey);¤		if(StringUtils.isNotEmpty(groupInBandana)){¤			for(Group group : groups){¤				if(groupInBandana.contains(group.getName())){¤					return true;¤				}¤			}¤		}¤		return false;¤	}¤¤	private static boolean getInActiveRole(Map<String, String> permissionProperties, String spaceKey, String username, List<Group> groups, String propKey){¤		boolean isRequestDevelopmentManager = getIsDevelopmentManager(permissionProperties, spaceKey, username, propKey);¤		boolean isInDevelopGroup = getIsInDevelopGroup(spaceKey, groups, permissionProperties, propKey);¤		boolean isAnalyst = getIsAnalyst(permissionProperties, spaceKey, username,  propKey);¤		boolean isInAnalystGroup = getIsInAnalystGroup(spaceKey, groups, permissionProperties, propKey);¤		boolean isInSupervisorGroup = getIsInSupervisorGroup(spaceKey, groups, permissionProperties, propKey);¤		boolean isInTesterGroup = getIsInTesterGroup(spaceKey, groups, permissionProperties, propKey);¤		boolean isTestManager = getIsTestManager(permissionProperties, spaceKey, username,  propKey);¤		boolean isTestAnalyst = getIsTestAnalyst(permissionProperties, spaceKey, username,  propKey);¤		if(¤				isRequestDevelopmentManager || ¤				isInDevelopGroup ||¤				isAnalyst ||¤				isInAnalystGroup ||¤				isInSupervisorGroup ||¤				isInTesterGroup ||¤				isTestManager ||¤				isTestAnalyst¤		){¤			return true;¤		}¤		return false;¤	}¤	¤	private static boolean getIsTestManager(Map<String, String> permissionProperties, String spaceKey, String username, String propKey){¤		return getIsUser(permissionProperties, spaceKey, username, propKey, "TestManager");¤	}	¤¤	private static boolean getIsTestAnalyst(Map<String, String> permissionProperties, String spaceKey, String username, String propKey){¤		return getIsUser(permissionProperties, spaceKey, username, propKey, "TestAnalyst");¤	}	¤	¤	private static boolean getIsInTesterGroup(String spaceKey, List<Group> groups, Map<String, String> permissionProperties, String propKey){¤		return getIsInGroup(spaceKey, groups, permissionProperties, propKey, "TestGroup");¤	}¤¤	private static boolean getIsInSupervisorGroup(String spaceKey, List<Group> groups, Map<String, String> permissionProperties, String propKey){¤		return getIsInGroup(spaceKey, groups, permissionProperties, propKey, "SupervisorGroup");¤	}¤	¤	private static boolean getIsAnalyst(Map<String, String> permissionProperties, String spaceKey, String username, String propKey){¤		return getIsUser(permissionProperties, spaceKey, username, propKey, "Analyst");¤	}	¤¤	private static boolean getIsUser(Map<String, String> permissionProperties, String spaceKey, String username, String propKey, String nameUserRole){¤		String userRoleValue = permissionProperties.get(propKey + "." + nameUserRole + "_" + spaceKey);¤		boolean isRole = (userRoleValue == null)?false:userRoleValue.contains(username);¤		if(isRole){¤			return true;¤		}¤		return false;¤	}	¤	¤	private static boolean getIsInAnalystGroup(String spaceKey, List<Group> groups, Map<String, String> permissionProperties, String propKey){¤		return getIsInGroup(spaceKey, groups, permissionProperties, propKey, "AnalystGroup");¤	}¤¤	private static boolean getIsInDevelopGroup(String spaceKey, List<Group> groups, Map<String, String> permissionProperties, String propKey){¤		return getIsInGroup(spaceKey, groups, permissionProperties, propKey, "DevelopmentGroup");¤	}¤	¤	private static boolean getIsInGroup(String spaceKey, List<Group> groups, Map<String, String> permissionProperties, String propKey, String nameGroup){¤		String groupInBandana = permissionProperties.get(propKey + "." + nameGroup + "_" + spaceKey);¤		if(StringUtils.isNotEmpty(groupInBandana)){¤		for(Group group : groups){¤			if(groupInBandana.contains(group.getName())){¤				return true;¤			}¤		}¤		}¤		return false;¤	}¤¤	private static boolean getRequestCreatePerm(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties){¤		String enabledMDCSettingsValue = permissionProperties.get("RequestSupport.Enabled_" + spaceKey);¤		if(¤				enabledMDCSettingsValue != null ¤				&& enabledMDCSettingsValue.contains("true")¤				&& getIsAllowedRequestTypes(permissionProperties, groups, spaceKey)¤		){¤			return true;¤		}¤		return false;¤	}¤	¤	private static boolean getCreatePerm(String spaceKey, Map<String, String> permissionProperties, String propKey){¤		String value = permissionProperties.get(propKey + spaceKey);¤		if( ¤				value != null¤			&& value.contains("true")¤		){¤			return true;¤		}¤		return false;¤	}¤	¤	private static boolean getContractCreatePerm(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties){¤		String enabledContractSettingsValue = permissionProperties.get("ContractSupport.Enabled_" + spaceKey);¤		if(¤				enabledContractSettingsValue != null ¤				&& enabledContractSettingsValue.contains("true")¤				&& getIsContractCreator(username, groups, permissionProperties, spaceKey)¤		){¤			return true;¤		}¤		return false;¤	}¤¤	private static boolean getCaseCreatePerm(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties){¤		String enabledCaseSettingsValue = permissionProperties.get("CaseSupport.Enabled_" + spaceKey);¤		String caseCuratorGroupValue = permissionProperties.get("CaseSupport.CuratorGroup_" + spaceKey);¤		¤		if(¤				enabledCaseSettingsValue != null ¤				&& enabledCaseSettingsValue.contains("true")¤				&& caseCuratorGroupValue != null¤		){¤			for(Group group : groups){¤				if(caseCuratorGroupValue.contains(group.getName())){¤					return true;¤				}¤			}¤		}¤		return false;¤	}¤¤	private static boolean getShortReportCreatePerm(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties){¤		String enabledContractSettingsValue = permissionProperties.get("ContractSupport.Enabled_" + spaceKey);¤		String permFuResponsibleValue = permissionProperties.get("ContractSupport.FuResponsible_" + spaceKey);¤		if(¤				enabledContractSettingsValue != null¤				&& enabledContractSettingsValue.contains("true")¤				&&  permFuResponsibleValue != null¤				&& permFuResponsibleValue.contains(username)¤		){¤			return true;¤		}¤		return false;¤	}¤¤	private static boolean getPermCreateUoQuery(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties, boolean isLeader){¤		return getPermCreateDocCardQuery(spaceKey, username, groups, permissionProperties, isLeader, "DocCardSupport.queryPostersGroupInUO_");¤	}¤	¤	private static boolean getPermCreateCurrentDoc(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties, boolean isLeader){¤		return getPermCreateDocCardQuery(spaceKey, username, groups, permissionProperties, isLeader, "DocCardSupport.gardocUoDocPosters_");¤	}¤¤	private static boolean getPermCreateRegionQuery(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties, boolean isLeader){¤		return getPermCreateDocCardQuery(spaceKey, username, groups, permissionProperties, isLeader, "DocCardSupport.regionPartnersGroups_");¤	}¤¤	private static boolean getPermCreateDocCardQuery(String spaceKey, String username, List<Group> groups, Map<String, String> permissionProperties, boolean isLeader, String propKey){¤		String enabledDoccardSettingsValue = permissionProperties.get("DocCardSupport.Enabled_" + spaceKey);¤		if(enabledDoccardSettingsValue != null¤				&& enabledDoccardSettingsValue.contains("true")){¤			if(isLeader){¤				return true;¤			}¤			String permGroup = permissionProperties.get(propKey + spaceKey);¤			if(StringUtils.isNotEmpty(permGroup)){¤				for(Group group : groups){¤					if(permGroup.contains(group.getName())){¤						return true;¤					}¤				}¤			}¤		}¤		return false;¤	}¤¤	private static boolean getHasPermissionsDpoUvsMontlyReport(Map<String, String> permissionProperties, Space space, String username){¤		String enabledDpoUvsSettingsValue = permissionProperties.get("DocCardSupport.Enabled_" + space.getKey());¤		String dpoUvsLeaderValue = permissionProperties.get("DocCardSupport.DpoUvsLeader_" + space.getKey());¤		if(enabledDpoUvsSettingsValue != null && enabledDpoUvsSettingsValue.contains("true")){¤			if(dpoUvsLeaderValue != null && dpoUvsLeaderValue.contains(username)){¤				return true;¤			}¤		}¤			return false;¤	}¤	¤	private static boolean getHasPermissionsMontlyReport(Map<String, String> permissionProperties, Space space, String username){¤		String enabledMDCSettingsValue = permissionProperties.get("RequestSupport.Enabled_" + space.getKey());¤		if(¤				enabledMDCSettingsValue != null && enabledMDCSettingsValue.contains("true") &&¤				getIsDevelopmentManager(permissionProperties, space.getKey(), username, "RequestSupport") ¤		){¤			return true;¤		}¤		return false;¤		¤	}¤		¤	private static boolean getIsDevelopmentManager(Map<String, String> permissionProperties, String spaceKey, String username, String propKey){¤		String developerValue = permissionProperties.get(propKey + ".DeveloperManager_" + spaceKey);¤		String deputyDeveloperValue = permissionProperties.get(propKey + ".DeputyDeveloperManager_" + spaceKey);¤		boolean isDeveloperLeader = (developerValue == null)?false:developerValue.contains(username);¤		boolean isDeputyDeveloperLeader = (deputyDeveloperValue == null)?false:deputyDeveloperValue.contains(username);¤		if(isDeveloperLeader || isDeputyDeveloperLeader){¤			return true;¤		}¤		return false;¤	}	¤	¤	private static boolean isLeaderFromHREntity(String username){¤		Logs.LOG_W("start isLeaderFromHREntity");¤		String sQuery = ¤				"SELECT (hred.departmentid is not null)" +¤				"FROM gar_hr_entity_data hred " +¤				"WHERE  hred.entity_type='L' and hred.name='" + username + "'";¤		final Boolean[] isLeader = new Boolean[1];¤		isLeader[0] = false;¤		try {¤			final JdbcTemplate template = new JdbcTemplate(new SingleConnectionDataSource(ContainerManager.Factory.get().getSession().connection(), true));¤			template.query(sQuery, new RowCallbackHandler() {¤				public void processRow(ResultSet res) throws SQLException {¤					isLeader[0] = res.getBoolean(1);¤				}				¤			});¤			Logs.LOG_W("end isLeaderFromHREntity");¤			} catch (Exception e) {¤				Logs.LOG_SEX(e);¤			}¤		return isLeader[0];¤	}¤	¤	¤	private static Map<String, String> getBandanaPermissionProperties() {¤		Logs.LOG_W("start getBandanaPermissionProperties");¤		final Map<String, String> permissionProperties = new HashMap<String, String>();¤		String sQuery = ¤				"SELECT b.bandanacontext, b.bandanakey, b.bandanavalue " +¤				"FROM bandana b " +¤				"WHERE (b.bandanakey like 'RequestSupport.%' or b.bandanakey like 'DocCardSupport.%' or b.bandanakey like 'CaseSupport.%' or b.bandanakey like 'ContractSupport.%') and b.bandanavalue != '<list/>' and b.bandanavalue != '<null/>'";¤		try {¤			final JdbcTemplate template = new JdbcTemplate(new SingleConnectionDataSource(ContainerManager.Factory.get().getSession().connection(), true));¤			template.query(sQuery, new RowCallbackHandler() {¤				public void processRow(ResultSet res) throws SQLException {¤					String spaceKey = res.getString(1);¤					String name = res.getString(2);¤					String valueString = res.getString(3);¤					permissionProperties.put(name + "_" + spaceKey, valueString);¤				}				¤			});¤			Logs.LOG_W("end getBandanaPermissionProperties");¤		} catch (Exception e) {¤			Logs.LOG_SEX(e);¤		}¤		return permissionProperties;¤	}¤	¤	private static List<String> getCreatePermissions(String username, List<Group> groups){¤		Logs.LOG_W("start getCreatePermissions");¤		final List<String> permissionProperties = new ArrayList<String>();¤		String permGroups = "";¤		for(Group group : groups){¤			if(StringUtils.isNotEmpty(permGroups)){¤				permGroups += ", ";¤			}¤			permGroups += "'" + group.getName() + "'";¤		}¤		String sQuery = ¤				"SELECT s.spacekey, sp.permtype " +¤				"FROM spaces s, spacepermissions sp " +¤				"WHERE s.spaceid=sp.spaceid and (sp.permtype='EDITSPACE' or sp.permtype='EDITBLOG') and (sp.permusername='"+ username + "' or sp.permgroupname in (" + permGroups + "))";¤		try {¤			final JdbcTemplate template = new JdbcTemplate(new SingleConnectionDataSource(ContainerManager.Factory.get().getSession().connection(), true));¤			template.query(sQuery, new RowCallbackHandler() {¤				public void processRow(ResultSet res) throws SQLException {¤					String spaceKey = res.getString(1);¤					String permtype = res.getString(2);¤					permissionProperties.add(spaceKey + "_" + permtype);¤				}				¤			});¤			Logs.LOG_W("end getCreatePermissions");¤		} catch (Exception e) {¤			Logs.LOG_SEX(e);¤		}¤		return permissionProperties;¤	}¤	¤	private List<Item> addSelections (final List<Item> filtrated_items) throws Exception {¤		ru.garant.MDProcess.ConfluencePlugins.GarantProfileSupport.ProfileVelocityContextPlugin pvcp = new ru.garant.MDProcess.ConfluencePlugins.GarantProfileSupport.ProfileVelocityContextPlugin ();¤		Object filterType = pvcp.get("filter_type");¤		if (null == filterType) {¤			filterType = "all_pages";¤		}¤		boolean hasSelected = false;¤		for (Iterator<Item> it = filtrated_items.iterator(); it.hasNext();) {¤			if (filterType.equals(it.next().getId())) {¤				hasSelected = true;¤				break;¤			}¤		}¤		if (hasSelected == false) {¤			filterType = "all_pages";¤			pvcp.set("filter_type", filterType);¤		}¤		¤		List<Item> finishList = new ArrayList<Item>();¤		for (int i = 0; i < filtrated_items.size(); i++) {¤			Item cur = filtrated_items.get(i);¤			¤			if (filterType.equals(cur.getId())) {¤				hasSelected = true;					¤			}¤			¤			if (cur.getType().equals("radio")) {¤				makeCheckedFilterItem (cur, (String)filterType);¤			} else if (cur.getType().equals("checkbox")) {¤				makeCheckItem (cur, pvcp);¤			} else if ("separator".equals(cur.getType())) {¤				if ((i+1) < filtrated_items.size()) {¤					Item next = filtrated_items.get(i+1);¤					if ("separator".equals(next.getType())) {¤						continue;¤					}¤					if (¤						(i+1) == (filtrated_items.size()-1)¤						&& "radio".equals(next.getType())¤					) {¤						i++;¤						continue;¤					}¤				} else {¤					continue;¤				}¤			}¤			finishList.add(cur);¤		}			¤		return finishList;¤	}¤	¤	// âîçâðàùàåò ïàíåëü äëÿ ôèëüòðàöèè â ÏÓ¤	public List<Item> makeFilterPanelItems () {¤		List<Item> ret = null;¤		long startQueryTime = System.currentTimeMillis();¤		¤		final List<Item> items = ru.garant.MDProcess.ConfluencePlugins.FilterPanel.PreDefinedForm.Factory.make (null, null, "dashboard").getItems();¤		com.atlassian.user.User user = AuthenticatedUserThreadLocal.getUser();¤¤		final List<Space> spaceList = ContainerManager.Factory.get().getSpaceManager().getDashboardSpaces(user, false);¤		if(spaceList.size() == 0)¤			return new ArrayList<Item>();¤¤		List<Item> filtrated_items;¤		try {¤			filtrated_items = filtrateItems (items, spaceList);¤			return filtrated_items;¤		} catch (Exception e) {¤			e.printStackTrace();¤		}¤		¤		return null;¤	}¤	¤	private static LoadingCache<String, List<String>> cache_;¤	¤	public static class TimeLogger {¤		final long start_;¤		public TimeLogger(final String msg) {¤//			Logs.LOG_D(msg);¤			start_ = new Date().getTime();¤		}¤		¤		public void stop (final String msg) {¤			long time = (new Date().getTime()-start_);¤			if(time > 0){¤				Logs.LOG_D(msg + time);¤			}¤		}¤	}¤	¤	public TimeLogger startTimeLog(final String msg){¤		return new TimeLogger (msg);¤	}¤	¤	public static void countObjectLog(String prefix){¤    	ActionContext context = ActionContextThreadLocalFactory.Factory.get().getContext();¤    	if(context == null){¤    		return;¤    	}¤    	Set<Long> ids = (Set<Long>) context.get(GarantAbstractJobWithLock.JOB_LIST_KEY);¤		if(ids != null){¤			Logs.LOG_W("uvsquery-prop-include::ObjectCount" + prefix + "=" + ids.size());¤		}else{¤			Logs.LOG_W("uvsquery-prop-include::ObjectCount" + prefix + "=0");¤		}¤	}¤¤	public void sendMail(String subject, String email, String text){¤		EmailGateway eg = EmailGateway.Factory.create();¤		Email emailForSend = eg.createEmail (¤				subject¤				, text¤				, email¤			);¤		eg.queueEmail (emailForSend);¤		eg.send ();¤	}¤	¤	public List<String> getFieldFromContentWithRegex(String content){¤		List<String> fields = new ArrayList<String>();¤		String regexLabel = "^!([^ ]+) (.+)";¤		Pattern pattern = Pattern.compile(regexLabel, Pattern.MULTILINE);¤		Matcher m = pattern.matcher(content.replaceAll("\\r", ""));¤		while(m.find()){¤			fields.add(m.group(2).trim());¤		}¤		return fields; ¤	}¤¤	public static String makeSpacesKey (final User u, final HttpServletRequest req) {¤        String selectedTab = req.getParameter("spacesSelectedTab");¤        if(selectedTab == null){¤        	selectedTab = new com.atlassian.confluence.user.UserInterfaceState(u).getDashboardTab();¤        	if(selectedTab == null){¤        		selectedTab = "all";¤        	}¤        }¤		String selectedGroupInTeam = req.getParameter("selectedTeam");¤		if(selectedGroupInTeam == null){¤			selectedGroupInTeam = new UserInterfaceState(u).getDashboardSpacesSelectedTeam();¤			if(selectedGroupInTeam == null){¤				selectedGroupInTeam = "";¤			}¤		}¤		String key = u.getName() + "_" + selectedTab + ((selectedTab.equals("team"))?("_" + selectedGroupInTeam):"");¤		return key;		¤	}¤	¤	public static String getServerUrl () {¤		return ContainerManager.Factory.get().getSettingsManager().getGlobalSettings().getBaseUrl();¤	}¤¤	public boolean hasSystemGetenvValue(final String systemGetenvName, final String valueSystemGetenv){¤		String g = System.getenv(systemGetenvName);¤		if(StringUtils.isNotEmpty(g)){¤			String[] values = g.split(",");¤			for(int i = 0; i < values.length; i++){¤				if(StringUtils.isNotEmpty(values[i]) && values[i].trim().equals(valueSystemGetenv)){¤					return true;¤				}¤			}¤		}¤		return false;¤	}¤	¤	¤	public static boolean hasChildren(long pageId){¤		String sQuery = "SELECT count(p.id) FROM Page p WHERE p.contentStatus='current' and p.originalVersion is null and p.parent.id=" + pageId;¤		Integer res = 0;¤		try {¤			Query q = ContainerManager.Factory.get().getSession().createQuery(sQuery);¤			res = (Integer)q.uniqueResult();¤		} catch (Exception e) {¤			Logs.LOG_SEX(e);¤		}¤		return res > 0;¤	}¤¤	public static List<Page> getChildren(long pageId){¤		String sQuery = "SELECT p FROM Page p WHERE p.contentStatus='current' and p.originalVersion is null and p.parent.id=" + pageId;¤		List res = new ArrayList();¤		try {¤			Query q = ContainerManager.Factory.get().getSession().createQuery(sQuery);¤			res = q.list();¤		} catch (Exception e) {¤			Logs.LOG_SEX(e);¤		}¤		return res;¤	}¤	¤	public static List filtrateFavPages(final List<AbstractPage> favPages){¤		DiscussionVelocityContextPlugin filtrateUnreaded = new DiscussionVelocityContextPlugin();¤		DashboardFilter filter = new DashboardFilter(DashboardFilter.DashboardListType.RECENTLY, false);¤		List<AbstractPage> filtratedFavPages = favPages;¤		List<AbstractPage> removedFavPages = new ArrayList<AbstractPage>();¤		//checkbox¤		List<EntityObject> importantLabels = null;¤		if(filter.onlyImportant()){¤			importantLabels = filter.makeLabelList(NUM_IMPORTANT);¤		}¤		Label labelDraft = (filter.onlyDraft())?ContainerManager.Factory.get().getLabelManager().getLabel("draft"):null;¤		if((importantLabels != null && importantLabels.size() > 0) || labelDraft != null){¤			for(AbstractPage page : filtratedFavPages){¤					boolean hasLabelImportant = false;¤					boolean hasLabelDraft = false;¤					if(importantLabels == null || importantLabels.size() == 0){¤						hasLabelImportant = true;¤					}else{	¤						for(EntityObject eo : importantLabels){¤							Label label = (Label)eo;¤							if(page.getLabels().contains(label)){¤								hasLabelImportant = true;¤							}¤						}¤					}¤					if(labelDraft == null || (labelDraft != null && page.getLabels().contains(labelDraft))){¤						hasLabelDraft = true;¤					}¤					if(hasLabelImportant == false || hasLabelDraft == false){¤						removedFavPages.add(page);¤					}¤			}¤			filtratedFavPages.removeAll(removedFavPages);¤		}¤		¤		//radiobutton¤		if(filter.getRadioLabels() != null && filter.getRadioLabels().size() > 0){¤			removedFavPages = new ArrayList<AbstractPage>();¤			for(AbstractPage page : filtratedFavPages){¤				boolean hasLabel = false;¤				for(EntityObject eo : filter.getRadioLabels()){¤					Label l = (Label)eo;¤					if(filter.needCodeEntities() && page.getLabels().contains(l)){¤						hasLabel = true;¤					}else if(filter.needNotCodeEntities() && page.getLabels().contains(l)){¤						hasLabel = true;¤					}¤				}¤				if(filter.needCodeEntities() && hasLabel == false){¤					removedFavPages.add(page);¤				}else if(filter.needNotCodeEntities() && hasLabel){¤					removedFavPages.add(page);¤				}¤			}¤			filtratedFavPages.removeAll(removedFavPages);¤		}¤		¤		//íåïðî÷èòàííûå¤		List<VelocityItem> filtratedVelocityItem = filtrateUnreaded.processFavPages(filtratedFavPages);¤		return filtratedVelocityItem;¤	}¤	¤	public static String MD5hash(String text) throws NoSuchAlgorithmException {¤		byte[] hash = MessageDigest.getInstance("MD5").digest(text.getBytes());¤		return String.format("%032x", new BigInteger(1, hash));¤	}¤¤¤	public static String getDomenNameFromGarantProfile (String uid) throws Exception  {¤		return (String) UserData.Factory.get(uid, "DomenNameInHref").getData();¤	}¤¤	public static String getPageUrl (final AbstractPage page, final String userName) {¤		String pageHost = "";¤		try {¤			pageHost = getDomenNameFromGarantProfile(userName);¤		} catch (Exception e) {¤			Logs.LOG_SEX(e);¤		}¤		if(StringUtils.isEmpty(pageHost)){¤			pageHost = getBaseUrl(); ¤		}¤¤		return pageHost + "/pages/viewpage.action?pageId=" + page.getIdAsString();¤	}¤¤	public String renderVelocityContent(String content, Map<String, Object> params){¤		AbstractPage page = null;¤		try {¤			Map<String, Object> velocityContext = MacroUtils.defaultVelocityContext();¤			¤			velocityContext.put("userAccessor", ContainerManager.Factory.get().getUserAccessor());¤			velocityContext.put("baseurl", GlobalHelper.getBaseUrl());¤			page = (AbstractPage)params.get("page");¤			if(params.get("configPage") != null){¤				velocityContext.put("configPage", params.get("configPage"));¤			}	¤			if(page != null){¤				velocityContext.put("page", page);¤¤				User author = ContainerManager.Factory.get().getUserAccessor().getUser(page.getCreatorName());¤				velocityContext.put("pageAuthorEmail", author.getEmail());¤			}¤			if(params.get("pages") != null){¤				velocityContext.put("pages", params.get("pages"));¤			}¤			if(params.get("label") != null){¤				velocityContext.put("label", params.get("label"));¤			}¤			return VelocityUtils.getRenderedContent(content, velocityContext);¤		} catch (Exception e) {¤			Logs.LOG_E("GlobalHelper::renderVelocityContent: Unable render content of page with id = " + ((page == null)?"null":page.getId()));¤		}¤		return null;¤	}¤	¤	public void sendMail(List<String> foundedFields, Map<String, Object> params){¤		String subject = renderVelocityContent(foundedFields.get(CONFIG_PAGE_SUBJECT), params);¤		String email = renderVelocityContent(foundedFields.get(CONFIG_PAGE_TO), params);¤		String text = renderVelocityContent(foundedFields.get(CONFIG_PAGE_TEXT), params);¤		sendMail(subject, email, text);¤	}¤¤¤	public boolean getUserSettingCanSendMailAuthor (String username) {¤		if(username == null){¤			return false;¤		}¤		UserData data = UserData.Factory.getAndCreate(username, "SendMailAuthorAboutInfoOnAcceptByUOManager");¤		if(data != null){¤			return "TRUE".compareToIgnoreCase((String) data.getData()) == 0;¤		}¤		return false;¤	}¤¤	final public static int CONFIG_JOB_CONDITION= 0;¤	final public static int CONFIG_ONLABELEVENT_LABEL= 0;¤	final public static int CONFIG_PAGE_TO	    = 1;¤	final public static int CONFIG_PAGE_SUBJECT	= 2;¤	final public static int CONFIG_PAGE_TEXT	= 3;¤	final public static int CONFIG_JOB_INTERVAL= 4;¤	¤	final private static int NUM_IMPORTANT	= 0;¤	//#UC END# *473D586C0019_CUSTOM_METHODS_AND_DATA*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Ìîäåëü ïðîåêòà "MDProcess"/ConfluencePlugins/CommonVelocityContext/GlobalHelper|473D586C0019
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*473D5CD101AB_BODY*"
		    value      	(value Text 
|//#UC START# *473D5CD101AB_BODY*¤		//#UC END# *473D5CD101AB_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*473D59AF01E1*"
		    value      	(value Text 
|//#UC START# *473D59AF01E1*¤		Form ret = null;¤		try {¤			List<Item> items = ru.garant.MDProcess.ConfluencePlugins.FilterPanel.PreDefinedForm.Factory.make (null, null, "dashboard").getItems();¤			List<Item> filtrated_items = new ArrayList<Item> ();¤			ru.garant.MDProcess.ConfluencePlugins.GarantProfileSupport.ProfileVelocityContextPlugin pvcp = new ru.garant.MDProcess.ConfluencePlugins.GarantProfileSupport.ProfileVelocityContextPlugin ();¤			Object filterType = pvcp.get("filter_type");¤			if (null == filterType) {¤				filterType = new String ("all_pages");¤			}¤			com.atlassian.user.User user = AuthenticatedUserThreadLocal.getUser();¤			String selectedTab = ru.garant.MDProcess.ConfluencePlugins.DiscussionsSupport.DiscussionManager.getSelectedSpacesTab ((req == null) ? req.getParameter ("spacesSelectedTab") : null, user);¤			List<EntityObject> spaceList = ru.garant.MDProcess.ConfluencePlugins.DiscussionsSupport.DiscussionManager.getSpacesList (selectedTab, user);¤			for (Iterator<Item> it = items.iterator(); it.hasNext();) {¤				Item cur = it.next();¤				if (cur.getType().equals("radio")) {¤					makeCheckedFilterItem (cur, (String)filterType);¤				} else if (cur.getType().equals("checkbox")) {¤					makeCheckItem (cur, pvcp);¤				}¤				if (cur.getId().equals("faultnews")) {¤					if (isNeedFor (spaceList, faultSpaces_)) {¤						filtrated_items.add(cur);¤					}¤				} else if (cur.getId().equals("code_entities") || cur.getId().equals("not_code_entities")) {¤					if (isNeedFor (spaceList, codeSpaces_)) {¤						filtrated_items.add(cur);¤					}¤				} else {¤					filtrated_items.add(cur);¤				}¤¤			}¤			ret = Form.Factory.make("&nbsp;&nbsp;Ôèëüòð:", filtrated_items);¤		} catch (Exception e) {¤			Logs.LOG_SEX(e);¤		}¤		return ret;¤		//#UC END# *473D59AF01E1*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (java)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19039095731"))
	    quid       	"473D586C0019"
	    documentation 	"Îñíîâíîé îáúåêò äîñòóïíûé èç ëþáîãî vm øàáëîíà, ïî ñóòè - ôàáðèêà â VM äëÿ ðàçëè÷íûõ íàøèõ îáúåêòîâ."
	    stereotype 	"KVelocityContextPlugin"
	    operations 	(list Operations
		(object Operation "get_dashboard_filter_panel"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"java:*473D59AF01E1*"
			    value      	(value Text 
|//#UC START# *473D59AF01E1*¤        final User u = AuthenticatedUserThreadLocal.getUser();¤		String key = makeSpacesKey (u, req);¤¤		List<String> ret = new ArrayList<String>();¤        List<Item> items = new ArrayList<Item>(ret.size());¤        try {¤        	if(cache_ == null){¤    			Long maximumSize = (Long)ContainerManager.Factory.get().getBandanaManager().getValue(new ConfluenceBandanaContext (), "DashboardFilters.maximumSize");¤    			cache_ = CacheBuilder.newBuilder()¤    					.maximumSize(maximumSize)¤    					.build(new CacheLoader<String, List<String>>() {¤    						public List<String> load(String key) {¤    							if(cache_ != null){¤    								List<Item> r = makeFilterPanelItems();¤    								List<String> rids = new ArrayList<String>(r.size());¤    								for (Item item : r) {¤    									rids.add(item.getId());¤    								}¤    								¤    								cache_.put(key, rids);¤    								return rids;¤    							}	¤								return null;¤    						}¤    					});¤¤    		}¤        	¤        	ret = cache_.get(key);        	¤            for (String id : ret) {¤            	items.add(Item.Factory.make(id));¤            }¤            ¤            items = addSelections(items);¤		} catch (Exception e) {¤			Logs.LOG_SEX(e);¤		}¤        	¤		return Form.Factory.make("&nbsp;&nbsp;" + ru.garant.shared.GCI.I18N.Messages.Factory.messages().get("requestcreationform.filter") + ":", items);¤		//#UC END# *473D59AF01E1*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"473C41D302D9")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19006884820"))
		    quid       	"473D59AF01E1"
		    documentation 	"âîçâðàùàåò ïàíåëü äëÿ ôèëüòðàöèè â ÏÓ"
		    parameters 	(list Parameters
			(object Parameter "req"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"482D115B01D4")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19006885144"))
			    quid       	"4746D1E20072"
			    type       	"HttpServletRequest"
			    quidu      	"482D115B01D4"))
		    result     	"Form"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"473C41D302D9")
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"java:*473D5CD101AB_BODY*"
			    value      	(value Text 
|//#UC START# *473D5CD101AB_BODY*¤		//#UC END# *473D5CD101AB_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19006885558"))
		    quid       	"473D5CD101AB"
		    documentation 	"ctor"
		    stereotype 	"ctor"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "is_IE"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"java:*482D11930172*"
			    value      	(value Text 
|//#UC START# *482D11930172*¤		String ua = getUserAgent(request).toLowerCase();¤		return ua.contains("explorer") || ua.contains("msie");¤		//#UC END# *482D11930172*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE100240")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19006885924"))
		    quid       	"482D11930172"
		    documentation 	"âîçâðàùàåò èñòèíó, åñëè èñïîëüçóåìûé â HTTP çàïðîñå áðàóçåð - IE"
		    parameters 	(list Parameters
			(object Parameter "request"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"482D115B01D4")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19006886221"))
			    quid       	"482D11CB00F3"
			    type       	"HttpServletRequest"
			    quidu      	"482D115B01D4"))
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE100240")
		(object Operation "is_Netscape"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"java:*482D11CF029D*"
			    value      	(value Text 
|//#UC START# *482D11CF029D*¤		String ua = getUserAgent(request).toLowerCase();¤		return ua.contains("netspace") || ua.contains("mozilla") || ua.contains("gecko");¤		//#UC END# *482D11CF029D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE100240")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19006886624"))
		    quid       	"482D11CF029D"
		    documentation 	"âîçâðàùàåò èñòèíó, åñëè èñïîëüçóåìûé â HTTP çàïðîñå áðàóçåð - Netscape (Mozilla) (Firefox)"
		    parameters 	(list Parameters
			(object Parameter "request"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"482D115B01D4")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19006886936"))
			    quid       	"482D12090180"
			    type       	"HttpServletRequest"
			    quidu      	"482D115B01D4"))
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE100240")
		(object Operation "is_Opera"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"java:*482D120E037B*"
			    value      	(value Text 
|//#UC START# *482D120E037B*¤		return getUserAgent(request).toLowerCase().contains("opera");¤		//#UC END# *482D120E037B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE100240")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19006887345"))
		    quid       	"482D120E037B"
		    documentation 	"âîçâðàùàåò èñòèíó, åñëè èñïîëüçóåìûé â HTTP çàïðîñå áðàóçåð - Opera"
		    parameters 	(list Parameters
			(object Parameter "request"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"482D115B01D4")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19006887642"))
			    quid       	"482D122C029E"
			    type       	"HttpServletRequest"
			    quidu      	"482D115B01D4"))
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE100240")
		(object Operation "escape_java_script"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"java:*482D12360348*"
			    value      	(value Text 
|//#UC START# *482D12360348*¤		return org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(str);¤		//#UC END# *482D12360348*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE240068")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19006888095"))
		    quid       	"482D12360348"
		    documentation 	" çàýñêåéïèòü ñïåö. ñèìâîëû"
		    parameters 	(list Parameters
			(object Parameter "str"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE240068")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19006888395"))
			    quid       	"482D1250003C"
			    type       	"string"
			    quidu      	"3DBFFE240068"))
		    result     	"string"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE240068")
		(object Operation "get_base_url"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"java:*495095F501C6*"
			    value      	(value Text 
|//#UC START# *495095F501C6*¤		HttpServletRequest request = ServletActionContext.getRequest();¤		if (request != null) {¤			if (request.getServerPort() == 80)¤				return request.getScheme() + "://" +¤					request.getServerName() +¤					request.getContextPath();¤			else¤				return request.getScheme() + "://" +¤					request.getServerName() + ":" + request.getServerPort() +¤					request.getContextPath();¤		} else {¤			return ContainerManager.Factory.get().getSettingsManager().getGlobalSettings().getBaseUrl();¤		}¤		//#UC END# *495095F501C6*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE240068")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19006888833"))
		    quid       	"495095F501C6"
		    documentation 	"ïîëó÷àåò òåêóùèé dns àäðåñ ñåðâåðà, íàïðèìåð: http://mdp.garant.ru:8080"
		    stereotype 	"static"
		    result     	"string"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE240068")
		(object Operation "get_page_url"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"java:*495096750327*"
			    value      	(value Text 
|//#UC START# *495096750327*¤		return getBaseUrl() + "/pages/viewpage.action?pageId=" + page.getIdAsString();¤		//#UC END# *495096750327*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE240068")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19006889181"))
		    quid       	"495096750327"
		    documentation 	"âîçâðàùàåò ïîëíûé url àäðåñ ñòðàíèöû, íàïðèìåð http://mdp.garant.ru:8080/pages/viewpage.action?pageId=6453164"
		    stereotype 	"static"
		    parameters 	(list Parameters
			(object Parameter "page"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4741B69000F0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19006889484"))
			    quid       	"495096CC01E4"
			    type       	"AbstractPage"
			    quidu      	"4741B69000F0"))
		    result     	"string"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE240068"))
	    language   	"MDA Generator")
	(object Class "RenderHTMLScript"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"1402919374659524")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (java)"
		    value      	"w:/MDProcess/java/src/java/ru/garant/MDProcess/ConfluencePlugins/CommonVelocityContext/RenderHTMLScript.java")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (java)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*539ED9CE0293_CUSTOM_IMPORT*"
		    value      	"//#UC START# *539ED9CE0293_CUSTOM_IMPORT*¤import java.util.regex.Matcher;¤import java.util.regex.Pattern;¤¤import com.atlassian.confluence.user.AuthenticatedUserThreadLocal;¤import com.atlassian.gzipfilter.org.apache.commons.lang.StringUtils;¤import com.atlassian.user.User;¤¤//#UC END# *539ED9CE0293_CUSTOM_IMPORT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*539ED9CE0293_CUSTOM_CLASS_DEFINITION*"
		    value      	"//#UC START# *539ED9CE0293_CUSTOM_CLASS_DEFINITION*¤//#UC END# *539ED9CE0293_CUSTOM_CLASS_DEFINITION*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*539ED9CE0293_ACTION_NAME*"
		    value      	(value Text 
|//#UC START# *539ED9CE0293_ACTION_NAME*¤		return new String (getClass ().getName ());¤		//#UC END# *539ED9CE0293_ACTION_NAME*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"java:*539ED9CE0293_CUSTOM_METHODS_AND_DATA*"
		    value      	(value Text 
|//#UC START# *539ED9CE0293_CUSTOM_METHODS_AND_DATA*¤	public String execute(){¤		User prevUser = AuthenticatedUserThreadLocal.getUser();¤		try{¤			User user = ContainerManager.Factory.get().getUserAccessor().getUser(user_);¤			AuthenticatedUserThreadLocal.setUser(user);¤			responseContent_ = getHelper().renderConfluenceMacro("{" + macroName_ + "}");¤			String baseUrl = getBaseUrl(responseContent_); ¤			if(StringUtils.isNotEmpty(baseUrl)){¤				responseContent_ = StringUtils.replaceEach(responseContent_, new String[]{baseUrl}, new String[]{"/dashboard.action?"});¤			}¤		}finally{¤			AuthenticatedUserThreadLocal.setUser(prevUser);¤		}¤		return SUCCESS;¤	}¤	¤    private String getBaseUrl(String responseContent)¤    {¤		Pattern p = Pattern.compile("gotoUrl\\(\\'(.*)spacesSelectedTab\\=.*\\'\\)");¤		Matcher m = p.matcher(responseContent);¤		if(m.find()){¤			if(m.group(1) != null){¤				return m.group(1);¤			}¤		}¤    	return null;¤    }¤¤    public User getCurrentUser(){¤    	return ContainerManager.Factory.get().getUserAccessor().getUser(user_);¤    }¤	¤	public void setUser(String user){¤		user_ = user;¤	}¤	¤	private String user_ = null;¤¤	public void setMacroName(String macroName){¤		macroName_ = macroName;¤	}¤	¤	private String macroName_;¤¤	public String getResponseContent() {¤		return responseContent_;¤	}¤	private String responseContent_ = null;¤	//#UC END# *539ED9CE0293_CUSTOM_METHODS_AND_DATA*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Ìîäåëü ïðîåêòà "MDProcess"/ConfluencePlugins/CommonVelocityContext/RenderHTMLScript|539ED9CE0293
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki"))
	    quid       	"539ED9CE0293"
	    stereotype 	"KActionPlugin"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"1402920492563493"))
		    quid       	"539EDE2C0232"
		    supplier   	"Logical View::external::ConfluenceSupport::com.atlassian.confluence.coreImpl::ConfluenceActionSupport"
		    quidu      	"468C9C950186"))
	    language   	"MDA Generator")
	(object Class "CommonVelocityContextKWorkPlugin"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"1402919429965689")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Ìîäåëü ïðîåêòà "MDProcess"/ConfluencePlugins/CommonVelocityContext/CommonVelocityContextKWorkPlugin|539EDA0503C5
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki"))
	    quid       	"539EDA0503C5"
	    stereotype 	"KXWorkPlugin"
	    language   	"MDA Generator"
	    nestedClasses 	(list nestedClasses
		(object Class "CommonVelocityContextXPackage"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"1402919486075900")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"WikiPageID (wiki)"
			    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Ìîäåëü ïðîåêòà "MDProcess"/ConfluencePlugins/CommonVelocityContext/CommonVelocityContextKWorkPlugin/CommonVelocityContextXPackage|539EDA3E0047
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SourceType (wiki)"
			    value      	"wiki"))
		    quid       	"539EDA3E0047"
		    stereotype 	"XPackage"
		    nestedClasses 	(list nestedClasses
			(object Class "RenderHTMLScript"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"1402919514112504")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"WikiPageID (wiki)"
				    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Ìîäåëü ïðîåêòà "MDProcess"/ConfluencePlugins/CommonVelocityContext/CommonVelocityContextKWorkPlugin/CommonVelocityContextXPackage/RenderHTMLScript|539EDA5A006B
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"SourceType (wiki)"
				    value      	"wiki"))
			    quid       	"539EDA5A006B"
			    stereotype 	"XAction"
			    used_nodes 	(list uses_relationship_list
				(object Uses_Relationship
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ElementCreationOrder"
					    value      	"1402919544611250")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"539EDA780261"
				    stereotype 	"call"
				    supplier   	"Logical View::MDProcess::ConfluencePlugins::CommonVelocityContext::RenderHTMLScript"
				    quidu      	"539ED9CE0293"))
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "success"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ElementCreationOrder"
					    value      	"1402919982454294")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator User Properties"
					    name       	"xml_name"
					    value      	"ConfluencePlugins/AjaxResponse2.xml"))
				    quid       	"539EDC2E01B9"
				    stereotype 	"velocity-xml"
				    exportControl 	"Public"
				    Containment 	"By Value"))))))))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"473D5866019E"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	355
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::CommonVelocityContext::GlobalHelper" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"585")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"417")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"686")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"264"))
		    location   	(924, 411)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(354, 177)
			fill_color 	13434879
			nlines     	1
			max_width  	1140
			justify    	0
			label      	" GlobalHelper")
		    stereotype 	(object ItemLabel
			Parent_View 	@1
			location   	(354, 127)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1140
			justify    	0
			label      	"<<KVelocityContextPlugin>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"473D586C0019"
		    compartment 	(object Compartment
			Parent_View 	@1
			location   	(354, 238)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	9
			max_width  	1137
			justify    	1)
		    width      	1158
		    height     	592
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::CommonVelocityContext::RenderHTMLScript" @2
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1173, 1212)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(985, 1183)
			fill_color 	13434879
			nlines     	1
			max_width  	376
			justify    	0
			label      	"RenderHTMLScript")
		    stereotype 	(object ItemLabel
			Parent_View 	@2
			location   	(985, 1133)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	376
			justify    	0
			label      	"<<KActionPlugin>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"539ED9CE0293"
		    width      	394
		    height     	182
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::CommonVelocityContext::CommonVelocityContextKWorkPlugin" @3
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2274, 1440)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@3
			location   	(1909, 1419)
			fill_color 	13434879
			nlines     	1
			max_width  	730
			justify    	0
			label      	"CommonVelocityContextKWorkPlugin")
		    stereotype 	(object ItemLabel
			Parent_View 	@3
			location   	(1909, 1369)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	730
			justify    	0
			label      	"<<KXWorkPlugin>>")
		    icon_style 	"Label"
		    fill_color 	16111871
		    quidu      	"539EDA0503C5"
		    width      	748
		    height     	167
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::external::ConfluenceSupport::com.atlassian.confluence.coreImpl::ConfluenceActionSupport" @4
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1947, 948)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(1646, 920)
			fill_color 	13434879
			nlines     	1
			max_width  	602
			justify    	0
			label      	" ConfluenceActionSupport")
		    stereotype 	(object ItemLabel
			Parent_View 	@4
			location   	(1646, 870)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	602
			justify    	0
			label      	"<<SimpleClass>>")
		    icon_style 	"Label"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"468C9C950186"
		    width      	620
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @5
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"539EDE2C0232"
		    client     	@2
		    supplier   	@4
		    vertices   	(list Points
			(1370, 1143)
			(1680, 1038))
		    line_style 	0)))
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ClassUID"
		    value      	"539EDA0503C5"))
	    quid       	"539EDA3A01CA"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::CommonVelocityContext::CommonVelocityContextKWorkPlugin::CommonVelocityContextXPackage" @6
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(927, 534)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@6
			location   	(596, 506)
			fill_color 	13434879
			nlines     	1
			max_width  	662
			justify    	0
			label      	"CommonVelocityContextXPackage")
		    stereotype 	(object ItemLabel
			Parent_View 	@6
			location   	(596, 456)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	662
			justify    	0
			label      	"<<XPackage>>")
		    icon_style 	"Label"
		    fill_color 	13357823
		    quidu      	"539EDA3E0047"
		    width      	680
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)))
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ClassUID"
		    value      	"539EDA3E0047")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"539EDA5700B1"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	916
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::CommonVelocityContext::CommonVelocityContextKWorkPlugin::CommonVelocityContextXPackage::RenderHTMLScript" @7
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1614, 1866)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@7
			location   	(1310, 1809)
			fill_color 	13434879
			nlines     	1
			max_width  	608
			justify    	0
			label      	" RenderHTMLScript")
		    stereotype 	(object ItemLabel
			Parent_View 	@7
			location   	(1310, 1759)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	608
			justify    	0
			label      	"<<XAction>>")
		    icon_style 	"Label"
		    fill_color 	13357823
		    quidu      	"539EDA5A006B"
		    compartment 	(object Compartment
			Parent_View 	@7
			location   	(1310, 1924)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	1
			max_width  	537
			justify    	1)
		    width      	626
		    height     	238
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::CommonVelocityContext::RenderHTMLScript" @8
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1722, 1293)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	13110000
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@8
			location   	(1530, 1272)
			nlines     	1
			max_width  	384
			justify    	0
			label      	"RenderHTMLScript")
		    stereotype 	(object ItemLabel
			Parent_View 	@8
			location   	(1530, 1222)
			anchor     	10
			nlines     	1
			max_width  	381
			justify    	0
			label      	"<<KActionPlugin>>")
		    icon_style 	"Label"
		    line_color 	13110000
		    fill_color 	16777215
		    quidu      	"539ED9CE0293"
		    width      	402
		    height     	167
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @9
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @10
			Parent_View 	@9
			location   	(1553, 1539)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<call>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"539EDA780261"
		    client     	@7
		    supplier   	@8
		    vertices   	(list Points
			(1635, 1746)
			(1705, 1376))
		    line_style 	0)))))
