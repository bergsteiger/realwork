
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.060314"
    charSet    	204)

(object Class_Category "PageView"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (vm)"
	    value      	"w:/MDProcess/java/src/etc/ConfluencePlugins/PageView/pagetreeopenbranch.vm::46E7E7F800CB,w:/MDProcess/java/src/etc/ConfluencePlugins/PageView/removedescendants.vm::45DAF51D01A5,w:/MDProcess/java/src/etc/ConfluencePlugins/PageView/selectpage-filter.vm::4729E4480337")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED WikiPageID (wiki)"
	    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/ConfluencePlugins/PageView/pagetreeopenbranch|46E7E7F800CB::46E7E7F800CB;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/ConfluencePlugins/PageView/removedescendants|45DAF51D01A5::45DAF51D01A5;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/ConfluencePlugins/PageView/selectpage-filter|4729E4480337::4729E4480337
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"WikiPageID (wiki)"
	    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/ConfluencePlugins/PageView|477E2A3C00E1
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (wiki)"
	    value      	"wiki")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ElementCreationOrder"
	    value      	"19026516195"))
    quid       	"477E2A3C00E1"
    documentation 	"Элементы представления для работы со страницами К"
    stereotype 	"HtmlUnit"
    visible_categories 	(list visibility_relationship_list
	(object Visibility_Relationship
	    quid       	"4F19357602F2"
	    supplier   	"Logical View::external::JavaConfluence::pages"
	    quidu      	"477DD1EE0305"))
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "pagetreeopenbranch"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/ConfluencePlugins/PageView/pagetreeopenbranch|46E7E7F800CB
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (output.xml)"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"output.xml:*46E7E7F800CB_CUSTOM_CONTENT*"
		    value      	(value Text 
|##UC_BEGIN*46E7E7F800CB_CUSTOM_CONTENT*¤<ul style="list-style-type: none">¤#foreach ($child in $action.getPermittedChildren($page))¤    <li>#garnode($child [])</li>¤#end¤</ul>¤##UC_END*46E7E7F800CB_CUSTOM_CONTENT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"vm:*46E7E7F800CB_CUSTOM_CONTENT*"
		    value      	(value Text 
|##UC_BEGIN*46E7E7F800CB_CUSTOM_CONTENT*¤<ul style="list-style-type: none">¤¤#if($filterPanelKey.contains('uvsquery_creation'))#set($flagUvsQuery = true) #else #set($flagUvsQuery = false) #end¤¤#foreach ($child in $action.getPermittedChildren($page))¤    <li>#garnode($child [] $flagUvsQuery)</li>¤#end¤</ul>¤##UC_END*46E7E7F800CB_CUSTOM_CONTENT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (vm)"
		    value      	"w:/MDProcess/java/src/etc/ConfluencePlugins/PageView/pagetreeopenbranch.vm")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (vm)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19039092516"))
	    quid       	"46E7E7F800CB"
	    documentation 	"занимается отрисовкой детей раскрытой ноды"
	    stereotype 	"VM"
	    language   	"MDA Generator")
	(object Class "selectpage-filter"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (output.xml)"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/ConfluencePlugins/PageView/selectpage-filter|4729E4480337
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"output.xml:*4729E4480337_CUSTOM_CONTENT*"
		    value      	(value Text 
|##UC_BEGIN*4729E4480337_CUSTOM_CONTENT*¤			<table style="border:1px solid;color:#000CCC;background-color:#EEEEEE;" cellpadding="0" cellspacing="3" border="0">¤				<tr>¤					<td class="tabletitle" style="border-bottom:0">$filterPanel.title</td>¤					#foreach ($item in $filterPanel.items)¤						#if ($item.type == "separator")¤							<td style="width:10px;font-size:10px;">&nbsp;</td>¤							<td style="width:2px;background-color:#326DAD;font-size:2px;">&nbsp;</td>¤						#else¤							<td><input type="$item.type" name="filter_type" value="" title="$item.title" id="$item.id" onclick="setCheckFilter('$item.getId()')" #if ($item.getChecked()) checked #end></td>¤							<td><img src="$item.icon" title="$item.title" alt="$item.alt" border="0"></TD>¤						#end¤					#end					¤				</tr>¤			</table>			¤##UC_END*4729E4480337_CUSTOM_CONTENT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"vm:*4729E4480337_CUSTOM_CONTENT*"
		    value      	(value Text 
|##UC_BEGIN*4729E4480337_CUSTOM_CONTENT*¤<table style="border:1px solid;color:#000CCC;background-color:#EEEEEE; #if($filterTableStyle) $filterTableStyle #end" cellpadding="0" cellspacing="3" border="0">¤    <tr>¤        #set ($needToMark = false)¤        #set ($idToExclude = "")¤        #foreach ($item in $filterPanel.items)¤            #if($item.Checked.equals(true) && $item.Passive.equals(false))¤                #set ($needToMark = true)¤            #end¤        #end¤        ¤¤        #if($filterWithHelpTooltip)¤        	<td class="tabletitle" onmouseover="$garHelper.getHelpTooltipJs('filterpanel.dashboard')" onmouseout="UnTip()" style="border-bottom:0; #if($needToMark.equals(true))color:red;#end #if($filterCellStyle) $filterCellStyle #end">$filterPanel.title</td>¤        #else¤        	<td class="tabletitle" style="border-bottom:0; #if($needToMark.equals(true))color:red;#end #if($filterCellStyle) $filterCellStyle #end">$filterPanel.title</td>¤        #end¤        ¤¤        #foreach ($item in $filterPanel.items)¤            #if ($item.type == "separator")¤                <td style="width:10px;font-size:10px; #if($filterCellStyle) $filterCellStyle #end">&nbsp;</td>¤                <td style="border-left:2px solid #326DAD; #if($filterCellStyle) $filterCellStyle #end">&nbsp;</td>¤            #else¤                <td #if($filterCellStyle) style="$filterCellStyle" #end>¤					<input type="$item.type" ¤                           name="filter_type" ¤                           value="" ¤                           title="$item.title"¤                           id="$item.id" ¤                           onclick="setCheckFilter('$item.getId()', $item.getExclusive())" #if ($item.getChecked()) checked #end>¤				</td>¤                <td #if($filterCellStyle) style="$filterCellStyle" #end>¤					#if($item.icon != '')¤						<img src="$item.icon" title="$item.title" alt="$item.alt" border="0">¤					#else¤						$item.title¤					#end¤				</td>¤            #end¤        #end¤    </tr>¤</table>			¤##UC_END*4729E4480337_CUSTOM_CONTENT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (vm)"
		    value      	"w:/MDProcess/java/src/etc/ConfluencePlugins/PageView/selectpage-filter.vm")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (vm)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19039087259"))
	    quid       	"4729E4480337"
	    documentation 	"ГУИ для задания фильтра при выборе страницы"
	    stereotype 	"VM"
	    language   	"MDA Generator")
	(object Class "removedescendants"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (output.xml)"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"output.xml:*45DAF51D01A5_CUSTOM_CONTENT*"
		    value      	(value Text 
|##UC_BEGIN*45DAF51D01A5_CUSTOM_CONTENT*¤<html>¤	<head>¤		<title>Remove Descendants</title>¤		<meta name="help-path" content="/pages/help/removepage.vm"/>¤        <content tag="selectedTab">removedescendants</content>¤	</head>¤¤	<body>¤		#parse ( "/template/includes/actionerrors.vm" )¤        	#parse("/includes/alert-locked.vm")¤¤		#applyDecorator("root")¤	        	#decoratorParam("helper" $action.helper)¤	        	#decoratorParam("mode" "edit")¤        		#decoratorParam("context" "page")¤¤		        #applyDecorator ("confirm")¤		            #decoratorParam ("formName" "removepageform")¤		            #decoratorParam ("formAction" "doremovedescendants.action?pageId=$page.id")¤¤		            <p>$descendantsCount descendants of the '$page.title' will be removed.</p>¤¤		        #end¤¤			#parse ( "/pages/page-breadcrumbs.vm" )¤		    #end¤	</body>¤</html>¤¤¤##UC_END*45DAF51D01A5_CUSTOM_CONTENT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/ConfluencePlugins/PageView/removedescendants|45DAF51D01A5
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"vm:*45DAF51D01A5_CUSTOM_CONTENT*"
		    value      	(value Text 
|##UC_BEGIN*45DAF51D01A5_CUSTOM_CONTENT*¤<html>¤	<head>¤		<title>$garHelper.getText('descendants.remove')</title>¤		<content tag="no-page-header">true</content>¤		<!--<meta name="help-path" content="/pages/help/removepage.vm"/>-->¤	</head>¤¤	<body>¤		#parse ( "/template/includes/actionerrors.vm" )¤        	#parse("/includes/alert-locked.vm")¤¤		#applyDecorator("root")¤	        	#decoratorParam("helper" $action.helper)¤	        	#decoratorParam("mode" "edit")¤        		#decoratorParam("context" "page")¤¤		        #applyDecorator ("confirm")¤		            #decoratorParam ("formName" "removepageform")¤		            #decoratorParam ("formAction" "doremovedescendants.action?pageId=$page.id")¤¤		            <p>$action.getText("alert.remove.page.descendants", [$descendantsCount])</p>¤					<div style="color: #666666; width: 70%" align="left">¤                    $action.getText('please.note')¤                    <ul type="square">¤                        <li>$action.getText('note.removing.moves.to.trashcan')</li>¤                        <li>$action.getText("pages.incoming.links", [$incomingLinks.size(), "<a href='$req.contextPath/pages/viewinfo.action?pageId=$page.id'>", "</a>"])¤        ¤                        #if( $page.equals( $space.homePage ) )¤                            <li>$action.getText("page.is.set.as.home", [$webwork.htmlEncode($page.space.name)])¤                        #end¤        ¤                        #if( $page.parent )¤                            <li>$action.getText("page.has.parent", [$webwork.htmlEncode($page.parent.space.name), $page.parent.title])¤                        #end¤                    </ul>¤                    </div>¤		        #end¤¤			#parse ( "/pages/page-breadcrumbs.vm" )¤		    #end¤	</body>¤</html>¤¤¤##UC_END*45DAF51D01A5_CUSTOM_CONTENT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (vm)"
		    value      	"w:/MDProcess/java/src/etc/ConfluencePlugins/PageView/removedescendants.vm")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (vm)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19039047800"))
	    quid       	"45DAF51D01A5"
	    documentation 	"Шаблон экшена удаления всех потомков документа."
	    stereotype 	"VM"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"1327052826902799")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"4F19381A0382"
		    stereotype 	"include"
		    supplier   	"Logical View::MDProcess::ConfluencePlugins::PageView::garextendedpage"
		    quidu      	"4F1930D3015A"))
	    language   	"MDA Generator")
	(object Class "garextendedpage"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"1327050963346205")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ApplyedGens"
		    value      	"All")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (vm)"
		    value      	"w:/MDProcess/java/src/etc/ConfluencePlugins/PageView/garextendedpage.vm")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (vm)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/ConfluencePlugins/PageView/garextendedpage|4F1930D3015A
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"vm:*4F1930D3015A_CUSTOM_CONTENT*"
		    value      	(value Text 
|##UC_BEGIN*4F1930D3015A_CUSTOM_CONTENT*¤#requireResource("legacy.confluence.web.resources:prototype")¤#requireResource('confluence.web.resources:utils')¤<script type="text/javascript">¤function canRemoveOGV(){¤	if("$action.haveRemoveOGV()" == "false"){¤		alert("Папку ОГВ удалить нельзя, в начале нужно удалить или переместить карточки документов");¤	}else{¤	  window.location.replace("/ru/garant/MDProcess/DocCardChange/DocCardSupport/DocCardXPlugin/DocCardXPackage/removeogv.action?pageId=$helper.page.id");  ¤	}¤}¤¤var moveAllDocCardsURL = "/ru/garant/MDProcess/DocCardChange/DocCardSupport/DocCardXPlugin/DocCardXPackage/movealldoccardsfromogvaction.action";¤¤function canMoveDocCards(){¤	var newOgvId = prompt("Введите id ОГВ, куда хотите перенести карточки:");¤	if(newOgvId == null){¤		return;¤	}¤	¤	window.location.replace(moveAllDocCardsURL + "?oldOgvId=$helper.page.id&spaceKey=$helper.spaceKey&newOgvId=" + newOgvId);¤}¤¤AJS.toInit(function ($)¤{¤	AJS.$("#action-remove-ogv-link").click(function (e) {¤		canRemoveOGV();¤	});¤¤	AJS.$("#action-move-all-doccards-link").click(function (e) {¤		canMoveDocCards();¤	});¤});¤¤¤ <!-- INCLUDE COMPOSITION-SETUP -->   ¤    //////////////// Start of presence check ///////////////¤if(typeof Behaviour=='undefined') {¤	var Behaviour = {¤		list : new Array,¤		register : function(sheet){¤					Behaviour.list.push(sheet);¤				  },¤		start : function(){¤				Behaviour.addLoadEvent(function(){¤					// quit if this function has already been called¤					if (arguments.callee.done) return;¤					arguments.callee.done = true;¤					Behaviour.apply();¤				});¤		},¤		apply : function(){¤		var h, i, sheet, selector, list, element;¤		for (h=0; sheet=Behaviour.list[h];h++){¤			for (selector in sheet){¤				list = document.getElementsBySelector(selector);¤				if (!list){¤					continue;¤				}¤				for (i=0;element=list[i];i++){¤					sheet[selector](element);¤				}¤			}¤		}¤	},¤	addLoadEvent : function(func){¤		if (window.addEventListener) {¤			var load = function() {¤				if (arguments.callee.done)¤					return;¤				arguments.callee.done = true;¤				arguments.callee.func();¤			}¤			load.func = func;¤			window.addEventListener("DOMContentLoaded", load, false);¤			window.addEventListener("load", load, false);¤		} else if (window.attachEvent) {¤			window.attachEvent('onload',func);¤		} else {¤			var oldonload = window.onload;¤			if (typeof window.onload != 'function') {¤				window.onload = func;¤			} else {¤				window.onload = function() {¤					oldonload();¤					func();¤				}¤			}¤		}¤	}¤}¤Behaviour.start();¤¤function getAllChildren(e) {¤	// Returns all children of element. Workaround required for IE5/Windows. Ugh.¤	return e.all ? e.all : e.getElementsByTagName('*');¤}¤document.getElementsBySelector = function(selector) {¤	// Attempt to fail gracefully in lesser browsers¤	if (!document.getElementsByTagName) {¤		return new Array();¤	}¤	// Split selector in to tokens¤	var token, bits, tagName, id, className, found, foundCount, elements, currentContextIndex, h, j, k;¤	var tokens = selector.split(' ');¤	var currentContext = new Array(document);¤	for (var i = 0; i < tokens.length; i++) {¤		token = tokens[i].replace(/^\s+/,'').replace(/\s+$/,'');;¤		if (token.indexOf('#') > -1) {¤			// Token is an ID selector¤			bits = token.split('#');¤			tagName = bits[0];¤			id = bits[1];¤			element = document.getElementById(id);¤			if (tagName && element.nodeName.toLowerCase() != tagName) {¤				// tag with that ID not found, return false¤				return new Array();¤			}¤			// Set currentContext to contain just this element¤			currentContext = new Array(element);¤			continue; // Skip to next token¤		}¤		if (token.indexOf('.') > -1) {¤			// Token contains a class selector¤			bits = token.split('.');¤			tagName = bits[0];¤			className = bits[1];¤			if (!tagName) {¤				tagName = '*';¤			}¤			// Get elements matching tag, filter them for class selector¤			found = new Array;¤			foundCount = 0;¤			for (h = 0; h < currentContext.length; h++) {¤				if (tagName == '*') {¤					elements = getAllChildren(currentContext[h]);¤				} else {¤					elements = currentContext[h].getElementsByTagName(tagName);¤				}¤				for (j = 0; j < elements.length; j++) {¤					found[foundCount++] = elements[j];¤				}¤			}¤			currentContext = new Array;¤			currentContextIndex = 0;¤			for (k = 0; k < found.length; k++) {¤				if (found[k].className && found[k].className.match(new RegExp('\\b'+className+'\\b'))) {¤					currentContext[currentContextIndex++] = found[k];¤				}¤			}¤			continue; // Skip to next token¤		}¤		// Code to deal with attribute selectors¤		if (token.match(/^(\w*)\[(\w+)([=~\|\^\$\*]?)=?"?([^\]"]*)"?\]$/)) {¤			tagName = RegExp.$1;¤			var attrName = RegExp.$2;¤			var attrOperator = RegExp.$3;¤			var attrValue = RegExp.$4;¤			if (!tagName) {¤				tagName = '*';¤			}¤			// Grab all of the tagName elements within current context¤			found = new Array;¤			foundCount = 0;¤			for (h = 0; h < currentContext.length; h++) {¤				if (tagName == '*') {¤					elements = getAllChildren(currentContext[h]);¤				} else {¤					elements = currentContext[h].getElementsByTagName(tagName);¤				}¤				for (j = 0; j < elements.length; j++) {¤				found[foundCount++] = elements[j];¤				}¤			}¤			currentContext = new Array;¤			currentContextIndex = 0;¤			var checkFunction; // This function will be used to filter the elements¤			switch (attrOperator) {¤			case '=': // Equality¤				checkFunction = function(e) { return (e.getAttribute(attrName) == attrValue); };¤			break;¤			case '~': // Match one of spaces seperated words¤				checkFunction = function(e) { return (e.getAttribute(attrName).match(new RegExp('\\b'+attrValue+'\\b'))); };¤			break;¤			case '|': // Match start with value followed by optional hyphen¤				checkFunction = function(e) { return (e.getAttribute(attrName).match(new RegExp('^'+attrValue+'-?'))); };¤			break;¤			case '^': // Match starts with value¤				checkFunction = function(e) { return (e.getAttribute(attrName).indexOf(attrValue) == 0); };¤			break;¤			case '$': // Match ends with value - fails with "Warning" in Opera 7¤				checkFunction = function(e) { return (e.getAttribute(attrName).lastIndexOf(attrValue) == e.getAttribute(attrName).length - attrValue.length); };¤			break;¤			case '*': // Match ends with value¤				checkFunction = function(e) { return (e.getAttribute(attrName).indexOf(attrValue) > -1); };¤			break;¤			default :¤				// Just test for existence of attribute¤				checkFunction = function(e) { return e.getAttribute(attrName); };¤			}¤			currentContext = new Array;¤			currentContextIndex = 0;¤			for (k = 0; k < found.length; k++) {¤				if (checkFunction(found[k])) {¤					currentContext[currentContextIndex++] = found[k];¤				}¤			}¤			// alert('Attribute Selector: '+tagName+' '+attrName+' '+attrOperator+' '+attrValue);¤			continue; // Skip to next token¤		}¤		if (!currentContext[0]){¤			return null;¤		}¤		// If we get here, token is JUST an element (not a class or ID selector)¤		tagName = token;¤		found = new Array;¤		foundCount = 0;¤		for (h = 0; h < currentContext.length; h++) {¤			elements = currentContext[h].getElementsByTagName(tagName);¤			for (j = 0; j < elements.length; j++) {¤				found[foundCount++] = elements[j];¤			}¤		}¤		currentContext = found;¤	}¤	return currentContext;¤} ¤// Start import guard.¤if (!document.browserInfo)¤{¤	function BrowserDetect() {¤		var ua = navigator.userAgent.toLowerCase();¤		this.isBrowserInfo = "YES";¤		this.isGecko = (ua.indexOf('gecko') != -1 && ua.indexOf('safari') == -1);¤		this.isAppleWebKit = (ua.indexOf('applewebkit') != -1);¤		this.isKonqueror = (ua.indexOf('konqueror') != -1);¤		this.isSafari = (ua.indexOf('safari') != - 1);¤		this.isOmniweb = (ua.indexOf('omniweb') != - 1);¤		this.isOpera = (ua.indexOf('opera') != -1);¤		this.isIcab = (ua.indexOf('icab') != -1);¤		this.isAol = (ua.indexOf('aol') != -1);¤		this.isIE = (ua.indexOf('msie') != -1 && !this.isOpera && (ua.indexOf('webtv') == -1) );¤		this.isMozilla = (this.isGecko && ua.indexOf('gecko/') + 14 == ua.length);¤		this.isFirebird = (ua.indexOf('firebird/') != -1);¤		this.isNS = ( (this.isGecko) ? (ua.indexOf('netscape') != -1) : ( (ua.indexOf('mozilla') != -1) && !this.isOpera && !this.isSafari && (ua.indexOf('spoofer') == -1) && (ua.indexOf('compatible') == -1) && (ua.indexOf('webtv') == -1) && (ua.indexOf('hotjava') == -1) ) );¤		this.isIECompatible = ( (ua.indexOf('msie') != -1) && !this.isIE);¤		this.isNSCompatible = ( (ua.indexOf('mozilla') != -1) && !this.isNS && !this.isMozilla);¤		this.geckoVersion = ( (this.isGecko) ? ua.substring( (ua.lastIndexOf('gecko/') + 6), (ua.lastIndexOf('gecko/') + 14) ) : -1 );¤		this.equivalentMozilla = ( (this.isGecko) ? parseFloat( ua.substring( ua.indexOf('rv:') + 3 ) ) : -1 );¤		this.appleWebKitVersion = ( (this.isAppleWebKit) ? parseFloat( ua.substring( ua.indexOf('applewebkit/') + 12) ) : -1 );¤		this.versionMinor = parseFloat(navigator.appVersion);¤		if (this.isGecko && !this.isMozilla) {¤			this.versionMinor = parseFloat( ua.substring( ua.indexOf('/', ua.indexOf('gecko/') + 6) + 1 ) );¤		} else if (this.isMozilla) {¤			this.versionMinor = parseFloat( ua.substring( ua.indexOf('rv:') + 3 ) );¤		} else if (this.isIE && this.versionMinor >= 4) {¤			this.versionMinor = parseFloat( ua.substring( ua.indexOf('msie ') + 5 ) );¤		} else if (this.isKonqueror) {¤			this.versionMinor = parseFloat( ua.substring( ua.indexOf('konqueror/') + 10 ) );¤		} else if (this.isSafari) {¤			this.versionMinor = parseFloat( ua.substring( ua.lastIndexOf('safari/') + 7 ) );¤		} else if (this.isOmniweb) {¤			this.versionMinor = parseFloat( ua.substring( ua.lastIndexOf('omniweb/') + 8 ) );¤		} else if (this.isOpera) {¤			this.versionMinor = parseFloat( ua.substring( ua.indexOf('opera') + 6 ) );¤		} else if (this.isIcab) {¤			this.versionMinor = parseFloat( ua.substring( ua.indexOf('icab') + 5 ) );¤		}¤		this.versionMajor = parseInt(this.versionMinor);¤		this.isDOM1 = (document.getElementById);¤		this.isDOM2Event = (document.addEventListener && document.removeEventListener);¤		this.mode = document.compatMode ? document.compatMode : 'BackCompat';¤		this.isWin = (ua.indexOf('win') != -1);¤		this.isWin32 = (this.isWin && ( ua.indexOf('95') != -1 || ua.indexOf('98') != -1 || ua.indexOf('nt') != -1 || ua.indexOf('win32') != -1 || ua.indexOf('32bit') != -1 || ua.indexOf('xp') != -1) );¤		this.isMac = (ua.indexOf('mac') != -1);¤		this.isUnix = (ua.indexOf('unix') != -1 || ua.indexOf('sunos') != -1 || ua.indexOf('bsd') != -1 || ua.indexOf('x11') != -1)¤		this.isLinux = (ua.indexOf('linux') != -1);¤		this.isNS4x = (this.isNS && this.versionMajor == 4);¤		this.isNS40x = (this.isNS4x && this.versionMinor < 4.5);¤		this.isNS47x = (this.isNS4x && this.versionMinor >= 4.7);¤		this.isNS4up = (this.isNS && this.versionMinor >= 4);¤		this.isNS6x = (this.isNS && this.versionMajor == 6);¤		this.isNS6up = (this.isNS && this.versionMajor >= 6);¤		this.isNS7x = (this.isNS && this.versionMajor == 7);¤		this.isNS7up = (this.isNS && this.versionMajor >= 7);¤		this.isIE4x = (this.isIE && this.versionMajor == 4);¤		this.isIE4up = (this.isIE && this.versionMajor >= 4);¤		this.isIE5x = (this.isIE && this.versionMajor == 5);¤		this.isIE55 = (this.isIE && this.versionMinor == 5.5);¤		this.isIE55up = (this.isIE && this.versionMinor >= 5.5);¤		this.isIE5up = (this.isIE && this.versionMajor >= 5);¤		this.isIE6x = (this.isIE && this.versionMajor == 6);¤		this.isIE6up = (this.isIE && this.versionMajor >= 6);¤		this.isIE4xMac = (this.isIE4x && this.isMac);¤	}¤	document.browserInfo = new BrowserDetect();¤} // End import guard¤var Cloak = {¤	// The HTML to insert into the toggle when clicking it will open the cloak.¤	openHTML : "+",¤	// The HTML to insert into the toggle when clicking it will close the cloak.¤	closeHTML : "-",¤	// If true, visitors can click on any part of the nearest 'block' ancestor to toggle.¤	toggleZone : true,¤	// The number of days to remember the visitor's last cloak settings¤	memoryDuration : 0,¤	// The prefix to place in front of the¤	memoryPrefix : window.location.pathname,¤	memoryName : function() {¤		return Cloak.memoryPrefix + ":cloakData";¤	},¤	// The path to remember the current settings within.¤	memoryPath : "/",¤	rootCloaks : new Array(),¤	cloakAll : function(cascade) {¤		for (var i = 0; i < this.rootCloaks.length; i++)¤			this.rootCloaks[i].cloak(cascade);¤	},¤	uncloakAll : function(cascade) {¤		for (var i = 0; i < this.rootCloaks.length; i++)¤			this.rootCloaks[i].uncloak(cascade);¤	},¤	/**¤	* Stores the cloak settings for later recall.¤	*/¤	store : function() {¤		if (Cloak.memoryDuration <= 0)¤		{¤			Memory.forgetValue(Cloak.memoryName(), Cloak.memoryPath);¤			return;¤		}¤		var expdate = new Date ();¤		expdate.setTime(expdate.getTime() + (24 * 60 * 60 * 1000) * Cloak.memoryDuration );¤		var data = new Object();¤		var cloaks = Cloak.allCloaks();¤		for (var i = 0; i < cloaks.length; i++){¤			data[cloaks[i].id] = cloaks[i].isCloaked() ? "c" : "u";¤		}¤		Memory.storeMap(Cloak.memoryName(), data, expdate, Cloak.memoryPath);¤	},¤	recall : function() {¤		if (Cloak.memoryDuration <= 0){¤			Memory.forgetValue(Cloak.memoryName(), Cloak.memoryPath);¤			return;¤		}¤		var data = Memory.recallMap(Cloak.memoryName());¤		for (id in data){¤			var cloak = document.getElementById(id);¤			if (cloak){¤				if (data[id] == "c")¤					cloak.cloak();¤				else¤					cloak.uncloak();¤			}¤		}¤	},¤	allCloaks : function() {¤		var cloaks = new Array();¤		for (var i = 0; i < Cloak.rootCloaks.length; i++){¤			this.addAllCloaks(cloaks, Cloak.rootCloaks[i]);¤		}¤		return cloaks;¤	},¤	// 'private'¤	addAllCloaks : function(cloaks, cloak) {¤		if (cloak){¤			cloaks.push(cloak);¤			if (cloak.childCloaks)¤				for (var i = 0; i < cloak.childCloaks.length; i++)¤					this.addAllCloaks(cloaks, cloak.childCloaks[i]);¤		}¤	},¤// Finds the closest parent cloak for this cloak.¤// May return null if there is no surrounding cloak.¤	findParentCloak : function(element) {¤		var parent = element.parentNode;¤		while (parent && !parent.isCloaked)¤		parent = parent.parentNode;¤		return parent;¤	},¤	// Finds the cloak for the specified toggle.¤	findCloakForToggle : function(toggle) {¤		if (!toggle.cloak) {¤			// Get all values after the first 4 as the cloak id.¤			var cloakId = toggle.id.substr(4);¤			toggle.cloak = document.getElementById(cloakId);¤		}¤		return toggle.cloak;¤	},¤	_blockTagList : "|DIV|P|LI|TD|TH|PRE|BLOCKQUOTE|H1|H2|H3|H4|H5|H6|",¤	findParentBlock : function(node) {¤		while (node)¤		{¤			if (Cloak._blockTagList.indexOf('|'+node.tagName+'|') > 0)¤				//if (Cloak._blockTagList.test(node.tagName))¤				return node;¤			node = node.parentNode;¤		}¤		return null;¤	},¤// The Behaviour rules.¤rules : {¤'span.cloakExclusive' : function(toggle) {¤toggle.exclusive = true;¤},¤'span.cloakToggle' : function(toggle) {¤	toggle.cloak = Cloak.findCloakForToggle(toggle);¤	if (toggle.cloak)¤	{¤		if (!(toggle.cloak.toggles))¤		{¤			toggle.cloak.toggles = new Array();¤		}¤		toggle.cloak.toggles.push(toggle);¤		toggle.doToggle = function() {¤		if (this.cloak.isCloaked() && this.exclusive)¤		{¤			if (this.cloak.parentCloak)¤				this.cloak.parentCloak.cloakChildren();¤			else¤				Cloak.cloakAll();¤		}¤		this.cloak.toggleCloak();¤	};¤toggle.updateHTML = function() {¤if (this.cloak.isCloaked())¤this.innerHTML = Cloak.openHTML;¤else¤this.innerHTML = Cloak.closeHTML;¤};¤var block;¤if (Cloak.toggleZone) {¤block = Cloak.findParentBlock(toggle);¤if (block)¤{¤block.toggle = toggle;¤block.className += (block.className ? " " : "") + "cloakToggle";¤block.onclick = function() {¤this.toggle.doToggle();¤};¤block.onkeypress = function(event) {¤// Only toggle only on enter¤if (event.which == 13)¤this.toggle.doToggle();¤};¤}¤}¤if (!block) {¤// toggles¤toggle.onclick = function() {¤this.doToggle();¤};¤toggle.onkeypress = function() {¤this.doToggle();¤};¤}¤// Initialisation¤toggle.innerHTML = Cloak.openHTML;¤}¤},¤'span.cloak' : function(cloak) {¤cloak.isCloaked = function() {¤return this.style.display == "none";¤};¤// Allows addition of children.¤cloak.addChildCloak = function(childCloak) {¤if (!this.childCloaks)¤this.childCloaks = new Array();¤this.childCloaks.push(childCloak);¤};¤/**¤* Cloaks the section.¤*¤* @param cascade if true, cloak all child cloak sections.¤*/¤cloak.cloak = function(cascade) {¤this.style.display = "none";¤this.updateToggles();¤if (cascade)¤this.cloakChildren(cascade);¤if (this.parentBlock)¤{¤// This is a work-around for a weird rendering issue in Opera.¤var parentBlockDisplay = this.parentBlock.style.display;¤if (parentBlockDisplay != "none")¤{¤this.parentBlock.style.display = "none";¤this.parentBlock.style.display = parentBlockDisplay;¤}¤}¤};¤/**¤* Cloaks any child cloaks this section may contain.¤*/¤cloak.cloakChildren = function(cascade) {¤if (this.childCloaks)¤{¤for (var i = 0; i < this.childCloaks.length; i++)¤this.childCloaks[i].cloak(cascade);¤}¤};¤cloak.uncloak = function(cascade) {¤this.style.display = "";¤this.updateToggles();¤if (cascade)¤this.uncloakChildren(cascade);¤};¤cloak.uncloakChildren = function(cascade) {¤if (this.childCloaks)¤{¤for (var i = 0; i < this.childCloaks.length; i++)¤this.childCloaks.uncloak(cascade);¤}¤};¤cloak.updateToggles = function() {¤if (this.toggles)¤{¤for (var i = 0; i < this.toggles.length; i++)¤{¤this.toggles[i].updateHTML();¤}¤}¤}¤cloak.toggleCloak = function(cascade) {¤if (this.isCloaked())¤{¤this.uncloak(cascade);¤}¤else¤{¤this.cloak(cascade);¤}¤};¤cloak.parentCloak = Cloak.findParentCloak(cloak);¤if (document.browserInfo.isOpera) {¤cloak.parentBlock = Cloak.findParentBlock(cloak);¤}¤// register the cloak for later.¤if (cloak.parentCloak)¤cloak.parentCloak.addChildCloak(cloak);¤else¤Cloak.rootCloaks.push(cloak);¤cloak.updateToggles();¤},¤'span.cloakHidden' : function(cloak) {¤cloak.cloak();¤}¤}¤};¤Behaviour.register(Cloak.rules);¤if (Memory) {¤Memory.addLoadEvent(Cloak.recall);¤Memory.addUnloadEvent(Cloak.store);¤}¤var Deck = {¤/**¤* Returns the deck with the specified id, if it exists.¤*/¤get : function(id) {¤return $("deck:" + id);¤},¤memoryDuration : 0,¤// The prefix to place in front of the¤memoryPrefix : window.location.pathname,¤memoryName : function() {¤return Deck.memoryPrefix + ":deckData";¤},¤memoryPath : "/",¤// The array of decks in the page.¤allDecks : new Array(),¤store : function() {¤if (Deck.memoryDuration <= 0)¤{¤Memory.forgetValue(Deck.memoryName(), Deck.memoryPath);¤return;¤}¤var expdate = new Date ();¤expdate.setTime(expdate.getTime() + (24 * 60 * 60 * 1000) * Deck.memoryDuration );¤var data = new Object();¤var decks = Deck.allDecks;¤for (var i = 0; i < decks.length; i++)¤{¤if (decks[i].currentCard) {¤data[decks[i].id] = decks[i].currentCard.label;¤}¤}¤Memory.storeMap(Deck.memoryName(), data, expdate, Deck.memoryPath);¤},¤recall : function() {¤if (Deck.memoryDuration <= 0)¤{¤Memory.forgetValue(Deck.memoryName(), Deck.memoryPath);¤return;¤}¤var data = Memory.recallMap(Deck.memoryName());¤for (id in data)¤{¤var deck = document.getElementById(id);¤if (deck && deck.cards)¤{¤var card = deck.cards[data[id]];¤if (card)¤card.show();¤}¤}¤},¤findParentDeck : function(el) {¤var parent = el.parentNode;¤while (parent && !parent.cards)¤parent = parent.parentNode;¤return parent;¤},¤_initDeck : function(deck) {¤deck.tabLocation = deck.getAttribute("tablocation");¤deck.effectType = deck.getAttribute("effecttype");¤deck.effectDuration = parseFloat(deck.getAttribute("effectduration"));¤deck.nextAfter = parseFloat(deck.getAttribute("nextafter"));¤deck.loopCards = deck.getAttribute("loopcards") == "true";¤},¤_initCard : function(card) {¤card.label = card.getAttribute("label");¤card.labelRendered = card.getAttribute("labelrendered");¤card.defaultCard = card.getAttribute("defaultcard") == "true";¤card.accessKey = card.getAttribute("accesskey");¤card.effectType = card.getAttribute("effecttype");¤card.effectDuration = parseFloat(card.getAttribute("effectduration"));¤card.nextAfter = parseFloat(card.getAttribute("nextafter"));¤},¤// This method copies any undeclared attributes directly into the object.¤_copyAttributes : function(el) {¤var attrs = el.attributes;¤var attr;¤for (var i = 0; i < attrs.length; i++)¤{¤attr = attrs.item(i);¤if (!el[attr.name])¤{¤el[attr.name] = attr.value;¤}¤}¤},¤rules : {¤'div.deck' : function(el) {¤el.addCard = function(card) {¤this.cards[card.label] = card;¤if (!this.firstCard)¤this.firstCard = card;¤if (this.lastCard) {¤this.lastCard.nextCard = card;¤card.prevCard = this.lastCard;¤}¤this.lastCard = card;¤if (this.loopCards && this.firstCard != card) {¤card.nextCard = this.firstCard;¤this.firstCard.prevCard = card;¤}¤// Create a label¤if (this.tabLocation != "none") {¤var td = document.createElement("td");¤var tab = document.createElement("div");¤// Setup methods¤tab.activate = function() {¤this.id = "current";¤};¤tab.deactivate = function() {¤this.id = null;¤}¤tab.onclick = function(evt) {¤this.card.show();¤if (window.event && window.event.srcElement && window.event.srcElement.blur) {¤window.event.srcElement.blur();¤} else if (evt && evt.target && evt.target.blur) {¤evt.target.blur();¤}¤return false;¤};¤// The actual link¤var link = document.createElement("a");¤link.innerHTML = card.labelRendered;¤link.accessKey = card.accessKey;¤link.href = "#";¤tab.className = "tab" + card.className.substr(4);¤tab.parentDeck = this;¤tab.card = card;¤tab.appendChild(link);¤td.appendChild(tab);¤this.tabBar.row.appendChild(td);¤card.tab = tab;¤}¤Element.hide(card);¤if (!this.currentCard || card.defaultCard)¤card.show();¤}¤el.showFirstCard = function() {¤this.firstCard.show();¤}¤el.showLastCard = function() {¤this.lastCard.show();¤}¤el.showNextCard = function() {¤if (this.currentCard && this.currentCard.nextCard)¤this.currentCard.nextCard.show(arguments[0]);¤}¤el.showPrevCard = function() {¤if (this.currentCard && this.currentCard.prevCard)¤this.currentCard.prevCard.show();¤}¤el.getNextAfter = function() {¤if (this.nextAfter)¤return this.nextAfter;¤else¤return 0.0;¤}¤el.getEffectDuration = function() {¤if (this.effectDuration)¤return this.effectDuration;¤else¤return 1.0;¤}¤el.getEffectType = function() {¤return this.effectType;¤}¤el.setTransitioning = function(transitioning) {¤this.transitioning = transitioning;¤}¤el.isTransitioning = function() {¤return this.transitioning;¤}¤el.scrollTo = function() {¤Element.scrollTo(this);¤}¤// Initialise the deck¤Deck.allDecks.push(el);¤Deck._initDeck(el);¤el.cards = new Object();¤el.transitionTimeout = 0;¤Element.show(el);¤if (el.tabLocation != "none")¤{¤el.tabBar = document.createElement("div");¤el.tabBar.className = "tabBar " + el.tabLocation;¤var table = document.createElement("table");¤table.cellSpacing = 0;¤el.tabBar.appendChild(table);¤var tbody = document.createElement("tbody");¤table.appendChild(tbody);¤var row = document.createElement("tr");¤tbody.appendChild(row);¤el.tabBar.row = row;¤if (el.tabLocation == "top")¤el.insertBefore(el.tabBar, el.firstChild);¤else¤el.appendChild(el.tabBar);¤}¤},¤'div.card' : function(el) {¤el.activateTab = function(active) {¤if (this.tab)¤{¤if (active)¤this.tab.activate();¤else¤this.tab.deactivate();¤}¤};¤el.show = function() {¤if (arguments[0] && arguments[0] != this.parentDeck.nextAfterTimestamp)¤return;¤if (this.parentDeck.isTransitioning())¤return;¤var oldCard = this.parentDeck.currentCard;¤if (oldCard != this) {¤this.parentDeck.setTransitioning(true);¤if (oldCard)¤oldCard.activateTab(false);¤this.activateTab(true);¤this.parentDeck.currentCard = this;¤var effect = this.getEffectType();¤var duration = this.getEffectDuration();¤var options = {¤deck: this.parentDeck,¤duration: duration,¤queue: {position:'end', scope: this.parentDeck.id},¤afterTransition: function(effect) {¤effect.options.deck.setTransitioning(false);¤effect.options.deck.currentCard.startNextAfter();¤}¤};¤if (effect == "fade") {¤Transition.FadeAndScale(oldCard, this, options);¤}¤else {¤Transition.Switch(oldCard, this, options);¤}¤}¤else¤{¤this.startNextAfter();¤}¤}¤el.startNextAfter = function() {¤// Handle the auto-transition.¤var nextAfter = this.getNextAfter();¤if (this.nextCard && nextAfter > 0) {¤var now = new Date();¤this.parentDeck.nextAfterTimestamp = now.getTime();¤window.setTimeout("$('" + this.parentDeck.id + "').showNextCard(" + now.getTime() + ");", nextAfter * 1000);¤}¤else {¤this.parentDeck.nextAfterTimestamp = null;¤}¤}¤el.getNextAfter = function() {¤if (this.nextAfter)¤return this.nextAfter;¤else¤return this.parentDeck.getNextAfter();¤}¤el.getEffectDuration = function() {¤if (this.effectDuration)¤return this.effectDuration;¤else¤return this.parentDeck.getEffectDuration();¤}¤el.getEffectType = function() {¤if (this.effectType)¤return this.effectType;¤else¤return this.parentDeck.getEffectType();¤}¤// Initialise the card¤Deck._initCard(el);¤el.parentDeck = Deck.findParentDeck(el);¤if (el.parentDeck) {¤el.parentDeck.addCard(el);¤}¤}¤}¤};¤Behaviour.register(Deck.rules);¤if (Memory) {¤Memory.addLoadEvent(Deck.recall);¤Memory.addUnloadEvent(Deck.store);¤}¤var Memory = {¤/**¤* Function to return the value stored agains the specified "name".¤* name - String object containing the cookie name.¤* returns - String object containing the cookie value, or null if¤* the cookie does not exist.¤*/¤recallValue : function(name) {¤var arg = name + "=";¤var alen = arg.length;¤var clen = document.cookie.length;¤var i = 0;¤while (i < clen) {¤var j = i + alen;¤if (document.cookie.substring(i, j) == arg)¤return this._getCookieVal (j);¤i = document.cookie.indexOf(" ", i) + 1;¤if (i == 0) break;¤}¤return null;¤},¤recallMap : function(name) {¤var value = this.recallValue(name);¤if (value)¤{¤var map = new Object();¤var entries = value.split("|");¤for (var i = 0; i < entries.length-1; i++)¤{¤var keyValue = entries[i].split("=");¤if (keyValue.length == 2)¤{¤map[unescape(keyValue[0])] = unescape(keyValue[1]);¤}¤}¤return map;¤}¤return null;¤},¤// "Internal" function to return the decoded value of a cookie¤_getCookieVal : function(offset) {¤var endstr = document.cookie.indexOf (";", offset);¤if (endstr == -1)¤endstr = document.cookie.length;¤return unescape(document.cookie.substring(offset, endstr));¤},¤/**¤* Function to create or update a stored value.¤* name - The name to store the value against.¤* value - The value to store.¤* [expires] - Date object containing the expiration date of the value. If¤* omitted or null, the value will be lost at the end of the current session.¤* [path] - String object indicating the path for which the value is accessible.¤* If omitted or null, uses the path of the calling document.¤* [domain] - String object indicating the domain for which the value is¤* valid. If omitted or null, uses the domain of the calling document.¤* [secure] - Boolean (true/false) value indicating whether cookie transmission¤* requires a secure channel (HTTPS).¤*¤* The first two parameters are required. The others, if supplied, must¤* be passed in the order listed above. To omit an unused optional field,¤* use null as a place holder. For example, to call setValue using name,¤* value and path, you would code:¤*¤* Memory.setValue ("myName", "myValue", null, "/");¤*¤* Note that trailing omitted parameters do not require a placeholder.¤*¤* To set a secure cookie for path "/myPath", that expires after the¤* current session, you might code:¤*¤* Memory.storeValue (myCookieVar, cookieValueVar, null, "/myPath", null, true);¤*/¤storeValue : function(name, value, expires, path, domain, secure) {¤document.cookie = name + "=" + escape (value) +¤((expires) ? "; expires=" + expires.toGMTString() : "") +¤((path) ? "; path=" + path : "") +¤((domain) ? "; domain=" + domain : "") +¤((secure) ? "; secure" : "");¤},¤/**¤* This function works the same as 'storeValue', except that the value is¤* a simple string map - essentially a basic Object with string values stored¤* in paramters.¤*/¤storeMap : function(name, map, expires, path, domain, secure) {¤var value = "";¤for (key in map) {¤if (typeof(map[key] == "string")) {¤var keyValue = escape(key) + "=" + escape(map[key]);¤value += keyValue + "|";¤}¤}¤this.storeValue(name, value, expires, path, domain, secure);¤},¤/**¤* Function to forget stored values.¤* name - The name the value was stored against.¤* path - String object containing the path of the value to delete. This MUST¤* be the same as the path used to store the value, or null/omitted if¤* no path was specified originally.¤* domain - String object containing the domain. This MUST¤* be the same as the domain used to store the value, or null/omitted if¤* no domain was specified originally.¤*/¤forgetValue : function(name, path, domain) {¤if (this.recallValue(name)) {¤document.cookie = name + "=" +¤((path) ? "; path=" + path : "") +¤((domain) ? "; domain=" + domain : "") +¤"; expires=Thu, 01-Jan-70 00:00:01 GMT";¤}¤},¤addLoadEvent : function(func){¤if (window.addEventListener) {¤var load = function() {¤if (arguments.callee.done)¤return;¤arguments.callee.done = true;¤arguments.callee.func();¤}¤load.func = func;¤window.addEventListener("DOMContentLoaded", load, false);¤window.addEventListener("load", load, false);¤} else if (window.attachEvent) {¤window.attachEvent('onload',func);¤} else {¤var oldonload = window.onload;¤if (typeof window.onload != 'function') {¤window.onload = func;¤} else {¤window.onload = function() {¤oldonload();¤func();¤}¤}¤}¤},¤/**¤* A utility function which helps multiple objects to be notified of an 'unload' event.¤* func - The function to call when the page 'unloads'.¤*/¤addUnloadEvent : function(func){¤var oldunload = window.onunload;¤if (typeof window.onunload != 'function') {¤window.onunload = func;¤} else {¤window.onunload = function() {¤oldunload();¤func();¤}¤}¤}¤};¤var Transition = {¤storeValue: function(element, propertyName)¤{¤for (var i = 1; i < arguments.length; i++)¤element['__' + arguments[i]] = element.style[arguments[i]];¤},¤setValue: function(element, propertyName, value)¤{¤Transition.storeValue(element, propertyName);¤element.style[propertyName] = value;¤},¤restoreValue: function(element, propertyName)¤{¤for (var i = 1; i < arguments.length; i++)¤element.style[arguments[i]] = element['__' + arguments[i]];¤},¤debug: function(name, visibleElement, hiddenElement)¤{¤if (visibleElement) Transition.debugDimensions(name + ': visibleElement', visibleElement);¤Transition.debugDimensions(name + ': hiddenElement', hiddenElement);¤Transition.debugDimensions(name + ': parent', hiddenElement.parentNode);¤},¤debugDimensions: function(name, element)¤{¤},¤getStyle: function(element, style) {¤element = $(element);¤var value = element.style[style.camelize()];¤if (!value) {¤if (document.defaultView && document.defaultView.getComputedStyle) {¤var css = document.defaultView.getComputedStyle(element, null);¤value = css ? css.getPropertyValue(style) : null;¤} else if (element.currentStyle) {¤value = element.currentStyle[style.camelize()];¤}¤}¤if (window.opera && ['left', 'top', 'right', 'bottom'].include(style))¤if (Transition.getStyle(element, 'position') == 'static') value = 'auto';¤return value == 'auto' ? null : value;¤},¤positionedOffset: function(element) {¤var valueT = 0, valueL = 0;¤do {¤valueT += element.offsetTop || 0;¤valueL += element.offsetLeft || 0;¤element = element.offsetParent;¤if (element) {¤p = Transition.getStyle(element, 'position');¤if (p == 'relative' || p == 'absolute') break;¤}¤} while (element);¤return [valueL, valueT];¤},¤/**¤* Overlays the target element on top of the source, optionally changing its dimensions.¤*/¤overlay: function(source, target, resize)¤{¤source = $(source);¤target = $(target);¤Transition.setValue(target, 'position', 'absolute');¤var offsets = Transition.positionedOffset(source);¤Transition.setValue(target, 'top', offsets[1] + 'px');¤Transition.setValue(target, 'left', offsets[0] + 'px');¤if (resize)¤{¤Element.makeClipping(target);¤Transition.measure(source);¤Transition.setValue(target, 'width', source.getRealWidth());¤Transition.setValue(target, 'height', source.getRealHeight());¤}¤},¤unoverlay: function(source, target, resize)¤{¤source = $(source);¤target = $(target);¤Transition.restoreValue(target, 'position', 'top', 'left');¤if (resize)¤{¤Transition.restoreValue(target, 'width', 'height');¤Element.undoClipping(target);¤}¤},¤/**¤* This function will measure the 'real' width and height of the specified¤* element, taking into account the padding/border/whatever.¤*/¤measure: function(element)¤{¤if ((element.extraWidth || false) && (element.extraHeight || false))¤return;¤var originalWidth = element.style.width;¤var originalHeight = element.style.height;¤var originalDisplay, originalVisibility, originalPosition;¤if (element.style.display == 'none')¤{¤originalDisplay = element.style.display;¤originalVisibility = element.style.visibility;¤originalPosition = element.style.position;¤element.style.visibility = 'hidden';¤element.style.display = '';¤element.style.position = 'absolute';¤}¤var width = element.offsetWidth;¤var height = element.offsetHeight;¤element.style.width = width + 'px';¤element.style.height = height + 'px';¤// Account for the discrepency which seems to occur (due to padding/margin?)¤element.extraWidth = element.offsetWidth - width;¤element.extraHeight = element.offsetHeight - height;¤// This is the result:¤element.getRealWidth = function()¤{¤return this.offsetWidth - element.extraWidth;¤};¤element.getRealHeight = function()¤{¤return this.offsetHeight - element.extraHeight;¤}¤// Resetting...¤element.style.width = originalWidth;¤element.style.height = originalHeight;¤if (originalDisplay == 'none')¤{¤element.style.display = originalDisplay;¤element.style.visibility = originalVisibility;¤element.style.position = originalPosition;¤}¤}¤};¤Transition.Transitions = {}¤Transition.Transitions.late = function(pos) {¤if (pos < 0.5)¤return 0;¤pos = pos * 2.0 - 1.0;¤return pos(-Math.cos(pos*Math.PI)/2) + 0.5;¤}¤Transition.Transitions.early = function(pos) {¤if (pos > 0.5)¤return 0;¤pos = pos * 2.0;¤return pos(-Math.cos(pos*Math.PI)/2) + 0.5;¤}¤Transition.FadeAndScale = function(visibleElement, hiddenElement)¤{¤var xPercent, yPercent, startWidth, startHeight;¤// Make sure we're working with the element objects.¤visibleElement = $(visibleElement);¤hiddenElement = $(hiddenElement);¤var debugIndex = 0;¤Transition.debug(debugIndex++, visibleElement, hiddenElement);¤// Turn the hidden element on in invisible mode.¤//alert('Element.setOpacity(hiddenElement, 0.0);');¤Element.setOpacity(hiddenElement, 0.0);¤//alert('Element.show(hiddenElement);');¤Element.show(hiddenElement);¤//alert('Transition.measure(hiddenElement);');¤Transition.measure(hiddenElement);¤if (visibleElement)¤{¤// Do width/height stuff...¤//alert("Transition.storeValue(visibleElement, 'width', 'height');");¤Transition.storeValue(visibleElement, 'width', 'height');¤//alert("Transition.measure(visibleElement);");¤Transition.measure(visibleElement);¤// Figure out the scale factor¤xPercent = (hiddenElement.getRealWidth() / visibleElement.getRealWidth()) * 100¤yPercent = (hiddenElement.getRealHeight() / visibleElement.getRealHeight()) * 100;¤// Overlay the visible element¤//alert("Transition.overlay(visibleElement, hiddenElement, true);");¤Transition.overlay(visibleElement, hiddenElement, true);¤//alert("Element.makeClipping(visibleElement);");¤Element.makeClipping(visibleElement);¤//alert("Transition.setValue(hiddenElement, 'zIndex', 100);");¤Transition.setValue(hiddenElement, 'zIndex', 10);¤startWidth = visibleElement.getRealWidth();¤startHeight = visibleElement.getRealHeight();¤}¤else¤{¤Transition.storeValue(hiddenElement, 'width', 'height');¤xPercent = yPercent = 100.0;¤startWidth = hiddenElement.getRealWidth();¤startHeight = hiddenElement.getRealHeight();¤}¤var options = Object.extend(¤{¤visibleElement: visibleElement,¤hiddenElement: hiddenElement,¤beforeSetup: function(effect)¤{¤if (effect.options.beforeTransition)¤effect.options.beforeTransition();¤},¤afterFinish: function(effect)¤{¤var oldEl = effect.options.visibleElement;¤var newEl = effect.options.hiddenElement;¤if (oldEl)¤{¤//alert("Element.undoClipping(oldEl);");¤Element.undoClipping(oldEl);¤//alert("Transition.restoreValue(oldEl, 'width', 'height');");¤Transition.restoreValue(oldEl, 'width', 'height');¤//alert("Transition.unoverlay(oldEl, newEl, true);");¤Transition.unoverlay(oldEl, newEl, true);¤//alert("Element.hide(oldEl);");¤Element.hide(oldEl);¤Element.setOpacity(oldEl, 100.0);¤//alert("Transition.restoreValue(newEl, 'zIndex');");¤Transition.restoreValue(newEl, 'zIndex');¤}¤else¤{¤Transition.restoreValue(newEl, 'width', 'height');¤}¤Transition.debug("afterFinish", oldEl, newEl);¤if (effect.options.afterTransition)¤{¤effect.options.afterTransition(effect);¤}¤}¤},¤(arguments[2] || {})¤);¤// The starting scale mode.¤var scaleMode = {¤originalWidth: startWidth,¤originalHeight: startHeight¤};¤Transition.debug(debugIndex++, visibleElement, hiddenElement);¤new Effect.Parallel(¤[¤// Fade in the new element¤new Effect.Opacity(hiddenElement,¤{¤from: 0.0,¤to: 2.0 // Double the end opacity so it fades in early.¤}),¤// Scale to the new width¤new Effect.Scale(hiddenElement, xPercent,¤{¤scaleContent: false,¤scaleY: false,¤scaleMode: scaleMode¤}),¤// Scale to the new height¤new Effect.Scale(hiddenElement, yPercent,¤{¤scaleContent: false,¤scaleX: false,¤scaleMode: scaleMode¤})¤].concat(¤(visibleElement) ?¤[¤// Fade out the old element¤new Effect.Opacity(visibleElement,¤{¤from: 2.0, // Double the starting opacity so it fades out late.¤to: 0.0¤}),¤// Scale to the new width¤new Effect.Scale(visibleElement, xPercent,¤{¤scaleContent: false,¤scaleY: false,¤scaleMode: scaleMode¤}),¤// Scale to the new height¤new Effect.Scale(visibleElement, yPercent,¤{¤scaleContent: false,¤scaleX: false,¤scaleMode: scaleMode¤})¤] : []),¤options¤);¤//Transition.debug(debugIndex++, visibleElement, hiddenElement);¤}¤Transition.Switch = function(visibleElement, hiddenElement)¤{¤var proxyEffect = {¤options: arguments[2]¤};¤if (arguments[2] && arguments[2].beforeTransition)¤arguments[2].beforeTransition(proxyEffect);¤if (visibleElement)¤Element.hide(visibleElement);¤Element.show(hiddenElement);¤if (arguments[2] && arguments[2].afterTransition)¤arguments[2].afterTransition(proxyEffect);¤}¤}¤¤Cloak.closeHTML = "<img src=\'/download/resources/net.customware.confluence.plugin.composition:toggle-cloak/img/navigate_down_10.gif\'/>";¤Cloak.openHTML = "<img src=\'/download/resources/net.customware.confluence.plugin.composition:toggle-cloak/img/navigate_right_10.gif\'/>";¤Cloak.toggleZone = true;¤Cloak.memoryDuration = 10;¤Cloak.memoryPrefix = "contentId:552075268";¤Cloak.memoryPath = "/";¤// ]]></script><style type='text/css'>¤.cloakToggle { /* Definition for state toggling image */¤cursor:hand;¤cursor:pointer;¤} ¤</script>¤##UC_END*4F1930D3015A_CUSTOM_CONTENT*
		    )))
	    quid       	"4F1930D3015A"
	    documentation 	"содержатся javascript-функции для, например, удаления ОГВ"
	    stereotype 	"VM"
	    language   	"MDA Generator"))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"477E2A5302BF"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	367
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::PageView::pagetreeopenbranch" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"411")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1434")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"420")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(483, 1143)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(282, 1115)
			fill_color 	13434879
			nlines     	1
			max_width  	402
			justify    	0
			label      	"pagetreeopenbranch")
		    stereotype 	(object ItemLabel
			Parent_View 	@1
			location   	(282, 1065)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	402
			justify    	0
			label      	"<<VM>>")
		    icon_style 	"Label"
		    fill_color 	14790645
		    quidu      	"46E7E7F800CB"
		    width      	420
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::PageView::selectpage-filter" @2
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1605")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1416")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"332")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(1677, 1125)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(1508, 1097)
			fill_color 	13434879
			nlines     	1
			max_width  	338
			justify    	0
			label      	"selectpage-filter")
		    stereotype 	(object ItemLabel
			Parent_View 	@2
			location   	(1508, 1047)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	338
			justify    	0
			label      	"<<VM>>")
		    icon_style 	"Label"
		    fill_color 	14790645
		    quidu      	"4729E4480337"
		    width      	356
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::PageView::removedescendants" @3
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"339")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"507")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"414")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"182"))
		    location   	(1134, 1131)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@3
			location   	(936, 1101)
			fill_color 	13434879
			nlines     	1
			max_width  	396
			justify    	0
			label      	"removedescendants")
		    stereotype 	(object ItemLabel
			Parent_View 	@3
			location   	(936, 1051)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	396
			justify    	0
			label      	"<<VM>>")
		    icon_style 	"Label"
		    fill_color 	14790645
		    quidu      	"45DAF51D01A5"
		    width      	414
		    height     	184
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::ConfluencePlugins::PageView::garextendedpage" @4
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(885, 462)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(716, 433)
			fill_color 	13434879
			nlines     	1
			max_width  	338
			justify    	0
			label      	"garextendedpage")
		    stereotype 	(object ItemLabel
			Parent_View 	@4
			location   	(716, 383)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	338
			justify    	0
			label      	"<<VM>>")
		    icon_style 	"Label"
		    fill_color 	14790645
		    quidu      	"4F1930D3015A"
		    width      	356
		    height     	182
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::external::JavaConfluence::pages::viewpage" @5
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1743, 558)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@5
			location   	(1599, 530)
			fill_color 	13434879
			nlines     	1
			max_width  	288
			justify    	0
			label      	"• viewpage")
		    stereotype 	(object ItemLabel
			Parent_View 	@5
			location   	(1599, 480)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<VM>>")
		    icon_style 	"Label"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"477DECE40234"
		    width      	306
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @6
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @7
			Parent_View 	@6
			location   	(897, 837)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<include>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"4F19381A0382"
		    client     	@3
		    supplier   	@4
		    vertices   	(list Points
			(1099, 1038)
			(918, 553))
		    line_style 	0)))))
