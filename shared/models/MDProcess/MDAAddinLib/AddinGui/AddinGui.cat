
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.060314"
    charSet    	204)

(object Class_Category "MDAGui"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"is namespace"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"need UC"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (cpp)"
	    value      	"w:/MDProcess/MDAAddinLib/AddinGui/AdvancedSearch.cpp::4573E7840177;w:/MDProcess/MDAAddinLib/MDAGui/AdvancedSearch.cpp::4573E7840177;w:/MDProcess/MDAAddinLib/MDAGui/ChoiceType.cpp::457415BB033C;w:/MDProcess/MDAAddinLib/MDAGui/CreateReport.cpp::46CA74630128;w:/MDProcess/MDAAddinLib/MDAGui/GenStatistics.cpp::457416330177;w:/MDProcess/MDAAddinLib/MDAGui/GeneratorSelect.cpp::4574166E02FD;w:/MDProcess/MDAAddinLib/MDAGui/MdaAbout.cpp::458E706E0066;w:/MDProcess/MDAAddinLib/MDAGui/MdaStart.cpp::457415F60222;w:/MDProcess/MDAAddinLib/MDAGui/ReportView.cpp::457415DF00BB;w:/MDProcess/MDAAddinLib/MDAGui/StCollection.cpp::4574164F0242;w:/MDProcess/MDAAddinLib/MDAGui/StartProperties.cpp::457416030271;w:/MDProcess/MDAAddinLib/MDAGui/TemplArgs.cpp::4574165F0222;w:/MDProcess/MDAAddinLib/MDAGui/UnusedUserCode.cpp::457416890148")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (h)"
	    value      	"w:/MDProcess/MDAAddinLib/MDAGui/ATLControls.h::45B5D15C031C;w:/MDProcess/MDAAddinLib/MDAGui/AdvancedSearch.h::4573E7840177;w:/MDProcess/MDAAddinLib/MDAGui/ChoiceType.h::457415BB033C;w:/MDProcess/MDAAddinLib/MDAGui/CreateReport.h::46CA74630128;w:/MDProcess/MDAAddinLib/MDAGui/GenStatistics.h::457416330177;w:/MDProcess/MDAAddinLib/MDAGui/GeneratorSelect.h::4574166E02FD;w:/MDProcess/MDAAddinLib/MDAGui/MdaAbout.h::458E706E0066;w:/MDProcess/MDAAddinLib/MDAGui/MdaStart.h::457415F60222;w:/MDProcess/MDAAddinLib/MDAGui/ReportView.h::457415DF00BB;w:/MDProcess/MDAAddinLib/MDAGui/StCollection.h::4574164F0242;w:/MDProcess/MDAAddinLib/MDAGui/StartProperties.h::457416030271;w:/MDProcess/MDAAddinLib/MDAGui/TemplArgs.h::4574165F0222;w:/MDProcess/MDAAddinLib/MDAGui/UnusedUserCode.h::457416890148")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ApplyedGens"
	    value      	"All")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"WikiPageID (wiki)"
	    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui|4573E75F034B
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED WikiPageID (wiki)"
	    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/ATLControls|45B5D15C031C::45B5D15C031C;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/AdvancedSearch|4573E7840177::4573E7840177;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/CTooltipListCtrl|45F982BB0128::45F982BB0128;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/ChangedPackageInfo/Info|4733E1300119::4732CB080290;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/ChangedPackageInfo|4732CB080290::4732CB080290;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/ChoiceDialog|46FA6E2B030D::46FA6E2B030D;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/ChoiceType|457415BB033C::457415BB033C;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/Contents|4573E7D70290::4573E7D70290;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/CreateReport|46CA74630128::46CA74630128;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/EnterStringDialog|462D86BF02FD::462D86BF02FD;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/GenStatistics|457416330177::457416330177;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/GeneratorSelect|4574166E02FD::4574166E02FD;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppApplGen|4574179402BF::4574179402BF;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppBase|4574171C00FA::4574171C00FA;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppDerivedImpl|4574178302DE::4574178302DE;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppException|457417610109::457417610109;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppNative|457417BB0232::457417BB0232;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppStd|4574173603A9::4574173603A9;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppSystem|457417A3005D::457417A3005D;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppUserProp/GUITreePropertyBuilder|46FC8D2A02AF::4574175201B5;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppUserProp|4574175201B5::4574175201B5;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/IppUses|45741774008C::45741774008C;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/ItemPropertySheet|457417C60177::457417C60177;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/MDSupportServerAuthorization/DialogData|461FB45000AA::45E8174C0193;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/MDSupportServerAuthorization|45E8174C0193::45E8174C0193;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/MdaAbout|458E706E0066::458E706E0066;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/MdaStart/Result|457575E20125::457415F60222;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/MdaStart|457415F60222::457415F60222;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/QuestionBox|45FE6247002E::45FE6247002E;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/ReportView|457415DF00BB::457415DF00BB;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/StCollection|4574164F0242::4574164F0242;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/StartProperties/Result|4575757C004A::457416030271;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/StartProperties|457416030271::457416030271;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/TemplArgs|4574165F0222::4574165F0222;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/ToClearLockedPacks|45F177A70186::45F177A70186;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/UnusedUserCode|457416890148::457416890148;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/AdvancedSearch|4573E7840177::4573E7840177;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/CreateReport|46CA74630128::46CA74630128;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/ReportView|457415DF00BB::457415DF00BB;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/StCollection|4574164F0242::4574164F0242;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/TemplArgs|4574165F0222::4574165F0222;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/AdvancedSearch|4573E7840177::4573E7840177;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/CTooltipListCtrl|45F982BB0128::45F982BB0128;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/ChoiceType|457415BB033C::457415BB033C;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/Contents|4573E7D70290::4573E7D70290;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/GenStatistics|457416330177::457416330177;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/GeneratorSelect|4574166E02FD::4574166E02FD;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppApplGen|4574179402BF::4574179402BF;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppBase|4574171C00FA::4574171C00FA;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppDerivedImpl|4574178302DE::4574178302DE;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppException|457417610109::457417610109;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppNative|457417BB0232::457417BB0232;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppStd|4574173603A9::4574173603A9;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppSystem|457417A3005D::457417A3005D;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppUserProp|4574175201B5::4574175201B5;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/IppUses|45741774008C::45741774008C;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/ItemPropertySheet|457417C60177::457417C60177;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/MDSupportServerAuthorization|45E8174C0193::45E8174C0193;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/MdaAbout|458E706E0066::458E706E0066;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/MdaStart/Result|457575E20125::457415F60222;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/MdaStart|457415F60222::457415F60222;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/QuestionBox|45FE6247002E::45FE6247002E;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/ReportView|457415DF00BB::457415DF00BB;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/StCollection|4574164F0242::4574164F0242;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/StartProperties/Result|4575757C004A::457416030271;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/StartProperties|457416030271::457416030271;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/TemplArgs|4574165F0222::4574165F0222;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/ToClearLockedPacks|45F177A70186::45F177A70186;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/UnusedUserCode|457416890148::457416890148
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (wiki)"
	    value      	"wiki")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ElementCreationOrder"
	    value      	"19028326607"))
    quid       	"4573E75F034B"
    documentation 	"Пакет GUI контролов использующихся в генераторе"
    stereotype 	"Views"
    visible_categories 	(list visibility_relationship_list
	(object Visibility_Relationship
	    quid       	"457552AD020F"
	    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers"
	    quidu      	"4571A092005D")
	(object Visibility_Relationship
	    quid       	"45757A9C0115"
	    supplier   	"Logical View::shared::GCL::data"
	    quidu      	"44FEB6B3010B")
	(object Visibility_Relationship
	    quid       	"46F748320128"
	    supplier   	"Logical View::shared::GCL::str"
	    quidu      	"4503DF990167")
	(object Visibility_Relationship
	    quid       	"4700D2B602DE"
	    supplier   	"Logical View::shared::WinGUI::Controls"
	    quidu      	"46960AAE0251")
	(object Visibility_Relationship
	    quid       	"470B59FB02EE"
	    supplier   	"Logical View::shared::WinGUI::OptionTreeControls"
	    quidu      	"470AFB9A001F")
	(object Visibility_Relationship
	    quid       	"47982D6100AD"
	    supplier   	"Logical View::MDProcess::MDAAddinLib::CommonViews"
	    quidu      	"47981CB5012E")
	(object Visibility_Relationship
	    quid       	"47D6127E01F0"
	    supplier   	"Logical View::MDProcess::MDAModel::RoseTypes"
	    quidu      	"47D60FA90394")
	(object Visibility_Relationship
	    quid       	"47D62EE80080"
	    supplier   	"Logical View::MDProcess::MDAModel::MDPSupport"
	    quidu      	"462C6CDA02F3")
	(object Visibility_Relationship
	    quid       	"4907F46201F9"
	    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers"
	    quidu      	"4571D1820251")
	(object Visibility_Relationship
	    quid       	"4907F4C80053"
	    supplier   	"Logical View::MDProcess::MDAAddinLib::Helpers"
	    quidu      	"4907EEFC02BF")
	(object Visibility_Relationship
	    quid       	"4AA609F702C5"
	    supplier   	"Logical View::MDProcess::MDAModel::RoseModel"
	    quidu      	"497E91340355")
	(object Visibility_Relationship
	    quid       	"4AD85ADA0234"
	    supplier   	"Logical View::shared::WinGUI::Helpers"
	    quidu      	"4652AEC702AF")
	(object Visibility_Relationship
	    quid       	"4BE12CC8008C"
	    supplier   	"Logical View::MDProcess::MDAModel::GenSupport"
	    quidu      	"4AD420EB035E")
	(object Visibility_Relationship
	    quid       	"4BE2BF330023"
	    supplier   	"Logical View::MDProcess::MDAAddinLib::Commands"
	    quidu      	"48031C110142"))
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "AdvancedSearch"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Factory auto reg"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Factory default impl"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Factory key"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Servant Pool"
		    value      	"none")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4573E7840177_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *4573E7840177_CUSTOM_INCLUDES*¤#include "w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase.h"¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤#include "shared/GCL/str/str_op.h"¤//#UC END# *4573E7840177_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4573E7840177*"
		    value      	(value Text 
|//#UC START# *4573E7840177*¤/*namespace RoseHelper {¤	RoseHelper::TemplatesSet get_available_parent_by_constr_cached (¤		const AbstractDumperBase::Templates::key_type& key_child¤		, const AbstractDumperBase::Templates::value_type& child¤	) {¤		RoseHelper::AvailableParentByConstrMap::iterator f = RoseHelper::get_available_parent_by_constr_map ().find (key_child);¤		if (f == RoseHelper::get_available_parent_by_constr_map ().end ()) {¤			f = RoseHelper::get_available_parent_by_constr_map ().insert (¤				RoseHelper::AvailableParentByConstrMap::value_type (¤					key_child¤					, RoseHelper::get_available_parent_by_constr (key_child, child)¤				)¤			).first;¤		}¤		return f->second;¤	}¤}*/¤¤int get_column_index(CListCtrl& list, const char* name) {¤	char buf[128];¤	int count = list.GetHeaderCtrl()->GetItemCount();¤	LVCOLUMN info;¤	info.mask = LVCF_TEXT;¤	info.pszText = buf;¤	info.cchTextMax = 128;¤	for (int i = 0; i < count; i++) {¤		list.GetColumn (i, &info);¤		if (!strcmp (info.pszText, name)) {¤			return i;¤		}¤	}¤	return -1;¤}¤¤void AdvancedSearch::fill_st_list () {¤#ifndef GDS_NLOG_DEBUG¤	Core::GDS::StopWatch sw (GDS_CURRENT_FUNCTION);¤#endif¤¤	m_self_st_set.clear ();¤	m_content_st_set.clear ();¤	m_parent_st_set.clear ();¤	m_g_parent_st_set.clear ();¤¤	m_self_st.ResetContent();¤	m_parent_st.ResetContent();¤	m_g_parent_st.ResetContent();¤	m_content_st.ResetContent();¤¤	m_self_st_set.insert("");¤	m_parent_st_set.insert("");¤	m_g_parent_st_set.insert("");¤	m_content_st_set.insert("");¤	¤	m_up_name_1.ResetContent();¤	m_up_name_2.ResetContent();¤	m_up_name_3.ResetContent();¤	m_up_name_4.ResetContent();¤	m_up_name_1.AddString("");¤	m_up_name_2.AddString("");¤	m_up_name_3.AddString("");¤	m_up_name_4.AddString("");¤	¤	for (¤		AbstractDumperBase::Templates::const_iterator it = AbstractDumperBase::templates_begin ()¤		; it != AbstractDumperBase::templates_end ()¤		; it ++¤	) {¤		if (¤			m_cat.GetCheck () && it->second.classtype_name == "Category"¤			|| m_class.GetCheck () && it->second.classtype_name == "Class"¤			|| m_op.GetCheck () && it->second.classtype_name == "Operation"¤			|| m_attr.GetCheck () && it->second.classtype_name == "Attribute"¤			|| m_dep.GetCheck () && it->second.classtype_name == "ClassDependency"¤		) {¤			/*if (m_self_st.FindString(0, it->second.stereotype_name.data()) == CB_ERR) {¤				m_self_st.AddString (it->second.stereotype_name.data());							¤			}*/¤			m_self_st_set.insert (it->second.stereotype_name);¤			this->fill_up_list (it->second);¤¤			RoseHelper::TemplatesSet av_par = RoseHelper::get_available_parent_by_constr (it->first, *it);¤¤			for (RoseHelper::TemplatesSet::iterator it2 = av_par.begin(); it2 != av_par.end(); it2++) {¤				/*if (m_parent_st.FindString(0, (*it2)->second.stereotype_name.data()) == CB_ERR) {¤					m_parent_st.AddString ((*it2)->second.stereotype_name.data());¤¤					if (m_content_st.FindString(0, (*it2)->second.stereotype_name.data()) == CB_ERR) {¤						m_content_st.AddString ((*it2)->second.stereotype_name.data());¤					}¤				}*/¤				if (m_parent_st_set.insert ((*it2)->second.stereotype_name).second == true) {¤					m_content_st_set.insert ((*it2)->second.stereotype_name);¤				}¤¤				RoseHelper::TemplatesSet av_g_par = RoseHelper::get_available_parent_by_constr ((*it2)->first, **it2);¤¤				for (RoseHelper::TemplatesSet::iterator it3 = av_g_par.begin(); it3 != av_g_par.end(); it3++) {¤					/*if (m_g_parent_st.FindString(0, (*it3)->second.stereotype_name.data()) == CB_ERR) {¤						m_g_parent_st.AddString ((*it3)->second.stereotype_name.data());¤¤						this->requrcive_fill_content_sts (**it3);¤					}*/¤					if (m_g_parent_st_set.insert ((*it3)->second.stereotype_name).second == true) {¤						this->requrcive_fill_content_sts ((*it3)->first, **it3);¤					}¤				}¤			}¤		}¤	}¤	{¤	//Core::GDS::StopWatch sw ("Fill combo's");¤	////заполняем списки подготовленными данными¤	for (¤		GCL::StrSet::const_iterator it = m_parent_st_set.begin ()¤		; it != m_parent_st_set.end ()¤		; ++it¤	) {¤		m_parent_st.AddString (it->data ());¤	}¤	for (¤		GCL::StrSet::const_iterator it = m_g_parent_st_set.begin ()¤		; it != m_g_parent_st_set.end ()¤		; ++it¤	) {¤		m_g_parent_st.AddString (it->data ());¤	}¤	for (¤		GCL::StrSet::const_iterator it = m_content_st_set.begin ()¤		; it != m_content_st_set.end ()¤		; ++it¤	) {¤		m_content_st.AddString (it->data ());¤	}¤	for (¤		GCL::StrSet::const_iterator it = m_self_st_set.begin ()¤		; it != m_self_st_set.end ()¤		; ++it¤	) {¤		m_self_st.AddString (it->data ());¤	}¤	}¤}¤¤void AdvancedSearch::requrcive_fill_content_sts (¤	const AbstractDumperBase::Templates::key_type& key_child¤	, const AbstractDumperBase::Templates::value_type& child¤) {¤	//Core::GDS::StopWatchEx sw (GDS_CURRENT_FUNCTION);¤	if (m_content_st_set.insert (child.second.stereotype_name).second == true) {¤		RoseHelper::TemplatesSet av_par = RoseHelper::get_available_parent_by_constr (key_child, child);¤		for (RoseHelper::TemplatesSet::iterator it = av_par.begin(); it != av_par.end(); it++) {¤			this->requrcive_fill_content_sts ((*it)->first, **it);¤		}¤	}¤	/*if (m_content_st.FindString(0, child.second.stereotype_name.data()) == CB_ERR) {¤		m_content_st.AddString (child.second.stereotype_name.data());¤¤		RoseHelper::TemplatesSet av_par = RoseHelper::get_available_parent_by_constr (child);¤		for (RoseHelper::TemplatesSet::iterator it = av_par.begin(); it != av_par.end(); it++) {¤			this->requrcive_fill_content_sts (**it);¤		}¤	}*/¤}¤¤void AdvancedSearch::fill_up_list (const AbstractDumperBase::Template& tpl) {¤#ifndef GDS_NLOG_DEBUG¤	Core::GDS::StopWatchEx sw (GDS_CURRENT_FUNCTION);¤#endif¤¤	AbstractDumperBase::UserPropertyMap props;¤	if (tpl.user_properties_group.is_nil () == false) {		¤		tpl.user_properties_group->for_each (¤			AbstractDumperBase::CollectUserProperty ()¤			, props¤		);¤	}¤	¤	for (¤		AbstractDumperBase::UserPropertyMap::const_iterator up_it = props.begin()¤		; up_it != props.end()¤		; up_it++¤	) {¤		if (m_up_name_1.FindString(0, up_it->first.data()) == CB_ERR) {¤			m_up_name_1.AddString (up_it->first.data());¤			m_up_name_2.AddString (up_it->first.data());¤			m_up_name_3.AddString (up_it->first.data());¤			m_up_name_4.AddString (up_it->first.data());¤		}¤	}	¤}¤¤void AdvancedSearch::reset_dlg() {¤	m_in_name.SetCheck (true);¤	m_in_doc.SetCheck (true);¤	m_in_guid.SetCheck (true);¤	¤	m_cat.SetCheck (true);¤	m_class.SetCheck (true);¤	m_usecase.SetCheck (true);¤	m_op.SetCheck (true);¤	m_attr.SetCheck (true);¤	m_dep.SetCheck (false);¤¤	// fill by template¤	{¤		this->fill_st_list ();¤	}¤¤	m_up_name_1.Clear();¤	m_up_name_2.Clear();¤	m_up_name_3.Clear();¤	m_up_name_4.Clear();¤¤	m_up_value_1.EnableWindow(false);¤	m_up_value_2.EnableWindow(false);¤	m_up_value_3.EnableWindow(false);¤	m_up_value_4.EnableWindow(false);¤¤	m_public.SetCheck (true);¤	m_protected.SetCheck (true);¤	m_private.SetCheck (true);¤	m_impl.SetCheck (true);¤	m_regular.SetCheck (true);¤	m_abstract.SetCheck (true);¤//	m_inline.SetCheck (true);¤	m_final.SetCheck (true);¤	m_native.SelectString(0, "All");¤	m_parameterized.SelectString(0, "All");¤	¤	m_result_list.DeleteAllItems();¤	m_result_list.EnableWindow (false);¤¤	m_run_spell.SetCheck (true);¤}¤¤void AdvancedSearch::OnBnClickedClear() {¤	this->reset_dlg ();¤}¤¤void AdvancedSearch::on_run() {¤	m_result_list.DeleteAllItems();¤	m_result_list.EnableWindow (true);¤	¤	try {¤		RoseHelper::check_model_for_changes ();¤		bool run_spell = m_run_spell.GetCheck ();¤¤		RoseAbstractDumper::get_model_tree_root(run_spell);	¤	} catch (Base::FatalError&) {¤		RoseAbstractDumper::has_error (true);¤		GenerationErrorDialog dlg (GenSupport::ErrorManagerFactory::get ().get_errors (), true);¤		if (dlg.DoModal () == IDOK) {¤			return;¤		}¤	} catch (...) {¤		RoseAbstractDumper::has_error (true);¤		GenSupport::ErrorManagerFactory::get ().error (0, "Неизвестное исключение", GDS_CURRENT_FUNCTION);¤		GenerationErrorDialog dlg (GenSupport::ErrorManagerFactory::get ().get_errors (), true);¤		if (dlg.DoModal () == IDOK) {¤			return;¤		}¤	}¤¤	Query q;¤	this->fill_query (q);¤¤	unsigned i = 0;¤¤	int st_ind = get_column_index(m_result_list, "Stereotype");	¤	int context_ind = get_column_index(m_result_list, "Context");¤	int doc_ind = get_column_index(m_result_list, "Documentation");¤	int path_ind = get_column_index(m_result_list, "Path");¤	¤	int up1_ind = -1;¤	int up2_ind = -1;¤	int up3_ind = -1;¤	int up4_ind = -1;¤¤	if (m_selected_up_view.GetCheck()) {¤		m_selected_up_view.SetCheck(false);¤		this->OnBnClickedCheck21();¤		m_selected_up_view.SetCheck(true);¤		this->OnBnClickedCheck21();¤¤		up1_ind = get_column_index(m_result_list, m_upc_name_1.data());¤		up2_ind = get_column_index(m_result_list, m_upc_name_2.data());¤		up3_ind = get_column_index(m_result_list, m_upc_name_3.data());¤		up4_ind = get_column_index(m_result_list, m_upc_name_4.data());¤	}¤	¤	RoseAbstractDumper::auto_locker lck;¤¤	if (RoseAbstractDumper::s_tree) {¤		for (¤			RoseElementVector::const_iterator items_it = m_items.begin ()¤			; items_it != m_items.end ()¤			; ++items_it¤		) {¤¤			const RoseAbstractDumper* rad_root = RoseAbstractDumper::find_in_tree (items_it->element);¤			if (rad_root) {¤				for (¤					ObjectTreeResolver::ObjectTree::iterator it = RoseAbstractDumper::s_tree->begin()¤					; it != RoseAbstractDumper::s_tree->end()¤					; it++¤				) {¤					const ObjectTreeResolver* otr_it = **it;¤¤					//const AbstractDumperBase* adb_it = dynamic_cast<const AbstractDumperBase*>(otr_it);¤					const RoseAbstractDumper* rad_it = dynamic_cast<const RoseAbstractDumper*>(otr_it);¤¤					if (!rad_root || rad_it->is_child_of (rad_root)) {¤						if (this->is_fit_to_query(q, rad_it)) {¤							std::string name (rad_it->get_name_str ());¤							if (IsVirtualFactory::get ().execute (rad_it->rose_element ())) {¤								name.insert (0, "(virtual) ");¤							}¤¤							this->m_result_list.InsertItem (i, name.data());¤							¤							int img_id = RoseHelper::get_image_index (rad_it->rose_element ());¤¤							if (img_id != -1) {¤								this->m_result_list.SetItem (i, 0, LVIF_IMAGE, 0, img_id, 0, 0, 0);¤							}			¤							this->m_result_list.SetItemData (i, (DWORD)rad_it);¤¤							if (st_ind != -1) {¤								this->m_result_list.SetItemText (i, st_ind, rad_it->get_stereotype_str().data());¤							}¤							if (doc_ind != -1) {¤								this->m_result_list.SetItemText (i, doc_ind, rad_it->get_documentation_str().data());¤							}¤							if (context_ind != -1) {¤								const AbstractDumperBase* par = rad_it->parent();¤								if (par) {¤									this->m_result_list.SetItemText (i, context_ind, par->get_name_str().data());¤								} else {¤									this->m_result_list.SetItemText (i, context_ind, "MODEL ROOT");¤								}¤							}¤							if (path_ind != -1) {¤								const AbstractDumper* par_ad = dynamic_cast<const AbstractDumper*> (rad_it->parent());¤								if (par_ad) {¤									this->m_result_list.SetItemText (i, path_ind, par_ad->get_full_name().data());¤								} else {¤									this->m_result_list.SetItemText (i, context_ind, "MODEL ROOT");¤								}¤							}¤¤							if (up1_ind != -1) {¤								this->m_result_list.SetItemText (i, up1_ind, rad_it->get_user_property_str (q.up_name_1).data());¤							}¤							if (up2_ind != -1) {¤								this->m_result_list.SetItemText (i, up2_ind, rad_it->get_user_property_str (q.up_name_2).data());¤							}¤							if (up3_ind != -1) {¤								this->m_result_list.SetItemText (i, up3_ind, rad_it->get_user_property_str (q.up_name_3).data());¤							}¤							if (up4_ind != -1) {¤								this->m_result_list.SetItemText (i, up4_ind, rad_it->get_user_property_str (q.up_name_4).data());¤							}¤¤							i++;¤						}¤					}¤				}¤			}¤		}¤	}¤}¤¤void AdvancedSearch::fill_query(Query& q) {¤	CString str;¤¤	this->m_text_field.GetWindowText (str);	¤	q.text = (const char*)str;¤	GCL::kill_final_char (q.text, "*");¤¤	q.in_doc = this->m_in_doc.GetCheck();¤	q.in_name = this->m_in_name.GetCheck();¤	q.in_guid = this->m_in_guid.GetCheck ();¤¤	this->m_self_st.GetWindowText (str);¤	q.self_st = (const char*)str;¤	¤	this->m_parent_st.GetWindowText (str);¤	q.parent_st = (const char*)str;¤¤	this->m_g_parent_st.GetWindowText (str);¤	q.grand_parent_st = (const char*)str;¤¤	this->m_content_st.GetWindowText (str);¤	q.content_st = (const char*)str;¤¤	q.is_cat = this->m_cat.GetCheck();¤	q.is_class = this->m_class.GetCheck();¤	q.is_usecase = this->m_usecase.GetCheck();¤	q.is_op = this->m_op.GetCheck();¤	q.is_attr = this->m_attr.GetCheck();¤	q.is_dep = this->m_dep.GetCheck();¤¤	q.is_public = this->m_public.GetCheck();¤	q.is_private = this->m_private.GetCheck();¤	q.is_protected = this->m_protected.GetCheck();¤	q.is_impl = this->m_impl.GetCheck();¤	¤	q.is_regular = this->m_regular.GetCheck();¤	q.is_abstract = this->m_abstract.GetCheck();¤//	q.is_inline = this->m_inline.GetCheck();¤	q.is_final = this->m_final.GetCheck();¤¤	this->m_native.GetWindowText (str);¤	q.is_native = (str == "All" || str == "Native");¤	q.is_modeled = (str == "All" || str == "Modeled");¤	¤	this->m_parameterized.GetWindowText (str);¤	q.is_parameterized = (str == "All" || str == "Parameterized");¤	q.is_not_parameterized = (str == "All" || str == "Not parameterized");¤	¤	this->m_up_name_1.GetWindowText (str);¤	q.up_name_1 = (const char*)str;¤	this->m_up_value_1.GetWindowText (str);¤	q.up_value_1 = (const char*)str;¤¤	this->m_up_name_2.GetWindowText (str);¤	q.up_name_2 = (const char*)str;¤	this->m_up_value_2.GetWindowText (str);¤	q.up_value_2 = (const char*)str;¤¤	this->m_up_name_3.GetWindowText (str);¤	q.up_name_3 = (const char*)str;¤	this->m_up_value_3.GetWindowText (str);¤	q.up_value_3 = (const char*)str;¤¤	this->m_up_name_4.GetWindowText (str);¤	q.up_name_4 = (const char*)str;¤	this->m_up_value_4.GetWindowText (str);¤	q.up_value_4 = (const char*)str;¤}¤¤bool AdvancedSearch::is_fit_to_query(const Query& q, const RoseAbstractDumper* rad) {¤	const AbstractDumperBase* adb = static_cast<const AbstractDumperBase*> (rad);¤	IRoseElementPtr rad_elem = rad->rose_element();¤	if (rad_elem->IsClass (PARAMETER_TYPE)) {¤		return false;¤	}¤¤	std::string st = adb->get_stereotype_str();¤	if (q.self_st != "") {¤		if (q.self_st != "<default>" ? q.self_st != st : q.self_st != "") {¤			return false;¤		}¤	}¤¤	if (q.parent_st != "") {¤		const AbstractDumperBase* par = adb->parent();¤		if (!par || (q.parent_st != "<default>" ? q.parent_st != par->get_stereotype_str() : q.parent_st != "")) {¤			return false;¤		}¤	}¤¤	if (q.grand_parent_st != "") {¤		const AbstractDumperBase* par = adb->parent();¤		¤		if (!par) {¤			return false;¤		}¤		¤		const AbstractDumperBase* g_par = par->parent();¤		¤		if (!g_par || (q.grand_parent_st != "<default>" ? q.grand_parent_st != g_par->get_stereotype_str() : q.grand_parent_st != "")) {¤			return false;¤		}¤	}¤¤	std::string cls_type = adb->get_model_class_str();¤	if (!q.is_cat && cls_type == CATEGORY_TYPE) {¤		return false;¤	}¤¤	if (!q.is_class && (cls_type == CLASS_TYPE && st != "UseCase")) {¤		return false;¤	}¤¤	if (!q.is_usecase && (cls_type == CLASS_TYPE && st == "UseCase")) {¤		return false;¤	}¤¤	if (!q.is_op && cls_type == OPERATION_TYPE) {¤		return false;¤	}¤¤	if (!q.is_attr && cls_type == ATTRIBUTE_TYPE) {¤		return false;¤	}¤¤	if (!q.is_dep && cls_type == "Dependency") {¤		return false;¤	}¤¤	ObjectTreeResolver::VisibilityType vt = rad->get_visibility_type();¤	if (!q.is_public &&  vt == ObjectTreeResolver::VT_PUBLIC) {¤		return false;¤	}¤¤	if (!q.is_protected && vt == ObjectTreeResolver::VT_PROTECTED) {¤		return false;¤	}¤¤	if (!q.is_private && vt == ObjectTreeResolver::VT_PRIVATE) {¤		return false;¤	}¤¤	if (!q.is_impl && vt == ObjectTreeResolver::VT_IMPL) {¤		return false;¤	}¤¤	std::string at = adb->get_abstract_str();¤	if (!q.is_regular && at == "regular") {¤		return false;¤	}¤¤	if (!q.is_abstract && at == "abstract") {¤		return false;¤	}¤¤	if (!q.is_final && at == "final") {¤		return false;¤	}¤¤	if (!q.is_inline && at == "inline") {¤		return false;¤	}¤¤	bool b;¤	bool native = rad->is_native(b) || st == "UMLPrimitive" || st == "UMLModule";¤	if (!q.is_native && native) {¤		return false;¤	}¤¤	if (!q.is_modeled && !native) {¤		return false;¤	}¤¤	if (!q.is_parameterized) {		¤		if (rad_elem->IsClass (CLASS_TYPE)) {¤			IRoseClassPtr cls = rad_elem;¤			if (cls->ClassKind->GetName() == _bstr_t ("ParameterizedClass")) {¤				return false;¤			}¤		}¤	}¤¤	if (!q.is_not_parameterized) {¤		if (rad_elem->IsClass (CLASS_TYPE)) {¤			IRoseClassPtr cls = rad_elem;¤			if (cls->ClassKind->GetName() != _bstr_t ("ParameterizedClass")) {¤				return false;¤			}¤		} else {¤			return false;¤		}¤	}¤¤	if (q.text != "") {¤		bool res = false;¤¤		if (q.in_name) {¤			res = (GCL::find_sub_string_nocase (rad_elem->Name, q.text.data()) != 0);¤		}¤¤		if (!res && q.in_doc && rad_elem->IsClass (ROSE_ITEM_TYPE)) {¤			IRoseItemPtr item = rad_elem;¤			res |= (GCL::find_sub_string_nocase (item->Documentation, q.text.data()) != 0);¤		}¤¤		if (!res && q.in_guid) {¤			res |= (GCL::find_sub_string_nocase (get_rose_element_uid (rad_elem).c_str (), q.text.data()) != 0);¤		}¤		if (!res) {¤			return false;¤		}¤	}¤¤	if (q.content_st != "") {¤		const AbstractDumperBase* par = adb->parent();¤		bool ok = false;¤		while (par != 0 && ok != true) {¤			if (q.parent_st != "<default>" ? q.parent_st == par->get_stereotype_str() : q.parent_st == "") {¤				ok = true;¤			}¤			par = par->parent ();¤		}¤		if (!ok) {¤			return false;¤		}¤	}¤	¤	if (q.up_name_1 != "") {¤		if (q.up_value_1 != "") {¤			if (adb->get_user_property_str(q.up_name_1) != q.up_value_1) {¤				return false;¤			}¤		} else {¤			if (adb->get_user_property_str(q.up_name_1) == "") {¤				return false;¤			}¤		}¤	}¤¤	if (q.up_name_2 != "") {¤		if (q.up_value_2 != "") {¤			if (adb->get_user_property_str(q.up_name_2) != q.up_value_2) {¤				return false;¤			}¤		} else {¤			if (adb->get_user_property_str(q.up_name_2) == "") {¤				return false;¤			}¤		}¤	}¤¤	if (q.up_name_3 != "") {¤		if (q.up_value_3 != "") {¤			if (adb->get_user_property_str(q.up_name_3) != q.up_value_3) {¤				return false;¤			}¤		} else {¤			if (adb->get_user_property_str(q.up_name_3) == "") {¤				return false;¤			}¤		}¤	}¤¤	if (q.up_name_4 != "") {¤		if (q.up_value_4 != "") {¤			if (adb->get_user_property_str(q.up_name_4) != q.up_value_4) {¤				return false;¤			}¤		} else {¤			if (adb->get_user_property_str(q.up_name_4) == "") {¤				return false;¤			}¤		}¤	}¤¤	return true;¤}¤¤void AdvancedSearch::on_cancel() {¤	this->OnCancel ();¤}¤¤void AdvancedSearch::OnLvnItemActivateList1(NMHDR *pNMHDR, LRESULT *pResult) {¤	LPNMITEMACTIVATE pNMIA = reinterpret_cast<LPNMITEMACTIVATE>(pNMHDR);¤	¤	RoseAbstractDumper* rad = reinterpret_cast<RoseAbstractDumper*> (this->m_result_list.GetItemData(pNMIA->iItem));¤	¤	// cut-and-paste from ItemPropertyPage¤	if (rad) {			¤		IRoseItemPtr item_to_select = RoseHelper::get_nearest_container (rad->rose_element());¤		IRoseDiagramPtr diag = RoseHelper::get_self_diagram (rad->rose_element());¤¤		if (diag != 0) {¤			IRoseItemViewPtr iview = diag->GetViewFrom(item_to_select);¤			diag->Activate();¤			iview->SetSelected(true);¤			diag->CenterDiagramToView(iview);¤		} else {¤			MessageBox("No diagrams availble");¤		}¤	}¤¤	RoseHelper::ExecResult is_ok = Commands::CmdManagerFactory::get ().properties (rad->rose_element(), false, true);¤		¤	if (is_ok == RoseHelper::ER_DELETE) {¤		m_result_list.DeleteItem (pNMIA->iItem);¤	}¤¤	*pResult = 0;¤}¤¤// st¤void AdvancedSearch::OnBnClickedCheck9() {¤	if (this->m_st_view.GetCheck()) {¤		int indx = m_result_list.GetHeaderCtrl()->GetItemCount();¤		m_result_list.InsertColumn (indx, "Stereotype", LVCFMT_LEFT, 80 );¤		for (long l = 0; l < m_result_list.GetItemCount(); l++) {¤			RoseAbstractDumper* rad = reinterpret_cast<RoseAbstractDumper*> (this->m_result_list.GetItemData(l));¤			this->m_result_list.SetItemText (l, indx, rad->get_stereotype_str().data());¤		}¤	} else {¤		int ind = get_column_index(m_result_list, "Stereotype");¤		if (ind != -1) {¤			m_result_list.DeleteColumn (ind);¤		}¤	}¤}¤¤// path¤void AdvancedSearch::OnBnClickedCheck10() {¤	if (this->m_path_view.GetCheck()) {¤		int indx = m_result_list.GetHeaderCtrl()->GetItemCount();¤		m_result_list.InsertColumn (indx, "Path", LVCFMT_LEFT, 350 );¤		for (long l = 0; l < m_result_list.GetItemCount(); l++) {¤			RoseAbstractDumper* rad = reinterpret_cast<RoseAbstractDumper*> (this->m_result_list.GetItemData(l));¤			AbstractDumperBase* adb = dynamic_cast<AbstractDumperBase*> (rad);¤			if (rad) {¤				const AbstractDumper* par_ad = dynamic_cast<const AbstractDumper*> (adb->parent());¤				if (par_ad) {¤					this->m_result_list.SetItemText (l, indx, par_ad->get_full_name().data());¤				} else {¤					this->m_result_list.SetItemText (l, indx, "MODEL ROOT");¤				}¤			}¤		}¤	} else {¤		int ind = get_column_index(m_result_list, "Path");¤		if (ind != -1) {¤			m_result_list.DeleteColumn (ind);¤		}¤	}¤}¤¤// contex¤void AdvancedSearch::OnBnClickedCheck11() {¤	if (this->m_context_view.GetCheck()) {¤		int indx = m_result_list.GetHeaderCtrl()->GetItemCount();¤		m_result_list.InsertColumn (indx, "Context", LVCFMT_LEFT, 170 );¤		for (long l = 0; l < m_result_list.GetItemCount(); l++) {¤			RoseAbstractDumper* rad = reinterpret_cast<RoseAbstractDumper*> (this->m_result_list.GetItemData(l));¤			AbstractDumperBase* adb = dynamic_cast<AbstractDumperBase*> (rad);¤			if (adb) {¤				const AbstractDumperBase* par = adb->parent();¤				if (par) {¤					this->m_result_list.SetItemText (l, indx, (std::string ("<<") + par->get_stereotype_str() + ">> " + par->get_name_str()).data());¤				} else {¤					this->m_result_list.SetItemText (l, indx, "MODEL ROOT");¤				}¤			}¤		}¤	} else {		¤		int ind = get_column_index(m_result_list, "Context");¤		if (ind != -1) {¤			m_result_list.DeleteColumn (ind);¤		}¤	}¤	¤}¤¤// doc¤void AdvancedSearch::OnBnClickedCheck8() {¤	if (this->m_doc_view.GetCheck()) {¤		int indx = m_result_list.GetHeaderCtrl()->GetItemCount();¤		m_result_list.InsertColumn (indx, "Documentation", LVCFMT_LEFT, 450 );¤		for (long l = 0; l < m_result_list.GetItemCount(); l++) {¤			RoseAbstractDumper* rad = reinterpret_cast<RoseAbstractDumper*> (this->m_result_list.GetItemData(l));¤			AbstractDumperBase* adb = dynamic_cast<AbstractDumperBase*> (rad);¤			if (adb) {¤				this->m_result_list.SetItemText (l, indx, adb->get_documentation_str().data());¤			}¤		}¤	} else {¤		int ind = get_column_index(m_result_list, "Documentation");¤		if (ind != -1) {¤			m_result_list.DeleteColumn (ind);¤		}¤	}¤}¤¤// selected up¤void AdvancedSearch::OnBnClickedCheck21() {	¤	if (this->m_selected_up_view.GetCheck()) {¤		int indx = m_result_list.GetHeaderCtrl()->GetItemCount();¤¤		CString value;¤		CString name_1;¤		CString name_2;¤		CString name_3;¤		CString name_4;¤		int indx_1 = -1;¤		int indx_2 = -1;¤		int indx_3 = -1;¤		int indx_4 = -1;¤¤		m_upc_name_1 = "";¤		m_upc_name_2 = "";¤		m_upc_name_3 = "";¤		m_upc_name_4 = "";¤		¤		this->m_up_name_1.GetWindowText (name_1);¤		this->m_up_value_1.GetWindowText (value);¤		if (name_1 != "" && value == "") {¤			indx_1 = indx++;¤			m_upc_name_1 = std::string ("{") + (const char*)name_1 + "}";¤			m_result_list.InsertColumn (indx_1, m_upc_name_1.data(), LVCFMT_LEFT, 100 );¤		}¤		¤¤		this->m_up_name_2.GetWindowText (name_2);¤		this->m_up_value_2.GetWindowText (value);¤		if (name_2 != "" && value == "") {¤			indx_2 = indx++;¤			m_upc_name_2 = std::string ("{") + (const char*)name_2 + "}";¤			m_result_list.InsertColumn (indx_2, m_upc_name_2.data(), LVCFMT_LEFT, 100 );¤		}¤¤		this->m_up_name_3.GetWindowText (name_3);¤		this->m_up_value_3.GetWindowText (value);¤		if (name_3 != "" && value == "") {¤			indx_3 = indx++;¤			m_upc_name_3 = std::string ("{") + (const char*)name_3 + "}";¤			m_result_list.InsertColumn (indx_3, m_upc_name_3.data(), LVCFMT_LEFT, 100 );¤		}¤¤		this->m_up_name_4.GetWindowText (name_4);¤		this->m_up_value_4.GetWindowText (value);¤		if (name_4 != "" && value == "") {¤			indx_4 = indx++;¤			m_upc_name_4 = std::string ("{") + (const char*)name_4 + "}";¤			m_result_list.InsertColumn (indx_4, m_upc_name_4.data(), LVCFMT_LEFT, 100 );¤		}¤¤		for (long l = 0; l < m_result_list.GetItemCount(); l++) {¤			RoseAbstractDumper* rad = reinterpret_cast<RoseAbstractDumper*> (this->m_result_list.GetItemData(l));¤			AbstractDumperBase* adb = dynamic_cast<AbstractDumperBase*> (rad);¤			if (adb) {			¤				if (indx_1 != -1) {¤					this->m_result_list.SetItemText (l, indx_1, adb->get_user_property_str ((const char*)name_1).data());¤				}¤				if (indx_2 != -1) {¤					this->m_result_list.SetItemText (l, indx_2, adb->get_user_property_str ((const char*)name_2).data());¤				}¤				if (indx_3 != -1) {¤					this->m_result_list.SetItemText (l, indx_3, adb->get_user_property_str ((const char*)name_3).data());¤				}¤				if (indx_4 != -1) {¤					this->m_result_list.SetItemText (l, indx_4, adb->get_user_property_str ((const char*)name_4).data());¤				}¤			}¤		}¤	} else {¤		CString name;¤		int ind;¤		¤		ind = get_column_index(m_result_list, m_upc_name_1.data());¤		if (ind != -1) {¤			m_result_list.DeleteColumn (ind);¤			m_upc_name_1 = "";¤		}¤¤		ind = get_column_index(m_result_list, m_upc_name_2.data());¤		if (ind != -1) {¤			m_result_list.DeleteColumn (ind);¤			m_upc_name_2 = "";¤		}¤¤		ind = get_column_index(m_result_list, m_upc_name_3.data());¤		if (ind != -1) {¤			m_result_list.DeleteColumn (ind);¤			m_upc_name_3 = "";¤		}¤¤		ind = get_column_index(m_result_list, m_upc_name_4.data());¤		if (ind != -1) {¤			m_result_list.DeleteColumn (ind);¤			m_upc_name_4 = "";¤		}¤	}¤}¤¤void AdvancedSearch::OnBnClickedCat() {¤	this->fill_st_list ();¤}¤¤void AdvancedSearch::OnBnClickedClass() {¤	this->fill_st_list ();¤}¤¤void AdvancedSearch::OnBnClickedOp() {¤	this->fill_st_list ();¤}¤¤void AdvancedSearch::OnBnClickedAttr() {¤	this->fill_st_list ();¤}¤¤void AdvancedSearch::OnBnClickedDep() {¤	this->fill_st_list ();¤}¤¤void AdvancedSearch::OnBnClickedCheck12() {¤	this->fill_st_list ();¤}¤¤void AdvancedSearch::OnCbnSelchangeCombo2() {¤	m_up_value_1.EnableWindow(m_up_name_1.GetCurSel() > 0);¤}¤¤void AdvancedSearch::OnCbnSelchangeCombo5() {¤	m_up_value_2.EnableWindow(m_up_name_2.GetCurSel() > 0);¤}¤¤void AdvancedSearch::OnCbnSelchangeCombo6() {¤	m_up_value_3.EnableWindow(m_up_name_3.GetCurSel() > 0);¤}¤¤void AdvancedSearch::OnCbnSelchangeCombo7() {¤	m_up_value_4.EnableWindow(m_up_name_4.GetCurSel() > 0);¤}¤¤void AdvancedSearch::OnBnClickedButEdit() {¤	int selection = m_result_list.GetSelectionMark();¤	if (selection >= 0) {¤		RoseAbstractDumper* rad = reinterpret_cast<RoseAbstractDumper*> (this->m_result_list.GetItemData(selection));¤¤		RoseHelper::ExecResult is_ok = Commands::CmdManagerFactory::get ().properties (rad->rose_element(), false, true);¤¤		if (is_ok == RoseHelper::ER_DELETE) {¤			m_result_list.DeleteItem (selection);¤		}¤	}	¤}¤¤void AdvancedSearch::OnBnClickedButBrowse() {¤	int selection = m_result_list.GetSelectionMark();¤	if (selection >= 0) {¤		RoseAbstractDumper* rad = reinterpret_cast<RoseAbstractDumper*> (this->m_result_list.GetItemData(selection));¤¤		// cut-and-paste from ItemPropertyPage¤		if (rad) {			¤			IRoseItemPtr item_to_select = RoseHelper::get_nearest_container (rad->rose_element());¤			IRoseDiagramPtr diag = RoseHelper::get_self_diagram (rad->rose_element());¤¤			if (diag != 0) {¤				IRoseItemViewPtr iview = diag->GetViewFrom(item_to_select);¤				diag->Activate();¤				iview->SetSelected(true);¤				diag->CenterDiagramToView(iview);¤			} else {¤				MessageBox("No diagrams availble");¤			}¤		}¤	}¤}¤¤void AdvancedSearch::OnBnClickedButBrowseClose() {¤	this->OnBnClickedButBrowse();¤	this->OnOK ();¤}¤//#UC END# *4573E7840177*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4573E7840177_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *4573E7840177_DESTR_BODY*¤	//#UC END# *4573E7840177_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4573E7840177_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *4573E7840177_CUSTOM_INCLUDES*¤#include "MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.h"¤#include "afxwin.h"¤#include "afxcmn.h"¤//#UC END# *4573E7840177_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4573E7840177*"
		    value      	(value Text 
|//#UC START# *4573E7840177*¤	struct Query {¤		std::string text;¤		bool in_name;¤		bool in_doc;¤		bool in_guid;¤¤		std::string self_st;¤		std::string parent_st;¤		std::string grand_parent_st;¤		std::string content_st;¤¤		bool is_cat;¤		bool is_class;¤		bool is_usecase;¤		bool is_op;¤		bool is_attr;¤		bool is_dep;¤¤		bool is_public;¤		bool is_protected;¤		bool is_private;¤		bool is_impl;¤¤		bool is_regular;¤		bool is_abstract;¤		bool is_inline;¤		bool is_final;¤¤		bool is_native;¤		bool is_modeled;¤		bool is_parameterized;¤		bool is_not_parameterized;¤¤		std::string up_name_1;¤		std::string up_value_1;¤		std::string up_name_2;¤		std::string up_value_2;¤		std::string up_name_3;¤		std::string up_value_3;¤		std::string up_name_4;¤		std::string up_value_4;¤	};¤¤protected:¤	void fill_query(Query& q);¤¤	bool is_fit_to_query(const Query& q, const RoseAbstractDumper* rad);¤¤	void fill_st_list ();¤¤	void fill_up_list (const AbstractDumperBase::Template& tpl);¤¤	void requrcive_fill_content_sts (¤		const AbstractDumperBase::Templates::key_type& key_child¤		, const AbstractDumperBase::Templates::value_type& child¤	);¤¤	void reset_dlg();¤¤private:¤	Core::Aptr<CImageList> m_il;¤	¤	bool m_constructed;¤	std::string m_upc_name_1;¤	std::string m_upc_name_2;¤	std::string m_upc_name_3;¤	std::string m_upc_name_4;¤¤	CEdit m_text_field;¤	CButton m_in_name;¤	CButton m_in_doc;¤	CButton m_in_guid;¤	CButton m_run_spell;¤	CButton m_cat;¤	CButton m_class;¤	CButton m_op;¤	CButton m_attr;¤	CComboBox m_self_st;¤	CComboBox m_parent_st;¤	CComboBox m_g_parent_st;¤	CComboBox m_up_name_1;¤	CComboBox m_up_name_2;¤	CComboBox m_up_name_3;¤	CComboBox m_up_name_4;¤	CEdit m_up_value_1;¤	CEdit m_up_value_2;¤	CEdit m_up_value_3;¤	CEdit m_up_value_4;¤	CListCtrl m_result_list;¤¤	GCL::StrSet m_self_st_set;¤	GCL::StrSet m_content_st_set;¤	GCL::StrSet	m_parent_st_set;¤	GCL::StrSet	m_g_parent_st_set;¤¤	afx_msg void on_run();¤	afx_msg void on_cancel();¤	¤public:¤	afx_msg void OnLvnItemActivateList1(NMHDR *pNMHDR, LRESULT *pResult);¤	CButton m_dep;¤	CButton m_st_view;¤	CButton m_path_view;¤	CButton m_doc_view;¤	afx_msg void OnBnClickedCheck9();¤	afx_msg void OnBnClickedCheck10();¤	CButton m_context_view;¤	afx_msg void OnBnClickedCheck11();¤	afx_msg void OnBnClickedCheck8();¤	afx_msg void OnBnClickedCat();¤	afx_msg void OnBnClickedClass();¤	afx_msg void OnBnClickedOp();¤	afx_msg void OnBnClickedAttr();¤	afx_msg void OnBnClickedDep();¤	CButton m_selected_up_view;¤	afx_msg void OnBnClickedCheck21();¤	CComboBox m_content_st;¤	CButton m_usecase;¤	afx_msg void OnBnClickedCheck12();¤	CButton m_public;¤	CButton m_protected;¤	CButton m_private;¤	CButton m_impl;¤	CButton m_regular;¤	CButton m_abstract;¤//	CButton m_inline;¤	CButton m_final;¤	CComboBox m_native;¤	CComboBox m_parameterized;¤	afx_msg void OnBnClickedClear();¤	afx_msg void OnCbnSelchangeCombo2();¤	afx_msg void OnCbnSelchangeCombo5();¤	afx_msg void OnCbnSelchangeCombo6();¤	afx_msg void OnCbnSelchangeCombo7();	¤	afx_msg void OnBnClickedButEdit();¤	afx_msg void OnBnClickedButBrowse();¤	afx_msg void OnBnClickedButBrowseClose();¤//#UC END# *4573E7840177*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/AdvancedSearch.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/AdvancedSearch.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4573E7840177_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *4573E7840177_MESSAGE_MAP*¤	ON_BN_CLICKED(IDC_BUTTON2, on_run)¤	ON_BN_CLICKED(IDC_BUTTON3, on_cancel)¤	ON_NOTIFY(LVN_ITEMACTIVATE, IDC_LIST1, OnLvnItemActivateList1)¤	ON_BN_CLICKED(IDC_CHECK9, OnBnClickedCheck9)¤	ON_BN_CLICKED(IDC_CHECK10, OnBnClickedCheck10)¤	ON_BN_CLICKED(IDC_CHECK11, OnBnClickedCheck11)¤	ON_BN_CLICKED(IDC_CHECK8, OnBnClickedCheck8)¤	ON_BN_CLICKED(IDC_CAT, OnBnClickedCat)¤	ON_BN_CLICKED(IDC_CLASS, OnBnClickedClass)¤	ON_BN_CLICKED(IDC_OP, OnBnClickedOp)¤	ON_BN_CLICKED(IDC_ATTR, OnBnClickedAttr)¤	ON_BN_CLICKED(IDC_DEP, OnBnClickedDep)¤	ON_BN_CLICKED(IDC_CHECK21, OnBnClickedCheck21)¤	ON_BN_CLICKED(IDC_CHECK12, OnBnClickedCheck12)¤	ON_BN_CLICKED(IDC_CLEAR, OnBnClickedClear)¤	ON_CBN_SELCHANGE(IDC_COMBO2, OnCbnSelchangeCombo2)¤	ON_CBN_SELCHANGE(IDC_COMBO5, OnCbnSelchangeCombo5)¤	ON_CBN_SELCHANGE(IDC_COMBO6, OnCbnSelchangeCombo6)¤	ON_CBN_SELCHANGE(IDC_COMBO7, OnCbnSelchangeCombo7)¤	ON_BN_CLICKED(IDC_BUT_EDIT, OnBnClickedButEdit)¤	ON_BN_CLICKED(IDC_BUT_BROWSE, OnBnClickedButBrowse)¤	ON_BN_CLICKED(IDC_BUT_BROWSE_CLOSE, OnBnClickedButBrowseClose)¤	//#UC END# *4573E7840177_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4573E7840177_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *4573E7840177_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_TEXT_FIELD, m_text_field);¤	DDX_Control(pDX, IDC_CHECK1, m_in_name);¤	DDX_Control(pDX, IDC_CHECK2, m_in_doc);¤	DDX_Control(pDX, IDC_SEARCH_IN_GUID, m_in_guid);¤	DDX_Control(pDX, IDC_CAT, m_cat);¤	DDX_Control(pDX, IDC_CLASS, m_class);¤	DDX_Control(pDX, IDC_OP, m_op);¤	DDX_Control(pDX, IDC_ATTR, m_attr);¤	DDX_Control(pDX, IDC_COMBO1, m_self_st);¤	DDX_Control(pDX, IDC_COMBO3, m_parent_st);¤	DDX_Control(pDX, IDC_COMBO4, m_g_parent_st);¤	DDX_Control(pDX, IDC_COMBO2, m_up_name_1);¤	DDX_Control(pDX, IDC_COMBO5, m_up_name_2);¤	DDX_Control(pDX, IDC_COMBO6, m_up_name_3);¤	DDX_Control(pDX, IDC_COMBO7, m_up_name_4);¤	DDX_Control(pDX, IDC_EDIT3, m_up_value_1);¤	DDX_Control(pDX, IDC_EDIT4, m_up_value_2);¤	DDX_Control(pDX, IDC_EDIT5, m_up_value_3);¤	DDX_Control(pDX, IDC_EDIT6, m_up_value_4);¤	DDX_Control(pDX, IDC_LIST1, m_result_list);¤	DDX_Control(pDX, IDC_DEP, m_dep);¤	DDX_Control(pDX, IDC_CHECK9, m_st_view);¤	DDX_Control(pDX, IDC_CHECK10, m_path_view);¤	DDX_Control(pDX, IDC_CHECK8, m_doc_view);¤	DDX_Control(pDX, IDC_CHECK11, m_context_view);¤	DDX_Control(pDX, IDC_CHECK21, m_selected_up_view);¤	DDX_Control(pDX, IDC_COMBO8, m_content_st);¤	DDX_Control(pDX, IDC_CHECK12, m_usecase);¤	DDX_Control(pDX, IDC_CHECK13, m_public);¤	DDX_Control(pDX, IDC_CHECK14, m_protected);¤	DDX_Control(pDX, IDC_CHECK15, m_private);¤	DDX_Control(pDX, IDC_CHECK16, m_impl);¤	DDX_Control(pDX, IDC_CHECK17, m_regular);¤	DDX_Control(pDX, IDC_CHECK18, m_abstract);¤//	DDX_Control(pDX, IDC_CHECK19, m_inline);¤	DDX_Control(pDX, IDC_CHECK20, m_final);¤	DDX_Control(pDX, IDC_COMBO9, m_native);¤	DDX_Control(pDX, IDC_COMBO10, m_parameterized);¤	DDX_Control(pDX, IDC_RUN_SPELL, m_run_spell);¤	//#UC END# *4573E7840177_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4573E7840177_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *4573E7840177_ON_INIT_DLG*¤	#ifndef GDS_NLOG_DEBUG¤		Core::GDS::StopWatch sw (GDS_CURRENT_FUNCTION);				¤	#endif¤¤		m_self_st_set.clear ();¤		m_parent_st_set.clear ();¤		m_g_parent_st_set.clear ();¤		m_content_st_set.clear ();¤¤		std::string mess = "Advanced search";¤		if (!m_items.empty ()) {¤			GCL::StrVector items_names;¤¤			mess += " (in: ";¤¤			for (RoseElementVector::const_iterator it = m_items.begin (); it != m_items.end (); ++it) {¤				IRoseItemPtr item = it->element;¤				std::string component;¤				if (item && item->GetContext () != 0 && !item->GetContext ()->IsClass(MODEL_TYPE)) {¤					component = ((const char*)item->GetContext()->GetName());¤					component += "::";¤				}¤				component += (const char*)item->GetName();				¤				items_names.push_back (component);¤			}¤			mess += GCL::join (items_names, ", ");¤			mess += ")";¤			¤		}		¤		mess += ":";¤		this->SetWindowText (mess.data());¤¤		m_native.AddString("All");¤		m_native.AddString("Native");¤		m_native.AddString("Modeled");¤¤		m_parameterized.AddString("All");¤		m_parameterized.AddString("Parameterized");¤		m_parameterized.AddString("Not parameterized");¤¤		m_il = new CImageList ();¤		m_il->Create (RoseHelper::get_rose_image_list ());¤		m_result_list.SetImageList (m_il.in (), LVSIL_SMALL);¤		¤		m_result_list.InsertColumn (0, "Element name", LVCFMT_LEFT, 150 );¤		m_result_list.InsertColumn (1, "Documentation", LVCFMT_LEFT, 450 );¤		¤		m_doc_view.SetCheck (true);¤		m_selected_up_view.SetCheck (true);¤¤		this->reset_dlg ();¤		¤		m_constructed = true;¤		//#UC END# *4573E7840177_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/AdvancedSearch|4573E7840177
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4573E7840177_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *4573E7840177_CUSTOM_CONTROLS_CONSTRAINT*¤	//#UC END# *4573E7840177_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E8F2D01FD_BASE_INIT*"
		    value      	"//#UC START# *458E8F2D01FD_BASE_INIT*¤//#UC END# *458E8F2D01FD_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E8F2D01FD_BODY*"
		    value      	(value Text 
|//#UC START# *458E8F2D01FD_BODY*¤	m_root = root;¤	RoseAbstractDumper::lock_reset ();¤	//#UC END# *458E8F2D01FD_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038237514"))
	    quid       	"4573E7840177"
	    documentation 	"диалог расширенного поиска элементов в модели, позволяет искать по элементы по имени, классу, стереотипу, и т.д"
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012205572"))
		    quid       	"46FC8CD0035B"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::CollectUserProperty"
		    quidu      	"46FC8A6202CE")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012205945"))
		    quid       	"4AA608F0033F"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::RoseModel::IsVirtual"
		    quidu      	"4AA60846020A")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012206329"))
		    quid       	"4ACDA72403B5"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::GCL::str::str_op"
		    quidu      	"4503E01500CB")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012206699"))
		    quid       	"4BE295FD0042"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenerationErrorDialog"
		    quidu      	"4BE15A4F0223")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012207063"))
		    quid       	"4BE2BF5002E2"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::Commands::CmdManager"
		    quidu      	"48031C2C0060"))
	    operations 	(list Operations
		(object Operation "op"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*458E8F2D01FD_BASE_INIT*"
			    value      	"//#UC START# *458E8F2D01FD_BASE_INIT*¤, m_items (items)¤//#UC END# *458E8F2D01FD_BASE_INIT*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*458E8F2D01FD_BODY*"
			    value      	(value Text 
|//#UC START# *458E8F2D01FD_BODY*¤	//#UC END# *458E8F2D01FD_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012204803"))
		    quid       	"458E8F2D01FD"
		    stereotype 	"ctor"
		    parameters 	(list Parameters
			(object Parameter "items"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4ACDA769031D")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012205106"))
			    quid       	"4ACDA2DC012B"
			    type       	"RoseElementVector"
			    quidu      	"4ACDA769031D"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "items"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"4ACDA769031D")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012204310"))
		    quid       	"4ACDA2C001D1"
		    documentation 	"элементы, среди которых нужно проводить поиск"
		    type       	"RoseElementVector"
		    quidu      	"4ACDA769031D"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "ChoiceType"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C_CUSTOM_INCLUDES*"
		    value      	"//#UC START# *457415BB033C_CUSTOM_INCLUDES*¤//#UC END# *457415BB033C_CUSTOM_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C*"
		    value      	(value Text 
|//#UC START# *457415BB033C*¤void ChoiceType::OnDblclkList1() ¤{¤	// TODO: Add your control notification handler code here¤	OnOK();¤	¤}¤¤void ChoiceType::OnOK() ¤{¤	// TODO: Add extra validation here	¤	CDialog::OnOK();¤}¤¤void ChoiceType::OnBnClickedCancel()¤{¤	CDialog::OnCancel();¤	// TODO: Add your control notification handler code here¤}¤//#UC END# *457415BB033C*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *457415BB033C_DESTR_BODY*¤	//#UC END# *457415BB033C_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457415BB033C_CUSTOM_INCLUDES*"
		    value      	(value Text "//#UC START# *457415BB033C_CUSTOM_INCLUDES*¤//#UC END# *457415BB033C_CUSTOM_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457415BB033C*"
		    value      	(value Text 
|//#UC START# *457415BB033C*¤	CEdit	m_for_item_name;¤	CListBox	m_list;¤	CString	m_list_value;¤¤	GCL::StrSet m_data;¤	std::string m_for_item_name_str;¤¤protected:¤	afx_msg void OnDblclkList1();¤	virtual void OnOK();¤¤public:¤	afx_msg void OnBnClickedCancel();¤//#UC END# *457415BB033C*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/ChoiceType.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/ChoiceType.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *457415BB033C_MESSAGE_MAP*¤	ON_LBN_DBLCLK(IDC_LIST1, OnDblclkList1)¤	ON_BN_CLICKED(IDCANCEL, OnBnClickedCancel)¤	//#UC END# *457415BB033C_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *457415BB033C_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_FOR_ITEM_NAME, m_for_item_name);¤	DDX_Control(pDX, IDC_LIST1, m_list);¤	DDX_LBString(pDX, IDC_LIST1, m_list_value);¤	//#UC END# *457415BB033C_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *457415BB033C_ON_INIT_DLG*¤		m_for_item_name.SetWindowText(m_for_item_name_str.c_str());¤¤		for (GCL::StrSet::iterator it = m_data.begin(); it != m_data.end(); it++ ) {¤			m_list.AddString ((*it).data());¤		};¤		//#UC END# *457415BB033C_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C_CTOR_BASE_INIT*"
		    value      	"//#UC START# *457415BB033C_CTOR_BASE_INIT*¤//#UC END# *457415BB033C_CTOR_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C_CTOR*"
		    value      	(value Text 
|//#UC START# *457415BB033C_CTOR*¤	m_list_value = _T("");¤	//#UC END# *457415BB033C_CTOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/ChoiceType|457415BB033C
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415BB033C_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *457415BB033C_CUSTOM_CONTROLS_CONSTRAINT*¤	CreateRoot(VERTICAL)¤		<< item (IDC_STATIC1, NORESIZE)¤		<< item (IDC_FOR_ITEM_NAME, ABSOLUTE_VERT)¤		<< item (IDC_STATIC2, NORESIZE)¤		<< item (IDC_LIST1, GREEDY)¤		<<	(pane ( HORIZONTAL, ABSOLUTE_VERT )¤				<< itemGrowing (HORIZONTAL)¤				<< item( IDOK, NORESIZE )¤				<< item( IDCANCEL, NORESIZE )¤		);¤	//#UC END# *457415BB033C_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457587CF00C7_457415BB033C*"
		    value      	(value Text 
|//#UC START# *457587CF00C7_457415BB033C*¤	m_data = ch_list;¤	m_for_item_name_str = for_item_name;¤	if (this->DoModal() == IDOK) {¤		return std::string(LPCTSTR(m_list_value));¤	} else {¤		return "";¤	}¤	//#UC END# *457587CF00C7_457415BB033C*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038232470"))
	    quid       	"457415BB033C"
	    documentation 	"дилог для выбора типа в слчае его неоднозначности"
	    stereotype 	"Dialog"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"4575572E003A"
		    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::IChoiceDlg"
		    quidu      	"457556EF0134"))
	    language   	"MDA Generator")
	(object Class "ReportView"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415DF00BB_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *457415DF00BB_CUSTOM_INCLUDES*¤#include "MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.h"¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤#include "MDProcess/MDAAddinLib/PropertyViews/ItemPropertySheet.h"¤//#UC END# *457415DF00BB_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415DF00BB*"
		    value      	(value Text 
|//#UC START# *457415DF00BB*¤void ReportView::run_query() {	¤	m_result_list.DeleteAllItems ();¤	while (m_result_list.GetHeaderCtrl()->GetItemCount() > 0) {¤		m_result_list.DeleteColumn (m_result_list.GetHeaderCtrl()->GetItemCount() - 1);¤	}		¤¤	RoseHelper::check_model_for_changes ();¤	RoseAbstractDumper::get_model_tree_root();¤	const AbstractDumperBase::ReportsTreeItem* report;¤¤	if (m_auto_run_rep) {¤		report = m_auto_run_rep;¤	} else {¤		CString str;¤		m_reports_combo.GetWindowText (str);¤		AbstractDumperBase::ReportInfos::iterator f = AbstractDumperBase::s_report_infos.find ((const char*)str);¤		assert (f != AbstractDumperBase::s_report_infos.end());¤		report = f->second;¤	}¤#ifndef GDS_NLOG_DEBUG¤	Core::GDS::StopWatch sw ("Report %s", report->name ().c_str ());¤#endif¤¤	unsigned i = 1;¤	for (¤		AbstractDumperBase::ReportsTreeItem::Views::const_iterator it = report->get_views().begin()¤		; it != report->get_views().end()¤		; it++¤	) {¤		m_result_list.InsertColumn (i++, it->name.data(), LVCFMT_LEFT, it->view_length );¤	}¤¤	//AbstractDumperBase::s_current_map = "h";¤¤	m_result_list.EnableWindow (true);¤	i = 0;¤¤	RoseAbstractDumper::auto_locker lck;¤	¤	Helpers::ReportBuilder_var report_builder (Helpers::ReportBuilderFactory::make ());¤	for (¤		RoseElementVector::const_iterator items_it = m_items.begin ()¤		; items_it != m_items.end ()¤		; ++items_it¤	) {¤¤		const RoseAbstractDumper* rad_root = RoseAbstractDumper::find_in_tree (items_it->element);¤		if (rad_root) {¤			try {¤				Core::Aptr<Helpers::ReportResult> result (report_builder->build (rad_root, report));¤¤				for (¤					Helpers::ReportResult::iterator it = result->begin ()¤					; it != result->end ()¤					; ++it¤				) {¤					int ind = 0; //column index¤					IRoseElementPtr rose_element = it->element->rose_element ();¤					for (¤						GCL::StrVector::const_iterator mess_it = it->messages.begin ()¤						; mess_it != it->messages.end()¤						; ++mess_it¤					) {¤						if (ind == 0) {¤							std::string str (*mess_it);¤							if (IsVirtualFactory::get ().execute (rose_element)) {¤								str.insert (0, "(virtual) ");¤							}¤¤							this->m_result_list.InsertItem (i, str.data());¤						} else {¤							this->m_result_list.SetItemText (i, ind, mess_it->c_str ());¤						}¤						ind++;¤					}¤				¤					int img_id = RoseHelper::get_image_index (rose_element);¤					¤					if (img_id != -1) {¤						this->m_result_list.SetItem (i, 0, LVIF_IMAGE, 0, img_id, 0, 0, 0);¤					}¤					¤					this->m_result_list.SetItemData (i, reinterpret_cast<DWORD> (it->element));¤					i++;¤				}¤¤				if (m_result_list.GetItemCount() == 0) {¤					if (m_auto_run_rep && !m_auto_run_rep->get_auto ().empty ()) {¤						this->OnOK ();¤					} else {¤						this->MessageBox ("Empty report's data", 0, MB_OK|MB_ICONINFORMATION);¤					}¤				}¤¤			} catch (Base::FatalError& ex) {¤				GenSupport::LogManagerFactory::get ().log_error (ex.what ());¤¤				GenSupport::ErrorManagerFactory::get ().error (0, "Генерация отчета завершилась ошибкой", "Отчет");¤				GenerationErrorDialog dlg (GenSupport::ErrorManagerFactory::get ().get_errors ());¤				dlg.DoModal ();¤¤				/*GenSupport::LogManagerFactory::get ().log_error ("Report genereating finished by Fatal error:");¤				GenSupport::LogManagerFactory::get ().log_error (ex.what ());¤				MessageBox ("Генерациия отчета завершилась ошибкой смотри лог для деталей", "Ошибка", MB_OK|MB_ICONEXCLAMATION );*/¤			} catch (...) {¤				//MessageBox ("Во время генерации Репорта произошло не обработанное исключение", "Ошибка", MB_OK|MB_ICONEXCLAMATION );¤				GenSupport::ErrorManagerFactory::get ().error (0, "Во время генерации отчета произошло не обработанное исключение", "Отчет");¤				GenerationErrorDialog dlg (GenSupport::ErrorManagerFactory::get ().get_errors ());¤				dlg.DoModal ();¤			}¤		}¤	}¤¤}¤¤void ReportView::OnLvnItemActivateResult(NMHDR *pNMHDR, LRESULT *pResult) {¤	*pResult = 0;¤¤	LPNMITEMACTIVATE pNMIA = reinterpret_cast<LPNMITEMACTIVATE>(pNMHDR);¤	¤	RoseAbstractDumper* rad = (RoseAbstractDumper*) this->m_result_list.GetItemData(pNMIA->iItem);¤	¤	// cut-and-paste from ItemPropertyPage¤	if (rad) {			¤		IRoseItemPtr item_to_select = RoseHelper::get_nearest_container (rad->rose_element());¤		IRoseDiagramPtr diag = RoseHelper::get_self_diagram (rad->rose_element());¤¤		if (diag != 0) {¤			IRoseItemViewPtr iview = diag->GetViewFrom(item_to_select);¤			diag->Activate();¤			iview->SetSelected(true);¤			diag->CenterDiagramToView(iview);¤		} else {¤			MessageBox("No diagrams availble");¤		}¤	}¤¤	RoseHelper::ExecResult is_ok = Commands::CmdManagerFactory::get ().properties (rad->rose_element(), false, true);¤¤	if (is_ok == RoseHelper::ER_DELETE) {¤		m_result_list.DeleteItem (pNMIA->iItem);¤		if (m_result_list.GetItemCount() == 0) {¤			this->OnOK ();¤		}¤	}¤}¤¤void ReportView::OnBnClickedAdvancedSearch() {¤	this->OnCancel();¤	if (!m_items.empty ()) {¤		Commands::CmdManagerFactory::get ().search (m_items[0].element);¤	}¤}¤¤void ReportView::OnCbnSelchangeCombo1() {¤	bool can_run = true;¤	CString str;¤	m_reports_combo.GetWindowText (str);¤	if (str == "<Add custom>...") {¤		CreateReport dlg;¤		if (dlg.DoModal () == IDOK) {¤			int count = m_reports_combo.GetCount ();¤			//вставляем предпоследним (перед "<Add custom>...")¤			int pos = m_reports_combo.InsertString (count - 1, dlg.get_report_name ().c_str ());¤			if (pos > 0) {¤				m_reports_combo.SetCurSel (pos);¤			} else {¤				can_run = false;¤			}¤		} else {¤			can_run = false;¤		}¤	}¤	m_run_btn.EnableWindow(can_run);¤}¤¤void ReportView::OnBnClickedButEdit() {¤	int selection = m_result_list.GetSelectionMark();¤	if (selection >= 0) {¤		RoseAbstractDumper* rad = (RoseAbstractDumper*) this->m_result_list.GetItemData(selection);¤¤		RoseHelper::ExecResult is_ok = Commands::CmdManagerFactory::get ().properties (rad->rose_element(), false, true);¤		¤		if (is_ok == RoseHelper::ER_DELETE) {¤			m_result_list.DeleteItem (selection);¤			if (m_result_list.GetItemCount() == 0) {¤				this->OnOK ();¤			}¤		}¤	}¤}¤¤void ReportView::OnBnClickedButBrowse() {¤	int selection = m_result_list.GetSelectionMark();¤	if (selection >= 0) {¤		RoseAbstractDumper* rad = (RoseAbstractDumper*) this->m_result_list.GetItemData(selection);¤¤		// cut-and-paste from ItemPropertyPage¤		if (rad) {¤			RoseHelper::browse_item (rad->rose_element());¤		}¤	}¤}¤¤void ReportView::OnBnClickedButBrowseClose() {¤	this->OnBnClickedButBrowse();¤	if (m_auto_run_rep && m_auto_run_rep->get_auto () != "") {¤		this->OnBnClickedButBrowseClose2();¤	}¤}¤¤void ReportView::OnBnClickedButBrowseClose3() {¤	this->OnOK ();¤}¤¤void ReportView::OnBnClickedButBrowseClose2() {¤	if (m_auto_run_rep && m_auto_run_rep->get_auto () != "") {¤		CString txt = "Auto report \"";¤		txt += m_auto_run_rep->name ().data();¤		txt += "\" dump:";¤		if (m_auto_run_rep->get_auto () == "Error") {¤			GenSupport::LogManagerFactory::get ().log_error ((const char*)txt);¤		} else {¤			GenSupport::LogManagerFactory::get ().log_warning ((const char*)txt);¤		}¤¤		for (int i = 0; i < m_result_list.GetItemCount(); i++) {¤			int l = 0;¤			for (¤				AbstractDumperBase::ReportsTreeItem::Views::const_iterator it = m_auto_run_rep->get_views().begin()¤				; it != m_auto_run_rep->get_views().end()¤				; it++, l++¤			) {¤				if (l == 0) {¤					txt = "";¤				} else {¤					txt = "\t";¤				}¤¤				txt += it->name.data();¤				txt += ": ";¤				txt += m_result_list.GetItemText (i, l);¤			¤				if (m_auto_run_rep->get_auto () == "Error") {¤					GenSupport::LogManagerFactory::get ().log_error ((const char*)txt);¤				} else {¤					GenSupport::LogManagerFactory::get ().log_warning ((const char*)txt);¤				}¤			}¤		}¤	}¤	this->OnCancel ();¤}¤//#UC END# *457415DF00BB*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415DF00BB_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *457415DF00BB_DESTR_BODY*¤	//#UC END# *457415DF00BB_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457415DF00BB_CUSTOM_INCLUDES*"
		    value      	(value Text "//#UC START# *457415DF00BB_CUSTOM_INCLUDES*¤//#UC END# *457415DF00BB_CUSTOM_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457415DF00BB*"
		    value      	(value Text 
|//#UC START# *457415DF00BB*¤	HICON m_hIcon;¤¤private:¤	std::string m_mess;¤	const AbstractDumperBase::ReportsTreeItem* m_auto_run_rep;¤¤	CListCtrl m_result_list;¤	CComboBox m_reports_combo;¤	bool m_constructed;¤¤	unsigned m_prev_leny;¤	unsigned m_prev_lenx;¤public:¤	afx_msg void run_query();¤	afx_msg void OnLvnItemActivateResult(NMHDR *pNMHDR, LRESULT *pResult);¤	¤	afx_msg void OnBnClickedAdvancedSearch();¤	CButton m_run_btn;¤	afx_msg void OnCbnSelchangeCombo1();¤	afx_msg void OnBnClickedButEdit();¤	afx_msg void OnBnClickedButBrowse();¤	afx_msg void OnBnClickedButBrowseClose();¤	CButton m_ok_btn;¤	CButton m_cancel_btn;¤	afx_msg void OnBnClickedButBrowseClose3();¤	afx_msg void OnBnClickedButBrowseClose2();¤	CButton m_edit_btn;¤	CButton m_browse_btn;¤	CButton m_bnc_btn;¤	Core::Aptr<CImageList> m_il;¤//#UC END# *457415DF00BB*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/ReportView.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/ReportView.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415DF00BB_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *457415DF00BB_MESSAGE_MAP*¤	ON_BN_CLICKED(IDC_BUTTON1, run_query)¤	ON_NOTIFY(LVN_ITEMACTIVATE, IDC_RESULT, OnLvnItemActivateResult)¤	ON_BN_CLICKED(IDC_ADVANCED_SEARCH, OnBnClickedAdvancedSearch)¤	ON_CBN_SELCHANGE(IDC_COMBO1, OnCbnSelchangeCombo1)¤	ON_BN_CLICKED(IDC_BUT_EDIT, OnBnClickedButEdit)¤	ON_BN_CLICKED(IDC_BUT_BROWSE, OnBnClickedButBrowse)¤	ON_BN_CLICKED(IDC_BUT_BROWSE_CLOSE, OnBnClickedButBrowseClose)¤	ON_BN_CLICKED(IDC_BUT_BROWSE_CLOSE3, OnBnClickedButBrowseClose3)¤	ON_BN_CLICKED(IDC_BUT_BROWSE_CLOSE2, OnBnClickedButBrowseClose2)¤	//#UC END# *457415DF00BB_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415DF00BB_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *457415DF00BB_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_RESULT, m_result_list);¤	DDX_Control(pDX, IDC_COMBO1, m_reports_combo);¤	DDX_Control(pDX, IDC_BUTTON1, m_run_btn);¤	DDX_Control(pDX, IDC_BUT_BROWSE_CLOSE3, m_ok_btn);¤	DDX_Control(pDX, IDC_BUT_BROWSE_CLOSE2, m_cancel_btn);¤	DDX_Control(pDX, IDC_BUT_EDIT, m_edit_btn);¤	DDX_Control(pDX, IDC_BUT_BROWSE, m_browse_btn);¤	DDX_Control(pDX, IDC_BUT_BROWSE_CLOSE, m_bnc_btn);¤	//#UC END# *457415DF00BB_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415DF00BB_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *457415DF00BB_ON_INIT_DLG*¤		this->SetIcon(m_hIcon, false);¤¤		this->SetWindowText (m_mess.data());¤		¤		m_run_btn.EnableWindow(false);¤¤		m_il = new CImageList ();¤		m_il->Create (RoseHelper::get_rose_image_list ());¤		m_result_list.SetImageList (m_il.in(), LVSIL_SMALL);¤		m_result_list.EnableWindow (false);¤¤		for (¤			AbstractDumperBase::ReportInfos::iterator it = AbstractDumperBase::s_report_infos.begin()¤			; it != AbstractDumperBase::s_report_infos.end()¤			; it++¤		) {¤			m_reports_combo.AddString (it->first.data());¤		}¤		m_reports_combo.InsertString (-1, "<Add custom>...");¤		m_constructed = true;¤¤		if (m_auto_run_rep) {¤			m_run_btn.EnableWindow(true);¤¤			if (m_reports_combo.SelectString (0, m_auto_run_rep->name().data()) == LB_ERR) {¤				m_reports_combo.AddString (m_auto_run_rep->name().data());¤				m_reports_combo.SelectString (0, m_auto_run_rep->name().data());¤			};¤¤			m_reports_combo.EnableWindow (false);¤			if (m_auto_run_rep->get_auto () == "Error") {¤				m_ok_btn.ShowWindow (SW_HIDE);¤			} ¤			this->run_query ();¤		} else {¤			m_ok_btn.ShowWindow (SW_HIDE);¤			m_cancel_btn.ShowWindow (SW_HIDE);¤		}¤		//#UC END# *457415DF00BB_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/ReportView|457415DF00BB
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415DF00BB_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *457415DF00BB_CUSTOM_CONTROLS_CONSTRAINT*¤	CreateRoot (VERTICAL)¤		<< (pane (HORIZONTAL, ABSOLUTE_VERT)¤			<< item (IDC_STATIC, NORESIZE)¤			<< item (IDC_COMBO1, GREEDY)¤			<< item (IDC_BUTTON1, NORESIZE)¤			<< item (IDC_ADVANCED_SEARCH, NORESIZE)¤		)¤		<< item (IDC_RESULT, GREEDY)¤		<<	(pane ( HORIZONTAL, ABSOLUTE_VERT )¤				<< item (IDC_BUT_EDIT, NORESIZE)¤				<< item (IDC_BUT_BROWSE, NORESIZE)¤				<< item (IDC_BUT_BROWSE_CLOSE, NORESIZE)¤				<< itemGrowing (HORIZONTAL)¤				<< item( IDC_BUT_BROWSE_CLOSE3, NORESIZE )¤				<< item( IDC_BUT_BROWSE_CLOSE2, NORESIZE )¤		);¤	//#UC END# *457415DF00BB_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E8DD900C4_BASE_INIT*"
		    value      	"//#UC START# *458E8DD900C4_BASE_INIT*¤//#UC END# *458E8DD900C4_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E8DD900C4_BODY*"
		    value      	(value Text 
|//#UC START# *458E8DD900C4_BODY*¤	m_root = root;¤	m_auto_run_rep = auto_run_rep;¤	m_constructed = false;¤¤	if (m_auto_run_rep && m_auto_run_rep->get_auto () != "") {¤		m_mess = m_auto_run_rep->get_auto ();¤		m_mess += ": ";¤		m_mess += m_auto_run_rep->name ();¤¤		if (m_auto_run_rep->get_auto () == "Error") {¤			m_hIcon = ::LoadIcon(NULL, IDI_ERROR);¤		} else if (m_auto_run_rep->get_auto () == "Warning") {¤			m_hIcon = ::LoadIcon(NULL, IDI_EXCLAMATION);¤		} else {¤			m_hIcon = ::LoadIcon(NULL, IDI_INFORMATION);¤		}¤	} else {¤		m_mess = "Report viewer";¤¤		m_hIcon = ::LoadIcon(NULL, IDI_INFORMATION);¤	}¤¤	if (m_root != 0) {¤		m_mess += " (from ";¤		if (m_root->GetContext () != 0 && !m_root->GetContext ()->IsClass("Model")) {¤			m_mess += (const char*)m_root->GetContext()->GetName();¤			m_mess += "::";¤		}¤		m_mess += (const char*)m_root->GetName();¤		m_mess += ")";¤	}¤	m_mess += ":";	¤¤	RoseAbstractDumper::lock_reset ();¤	//#UC END# *458E8DD900C4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038265603"))
	    quid       	"457415DF00BB"
	    documentation 	"дилог построения отчета, например отчет о недокументированных элементах модели"
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012210238"))
		    quid       	"46CA74960222"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::CreateReport"
		    quidu      	"46CA74630128")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012210606"))
		    quid       	"47984E14016C"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::AdvancedSearch"
		    quidu      	"4573E7840177")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012210967"))
		    quid       	"4AA608FE01A3"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::RoseModel::IsVirtual"
		    quidu      	"4AA60846020A")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012211370"))
		    quid       	"4ACD95F70273"
		    stereotype 	"uses"
		    supplier   	"Logical View::external::boost::lexical_cast::lexical_cast"
		    quidu      	"46FCA22B0280")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012211739"))
		    quid       	"4ACD973E0370"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::GCL::str::str_op"
		    quidu      	"4503E01500CB")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012212116"))
		    quid       	"4BE152460187"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::Helpers::ReportBuilder"
		    quidu      	"4BE12D3A036B")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012212485"))
		    quid       	"4BE295F803BD"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenerationErrorDialog"
		    quidu      	"4BE15A4F0223")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012212952"))
		    quid       	"4BE2BF43015C"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::Commands::CmdManager"
		    quidu      	"48031C2C0060"))
	    operations 	(list Operations
		(object Operation "c"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*458E8DD900C4_BASE_INIT*"
			    value      	(value Text 
|//#UC START# *458E8DD900C4_BASE_INIT*¤	, m_items (items)¤//#UC END# *458E8DD900C4_BASE_INIT*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*458E8DD900C4_BODY*"
			    value      	(value Text 
|//#UC START# *458E8DD900C4_BODY*¤	m_auto_run_rep = auto_run_rep;¤	m_constructed = false;¤¤	if (m_auto_run_rep && m_auto_run_rep->get_auto () != "") {¤		m_mess = m_auto_run_rep->get_auto ();¤		m_mess += ": ";¤		m_mess += m_auto_run_rep->name ();¤¤		if (m_auto_run_rep->get_auto () == "Error") {¤			m_hIcon = ::LoadIcon(NULL, IDI_ERROR);¤		} else if (m_auto_run_rep->get_auto () == "Warning") {¤			m_hIcon = ::LoadIcon(NULL, IDI_EXCLAMATION);¤		} else {¤			m_hIcon = ::LoadIcon(NULL, IDI_INFORMATION);¤		}¤	} else {¤		m_mess = "Report viewer";¤¤		m_hIcon = ::LoadIcon(NULL, IDI_INFORMATION);¤	}¤¤	if (!m_items.empty ()) {¤		GCL::StrVector items_names;¤¤		m_mess += " (for: ";¤¤		for (RoseElementVector::const_iterator it = m_items.begin (); it != m_items.end (); ++it) {¤			IRoseItemPtr item = it->element;¤			std::string component;¤			if (item && item->GetContext () != 0 && !item->GetContext ()->IsClass(MODEL_TYPE)) {¤				component = ((const char*)item->GetContext()->GetName());¤				component += "::";¤			}¤			component += (const char*)item->GetName();			¤			items_names.push_back (component);¤		}¤		m_mess += GCL::join (items_names, ", ");¤		m_mess += ")";¤		¤	}¤	m_mess += ":";¤	//#UC END# *458E8DD900C4_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012209121"))
		    quid       	"458E8DD900C4"
		    stereotype 	"ctor"
		    parameters 	(list Parameters
			(object Parameter "items"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4ACDA769031D")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012209424"))
			    quid       	"4ACD939402BC"
			    type       	"RoseElementVector"
			    quidu      	"4ACDA769031D")
			(object Parameter "auto_run_rep"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"458E8E730132")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012209779"))
			    quid       	"45B788AF0000"
			    type       	"ReportsTreeItem"
			    quidu      	"458E8E730132"
			    initv      	"0"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "items"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"4ACDA769031D")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012208734"))
		    quid       	"4ACD9365020D"
		    documentation 	"элементы, по которым строить отчет"
		    type       	"RoseElementVector"
		    quidu      	"4ACDA769031D"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "MdaStart"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *457415F60222_CUSTOM_INCLUDES*¤#include "shared/GCL/str/str_op.h"¤#include "MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.h"¤//#UC END# *457415F60222_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222*"
		    value      	(value Text 
|//#UC START# *457415F60222*¤struct MdaData {¤	std::string template_model;¤	std::string template_file;¤};¤¤typedef std::map<std::string, MdaData> MdaTemplates;¤¤MdaTemplates get_mda_templates () {¤	MdaTemplates ret;¤	ret ["Garant Common Template"].template_model = "W:\\shared\\support\\mdagen\\template_models\\garant_common_template.mdl";¤	ret ["Garant Common Template"].template_file = "W:\\shared\\support\\mdagen\\templates\\garant_common_template.tpl";¤	ret ["Garant Common Template (with \"shared\" only for non CORBA project)"].template_model = "W:\\shared\\support\\mdagen\\template_models\\garant_common_template_with_no_server_shared.mdl";¤	ret ["Garant Common Template (with \"shared\" only for non CORBA project)"].template_file = "W:\\shared\\support\\mdagen\\templates\\garant_common_template.tpl";¤	ret ["Garant Common Template (with \"shared\" for CORBA project)"].template_model = "W:\\shared\\support\\mdagen\\template_models\\garant_common_template_with_server_shared.mdl";¤	ret ["Garant Common Template (with \"shared\" for CORBA project)"].template_file = "W:\\shared\\support\\mdagen\\templates\\garant_common_template.tpl";¤	ret ["Garant Common Template (with maximum \"shared\" project)"].template_model = "W:\\shared\\support\\mdagen\\template_models\\garant_common_template_with_maximum_shared.mdl";¤	ret ["Garant Common Template (with maximum \"shared\" project)"].template_file = "W:\\shared\\support\\mdagen\\templates\\garant_common_template.tpl";¤	return ret;¤}¤¤void MdaStart::OnBnClickedOk()¤{¤	int sel = m_rml_box.get_selected_item ();¤	if (sel != -1) {¤		CString res = m_rml_box.GetItemText (sel, 0);¤		m_result.file_name = (const char*) res;¤		m_result.file_type = RFT_MRU;¤		OnOK();¤		return;¤	} ¤¤	sel = m_mda_box.get_selected_item ();¤	if (sel != -1) {¤		CString res = m_mda_box.GetItemText (sel, 0);¤		MdaTemplates mda_tpl = get_mda_templates();		¤		¤		RoseAbstractDumper::FileDesc fd;¤		¤		m_result.file_name = mda_tpl[(const char*)res].template_model;¤		m_result.file_type = RFT_MDA_TPL;¤		¤		OnOK();¤		¤		return;¤	}	¤}¤¤void MdaStart::OnDblClick(NMHDR* pNMHDR, LRESULT* pResult) {¤	this->OnBnClickedOk ();¤	*pResult = 0;¤}¤¤void MdaStart::OnBnClickedButton1() {¤	std::string REGISTRY_KEY_PATH = "SOFTWARE\\Garant\\MDAGenerator";¤	std::string REGISTRY_OPTION_NAME = "RML";	¤	Core::RegistryHelper::set_option_value (¤		Core::RegistryHelper::KEY_CURRENT_USER¤		, REGISTRY_KEY_PATH¤		, REGISTRY_OPTION_NAME¤		, ""¤	);¤	m_rml_box.DeleteAllItems ();¤}¤//#UC END# *457415F60222*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *457415F60222_DESTR_BODY*¤	//#UC END# *457415F60222_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457415F60222_CUSTOM_INCLUDES*"
		    value      	(value Text "//#UC START# *457415F60222_CUSTOM_INCLUDES*¤//#UC END# *457415F60222_CUSTOM_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457415F60222*"
		    value      	(value Text 
|//#UC START# *457415F60222*¤public:¤	const Result& get_result () {¤		return m_result;¤	}¤¤public:¤	afx_msg void OnBnClickedOk();	¤	afx_msg void OnDblClick (NMHDR* pNMHDR, LRESULT* pResult);¤	afx_msg void OnBnClickedButton1();¤¤//#UC END# *457415F60222*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/MdaStart.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/MdaStart.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *457415F60222_MESSAGE_MAP*¤	ON_NOTIFY (NM_DBLCLK, IDC_RML, OnDblClick)¤	ON_NOTIFY (NM_DBLCLK, IDC_MDA, OnDblClick)¤	ON_BN_CLICKED(IDOK, OnBnClickedOk)	¤	ON_BN_CLICKED(IDC_BUTTON1, OnBnClickedButton1)¤	//#UC END# *457415F60222_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *457415F60222_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_RML, m_rml_box);¤	DDX_Control(pDX, IDC_MDA, m_mda_box);¤	//#UC END# *457415F60222_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *457415F60222_ON_INIT_DLG*¤		m_rml_box.InsertColumn (0, "", LVCFMT_LEFT);¤		m_mda_box.InsertColumn (0, "", LVCFMT_LEFT);¤¤		std::string REGISTRY_KEY_PATH = "SOFTWARE\\Garant\\MDAGenerator";¤		std::string REGISTRY_OPTION_NAME = "RML";	¤		¤		std::string resent_models = Core::RegistryHelper::get_option_value (¤			Core::RegistryHelper::KEY_CURRENT_USER¤			, REGISTRY_KEY_PATH¤			, REGISTRY_OPTION_NAME¤			, "@new@"¤		);¤¤		GCL::StrVector rml;¤¤		if (resent_models == "@new@") {¤			for (int i = 1; i <= 4; i++) {¤				std::string buf ("File");¤				buf += boost::lexical_cast<std::string> (i);¤				¤				std::string rose_rfl = Core::RegistryHelper::get_option_value (¤					Core::RegistryHelper::KEY_CURRENT_USER¤					, "SOFTWARE\\Rational Software\\Rose\\Recent File List"¤					, buf.c_str ()¤					, ""¤				);¤				if (rose_rfl != "") {¤					rml.push_back (rose_rfl);¤				}¤¤				resent_models = GCL::join (rml, ",");¤¤				Core::RegistryHelper::set_option_value (¤					Core::RegistryHelper::KEY_CURRENT_USER¤					, REGISTRY_KEY_PATH¤					, REGISTRY_OPTION_NAME¤					, resent_models¤				);¤			}¤		} else {¤			rml = GCL::split_string_by(resent_models.data(), ',');		¤		}¤		¤		for (GCL::StrVector::iterator it = rml.begin(); it != rml.end(); it++) {¤			m_rml_box.add_item (*it);¤		}¤¤		{¤			MdaTemplates mda_tpl = get_mda_templates();¤			for (MdaTemplates::iterator it = mda_tpl.begin(); it != mda_tpl.end(); it++) {¤				m_mda_box.add_item (it->first);¤			}¤		}¤		//#UC END# *457415F60222_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222_CTOR_BASE_INIT*"
		    value      	"//#UC START# *457415F60222_CTOR_BASE_INIT*¤//#UC END# *457415F60222_CTOR_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222_CTOR*"
		    value      	(value Text 
|//#UC START# *457415F60222_CTOR*¤	//#UC END# *457415F60222_CTOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/MdaStart/Result|457575E20125::457575E20125;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/MdaStart/Result|457575E20125::457575E20125
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/MdaStart|457415F60222
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457415F60222_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *457415F60222_CUSTOM_CONTROLS_CONSTRAINT*¤	CreateRoot(VERTICAL)¤		<<	(pane ( HORIZONTAL, ABSOLUTE_VERT )¤				<< item ( IDC_STATIC1, NORESIZE )¤				<< itemGrowing (HORIZONTAL)¤				<< item ( IDC_BUTTON1, NORESIZE )¤		)¤		<< item ( IDC_RML, GREEDY )¤		<< item ( IDC_STATIC2, NORESIZE )¤		<< item ( IDC_MDA, GREEDY )		¤		<<	(pane ( HORIZONTAL, ABSOLUTE_VERT )¤				<< itemGrowing (HORIZONTAL)¤				<< item( IDOK, NORESIZE )¤				<< item( IDCANCEL, NORESIZE )¤		);	¤	//#UC END# *457415F60222_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038162360"))
	    quid       	"457415F60222"
	    documentation 	"диалог показывает сразу после запуска розы позволяет открыть модели из Recent списка, либо создать новую модель на основе шаблона"
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012218503"))
		    quid       	"4AC9BB2F0265"
		    stereotype 	"uses"
		    supplier   	"Logical View::external::boost::lexical_cast::lexical_cast"
		    quidu      	"46FCA22B0280"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "mda_box"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"COM"
			    name       	"Generate"
			    value      	TRUE)
			(object Attribute
			    tool       	"COM"
			    name       	"id"
			    value      	"")
			(object Attribute
			    tool       	"COM"
			    name       	"helpstring"
			    value      	"")
			(object Attribute
			    tool       	"COM"
			    name       	"attributes"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Readonly accessor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Servant Pool"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"45F982BB0128")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012217355"))
		    quid       	"45FE614102DE"
		    type       	"CTooltipListCtrl"
		    quidu      	"45F982BB0128"
		    Containment 	"By Value")
		(object ClassAttribute "rml_box"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Readonly accessor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Servant Pool"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"45F982BB0128")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012217715"))
		    quid       	"45FE61570167"
		    type       	"CTooltipListCtrl"
		    quidu      	"45F982BB0128"
		    Containment 	"By Value"))
	    language   	"MDA Generator"
	    nestedClasses 	(list nestedClasses
		(object Class "Result"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"WikiPageID (wiki)"
			    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/MdaStart/Result|457575E20125
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SourceType (wiki)"
			    value      	"wiki")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19027996342"))
		    quid       	"457575E20125"
		    documentation 	"результат выбора в диалоге MDAStart"
		    stereotype 	"Struct"
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "file_name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"452257A0036F")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012214444"))
			    quid       	"4575766E0134"
			    documentation 	"имя, открываемого файла"
			    type       	"a-string"
			    quidu      	"452257A0036F"
			    exportControl 	"Public"
			    Containment 	"By Value")))
		(object Class "ResultFileType"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19027992678"))
		    quid       	"4575760D0163"
		    documentation 	"тип файла: из списка Recent, из списка шаблонов"
		    stereotype 	"Enum"
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "RFT_MRU"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012216303"))
			    quid       	"45757625002B"
			    documentation 	"файл открывается из списка Recent list"
			    exportControl 	"Public"
			    Containment 	"By Value")
			(object ClassAttribute "RFT_MDA_TPL"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012216687"))
			    quid       	"4575763301C1"
			    documentation 	"файл открывается из списка шаблонов"
			    exportControl 	"Public"
			    Containment 	"By Value")))))
	(object Class "StartProperties"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416030271_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *457416030271_CUSTOM_INCLUDES*¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤#include "GeneratorSelect.h"¤//#UC END# *457416030271_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416030271*"
		    value      	(value Text 
|//#UC START# *457416030271*¤void StartProperties::OnBnClickedOk()¤{¤	CString name;¤	m_proj_name.GetWindowText (name);¤¤	CString dir;¤	m_root_dir.GetWindowText (dir);¤¤	RoseHelper::TreeItems selected_item;¤	RoseHelper::TreeItems selected_leaf;¤	RoseHelper::collect_all_checked (m_gen_tree, selected_item, selected_leaf);¤¤	if (name.GetLength() && dir.GetLength() && selected_item.size()) {¤		m_result.main_name = (const char*)name;¤		m_result.root_dir = (const char*)dir;¤		GCL::str_replace (m_result.root_dir, "\\", "/");¤		GCL::kill_final_char (m_result.root_dir, "/");¤	¤		for (RoseHelper::TreeItems::iterator it = selected_item.begin(); it != selected_item.end(); it++) {¤			AbstractDumperBase::GenTreeItem* item = (AbstractDumperBase::GenTreeItem*)m_gen_tree.GetItemData (*it);¤			m_result.selected_gens.insert(item->name());¤		}¤¤		OnOK();¤	}¤}¤¤void StartProperties::OnBnClickedButton2()¤{¤	BROWSEINFO bi;    // Browse information¤	char szPath[MAX_PATH]; // Variable for holding path information¤¤	bi.hwndOwner = NULL;¤	bi.pidlRoot = NULL;¤	bi.lpszTitle = "Каталог для генерации выходных файлов";¤	bi.ulFlags = BIF_RETURNONLYFSDIRS | 0x0040;	// A little hack to get 'New Folder' button under W2K¤	bi.lpfn = NULL;¤	bi.lParam = 0;¤	bi.pszDisplayName = szPath;¤	LPITEMIDLIST pidlBrowse;¤	pidlBrowse = SHBrowseForFolder( &bi);¤	if( pidlBrowse ) {¤		SHGetPathFromIDList( pidlBrowse, szPath);	¤		m_root_dir.SetWindowText(szPath);¤	}¤}¤//#UC END# *457416030271*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416030271_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *457416030271_DESTR_BODY*¤	//#UC END# *457416030271_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457416030271_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *457416030271_CUSTOM_INCLUDES*¤#include "shared/GCL/data/std_defs.h"¤//#UC END# *457416030271_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457416030271*"
		    value      	(value Text 
|//#UC START# *457416030271*¤public:¤	const Result& get_result () const {¤		return m_result;¤	}¤¤protected:¤	Result m_result;¤¤public:¤	afx_msg void OnBnClickedOk();¤	afx_msg void OnBnClickedButton2();¤	CEdit m_root_dir;¤	CTreeCtrl m_gen_tree;¤	CEdit m_proj_name;¤//#UC END# *457416030271*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/StartProperties.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/StartProperties.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416030271_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *457416030271_MESSAGE_MAP*¤	ON_BN_CLICKED(IDOK, OnBnClickedOk)¤	ON_BN_CLICKED(IDC_BUTTON2, OnBnClickedButton2)¤	//#UC END# *457416030271_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416030271_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *457416030271_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_EDIT2, m_root_dir);¤	DDX_Control(pDX, IDC_TREE1, m_gen_tree);¤	DDX_Control(pDX, IDC_EDIT3, m_proj_name);¤	//#UC END# *457416030271_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416030271_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *457416030271_ON_INIT_DLG*¤		m_proj_name.SetWindowText ("NewProject");¤		m_root_dir.SetWindowText ("w:");¤		m_gen_tree.ModifyStyle( TVS_CHECKBOXES, 0 );¤		m_gen_tree.ModifyStyle( 0, TVS_CHECKBOXES );¤¤		RoseHelper::Selections selections;¤		RoseHelper::fill_node (selections, m_gen_tree, 0, RoseAbstractDumper::s_gen_tree.in());¤		m_gen_tree.Expand(m_gen_tree.GetRootItem (), TVE_EXPAND);¤		//#UC END# *457416030271_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416030271_CTOR_BASE_INIT*"
		    value      	"//#UC START# *457416030271_CTOR_BASE_INIT*¤//#UC END# *457416030271_CTOR_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416030271_CTOR*"
		    value      	(value Text 
|//#UC START# *457416030271_CTOR*¤	//#UC END# *457416030271_CTOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/AddinGui/StartProperties/Result|4575757C004A::4575757C004A;MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта/MDAAddinLib/AddinGui/StartProperties/Result|4575757C004A::4575757C004A
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/StartProperties|457416030271
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038165531"))
	    quid       	"457416030271"
	    documentation 	"диалог создания новго проекта"
	    stereotype 	"Dialog"
	    language   	"MDA Generator"
	    nestedClasses 	(list nestedClasses
		(object Class "Result"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"WikiPageID (wiki)"
			    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/StartProperties/Result|4575757C004A
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SourceType (wiki)"
			    value      	"wiki")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19027991454"))
		    quid       	"4575757C004A"
		    documentation 	"результат выбора в диалоге StartProperties"
		    stereotype 	"Struct"
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "main_name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"452257A0036F")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012219820"))
			    quid       	"4575758F0079"
			    documentation 	"имя создаваемого проекта"
			    type       	"a-string"
			    quidu      	"452257A0036F"
			    exportControl 	"Public"
			    Containment 	"By Value")
			(object ClassAttribute "root_dir"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"452257A0036F")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012220206"))
			    quid       	"457575A10163"
			    documentation 	"рутовый путь для генерации"
			    type       	"a-string"
			    quidu      	"452257A0036F"
			    exportControl 	"Public"
			    Containment 	"By Value")
			(object ClassAttribute "selected_gens"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"44FEBE140197")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012220595"))
			    quid       	"457575B400F6"
			    documentation 	"множество выбранных генераторов  (на, которых поставлена галка)"
			    type       	"StrSet"
			    quidu      	"44FEBE140197"
			    exportControl 	"Public"
			    Containment 	"By Value")))))
	(object Class "GenStatistics"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *457416330177_CUSTOM_INCLUDES*¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤#include "shared/GCL/os/FileOp.h"¤#include "shared/GCL/str/str_op.h"¤#include <boost/lexical_cast.hpp>¤//#UC END# *457416330177_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177*"
		    value      	(value Text 
|//#UC START# *457416330177*¤GCL::StrSet get_changed_diags_guid (const AbstractDumper::GenArtData* key) {¤	GCL::StrSet ret;¤	const AbstractDumper::GenSourceInfoToDumpersMap& source_map = AbstractDumperBase::get_source_to_dumpers ();¤	AbstractDumper::GenSourceInfoToDumpersMap::const_iterator f_it = source_map.find (key->source_info);¤¤	if (f_it != source_map.end ()) {¤		AbstractDumperBase::ADList dumpers (f_it->second.begin (), f_it->second.end ());¤		AbstractDumperBase::ADList::iterator list_it_end = std::unique (dumpers.begin (), dumpers.end ());¤		AbstractDumperBase::ADList::iterator list_it = dumpers.begin ();							¤		for (; list_it != list_it_end; ++list_it) {¤			if ((*list_it)->is_changed ()) {¤				std::string guid = (*list_it)->get_model_unique_id_str () + ".jpg";¤				ret.insert (guid);¤			}¤		}¤	}¤	return ret;¤}¤¤GCL::StrSet get_diags_guid (const AbstractDumperBase* adb) {¤	GCL::StrSet ret;¤	if (adb) {¤		Core::Aptr<AbstractDumperBase::ADList> diags = adb->get_diagrams ();¤		if (diags.is_nil () == false) {¤			for (¤				AbstractDumperBase::ADList::iterator it = diags->begin ()¤				; it != diags->end ()¤				; ++it¤			) {¤				std::string diag_guid = (*it)->get_model_unique_id_str () + ".jpg";¤				ret.insert (diag_guid);¤				/*CORBA::String_var diag_hash ¤					= key->source_info.source.wiki_page ()->get_diagram_hash (¤						diag_guid.data ()¤					);¤				if (ACE_OS::strcmp (diag_hash.in (), "") != 0) {¤					stream << diag_guid << ": "<< diag_hash.in () << std::endl;¤				}*/¤			}¤		}¤	}¤	return ret;¤}¤¤template <class T>¤void dump_diags_hash (¤	const AbstractDumper::GenArtData* key¤	, T* page¤	, bool dump_changed¤	, std::ostream& out_stream¤) {¤	GCL::StrSet diags_guid = get_diags_guid (key->dumper);¤	GCL::StrSet changed_diags = get_changed_diags_guid (key);¤	for (¤		GCL::StrSet::iterator it = diags_guid.begin ()¤		; it != diags_guid.end ()¤		; ++it¤	) {¤		CORBA::String_var diag_hash (¤			page->get_diagram_hash (¤				it->c_str ()¤			)¤		);¤		if (diag_hash.in () && ACE_OS::strcmp (diag_hash.in (), "") != 0) {¤			out_stream << *it << ": "<< diag_hash.in ();¤			if (dump_changed && changed_diags.find (*it) != changed_diags.end ()) {¤				out_stream << ", coords changed";¤			}¤			out_stream << std::endl;¤		}¤	}¤}¤¤void GenStatistics::on_dbl_click(NMHDR* pNMHDR, LRESULT* pResult) {¤	*pResult = 0;¤¤	LPNMITEMACTIVATE pNMIA = reinterpret_cast<LPNMITEMACTIVATE>(pNMHDR);	¤	this->do_details (pNMIA->iItem);	¤}¤¤void GenStatistics::on_get_item_info(NMHDR* pNMHDR, LRESULT* pResult) {¤	*pResult = 0;¤¤	NMLVDISPINFO *pDispInfo = reinterpret_cast<NMLVDISPINFO*>(pNMHDR);¤¤	if (pDispInfo->item.mask & LVIF_TEXT) {¤		int item = pDispInfo->item.iItem;¤		IndexToInfo::const_iterator it = m_index2info.find (item);¤		if (it != m_index2info.end ()) {¤			const char* text = get_item_text (it->second);¤			if (text != 0) {¤				pDispInfo->item.mask |= LVIF_DI_SETITEM; // это чтобы больше он не спрашивал чего писать¤				pDispInfo->item.pszText = const_cast<char*> (text);¤¤				m_details.SetColumnWidth (0, get_max_text_width ());¤			}¤		}¤	}¤}¤¤const AbstractDumper::GenArtData* GenStatistics::get_item_data (int item) const {	¤	IndexToInfo::const_iterator it = m_index2info.find (item);¤	return (it != m_index2info.end ()) ? it->second.art_data : 0;¤}¤¤void GenStatistics::on_select_item (NMHDR* pNMHDR, LRESULT* pResult) {¤	*pResult = 0;¤¤	LPNMITEMACTIVATE pNMIA = reinterpret_cast<LPNMITEMACTIVATE>(pNMHDR);¤	¤	const AbstractDumper::GenArtData* key ¤		= get_item_data (pNMIA->iItem);¤¤	if (key == 0) {¤		m_diff_btn.EnableWindow(false);¤		m_restore_btn.EnableWindow(false);¤		m_apply_btn.EnableWindow(false);¤	} else if (key->status == AbstractDumper::SS_EQ) {¤		m_diff_btn.EnableWindow(true);¤		m_apply_btn.EnableWindow(false);¤		m_restore_btn.EnableWindow(false);¤	} else if (key->status == AbstractDumper::SS_DEL || key->status == AbstractDumper::SS_NEW) {¤		m_diff_btn.EnableWindow(false);¤		m_restore_btn.EnableWindow(true);¤		m_apply_btn.EnableWindow(true);¤	} else {¤		m_diff_btn.EnableWindow(true);¤		m_restore_btn.EnableWindow(true);¤		m_apply_btn.EnableWindow(true);¤	} ¤}¤¤¤struct SortArtByName¤	: public std::binary_function<AbstractDumper::GenArtData, AbstractDumper::GenArtData, bool>¤{¤	SortArtByName (const GenStatistics::GenArtDataToText& texts) ¤		: m_texts (texts)¤	{¤	}¤¤	bool operator()(const AbstractDumper::GenArtData* const x, const AbstractDumper::GenArtData* const y) const {¤		GenStatistics::ItemInfo info_x;¤		GenStatistics::ItemInfo info_y;¤		info_x.art_data = x;¤		info_x.type = GenStatistics::ET_ARTEFACT;¤		¤		info_y.art_data = y;¤		info_y.type = GenStatistics::ET_ARTEFACT;¤		¤		GenStatistics::GenArtDataToText::const_iterator x_it = m_texts.find (info_x);¤		GenStatistics::GenArtDataToText::const_iterator y_it = m_texts.find (info_y);¤¤		std::string x_str ((x_it != m_texts.end ()) ? x_it->second : "");¤		std::string y_str ((y_it != m_texts.end ()) ? y_it->second : "");¤¤		return x_str < y_str;¤	}¤private:¤	const GenStatistics::GenArtDataToText& m_texts;¤};¤¤struct SortArtByType¤	: public std::binary_function<AbstractDumper::GenArtData, AbstractDumper::GenArtData, bool>¤{	¤	SortArtByType (const GenStatistics::GenArtDataToText& texts) ¤		: m_texts (texts)¤	{¤	}¤	bool operator()(const AbstractDumper::GenArtData* const x, const AbstractDumper::GenArtData* const y) const {¤		if (x->source_info.source.d_ () == y->source_info.source.d_ ()) {¤			GenStatistics::ItemInfo info_x;¤			GenStatistics::ItemInfo info_y;¤			info_x.art_data = x;¤			info_x.type = GenStatistics::ET_ARTEFACT;¤			¤			info_y.art_data = y;¤			info_y.type = GenStatistics::ET_ARTEFACT;¤			¤			GenStatistics::GenArtDataToText::const_iterator x_it = m_texts.find (info_x);¤			GenStatistics::GenArtDataToText::const_iterator y_it = m_texts.find (info_y);¤¤			std::string x_str ((x_it != m_texts.end ()) ? x_it->second : "");¤			std::string y_str ((y_it != m_texts.end ()) ? y_it->second : "");¤			¤			return x_str == y_str ? x < y : x_str < y_str;¤		} else {¤			return x->source_info.source.d_ () < y->source_info.source.d_ ();¤		}¤	}¤private:¤	const GenStatistics::GenArtDataToText& m_texts;¤};¤//#UC END# *457416330177*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *457416330177_DESTR_BODY*¤	//#UC END# *457416330177_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457416330177_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *457416330177_CUSTOM_INCLUDES*¤#include "MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.h"¤#include "afxwin.h"¤//#UC END# *457416330177_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457416330177*"
		    value      	(value Text 
|//#UC START# *457416330177*¤private:¤	//notifies handlers¤	void on_dbl_click(NMHDR* pNMHDR, LRESULT* pResult);¤	void on_get_item_info(NMHDR* pNMHDR, LRESULT* pResult);¤	void on_select_item(NMHDR* pNMHDR, LRESULT* pResult);	¤	¤	void on_key_down (NMHDR* pNMHDR, LRESULT* pResult);¤¤	const AbstractDumper::GenArtData* GenStatistics::get_item_data (int item) const;¤¤	//controls¤	CButton	m_diff_btn;¤	CButton	m_restore_btn;¤	CButton	m_apply_btn;¤	CStatic	m_total;¤	CStatic	m_new;¤	CStatic	m_equ;¤	CStatic	m_chg;¤	CStatic m_del;¤//#UC END# *457416330177*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/GenStatistics.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/GenStatistics.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *457416330177_MESSAGE_MAP*¤	ON_WM_SIZE()¤	ON_BN_CLICKED(IDC_DIFF, on_diff)¤	ON_BN_CLICKED(IDC_RESTORE, on_restore)¤	ON_BN_CLICKED(IDC_APPLY, on_apply)¤	ON_BN_CLICKED(IDC_RESTORE_ALL, on_restore_all)¤	ON_NOTIFY(LVN_GETDISPINFO, IDC_DETAILS, on_get_item_info)¤	ON_NOTIFY(NM_CLICK, IDC_DETAILS, on_select_item)¤	ON_NOTIFY(NM_DBLCLK, IDC_DETAILS, on_dbl_click)	¤	//#UC END# *457416330177_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *457416330177_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_DIFF, m_diff_btn);¤	DDX_Control(pDX, IDC_RESTORE, m_restore_btn);¤	DDX_Control(pDX, IDC_APPLY, m_apply_btn);¤	DDX_Control(pDX, IDC_TOTAL, m_total);¤	DDX_Control(pDX, IDC_NEW, m_new);¤	DDX_Control(pDX, IDC_EQU, m_equ);¤	DDX_Control(pDX, IDC_CHG, m_chg);¤	DDX_Control(pDX, IDC_DETAILS, m_details);¤	DDX_Control(pDX, IDC_DEL, m_del);¤	DDX_Check (pDX, IDC_MINOR_CHANGES, m_minor_changes);¤	//#UC END# *457416330177_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *457416330177_ON_INIT_DLG*¤		//Core::GDS::StopWatch sw (GDS_CURRENT_FUNCTION);¤		//подготавливаем данные для отображения¤		this->prepare_item_texts ();¤¤		m_applied_arts.clear ();¤		m_minor_changes = BST_CHECKED;¤		¤		m_details.InsertColumn (0, "", LVCFMT_LEFT, this->get_max_text_width ());¤		¤		this->fill_statistic ();¤		//#UC END# *457416330177_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177_CTOR_BASE_INIT*"
		    value      	"//#UC START# *457416330177_CTOR_BASE_INIT*¤//#UC END# *457416330177_CTOR_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177_CTOR*"
		    value      	(value Text 
|//#UC START# *457416330177_CTOR*¤	m_minor_changes = BST_CHECKED;¤	//#UC END# *457416330177_CTOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/GenStatistics|457416330177
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416330177_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *457416330177_CUSTOM_CONTROLS_CONSTRAINT*¤	CreateRoot (VERTICAL)¤		<< (pane (HORIZONTAL, ABSOLUTE_VERT)¤			<< item (IDC_STATIC1, NORESIZE)¤			<< item (IDC_TOTAL, NORESIZE)¤		) << (pane (HORIZONTAL, ABSOLUTE_VERT)¤			<< item (IDC_STATIC2, NORESIZE)¤			<< item (IDC_DEL, NORESIZE)¤			<< itemGrowing (HORIZONTAL)¤			<< item (IDC_STATIC3, NORESIZE)¤			<< item (IDC_NEW, NORESIZE)¤			<< itemGrowing (HORIZONTAL)¤			<< item (IDC_STATIC4, NORESIZE)¤			<< item (IDC_CHG, NORESIZE)¤			<< itemGrowing (HORIZONTAL)¤			<< item (IDC_STATIC5, NORESIZE)¤			<< item (IDC_EQU, NORESIZE)¤		) ¤		<< item (IDC_STATIC6, NORESIZE)¤		<< item (IDC_DETAILS, GREEDY)¤		<< (pane (HORIZONTAL, ABSOLUTE_VERT)¤			<< item (IDC_DIFF, NORESIZE)¤			<< item (IDC_RESTORE, NORESIZE)¤			<< item (IDC_APPLY, NORESIZE)¤			<< item (IDC_RESTORE_ALL, NORESIZE)¤			<< itemGrowing (HORIZONTAL)¤			<< item (IDC_MINOR_CHANGES, NORESIZE)¤			<< item (IDOK, NORESIZE)¤		);¤	//#UC END# *457416330177_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*464977A20128*"
		    value      	(value Text 
|//#UC START# *464977A20128*¤	m_temp_files.insert (file);¤	//#UC END# *464977A20128*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4677DE1F0261*"
		    value      	(value Text 
|//#UC START# *4677DE1F0261*¤	return (m_minor_changes == BST_CHECKED);¤	//#UC END# *4677DE1F0261*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*464977790186*"
		    value      	(value Text 
|//#UC START# *464977790186*¤	for (¤		TempFileSet::iterator it = m_temp_files.begin ()¤		; it != m_temp_files.end ()¤		; ++it¤	) {¤		GCL::FileOp::remove_file (it->data());¤	}¤	//#UC END# *464977790186*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038360884"))
	    quid       	"457416330177"
	    documentation 	"дилог статистики генерации - показывает список новых, изменившихся, неизменившихся артефактов"
	    stereotype 	"Dialog"
	    operations 	(list Operations
		(object Operation "remove_temp_files"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*464977790186*"
			    value      	(value Text 
|//#UC START# *464977790186*¤	for (¤		TempFileSet::iterator it = m_temp_files.begin ()¤		; it != m_temp_files.end ()¤		; ++it¤	) {¤		GCL::FileOp::remove_file (it->data());¤	}¤	//#UC END# *464977790186*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012235196"))
		    quid       	"464977790186"
		    documentation 	"метод удаляет ранее созданные временные файлы"
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "add_temp_file"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*464977A20128*"
			    value      	(value Text 
|//#UC START# *464977A20128*¤	m_temp_files.insert (file);¤	//#UC END# *464977A20128*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012235555"))
		    quid       	"464977A20128"
		    documentation 	"добавляет в файл в множество временных файлов"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "file"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"452257A0036F")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012235851"))
			    quid       	"464977C30280"
			    type       	"a-string"
			    quidu      	"452257A0036F"))
		    concurrency 	"Sequential"
		    opExportControl 	"Protected"
		    uid        	0)
		(object Operation "is_minor_changes"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4677DE1F0261*"
			    value      	(value Text 
|//#UC START# *4677DE1F0261*¤	return (m_minor_changes == BST_CHECKED);¤	//#UC END# *4677DE1F0261*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE100240")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012236255"))
		    quid       	"4677DE1F0261"
		    documentation 	
|возвращает true, если была поставлена галка "Minor changes", иначе false
		    
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE100240")
		(object Operation "fill_statistic"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4922C4C0007B*"
			    value      	(value Text 
|//#UC START# *4922C4C0007B*¤	//Core::GDS::StopWatch sw (GDS_CURRENT_FUNCTION);¤¤	m_details.DeleteAllItems ();¤	m_index2info.clear ();¤¤	AbstractDumper::get_artefacts ().correct_data ();¤¤	char buf[256];¤	Core::Aptr<AbstractDumper::ArtefactSet> chg_a = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_CHG);¤	Core::Aptr<AbstractDumper::ArtefactSet> new_a = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_NEW);¤	Core::Aptr<AbstractDumper::ArtefactSet> del_a = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_DEL);¤	Core::Aptr<AbstractDumper::ArtefactSet> eq_a = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_EQ);¤		¤	m_total.SetWindowText (¤		itoa(chg_a->size() + eq_a->size() + new_a->size(), buf, 10)¤	);¤	¤	m_equ.SetWindowText (¤		itoa(eq_a->size(), buf, 10)¤	);¤	¤	m_new.SetWindowText (¤		itoa(new_a->size(), buf, 10)¤	);¤	¤	m_chg.SetWindowText (¤		itoa(chg_a->size(), buf, 10)¤	);¤	¤	m_del.SetWindowText (¤		itoa(del_a->size(), buf, 10)¤	);¤	¤	fill_list (ET_NAME_DEL, m_details);¤	fill_list (ET_NAME_NEW, m_details);¤	fill_list (ET_NAME_CHG, m_details);¤	fill_list (ET_NAME_EQ, m_details);¤	¤	int total_count = chg_a->size() + eq_a->size() + new_a->size() + del_a->size () + 4; // 4 - названия списков¤	m_details.SetItemCountEx(total_count);¤¤	m_details.EnsureVisible (0, FALSE);¤	m_details.SetItemState (0, LVIS_SELECTED | LVIS_FOCUSED, LVIS_SELECTED | LVIS_FOCUSED);¤¤	m_diff_btn.EnableWindow(false);¤	m_restore_btn.EnableWindow(false);¤	m_apply_btn.EnableWindow(false);¤	//#UC END# *4922C4C0007B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012236627"))
		    quid       	"4922C4C0007B"
		    documentation 	"формирует информацию по генерации."
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "fill_list"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4922C4FC0146*"
			    value      	(value Text 
|//#UC START# *4922C4FC0146*¤	class local {¤	public:¤		static AbstractDumper::ArtefactSet* get_arts (ItemType type) {¤			Core::Aptr<AbstractDumper::ArtefactSet> ret;¤			switch (type) {¤				case ET_NAME_DEL: ¤					ret = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_DEL);¤					break;¤				case ET_NAME_EQ: ¤					ret = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_EQ);¤					break;¤				case ET_NAME_CHG: ¤					ret = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_CHG);¤					break;¤				case ET_NAME_NEW: ¤					ret = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_NEW);¤					break;¤				default: ¤					break;¤			}¤			return ret.forget ();¤		}¤	};¤	int i = m_index2info.size ();¤	m_index2info[i].art_data = 0;¤	m_index2info[i].type = type;¤	i = m_index2info.size ();¤			¤	Core::Aptr<AbstractDumper::ArtefactSet> arts = local::get_arts (type);	¤	if (!arts.is_nil ()) {¤		this->prepare_item_texts ();¤		typedef std::set<const AbstractDumper::GenArtData*, SortArtByType> SortedArtefactSet;¤		SortArtByType sort_functor (m_list_texts);¤		SortedArtefactSet sorted_arts (arts->begin(), arts->end(), sort_functor); ¤		for (SortedArtefactSet::const_iterator it = sorted_arts.begin(); it != sorted_arts.end(); it++, i++) {¤			m_index2info[i].art_data = *it;¤			m_index2info[i].type = ET_ARTEFACT;¤		}¤	}¤	//#UC END# *4922C4FC0146*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012237078"))
		    quid       	"4922C4FC0146"
		    documentation 	"заполняет информацией список генерации"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "type"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4922C06F0337")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012237405"))
			    quid       	"4922C52F0015"
			    type       	"ItemType"
			    quidu      	"4922C06F0337")
			(object Parameter "inout  lb"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"45F9841C0251")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012237761"))
			    quid       	"4922C52F0076"
			    type       	"CListCtrl"
			    quidu      	"45F9841C0251"))
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "on_apply"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4922C53A0110*"
			    value      	(value Text 
|//#UC START# *4922C53A0110*¤	try {¤		POSITION pos = m_details.GetFirstSelectedItemPosition();¤		if (pos != NULL) {¤			while (pos) {¤				int selected_item = m_details.GetNextSelectedItem(pos);¤				const AbstractDumper::GenArtData* key = get_item_data (selected_item);			¤				if (key) {¤					if (AbstractDumper::commit (*key) == false) {¤						std::string mess ("Some warning while commit change: ");¤						if (key->source_info.source.d_() == AbstractDumper::GST_FILE) {¤							mess += key->source_info.source.file_name();¤						} else if (key->source_info.source.d_() == AbstractDumper::GST_WIKI) {¤							if (key->source_info.source.wiki_page () != 0) {¤								//CORBA::String_var path = key->source_info.source.wiki_page ()->get_path ();¤								//mess += path.in ();¤								mess += key->source_info.source.wiki_page ()->get_path ();¤							} else {¤								mess += "unknown";¤							}¤						}¤						mess += ", see log for more info";				¤						GenSupport::LogManagerFactory::get ().log_warning (mess.c_str ());¤					}¤					m_applied_arts.insert (key);¤				}¤			}¤		}¤	} catch (Base::FatalError& ex) {¤		RoseAbstractDumper::has_error (false);¤		/*GenSupport::LogManagerFactory::get ().log_error ("Fatal error:");¤		GenSupport::LogManagerFactory::get ().log_error (ex.what ());¤		¤		::MessageBox (¤			NULL¤			, "Применение результатов генерации завершилось ошибкой смотри лог для деталей"¤			, "Ошибка"¤			, MB_OK|MB_ICONEXCLAMATION¤		);*/¤		this->EndDialog (IDCANCEL);¤		throw ex;¤	}¤	this->fill_statistic ();¤	//#UC END# *4922C53A0110*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012238169"))
		    quid       	"4922C53A0110"
		    documentation 	"обработчик нажатия кнопки Apply - применяет изменения для выделенных в списке артефактов"
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "on_diff"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4922C550007D*"
			    value      	(value Text 
|//#UC START# *4922C550007D*¤	POSITION pos = m_details.GetFirstSelectedItemPosition();¤	if (pos != NULL) {¤		while (pos) {¤			int selected_item = m_details.GetNextSelectedItem(pos);¤			this->do_details (selected_item);	¤		}¤	}¤	//#UC END# *4922C550007D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012238530"))
		    quid       	"4922C550007D"
		    documentation 	
|обрабочтик нажатия кнопки "Diff" - показывает дифу.
		    
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "on_restore"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4922C5960173*"
			    value      	(value Text 
|//#UC START# *4922C5960173*¤	POSITION pos = m_details.GetFirstSelectedItemPosition();¤	if (pos != NULL) {¤		while (pos) {¤			int selected_item = m_details.GetNextSelectedItem(pos);¤			this->do_restore (selected_item);	¤		}¤	}¤	this->fill_statistic ();¤	//#UC END# *4922C5960173*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012238878"))
		    quid       	"4922C5960173"
		    documentation 	
|обработчик кнопки "Restore" - отменяет изменения сделанные с выделенным в списке артефактом.
		    
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "on_restore_all"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4922C5C500A1*"
			    value      	(value Text 
|//#UC START# *4922C5C500A1*¤	//Core::GDS::StopWatch sw (GDS_CURRENT_FUNCTION);¤	unsigned count = m_details.GetItemCount ();¤¤	for (unsigned i = 0; i < count; i++) {¤		this->do_restore (i);¤	}¤¤	this->fill_statistic ();¤	//#UC END# *4922C5C500A1*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012239219"))
		    quid       	"4922C5C500A1"
		    documentation 	"отменяет изменения для всех артефактов"
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "do_restore"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4922C60F02FE*"
			    value      	(value Text 
|//#UC START# *4922C60F02FE*¤	const AbstractDumper::GenArtData* key = get_item_data (index);¤	¤	//восстанавливаем ТОЛЬКО изменённые элементы¤	if (¤		key ¤		&& key->status != AbstractDumper::SS_EQ¤		&& m_applied_arts.find (key) == m_applied_arts.end ()¤	) {¤		AbstractDumper::get_artefacts ().restore (*key);¤		AbstractDumperBase::erase_source (key->source_info);¤	}¤	//#UC END# *4922C60F02FE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012239590"))
		    quid       	"4922C60F02FE"
		    documentation 	"отменяет изменения для элемента с номером index в списке"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "index"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"450A61050251")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012239886"))
			    quid       	"4922C6400053"
			    type       	"integer"
			    quidu      	"450A61050251"))
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "do_details"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4922C6490312*"
			    value      	(value Text 
|//#UC START# *4922C6490312*¤	const AbstractDumper::GenArtData* key ¤		= get_item_data (index);¤	if (!key) {¤		return;¤	}¤¤	if (key->status != AbstractDumper::SS_CHG) {¤		std::string fn;¤		if (key->source_info.source.d_ () == AbstractDumper::GST_FILE) {¤			if (key->status == AbstractDumper::SS_NEW) {¤				fn = AbstractDumper::create_gen_file_name(key->source_info.source.file_name());¤			} else {¤				// EQ or DEL¤				fn = key->source_info.source.file_name();¤			}¤			HINSTANCE err_border = (HINSTANCE)32;¤			if (ShellExecute(NULL, "open", fn.data(), NULL, NULL, SW_SHOWNORMAL) < err_border) {¤				MessageBox ("Cant open selected file (shell command OPEN returns error)", "ERROR", MB_OK|MB_ICONEXCLAMATION);¤			}¤		} else if (key->source_info.source.d_ () == AbstractDumper::GST_WIKI) {¤			if (key->source_info.source.wiki_page () != 0) {				¤				ACE_TCHAR filename_[MAXPATHLEN + 1];¤				// Create a temporary file.¤				if (ACE::get_temp_dir (filename_, MAXPATHLEN - 11) != -1) {¤					// Add the filename to the end¤					std::string templ = key->dumper->get_model_unique_id_str () + key->source_info.gen_id;¤					fn += filename_ + templ + ".txt";¤					std::ofstream new_file (fn.c_str (), std::ios_base::out);¤					if (new_file.is_open () == false) {¤						LOG_E (("Can't open file \"%s\" for writing", fn.c_str ()));¤					} else {						¤						new_file << "Private data:" << std::endl;¤						¤						//выводим путь к странице¤						//CORBA::String_var path = key->source_info.source.wiki_page ()->get_path ();¤						//new_file << "Path: "<< path.in () << std::endl;¤						new_file << "Path: "<< key->source_info.source.wiki_page ()->get_path () << std::endl;¤						¤¤						//выводим хэши всех диаграмм¤						dump_diags_hash (key, key->source_info.source.wiki_page (), false, new_file);¤						¤						/*GCL::StrSet diags_guid = get_diags_guid (key->dumper);¤						for (¤							GCL::StrSet::iterator it = diags_guid.begin ()¤							; it != diags_guid.end ()¤							; ++it¤						) {¤							CORBA::String_var diag_hash ¤								= key->source_info.source.wiki_page ()->get_diagram_hash (¤									it->c_str ()¤								);¤							if (ACE_OS::strcmp (diag_hash.in (), "") != 0) {¤								new_file << *it << ": "<< diag_hash.in () << std::endl;¤							}¤						}*/¤¤						//выводим выставленные лэйблы¤						/*CORBA::String_var labels = key->source_info.source.wiki_page ()->get_labels ();¤						if (ACE_OS::strcmp (labels.in (), "") != 0) {¤							new_file << "Labels: "<< labels.in () << std::endl;¤						}*/¤¤						std::string labels = key->source_info.source.wiki_page ()->get_labels ();¤						if (!labels.empty ()) {¤							new_file << "Labels: "<< labels << std::endl;¤						}¤						¤						new_file << std::endl << "Page text:" << std::endl;¤						//CORBA::String_var text = key->source_info.source.wiki_page ()->get_generated_text ();¤						//new_file << text.in ();¤						new_file << key->source_info.source.wiki_page ()->get_generated_text ();¤						new_file.close ();¤						¤						HINSTANCE err_border = (HINSTANCE)32;¤						if (ShellExecute(NULL, "open", fn.data(), NULL, NULL, SW_SHOWNORMAL) < err_border) {¤							MessageBox ("Cant open selected file (shell command OPEN returns error)", "ERROR", MB_OK|MB_ICONEXCLAMATION);¤						}¤						this->add_temp_file (fn);						¤					}¤				} else {¤					LOG_E (("Can't get temp dir"));¤				}¤			}¤		}		¤		return;¤	}¤¤	std::string REGISTRY_KEY_PATH = "SOFTWARE\\Garant\\MDAGenerator";¤	std::string REGISTRY_OPTION_NAME = "DiffProgram";¤	std::string DEFAULT_OPTION_VALUE = "C:\\Program Files\\Araxis\\Araxis Merge v6.5\\compare.exe";¤¤	std::string diff_app_name = Core::RegistryHelper::get_option_value (¤		Core::RegistryHelper::KEY_LOCAL_MACHINE¤		, REGISTRY_KEY_PATH¤		, REGISTRY_OPTION_NAME¤		, DEFAULT_OPTION_VALUE¤	);¤	¤	std::string new_file;¤	std::string old_file;¤	std::string args = "\"";¤	args += diff_app_name;¤	args += "\"";¤	args += " ";¤	if (key->source_info.source.d_ () == AbstractDumper::GST_FILE) {¤		old_file = key->source_info.source.file_name().data();		¤		new_file = AbstractDumper::create_gen_file_name (key->source_info.source.file_name()).data();¤	} else if (key->source_info.source.d_ () == AbstractDumper::GST_WIKI) {¤		if (key->source_info.source.wiki_page () != 0) {¤			ACE_TCHAR filename_[MAXPATHLEN + 1];			¤			// Create a temporary file.¤			if (ACE::get_temp_dir (filename_, MAXPATHLEN) != -1) {¤				// Add the filename to the end¤				// Create a temporary file.				 				¤				std::string templ = filename_+ key->dumper->get_model_unique_id_str () + key->source_info.gen_id;				¤				old_file = templ + "_old.txt";¤				std::ofstream old_file_stream (old_file.c_str (), std::ios_base::out);¤				¤				GCL::StrSet diags_guid = get_diags_guid (key->dumper);¤¤				if (old_file_stream.is_open () == false) {¤					LOG_E (("Can't open file \"%s\" for writing", old_file.c_str ()));¤				} else {¤					ServerGate::GenerationContents::Page_var page_before_changes = ¤						key->source_info.source.wiki_page ()->get_page_before_changes ();¤					¤					old_file_stream << "Private data:" << std::endl;					¤¤					//выводим путь к странице¤					CORBA::String_var path = page_before_changes->get_path ();¤					old_file_stream << "Path: "<< path.in () << std::endl;¤					old_file_stream << "Metadatas checksum: " << page_before_changes->get_all_property_cheksum () << std::endl;¤					¤					dump_diags_hash (key, page_before_changes.in (), false, old_file_stream);¤					¤					CORBA::String_var labels = page_before_changes->get_labels ();¤					if (ACE_OS::strcmp (labels.in (), "") != 0) {¤						old_file_stream << "Labels: "<< labels.in () << std::endl;¤					}¤					CORBA::String_var old_text ¤						= page_before_changes->get_generated_text ();¤					old_file_stream << std::endl << "Page text:" << std::endl;¤					old_file_stream << old_text.in ();					¤					old_file_stream.close ();¤					this->add_temp_file (old_file);¤				}				¤				new_file = templ + "_new.txt";¤				std::ofstream new_file_stream (new_file.c_str (), std::ios_base::out);¤				if (new_file_stream.is_open () == false) {¤					LOG_E (("Can't open file \"%s\" for writing", new_file.c_str ()));¤				} else {¤					¤					new_file_stream << "Private data:" << std::endl;¤					//выводим путь к странице¤					//CORBA::String_var path = key->source_info.source.wiki_page ()->get_path ();¤					//new_file_stream << "Path: "<< path.in () << std::endl;¤					new_file_stream << "Path: "<< key->source_info.source.wiki_page ()->get_path () << std::endl;¤					new_file_stream << "Metadatas checksum: " << key->source_info.source.wiki_page ()->get_all_property_cheksum () << std::endl;¤					¤					dump_diags_hash (key, key->source_info.source.wiki_page (), true, new_file_stream);¤													¤					/*CORBA::String_var labels = key->source_info.source.wiki_page ()->get_labels ();¤					if (ACE_OS::strcmp (labels.in (), "") != 0) {¤						new_file_stream << "Labels: "<< labels.in () << std::endl;¤					}*/¤					std::string labels = key->source_info.source.wiki_page ()->get_labels ();¤					if (!labels.empty ()) {¤						new_file_stream << "Labels: "<< labels << std::endl;¤					}¤					¤					new_file_stream << std::endl << "Page text:" << std::endl;¤					//CORBA::String_var new_text = key->source_info.source.wiki_page ()->get_generated_text ();¤					//new_file_stream << new_text.in ();¤					¤					new_file_stream << key->source_info.source.wiki_page ()->get_generated_text ();¤					new_file_stream.close ();¤					this->add_temp_file (new_file);¤				}¤			} else {¤				LOG_E (("Can't get temp dir"));¤			}¤		}¤	}¤	args += "\"" + old_file + "\"";¤	args += " ";¤	args += "\"" + new_file+ "\"";¤	STARTUPINFO si;¤	PROCESS_INFORMATION pi;¤¤	ZeroMemory( &si, sizeof(si) );¤	si.cb = sizeof(si);¤	ZeroMemory( &pi, sizeof(pi) );¤¤	if (CreateProcess (¤		diff_app_name.data()¤		, (char*) args.data()¤		, NULL¤		, NULL¤		, false¤		, 0¤		, NULL¤		, NULL¤		, &si¤		, &pi¤	)) {¤		CloseHandle(pi.hThread);¤¤		//if (WaitForSingleObject(pi.hProcess, INFINITE) == WAIT_FAILED) {¤		//	TerminateProcess(pi.hProcess, WAIT_FAILED);¤		//}¤¤		CloseHandle(pi.hProcess);¤	} else {¤		MessageBox ("Cant execute DIFF programm. Check path an registry data.", "ERROR", MB_OK|MB_ICONEXCLAMATION);¤	}¤	//#UC END# *4922C6490312*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012240304"))
		    quid       	"4922C6490312"
		    documentation 	"детелизация - для измененных артефактов показывает дифу, для новых и удалённых пытается открыть артефакт в системном редакторе"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "index"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"450A61050251")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012240601"))
			    quid       	"4922C64A03C3"
			    type       	"integer"
			    quidu      	"450A61050251"))
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "get_item_text"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"TargetStereotype"
			    value      	"const,cached")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*492392C002EF*"
			    value      	(value Text 
|//#UC START# *492392C002EF*¤	const char* result = 0;¤	this->prepare_item_texts ();¤¤	GenArtDataToText::const_iterator it = m_list_texts.find (info);¤	if (it == m_list_texts.end ()) {¤		std::string text (info.art_data != 0 ? this->get_text_for_art (*info.art_data) : "");¤		it = m_list_texts.insert (std::make_pair (info, text)).first;¤	}¤	result = it->second.c_str ();¤¤	return result;¤	//#UC END# *492392C002EF*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE240068")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012241010"))
		    quid       	"492392C002EF"
		    documentation 	"возвращает текст для элемента списка"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "info"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4922C29D0103")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012241324"))
			    quid       	"492392DF020C"
			    type       	"ItemInfo"
			    quidu      	"4922C29D0103"))
		    result     	"string"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"3DBFFE240068")
		(object Operation "prepare_item_texts"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4923A9AB0305*"
			    value      	(value Text 
|//#UC START# *4923A9AB0305*¤	if (m_list_texts.empty ()) {¤		Core::Aptr<AbstractDumper::ArtefactSet> chg_a = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_CHG);¤		Core::Aptr<AbstractDumper::ArtefactSet> new_a = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_NEW);¤		Core::Aptr<AbstractDumper::ArtefactSet> del_a = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_DEL);¤		Core::Aptr<AbstractDumper::ArtefactSet> eq_a = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_EQ);¤		¤		AbstractDumper::ArtefactSet all_artefacts (chg_a->begin (), chg_a->end ());¤		all_artefacts.insert (new_a->begin (), new_a->end ());¤		all_artefacts.insert (del_a->begin (), del_a->end ());¤		all_artefacts.insert (eq_a->begin (), eq_a->end ());¤		¤		for (¤			AbstractDumper::ArtefactSet::const_iterator it = all_artefacts.begin ()¤			; it != all_artefacts.end ()¤			; ++it¤		) {¤			if ((*it)->source_info.source.d_ () == AbstractDumper::GST_FILE) {¤				ItemInfo info;¤				info.type = ET_ARTEFACT;¤				info.art_data = *it;¤				¤				if (info.art_data != 0) {¤					m_list_texts[info] = this->get_text_for_art (*info.art_data);¤				}¤			}¤		}¤		{¤			ItemInfo info;¤			info.type = ET_NAME_DEL;¤			info.art_data = 0;¤			m_list_texts[info] = "Удалённые:";¤		}¤		{¤			ItemInfo info;¤			info.type = ET_NAME_EQ;¤			info.art_data = 0;¤			m_list_texts[info] = "Неизменившиеся:";¤		}¤		{¤			ItemInfo info;¤			info.type = ET_NAME_CHG;¤			info.art_data = 0;¤			m_list_texts[info] = "Изменённые:";¤		}¤		{¤			ItemInfo info;¤			info.type = ET_NAME_NEW;¤			info.art_data = 0;¤			m_list_texts[info] = "Новые:";¤		}		¤	}¤	//#UC END# *4923A9AB0305*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012241727"))
		    quid       	"4923A9AB0305"
		    documentation 	"подготавливает данные для отображения в списке"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "get_max_text_width"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4923AFC00258*"
			    value      	(value Text 
|//#UC START# *4923AFC00258*¤	int max_width = -1;¤¤	this->prepare_item_texts ();¤	// определяем текущий шрифт списка ¤	CFont* font = m_details.GetFont(); ¤¤	// создаем контекст для измерения ширины строк ¤	CClientDC dc (const_cast<GenStatistics*> (this)); ¤	font = dc.SelectObject(font);¤¤	//вычисляем максимальную ширину строки¤	for (¤		GenArtDataToText::const_iterator it = m_list_texts.begin ()¤		; it != m_list_texts.end ()¤		; ++it¤	) {			¤		SIZE size = dc.GetTextExtent(it->second.c_str (), it->second.size ());¤		max_width = std::max<int> (max_width, size.cx);			¤	}¤	dc.SelectObject(font);¤¤	return max_width + 6;¤	//#UC END# *4923AFC00258*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"450A61050251")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012242074"))
		    quid       	"4923AFC00258"
		    documentation 	"возвращает максимальную длину текста в списке"
		    result     	"integer"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"450A61050251")
		(object Operation "get_text_for_art"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"TargetStereotype"
			    value      	"const")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4923DCCC01D3*"
			    value      	(value Text 
|//#UC START# *4923DCCC01D3*¤	std::string text ("    ");¤	if (key.source_info.source.d_() == AbstractDumper::GST_FILE) {¤		text += "file: ";¤		text += key.source_info.source.file_name();¤	} else if (key.source_info.source.d_() == AbstractDumper::GST_WIKI) {¤		if (key.source_info.source.wiki_page () != 0) {¤			text += "page: ";¤			//CORBA::String_var page_path = key.source_info.source.wiki_page ()->get_path ();¤			//text += page_path.in ();¤			text += key.source_info.source.wiki_page ()->get_path ();¤		}¤	} else {¤		GDS_ASSERT (0);¤	}¤	AbstractDumperBase::GenID  tmp_map = AbstractDumperBase::s_current_map;¤	AbstractDumperBase::s_current_map = key.source_info.gen_id;¤¤	if (key.dumper && key.dumper->get_post_command_str() != "") {¤		text += "   <!>";¤	} ¤¤	AbstractDumperBase::s_current_map = tmp_map;				¤	return text;¤	//#UC END# *4923DCCC01D3*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"452257A0036F")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012242437"))
		    quid       	"4923DCCC01D3"
		    documentation 	"возвращает описание для артефакта генерации"
		    parameters 	(list Parameters
			(object Parameter "key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"45964D37029F")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012242728"))
			    quid       	"4923DCE10233"
			    type       	"GenArtData"
			    quidu      	"45964D37029F"))
		    result     	"a-string"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"452257A0036F"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "list_texts"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"finished"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is mutable"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"smart pointer"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"4670CE84001F")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012232897"))
		    quid       	"4670CF13033C"
		    documentation 	"мапа хранит текст,  связанный с артефактом генерации, отображающийся в статиске генерации"
		    type       	"GenArtDataToText"
		    quidu      	"4670CE84001F"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "applied_arts"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"459651F100AB")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012233268"))
		    quid       	"4677B40D0251"
		    documentation 	
|список арефактов, которым "сказали" Apply - нужно для того, чтобы потом не вызывать для такх элементов restore
		    
		    type       	"ArtefactSet"
		    quidu      	"459651F100AB"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "minor_changes"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"450A61050251")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012233683"))
		    quid       	"4677DDE601E4"
		    documentation 	"флаг определеляет являются изменения важными или нет"
		    type       	"integer"
		    quidu      	"450A61050251"
		    Containment 	"By Value")
		(object ClassAttribute "details"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"4AD86888019C")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012234049"))
		    quid       	"4922C01000AA"
		    documentation 	"контрол-список сгенерённых артефактов"
		    type       	"ListCtrlWithCopy"
		    quidu      	"4AD86888019C"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator"
	    nestedClasses 	(list nestedClasses
		(object Class "TempFileSet"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19028022156"))
		    quid       	"464976ED00CB"
		    documentation 	"множество созданных временыых файлов"
		    stereotype 	"Set")
		(object Class "GenArtDataToText"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012223238"))
		    quid       	"4670CE84001F"
		    documentation 	"мапа хранящая текст, связанный с артефактом генерации"
		    stereotype 	"Map")
		(object Class "ItemType"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19028012194"))
		    quid       	"4922C06F0337"
		    documentation 	"тип элемента в списке сгенерированных артефактов"
		    stereotype 	"Enum"
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "ET_ARTEFACT"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012225475"))
			    quid       	"4922C0880061"
			    documentation 	"элемент - это артефакт генерации"
			    exportControl 	"Public"
			    Containment 	"By Value")
			(object ClassAttribute "ET_NAME_DEL"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012225878"))
			    quid       	"4922C0A102E9"
			    documentation 	"элемент - это название для списка удалённых элементов"
			    exportControl 	"Public"
			    Containment 	"By Value")
			(object ClassAttribute "ET_NAME_EQ"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012226271"))
			    quid       	"4922C0D90224"
			    documentation 	"элемент - это название для списка неизменившихся элементов"
			    exportControl 	"Public"
			    Containment 	"By Value")
			(object ClassAttribute "ET_NAME_CHG"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012226672"))
			    quid       	"4922C278039C"
			    documentation 	"элемент - это название для списка изменившихся элементов"
			    exportControl 	"Public"
			    Containment 	"By Value")
			(object ClassAttribute "ET_NAME_NEW"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012227055"))
			    quid       	"4922C28B0117"
			    documentation 	"элемент - это название для списка новых элементов"
			    exportControl 	"Public"
			    Containment 	"By Value")))
		(object Class "ItemInfo"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"WikiPageID (wiki)"
			    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/GenStatistics/ItemInfo|4922C29D0103
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SourceType (wiki)"
			    value      	"wiki")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19028017898"))
		    quid       	"4922C29D0103"
		    documentation 	"информация об элементе списка"
		    stereotype 	"Struct")
		(object Class "IndexToInfo"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19028023377"))
		    quid       	"4922C30D021D"
		    documentation 	"мапа индекс элемента в списке -> информация"
		    stereotype 	"Map")
		(object Class "ItemInfoLess"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4923AA23017C_IMPL*"
			    value      	(value Text 
|//#UC START# *4923AA23017C_IMPL*¤	return first_param_.type == second_param_.type ¤		? first_param_.art_data < second_param_.art_data¤		: first_param_.type < second_param_.type;¤	//#UC END# *4923AA23017C_IMPL*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19028009183"))
		    quid       	"4923AA23017C"
		    documentation 	"функтор для сравнения ItemInfo"
		    stereotype 	"BinaryPredicate")))
	(object Class "StCollection"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574164F0242_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *4574164F0242_CUSTOM_INCLUDES*¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤#include "shared/GCL/str/str_op.h"¤#include "StCollection.h"¤//#UC END# *4574164F0242_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574164F0242*"
		    value      	(value Text 
|//#UC START# *4574164F0242*¤void StCollection::fill_list () {¤	m_st_details.DeleteAllItems ();¤	unsigned i = 0;¤¤	Helpers::StereotypeManager_var st_mng = Helpers::StereotypeManagerFactory::make ();¤	Core::Aptr<Helpers::StereotypeList> stereotypes = st_mng->make_allowable_stereotypes (m_item, m_item_context);¤¤	for (¤		Helpers::StereotypeList::const_iterator it = stereotypes->begin ()¤		; it != stereotypes->end ()¤		; ++it¤	) {¤		GCL::StrVector parts = GCL::split_string_by_sub_string (it/*->get ()*/->data(), "::");¤		¤		AbstractDumperBase::Templates::const_iterator tp_it = AbstractDumperBase::find_template (*it);¤		if (m_selected_type != "all") {¤			if (m_selected_type != tp_it->second.classtype_name) {¤				continue;¤			}¤		}¤¤		int img_id;¤		if (parts.size() == 2) { // class or categories (MySt::Class)¤			std::string s = parts[0];			¤¤			if (parts[1] == CLASS_TYPE) {¤				img_id = 1;¤			} else {¤				img_id = 0;¤			}¤¤			if (¤				!RoseHelper::is_it_available_by_type (m_item, m_item_context, tp_it->first) ¤				|| !RoseHelper::is_it_available_by_constr (m_item, m_item_context, tp_it->first)¤			) {¤				if (!m_show_all.GetCheck()) {¤					continue;¤				}¤				img_id += 2;				¤			}			¤¤			m_st_details.InsertItem (i, s.data());¤¤			m_st_details.SetItem (i, 0, LVIF_IMAGE, 0, img_id, 0, 0, 0);¤			//m_st_details.SetItemText (i, 1, parts[1].data());¤			m_st_details.SetItemText (i, 1, tp_it->second.st_description_header/*.get ()*/.data());¤			¤			const AbstractDumperBase::Templates::value_type* vt = &(*tp_it);¤			m_st_details.SetItemData (i, (DWORD)vt);¤¤			++i;¤		} else if (parts.size() == 4) { // like Interface::Class::factory::Operation ¤			                            //   or Interface::Class::Operation::Parameter :((¤						                //   or Interface::Class::Parameter::Parameter :((¤			if (parts[2] == "Operation") {¤				continue;¤			}¤¤			std::string s = parts[2];¤			s += "::";¤			s += parts[0];¤¤			if (parts[3] == "Operation") {¤				img_id = 5;¤			} else if (parts[3] == "Attribute") {¤				img_id = 4;¤			} else {¤				img_id = 6;¤			}¤¤			if (¤				!RoseHelper::is_it_available_by_type (m_item, m_item_context, tp_it->first) ¤				|| !RoseHelper::is_it_available_by_constr (m_item, m_item_context, tp_it->first)¤			) {¤				if (!m_show_all.GetCheck()) {¤					continue;¤				}¤				img_id += 3;¤			}¤¤			m_st_details.InsertItem (i, s.data());¤¤			m_st_details.SetItem (i, 0, LVIF_IMAGE, 0, img_id, 0, 0, 0);¤			m_st_details.SetItemText (i, 1, tp_it->second.st_description_header/*.get ()*/.data());¤		¤			const AbstractDumperBase::Templates::value_type* vt = &(*tp_it);¤			m_st_details.SetItemData (i, (DWORD)vt);¤¤			++i;			¤		} else if (parts.size() == 3) { // unstereotyped ops and attrs ¤			                            //  like Interface::Class::Operation, Interface::Class::Operation¤			                            //  like Interface::Class::Parameter, Interface::Class::ClassDependency¤			std::string s = "<default>";¤			s += "::";¤			s += parts[0];¤¤			if (parts[2] == "Operation") {¤				img_id = 5;¤			} else if (parts[2] == "Attribute") {¤				img_id = 4;¤			} else {¤				img_id = 6;¤			}¤¤			if (¤				!RoseHelper::is_it_available_by_type (m_item, m_item_context, tp_it->first) ¤				|| !RoseHelper::is_it_available_by_constr (m_item, m_item_context, tp_it->first)¤				) {¤				if (!m_show_all.GetCheck()) {¤					continue;¤				}¤				img_id += 3;¤			}¤¤			m_st_details.InsertItem (i, s.data());¤¤			m_st_details.SetItem (i, 0, LVIF_IMAGE, 0, img_id, 0, 0, 0);¤			m_st_details.SetItemText (i, 1, tp_it->second.st_description_header/*.get ()*/.data());¤		¤			const AbstractDumperBase::Templates::value_type* vt = &(*tp_it);¤			m_st_details.SetItemData (i, (DWORD)vt);¤¤			++i;			¤		}¤	}¤¤	¤	std::string st;¤	if (m_item) {¤		st = (char*)m_item->Stereotype;	¤		if (st == "") {¤			st = "<default>";¤		}¤	}¤	¤	m_st_details.SetFocus ();¤	if (st != "") {¤		if (!m_item->IsClass(CATEGORY_TYPE) && !m_item->IsClass(CLASS_TYPE)) {¤			st += "::";¤			IRoseItemPtr item_context = RoseHelper::get_context(m_item);			¤			st += item_context ? (char*)item_context->Stereotype : "";¤		}¤¤		LVFINDINFO query;¤		query.flags = LVFI_STRING;			¤		query.psz = st.data();¤		int ind = m_st_details.FindItem (&query);¤		m_st_details.SetItemState (ind, LVIS_SELECTED | LVIS_FOCUSED, LVIS_SELECTED | LVIS_FOCUSED);¤		m_st_details.SetSelectionMark (ind);¤		m_st_details.EnsureVisible(ind, false);¤¤		this->fill_info(ind);¤	} else {¤		if (m_st_details.GetItemCount () > 0) {¤			m_st_details.SetItemState (0, LVIS_SELECTED | LVIS_FOCUSED, LVIS_SELECTED | LVIS_FOCUSED);¤			m_st_details.EnsureVisible(0, false);¤			m_st_details.SetSelectionMark (0);¤			this->fill_info(0);¤		}¤	}¤}¤¤// StCollection message handlers¤¤static const char ENTER[3] = {13, 10, 0};¤¤void StCollection::fill_info (int index) {	¤	if (index >=0 ) {¤		const AbstractDumperBase::Templates::value_type* vt = (const AbstractDumperBase::Templates::value_type*)m_st_details.GetItemData (index);¤		¤		if (!RoseHelper::is_it_available_by_type (m_item, m_item_context, vt->first) || !RoseHelper::is_it_available_by_constr (m_item, m_item_context, vt->first)) {¤			m_ok.EnableWindow(false);¤		} else {¤			m_ok.EnableWindow(true);¤		}¤¤		std::string desc = vt->second.st_description_header;¤		desc += ENTER;¤		desc += ENTER;¤		std::string description = vt->second.st_description;¤		GCL::str_replace (description, "\n", ENTER);¤		desc += description;¤¤		if (vt->second.user_properties_group.is_nil () == false) {¤			AbstractDumperBase::UserPropertyMap props;¤			vt->second.user_properties_group->for_each (¤				AbstractDumperBase::CollectUserProperty ()¤				, props¤			);¤			if (props.size () > 0) {¤				desc += ENTER;¤				desc += ENTER;¤				desc += "Has User Property:";¤				desc += ENTER;¤				for (¤					AbstractDumperBase::UserPropertyMap::const_iterator it = props.begin()¤					; it != props.end()¤					; it++¤				) {¤					desc += "\t";¤					desc += it->first;¤					desc += " - ";¤					desc += it->second.description;¤					desc += ENTER;¤				}¤			}¤		}¤¤		if (vt->second.child_st_constraints.size() != 0) {¤			desc += ENTER;¤			desc += ENTER;¤			if (vt->second.child_st_constarint_type == AbstractDumperBase::CSCT_EXCLUDED) {¤				desc += "Can contain any stereotypes, exclude:";¤			} else {¤				desc += "Can contain only stereotypes:";¤			}¤			desc += ENTER;¤¤			for (¤				GCL::StrSet::const_iterator it = vt->second.child_st_constraints.begin ()¤				; it != vt->second.child_st_constraints.end ()¤				; ++it¤			) {¤				desc += "\t";¤				desc += it->c_str ();¤				desc += ENTER;¤			}¤		}¤¤		{ // fill "Can be inserted in"¤			//std::string can_be_inserted_in;¤			desc += ENTER;¤			desc += "Can be used inside:";¤			desc += ENTER;¤¤			GCL::StrVector parts = GCL::split_string_by_sub_string (vt->first/*.get ()*/.data(), "::");¤			if (parts.size() > 2) {¤				desc += "\t";¤				desc += parts[0];¤				desc += "::";¤				desc += parts[1];¤				desc += ENTER;¤			} else {¤				for (¤					AbstractDumperBase::Templates::const_iterator it = AbstractDumperBase::templates_begin ()¤					; it != AbstractDumperBase::templates_end ()¤					; it ++¤				) {¤					bool can;¤					GCL::StrVector it_parts = GCL::split_string_by_sub_string (it->first/*.get ()*/.data(), "::");¤¤					if (it_parts.size() != 2) {¤						continue;¤					}					¤¤					if (it->second.child_st_constraints.size() == 0) {¤						can = true;¤					} else {¤						can = it->second.child_st_constarint_type != AbstractDumperBase::CSCT_INCLUDED;¤						for (¤							GCL::StrSet::const_iterator it2 = it->second.child_st_constraints.begin ()¤							; it2 != it->second.child_st_constraints.end ()¤							; ++it2¤						) {¤							GCL::StrVector constr_parts = GCL::split_string_by_sub_string (it2->data(), "::");¤							if (constr_parts[1] == parts[1]) {¤								if (it->second.child_st_constarint_type == AbstractDumperBase::CSCT_INCLUDED) {¤									if (constr_parts[0] == "*") {¤										can = true;¤										break;¤									} else {¤										if (constr_parts[0] == parts[0]) {;¤											can = true;¤											break;¤										}¤									}¤								} else {¤									if (constr_parts[0] == "*") {¤										can = false;¤										break;¤									} else {¤										if (constr_parts[0] == parts[0]) {¤											can = false;¤											break;¤										}¤									}¤								}¤							} ¤						}¤					}¤¤					if (can) {¤						desc += "\t";¤						desc += it_parts[0];¤						desc += "::";¤						desc += it_parts[1];¤						desc += ENTER;¤					}¤				}¤			}¤		}¤¤		m_description.SetWindowText (desc.data());¤	} else {		¤		if (!m_forsed_show_all && !m_show_all.GetCheck()) {¤			m_show_all.SetCheck(true);¤			this->fill_list();¤			m_forsed_show_all = true;¤		} else {¤			m_ok.EnableWindow(false);¤			m_description.SetWindowText ("INVALID STEREOTYPE");¤		}¤	}¤}¤¤void StCollection::OnNMClickList1(NMHDR *pNMHDR, LRESULT *pResult)¤{¤	int selection = m_st_details.GetSelectionMark();¤	if (selection >= 0) {¤		this->fill_info (selection);¤	}¤}¤¤void StCollection::OnBnClickedCheck1()¤{¤	this->fill_list ();¤}¤¤void StCollection::OnBnClickedOk() {¤	int selection = m_st_details.GetSelectionMark();¤	if (selection >= 0) {¤		const AbstractDumperBase::Templates::value_type* vt = (const AbstractDumperBase::Templates::value_type*)m_st_details.GetItemData (selection);¤		m_result = vt->first;¤¤		OnOK();¤	}¤}¤¤void StCollection::OnHdnItemdblclickList1(NMHDR *pNMHDR, LRESULT *pResult)¤{¤	LPNMHEADER phdr = reinterpret_cast<LPNMHEADER>(pNMHDR);¤	this->OnBnClickedOk ();¤	*pResult = 0;¤}¤¤void StCollection::OnNMDblclkList1(NMHDR *pNMHDR, LRESULT *pResult)¤{¤	this->OnBnClickedOk ();¤	*pResult = 0;¤}¤¤void StCollection::OnBnClickedAllRb() {¤	if (m_selected_type != "all") {¤		m_selected_type = "all";¤		this->fill_list();¤	}¤}¤¤void StCollection::OnBnClickedCatRb() {¤	if (m_selected_type != "Category") {¤		m_selected_type = "Category";¤		this->fill_list();¤	}¤}¤¤void StCollection::OnBnClickedClassRb() {¤	if (m_selected_type != "Class") {¤		m_selected_type = "Class";¤		this->fill_list();¤	}¤}¤¤void StCollection::OnBnClickedAttrRb() {¤	if (m_selected_type != "Attribute") {¤		m_selected_type = "Attribute";¤		this->fill_list();¤	}¤}¤¤void StCollection::OnBnClickedOpRb() {¤	if (m_selected_type != "Operation") {¤		m_selected_type = "Operation";¤		this->fill_list();¤	}	¤}¤//#UC END# *4574164F0242*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574164F0242_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *4574164F0242_DESTR_BODY*¤	//#UC END# *4574164F0242_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4574164F0242_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *4574164F0242_CUSTOM_INCLUDES*¤#include "shared/GCL/data/std_defs.h"¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤//#UC END# *4574164F0242_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4574164F0242*"
		    value      	(value Text 
|//#UC START# *4574164F0242*¤public:¤	void fill_list ();¤	void fill_info (int index);¤	void set_selected_type (const std::string& type) {¤		m_selected_type = type;¤	}¤public:¤	Core::Aptr<CImageList> m_il;¤	CButton m_all_rb;¤	CButton m_cat_rb;¤	CButton m_class_rb;¤	CButton m_attr_rb;¤	CButton m_op_rb;¤	CListCtrl m_st_details;¤	CEdit m_description;¤	IRoseItemPtr m_item;¤	IRoseItemPtr m_item_context;¤	std::string m_selected_type;¤¤	afx_msg void OnNMClickList1(NMHDR *pNMHDR, LRESULT *pResult);¤	CButton m_show_all;¤	afx_msg void OnBnClickedCheck1();¤	afx_msg void OnBnClickedOk();¤¤	const std::string& get_result () const {¤		return m_result;¤	}¤¤	std::string m_result;¤	CButton m_ok;¤	CEdit m_enable_for;¤	bool m_forsed_show_all;¤	afx_msg void OnHdnItemdblclickList1(NMHDR *pNMHDR, LRESULT *pResult);¤	afx_msg void OnNMDblclkList1(NMHDR *pNMHDR, LRESULT *pResult);¤	afx_msg void OnBnClickedAllRb();¤	afx_msg void OnBnClickedCatRb();¤	afx_msg void OnBnClickedClassRb();¤	afx_msg void OnBnClickedAttrRb();¤	afx_msg void OnBnClickedOpRb();¤//#UC END# *4574164F0242*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/StCollection.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/StCollection.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574164F0242_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *4574164F0242_MESSAGE_MAP*¤	ON_NOTIFY(NM_CLICK, IDC_LIST1, OnNMClickList1)¤	ON_BN_CLICKED(IDC_CHECK1, OnBnClickedCheck1)¤	ON_BN_CLICKED(IDOK, OnBnClickedOk)¤	ON_NOTIFY(HDN_ITEMDBLCLICK, 0, OnHdnItemdblclickList1)¤	ON_NOTIFY(NM_DBLCLK, IDC_LIST1, OnNMDblclkList1)¤	ON_BN_CLICKED(IDC_ALL_RB, OnBnClickedAllRb)¤	ON_BN_CLICKED(IDC_CAT_RB, OnBnClickedCatRb)¤	ON_BN_CLICKED(IDC_CLASS_RB, OnBnClickedClassRb)¤	ON_BN_CLICKED(IDC_ATTR_RB, OnBnClickedAttrRb)¤	ON_BN_CLICKED(IDC_OP_RB, OnBnClickedOpRb)¤	//#UC END# *4574164F0242_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574164F0242_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *4574164F0242_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_LIST1, m_st_details);¤	DDX_Control(pDX, IDC_EDIT1, m_description);¤	DDX_Control(pDX, IDC_CHECK1, m_show_all);¤	DDX_Control(pDX, IDOK, m_ok);¤	DDX_Control(pDX, IDC_ALL_RB, m_all_rb);¤	DDX_Control(pDX, IDC_CAT_RB, m_cat_rb);¤	DDX_Control(pDX, IDC_CLASS_RB, m_class_rb);¤	DDX_Control(pDX, IDC_ATTR_RB, m_attr_rb);¤	DDX_Control(pDX, IDC_OP_RB, m_op_rb);¤	//#UC END# *4574164F0242_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574164F0242_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *4574164F0242_ON_INIT_DLG*	¤		m_il = new CImageList ();¤		m_il->Create (IDB_BITMAP1, 22, 2, 16);¤		m_st_details.SetImageList (m_il.in(), LVSIL_SMALL);¤¤		m_st_details.InsertColumn (0, "Stereotype", LVCFMT_LEFT, 150 );¤		//	m_st_details.InsertColumn (1, "Type", LVCFMT_LEFT, 100 );¤		m_st_details.InsertColumn (1, "Quick description", LVCFMT_LEFT, 450 );		¤¤		if (m_item != 0) {¤			if (m_item->IsClass(CATEGORY_TYPE)) {¤				m_cat_rb.SetCheck(true);¤				m_all_rb.EnableWindow(false);¤				m_class_rb.EnableWindow(false);¤				m_attr_rb.EnableWindow(false);¤				m_op_rb.EnableWindow(false);¤			} else if (m_item->IsClass(CLASS_TYPE)) {¤				m_class_rb.SetCheck(true);¤				m_all_rb.EnableWindow(false);¤				m_cat_rb.EnableWindow(false);¤				m_attr_rb.EnableWindow(false);¤				m_op_rb.EnableWindow(false);¤			} else if (m_item->IsClass(ATTRIBUTE_TYPE) || m_item->IsClass("Role")) {¤				m_attr_rb.SetCheck(true);¤				m_all_rb.EnableWindow(false);¤				m_cat_rb.EnableWindow(false);¤				m_class_rb.EnableWindow(false);¤				m_op_rb.EnableWindow(false);¤			} else if (m_item->IsClass(OPERATION_TYPE)) {¤				m_op_rb.SetCheck(true);¤				m_all_rb.EnableWindow(false);¤				m_cat_rb.EnableWindow(false);¤				m_attr_rb.EnableWindow(false);¤				m_class_rb.EnableWindow(false);¤			} else {¤				m_all_rb.SetCheck(true);¤				m_op_rb.EnableWindow(false);¤				m_cat_rb.EnableWindow(false);¤				m_attr_rb.EnableWindow(false);¤				m_class_rb.EnableWindow(false);¤			}¤		} else {¤			if (m_selected_type == "Category") {¤				m_cat_rb.SetCheck (true);¤			} else if (m_selected_type == "Class") {¤				m_class_rb.SetCheck (true);¤			} else if (m_selected_type == "Attribute") {¤				m_attr_rb.SetCheck (true);¤			} else if (m_selected_type == "Operation") {¤				m_op_rb.SetCheck (true);¤			} else {¤				m_all_rb.SetCheck (true);¤			}¤			if (m_item_context != 0) {¤				if (m_item_context->IsClass(CATEGORY_TYPE)) {¤					m_attr_rb.EnableWindow(false);¤					m_op_rb.EnableWindow(false);¤				} else if (m_item_context->IsClass(CLASS_TYPE)) {¤					m_cat_rb.EnableWindow(false);¤				} else if (m_item_context->IsClass(ATTRIBUTE_TYPE) || m_item->IsClass("Role")) {¤					m_attr_rb.EnableWindow(false);¤					m_op_rb.EnableWindow(false);¤					m_cat_rb.EnableWindow(false);¤					m_class_rb.EnableWindow(false);¤				} else if (m_item_context->IsClass(OPERATION_TYPE)) {¤					m_attr_rb.EnableWindow(false);¤					m_op_rb.EnableWindow(false);¤					m_cat_rb.EnableWindow(false);¤					m_class_rb.EnableWindow(false);¤				} else {¤					m_attr_rb.EnableWindow(false);¤					m_op_rb.EnableWindow(false);¤					m_cat_rb.EnableWindow(false);¤					m_class_rb.EnableWindow(false);¤				}¤			}¤		}¤¤		this->fill_list ();¤		//#UC END# *4574164F0242_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/StCollection|4574164F0242
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574164F0242_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *4574164F0242_CUSTOM_CONTROLS_CONSTRAINT*¤	const int distance = 2;¤	CPane radioPane = pane(HORIZONTAL)¤		<< item(IDC_ST_LABEL, NORESIZE)¤		<< itemFixed (HORIZONTAL, distance*2)¤		<< item( IDC_ALL_RB, NORESIZE)¤		<< itemFixed (HORIZONTAL, distance)¤		<< item( IDC_CAT_RB, NORESIZE)¤		<< itemFixed (HORIZONTAL, distance)¤		<< item( IDC_CLASS_RB, NORESIZE)¤		<< itemFixed (HORIZONTAL, distance)¤		<< item( IDC_ATTR_RB, NORESIZE)¤		<< itemFixed (HORIZONTAL, distance)¤		<< item( IDC_OP_RB, NORESIZE)¤		<< itemGrowing (HORIZONTAL)¤		<< item( IDC_CHECK1, NORESIZE | ALIGN_RIGHT)		¤		;¤¤	¤	CreateRoot(VERTICAL)¤		<< radioPane¤		<< itemFixed (VERTICAL, 2)¤		<< item (IDC_LIST1, GREEDY )¤		<< item (IDC_DESC_LABEL, NORESIZE)¤		<< item (IDC_EDIT1, GREEDY)¤		<< itemFixed (VERTICAL, 2)¤		<<	(pane ( HORIZONTAL, ABSOLUTE_VERT )¤				<< itemGrowing (HORIZONTAL)¤				<< item( IDOK, NORESIZE )¤				<< item( IDCANCEL, NORESIZE )¤		);	¤	//#UC END# *4574164F0242_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E8D670018_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *458E8D670018_BASE_INIT*¤	, m_item (item)¤	, m_item_context (item_context)¤	, m_forsed_show_all (true)¤	, m_selected_type ("all")¤//#UC END# *458E8D670018_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E8D670018_BODY*"
		    value      	(value Text 
|//#UC START# *458E8D670018_BODY*¤	if ((m_item != 0 ) && (m_item_context == 0)) {¤		m_item_context = RoseHelper::get_context (item);¤	}¤	//#UC END# *458E8D670018_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19028443022"))
	    quid       	"4574164F0242"
	    documentation 	"дилог выводит список доступных стереотипов"
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012245131"))
		    quid       	"46FC8BF7005D"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::CollectUserProperty"
		    quidu      	"46FC8A6202CE")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012245549"))
		    quid       	"4907F5EC0349"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::Helpers::StereotypeManager"
		    quidu      	"4907EFD50359"))
	    operations 	(list Operations
		(object Operation "ctor"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*458E8D670018_BASE_INIT*"
			    value      	(value Text 
|//#UC START# *458E8D670018_BASE_INIT*¤	, m_item (item)¤	, m_item_context (item_context)¤	, m_forsed_show_all (true)¤	, m_selected_type ("all")¤//#UC END# *458E8D670018_BASE_INIT*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*458E8D670018_BODY*"
			    value      	(value Text 
|//#UC START# *458E8D670018_BODY*¤	if ((m_item != 0 ) && (m_item_context == 0)) {¤		m_item_context = RoseHelper::get_context (item);¤	}¤	//#UC END# *458E8D670018_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012243942"))
		    quid       	"458E8D670018"
		    stereotype 	"ctor"
		    parameters 	(list Parameters
			(object Parameter "item"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4571DE0802BF")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012244251"))
			    quid       	"458E8D9303C2"
			    type       	"IRoseItemPtr"
			    quidu      	"4571DE0802BF")
			(object Parameter "item_context"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4571DE0802BF")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012244604"))
			    quid       	"458E8D940038"
			    type       	"IRoseItemPtr"
			    quidu      	"4571DE0802BF"
			    initv      	"0"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "TemplArgs"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574165F0222_CUSTOM_INCLUDES*"
		    value      	(value Text "//#UC START# *4574165F0222_CUSTOM_INCLUDES*¤//#UC END# *4574165F0222_CUSTOM_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574165F0222*"
		    value      	(value Text 
|//#UC START# *4574165F0222*¤void TemplArgs::OnLvnEndlabeleditList1(NMHDR *pNMHDR, LRESULT *pResult)¤{¤	NMLVDISPINFO *pDispInfo = reinterpret_cast<NMLVDISPINFO*>(pNMHDR);¤	// TODO: Add your control notification handler code here¤¤	m_args_list.SetItem (pDispInfo->item.iItem, pDispInfo->item.iSubItem, LVIF_TEXT, pDispInfo->item.pszText, 0, 0, 0, 0);¤	*pResult = 0;¤}¤¤void TemplArgs::OnBnClickedOk() {¤	MDPSupport::CatLockerFacade_var clf = ¤		MDPSupport::CatLockerFacadeFactory::make ((IRoseElementPtr)m_cls);¤	¤	IRoseClassDiagramPtr diag = RoseHelper::get_self_diagram (m_cls);¤¤	MDPSupport::CatLockerFacade_var diag_clf = ¤		MDPSupport::CatLockerFacadeFactory::make (diag ? (IRoseElementPtr)diag : 0);¤	¤	if (clf->try_change () && diag_clf->try_change ()) {¤		IRoseParameterCollectionPtr pars = m_cls->Parameters;¤		while (pars->Count) {¤			m_cls->DeleteParameter(pars->GetAt(1));¤		}¤¤		if (m_args_list.GetItemCount()) {¤			RoseHelper::set_parameterized(m_cls, true);¤			for (int i = m_args_list.GetItemCount(); i != 0; i--) {¤				_bstr_t n = (const char*)m_args_list.GetItemText(i-1, 0);¤				GCL::StrVector parts = GCL::split_string_by ((const char*)n, '=');¤				std::string param_name = GCL::trim_ws (parts[0].data ());¤				std::string param_init_value = parts.size() > 1 ?  GCL::trim_ws (parts[1].data ()) : "";¤				m_cls->AddParameter (¤					param_name.data()¤					, ""¤					, param_init_value.data ()¤					, 0¤				);¤			}¤		} else {¤			RoseHelper::set_parameterized(m_cls, false);¤		}¤		clf->do_change ();¤		diag_clf->do_change ();¤	}¤	// TODO: Add your control notification handler code here¤	OnOK();¤}¤¤void TemplArgs::OnBnClickedButton2() {¤	m_args_list.DeleteItem (m_args_list.GetSelectionMark ());¤}¤¤void TemplArgs::OnBnClickedButton4() //move up¤{¤	int i = m_args_list.GetSelectionMark ();¤	if (i >= 1) {¤		CString str_1 = m_args_list.GetItemText (i, 0);¤		CString str_2 = m_args_list.GetItemText (i-1, 0);¤		m_args_list.SetItemText (i, 0, str_2);¤		m_args_list.SetItemText (i-1, 0, str_1);¤¤		m_args_list.SetSelectionMark (i-1);¤		m_args_list.SetItemState (i-1, LVIS_SELECTED, LVIS_SELECTED);¤		m_args_list.EnsureVisible(i-1, false);¤	}¤}¤¤void TemplArgs::OnBnClickedButton5() //down¤{¤	int i = m_args_list.GetSelectionMark ();¤	if (i < m_args_list.GetItemCount() - 1) {¤		CString str_1 = m_args_list.GetItemText (i, 0);¤		CString str_2 = m_args_list.GetItemText (i+1, 0);¤		m_args_list.SetItemText (i, 0, str_2);¤		m_args_list.SetItemText (i+1, 0, str_1);¤¤		m_args_list.SetSelectionMark (i+1);¤		m_args_list.SetItemState (i+1, LVIS_SELECTED, LVIS_SELECTED);¤		m_args_list.EnsureVisible(i+1, false);¤	}¤}¤¤void TemplArgs::OnBnClickedButton1() {¤	int item_count = m_args_list.GetItemCount();¤	m_args_list.InsertItem (item_count, "T");¤¤	m_args_list.SetSelectionMark (item_count);¤	m_args_list.SetItemState (item_count, LVIS_SELECTED, LVIS_SELECTED);¤	m_args_list.EnsureVisible(item_count, false);¤}¤//#UC END# *4574165F0222*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574165F0222_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *4574165F0222_DESTR_BODY*¤	//#UC END# *4574165F0222_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4574165F0222_CUSTOM_INCLUDES*"
		    value      	(value Text "//#UC START# *4574165F0222_CUSTOM_INCLUDES*¤//#UC END# *4574165F0222_CUSTOM_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4574165F0222*"
		    value      	(value Text 
|//#UC START# *4574165F0222*¤public:¤	CListCtrl m_args_list;¤	afx_msg void OnLvnEndlabeleditList1(NMHDR *pNMHDR, LRESULT *pResult);¤	afx_msg void OnBnClickedOk();¤	afx_msg void OnBnClickedButton2();¤	afx_msg void OnBnClickedButton4();¤	afx_msg void OnBnClickedButton5();¤	afx_msg void OnBnClickedButton1();¤//#UC END# *4574165F0222*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/TemplArgs.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/TemplArgs.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574165F0222_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *4574165F0222_MESSAGE_MAP*¤	ON_NOTIFY(LVN_ENDLABELEDIT, IDC_LIST1, OnLvnEndlabeleditList1)¤	ON_BN_CLICKED(IDOK, OnBnClickedOk)¤	ON_BN_CLICKED(IDC_BUTTON2, OnBnClickedButton2)¤	ON_BN_CLICKED(IDC_BUTTON4, OnBnClickedButton4)¤	ON_BN_CLICKED(IDC_BUTTON5, OnBnClickedButton5)¤	ON_BN_CLICKED(IDC_BUTTON1, OnBnClickedButton1)¤	//#UC END# *4574165F0222_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574165F0222_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *4574165F0222_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_LIST1, m_args_list);¤	//#UC END# *4574165F0222_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574165F0222_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *4574165F0222_ON_INIT_DLG*¤		m_args_list.InsertColumn (0, "Argument name", LVCFMT_LEFT, 200 );¤		//m_args_list.InsertColumn (1, "Stereotype", LVCFMT_LEFT, 200 );¤¤		IRoseParameterCollectionPtr pars = m_cls->Parameters;¤		for (int i = 1; i < pars->Count + 1; i++) {¤			IRoseParameterPtr par = pars->GetAt(i);¤			¤			std::string val = (const char*)par->Name;¤			if (par->GetInitValue() != _bstr_t("")) {¤				val += " = ";¤				val += par->GetInitValue();¤			}¤			m_args_list.InsertItem (i, val.data());¤		}¤¤		if (m_args_list.GetItemCount() > 0) {¤			m_args_list.SetSelectionMark (0);¤			m_args_list.SetItemState (0, LVIS_SELECTED, LVIS_SELECTED);¤			m_args_list.EnsureVisible(0, false);¤		}¤		//#UC END# *4574165F0222_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/TemplArgs|4574165F0222
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E8D0B01ED_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *458E8D0B01ED_BASE_INIT*¤	, m_cls (cls)¤//#UC END# *458E8D0B01ED_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E8D0B01ED_BODY*"
		    value      	(value Text 
|//#UC START# *458E8D0B01ED_BODY*	¤	//#UC END# *458E8D0B01ED_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19028441898"))
	    quid       	"4574165F0222"
	    documentation 	"дилог для редактирования, добавления, удаления шаблонных аргументов"
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012247680"))
		    quid       	"457556A000B7"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper"
		    quidu      	"4571F040008C")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012248049"))
		    quid       	"47D62D6E0363"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::MDPSupport::CatLockerFacade"
		    quidu      	"46343B0002BF"))
	    operations 	(list Operations
		(object Operation "ctor"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*458E8D0B01ED_BASE_INIT*"
			    value      	(value Text 
|//#UC START# *458E8D0B01ED_BASE_INIT*¤	, m_cls (cls)¤//#UC END# *458E8D0B01ED_BASE_INIT*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*458E8D0B01ED_BODY*"
			    value      	(value Text 
|//#UC START# *458E8D0B01ED_BODY*	¤	//#UC END# *458E8D0B01ED_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012246927"))
		    quid       	"458E8D0B01ED"
		    stereotype 	"ctor"
		    parameters 	(list Parameters
			(object Parameter "cls"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"45757AC102BB")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012247245"))
			    quid       	"45B788800196"
			    type       	"IRoseClassPtr"
			    quidu      	"45757AC102BB"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "cls"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"45757AC102BB")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012246548"))
		    quid       	"457556500144"
		    type       	"IRoseClassPtr"
		    quidu      	"45757AC102BB"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "GeneratorSelect"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *4574166E02FD_CUSTOM_INCLUDES*¤#include "shared/Core/Params/Params.h"¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤#include "MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.h"¤#include "shared/GCL/str/str_op.h"¤//#UC END# *4574166E02FD_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD*"
		    value      	(value Text 
|//#UC START# *4574166E02FD*¤bool GeneratorSelect::make_choice (IRoseItemPtr root) {¤	m_root = root;¤	return this->DoModal() == IDOK;¤}¤¤struct ParentSelectFilterX {¤	ParentSelectFilterX (IRoseItemPtr item): m_item (item) {¤	}¤	¤	bool is_meet (const AbstractDumperBase::GenTreeItem* node) const {¤		IRoseElementPtr context = m_item;¤¤		while (context) {¤			std::string merged_sels = context->GetPropertyValue(TOOL_NAME, PROP_APPLGEN);¤¤			context = RoseHelper::get_context (context);¤¤			RoseHelper::Selections selections = GCL::split_string_by_sub_string_uniq (merged_sels.data(), "|");¤¤			if (selections.size()) {¤				bool good = false;¤¤				Core::Var<const AbstractDumperBase::GenTreeItem> parent = AbstractDumperBase::GenTreeItem::_duplicate(node);¤¤				if (this->check_parent_down (parent.in(), selections)) {¤					good = true;¤				} else {¤					while (!parent.is_nil()) {¤						if (selections.find (parent->name()) != selections.end()) {¤							good = true;¤							break;¤						}¤¤						parent = dynamic_cast<const AbstractDumperBase::GenTreeItem*>(parent->parent());¤					}¤				}¤¤				if (!good) {¤					return false;¤				}¤			}¤		}¤¤		return true;¤	}¤¤	void each_func (const GCL::StaticNode* item, RoseHelper::Selections& all_child_gens) const {¤		all_child_gens.insert(dynamic_cast<const AbstractDumperBase::GenTreeItem*>(item)->name());¤	}¤¤	bool check_parent_down (const AbstractDumperBase::GenTreeItem* root_gen, const RoseHelper::Selections& selections) const {¤		RoseHelper::Selections all_child_gens;¤		root_gen->for_each (*this, all_child_gens);¤		¤		if (std::find_first_of(all_child_gens.begin(), all_child_gens.end(), selections.begin(), selections.end()) != all_child_gens.end()) {¤			return true;¤		} else {¤			return false;¤		}¤	}¤¤	IRoseItemPtr m_item;¤};¤¤void GeneratorSelect::update_template () {¤	RoseHelper::reset_template ();¤	if (RoseHelper::load_template ()) {¤		m_gen_tree.DeleteAllItems();¤¤		m_gen_tree_copy = AbstractDumperBase::GenTreeItem::clone_tree (¤			RoseAbstractDumper::s_gen_tree.in()¤			, RoseAbstractDumper::s_gen_tree.in()¤			, ParentSelectFilterX (m_root)¤		);¤		m_selections.erase (AbstractDumperBase::SPELL_GENERATOR_ID);¤		RoseHelper::fill_node (m_selections, m_gen_tree, 0, m_gen_tree_copy.in());¤	¤	} else {¤		MessageBox ("Can't load template", "ERROR", MB_OK|MB_ICONEXCLAMATION);¤	}¤}¤¤/////////////////////////////////////////////////////////////////////////////¤// GeneratorSelect message handlers¤¤void GeneratorSelect::OnOK() {¤	¤	RoseHelper::TreeItems selected_item;¤	RoseHelper::TreeItems selected_leaf;¤	RoseHelper::collect_all_checked (m_gen_tree, selected_item, selected_leaf);¤¤	RoseAbstractDumper::clean_active_map ();¤	GCL::StrSet selections;¤	¤	for (RoseHelper::TreeItems::iterator it = selected_item.begin(); it != selected_item.end(); it++) {¤		AbstractDumperBase::GenTreeItem* item = (AbstractDumperBase::GenTreeItem*)m_gen_tree.GetItemData (*it);¤		selections.insert(item->name());¤	}¤¤	// save selection into registry	¤	std::string registry_option_name = "-LastSelection";¤	registry_option_name += m_root->GetModel()->GetName();¤	registry_option_name += get_rose_element_uid(m_root);¤	std::string merged_sels = GCL::join (selections, "|");¤	Core::ParamManagerFactory::get ().set_string (registry_option_name.c_str (), merged_sels.c_str ());¤	/*std::string REGISTRY_KEY_PATH = "SOFTWARE\\Garant\\MDAGenerator";¤	std::string	REGISTRY_OPTION_NAME = "LastSelection";	¤	REGISTRY_OPTION_NAME += m_root->GetModel()->GetName();¤	REGISTRY_OPTION_NAME += m_root->GetUniqueID();¤¤	Core::RegistryHelper::set_option_value (¤		Core::RegistryHelper::KEY_LOCAL_MACHINE¤		, REGISTRY_KEY_PATH¤		, REGISTRY_OPTION_NAME¤		, merged_sels¤	);*/¤¤	for (RoseHelper::TreeItems::iterator it = selected_leaf.begin(); it != selected_leaf.end(); it++) {¤		AbstractDumperBase::GenTreeItem* item = (AbstractDumperBase::GenTreeItem*)m_gen_tree.GetItemData (*it);¤		RoseAbstractDumper::add_active_map (item->name());¤	}¤	¤	GenSupport::EnvironmentFactory::get ().set_suppress_user_code ((m_suppress_uc.GetCheck() == 1));¤	GenSupport::EnvironmentFactory::get ().set_rewrite_user_code ((m_rewrite_uc.GetCheck() == 1));¤	GenSupport::EnvironmentFactory::get ().set_disable_auto_count ((m_dis_auto_count.GetCheck() == 1));¤	GenSupport::EnvironmentFactory::get ().set_disable_post_processing ((m_disable_post_processing.GetCheck() == 1));¤	¤	if (m_lock_allways.GetCheck() == 1) {¤		GenSupport::EnvironmentFactory::get ().set_lock_strategy (GenSupport::LS_LOCK_ALL);¤	} else if (m_ask_lock.GetCheck() == 1) {¤		GenSupport::EnvironmentFactory::get ().set_lock_strategy (GenSupport::LS_ASK);¤	} else if (m_no_lock.GetCheck() == 1) {¤		GenSupport::EnvironmentFactory::get ().set_lock_strategy (GenSupport::LS_NO_LOCK);¤	}¤	¤	GenerationParams::set_lock_strategy(GenSupport::EnvironmentFactory::get ().get_lock_strategy ());¤	CDialog::OnOK();¤}¤//#UC END# *4574166E02FD*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *4574166E02FD_DESTR_BODY*¤	//#UC END# *4574166E02FD_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4574166E02FD_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *4574166E02FD_CUSTOM_INCLUDES*¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤#include "shared/WinGUI/Helpers/LayoutHelper.h"¤//#UC END# *4574166E02FD_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4574166E02FD*"
		    value      	(value Text 
|//#UC START# *4574166E02FD*¤private:¤	RoseHelper::Selections m_selections;¤¤// Construction¤public:¤	bool make_choice (IRoseItemPtr root);¤¤// Dialog Data¤	CButton	m_dis_auto_count;¤	CButton	m_disable_post_processing;¤	CButton	m_rewrite_uc;¤	CButton	m_suppress_uc;	¤	CTreeCtrl m_gen_tree;¤	Core::Var<AbstractDumperBase::GenTreeItem> m_gen_tree_copy;¤¤// Implementation¤protected:¤	void update_template ();¤¤	// Generated message map functions¤	virtual void OnOK();¤¤protected:¤	IRoseItemPtr m_root;¤	typedef std::map<std::string, HTREEITEM> TreeItemsMap;¤	TreeItemsMap m_tree_items_map;¤//#UC END# *4574166E02FD*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/GeneratorSelect.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/GeneratorSelect.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *4574166E02FD_MESSAGE_MAP*¤	//#UC END# *4574166E02FD_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *4574166E02FD_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_DIS_POST_PROCESSING, m_disable_post_processing);¤	DDX_Control(pDX, IDC_DIS_AUTO_COUNTER, m_dis_auto_count);¤	DDX_Control(pDX, IDC_REWRITE_UC, m_rewrite_uc);¤	DDX_Control(pDX, IDC_SUPPRES_UC, m_suppress_uc);¤¤	DDX_Control(pDX, IDC_NO_LOCK, m_no_lock);¤	DDX_Control(pDX, IDC_LOCK_ALLWAYS, m_lock_allways);¤	DDX_Control(pDX, IDC_ASK, m_ask_lock);¤	¤	DDX_Control(pDX, IDC_TREE1, m_gen_tree);¤	//#UC END# *4574166E02FD_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *4574166E02FD_ON_INIT_DLG*¤		this->SetWindowText (std::string ("Generation from " + std::string((const char*)m_root->Name)).data());¤		¤		m_gen_tree.ModifyStyle( TVS_CHECKBOXES, 0 );¤		m_gen_tree.ModifyStyle( 0, TVS_CHECKBOXES );¤		¤		std::string registry_option_name = "-LastSelection";¤		registry_option_name += m_root->GetModel()->GetName();¤		registry_option_name += get_rose_element_uid(m_root);¤¤		/*std::string REGISTRY_KEY_PATH = "SOFTWARE\\Garant\\MDAGenerator";		¤¤		std::string merged_sels = Core::RegistryHelper::get_option_value (¤			Core::RegistryHelper::KEY_LOCAL_MACHINE¤			, REGISTRY_KEY_PATH¤			, REGISTRY_OPTION_NAME¤			, ""¤		);*/¤		std::string merged_sels = Core::ParamManagerFactory::get ().get_string (registry_option_name.c_str (), "");¤		m_selections = GCL::split_string_by_sub_string_uniq (merged_sels.data(), "|");¤		¤		try {¤			this->update_template();¤		} catch (Base::FatalError&) {¤			GenerationErrorDialog dlg (GenSupport::ErrorManagerFactory::get ().get_errors ());¤			dlg.DoModal ();¤¤			this->EndDialog (IDCANCEL);¤		}¤			¤		if (GenSupport::EnvironmentFactory::get ().get_suppress_user_code ()) {¤			m_suppress_uc.SetCheck(1);¤		}¤¤		if (GenSupport::EnvironmentFactory::get ().get_rewrite_user_code ()) {¤			m_rewrite_uc.SetCheck(1);¤		}¤¤		if (GenSupport::EnvironmentFactory::get ().get_disable_auto_count ()) {¤			m_dis_auto_count.SetCheck(1);¤		}¤¤		if (GenSupport::EnvironmentFactory::get ().get_disable_post_processing ()) {¤			m_disable_post_processing.SetCheck(1);¤		}¤		¤		m_lock_allways.SetCheck (0);¤		m_ask_lock.SetCheck (0);¤		m_no_lock.SetCheck (0);¤		¤		GenSupport::EnvironmentFactory::get ().set_lock_strategy (¤			static_cast<GenSupport::LockStrategy> (¤				GenerationParams::get_lock_strategy()¤			)¤		);¤¤		switch (GenSupport::EnvironmentFactory::get ().get_lock_strategy ()) {¤			case GenSupport::LS_LOCK_ALL:¤				m_lock_allways.SetCheck (1);¤				break;¤			case GenSupport::LS_ASK:¤				m_ask_lock.SetCheck (1);¤				break;¤			case GenSupport::LS_NO_LOCK:¤				m_no_lock.SetCheck (1);¤				break;¤¤¤		}¤		//#UC END# *4574166E02FD_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD_CTOR_BASE_INIT*"
		    value      	"//#UC START# *4574166E02FD_CTOR_BASE_INIT*¤//#UC END# *4574166E02FD_CTOR_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD_CTOR*"
		    value      	(value Text 
|//#UC START# *4574166E02FD_CTOR*¤	//#UC END# *4574166E02FD_CTOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/GeneratorSelect|4574166E02FD
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4574166E02FD_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *4574166E02FD_CUSTOM_CONTROLS_CONSTRAINT*¤	CPane radioPane = pane( VERTICAL )¤		<< item( IDC_LOCK_ALLWAYS, NORESIZE)¤		<< item( IDC_ASK, NORESIZE)¤		<< item( IDC_NO_LOCK, NORESIZE);¤¤	// note the usage of sizeExtraBorder and sizeTopExtra¤	CPane groupPane = paneCtrl (¤		IDC_STRATEGY_GROUP, HORIZONTAL, ALIGN_FILL_HORZ, WinGUI::nDefaultBorder, 10, 10¤	)	<< radioPane¤		<< itemGrowing(HORIZONTAL);¤¤	CPane checkPane = ¤		pane( HORIZONTAL )¤			<< (pane(VERTICAL )¤				<< item(IDC_SUPPRES_UC, NORESIZE)¤				<< item( IDC_REWRITE_UC, NORESIZE)¤				<< item( IDC_DIS_AUTO_COUNTER, NORESIZE)¤				<< item( IDC_DIS_POST_PROCESSING, NORESIZE)¤			)¤			//<< itemGrowing(HORIZONTAL)¤			<< groupPane;¤¤	CreateRoot(VERTICAL)¤		<< item ( IDC_STATIC, NORESIZE )¤		<< item ( IDC_TREE1, GREEDY )¤		<< itemFixed (VERTICAL, 2)¤		<< checkPane¤		<< itemFixed (VERTICAL, 2)¤		<<	(pane ( HORIZONTAL, ABSOLUTE_VERT )¤				<< itemGrowing (HORIZONTAL)¤				<< item( IDOK, NORESIZE )¤				<< item( IDCANCEL, NORESIZE )¤		);	¤	//#UC END# *4574166E02FD_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038300008"))
	    quid       	"4574166E02FD"
	    documentation 	
|диалог выбора генераторов позволяет выбрать какие генераторы учавствуют в генерации модели, а также позволяет настроить некоторые параметры генерации: "отключить/включить авто-инкремент", "отключить/включить запуск спец. комманд после генерации" и т.д
	    
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012250224"))
		    quid       	"48E46C5C00DA"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::GenerationParams"
		    quidu      	"48E46B5803E1")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012250596"))
		    quid       	"4BE296030256"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenerationErrorDialog"
		    quidu      	"4BE15A4F0223"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "lock_allways"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"46552090006D")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012249059"))
		    quid       	"47D7860A0207"
		    documentation 	
|кнопка выбора стратегии залочки при генерации - с данной кнопкой связана стратегия "лочить всё"
		    
		    type       	"CButton"
		    quidu      	"46552090006D"
		    Containment 	"By Value")
		(object ClassAttribute "ask_lock"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"46552090006D")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012249450"))
		    quid       	"47D786AE002A"
		    documentation 	
|кнопка выбора стратегии залочки при генерации - с данной кнопкой связана стратегия "Спрашивать"
		    
		    type       	"CButton"
		    quidu      	"46552090006D"
		    Containment 	"By Value")
		(object ClassAttribute "no_lock"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"46552090006D")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012249810"))
		    quid       	"47D786BC000D"
		    documentation 	
|кнопка выбора стратегии залочки при генерации - с данной кнопкой связана стратегия "Не лочить"
		    
		    type       	"CButton"
		    quidu      	"46552090006D"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "UnusedUserCode"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148_CUSTOM_INCLUDES*"
		    value      	(value Text "//#UC START# *457416890148_CUSTOM_INCLUDES*¤//#UC END# *457416890148_CUSTOM_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148*"
		    value      	(value Text 
|//#UC START# *457416890148*¤bool has_uc_text(const std::string& uc_txt) {	¤	GCL::StrVector res = GCL::split_string_by (uc_txt.c_str(), 10);¤	return res.size() > 2;¤/*	std::string uc_id;¤	char* uc_end;¤	const char* uc_begin = uc_txt.data();¤	{¤		char uc_id_buf [1024];¤		sscanf (uc_begin + strlen (USER_CODE_ID_START), "%s", uc_id_buf);¤		if (*uc_id_buf == '*') {¤			char* end = GCL::find_part_end(uc_id_buf¤				, uc_id_buf + strlen (uc_id_buf) - 1¤				, '*'¤			);¤			if (end) {¤				*(++end) = 0;¤				uc_id = uc_id_buf;¤			}¤		}		¤	}¤¤	std::string uc_end_str = USER_CODE_ID_END + uc_id;¤	uc_end = strstr(uc_begin, uc_end_str.c_str());¤	¤	AbstractDumperBase::UserCode uc (uc_begin + strlen (USER_CODE_ID_START) + uc_id.size(), uc_end);¤¤	std::string::size_type pos;¤	char wh_sp [4] = {' ', '\t', 10, 0};¤	while ((pos = uc.find_first_of (wh_sp)) != std::string::npos) {¤		uc.erase(pos, 1);¤	}¤	¤	return uc.size() != 0;*/¤}¤¤void UnusedUserCode::OnSave() {¤	¤	Core::Aptr<CTooltipListCtrl::SelectedItems> selections = m_unused_uc.get_selected_items ();¤	if (selections.ptr () != 0) {¤		for (¤			CTooltipListCtrl::SelectedItems::iterator it = selections->begin ()¤			; it != selections->end ()¤			; ++it¤		) {¤			this->save (*it);¤		}¤	}¤}¤¤void UnusedUserCode::OnSaveAll() {¤	//m_unused_uc.SelItemRange(TRUE, 0, m_unused_uc.GetCount());¤	//this->OnOK();¤	this->save_all ();	¤}¤¤void UnusedUserCode::OnSelchangeUcList (NMHDR * pNotifyStruct, LRESULT * result) {¤	LPNMITEMACTIVATE lpnmitem = (LPNMITEMACTIVATE) pNotifyStruct;¤	int ind = lpnmitem->iItem;¤	CString car_str = m_unused_uc.GetItemText(ind, 0);¤¤	GCL::StrVector strs = GCL::split_string_by_sub_string ((LPCTSTR)car_str, " --> ");¤	for (¤		AbstractDumperBase::UserCode_map_mapGenId::const_iterator it = AbstractDumperBase::uc_begin()¤		; it != AbstractDumperBase::uc_end()¤		; it++¤	) {¤		if (it->first == strs[0]) {¤			std::string::size_type pos = strs[1].find_first_of (" (");¤			std::string id = strs[1].substr (0, pos);¤			GCL::StrVector uc_strs = GCL::split_string_by (it->second.find(id)->second.uc.c_str(), '\n');¤			char brk[3] = {13,10,0};¤¤			std::string uc_text = GCL::join (uc_strs, brk);¤¤			m_uc_text.SetWindowText(uc_text.c_str());¤		}¤	}	¤}¤¤void UnusedUserCode::Discard() {¤	CDialog::OnOK();¤}¤//#UC END# *457416890148*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *457416890148_DESTR_BODY*¤	//#UC END# *457416890148_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457416890148_CUSTOM_INCLUDES*"
		    value      	(value Text "//#UC START# *457416890148_CUSTOM_INCLUDES*¤//#UC END# *457416890148_CUSTOM_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*457416890148*"
		    value      	(value Text 
|//#UC START# *457416890148*¤// Dialog Data¤	CEdit	m_uc_text;	¤¤// Implementation¤protected:	¤	afx_msg void OnSelchangeUcList (NMHDR * pNotifyStruct, LRESULT * result);¤	afx_msg void OnSaveAll();¤	afx_msg void OnSave();¤	afx_msg void Discard();¤//#UC END# *457416890148*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/UnusedUserCode.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/UnusedUserCode.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *457416890148_MESSAGE_MAP*	¤	ON_NOTIFY(NM_CLICK, IDC_UC_LIST, OnSelchangeUcList)¤//	ON_LBN_SELCHANGE(IDC_UC_LIST, OnSelchangeUcList)¤	ON_BN_CLICKED(IDC_SAVE_ALL, OnSaveAll)¤	ON_BN_CLICKED(IDC_SAVE, OnSave)¤	ON_BN_CLICKED(IDC_BUTTON1, Discard)¤	//#UC END# *457416890148_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *457416890148_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_UC_TEXT, m_uc_text);¤	DDX_Control(pDX, IDC_UC_LIST, m_unused_uc);¤	//#UC END# *457416890148_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *457416890148_ON_INIT_DLG*¤		ret = false;¤		m_unused_uc.InsertColumn (0, "", LVCFMT_LEFT);¤		for (¤			AbstractDumperBase::UserCode_map_mapGenId::const_iterator it = AbstractDumperBase::uc_begin()¤			; it != AbstractDumperBase::uc_end()¤			; it++¤		) {¤			for (¤				AbstractDumperBase::UserCode_map::const_iterator it2 = it->second.begin()¤				; it2 != it->second.end()¤				; it2++¤			) {¤				std::string uc_id = it2->first;¤				bool used = it2->second.used;¤				if (!it2->second.used && has_uc_text(it2->second.uc)) {¤					std::string list_str;¤					list_str = it->first + " --> " + it2->first + " (" + it2->second.file_name + ")";					¤					//m_unused_uc.AddString (list_str.data());¤					m_unused_uc.add_item (list_str);¤					ret = true;¤				}¤			}¤		}¤		if (!ret) {¤			this->EndDialog(0);¤		}¤¤		//#UC END# *457416890148_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148_CTOR_BASE_INIT*"
		    value      	"//#UC START# *457416890148_CTOR_BASE_INIT*¤//#UC END# *457416890148_CTOR_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148_CTOR*"
		    value      	(value Text 
|//#UC START# *457416890148_CTOR*¤	//#UC END# *457416890148_CTOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/UnusedUserCode|457416890148
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*457416890148_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *457416890148_CUSTOM_CONTROLS_CONSTRAINT*¤	CreateRoot (VERTICAL)¤		<< item (IDC_STATIC1, NORESIZE)¤		<< item (IDC_UC_LIST, GREEDY)¤		<< item (IDC_STATIC2, NORESIZE)¤		<< item (IDC_UC_TEXT, GREEDY)¤		<< (pane (HORIZONTAL, ABSOLUTE_VERT)¤			<< item (IDC_SAVE, NORESIZE)¤			<< item (IDC_SAVE_ALL, NORESIZE)¤			<< itemGrowing (HORIZONTAL)¤			<< item (IDC_BUTTON1, NORESIZE)¤			<< item (IDCANCEL, NORESIZE)¤		);¤	//#UC END# *457416890148_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*464A9AB00271*"
		    value      	(value Text 
|//#UC START# *464A9AB00271*¤	//#UC START# *464A96550203*¤	CFileDialog f_dlg (false);¤	if (f_dlg.DoModal() == IDOK) {¤		std::string file_name = (LPCTSTR)f_dlg.GetPathName();¤		std::ofstream file (file_name.c_str ());¤¤		if (file) {¤			CString car_str = m_unused_uc.GetItemText(index, 0);			¤			this->save_uc (file, car_str);¤¤			file.close ();¤		}¤	}¤	//#UC END# *464A9AB00271*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*464A96D001D4*"
		    value      	(value Text 
|//#UC START# *464A96D001D4*¤	CFileDialog f_dlg (false);¤	if (f_dlg.DoModal() == IDOK) {¤		std::string file_name = (LPCTSTR)f_dlg.GetPathName();¤		std::ofstream file (file_name.c_str ());¤¤		if (file) {¤¤			for (int index = 0; index < m_unused_uc.GetItemCount(); ++index) {¤				CString car_str = m_unused_uc.GetItemText(index, 0);¤¤				this->save_uc (file, car_str);¤			}¤¤			file.close ();¤		}¤	}¤	//#UC END# *464A96D001D4*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*464A96550203*"
		    value      	(value Text 
|//#UC START# *464A96550203*¤	GCL::StrVector strs = GCL::split_string_by_sub_string (uc, " --> ");¤¤	for (¤		AbstractDumperBase::UserCode_map_mapGenId::const_iterator it = AbstractDumperBase::uc_begin()¤		; it != AbstractDumperBase::uc_end()¤		; it++¤	) {¤		if (it->first == strs[0]) {¤			std::string::size_type pos = strs[1].find_first_of (" (");¤			std::string id = strs[1].substr (0, pos);¤¤			GCL::StrVector uc_id = GCL::split_string_by_fragment (id.c_str(), '*', '*');¤			std::string guid = uc_id[0];¤			guid.erase (12);¤			IRoseItemPtr item = RoseHelper::rose_app()->CurrentModel->FindItemWithID(guid.data());¤			if (item) {¤				file << "!!! ITEM: " << item->GetQualifiedName() << std::endl;						¤			} else {¤				file << "!!! ITEM: REMOVED (guid: " << guid << ")" << std::endl;						¤			}¤			file << it->second.find(id)->second.uc << std::endl << std::endl;					¤		}¤	}	¤	//#UC END# *464A96550203*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038306943"))
	    quid       	"457416890148"
	    documentation 	
|Дилог показывает список изер-секций, которые "пропали" в результате перегенерации модели. Позволяет сохранить юзер-секцию в файл
	    
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012254185"))
		    quid       	"4C0E2B8A00CC"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::RoseModel::ModelSearcher"
		    quidu      	"4C0E1224034D")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012254551"))
		    quid       	"4C0E2C760149"
		    stereotype 	"uses"
		    supplier   	"Logical View::external::std::fstream::ofstream"
		    quidu      	"467B892C030F")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012254915"))
		    quid       	"4C0E2C8D0188"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase"
		    quidu      	"4571A2EF02CE")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012255292"))
		    quid       	"4C0E2C9302FF"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::SyntaxDef"
		    quidu      	"4571A3B70109")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012255662"))
		    quid       	"4C0E2D0E038B"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::GCL::str::str_op"
		    quidu      	"4503E01500CB"))
	    operations 	(list Operations
		(object Operation "save_uc"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*464A96550203*"
			    value      	(value Text 
|//#UC START# *464A96550203*¤	GCL::StrVector strs = GCL::split_string_by_sub_string (uc, " --> ");¤¤	ModelSearcher* searcher = &ModelSearcherFactory::get ();¤	for (¤		AbstractDumperBase::UserCode_map_mapGenId::const_iterator it = AbstractDumperBase::uc_begin()¤		; it != AbstractDumperBase::uc_end()¤		; it++¤	) {¤		if (it->first == strs[0]) {¤			std::string::size_type pos = strs[1].find_first_of (" (");¤			std::string id = strs[1].substr (0, pos);¤¤			GCL::StrVector uc_id = GCL::split_string_by_fragment (id.c_str(), '*', '*');¤			std::string guid = uc_id[0];¤			guid.erase (12);¤			IRoseItemPtr item = searcher->search (guid);¤			if (item) {¤				file << "!!! ITEM: " << item->GetQualifiedName() << std::endl;						¤			} else {¤				file << "!!! ITEM: REMOVED (guid: " << guid << ")" << std::endl;						¤			}¤			file << it->second.find(id)->second.uc << std::endl << std::endl;					¤		}¤	}	¤	//#UC END# *464A96550203*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012251934"))
		    quid       	"464A96550203"
		    documentation 	"записывает юзер-секцию uc в поток"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "inout file"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"45C728C40271")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012252279"))
			    quid       	"464A9AF402BF"
			    type       	"ostream"
			    quidu      	"45C728C40271")
			(object Parameter "uc"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE240068")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012252636"))
			    quid       	"464A9AF4031C"
			    type       	"string"
			    quidu      	"3DBFFE240068"))
		    concurrency 	"Sequential"
		    opExportControl 	"Protected"
		    uid        	0)
		(object Operation "save"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*464A9AB00271*"
			    value      	(value Text 
|//#UC START# *464A9AB00271*¤	//#UC START# *464A96550203*¤	CFileDialog f_dlg (false);¤	if (f_dlg.DoModal() == IDOK) {¤		std::string file_name = (LPCTSTR)f_dlg.GetPathName();¤		std::ofstream file (file_name.c_str ());¤¤		if (file) {¤			CString car_str = m_unused_uc.GetItemText(index, 0);			¤			this->save_uc (file, car_str);¤¤			file.close ();¤		}¤	}¤	//#UC END# *464A9AB00271*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012253082"))
		    quid       	"464A9AB00271"
		    documentation 	"сохраняет юзер-секцию с номером index в списке в отдельный файл"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "index"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"450A61050251")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012253382"))
			    quid       	"464A9ACB03C8"
			    type       	"integer"
			    quidu      	"450A61050251"))
		    concurrency 	"Sequential"
		    opExportControl 	"Protected"
		    uid        	0)
		(object Operation "save_all"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*464A96D001D4*"
			    value      	(value Text 
|//#UC START# *464A96D001D4*¤	CFileDialog f_dlg (false);¤	if (f_dlg.DoModal() == IDOK) {¤		std::string file_name = (LPCTSTR)f_dlg.GetPathName();¤		std::ofstream file (file_name.c_str ());¤¤		if (file) {¤¤			for (int index = 0; index < m_unused_uc.GetItemCount(); ++index) {¤				CString car_str = m_unused_uc.GetItemText(index, 0);¤¤				this->save_uc (file, car_str);¤			}¤¤			file.close ();¤		}¤	}¤	//#UC END# *464A96D001D4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012253786"))
		    quid       	"464A96D001D4"
		    documentation 	"сохраняет все юзер секции из списка в один файл"
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Protected"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "unused_uc"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"45F982BB0128")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012251561"))
		    quid       	"464AB61C002E"
		    type       	"CTooltipListCtrl"
		    quidu      	"45F982BB0128"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "MdaAbout"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/MdaAbout.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/MdaAbout.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E706E0066_CUSTOM_INCLUDES*"
		    value      	"//#UC START# *458E706E0066_CUSTOM_INCLUDES*¤//#UC END# *458E706E0066_CUSTOM_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E706E0066*"
		    value      	(value Text "//#UC START# *458E706E0066*¤//#UC END# *458E706E0066*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E706E0066_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *458E706E0066_DESTR_BODY*¤	//#UC END# *458E706E0066_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*458E706E0066_CUSTOM_INCLUDES*"
		    value      	(value Text "//#UC START# *458E706E0066_CUSTOM_INCLUDES*¤//#UC END# *458E706E0066_CUSTOM_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*458E706E0066*"
		    value      	(value Text 
|//#UC START# *458E706E0066*¤	CStatic m_version;¤	CStatic m_build;¤	CStatic m_target;¤	CStatic m_server;¤//#UC END# *458E706E0066*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E706E0066_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *458E706E0066_MESSAGE_MAP*¤	//#UC END# *458E706E0066_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E706E0066_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *458E706E0066_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_VERSION, m_version);¤	DDX_Control(pDX, IDC_BUILD, m_build);¤	DDX_Control(pDX, IDC_TARGET, m_target);¤	DDX_Control(pDX, IDC_SERVER, m_server);¤	//#UC END# *458E706E0066_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E706E0066_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *458E706E0066_ON_INIT_DLG*¤		m_version.SetWindowText (DLL_VERSION);¤		char buf[32];¤		m_build.SetWindowText (itoa(DLL_BUILD_NUM, buf, 10));¤		¤		const Core::Root::Info& info = Core::Root::ConfigurationFactory::get().get_info();¤		m_target.SetWindowText (info.debug ? "DEBUG" : "RELEASE");¤		m_server.SetWindowText (info.use_corba ? "CORBA" : "NONE");¤		//#UC END# *458E706E0066_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E706E0066_CTOR_BASE_INIT*"
		    value      	"//#UC START# *458E706E0066_CTOR_BASE_INIT*¤//#UC END# *458E706E0066_CTOR_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*458E706E0066_CTOR*"
		    value      	(value Text 
|//#UC START# *458E706E0066_CTOR*¤	//#UC END# *458E706E0066_CTOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/MdaAbout|458E706E0066
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038168588"))
	    quid       	"458E706E0066"
	    documentation 	"About-диалог"
	    stereotype 	"Dialog"
	    language   	"MDA Generator")
	(object Class "CreateReport"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/CreateReport.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/CreateReport.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA74630128_CTOR_BASE_INIT*"
		    value      	"//#UC START# *46CA74630128_CTOR_BASE_INIT*¤//#UC END# *46CA74630128_CTOR_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA74630128_CTOR*"
		    value      	(value Text 
|//#UC START# *46CA74630128_CTOR*¤	//#UC END# *46CA74630128_CTOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA74630128_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *46CA74630128_DESTR_BODY*¤	//#UC END# *46CA74630128_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA74630128_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *46CA74630128_MESSAGE_MAP*¤	ON_BN_CLICKED(IDOK, on_ok)¤	//#UC END# *46CA74630128_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA74630128_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *46CA74630128_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_EDIT_REPORT_QUERY, m_query);¤	DDX_Control(pDX, IDC_EDIT_REPORT_NAME, m_name_edit);¤	//#UC END# *46CA74630128_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA74630128_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *46CA74630128_ON_INIT_DLG*¤		//#UC END# *46CA74630128_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA74630128_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *46CA74630128_CUSTOM_CONTROLS_CONSTRAINT*¤	CreateRoot (VERTICAL)¤		<< item (IDC_STATIC1, NORESIZE)¤		<< item (IDC_EDIT_REPORT_NAME, ABSOLUTE_VERT)¤		<< item (IDC_STATIC2, NORESIZE)¤		<< item (IDC_EDIT_REPORT_QUERY, ABSOLUTE_VERT)¤		<<	(pane ( HORIZONTAL, ABSOLUTE_VERT )¤				<< itemGrowing (HORIZONTAL)¤				<< item( IDOK, NORESIZE )¤				<< item( IDCANCEL, NORESIZE )¤		);¤	//#UC END# *46CA74630128_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/CreateReport|46CA74630128
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA751A00FA*"
		    value      	(value Text 
|//#UC START# *46CA751A00FA*¤	CString str;¤	m_name_edit.GetWindowText (str);¤	m_report_name = (const char*)str;¤	if (AbstractDumperBase::s_report_infos.find(m_report_name) != AbstractDumperBase::s_report_infos.end()) {¤		char mess[256] = {0};¤		sprintf (mess, "%s report already exist", m_report_name.c_str ());¤		if (MessageBox (mess, "Exception while executing report", MB_OKCANCEL) != IDOK) {¤			this->EndDialog (IDCANCEL);¤		}¤	} else {¤¤		AbstractDumperBase::ReportsTreeItem* new_item = new AbstractDumperBase::ReportsTreeItem (m_report_name.data());¤		if (AbstractDumperBase::s_reports_tree.is_nil()) {¤			AbstractDumperBase::s_reports_tree = new_item;¤		} else {¤			AbstractDumperBase::s_reports_tree->insert_back_child (new_item);¤		}¤		m_query.GetWindowText (str);¤		std::string q = "[{";¤		q += GCL::trim_ws((const char*)str);¤		q += "}true]";¤		new_item->query (q);¤		new_item->set_view ("Item name", "\\<\\<%SS\\>\\>%SN", 200);¤		new_item->set_view ("Model path", "<{/}{}{r}%PN>", 400);¤		AbstractDumperBase::s_report_infos[m_report_name] = new_item;¤		this->EndDialog (IDOK);¤	}	¤	//#UC END# *46CA751A00FA*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA755F0203_GET_ACCESSOR*"
		    value      	(value Text 
|//#UC START# *46CA755F0203_GET_ACCESSOR*¤	return m_report_name;¤	//#UC END# *46CA755F0203_GET_ACCESSOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46CA755F0203_SET_ACCESSOR*"
		    value      	(value Text 
|//#UC START# *46CA755F0203_SET_ACCESSOR*¤	m_report_name = report_name;¤	//#UC END# *46CA755F0203_SET_ACCESSOR*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19038267493"))
	    quid       	"46CA74630128"
	    documentation 	"дилог для создания новго отчета, созданные отчет добавляется в общий список."
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012258713"))
		    quid       	"46CA759D0177"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::ReportsTreeItem"
		    quidu      	"458E8E730132"))
	    operations 	(list Operations
		(object Operation "on_ok"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46CA751A00FA*"
			    value      	(value Text 
|//#UC START# *46CA751A00FA*¤	CString str;¤	m_name_edit.GetWindowText (str);¤	m_report_name = (const char*)str;¤	if (AbstractDumperBase::s_report_infos.find(m_report_name) != AbstractDumperBase::s_report_infos.end()) {¤		std::string mess (m_report_name);¤		mess += " report already exist";		¤		if (MessageBox (mess.c_str (), "Exception while executing report", MB_OKCANCEL) != IDOK) {¤			this->EndDialog (IDCANCEL);¤		}¤	} else {¤¤		AbstractDumperBase::ReportsTreeItem* new_item = new AbstractDumperBase::ReportsTreeItem (m_report_name.data());¤		if (AbstractDumperBase::s_reports_tree.is_nil()) {¤			AbstractDumperBase::s_reports_tree = new_item;¤		} else {¤			AbstractDumperBase::s_reports_tree->insert_back_child (new_item);¤		}¤		m_query.GetWindowText (str);¤		std::string q = "[{";¤		q += GCL::trim_ws((const char*)str);¤		q += "}true]";¤		new_item->query (q);¤		new_item->set_view ("Item name", "\\<\\<%SS\\>\\>%SN", 200);¤		new_item->set_view ("Model path", "<{/}{}{r}%PN>", 400);¤		AbstractDumperBase::s_report_infos[m_report_name] = new_item;¤		this->EndDialog (IDOK);¤	}	¤	//#UC END# *46CA751A00FA*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012258348"))
		    quid       	"46CA751A00FA"
		    documentation 	"обработчик нажатия кнопки OK"
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "report_name"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46CA755F0203_GET_ACCESSOR*"
			    value      	(value Text 
|//#UC START# *46CA755F0203_GET_ACCESSOR*¤	return m_report_name;¤	//#UC END# *46CA755F0203_GET_ACCESSOR*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46CA755F0203_SET_ACCESSOR*"
			    value      	(value Text 
|//#UC START# *46CA755F0203_SET_ACCESSOR*¤	m_report_name = report_name;¤	//#UC END# *46CA755F0203_SET_ACCESSOR*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"452257A0036F")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012257258"))
		    quid       	"46CA755F0203"
		    documentation 	"имя нового отчета"
		    stereotype 	"property"
		    type       	"a-string"
		    quidu      	"452257A0036F"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "name_edit"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"4655226B0177")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012257613"))
		    quid       	"46CA772E0280"
		    documentation 	"Edit-контрол для ввода имени"
		    type       	"CEdit"
		    quidu      	"4655226B0177"
		    Containment 	"By Value")
		(object ClassAttribute "query"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"4655226B0177")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012257978"))
		    quid       	"46CA774C01E4"
		    documentation 	"Edit-контрол для ввода запроса"
		    type       	"CEdit"
		    quidu      	"4655226B0177"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "ATLControls"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/ATLControls.h")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local helper"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45B5D15C031C_USER_INCLUDES*"
		    value      	(value Text 
|//#UC START# *45B5D15C031C_USER_INCLUDES*¤#include "shared/Core/fix/win_afx.h"¤#include <atlbase.h>¤#include <atlwin.h>¤#include <commctrl.h>¤//#UC END# *45B5D15C031C_USER_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45B5D15C031C_USER_DEFINITION*"
		    value      	(value Text 
|//#UC START# *45B5D15C031C_USER_DEFINITION*¤using namespace ATL;¤/////////////////////////////////////////////////////////////////////////////¤// Forward declarations¤¤template <class Base> class CStaticT;¤template <class Base> class CButtonT;¤template <class Base> class CListBoxT;¤template <class Base> class CComboBoxT;¤template <class Base> class CEditT;¤template <class Base> class CScrollBarT;¤class CImageList;¤template <class Base> class CListViewCtrlT;¤template <class Base> class CTreeViewCtrlT;¤class CTreeItem;¤template <class Base> class CTreeViewCtrlExT;¤template <class Base> class CHeaderCtrlT;¤template <class Base> class CToolBarCtrlT;¤template <class Base> class CStatusBarCtrlT;¤template <class Base> class CTabCtrlT;¤class CToolInfo;¤template <class Base> class CToolTipCtrlT;¤template <class Base> class CTrackBarCtrlT;¤template <class Base> class CUpDownCtrlT;¤template <class Base> class CProgressBarCtrlT;¤template <class Base> class CHotKeyCtrlT;¤template <class Base> class CAnimateCtrlT;¤template <class Base> class CRichEditCtrlT;¤template <class Base> class CDragListBoxT;¤template <class T> class CDragListNotifyImpl;¤template <class Base> class CReBarCtrlT;¤template <class Base> class CComboBoxExT;¤template <class Base> class CDateTimePickerCtrlT;¤template <class Base> class CMonthCalendarCtrlT;¤#if (_WIN32_IE >= 0x0400)¤template <class Base> class CFlatScrollBarT;¤template <class Base> class CIPAddressCtrlT;¤template <class Base> class CPagerCtrlT;¤#endif //(_WIN32_IE >= 0x0400)¤template <class T> class CCustomDraw;¤¤// --- Standard Windows controls ---¤¤/////////////////////////////////////////////////////////////////////////////¤// CStatic - client side for a Windows STATIC control¤¤template <class Base>¤class CStaticT : public Base¤{¤public:¤// Constructors¤	CStaticT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CStaticT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return _T("STATIC");¤	}¤¤	HICON SetIcon(HICON hIcon)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HICON)::SendMessage(m_hWnd, STM_SETICON, (WPARAM)hIcon, 0L);¤	}¤	HICON GetIcon() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HICON)::SendMessage(m_hWnd, STM_GETICON, 0, 0L);¤	}¤¤	HENHMETAFILE SetEnhMetaFile(HENHMETAFILE hMetaFile)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HENHMETAFILE)::SendMessage(m_hWnd, STM_SETIMAGE, IMAGE_ENHMETAFILE, (LPARAM)hMetaFile);¤	}¤	HENHMETAFILE GetEnhMetaFile() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HENHMETAFILE)::SendMessage(m_hWnd, STM_GETIMAGE, IMAGE_ENHMETAFILE, 0L);¤	}¤	HBITMAP SetBitmap(HBITMAP hBitmap)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HBITMAP)::SendMessage(m_hWnd, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBitmap);¤	}¤	HBITMAP GetBitmap() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HBITMAP)::SendMessage(m_hWnd, STM_GETIMAGE, IMAGE_BITMAP, 0L);¤	}¤	HCURSOR SetCursor(HCURSOR hCursor)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HCURSOR)::SendMessage(m_hWnd, STM_SETIMAGE, IMAGE_CURSOR, (LPARAM)hCursor);¤	}¤	HCURSOR GetCursor()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HCURSOR)::SendMessage(m_hWnd, STM_GETIMAGE, IMAGE_CURSOR, 0L);¤	}¤};¤¤typedef CStaticT<CWindow>   CStatic;¤¤/////////////////////////////////////////////////////////////////////////////¤// CButton - client side for a Windows BUTTON control¤¤template <class Base>¤class CButtonT : public Base¤{¤public:¤// Constructors¤	CButtonT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CButtonT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return _T("BUTTON");¤	}¤¤	UINT GetState() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, BM_GETSTATE, 0, 0L);¤	}¤	void SetState(BOOL bHighlight)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, BM_SETSTATE, bHighlight, 0L);¤	}¤	int GetCheck() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, BM_GETCHECK, 0, 0L);¤	}¤	void SetCheck(int nCheck)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, BM_SETCHECK, nCheck, 0L);¤	}¤	UINT GetButtonStyle() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::GetWindowLong(m_hWnd, GWL_STYLE) & 0xff;¤	}¤	void SetButtonStyle(UINT nStyle, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, BM_SETSTYLE, nStyle, (LPARAM)bRedraw);¤	}¤¤	HICON SetIcon(HICON hIcon)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HICON)::SendMessage(m_hWnd, BM_SETIMAGE, IMAGE_ICON, (LPARAM)hIcon);¤	}¤	HICON GetIcon() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HICON)::SendMessage(m_hWnd, BM_GETIMAGE, IMAGE_ICON, 0L);¤	}¤	HBITMAP SetBitmap(HBITMAP hBitmap)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HBITMAP)::SendMessage(m_hWnd, BM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBitmap);¤	}¤	HBITMAP GetBitmap() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HBITMAP)::SendMessage(m_hWnd, BM_GETIMAGE, IMAGE_BITMAP, 0L);¤	}¤	HCURSOR SetCursor(HCURSOR hCursor)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HCURSOR)::SendMessage(m_hWnd, BM_SETIMAGE, IMAGE_CURSOR, (LPARAM)hCursor);¤	}¤	HCURSOR GetCursor()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HCURSOR)::SendMessage(m_hWnd, BM_GETIMAGE, IMAGE_CURSOR, 0L);¤	}¤};¤¤typedef CButtonT<CWindow>   CButton;¤¤/////////////////////////////////////////////////////////////////////////////¤// CListBox - client side for a Windows LISTBOX control¤¤template <class Base>¤class CListBoxT : public Base¤{¤public:¤// Constructors¤	CListBoxT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CListBoxT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return _T("LISTBOX");¤	}¤¤	// for entire listbox¤	int GetCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETCOUNT, 0, 0L);¤	}¤	int GetHorizontalExtent() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETHORIZONTALEXTENT, 0, 0L);¤	}¤	void SetHorizontalExtent(int cxExtent)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, LB_SETHORIZONTALEXTENT, cxExtent, 0L);¤	}¤	int GetTopIndex() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETTOPINDEX, 0, 0L);¤	}¤	int SetTopIndex(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_SETTOPINDEX, nIndex, 0L);¤	}¤	LCID GetLocale() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (LCID)::SendMessage(m_hWnd, LB_GETLOCALE, 0, 0L);¤	}¤	LCID SetLocale(LCID nNewLocale)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (LCID)::SendMessage(m_hWnd, LB_SETLOCALE, (WPARAM)nNewLocale, 0L);¤	}¤	int InitStorage(int nItems, UINT nBytes)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_INITSTORAGE, (WPARAM)nItems, nBytes);¤	}¤	UINT ItemFromPoint(POINT pt, BOOL& bOutside) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		DWORD dw = (DWORD)::SendMessage(m_hWnd, LB_ITEMFROMPOINT, 0, MAKELPARAM(pt.x, pt.y));¤		bOutside = !!HIWORD(dw);¤		return LOWORD(dw);¤	}¤¤	// for single-selection listboxes¤	int GetCurSel() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(!(GetStyle() & LBS_MULTIPLESEL));¤		return (int)::SendMessage(m_hWnd, LB_GETCURSEL, 0, 0L);¤	}¤	int SetCurSel(int nSelect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(!(GetStyle() & LBS_MULTIPLESEL));¤		return (int)::SendMessage(m_hWnd, LB_SETCURSEL, nSelect, 0L);¤	}¤¤	// for multiple-selection listboxes¤	int GetSel(int nIndex) const           // also works for single-selection¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETSEL, nIndex, 0L);¤	}¤	int SetSel(int nIndex, BOOL bSelect = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LBS_MULTIPLESEL);¤		return (int)::SendMessage(m_hWnd, LB_SETSEL, bSelect, nIndex);¤	}¤	int GetSelCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LBS_MULTIPLESEL);¤		return (int)::SendMessage(m_hWnd, LB_GETSELCOUNT, 0, 0L);¤	}¤	int GetSelItems(int nMaxItems, LPINT rgIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LBS_MULTIPLESEL);¤		return (int)::SendMessage(m_hWnd, LB_GETSELITEMS, nMaxItems, (LPARAM)rgIndex);¤	}¤	void SetAnchorIndex(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LBS_MULTIPLESEL);¤		::SendMessage(m_hWnd, LB_SETANCHORINDEX, nIndex, 0L);¤	}¤	int GetAnchorIndex() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LBS_MULTIPLESEL);¤		return (int)::SendMessage(m_hWnd, LB_GETANCHORINDEX, 0, 0L);¤	}¤¤	// for listbox items¤	DWORD_PTR GetItemData(int nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, LB_GETITEMDATA, nIndex, 0L);¤	}¤	int SetItemData(int nIndex, DWORD_PTR dwItemData)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_SETITEMDATA, nIndex, (LPARAM)dwItemData);¤	}¤	void* GetItemDataPtr(int nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (LPVOID)::SendMessage(m_hWnd, LB_GETITEMDATA, nIndex, 0L);¤	}¤	int SetItemDataPtr(int nIndex, void* pData)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItemData(nIndex, (DWORD_PTR)pData);¤	}¤	int GetItemRect(int nIndex, LPRECT lpRect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETITEMRECT, nIndex, (LPARAM)lpRect);¤	}¤	int GetText(int nIndex, LPTSTR lpszBuffer) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETTEXT, nIndex, (LPARAM)lpszBuffer);¤	}¤#ifndef _ATL_NO_COM¤	BOOL GetTextBSTR(int nIndex, BSTR& bstrText) const¤	{¤		USES_CONVERSION;¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(bstrText == NULL);¤¤		int nLen = GetTextLen(nIndex);¤		if(nLen == LB_ERR)¤			return FALSE;¤¤		LPTSTR lpszText = (LPTSTR)_alloca((nLen + 1) * sizeof(TCHAR));¤¤		if(GetText(nIndex, lpszText) == LB_ERR)¤			return FALSE;¤¤		bstrText = ::SysAllocString(T2OLE(lpszText));¤		return (bstrText != NULL) ? TRUE : FALSE;¤	}¤#endif //!_ATL_NO_COM¤	int GetTextLen(int nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETTEXTLEN, nIndex, 0L);¤	}¤¤	// Settable only attributes¤	void SetColumnWidth(int cxWidth)¤	{¤		ATLASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, LB_SETCOLUMNWIDTH, cxWidth, 0L);¤	}¤	BOOL SetTabStops(int nTabStops, LPINT rgTabStops)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LB_SETTABSTOPS, nTabStops, (LPARAM)rgTabStops);¤	}¤	BOOL SetTabStops()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LB_SETTABSTOPS, 0, 0L);¤	}¤	BOOL SetTabStops(const int& cxEachStop)    // takes an 'int'¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LB_SETTABSTOPS, 1, (LPARAM)(LPINT)&cxEachStop);¤	}¤¤	int SetItemHeight(int nIndex, UINT cyItemHeight)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_SETITEMHEIGHT, nIndex, MAKELONG(cyItemHeight, 0));¤	}¤	int GetItemHeight(int nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETITEMHEIGHT, nIndex, 0L);¤	}¤	int FindStringExact(int nIndexStart, LPCTSTR lpszFind) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_FINDSTRINGEXACT, nIndexStart, (LPARAM)lpszFind);¤	}¤	int GetCaretIndex() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_GETCARETINDEX, 0, 0);¤	}¤	int SetCaretIndex(int nIndex, BOOL bScroll = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_SETCARETINDEX, nIndex, MAKELONG(bScroll, 0));¤	}¤¤// Operations¤	// manipulating listbox items¤	int AddString(LPCTSTR lpszItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_ADDSTRING, 0, (LPARAM)lpszItem);¤	}¤	int DeleteString(UINT nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_DELETESTRING, nIndex, 0L);¤	}¤	int InsertString(int nIndex, LPCTSTR lpszItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_INSERTSTRING, nIndex, (LPARAM)lpszItem);¤	}¤	void ResetContent()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, LB_RESETCONTENT, 0, 0L);¤	}¤	int Dir(UINT attr, LPCTSTR lpszWildCard)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_DIR, attr, (LPARAM)lpszWildCard);¤	}¤¤	// selection helpers¤	int FindString(int nStartAfter, LPCTSTR lpszItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_FINDSTRING, nStartAfter, (LPARAM)lpszItem);¤	}¤	int SelectString(int nStartAfter, LPCTSTR lpszItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LB_SELECTSTRING, nStartAfter, (LPARAM)lpszItem);¤	}¤	int SelItemRange(BOOL bSelect, int nFirstItem, int nLastItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return bSelect ? (int)::SendMessage(m_hWnd, LB_SELITEMRANGEEX, nFirstItem, nLastItem) : (int)::SendMessage(m_hWnd, LB_SELITEMRANGEEX, nLastItem, nFirstItem);¤	}¤};¤¤typedef CListBoxT<CWindow>  CListBox;¤¤/////////////////////////////////////////////////////////////////////////////¤// CComboBox - client side for a Windows COMBOBOX control¤¤template <class Base>¤class CComboBoxT : public Base¤{¤public:¤// Constructors¤	CComboBoxT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CComboBoxT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return _T("COMBOBOX");¤	}¤¤	// for entire combo box¤	int GetCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_GETCOUNT, 0, 0L);¤	}¤	int GetCurSel() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_GETCURSEL, 0, 0L);¤	}¤	int SetCurSel(int nSelect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_SETCURSEL, nSelect, 0L);¤	}¤	LCID GetLocale() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (LCID)::SendMessage(m_hWnd, CB_GETLOCALE, 0, 0L);¤	}¤	LCID SetLocale(LCID nNewLocale)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (LCID)::SendMessage(m_hWnd, CB_SETLOCALE, (WPARAM)nNewLocale, 0L);¤	}¤	int GetTopIndex() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_GETTOPINDEX, 0, 0L);¤	}¤	int SetTopIndex(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_SETTOPINDEX, nIndex, 0L);¤	}¤	int InitStorage(int nItems, UINT nBytes)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_INITSTORAGE, (WPARAM)nItems, nBytes);¤	}¤	void SetHorizontalExtent(UINT nExtent)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, CB_SETHORIZONTALEXTENT, nExtent, 0L);¤	}¤	UINT GetHorizontalExtent() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, CB_GETHORIZONTALEXTENT, 0, 0L);¤	}¤	int SetDroppedWidth(UINT nWidth)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_SETDROPPEDWIDTH, nWidth, 0L);¤	}¤	int GetDroppedWidth() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_GETDROPPEDWIDTH, 0, 0L);¤	}¤¤	// for edit control¤	DWORD GetEditSel() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, CB_GETEDITSEL, 0, 0L);¤	}¤	BOOL LimitText(int nMaxChars)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, CB_LIMITTEXT, nMaxChars, 0L);¤	}¤	BOOL SetEditSel(int nStartChar, int nEndChar)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, CB_SETEDITSEL, 0, MAKELONG(nStartChar, nEndChar));¤	}¤¤	// for combobox item¤	DWORD_PTR GetItemData(int nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, CB_GETITEMDATA, nIndex, 0L);¤	}¤	int SetItemData(int nIndex, DWORD_PTR dwItemData)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_SETITEMDATA, nIndex, (LPARAM)dwItemData);¤	}¤	void* GetItemDataPtr(int nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (LPVOID)GetItemData(nIndex);¤	}¤	int SetItemDataPtr(int nIndex, void* pData)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItemData(nIndex, (DWORD_PTR)pData);¤	}¤	int GetLBText(int nIndex, LPTSTR lpszText) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_GETLBTEXT, nIndex, (LPARAM)lpszText);¤	}¤#ifndef _ATL_NO_COM¤	BOOL GetLBTextBSTR(int nIndex, BSTR& bstrText) const¤	{¤		USES_CONVERSION;¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(bstrText == NULL);¤¤		int nLen = GetLBTextLen(nIndex);¤		if(nLen == CB_ERR)¤			return FALSE;¤¤		LPTSTR lpszText = (LPTSTR)_alloca((nLen + 1) * sizeof(TCHAR));¤¤		if(GetLBText(nIndex, lpszText) == CB_ERR)¤			return FALSE;¤¤		bstrText = ::SysAllocString(T2OLE(lpszText));¤		return (bstrText != NULL) ? TRUE : FALSE;¤	}¤#endif //!_ATL_NO_COM¤	int GetLBTextLen(int nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_GETLBTEXTLEN, nIndex, 0L);¤	}¤¤	int SetItemHeight(int nIndex, UINT cyItemHeight)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_SETITEMHEIGHT, nIndex, MAKELONG(cyItemHeight, 0));¤	}¤	int GetItemHeight(int nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_GETITEMHEIGHT, nIndex, 0L);¤	}¤	int FindStringExact(int nIndexStart, LPCTSTR lpszFind) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_FINDSTRINGEXACT, nIndexStart, (LPARAM)lpszFind);¤	}¤	int SetExtendedUI(BOOL bExtended = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_SETEXTENDEDUI, bExtended, 0L);¤	}¤	BOOL GetExtendedUI() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, CB_GETEXTENDEDUI, 0, 0L);¤	}¤	void GetDroppedControlRect(LPRECT lprect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, CB_GETDROPPEDCONTROLRECT, 0, (DWORD)lprect);¤	}¤	BOOL GetDroppedState() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, CB_GETDROPPEDSTATE, 0, 0L);¤	}¤¤// Operations¤	// for drop-down combo boxes¤	void ShowDropDown(BOOL bShowIt = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, CB_SHOWDROPDOWN, bShowIt, 0L);¤	}¤¤	// manipulating listbox items¤	int AddString(LPCTSTR lpszString)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_ADDSTRING, 0, (LPARAM)lpszString);¤	}¤	int DeleteString(UINT nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_DELETESTRING, nIndex, 0L);¤	}¤	int InsertString(int nIndex, LPCTSTR lpszString)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_INSERTSTRING, nIndex, (LPARAM)lpszString);¤	}¤	void ResetContent()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, CB_RESETCONTENT, 0, 0L);¤	}¤	int Dir(UINT attr, LPCTSTR lpszWildCard)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_DIR, attr, (LPARAM)lpszWildCard);¤	}¤¤	// selection helpers¤	int FindString(int nStartAfter, LPCTSTR lpszString) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_FINDSTRING, nStartAfter, (LPARAM)lpszString);¤	}¤	int SelectString(int nStartAfter, LPCTSTR lpszString)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CB_SELECTSTRING, nStartAfter, (LPARAM)lpszString);¤	}¤¤	// Clipboard operations¤	void Clear()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_CLEAR, 0, 0L);¤	}¤	void Copy()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_COPY, 0, 0L);¤	}¤	void Cut()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_CUT, 0, 0L);¤	}¤	void Paste()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_PASTE, 0, 0L);¤	}¤};¤¤typedef CComboBoxT<CWindow> CComboBox;¤¤/////////////////////////////////////////////////////////////////////////////¤// CEdit - client side for a Windows EDIT control¤¤template <class Base>¤class CEditT : public Base¤{¤public:¤// Constructors¤	CEditT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CEditT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return _T("EDIT");¤	}¤¤	BOOL CanUndo() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_CANUNDO, 0, 0L);¤	}¤	int GetLineCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_GETLINECOUNT, 0, 0L);¤	}¤	BOOL GetModify() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_GETMODIFY, 0, 0L);¤	}¤	void SetModify(BOOL bModified = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETMODIFY, bModified, 0L);¤	}¤	void GetRect(LPRECT lpRect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_GETRECT, 0, (LPARAM)lpRect);¤	}¤	DWORD GetSel() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, EM_GETSEL, 0, 0L);¤	}¤	void GetSel(int& nStartChar, int& nEndChar) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_GETSEL, (WPARAM)&nStartChar, (LPARAM)&nEndChar);¤	}¤	HLOCAL GetHandle() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HLOCAL)::SendMessage(m_hWnd, EM_GETHANDLE, 0, 0L);¤	}¤	void SetHandle(HLOCAL hBuffer)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETHANDLE, (WPARAM)hBuffer, 0L);¤	}¤	void SetMargins(UINT nLeft, UINT nRight)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETMARGINS, EC_LEFTMARGIN|EC_RIGHTMARGIN, MAKELONG(nLeft, nRight));¤	}¤	DWORD GetMargins() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD)::SendMessage(m_hWnd, EM_GETMARGINS, 0, 0L);¤	}¤	void SetLimitText(UINT nMax)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETLIMITTEXT, nMax, 0L);¤	}¤	UINT GetLimitText() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, EM_GETLIMITTEXT, 0, 0L);¤	}¤	POINT PosFromChar(UINT nChar) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		POINT point;¤		::SendMessage(m_hWnd, EM_POSFROMCHAR, (WPARAM)&point, (LPARAM)nChar);¤		return point;¤	}¤	int CharFromPos(POINT pt) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_CHARFROMPOS, 0, MAKELPARAM(pt.x, pt.y));¤	}¤¤	// NOTE: first word in lpszBuffer must contain the size of the buffer!¤	int GetLine(int nIndex, LPTSTR lpszBuffer) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_GETLINE, nIndex, (LPARAM)lpszBuffer);¤	}¤	int GetLine(int nIndex, LPTSTR lpszBuffer, int nMaxLength) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		*(LPWORD)lpszBuffer = (WORD)nMaxLength;¤		return (int)::SendMessage(m_hWnd, EM_GETLINE, nIndex, (LPARAM)lpszBuffer);¤	}¤¤// Operations¤	void EmptyUndoBuffer()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_EMPTYUNDOBUFFER, 0, 0L);¤	}¤	BOOL FmtLines(BOOL bAddEOL)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_FMTLINES, bAddEOL, 0L);¤	}¤	void LimitText(int nChars = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_LIMITTEXT, nChars, 0L);¤	}¤	int LineFromChar(int nIndex = -1) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_LINEFROMCHAR, nIndex, 0L);¤	}¤	int LineIndex(int nLine = -1) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_LINEINDEX, nLine, 0L);¤	}¤	int LineLength(int nLine = -1) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_LINELENGTH, nLine, 0L);¤	}¤	void LineScroll(int nLines, int nChars = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_LINESCROLL, nChars, nLines);¤	}¤	void ReplaceSel(LPCTSTR lpszNewText, BOOL bCanUndo = FALSE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_REPLACESEL, (WPARAM) bCanUndo, (LPARAM)lpszNewText);¤	}¤	void SetPasswordChar(TCHAR ch)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETPASSWORDCHAR, ch, 0L);¤	}¤	void SetRect(LPCRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETRECT, 0, (LPARAM)lpRect);¤	}¤	void SetRectNP(LPCRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETRECTNP, 0, (LPARAM)lpRect);¤	}¤	void SetSel(DWORD dwSelection, BOOL bNoScroll = FALSE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETSEL, LOWORD(dwSelection), HIWORD(dwSelection));¤		if(!bNoScroll)¤			::SendMessage(m_hWnd, EM_SCROLLCARET, 0, 0L);¤	}¤	void SetSel(int nStartChar, int nEndChar, BOOL bNoScroll = FALSE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETSEL, nStartChar, nEndChar);¤		if(!bNoScroll)¤			::SendMessage(m_hWnd, EM_SCROLLCARET, 0, 0L);¤	}¤	BOOL SetTabStops(int nTabStops, LPINT rgTabStops)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_SETTABSTOPS, nTabStops, (LPARAM)rgTabStops);¤	}¤	BOOL SetTabStops()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, EM_SETTABSTOPS, 0, 0L);¤	}¤	BOOL SetTabStops(const int& cxEachStop)    // takes an 'int'¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_SETTABSTOPS, 1, (LPARAM)(LPINT)&cxEachStop);¤	}¤¤	// Additional operations¤	void ScrollCaret()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SCROLLCARET, 0, 0L);¤	}¤	void InsertText(int nInsertAfterChar, LPCTSTR lpstrText, BOOL bNoScroll = FALSE, BOOL bCanUndo = FALSE)¤	{¤		SetSel(nInsertAfterChar, nInsertAfterChar, bNoScroll);¤		ReplaceSel(lpstrText, bCanUndo);¤	}¤	void AppendText(LPCTSTR lpstrText, BOOL bNoScroll = FALSE, BOOL bCanUndo = FALSE)¤	{¤		InsertText(GetWindowTextLength(), lpstrText, bNoScroll, bCanUndo);¤	}¤¤	// Clipboard operations¤	BOOL Undo()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_UNDO, 0, 0L);¤	}¤	void Clear()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_CLEAR, 0, 0L);¤	}¤	void Copy()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_COPY, 0, 0L);¤	}¤	void Cut()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_CUT, 0, 0L);¤	}¤	void Paste()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_PASTE, 0, 0L);¤	}¤¤	BOOL SetReadOnly(BOOL bReadOnly = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_SETREADONLY, bReadOnly, 0L);¤	}¤	int GetFirstVisibleLine() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_GETFIRSTVISIBLELINE, 0, 0L);¤	}¤	TCHAR GetPasswordChar() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (TCHAR)::SendMessage(m_hWnd, EM_GETPASSWORDCHAR, 0, 0L);¤	}¤};¤¤typedef CEditT<CWindow>     CEdit;¤¤/////////////////////////////////////////////////////////////////////////////¤// CScrollBar - client side for a Windows SCROLLBAR control¤¤template <class Base>¤class CScrollBarT : public Base¤{¤public:¤// Constructors¤	CScrollBarT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CScrollBarT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return _T("SCROLLBAR");¤	}¤¤	int GetScrollPos() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::GetScrollPos(m_hWnd, SB_CTL);¤	}¤	int SetScrollPos(int nPos, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SetScrollPos(m_hWnd, SB_CTL, nPos, bRedraw);¤	}¤	void GetScrollRange(LPINT lpMinPos, LPINT lpMaxPos) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::GetScrollRange(m_hWnd, SB_CTL, lpMinPos, lpMaxPos);¤	}¤	void SetScrollRange(int nMinPos, int nMaxPos, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SetScrollRange(m_hWnd, SB_CTL, nMinPos, nMaxPos, bRedraw);¤	}¤	void ShowScrollBar(BOOL bShow = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::ShowScrollBar(m_hWnd, SB_CTL, bShow);¤	}¤¤	BOOL EnableScrollBar(UINT nArrowFlags = ESB_ENABLE_BOTH)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::EnableScrollBar(m_hWnd, SB_CTL, nArrowFlags);¤	}¤¤	BOOL SetScrollInfo(LPSCROLLINFO lpScrollInfo, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SetScrollInfo(m_hWnd, SB_CTL, lpScrollInfo, bRedraw);¤	}¤	BOOL GetScrollInfo(LPSCROLLINFO lpScrollInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::GetScrollInfo(m_hWnd, SB_CTL, lpScrollInfo);¤	}¤	int GetScrollLimit()¤	{¤		int nMin, nMax;¤		::GetScrollRange(m_hWnd, SB_CTL, &nMin, &nMax);¤		SCROLLINFO info;¤		info.cbSize = sizeof(SCROLLINFO);¤		info.fMask = SIF_PAGE;¤		if(::GetScrollInfo(m_hWnd, SB_CTL, &info))¤			nMax -= ((info.nPage-1) > 0) ? (info.nPage-1) : 0;¤¤		return nMax;¤	}¤};¤¤typedef CScrollBarT<CWindow>    CScrollBar;¤¤¤// --- Windows Common Controls ---¤¤/////////////////////////////////////////////////////////////////////////////¤// CImageList¤¤class CImageList¤{¤public:¤	HIMAGELIST m_hImageList;¤¤// Constructors¤	CImageList(HIMAGELIST hImageList = NULL) : m_hImageList(hImageList) { }¤¤	CImageList& operator=(HIMAGELIST hImageList)¤	{¤		m_hImageList = hImageList;¤		return *this;¤	}¤¤	operator HIMAGELIST() const { return m_hImageList; }¤¤	BOOL Create(int cx, int cy, UINT nFlags, int nInitial, int nGrow)¤	{¤		ATLASSERT(m_hImageList == NULL);¤		m_hImageList = ImageList_Create(cx, cy, nFlags, nInitial, nGrow);¤		return (m_hImageList != NULL) ? TRUE : FALSE;¤	}¤	BOOL Create(UINT nBitmapID, int cx, int nGrow, COLORREF crMask)¤	{¤		ATLASSERT(m_hImageList == NULL);¤		ATLASSERT(HIWORD(nBitmapID) == 0);¤		m_hImageList = ImageList_LoadBitmap(_AtlBaseModule.GetModuleInstance(), MAKEINTRESOURCE(nBitmapID), cx, nGrow, crMask);¤		return (m_hImageList != NULL) ? TRUE : FALSE;¤	}¤	BOOL Create(LPCTSTR lpszBitmapID, int cx, int nGrow, COLORREF crMask)¤	{¤		ATLASSERT(m_hImageList == NULL);¤		m_hImageList = ImageList_LoadBitmap(_AtlBaseModule.GetModuleInstance(), lpszBitmapID, cx, nGrow, crMask);¤		return (m_hImageList != NULL) ? TRUE : FALSE;¤	}¤	BOOL Merge(HIMAGELIST hImageList1, int nImage1, HIMAGELIST hImageList2, int nImage2, int dx, int dy)¤	{¤		ATLASSERT(m_hImageList == NULL);¤		m_hImageList = ImageList_Merge(hImageList1, nImage1, hImageList2, nImage2, dx, dy);¤		return (m_hImageList != NULL) ? TRUE : FALSE;¤	}¤¤// Attributes¤¤	void Attach(HIMAGELIST hImageList)¤	{¤		ATLASSERT(m_hImageList == NULL);¤		ATLASSERT(hImageList != NULL);¤		m_hImageList = hImageList;¤	}¤	HIMAGELIST Detach()¤	{¤		HIMAGELIST hImageList = m_hImageList;¤		m_hImageList = NULL;¤		return hImageList;¤	}¤¤	int GetImageCount() const¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_GetImageCount(m_hImageList);¤	}¤	COLORREF SetBkColor(COLORREF cr)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_SetBkColor(m_hImageList, cr);¤	}¤	COLORREF GetBkColor() const¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_GetBkColor(m_hImageList);¤	}¤	BOOL GetImageInfo(int nImage, IMAGEINFO* pImageInfo) const¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_GetImageInfo(m_hImageList, nImage, pImageInfo);¤	}¤¤// Operations¤	BOOL Destroy()¤	{¤		if (m_hImageList == NULL)¤			return FALSE;¤		BOOL bRet = ImageList_Destroy(Detach());¤		if(bRet)¤			m_hImageList = NULL;¤		return bRet;¤	}¤¤	int Add(HBITMAP hBitmap, HBITMAP hBitmapMask)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_Add(m_hImageList, hBitmap, hBitmapMask);¤	}¤	int Add(HBITMAP hBitmap, COLORREF crMask)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_AddMasked(m_hImageList, hBitmap, crMask);¤	}¤	BOOL Remove(int nImage)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_Remove(m_hImageList, nImage);¤	}¤	BOOL Replace(int nImage, HBITMAP hBitmap, HBITMAP hBitmapMask)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_Replace(m_hImageList, nImage, hBitmap, hBitmapMask);¤	}¤	int AddIcon(HICON hIcon)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_AddIcon(m_hImageList, hIcon);¤	}¤	int ReplaceIcon(int nImage, HICON hIcon)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_ReplaceIcon(m_hImageList, nImage, hIcon);¤	}¤	HICON ExtractIcon(int nImage)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_ExtractIcon(NULL, m_hImageList, nImage);¤	}¤	BOOL Draw(HDC hDC, int nImage, POINT pt, UINT nStyle)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		ATLASSERT(hDC != NULL);¤		return ImageList_Draw(m_hImageList, nImage, hDC, pt.x, pt.y, nStyle);¤	}¤	BOOL DrawEx(int nImage, HDC hDC, int x, int y, int dx, int dy, COLORREF rgbBk, COLORREF rgbFg, UINT fStyle)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		ATLASSERT(hDC != NULL);¤		return ImageList_DrawEx(m_hImageList, nImage, hDC, x, y, dx, dy, rgbBk, rgbFg, fStyle);¤	}¤	BOOL SetOverlayImage(int nImage, int nOverlay)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_SetOverlayImage(m_hImageList, nImage, nOverlay);¤	}¤¤// Drag APIs¤	BOOL BeginDrag(int nImage, POINT ptHotSpot)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_BeginDrag(m_hImageList, nImage, ptHotSpot.x, ptHotSpot.y);¤	}¤	static void PASCAL EndDrag()¤	{¤		ImageList_EndDrag();¤	}¤	static BOOL PASCAL DragMove(POINT pt)¤	{¤		return ImageList_DragMove(pt.x, pt.y);¤	}¤	BOOL SetDragCursorImage(int nDrag, POINT ptHotSpot)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_SetDragCursorImage(m_hImageList, nDrag, ptHotSpot.x, ptHotSpot.y);¤	}¤	static BOOL PASCAL DragShowNolock(BOOL bShow)¤	{¤		return ImageList_DragShowNolock(bShow);¤	}¤	static HIMAGELIST PASCAL GetDragImage(LPPOINT lpPoint, LPPOINT lpPointHotSpot)¤	{¤		return ImageList_GetDragImage(lpPoint, lpPointHotSpot);¤	}¤	static BOOL PASCAL DragEnter(HWND hWnd, POINT point)¤	{¤		return ImageList_DragEnter(hWnd, point.x, point.y);¤	}¤	static BOOL PASCAL DragLeave(HWND hWnd)¤	{¤		return ImageList_DragLeave(hWnd);¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	HIMAGELIST Duplicate(HIMAGELIST hImageList)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		hImageList;¤		return ImageList_Duplicate(m_hImageList);¤	}¤	BOOL SetImageCount(UINT uNewCount)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_SetImageCount(m_hImageList, uNewCount);¤	}¤	BOOL Copy(int nSrc, int nDst, UINT uFlags = ILCF_MOVE)¤	{¤		ATLASSERT(m_hImageList != NULL);¤		return ImageList_Copy(m_hImageList, nDst, m_hImageList, nSrc, uFlags);¤	}¤	static BOOL DrawIndirect(IMAGELISTDRAWPARAMS* pimldp)¤	{¤		return ImageList_DrawIndirect(pimldp);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤¤/////////////////////////////////////////////////////////////////////////////¤// CListViewCtrl¤¤template <class Base>¤class CListViewCtrlT : public Base¤{¤public:¤// Constructors¤	CListViewCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CListViewCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return WC_LISTVIEW;¤	}¤¤	COLORREF GetBkColor() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, LVM_GETBKCOLOR, 0, 0L);¤	}¤	BOOL SetBkColor(COLORREF cr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETBKCOLOR, 0, cr);¤	}¤	HIMAGELIST GetImageList(int nImageListType) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, LVM_GETIMAGELIST, nImageListType, 0L);¤	}¤	HIMAGELIST SetImageList(HIMAGELIST hImageList, int nImageList)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, LVM_SETIMAGELIST, nImageList, (LPARAM)hImageList);¤	}¤	int GetItemCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_GETITEMCOUNT, 0, 0L);¤	}¤	BOOL GetItem(LV_ITEM* pItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETITEM, 0, (LPARAM)pItem);¤	}¤	BOOL SetItem(const LV_ITEM* pItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETITEM, 0, (LPARAM)pItem);¤	}¤	BOOL SetItemState(int nItem, UINT nState, UINT nStateMask)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItem(nItem, 0, LVIF_STATE, NULL, 0, nState, nStateMask, 0);¤	}¤	BOOL SetItemText(int nItem, int nSubItem, LPCTSTR lpszText)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItem(nItem, nSubItem, LVIF_TEXT, lpszText, 0, 0, 0, 0);¤	}¤	BOOL SetItemData(int nItem, DWORD_PTR dwData)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItem(nItem, 0, LVIF_PARAM, NULL, 0, 0, 0, (LPARAM)dwData);¤	}¤	int InsertItem(const LV_ITEM* pItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_INSERTITEM, 0, (LPARAM)pItem);¤	}¤	int InsertItem(int nItem, LPCTSTR lpszItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return InsertItem(LVIF_TEXT, nItem, lpszItem, 0, 0, 0, 0);¤	}¤	int InsertItem(int nItem, LPCTSTR lpszItem, int nImage)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return InsertItem(LVIF_TEXT|LVIF_IMAGE, nItem, lpszItem, 0, 0, nImage, 0);¤	}¤	BOOL DeleteItem(int nItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_DELETEITEM, nItem, 0L);¤	}¤	BOOL DeleteAllItems()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_DELETEALLITEMS, 0, 0L);¤	}¤	UINT GetCallbackMask() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, LVM_GETCALLBACKMASK, 0, 0L);¤	}¤	BOOL SetCallbackMask(UINT nMask)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETCALLBACKMASK, nMask, 0L);¤	}¤	int GetNextItem(int nItem, int nFlags) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_GETNEXTITEM, nItem, MAKELPARAM(nFlags, 0));¤	}¤	int FindItem(LV_FINDINFO* pFindInfo, int nStart) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_FINDITEM, nStart, (LPARAM)pFindInfo);¤	}¤	int HitTest(LV_HITTESTINFO* pHitTestInfo) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_HITTEST, 0, (LPARAM)pHitTestInfo);¤	}¤	BOOL SetItemPosition(int nItem, POINT pt)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETITEMPOSITION32, nItem, (LPARAM)&pt);¤	}¤	BOOL GetItemPosition(int nItem, LPPOINT lpPoint) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETITEMPOSITION, nItem, (LPARAM)lpPoint);¤	}¤	int GetStringWidth(LPCTSTR lpsz) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_GETSTRINGWIDTH, 0, (LPARAM)lpsz);¤	}¤	BOOL EnsureVisible(int nItem, BOOL bPartialOK)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_ENSUREVISIBLE, nItem, MAKELPARAM(bPartialOK, 0));¤	}¤	BOOL Scroll(SIZE size)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SCROLL, size.cx, size.cy);¤	}¤	BOOL RedrawItems(int nFirst, int nLast)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_REDRAWITEMS, nFirst, nLast);¤	}¤	BOOL Arrange(UINT nCode)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_ARRANGE, nCode, 0L);¤	}¤	HWND EditLabel(int nItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, LVM_EDITLABEL, nItem, 0L);¤	}¤	HWND GetEditControl() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, LVM_GETEDITCONTROL, 0, 0L);¤	}¤	BOOL GetColumn(int nCol, LV_COLUMN* pColumn) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETCOLUMN, nCol, (LPARAM)pColumn);¤	}¤	BOOL SetColumn(int nCol, const LV_COLUMN* pColumn)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETCOLUMN, nCol, (LPARAM)pColumn);¤	}¤	int InsertColumn(int nCol, const LV_COLUMN* pColumn)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_INSERTCOLUMN, nCol, (LPARAM)pColumn);¤	}¤	BOOL DeleteColumn(int nCol)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_DELETECOLUMN, nCol, 0L);¤	}¤	int GetColumnWidth(int nCol) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_GETCOLUMNWIDTH, nCol, 0L);¤	}¤	BOOL SetColumnWidth(int nCol, int cx)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETCOLUMNWIDTH, nCol, MAKELPARAM(cx, 0));¤	}¤	BOOL GetViewRect(LPRECT lpRect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETVIEWRECT, 0, (LPARAM)lpRect);¤	}¤	COLORREF GetTextColor() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, LVM_GETTEXTCOLOR, 0, 0L);¤	}¤	BOOL SetTextColor(COLORREF cr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETTEXTCOLOR, 0, cr);¤	}¤	COLORREF GetTextBkColor() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, LVM_GETTEXTBKCOLOR, 0, 0L);¤	}¤	BOOL SetTextBkColor(COLORREF cr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETTEXTBKCOLOR, 0, cr);¤	}¤	int GetTopIndex() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_GETTOPINDEX, 0, 0L);¤	}¤	int GetCountPerPage() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_GETCOUNTPERPAGE, 0, 0L);¤	}¤	BOOL GetOrigin(LPPOINT lpPoint) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETORIGIN, 0, (LPARAM)lpPoint);¤	}¤	BOOL Update(int nItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_UPDATE, nItem, 0L);¤	}¤	BOOL SetItemState(int nItem, LV_ITEM* pItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETITEMSTATE, nItem, (LPARAM)pItem);¤	}¤	UINT GetItemState(int nItem, UINT nMask) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, LVM_GETITEMSTATE, nItem, nMask);¤	}¤	void SetItemCount(int nItems)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, LVM_SETITEMCOUNT, nItems, 0L);¤	}¤	BOOL SortItems(PFNLVCOMPARE pfnCompare, DWORD dwData)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SORTITEMS, dwData, (LPARAM)pfnCompare);¤	}¤	UINT GetSelectedCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, LVM_GETSELECTEDCOUNT, 0, 0L);¤	}¤¤	BOOL GetItemRect(int nItem, LPRECT lpRect, UINT nCode) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		lpRect->left = nCode;¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETITEMRECT, (WPARAM)nItem, (LPARAM)lpRect);¤	}¤¤	int InsertColumn(int nCol, LPCTSTR lpszColumnHeading, int nFormat, int nWidth, int nSubItem)¤	{¤		LV_COLUMN column;¤		column.mask = LVCF_TEXT|LVCF_FMT;¤		column.pszText = (LPTSTR)lpszColumnHeading;¤		column.fmt = nFormat;¤		if (nWidth != -1)¤		{¤			column.mask |= LVCF_WIDTH;¤			column.cx = nWidth;¤		}¤		if (nSubItem != -1)¤		{¤			column.mask |= LVCF_SUBITEM;¤			column.iSubItem = nSubItem;¤		}¤		return InsertColumn(nCol, &column);¤	}¤¤	int InsertItem(UINT nMask, int nItem, LPCTSTR lpszItem, UINT nState, UINT nStateMask, int nImage, LPARAM lParam)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		LV_ITEM item;¤		item.mask = nMask;¤		item.iItem = nItem;¤		item.iSubItem = 0;¤		item.pszText = (LPTSTR)lpszItem;¤		item.state = nState;¤		item.stateMask = nStateMask;¤		item.iImage = nImage;¤		item.lParam = lParam;¤		return InsertItem(&item);¤	}¤¤	int HitTest(POINT pt, UINT* pFlags) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		LV_HITTESTINFO hti;¤		hti.pt = pt;¤		int nRes = (int)::SendMessage(m_hWnd, LVM_HITTEST, 0, (LPARAM)&hti);¤		if (pFlags != NULL)¤			*pFlags = hti.flags;¤		return nRes;¤	}¤¤	BOOL SetItem(int nItem, int nSubItem, UINT nMask, LPCTSTR lpszItem,¤		int nImage, UINT nState, UINT nStateMask, LPARAM lParam)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		LV_ITEM lvi;¤		lvi.mask = nMask;¤		lvi.iItem = nItem;¤		lvi.iSubItem = nSubItem;¤		lvi.stateMask = nStateMask;¤		lvi.state = nState;¤		lvi.pszText = (LPTSTR) lpszItem;¤		lvi.iImage = nImage;¤		lvi.lParam = lParam;¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETITEM, 0, (LPARAM)&lvi);¤	}¤¤#ifndef _ATL_NO_COM¤	BOOL GetItemText(int nItem, int nSubItem, BSTR& bstrText) const¤	{¤		USES_CONVERSION;¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(bstrText == NULL);¤		LV_ITEM lvi;¤		memset(&lvi, 0, sizeof(LV_ITEM));¤		lvi.iSubItem = nSubItem;¤¤		LPTSTR lpstrText = NULL;¤		int nLen = 128;¤		int nRes;¤		do¤		{¤			nLen *= 2;¤			lvi.cchTextMax = nLen;¤			if(lpstrText != NULL)¤			{¤				delete [] lpstrText;¤				lpstrText = NULL;¤			}¤			ATLTRY(lpstrText = new TCHAR[nLen]);¤			if(lpstrText == NULL)¤				break;¤			lpstrText[0] = NULL;¤			lvi.pszText = lpstrText;¤			nRes  = (int)::SendMessage(m_hWnd, LVM_GETITEMTEXT, (WPARAM)nItem,¤				(LPARAM)&lvi);¤		} while (nRes == nLen-1);¤¤		bstrText = ::SysAllocString(T2OLE(lpstrText));¤		delete [] lpstrText;¤¤		return (bstrText != NULL) ? TRUE : FALSE;¤	}¤#endif //!_ATL_NO_COM¤¤	int GetItemText(int nItem, int nSubItem, LPTSTR lpszText, int nLen) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		LV_ITEM lvi;¤		memset(&lvi, 0, sizeof(LV_ITEM));¤		lvi.iSubItem = nSubItem;¤		lvi.cchTextMax = nLen;¤		lvi.pszText = lpszText;¤		return (int)::SendMessage(m_hWnd, LVM_GETITEMTEXT, (WPARAM)nItem, (LPARAM)&lvi);¤	}¤¤	DWORD_PTR GetItemData(int nItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		LV_ITEM lvi;¤		memset(&lvi, 0, sizeof(LV_ITEM));¤		lvi.iItem = nItem;¤		lvi.mask = LVIF_PARAM;¤		::SendMessage(m_hWnd, LVM_GETITEM, 0, (LPARAM)&lvi);¤		return (DWORD_PTR)lvi.lParam;¤	}¤¤	void RemoveImageList(int nImageList)¤	{¤		HIMAGELIST h = (HIMAGELIST)::SendMessage(m_hWnd, LVM_GETIMAGELIST, (WPARAM)nImageList, 0L);¤		if (h != NULL)¤			::SendMessage(m_hWnd, LVM_SETIMAGELIST, (WPARAM)nImageList, 0L);¤	}¤¤	HIMAGELIST CreateDragImage(int nItem, LPPOINT lpPoint)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, LVM_CREATEDRAGIMAGE, nItem, (LPARAM)lpPoint);¤	}¤¤	BOOL AddColumn(LPCTSTR strItem,int nItem,int nSubItem = -1,¤			int nMask = LVCF_FMT | LVCF_WIDTH | LVCF_TEXT | LVCF_SUBITEM,¤			int nFmt = LVCFMT_LEFT)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		LV_COLUMN lvc;¤		lvc.mask = nMask;¤		lvc.fmt = nFmt;¤		lvc.pszText = (LPTSTR)strItem;¤		lvc.cx = GetStringWidth(lvc.pszText) + 15;¤		if(nMask & LVCF_SUBITEM)¤		{¤			if(nSubItem != -1)¤				lvc.iSubItem = nSubItem;¤			else¤				lvc.iSubItem = nItem;¤		}¤		return InsertColumn(nItem, &lvc);¤	}¤¤	BOOL AddItem(int nItem,int nSubItem,LPCTSTR strItem,int nImageIndex = -1)¤	{¤		LV_ITEM lvItem;¤		lvItem.mask = LVIF_TEXT;¤		lvItem.iItem = nItem;¤		lvItem.iSubItem = nSubItem;¤		lvItem.pszText = (LPTSTR) strItem;¤		if(nImageIndex != -1){¤			lvItem.mask |= LVIF_IMAGE;¤			lvItem.iImage = nImageIndex;¤		}¤		if(nSubItem == 0)¤			return InsertItem(&lvItem);¤		return SetItem(&lvItem);¤	}¤¤	// single-selection only¤	int GetSelectedIndex() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LVS_SINGLESEL);¤¤		return (int)::SendMessage(m_hWnd, LVM_GETNEXTITEM, (WPARAM)-1, MAKELPARAM(LVNI_ALL | LVNI_SELECTED, 0));¤	}¤¤	BOOL GetSelectedItem(LV_ITEM* pItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LVS_SINGLESEL);¤		ATLASSERT(pItem != NULL);¤¤		pItem->iItem = (int)::SendMessage(m_hWnd, LVM_GETNEXTITEM, -1, MAKELPARAM(LVNI_ALL | LVNI_SELECTED, 0));¤		if(pItem->iItem == -1)¤			return FALSE;¤¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETITEM, 0, (LPARAM)pItem);¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	BOOL GetBkImage(LPLVBKIMAGE plvbki)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETBKIMAGE, 0, (LPARAM)plvbki);¤	}¤	BOOL SetBkImage(LPLVBKIMAGE plvbki)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETBKIMAGE, 0, (LPARAM)plvbki);¤	}¤	DWORD GetExtendedListViewStyle()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0L);¤	}¤	// dwExMask = 0 means all styles¤	DWORD SetExtendedListViewStyle(DWORD dwExStyle, DWORD dwExMask = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD)::SendMessage(m_hWnd, LVM_SETEXTENDEDLISTVIEWSTYLE, dwExMask, dwExStyle);¤	}¤	HCURSOR GetHotCursor()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HCURSOR)::SendMessage(m_hWnd, LVM_GETHOTCURSOR, 0, 0L);¤	}¤	HCURSOR SetHotCursor(HCURSOR hHotCursor)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HCURSOR)::SendMessage(m_hWnd, LVM_SETHOTCURSOR, 0, (LPARAM)hHotCursor);¤	}¤	int GetHotItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, LVM_GETHOTITEM, 0, 0L);¤	}¤	int SetHotItem(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, LVM_SETHOTITEM, nIndex, 0L);¤	}¤	int GetSelectionMark()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, LVM_GETSELECTIONMARK, 0, 0L);¤	}¤	int SetSelectionMark(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, LVM_SETSELECTIONMARK, 0, nIndex);¤	}¤	BOOL GetWorkAreas(int nWorkAreas, LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETWORKAREAS, nWorkAreas, (LPARAM)lpRect);¤	}¤	BOOL SetWorkAreas(int nWorkAreas, LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETWORKAREAS, nWorkAreas, (LPARAM)lpRect);¤	}¤	BOOL GetColumnOrderArray(int nCount, int* lpnArray)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETCOLUMNORDERARRAY, nCount, (LPARAM)lpnArray);¤	}¤	BOOL SetColumnOrderArray(int nCount, int* lpnArray)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_SETCOLUMNORDERARRAY, nCount, (LPARAM)lpnArray);¤	}¤	DWORD GetHoverTime()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetExtendedListViewStyle() & (LVS_EX_TRACKSELECT | LVS_EX_ONECLICKACTIVATE | LVS_EX_TWOCLICKACTIVATE));¤		return ::SendMessage(m_hWnd, LVM_GETHOVERTIME, 0, 0L);¤	}¤	DWORD SetHoverTime(DWORD dwHoverTime)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetExtendedListViewStyle() & (LVS_EX_TRACKSELECT | LVS_EX_ONECLICKACTIVATE | LVS_EX_TWOCLICKACTIVATE));¤		return ::SendMessage(m_hWnd, LVM_SETHOVERTIME, 0, dwHoverTime);¤	}¤	HWND GetHeader()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, LVM_GETHEADER, 0, 0L);¤	}¤	BOOL GetSubItemRect(int nItem, int nSubItem, int nFlag, LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LVS_REPORT);¤		ATLASSERT(lpRect != NULL);¤		lpRect->top = nSubItem;¤		lpRect->left = nFlag;¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETSUBITEMRECT, nItem, (LPARAM)lpRect);¤	}¤	BOOL GetCheckState(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetExtendedListViewStyle() & LVS_EX_CHECKBOXES);¤		UINT uRet = GetItemState(nIndex, LVIS_STATEIMAGEMASK);¤//REVIEW¤		return (uRet >> 12) - 1;¤	}¤	BOOL SetCheckState(int nItem, BOOL bCheck)¤	{¤		int nCheck = bCheck ? 2 : 1;    // one based index¤		return SetItemState(nItem, INDEXTOSTATEIMAGEMASK(nCheck), LVIS_STATEIMAGEMASK);¤	}¤	DWORD ApproximateViewRect(int cx = -1, int cy = -1, int nCount = -1)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, LVM_APPROXIMATEVIEWRECT, nCount, MAKELPARAM(cx, cy));¤	}¤	BOOL GetNumberOfWorkAreas(int* pnWorkAreas)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, LVM_GETNUMBEROFWORKAREAS, 0, (LPARAM)pnWorkAreas);¤	}¤	DWORD SetIconSpacing(int cx, int cy)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(GetStyle() & LVS_ICON);¤		return ::SendMessage(m_hWnd, LVM_SETICONSPACING, 0, MAKELPARAM(cx, cy));¤	}¤	void SetItemCountEx(int nItems, DWORD dwFlags)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT((GetStyle() & LVS_OWNERDATA) && (GetStyle() & (LVS_REPORT | LVS_LIST)));¤		::SendMessage(m_hWnd, LVM_SETITEMCOUNT, nItems, dwFlags);¤	}¤	int SubItemHitTest(LPLVHITTESTINFO lpInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, LVM_SUBITEMHITTEST, 0, (LPARAM)lpInfo);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CListViewCtrlT<CWindow>     CListViewCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CTreeViewCtrl¤¤template <class Base>¤class CTreeViewCtrlT : public Base¤{¤public:¤// Constructors¤	CTreeViewCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CTreeViewCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Operations¤	static LPCTSTR GetWndClassName()¤	{¤		return WC_TREEVIEW;¤	}¤¤	HTREEITEM InsertItem(LPTV_INSERTSTRUCT lpInsertStruct)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_INSERTITEM, 0, (LPARAM)lpInsertStruct);¤	}¤	HTREEITEM InsertItem(LPCTSTR lpszItem, int nImage,¤		int nSelectedImage, HTREEITEM hParent, HTREEITEM hInsertAfter)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return InsertItem(TVIF_TEXT | TVIF_IMAGE | TVIF_SELECTEDIMAGE, lpszItem, nImage, nSelectedImage, 0, 0, 0, hParent, hInsertAfter);¤	}¤	HTREEITEM InsertItem(LPCTSTR lpszItem, HTREEITEM hParent, HTREEITEM hInsertAfter)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return InsertItem(TVIF_TEXT, lpszItem, 0, 0, 0, 0, 0, hParent, hInsertAfter);¤	}¤	BOOL DeleteItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_DELETEITEM, 0, (LPARAM)hItem);¤	}¤	BOOL DeleteAllItems()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_DELETEITEM, 0, (LPARAM)TVI_ROOT);¤	}¤	BOOL Expand(HTREEITEM hItem, UINT nCode)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_EXPAND, nCode, (LPARAM)hItem);¤	}¤	UINT GetCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, TVM_GETCOUNT, 0, 0L);¤	}¤	UINT GetIndent() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, TVM_GETINDENT, 0, 0L);¤	}¤	void SetIndent(UINT nIndent)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TVM_SETINDENT, nIndent, 0L);¤	}¤	HIMAGELIST GetImageList(UINT nImageList) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)(::SendMessage(m_hWnd, TVM_GETIMAGELIST, (UINT)nImageList, 0L));¤	}¤	HIMAGELIST SetImageList(HIMAGELIST hImageList, int nImageListType)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)(::SendMessage(m_hWnd, TVM_SETIMAGELIST, (UINT)nImageListType, (LPARAM)hImageList));¤	}¤	HTREEITEM GetNextItem(HTREEITEM hItem, UINT nCode)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, nCode, (LPARAM)hItem);¤	}¤	HTREEITEM GetChildItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_CHILD, (LPARAM)hItem);¤	}¤	HTREEITEM GetNextSiblingItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_NEXT, (LPARAM)hItem);¤	}¤	HTREEITEM GetPrevSiblingItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_PREVIOUS, (LPARAM)hItem);¤	}¤	HTREEITEM GetParentItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_PARENT, (LPARAM)hItem);¤	}¤	HTREEITEM GetFirstVisibleItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_FIRSTVISIBLE, 0L);¤	}¤	HTREEITEM GetNextVisibleItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_NEXTVISIBLE, (LPARAM)hItem);¤	}¤	HTREEITEM GetPrevVisibleItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_PREVIOUSVISIBLE, (LPARAM)hItem);¤	}¤	HTREEITEM GetSelectedItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_CARET, 0L);¤	}¤	HTREEITEM GetDropHilightItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_DROPHILITE, 0L);¤	}¤	HTREEITEM GetRootItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_ROOT, 0L);¤	}¤	BOOL Select(HTREEITEM hItem, UINT nCode)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_SELECTITEM, nCode, (LPARAM)hItem);¤	}¤	BOOL SelectItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_SELECTITEM, TVGN_CARET, (LPARAM)hItem);¤	}¤	BOOL SelectDropTarget(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_SELECTITEM, TVGN_DROPHILITE, (LPARAM)hItem);¤	}¤	BOOL SelectSetFirstVisible(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_SELECTITEM, TVGN_FIRSTVISIBLE, (LPARAM)hItem);¤	}¤	BOOL GetItem(TV_ITEM* pItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_GETITEM, 0, (LPARAM)pItem);¤	}¤	BOOL SetItem(TV_ITEM* pItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_SETITEM, 0, (LPARAM)pItem);¤	}¤	BOOL SetItemText(HTREEITEM hItem, LPCTSTR lpszItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItem(hItem, TVIF_TEXT, lpszItem, 0, 0, 0, 0, NULL);¤	}¤	BOOL SetItemImage(HTREEITEM hItem, int nImage, int nSelectedImage)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItem(hItem, TVIF_IMAGE|TVIF_SELECTEDIMAGE, NULL, nImage, nSelectedImage, 0, 0, NULL);¤	}¤	BOOL SetItemState(HTREEITEM hItem, UINT nState, UINT nStateMask)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItem(hItem, TVIF_STATE, NULL, 0, 0, nState, nStateMask, NULL);¤	}¤	BOOL SetItemData(HTREEITEM hItem, DWORD dwData)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return SetItem(hItem, TVIF_PARAM, NULL, 0, 0, 0, 0, (LPARAM)dwData);¤	}¤	HWND EditLabel(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TVM_EDITLABEL, 0, (LPARAM)hItem);¤	}¤	HTREEITEM HitTest(TV_HITTESTINFO* pHitTestInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_HITTEST, 0, (LPARAM)pHitTestInfo);¤	}¤	HWND GetEditControl() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TVM_GETEDITCONTROL, 0, 0L);¤	}¤	UINT GetVisibleCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, TVM_GETVISIBLECOUNT, 0, 0L);¤	}¤	BOOL SortChildren(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_SORTCHILDREN, 0, (LPARAM)hItem);¤	}¤	BOOL EnsureVisible(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_ENSUREVISIBLE, 0, (LPARAM)hItem);¤	}¤	BOOL SortChildrenCB(LPTV_SORTCB pSort)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_SORTCHILDRENCB, 0, (LPARAM)pSort);¤	}¤¤	BOOL GetItemRect(HTREEITEM hItem, LPRECT lpRect, BOOL bTextOnly) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		*(HTREEITEM*)lpRect = hItem;¤		return (BOOL)::SendMessage(m_hWnd, TVM_GETITEMRECT, (WPARAM)bTextOnly, (LPARAM)lpRect);¤	}¤¤#ifndef _ATL_NO_COM¤	BOOL GetItemText(HTREEITEM hItem, BSTR& bstrText) const¤	{¤		USES_CONVERSION;¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(bstrText == NULL);¤		TV_ITEM item;¤		item.hItem = hItem;¤		item.mask = TVIF_TEXT;¤		LPTSTR lpstrText = NULL;¤		int nLen = 128;¤		do¤		{¤			nLen *= 2;¤			LPTSTR lpstrTemp;¤			lpstrTemp = (LPTSTR)realloc(lpstrText, nLen * sizeof(TCHAR));¤			if(lpstrTemp == NULL)¤			{¤				free(lpstrText);¤				return FALSE;¤			}¤			lpstrText = lpstrTemp;¤			item.pszText = lpstrText;¤			item.cchTextMax = nLen;¤			::SendMessage(m_hWnd, TVM_GETITEM, 0, (LPARAM)&item);¤		}¤		while (lstrlen(item.pszText) == (nLen-1));¤¤		bstrText = ::SysAllocString(T2OLE(lpstrText));¤		free(lpstrText);¤¤		return (bstrText != NULL) ? TRUE : FALSE;¤	}¤#endif //!_ATL_NO_COM¤¤	BOOL GetItemImage(HTREEITEM hItem, int& nImage, int& nSelectedImage) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_ITEM item;¤		item.hItem = hItem;¤		item.mask = TVIF_IMAGE|TVIF_SELECTEDIMAGE;¤		BOOL bRes = (BOOL)::SendMessage(m_hWnd, TVM_GETITEM, 0, (LPARAM)&item);¤		if (bRes)¤		{¤			nImage = item.iImage;¤			nSelectedImage = item.iSelectedImage;¤		}¤		return bRes;¤	}¤¤	UINT GetItemState(HTREEITEM hItem, UINT nStateMask) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_ITEM item;¤		item.hItem = hItem;¤		item.mask = TVIF_STATE;¤		item.stateMask = nStateMask;¤		item.state = 0;¤		::SendMessage(m_hWnd, TVM_GETITEM, 0, (LPARAM)&item);¤		return item.state;¤	}¤¤	DWORD GetItemData(HTREEITEM hItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_ITEM item;¤		item.hItem = hItem;¤		item.mask = TVIF_PARAM;¤		::SendMessage(m_hWnd, TVM_GETITEM, 0, (LPARAM)&item);¤		return (DWORD)item.lParam;¤	}¤¤	BOOL ItemHasChildren(HTREEITEM hItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_ITEM item;¤		item.hItem = hItem;¤		item.mask = TVIF_CHILDREN;¤		::SendMessage(m_hWnd, TVM_GETITEM, 0, (LPARAM)&item);¤		return item.cChildren;¤	}¤¤	BOOL SetItem(HTREEITEM hItem, UINT nMask, LPCTSTR lpszItem, int nImage,¤		int nSelectedImage, UINT nState, UINT nStateMask, LPARAM lParam)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_ITEM item;¤		item.hItem = hItem;¤		item.mask = nMask;¤		item.pszText = (LPTSTR) lpszItem;¤		item.iImage = nImage;¤		item.iSelectedImage = nSelectedImage;¤		item.state = nState;¤		item.stateMask = nStateMask;¤		item.lParam = lParam;¤		return (BOOL)::SendMessage(m_hWnd, TVM_SETITEM, 0, (LPARAM)&item);¤	}¤¤	HTREEITEM InsertItem(UINT nMask, LPCTSTR lpszItem, int nImage,¤		int nSelectedImage, UINT nState, UINT nStateMask, LPARAM lParam,¤		HTREEITEM hParent, HTREEITEM hInsertAfter)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_INSERTSTRUCT tvis;¤		tvis.hParent = hParent;¤		tvis.hInsertAfter = hInsertAfter;¤		tvis.item.mask = nMask;¤		tvis.item.pszText = (LPTSTR) lpszItem;¤		tvis.item.iImage = nImage;¤		tvis.item.iSelectedImage = nSelectedImage;¤		tvis.item.state = nState;¤		tvis.item.stateMask = nStateMask;¤		tvis.item.lParam = lParam;¤		return (HTREEITEM)::SendMessage(m_hWnd, TVM_INSERTITEM, 0, (LPARAM)&tvis);¤	}¤¤	HTREEITEM HitTest(POINT pt, UINT* pFlags)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_HITTESTINFO hti;¤		hti.pt = pt;¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_HITTEST, 0, (LPARAM)&hti);¤		if (pFlags != NULL)¤			*pFlags = hti.flags;¤		return hTreeItem;¤	}¤¤	void RemoveImageList(int nImageList)¤	{¤		HIMAGELIST h = (HIMAGELIST)::SendMessage(m_hWnd, TVM_GETIMAGELIST, (WPARAM)nImageList, 0L);¤		::SendMessage(m_hWnd, TVM_SETIMAGELIST, (WPARAM)nImageList, 0L);¤	}¤¤	HIMAGELIST CreateDragImage(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TVM_CREATEDRAGIMAGE, 0, (LPARAM)hItem);¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	HWND GetToolTips()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TVM_GETTOOLTIPS, 0, 0L);¤	}¤	HWND SetToolTips(HWND hWndTT)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TVM_SETTOOLTIPS, (WPARAM)hWndTT, 0L);¤	}¤	BOOL Expand(HTREEITEM hItem, int nType)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TVM_EXPAND, nType, (LPARAM)hItem);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CTreeViewCtrlT<CWindow>     CTreeViewCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CTreeViewCtrlEx¤¤typedef CTreeViewCtrlExT<CWindow> CTreeViewCtrlEx;  // forward declaration¤¤class CTreeItem¤{¤public:¤	HTREEITEM m_hTreeItem;¤	CTreeViewCtrlEx* m_pTreeView;¤¤// Construction¤	CTreeItem(HTREEITEM hTreeItem = NULL, CTreeViewCtrlEx* pTreeView = NULL) : m_hTreeItem(hTreeItem), m_pTreeView(pTreeView)¤	{ }¤¤	CTreeItem(const CTreeItem& posSrc)¤	{¤		*this = posSrc;¤	}¤¤	operator HTREEITEM() { return m_hTreeItem; }¤¤	const CTreeItem& operator =(const CTreeItem& itemSrc)¤	{¤		m_hTreeItem = itemSrc.m_hTreeItem;¤		m_pTreeView = itemSrc.m_pTreeView;¤		return *this;¤	}¤¤// Attributes¤	CTreeViewCtrlEx* GetTreeView() const { return m_pTreeView; }¤¤	BOOL operator !() const { return m_hTreeItem == NULL; }¤	BOOL IsNull() const { return m_hTreeItem == NULL; }¤¤	BOOL GetRect(LPRECT lpRect, BOOL bTextOnly);¤#ifndef _ATL_NO_COM¤	BOOL GetText(BSTR& bstrText);¤#endif //!_ATL_NO_COM¤	BOOL GetImage(int& nImage, int& nSelectedImage);¤	UINT GetState(UINT nStateMask);¤	DWORD GetData();¤	BOOL SetItem(UINT nMask, LPCTSTR lpszItem, int nImage, int nSelectedImage, UINT nState, UINT nStateMask, LPARAM lParam);¤	BOOL SetText(LPCTSTR lpszItem);¤	BOOL SetImage(int nImage, int nSelectedImage);¤	BOOL SetState(UINT nState, UINT nStateMask);¤	BOOL SetData(DWORD dwData);¤¤// Operations¤	CTreeItem InsertAfter(LPCTSTR lpstrItem, HTREEITEM hItemAfter, int nImageIndex)¤	{¤		return _Insert(lpstrItem, nImageIndex, hItemAfter);¤	}¤	CTreeItem AddHead(LPCTSTR lpstrItem, int nImageIndex)¤	{¤		return _Insert(lpstrItem, nImageIndex, TVI_FIRST);¤	}¤	CTreeItem AddTail(LPCTSTR lpstrItem, int nImageIndex)¤	{¤		return _Insert(lpstrItem, nImageIndex, TVI_LAST);¤	}¤¤	CTreeItem GetChild();¤	CTreeItem GetNext(UINT nCode);¤	CTreeItem GetNextSibling();¤	CTreeItem GetPrevSibling();¤	CTreeItem GetParent();¤	CTreeItem GetFirstVisible();¤	CTreeItem GetNextVisible();¤	CTreeItem GetPrevVisible();¤	CTreeItem GetSelected();¤	CTreeItem GetDropHilight();¤	CTreeItem GetRoot();¤	BOOL HasChildren();¤	BOOL Delete();¤	BOOL Expand(UINT nCode = TVE_EXPAND);¤	BOOL Select(UINT nCode);¤	BOOL Select();¤	BOOL SelectDropTarget();¤	BOOL SelectSetFirstVisible();¤	HWND EditLabel();¤	HIMAGELIST CreateDragImage();¤	BOOL SortChildren();¤	BOOL EnsureVisible();¤¤	CTreeItem _Insert(LPCTSTR lpstrItem, int nImageIndex, HTREEITEM hItemAfter);¤	int GetImageIndex();¤};¤¤¤template <class Base>¤class CTreeViewCtrlExT : public CTreeViewCtrlT< Base >¤{¤public:¤// Constructors¤	CTreeViewCtrlExT(HWND hWnd = NULL) : CTreeViewCtrlT< Base >(hWnd) { }¤¤	CTreeViewCtrlExT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤// Operations (overides that return CTreeItem)¤	CTreeItem InsertItem(LPTV_INSERTSTRUCT lpInsertStruct)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_INSERTITEM, 0, (LPARAM)lpInsertStruct);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem InsertItem(LPCTSTR lpszItem, int nImage,¤		int nSelectedImage, HTREEITEM hParent, HTREEITEM hInsertAfter)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return InsertItem(TVIF_TEXT | TVIF_IMAGE | TVIF_SELECTEDIMAGE, lpszItem, nImage, nSelectedImage, 0, 0, 0, hParent, hInsertAfter);¤	}¤	CTreeItem InsertItem(LPCTSTR lpszItem, HTREEITEM hParent, HTREEITEM hInsertAfter)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return InsertItem(TVIF_TEXT, lpszItem, 0, 0, 0, 0, 0, hParent, hInsertAfter);¤	}¤	CTreeItem GetNextItem(HTREEITEM hItem, UINT nCode)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, nCode, (LPARAM)hItem);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetChildItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_CHILD, (LPARAM)hItem);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetNextSiblingItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_NEXT, (LPARAM)hItem);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetPrevSiblingItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_PREVIOUS, (LPARAM)hItem);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetParentItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_PARENT, (LPARAM)hItem);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetFirstVisibleItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_FIRSTVISIBLE, 0L);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetNextVisibleItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_NEXTVISIBLE, (LPARAM)hItem);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetPrevVisibleItem(HTREEITEM hItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_PREVIOUSVISIBLE, (LPARAM)hItem);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetSelectedItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_CARET, 0L);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetDropHilightItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_DROPHILITE, 0L);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem GetRootItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_GETNEXTITEM, TVGN_ROOT, 0L);¤		return CTreeItem(hTreeItem, this);¤	}¤	CTreeItem HitTest(TV_HITTESTINFO* pHitTestInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_HITTEST, 0, (LPARAM)pHitTestInfo);¤		return CTreeItem(hTreeItem, this);¤	}¤¤	CTreeItem InsertItem(UINT nMask, LPCTSTR lpszItem, int nImage,¤		int nSelectedImage, UINT nState, UINT nStateMask, LPARAM lParam,¤		HTREEITEM hParent, HTREEITEM hInsertAfter)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_INSERTSTRUCT tvis;¤		tvis.hParent = hParent;¤		tvis.hInsertAfter = hInsertAfter;¤		tvis.item.mask = nMask;¤		tvis.item.pszText = (LPTSTR) lpszItem;¤		tvis.item.iImage = nImage;¤		tvis.item.iSelectedImage = nSelectedImage;¤		tvis.item.state = nState;¤		tvis.item.stateMask = nStateMask;¤		tvis.item.lParam = lParam;¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_INSERTITEM, 0, (LPARAM)&tvis);¤		return CTreeItem(hTreeItem, this);¤	}¤¤	CTreeItem HitTest(POINT pt, UINT* pFlags)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TV_HITTESTINFO hti;¤		hti.pt = pt;¤		HTREEITEM hTreeItem = (HTREEITEM)::SendMessage(m_hWnd, TVM_HITTEST, 0, (LPARAM)&hti);¤		if (pFlags != NULL)¤			*pFlags = hti.flags;¤		return CTreeItem(hTreeItem, this);¤	}¤};¤¤¤// CTreeItem inline methods¤inline BOOL CTreeItem::GetRect(LPRECT lpRect, BOOL bTextOnly)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetItemRect(m_hTreeItem,lpRect,bTextOnly);¤}¤inline CTreeItem CTreeItem::GetNext(UINT nCode)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetNextItem(m_hTreeItem,nCode);¤}¤inline CTreeItem CTreeItem::GetChild()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetChildItem(m_hTreeItem);¤}¤inline CTreeItem CTreeItem::GetNextSibling()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetNextSiblingItem(m_hTreeItem);¤}¤inline CTreeItem CTreeItem::GetPrevSibling()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetPrevSiblingItem(m_hTreeItem);¤}¤inline CTreeItem CTreeItem::GetParent()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetParentItem(m_hTreeItem);¤}¤inline CTreeItem CTreeItem::GetFirstVisible()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetFirstVisibleItem();¤}¤inline CTreeItem CTreeItem::GetNextVisible()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetNextVisibleItem(m_hTreeItem);¤}¤inline CTreeItem CTreeItem::GetPrevVisible()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetPrevVisibleItem(m_hTreeItem);¤}¤inline CTreeItem CTreeItem::GetSelected()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetSelectedItem();¤}¤inline CTreeItem CTreeItem::GetDropHilight()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetDropHilightItem();¤}¤inline CTreeItem CTreeItem::GetRoot()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetRootItem();¤}¤#ifndef _ATL_NO_COM¤inline BOOL CTreeItem::GetText(BSTR& bstrText)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetItemText(m_hTreeItem, bstrText);¤}¤#endif //!_ATL_NO_COM¤inline BOOL CTreeItem::GetImage(int& nImage, int& nSelectedImage)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetItemImage(m_hTreeItem,nImage,nSelectedImage);¤}¤inline UINT CTreeItem::GetState(UINT nStateMask)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetItemState(m_hTreeItem,nStateMask);¤}¤inline DWORD CTreeItem::GetData()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->GetItemData(m_hTreeItem);¤}¤inline BOOL CTreeItem::SetItem(UINT nMask, LPCTSTR lpszItem, int nImage,¤		int nSelectedImage, UINT nState, UINT nStateMask, LPARAM lParam)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SetItem(m_hTreeItem, nMask, lpszItem, nImage, nSelectedImage, nState, nStateMask, lParam);¤}¤inline BOOL CTreeItem::SetText(LPCTSTR lpszItem)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SetItemText(m_hTreeItem,lpszItem);¤}¤inline BOOL CTreeItem::SetImage(int nImage, int nSelectedImage)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SetItemImage(m_hTreeItem,nImage,nSelectedImage);¤}¤inline BOOL CTreeItem::SetState(UINT nState, UINT nStateMask)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SetItemState(m_hTreeItem,nState,nStateMask);¤}¤inline BOOL CTreeItem::SetData(DWORD dwData)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SetItemData(m_hTreeItem,dwData);¤}¤inline BOOL CTreeItem::HasChildren()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->ItemHasChildren(m_hTreeItem);¤}¤inline BOOL CTreeItem::Delete()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->DeleteItem(m_hTreeItem);¤}¤inline BOOL CTreeItem::Expand(UINT nCode)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->Expand(m_hTreeItem,nCode);¤}¤inline BOOL CTreeItem::Select(UINT nCode)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->Select(m_hTreeItem,nCode);¤}¤inline BOOL CTreeItem::Select()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SelectItem(m_hTreeItem);¤}¤inline BOOL CTreeItem::SelectDropTarget()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SelectDropTarget(m_hTreeItem);¤}¤inline BOOL CTreeItem::SelectSetFirstVisible()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SelectSetFirstVisible(m_hTreeItem);¤}¤inline HWND CTreeItem::EditLabel()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->EditLabel(m_hTreeItem);¤}¤inline HIMAGELIST CTreeItem::CreateDragImage()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->CreateDragImage(m_hTreeItem);¤}¤inline BOOL CTreeItem::SortChildren()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->SortChildren(m_hTreeItem);¤}¤inline BOOL CTreeItem::EnsureVisible()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	return m_pTreeView->EnsureVisible(m_hTreeItem);¤}¤¤inline CTreeItem CTreeItem::_Insert(LPCTSTR lpstrItem, int nImageIndex, HTREEITEM hItemAfter)¤{¤	ATLASSERT(m_pTreeView != NULL);¤	TV_INSERTSTRUCT ins;¤	ins.hParent = m_hTreeItem;¤	ins.hInsertAfter = hItemAfter;¤	ins.item.mask = TVIF_TEXT;¤	ins.item.pszText = (LPTSTR)lpstrItem;¤	if(nImageIndex != -1)¤	{¤		ins.item.mask |= TVIF_IMAGE | TVIF_SELECTEDIMAGE;¤		ins.item.iImage = nImageIndex;¤		ins.item.iSelectedImage = nImageIndex;¤	}¤	return CTreeItem(m_pTreeView->InsertItem(&ins), m_pTreeView);¤}¤¤inline int CTreeItem::GetImageIndex()¤{¤	ATLASSERT(m_pTreeView != NULL);¤	TV_ITEM item;¤	item.mask = TVIF_HANDLE | TVIF_IMAGE;¤	item.hItem = m_hTreeItem;¤	m_pTreeView->GetItem(&item);¤	return item.iImage;¤}¤¤¤/////////////////////////////////////////////////////////////////////////////¤// CHeaderCtrl¤¤template <class Base>¤class CHeaderCtrlT : public Base¤{¤public:¤// Constructors¤	CHeaderCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CHeaderCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return WC_HEADER;¤	}¤¤	int GetItemCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, HDM_GETITEMCOUNT, 0, 0L);¤	}¤	BOOL GetItem(int nIndex, HD_ITEM* pHeaderItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, HDM_GETITEM, nIndex, (LPARAM)pHeaderItem);¤	}¤	BOOL SetItem(int nIndex, HD_ITEM* pHeaderItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, HDM_SETITEM, nIndex, (LPARAM)pHeaderItem);¤	}¤¤// Operations¤	int InsertItem(int nIndex, HD_ITEM* phdi)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, HDM_INSERTITEM, nIndex, (LPARAM)phdi);¤	}¤	BOOL DeleteItem(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, HDM_DELETEITEM, nIndex, 0L);¤	}¤	BOOL Layout(HD_LAYOUT* pHeaderLayout)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, HDM_LAYOUT, 0, (LPARAM)pHeaderLayout);¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	HIMAGELIST GetImageList()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, HDM_GETIMAGELIST, 0, 0L);¤	}¤	HIMAGELIST SetImageList(HIMAGELIST hImageList)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, HDM_SETIMAGELIST, 0, (LPARAM)hImageList);¤	}¤	BOOL GetOrderArray(int nSize, int* lpnArray)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, HDM_GETORDERARRAY, nSize, (LPARAM)lpnArray);¤	}¤	BOOL SetOrderArray(int nSize, int* lpnArray)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, HDM_SETORDERARRAY, nSize, (LPARAM)lpnArray);¤	}¤	int OrderToIndex(int nOrder)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, HDM_ORDERTOINDEX, nOrder, 0L);¤	}¤	HIMAGELIST CreateDragImage(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, HDM_CREATEDRAGIMAGE, nIndex, 0L);¤	}¤	BOOL GetItemRect(int nIndex, LPRECT lpItemRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, HDM_GETITEMRECT, nIndex, (LPARAM)lpItemRect);¤	}¤	int SetHotDivider(BOOL bPos, DWORD dwInputValue)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, HDM_SETHOTDIVIDER, bPos, dwInputValue);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CHeaderCtrlT<CWindow>       CHeaderCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CToolBarCtrl¤¤template <class Base>¤class CToolBarCtrlT : public Base¤{¤public:¤// Construction¤	CToolBarCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CToolBarCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return TOOLBARCLASSNAME;¤	}¤¤	BOOL IsButtonEnabled(int nID) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_ISBUTTONENABLED, nID, 0L);¤	}¤	BOOL IsButtonChecked(int nID) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_ISBUTTONCHECKED, nID, 0L);¤	}¤	BOOL IsButtonPressed(int nID) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_ISBUTTONPRESSED, nID, 0L);¤	}¤	BOOL IsButtonHidden(int nID) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return(BOOL) ::SendMessage(m_hWnd, TB_ISBUTTONHIDDEN, nID, 0L);¤	}¤	BOOL IsButtonIndeterminate(int nID) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_ISBUTTONINDETERMINATE, nID, 0L);¤	}¤	BOOL SetState(int nID, UINT nState)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETSTATE, nID, MAKELPARAM(nState, 0));¤	}¤	int GetState(int nID) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_GETSTATE, nID, 0L);¤	}¤	BOOL GetButton(int nIndex, LPTBBUTTON lpButton) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_GETBUTTON, nIndex, (LPARAM)lpButton);¤	}¤	int GetButtonCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_BUTTONCOUNT, 0, 0L);¤	}¤	BOOL GetItemRect(int nIndex, LPRECT lpRect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_GETITEMRECT, nIndex, (LPARAM)lpRect);¤	}¤	void SetButtonStructSize(int nSize)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TB_BUTTONSTRUCTSIZE, nSize, 0L);¤	}¤	BOOL SetButtonSize(SIZE size)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETBUTTONSIZE, 0, MAKELPARAM(size.cx, size.cy));¤	}¤	BOOL SetBitmapSize(SIZE size)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETBITMAPSIZE, 0, MAKELPARAM(size.cx, size.cy));¤	}¤	HWND GetToolTips() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TB_GETTOOLTIPS, 0, 0L);¤	}¤	void SetToolTips(HWND hWndToolTip)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TB_SETTOOLTIPS, (WPARAM)hWndToolTip, 0L);¤	}¤	void SetNotifyWnd(HWND hWnd)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TB_SETPARENT, (WPARAM)hWnd, 0L);¤	}¤	void SetRows(int nRows, BOOL bLarger, LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TB_SETROWS, MAKELPARAM(nRows, bLarger), (LPARAM)lpRect);¤	}¤	int GetRows() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_GETROWS, 0, 0L);¤	}¤	BOOL SetCmdID(int nIndex, UINT nID)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETCMDID, nIndex, nID);¤	}¤	UINT GetBitmapFlags() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, TB_GETBITMAPFLAGS, 0, 0L);¤	}¤¤// Operations¤	BOOL EnableButton(int nID, BOOL bEnable = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_ENABLEBUTTON, nID, MAKELPARAM(bEnable, 0));¤	}¤	BOOL CheckButton(int nID, BOOL bCheck = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_CHECKBUTTON, nID, MAKELPARAM(bCheck, 0));¤	}¤	BOOL PressButton(int nID, BOOL bPress = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_PRESSBUTTON, nID, MAKELPARAM(bPress, 0));¤	}¤	BOOL HideButton(int nID, BOOL bHide = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_HIDEBUTTON, nID, MAKELPARAM(bHide, 0));¤	}¤	BOOL Indeterminate(int nID, BOOL bIndeterminate = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_INDETERMINATE, nID, MAKELPARAM(bIndeterminate, 0));¤	}¤	int AddBitmap(int nNumButtons, UINT nBitmapID)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TBADDBITMAP tbab;¤		tbab.hInst = _Module.GetResourceInstance();¤		ATLASSERT(tbab.hInst != NULL);¤		tbab.nID = nBitmapID;¤		return (int)::SendMessage(m_hWnd, TB_ADDBITMAP, (WPARAM)nNumButtons, (LPARAM)&tbab);¤	}¤	int AddBitmap(int nNumButtons, HBITMAP hBitmap)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TBADDBITMAP tbab;¤		tbab.hInst = NULL;¤		tbab.nID = (UINT)hBitmap;¤		return (int)::SendMessage(m_hWnd, TB_ADDBITMAP, (WPARAM)nNumButtons, (LPARAM)&tbab);¤	}¤	BOOL AddButtons(int nNumButtons, LPTBBUTTON lpButtons)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_ADDBUTTONS, nNumButtons, (LPARAM)lpButtons);¤	}¤	BOOL InsertButton(int nIndex, LPTBBUTTON lpButton)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_INSERTBUTTON, nIndex, (LPARAM)lpButton);¤	}¤	BOOL DeleteButton(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_DELETEBUTTON, nIndex, 0L);¤	}¤	UINT CommandToIndex(UINT nID) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, TB_COMMANDTOINDEX, nID, 0L);¤	}¤	void SaveState(HKEY hKeyRoot, LPCTSTR lpszSubKey, LPCTSTR lpszValueName)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TBSAVEPARAMS tbs;¤		tbs.hkr = hKeyRoot;¤		tbs.pszSubKey = lpszSubKey;¤		tbs.pszValueName = lpszValueName;¤		::SendMessage(m_hWnd, TB_SAVERESTORE, (WPARAM)TRUE, (LPARAM)&tbs);¤	}¤	void RestoreState(HKEY hKeyRoot, LPCTSTR lpszSubKey, LPCTSTR lpszValueName)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		TBSAVEPARAMS tbs;¤		tbs.hkr = hKeyRoot;¤		tbs.pszSubKey = lpszSubKey;¤		tbs.pszValueName = lpszValueName;¤		::SendMessage(m_hWnd, TB_SAVERESTORE, (WPARAM)FALSE, (LPARAM)&tbs);¤	}¤	void Customize()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TB_CUSTOMIZE, 0, 0L);¤	}¤	int AddString(UINT nStringID)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_ADDSTRING, (WPARAM)_Module.GetResourceInstance(), (LPARAM)nStringID);¤	}¤	int AddStrings(LPCTSTR lpszStrings)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_ADDSTRING, 0, (LPARAM)lpszStrings);¤	}¤	void AutoSize()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TB_AUTOSIZE, 0, 0L);¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	BOOL GetAnchorHighlight()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_GETANCHORHIGHLIGHT, 0, 0L);¤	}¤	BOOL SetAnchorHighlight(BOOL bEnable = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETANCHORHIGHLIGHT, bEnable, 0L);¤	}¤	BOOL GetButtonInfo(int nID, LPTBBUTTONINFO lptbbi)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_GETBUTTONINFO, 0, (LPARAM)lptbbi);¤	}¤	BOOL SetButtonInfo(int nID, LPTBBUTTONINFO lptbbi)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETBUTTONINFO, 0, (LPARAM)lptbbi);¤	}¤	HIMAGELIST GetImageList()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TB_GETIMAGELIST, 0, 0L);¤	}¤	HIMAGELIST SetImageList(HIMAGELIST hImageList)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TB_SETIMAGELIST, 0, (LPARAM)hImageList);¤	}¤	HIMAGELIST GetDisabledImageList()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TB_GETDISABLEDIMAGELIST, 0, 0L);¤	}¤	HIMAGELIST SetDisabledImageList(HIMAGELIST hImageList)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TB_SETDISABLEDIMAGELIST, 0, (LPARAM)hImageList);¤	}¤	HIMAGELIST GetHotImageList()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TB_GETHOTIMAGELIST, 0, 0L);¤	}¤	HIMAGELIST SetHotImageList(HIMAGELIST hImageList)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TB_SETHOTIMAGELIST, 0, (LPARAM)hImageList);¤	}¤	int GetHotItem()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_GETHOTITEM, 0, 0L);¤	}¤	int SetHotItem(int nItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_SETHOTITEM, nItem, 0L);¤	}¤	DWORD GetStyle()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, TB_GETSTYLE, 0, 0L);¤	}¤//REVIEW - return value?¤	void SetStyle(DWORD dwStyle)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TB_SETSTYLE, 0, dwStyle);¤	}¤	DWORD GetBitmapFlags()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, TB_GETBITMAPFLAGS, 0, 0L);¤	}¤	DWORD GetButtonSize()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, TB_GETBUTTONSIZE, 0, 0L);¤	}¤	HRESULT GetObject(REFIID iid, LPVOID* ppvObject)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HRESULT)::SendMessage(m_hWnd, TB_GETOBJECT, (WPARAM)&iid, (LPARAM)ppvObject);¤	}¤	BOOL GetRect(int nID, LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_GETRECT, nID, (LPARAM)lpRect);¤	}¤	int GetTextRows()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_GETTEXTROWS, 0, 0L);¤	}¤	BOOL HighlightButton(int nButtonID, BOOL bHighlight)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_HIGHLIGHTBUTTON, nButtonID, MAKELPARAM(bHighlight, 0));¤	}¤	BOOL IsButtonHighlighted(int nButtonID)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_ISBUTTONHIGHLIGHTED, nButtonID, 0L);¤	}¤	int LoadImages(int nBitmapID)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_LOADIMAGES, nBitmapID, (LPARAM)_Module.GetResourceInstance());¤	}¤	int LoadStdImages(int nBitmapID)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TB_LOADIMAGES, nBitmapID, (LPARAM)HINST_COMMCTRL);¤	}¤	BOOL ReplaceBitmap(LPTBREPLACEBITMAP ptbrb)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_REPLACEBITMAP, 0, (LPARAM)ptbrb);¤	}¤	BOOL SetButtonWidth(int cxMin, int cxMax)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETBUTTONWIDTH, 0, MAKELPARAM(cxMin, cxMax));¤	}¤	DWORD SetDrawTextFlags(DWORD dwMask, DWORD dwFlags)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, TB_SETDRAWTEXTFLAGS, dwMask, dwFlags);¤	}¤	BOOL SetIndent(int nIndent)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETINDENT, nIndent, 0L);¤	}¤	BOOL SetMaxTextRows(int nMaxTextRows)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TB_SETMAXTEXTROWS, nMaxTextRows, 0L);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CToolBarCtrlT<CWindow>      CToolBarCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CStatusBarCtrl¤¤template <class Base>¤class CStatusBarCtrlT : public Base¤{¤public:¤// Constructors¤	CStatusBarCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CStatusBarCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return STATUSCLASSNAME;¤	}¤¤	BOOL SetText(int nPane, LPCTSTR lpszText, int nType = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(nPane < 256);¤		return (BOOL)::SendMessage(m_hWnd, SB_SETTEXT, (nPane | nType), (LPARAM)lpszText);¤	}¤	int GetText(int nPane, LPSTR lpszText, int* pType = NULL) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(nPane < 256);¤		DWORD dw = ::SendMessage(m_hWnd, SB_GETTEXT, (WPARAM)nPane, (LPARAM)lpszText);¤		if(pType != NULL)¤			*pType = HIWORD(dw);¤		return LOWORD(dw);¤	}¤#ifndef _ATL_NO_COM¤	BOOL GetTextBSTR(int nPane, BSTR& bstrText, int* pType = NULL) const¤	{¤		USES_CONVERSION;¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(nPane < 256);¤		ATLASSERT(bstrText == NULL);¤		int nLength = LOWORD(::SendMessage(m_hWnd, SB_GETTEXTLENGTH, (WPARAM)nPane, 0L));¤		if(nLength == 0)¤			return FALSE;¤¤		LPSTR lpszText = (LPSTR)_alloca((nLength + 1) * sizeof(char));¤		if(!GetText(nPane, lpszText, pType))¤			return FALSE;¤¤		bstrText = ::SysAllocString(A2W(lpszText));¤		return (bstrText != NULL) ? TRUE : FALSE;¤	}¤#endif //!_ATL_NO_COM¤	int GetTextLength(int nPane, int* pType = NULL) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(nPane < 256);¤		DWORD dw = ::SendMessage(m_hWnd, SB_GETTEXTLENGTH, (WPARAM)nPane, 0L);¤		if (pType != NULL)¤			*pType = HIWORD(dw);¤		return LOWORD(dw);¤	}¤	BOOL SetParts(int nParts, int* pWidths)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, SB_SETPARTS, nParts, (LPARAM)pWidths);¤	}¤	int GetParts(int nParts, int* pParts) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, SB_GETPARTS, nParts, (LPARAM)pParts);¤	}¤	BOOL GetBorders(int* pBorders) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, SB_GETBORDERS, 0, (LPARAM)pBorders);¤	}¤	BOOL GetBorders(int& nHorz, int& nVert, int& nSpacing) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		int borders[3];¤		BOOL bResult = (BOOL)::SendMessage(m_hWnd, SB_GETBORDERS, 0, (LPARAM)&borders);¤		if (bResult)¤		{¤			nHorz = borders[0];¤			nVert = borders[1];¤			nSpacing = borders[2];¤		}¤		return bResult;¤	}¤	void SetMinHeight(int nMin)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, SB_SETMINHEIGHT, nMin, 0L);¤	}¤	BOOL SetSimple(BOOL bSimple = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, SB_SIMPLE, bSimple, 0L);¤	}¤	BOOL GetRect(int nPane, LPRECT lpRect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, SB_GETRECT, nPane, (LPARAM)lpRect);¤	}¤¤	// new common control support¤	BOOL IsSimple() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, SB_ISSIMPLE, 0, 0L);¤	}¤};¤¤typedef CStatusBarCtrlT<CWindow>    CStatusBarCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CTabCtrl¤¤template <class Base>¤class CTabCtrlT : public Base¤{¤public:¤// Constructors¤	CTabCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CTabCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return WC_TABCONTROL;¤	}¤¤	HIMAGELIST GetImageList() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TCM_GETIMAGELIST, 0, 0L);¤	}¤	HIMAGELIST SetImageList(HIMAGELIST hImageList)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, TCM_SETIMAGELIST, 0, (LPARAM)hImageList);¤	}¤	int GetItemCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TCM_GETITEMCOUNT, 0, 0L);¤	}¤	BOOL GetItem(int nItem, TC_ITEM* pTabCtrlItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TCM_GETITEM, nItem, (LPARAM)pTabCtrlItem);¤	}¤	BOOL SetItem(int nItem, TC_ITEM* pTabCtrlItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TCM_SETITEM, nItem, (LPARAM)pTabCtrlItem);¤	}¤	BOOL GetItemRect(int nItem, LPRECT lpRect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TCM_GETITEMRECT, nItem, (LPARAM)lpRect);¤	}¤	int GetCurSel() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TCM_GETCURSEL, 0, 0L);¤	}¤	int SetCurSel(int nItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TCM_SETCURSEL, nItem, 0L);¤	}¤	SIZE SetItemSize(SIZE size)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		DWORD dwSize = ::SendMessage(m_hWnd, TCM_SETITEMSIZE, 0, MAKELPARAM(size.cx, size.cy));¤		SIZE sizeRet;¤		sizeRet.cx = LOWORD(dwSize);¤		sizeRet.cy = HIWORD(dwSize);¤		return sizeRet;¤	}¤	void SetPadding(SIZE size)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TCM_SETPADDING, 0, MAKELPARAM(size.cx, size.cy));¤	}¤	int GetRowCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TCM_GETROWCOUNT, 0, 0L);¤	}¤	HWND GetTooltips() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TCM_GETTOOLTIPS, 0, 0L);¤	}¤	void SetTooltips(HWND hWndToolTip)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TCM_SETTOOLTIPS, (WPARAM)hWndToolTip, 0L);¤	}¤	int GetCurFocus() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TCM_GETCURFOCUS, 0, 0L);¤	}¤¤// Operations¤	BOOL InsertItem(int nItem, TC_ITEM* pTabCtrlItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TCM_INSERTITEM, nItem, (LPARAM)pTabCtrlItem);¤	}¤	BOOL DeleteItem(int nItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TCM_DELETEITEM, nItem, 0L);¤	}¤	BOOL DeleteAllItems()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TCM_DELETEALLITEMS, 0, 0L);¤	}¤	void AdjustRect(BOOL bLarger, LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TCM_ADJUSTRECT, bLarger, (LPARAM)lpRect);¤	}¤	void RemoveImage(int nImage)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TCM_REMOVEIMAGE, nImage, 0L);¤	}¤	int HitTest(TC_HITTESTINFO* pHitTestInfo) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TCM_HITTEST, 0, (LPARAM)pHitTestInfo);¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	DWORD GetExtendedStyle()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD)::SendMessage(m_hWnd, TCM_GETEXTENDEDSTYLE, 0, 0L);¤	}¤	DWORD SetExtendedStyle(DWORD dwExMask, DWORD dwExStyle)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD)::SendMessage(m_hWnd, TCM_SETEXTENDEDSTYLE, dwExMask, dwExStyle);¤	}¤	int SetMinTabWidth(int nWidth = -1)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TCM_SETMINTABWIDTH, 0, nWidth);¤	}¤	void DeselectAll(BOOL bExcludeFocus = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TCM_DESELECTALL, bExcludeFocus, 0L);¤	}¤	BOOL HighlightItem(int nIndex, BOOL bHighlight = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TCM_HIGHLIGHTITEM, nIndex, MAKELPARAM(bHighlight, 0));¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CTabCtrlT<CWindow>  CTabCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CToolTipCtrl¤¤class CToolInfo : public TOOLINFO¤{¤public:¤/**/    TCHAR m_szText[256];¤¤/**/    operator LPTOOLINFO() { return this; }¤/**/    operator LPARAM() { return (LPARAM)this; }¤¤	void Fill(HWND hWnd, UINT nIDTool)¤	{¤		memset(this, 0, sizeof(TOOLINFO));¤		cbSize = sizeof(TOOLINFO);¤		if(nIDTool == 0)¤		{¤			hwnd = ::GetParent(hWnd);¤			uFlags = TTF_IDISHWND;¤			uId = (UINT)(UINT_PTR)hWnd;¤		}¤		else¤		{¤			hwnd = hWnd;¤			uFlags = 0;¤			uId = nIDTool;¤		}¤	}¤};¤¤template <class Base>¤class CToolTipCtrlT : public Base¤{¤public:¤// Constructors¤	CToolTipCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CToolTipCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return TOOLTIPS_CLASS;¤	}¤¤	void GetText(LPTOOLINFO lpToolInfo) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_GETTEXT, 0, (LPARAM)&lpToolInfo);¤	}¤	void GetText(LPTSTR lpstrText, HWND hWnd, UINT nIDTool = 0) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(hWnd != NULL);¤¤//      TOOLINFO ti;¤//      FillInToolInfo(ti, hWnd, nIDTool);¤		CToolInfo ti;¤		ti.Fill(hWnd, nIDTool);¤		ti.lpszText = lpstrText;    // should be 256 characters long¤		::SendMessage(m_hWnd, TTM_GETTEXT, 0, ti);¤	}¤	BOOL GetToolInfo(LPTOOLINFO lpToolInfo) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TTM_GETTOOLINFO, 0, (LPARAM)lpToolInfo);¤	}¤	BOOL GetToolInfo(HWND hWnd, UINT nIDTool, UINT* puFlags, LPRECT lpRect, LPTSTR lpstrText) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(hWnd != NULL);¤¤		TOOLINFO ti;¤		FillInToolInfo(ti, hWnd, nIDTool);¤		ti.lpszText = lpstrText;¤		BOOL bRet = (BOOL)::SendMessage(m_hWnd, TTM_GETTOOLINFO, 0, (LPARAM)&ti);¤		if(bRet)¤		{¤			*puFlags = ti.uFlags;¤			memcpy(lpRect, &(ti.rect), sizeof(RECT));¤		}¤		return bRet;¤	}¤	void SetToolInfo(LPTOOLINFO lpToolInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_SETTOOLINFO, 0, (LPARAM)lpToolInfo);¤	}¤	void SetToolRect(LPTOOLINFO lpToolInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_NEWTOOLRECT, 0, (LPARAM)lpToolInfo);¤	}¤	void SetToolRect(HWND hWnd, UINT nIDTool, LPCRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(hWnd != NULL);¤		ATLASSERT(nIDTool != 0);¤¤		TOOLINFO ti;¤		FillInToolInfo(ti, hWnd, nIDTool);¤		memcpy(&ti.rect, lpRect, sizeof(RECT));¤		::SendMessage(m_hWnd, TTM_NEWTOOLRECT, 0, (LPARAM)&ti);¤	}¤	int GetToolCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TTM_GETTOOLCOUNT, 0, 0L);¤	}¤¤// Operations¤	void Activate(BOOL bActivate)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_ACTIVATE, bActivate, 0L);¤	}¤	BOOL AddTool(LPTOOLINFO lpToolInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TTM_ADDTOOL, 0, (LPARAM)lpToolInfo);¤	}¤	BOOL AddTool(HWND hWnd, LPCTSTR lpszText = LPSTR_TEXTCALLBACK, LPCRECT lpRectTool = NULL, UINT nIDTool = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(hWnd != NULL);¤		ATLASSERT(lpszText != NULL);¤		// the toolrect and toolid must both be zero or both valid¤		ATLASSERT((lpRectTool != NULL && nIDTool != 0) || (lpRectTool == NULL && nIDTool == 0));¤¤		TOOLINFO ti;¤		FillInToolInfo(ti, hWnd, nIDTool);¤		if(lpRectTool != NULL)¤			memcpy(&ti.rect, lpRectTool, sizeof(RECT));¤		ti.hinst = _Module.GetResourceInstance();   // needed only if lpszText is from MAKEINTRESOURCE¤		ti.lpszText = (LPTSTR)lpszText;¤		return (BOOL)::SendMessage(m_hWnd, TTM_ADDTOOL, 0, (LPARAM)&ti);¤	}¤	BOOL AddTool(HWND hWnd, UINT nIDText, LPCRECT lpRectTool = NULL, UINT nIDTool = 0)¤	{¤		ATLASSERT(nIDText != 0);¤		return AddTool(hWnd, MAKEINTRESOURCE(nIDText), lpRectTool, nIDTool);¤	}¤	void DelTool(LPTOOLINFO lpToolInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_DELTOOL, 0, (LPARAM)lpToolInfo);¤	}¤	void DelTool(HWND hWnd, UINT nIDTool = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(hWnd != NULL);¤¤		TOOLINFO ti;¤		FillInToolInfo(ti, hWnd, nIDTool);¤		::SendMessage(m_hWnd, TTM_DELTOOL, 0, (LPARAM)&ti);¤	}¤	BOOL HitTest(LPTTHITTESTINFO lpHitTestInfo) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TTM_HITTEST, 0, (LPARAM)lpHitTestInfo);¤	}¤	BOOL HitTest(HWND hWnd, POINT pt, LPTOOLINFO lpToolInfo) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(hWnd != NULL);¤		ATLASSERT(lpToolInfo != NULL);¤¤		TTHITTESTINFO hti;¤		memset(&hti, 0, sizeof(hti));¤		hti.ti.cbSize = sizeof(TOOLINFO);¤		hti.hwnd = hWnd;¤		hti.pt.x = pt.x;¤		hti.pt.y = pt.y;¤		if((BOOL)::SendMessage(m_hWnd, TTM_HITTEST, 0, (LPARAM)&hti))¤		{¤			memcpy(lpToolInfo, &hti.ti, sizeof(TOOLINFO));¤			return TRUE;¤		}¤		return FALSE;¤	}¤	void RelayEvent(LPMSG lpMsg)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_RELAYEVENT, 0, (LPARAM)lpMsg);¤	}¤	void SetDelayTime(UINT nDelay)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_SETDELAYTIME, 0, nDelay);¤	}¤	void UpdateTipText(LPTOOLINFO lpToolInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_UPDATETIPTEXT, 0, (LPARAM)lpToolInfo);¤	}¤	void UpdateTipText(LPCTSTR lpszText, HWND hWnd, UINT nIDTool = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(hWnd != NULL);¤¤		TOOLINFO ti;¤		FillInToolInfo(ti, hWnd, nIDTool);¤		ti.hinst = _Module.GetResourceInstance();¤		ti.lpszText = (LPTSTR)lpszText;¤		::SendMessage(m_hWnd, TTM_UPDATETIPTEXT, 0, (LPARAM)&ti);¤	}¤	void UpdateTipText(UINT nIDText, HWND hWnd, UINT nIDTool = 0)¤	{¤		ATLASSERT(nIDText != 0);¤		UpdateTipText(MAKEINTRESOURCE(nIDText), hWnd, nIDTool);¤	}¤¤// Implementation¤/**/    static void FillInToolInfo(TOOLINFO& ti, HWND hWnd, UINT nIDTool)¤	{¤		memset(&ti, 0, sizeof(ti));¤		ti.cbSize = sizeof(ti);¤		if (nIDTool == 0)¤		{¤			ti.hwnd = ::GetParent(hWnd);¤			ti.uFlags = TTF_IDISHWND;¤			ti.uId = (UINT)hWnd;¤		}¤		else¤		{¤			ti.hwnd = hWnd;¤			ti.uFlags = 0;¤			ti.uId = nIDTool;¤		}¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	int GetDelayTime(DWORD dwType)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TTM_GETDELAYTIME, dwType, 0L);¤	}¤	void SetDelayTime(DWORD dwType, int nTime)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_SETDELAYTIME, dwType, MAKELPARAM(nTime, 0));¤	}¤	void GetMargin(LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_GETMARGIN, 0, (LPARAM)lpRect);¤	}¤	void SetMargin(LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_SETMARGIN, 0, (LPARAM)lpRect);¤	}¤	int GetMaxTipWidth()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TTM_GETMAXTIPWIDTH, 0, 0L);¤	}¤	int SetMaxTipWidth(int nWidth)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TTM_SETMAXTIPWIDTH, 0, nWidth);¤	}¤	COLORREF GetTipBkColor()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, TTM_GETTIPBKCOLOR, 0, 0L);¤	}¤	void SetTipBkColor(COLORREF clr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_SETTIPBKCOLOR, (WPARAM)clr, 0L);¤	}¤	COLORREF GetTipTextColor()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, TTM_GETTIPTEXTCOLOR, 0, 0L);¤	}¤	void SetTipTextColor(COLORREF clr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_SETTIPTEXTCOLOR, (WPARAM)clr, 0L);¤	}¤	BOOL GetCurrentTool(LPTOOLINFO lpToolInfo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TTM_GETCURRENTTOOL, 0, (LPARAM)lpToolInfo);¤	}¤	void Pop()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_POP, 0, 0L);¤	}¤	void TrackActivate(LPTOOLINFO lpToolInfo, BOOL bActivate)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_TRACKACTIVATE, bActivate, (LPARAM)lpToolInfo);¤	}¤	void TrackPosition(int xPos, int yPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TTM_TRACKPOSITION, 0, MAKELPARAM(xPos, yPos));¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CToolTipCtrlT<CWindow>      CToolTipCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CTrackBarCtrl¤¤template <class Base>¤class CTrackBarCtrlT : public Base¤{¤public:¤// Constructors¤	CTrackBarCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CTrackBarCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return TRACKBAR_CLASS;¤	}¤¤	int GetLineSize() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_GETLINESIZE, 0, 0L);¤	}¤	int SetLineSize(int nSize)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_SETLINESIZE, 0, nSize);¤	}¤	int GetPageSize() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_GETPAGESIZE, 0, 0L);¤	}¤	int SetPageSize(int nSize)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_SETPAGESIZE, 0, nSize);¤	}¤	int GetRangeMax() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_GETRANGEMAX, 0, 0L);¤	}¤	int GetRangeMin() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_GETRANGEMIN, 0, 0L);¤	}¤	void GetRange(int& nMin, int& nMax) const¤	{¤		nMin = GetRangeMin();¤		nMax = GetRangeMax();¤	}¤	void SetRangeMin(int nMin, BOOL bRedraw = FALSE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_SETRANGEMIN, bRedraw, nMin);¤	}¤	void SetRangeMax(int nMax, BOOL bRedraw = FALSE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_SETRANGEMAX, bRedraw, nMax);¤	}¤	void SetRange(int nMin, int nMax, BOOL bRedraw = FALSE)¤	{¤		SetRangeMin(nMin, bRedraw);¤		SetRangeMax(nMax, bRedraw);¤	}¤	int GetSelStart() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, TBM_GETSELSTART, 0, 0L);¤	}¤	int GetSelEnd() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, TBM_GETSELEND, 0, 0L);¤	}¤	void GetSelection(int& nMin, int& nMax) const¤	{¤		nMin = GetSelStart();¤		nMax = GetSelEnd();¤	}¤	void SetSelStart(int nMin)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_SETSELSTART, 0, (LPARAM)nMin);¤	}¤	void SetSelEnd(int nMax)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_SETSELEND, 0, (LPARAM)nMax);¤	}¤	void SetSelection(int nMin, int nMax)¤	{¤		SetSelStart(nMin);¤		SetSelEnd(nMin);¤	}¤	void GetChannelRect(LPRECT lprc) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_GETCHANNELRECT, 0, (LPARAM)lprc);¤	}¤	void GetThumbRect(LPRECT lprc) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_GETTHUMBRECT, 0, (LPARAM)lprc);¤	}¤	int GetPos() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_GETPOS, 0, 0L);¤	}¤	void SetPos(int nPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_SETPOS, TRUE, nPos);¤	}¤	UINT GetNumTics() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, TBM_GETNUMTICS, 0, 0L);¤	}¤	DWORD* GetTicArray() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD*)::SendMessage(m_hWnd, TBM_GETPTICS, 0, 0L);¤	}¤	int GetTic(int nTic) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_GETTIC, nTic, 0L);¤	}¤	int GetTicPos(int nTic) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_GETTICPOS, nTic, 0L);¤	}¤	BOOL SetTic(int nTic)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, TBM_SETTIC, 0, nTic);¤	}¤	void SetTicFreq(int nFreq)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_SETTICFREQ, nFreq, 0L);¤	}¤¤// Operations¤	void ClearSel(BOOL bRedraw = FALSE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_CLEARSEL, bRedraw, 0L);¤	}¤	void VerifyPos()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_SETPOS, FALSE, 0L);¤	}¤	void ClearTics(BOOL bRedraw = FALSE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_CLEARTICS, bRedraw, 0L);¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	HWND GetBuddy(BOOL bLeft = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TBM_GETBUDDY, bLeft, 0L);¤	}¤	HWND SetBuddy(HWND hWndBuddy, BOOL bLeft = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TBM_SETBUDDY, bLeft, (LPARAM)hWndBuddy);¤	}¤	HWND GetToolTips()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, TBM_GETTOOLTIPS, 0, 0L);¤	}¤	void SetToolTips(HWND hWndTT)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, TBM_SETTOOLTIPS, (WPARAM)hWndTT, 0L);¤	}¤	int SetTipSide(int nSide)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, TBM_SETTIPSIDE, nSide, 0L);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CTrackBarCtrlT<CWindow>     CTrackBarCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CUpDownCtrl¤¤template <class Base>¤class CUpDownCtrlT : public Base¤{¤public:¤// Constructors¤	CUpDownCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CUpDownCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return UPDOWN_CLASS;¤	}¤¤	BOOL SetAccel(int nAccel, UDACCEL* pAccel)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)LOWORD(::SendMessage(m_hWnd, UDM_SETACCEL, nAccel, (LPARAM)pAccel));¤	}¤	UINT GetAccel(int nAccel, UDACCEL* pAccel) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)LOWORD(::SendMessage(m_hWnd, UDM_GETACCEL, nAccel, (LPARAM)pAccel));¤	}¤	int SetBase(int nBase)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, UDM_SETBASE, nBase, 0L);¤	}¤	UINT GetBase() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)LOWORD(::SendMessage(m_hWnd, UDM_GETBASE, 0, 0L));¤	}¤	HWND SetBuddy(HWND hWndBuddy)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, UDM_SETBUDDY, (WPARAM)hWndBuddy, 0L);¤	}¤	HWND GetBuddy() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, UDM_GETBUDDY, 0, 0L);¤	}¤	int SetPos(int nPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)(short)LOWORD(::SendMessage(m_hWnd, UDM_SETPOS, 0, MAKELPARAM(nPos, 0)));¤	}¤	int GetPos() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, UDM_GETPOS, 0, 0L);¤	}¤	void SetRange(int nLower, int nUpper)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, UDM_SETRANGE, 0, MAKELPARAM(nUpper, nLower));¤	}¤	DWORD GetRange() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD)::SendMessage(m_hWnd, UDM_GETRANGE, 0, 0L);¤	}¤	void GetRange(int& nLower, int& nUpper) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		DWORD dwRet = ::SendMessage(m_hWnd, UDM_GETRANGE, 0, 0L);¤		nLower = (int)(short)HIWORD(dwRet);¤		nUpper = (int)(short)LOWORD(dwRet);¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	void SetRange32(int nLower, int nUpper)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, UDM_SETRANGE32, nLower, nUpper);¤	}¤	void GetRange32(int& nLower, int& nUpper) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, UDM_GETRANGE32, (WPARAM)&nLower, (LPARAM)&nUpper);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CUpDownCtrlT<CWindow>       CUpDownCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CProgressBarCtrl¤¤template <class Base>¤class CProgressBarCtrlT : public Base¤{¤public:¤// Constructors¤	CProgressBarCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CProgressBarCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return PROGRESS_CLASS;¤	}¤¤	DWORD SetRange(int nLower, int nUpper)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD)::SendMessage(m_hWnd, PBM_SETRANGE, 0, MAKELPARAM(nLower, nUpper));¤	}¤	int SetPos(int nPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)LOWORD(::SendMessage(m_hWnd, PBM_SETPOS, nPos, 0L));¤	}¤	int OffsetPos(int nPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)LOWORD(::SendMessage(m_hWnd, PBM_DELTAPOS, nPos, 0L));¤	}¤	int SetStep(int nStep)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)LOWORD(::SendMessage(m_hWnd, PBM_SETSTEP, nStep, 0L));¤	}¤¤// Operations¤	int StepIt()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int) LOWORD(::SendMessage(m_hWnd, PBM_STEPIT, 0, 0L));¤	}¤¤	// new common control support¤#if (_WIN32_IE >= 0x0400)¤	UINT GetPos()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, PBM_GETPOS, 0, 0L);¤	}¤	void GetRange(PPBRANGE pPBRange)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(pPBRange != NULL);¤		::SendMessage(m_hWnd, PBM_GETRANGE, TRUE, (LPARAM)pPBRange);¤	}¤	int GetRangeLimit(BOOL bLimit)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, PBM_GETRANGE, bLimit, (LPARAM)NULL);¤	}¤	DWORD SetRange32(int nMin, int nMax)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD)::SendMessage(m_hWnd, PBM_SETRANGE32, nMin, nMax);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CProgressBarCtrlT<CWindow>  CProgressBarCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CHotKeyCtrl¤¤template <class Base>¤class CHotKeyCtrlT : public Base¤{¤public:¤// Constructors¤	CHotKeyCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CHotKeyCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return HOTKEY_CLASS;¤	}¤¤	void SetHotKey(WORD wVirtualKeyCode, WORD wModifiers)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, HKM_SETHOTKEY, MAKEWORD(wVirtualKeyCode, wModifiers), 0L);¤	}¤	DWORD GetHotKey() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, HKM_GETHOTKEY, 0, 0L);¤	}¤	void GetHotKey(WORD &wVirtualKeyCode, WORD &wModifiers) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		DWORD dw = ::SendMessage(m_hWnd, HKM_GETHOTKEY, 0, 0L);¤		wVirtualKeyCode = LOBYTE(LOWORD(dw));¤		wModifiers = HIBYTE(LOWORD(dw));¤	}¤¤// Operations¤	void SetRules(WORD wInvalidComb, WORD wModifiers)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, HKM_SETRULES, wInvalidComb, MAKELPARAM(wModifiers, 0));¤	}¤};¤¤typedef CHotKeyCtrlT<CWindow>       CHotKeyCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CAnimateCtrl¤¤template <class Base>¤class CAnimateCtrlT : public Base¤{¤public:¤// Constructors¤	CAnimateCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CAnimateCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Operations¤	static LPCTSTR GetWndClassName()¤	{¤		return ANIMATE_CLASS;¤	}¤¤	BOOL Open(LPCTSTR lpszFileName)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, ACM_OPEN, 0, (LPARAM)lpszFileName);¤	}¤	BOOL Open(UINT nID)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, ACM_OPEN, 0, (LPARAM)MAKEINTRESOURCE(nID));¤	}¤	BOOL Play(UINT nFrom, UINT nTo, UINT nRep)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, ACM_PLAY, nRep, MAKELPARAM(nFrom, nTo));¤	}¤	BOOL Stop()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, ACM_STOP, 0, 0L);¤	}¤	BOOL Close()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, ACM_OPEN, 0, 0L);¤	}¤	BOOL Seek(UINT nTo)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, ACM_PLAY, 0, MAKELPARAM(nTo, nTo));¤	}¤};¤¤typedef CAnimateCtrlT<CWindow>      CAnimateCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CRichEditCtrl¤¤#include <richedit.h>¤#include <richole.h>¤¤#ifdef _UNICODE¤#if (_RICHEDIT_VER == 0x0100)¤#undef RICHEDIT_CLASS¤#define RICHEDIT_CLASS  L"RICHEDIT"¤#endif //(_RICHEDIT_VER == 0x0100)¤#endif //_UNICODE¤¤template <class Base>¤class CRichEditCtrlT : public Base¤{¤public:¤// Constructors¤	CRichEditCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CRichEditCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return RICHEDIT_CLASS;¤	}¤¤	BOOL CanUndo() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_CANUNDO, 0, 0L);¤	}¤	int GetLineCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_GETLINECOUNT, 0, 0L);¤	}¤	BOOL GetModify() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_GETMODIFY, 0, 0L);¤	}¤	void SetModify(BOOL bModified = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETMODIFY, bModified, 0L);¤	}¤	void GetRect(LPRECT lpRect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_GETRECT, 0, (LPARAM)lpRect);¤	}¤	POINT GetCharPos(long lChar) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		POINT pt;¤		::SendMessage(m_hWnd, EM_POSFROMCHAR, (WPARAM)&pt, (LPARAM)lChar);¤		return pt;¤	}¤	UINT SetOptions(WORD wOp, DWORD dwFlags)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, EM_SETOPTIONS, (WPARAM)wOp, (LPARAM)dwFlags);¤	}¤¤	// NOTE: first word in lpszBuffer must contain the size of the buffer!¤	int GetLine(int nIndex, LPTSTR lpszBuffer) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_GETLINE, nIndex, (LPARAM)lpszBuffer);¤	}¤	int GetLine(int nIndex, LPTSTR lpszBuffer, int nMaxLength) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		*(LPINT)lpszBuffer = nMaxLength;¤		return (int)::SendMessage(m_hWnd, EM_GETLINE, nIndex, (LPARAM)lpszBuffer);¤	}¤¤	BOOL CanPaste(UINT nFormat = 0) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_CANPASTE, nFormat, 0L);¤	}¤	void GetSel(long& nStartChar, long& nEndChar) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		CHARRANGE cr;¤		::SendMessage(m_hWnd, EM_EXGETSEL, 0, (LPARAM)&cr);¤		nStartChar = cr.cpMin;¤		nEndChar = cr.cpMax;¤	}¤	void GetSel(CHARRANGE &cr) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_EXGETSEL, 0, (LPARAM)&cr);¤	}¤	void LimitText(long nChars = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_EXLIMITTEXT, 0, nChars);¤	}¤	long LineFromChar(long nIndex) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, EM_EXLINEFROMCHAR, 0, nIndex);¤	}¤	int SetSel(long nStartChar, long nEndChar)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		CHARRANGE cr;¤		cr.cpMin = nStartChar;¤		cr.cpMax = nEndChar;¤		return (int)::SendMessage(m_hWnd, EM_EXSETSEL, 0, (LPARAM)&cr);¤	}¤	int SetSel(CHARRANGE &cr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_EXSETSEL, 0, (LPARAM)&cr);¤	}¤	DWORD GetDefaultCharFormat(CHARFORMAT &cf) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		cf.cbSize = sizeof(CHARFORMAT);¤		return (DWORD)::SendMessage(m_hWnd, EM_GETCHARFORMAT, 0, (LPARAM)&cf);¤	}¤	DWORD GetSelectionCharFormat(CHARFORMAT &cf) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		cf.cbSize = sizeof(CHARFORMAT);¤		return (DWORD)::SendMessage(m_hWnd, EM_GETCHARFORMAT, 1, (LPARAM)&cf);¤	}¤	long GetEventMask() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, EM_GETEVENTMASK, 0, 0L);¤	}¤	long GetLimitText() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, EM_GETLIMITTEXT, 0, 0L);¤	}¤	DWORD GetParaFormat(PARAFORMAT &pf) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		pf.cbSize = sizeof(PARAFORMAT);¤		return (DWORD)::SendMessage(m_hWnd, EM_GETPARAFORMAT, 0, (LPARAM)&pf);¤	}¤	// richedit EM_GETSELTEXT is ANSI¤	long GetSelText(LPSTR lpBuf) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, EM_GETSELTEXT, 0, (LPARAM)lpBuf);¤	}¤#ifndef _ATL_NO_COM¤	BOOL GetSelTextBSTR(BSTR& bstrText) const¤	{¤		USES_CONVERSION;¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(bstrText == NULL);¤¤		CHARRANGE cr;¤		cr.cpMin = cr.cpMax = 0;¤		::SendMessage(m_hWnd, EM_EXGETSEL, 0, (LPARAM)&cr);¤		LPSTR lpstrText = (char*)_alloca((cr.cpMax - cr.cpMin + 1) * 2);¤		lpstrText[0] = 0;¤		if(::SendMessage(m_hWnd, EM_GETSELTEXT, 0, (LPARAM)lpstrText) == 0)¤			return FALSE;¤¤		bstrText = ::SysAllocString(A2W(lpstrText));¤		return (bstrText != NULL) ? TRUE : FALSE;¤	}¤#endif //!_ATL_NO_COM¤	WORD GetSelectionType() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (WORD)::SendMessage(m_hWnd, EM_SELECTIONTYPE, 0, 0L);¤	}¤	COLORREF SetBackgroundColor(BOOL bSysColor, COLORREF cr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, EM_SETBKGNDCOLOR, bSysColor, cr);¤	}¤	BOOL SetDefaultCharFormat(CHARFORMAT &cf)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		cf.cbSize = sizeof(CHARFORMAT);¤		return (BOOL)::SendMessage(m_hWnd, EM_SETCHARFORMAT, 0, (LPARAM)&cf);¤	}¤	BOOL SetSelectionCharFormat(CHARFORMAT &cf)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		cf.cbSize = sizeof(CHARFORMAT);¤		return (BOOL)::SendMessage(m_hWnd, EM_SETCHARFORMAT, SCF_SELECTION, (LPARAM)&cf);¤	}¤	BOOL SetWordCharFormat(CHARFORMAT &cf)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		cf.cbSize = sizeof(CHARFORMAT);¤		return (BOOL)::SendMessage(m_hWnd, EM_SETCHARFORMAT, SCF_SELECTION|SCF_WORD, (LPARAM)&cf);¤	}¤	DWORD SetEventMask(DWORD dwEventMask)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (DWORD)::SendMessage(m_hWnd, EM_SETEVENTMASK, 0, dwEventMask);¤	}¤	BOOL SetParaFormat(PARAFORMAT &pf)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		pf.cbSize = sizeof(PARAFORMAT);¤		return (BOOL)::SendMessage(m_hWnd, EM_SETPARAFORMAT, 0, (LPARAM)&pf);¤	}¤	BOOL SetTargetDevice(HDC hDC, long lLineWidth)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_SETTARGETDEVICE, (WPARAM)hDC, lLineWidth);¤	}¤	long GetTextLength() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, WM_GETTEXTLENGTH, 0, 0L);¤	}¤	BOOL SetReadOnly(BOOL bReadOnly = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_SETREADONLY, bReadOnly, 0L);¤	}¤	int GetFirstVisibleLine() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_GETFIRSTVISIBLELINE, 0, 0L);¤	}¤¤// Operations¤	void EmptyUndoBuffer()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_EMPTYUNDOBUFFER, 0, 0L);¤	}¤¤	int LineIndex(int nLine = -1) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_LINEINDEX, nLine, 0L);¤	}¤	int LineLength(int nLine = -1) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, EM_LINELENGTH, nLine, 0L);¤	}¤	BOOL LineScroll(int nLines, int nChars = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_LINESCROLL, nChars, nLines);¤	}¤	void ReplaceSel(LPCTSTR lpszNewText, BOOL bCanUndo = FALSE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_REPLACESEL, (WPARAM) bCanUndo, (LPARAM)lpszNewText);¤	}¤	void SetRect(LPCRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SETRECT, 0, (LPARAM)lpRect);¤	}¤¤	BOOL DisplayBand(LPRECT pDisplayRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_DISPLAYBAND, 0, (LPARAM)pDisplayRect);¤	}¤	long FindText(DWORD dwFlags, FINDTEXTEX* pFindText) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, EM_FINDTEXTEX, dwFlags, (LPARAM)pFindText);¤	}¤	long FormatRange(FORMATRANGE* pfr, BOOL bDisplay = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, EM_FORMATRANGE, (WPARAM)bDisplay, (LPARAM)pfr);¤	}¤	void HideSelection(BOOL bHide, BOOL bPerm)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_HIDESELECTION, bHide, bPerm);¤	}¤	void PasteSpecial(UINT nClipFormat, DWORD dvAspect = 0, HMETAFILE hMF = 0)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		REPASTESPECIAL reps;¤		reps.dwAspect = dvAspect;¤		reps.dwParam = (DWORD)hMF;¤		::SendMessage(m_hWnd, EM_PASTESPECIAL, nClipFormat, (LPARAM)&reps);¤	}¤	void RequestResize()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_REQUESTRESIZE, 0, 0L);¤	}¤	long StreamIn(int nFormat, EDITSTREAM& es)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, EM_STREAMIN, nFormat, (LPARAM)&es);¤	}¤	long StreamOut(int nFormat, EDITSTREAM& es)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (long)::SendMessage(m_hWnd, EM_STREAMOUT, nFormat, (LPARAM)&es);¤	}¤¤	// Additional operations¤	void ScrollCaret()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, EM_SCROLLCARET, 0, 0L);¤	}¤	int InsertText(long nInsertAfterChar, LPCTSTR lpstrText, BOOL bCanUndo = FALSE)¤	{¤		int nRet = SetSel(nInsertAfterChar, nInsertAfterChar);¤		ReplaceSel(lpstrText, bCanUndo);¤		return nRet;¤	}¤	int AppendText(LPCTSTR lpstrText, BOOL bCanUndo = FALSE)¤	{¤		return InsertText(GetWindowTextLength(), lpstrText, bCanUndo);¤	}¤¤	// Clipboard operations¤	BOOL Undo()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_UNDO, 0, 0L);¤	}¤	void Clear()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_CLEAR, 0, 0L);¤	}¤	void Copy()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_COPY, 0, 0L);¤	}¤	void Cut()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_CUT, 0, 0L);¤	}¤	void Paste()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, WM_PASTE, 0, 0L);¤	}¤¤// OLE support¤	IRichEditOle* GetIRichEditOle() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		IRichEditOle *pRichItem = NULL;¤		::SendMessage(m_hWnd, EM_GETOLEINTERFACE, 0, (LPARAM)&pRichItem);¤		return pRichItem;¤	}¤	BOOL SetOLECallback(IRichEditOleCallback* pCallback)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, EM_SETOLECALLBACK, 0, (LPARAM)pCallback);¤	}¤};¤¤typedef CRichEditCtrlT<CWindow>     CRichEditCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CDragListBox¤¤template <class Base>¤class CDragListBoxT : public CListBoxT< Base >¤{¤public:¤// Constructors¤	CDragListBoxT(HWND hWnd = NULL) : CListBoxT< Base >(hWnd) { }¤¤	CDragListBoxT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Operations¤	BOOL MakeDragList()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(!(GetStyle() & LBS_MULTIPLESEL));¤		BOOL bRet = ::MakeDragList(m_hWnd);¤		UINT& uMsg = GetDragListMessage();¤		if(uMsg == 0)¤		{¤/*?*/           ::EnterCriticalSection(&_Module.m_csWindowCreate);¤			if(uMsg == 0)¤				uMsg = ::RegisterWindowMessage(DRAGLISTMSGSTRING);¤/*?*/           ::LeaveCriticalSection(&_Module.m_csWindowCreate);¤		}¤		ATLASSERT(uMsg != 0);¤		return bRet;¤	}¤¤	int LBItemFromPt(POINT pt, BOOL bAutoScroll = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::LBItemFromPt(m_hWnd, pt, bAutoScroll);¤	}¤¤	void DrawInsert(int nItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::DrawInsert(GetParent(), m_hWnd, nItem);¤	}¤¤	static UINT& GetDragListMessage()¤	{¤		static UINT m_uDragListMessage = 0;¤		return m_uDragListMessage;¤	}¤};¤¤typedef CDragListBoxT<CWindow>      CDragListBox;¤¤template <class T>¤class CDragListNotifyImpl¤{¤public:¤	BEGIN_MSG_MAP(CDragListNotifyImpl< T >)¤		MESSAGE_HANDLER(CDragList::GetDragListMessage(), OnDragListNotify)¤	END_MSG_MAP()¤¤	LRESULT OnDragListNotify(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled)¤	{¤		if(uMsg == 0)   // message not registered¤		{¤			bHandled = FALSE;¤			return 1;¤		}¤		T* pT = static_cast<T*>(this);¤		LPDRAGLISTINFO lpDragListInfo = (LPDRAGLISTINFO)lParam;¤		LRESULT lRet = 0;¤		switch(lpDragListInfo->uNotification)¤		{¤		case DL_BEGINDRAG:¤			lRet = (LPARAM)pT->OnBeginDrag((int)wParam, lpDragListInfo->hWnd, lpDragListInfo->ptCursor);¤			break;¤		case DL_CANCELDRAG:¤			pT->OnCancelDrag((int)wParam, lpDragListInfo->hWnd, lpDragListInfo->ptCursor);¤			break;¤		case DL_DRAGGING:¤			lRet = (LPARAM)pT->OnDragging((int)wParam, lpDragListInfo->hWnd, lpDragListInfo->ptCursor);¤			break;¤		case DL_DROPPED:¤			pT->OnDropped((int)wParam, lpDragListInfo->hWnd, lpDragListInfo->ptCursor);¤			break;¤		default:¤			ATLTRACE2(atlTraceWindowing, 0, _T("Unknown DragListBox notification\n"));¤			bHandled = FALSE;   // don't handle it¤			break;¤		}¤		return lRet;¤	}¤¤	BOOL OnBeginDrag(int nCtlID, HWND hWndDragList, POINT ptCursor)¤	{¤		return TRUE;    // allow dragging¤	}¤	void OnCancelDrag(int nCtlID, HWND hWndDragList, POINT ptCursor)¤	{¤		// nothing to do¤	}¤	int OnDragging(int nCtlID, HWND hWndDragList, POINT ptCursor)¤	{¤		return 0;   // don't change cursor¤	}¤	void OnDropped(int nCtlID, HWND hWndDragList, POINT ptCursor)¤	{¤		// nothing to do¤	}¤};¤¤¤// --- New Windows Common Controls ---¤¤/////////////////////////////////////////////////////////////////////////////¤// CReBarCtrl¤¤template <class Base>¤class CReBarCtrlT : public Base¤{¤public:¤// Constructors¤	CReBarCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CReBarCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return REBARCLASSNAME;¤	}¤¤#if (_WIN32_IE >= 0x0400)¤	COLORREF GetTextColor() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, RB_GETTEXTCOLOR, 0, 0L);¤	}¤	COLORREF SetTextColor(COLORREF clr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, RB_SETTEXTCOLOR, 0, (LPARAM)clr);¤	}¤	COLORREF GetBkColor() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, RB_GETBKCOLOR, 0, 0L);¤	}¤	COLORREF SetBkColor(COLORREF clr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, RB_SETBKCOLOR, 0, (LPARAM)clr);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤	UINT GetBandCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, RB_GETBANDCOUNT, 0, 0L);¤	}¤	BOOL GetBandInfo(int nBand, LPREBARBANDINFO lprbbi) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, RB_GETBANDINFO, nBand, (LPARAM)lprbbi);¤	}¤	BOOL SetBandInfo(int nBand, LPREBARBANDINFO lprbbi)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, RB_SETBANDINFO, nBand, (LPARAM)lprbbi);¤	}¤	BOOL GetBarInfo(LPREBARINFO lprbi) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, RB_GETBARINFO, 0, (LPARAM)lprbi);¤	}¤	BOOL SetBarInfo(LPREBARINFO lprbi)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, RB_SETBARINFO, 0, (LPARAM)lprbi);¤	}¤#if (_WIN32_IE >= 0x0400)¤	UINT GetBarHeight() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, RB_GETBARHEIGHT, 0, 0L);¤	}¤	BOOL GetRect(int nBand, LPRECT lpRect) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, RB_GETRECT, nBand, (LPARAM)lpRect);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤	UINT GetRowCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, RB_GETROWCOUNT, 0, 0L);¤	}¤	UINT GetRowHeight(int nBand) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (UINT)::SendMessage(m_hWnd, RB_GETROWHEIGHT, nBand, 0L);¤	}¤#if (_WIN32_IE >= 0x0400)¤	HWND GetToolTips() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, RB_GETTOOLTIPS, 0, 0L);¤	}¤	void SetToolTips(HWND hwndToolTip)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_SETTOOLTIPS, (WPARAM)hwndToolTip, 0L);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤¤// Operations¤#if (_WIN32_IE >= 0x0400)¤	void BeginDrag(int nBand, DWORD dwPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_BEGINDRAG, nBand, dwPos);¤	}¤	void BeginDrag(int nBand, int xPos, int yPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_BEGINDRAG, nBand, MAKELPARAM(xPos, yPos));¤	}¤	void EndDrag()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_ENDDRAG, 0, 0L);¤	}¤	void DragMove(DWORD dwPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_DRAGMOVE, 0, dwPos);¤	}¤	void DragMove(int xPos, int yPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_DRAGMOVE, 0, MAKELPARAM(xPos, yPos));¤	}¤	void GetDropTarget(IDropTarget** ppDropTarget) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_GETDROPTARGET, 0, (LPARAM)ppDropTarget);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤	BOOL InsertBand(int nBand, LPREBARBANDINFO lprbbi)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		lprbbi->cbSize = sizeof(REBARBANDINFO);¤		return (BOOL)::SendMessage(m_hWnd, RB_INSERTBAND, nBand, (LPARAM)lprbbi);¤	}¤	BOOL DeleteBand(int nBand)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, RB_DELETEBAND, nBand, 0L);¤	}¤#if (_WIN32_IE >= 0x0400)¤	void MaximizeBand(int nBand)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_MAXIMIZEBAND, nBand, 0L);¤	}¤	void MinimizeBand(int nBand)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, RB_MINIMIZEBAND, nBand, 0L);¤	}¤	BOOL SizeToRect(LPRECT lpRect)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, RB_SIZETORECT, 0, (LPARAM)lpRect);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤	HWND SetNotifyWnd(HWND hWnd)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, RB_SETPARENT, (WPARAM)hWnd, 0L);¤	}¤#if (_WIN32_IE >= 0x0400)¤	int IdToIndex(UINT uBandID) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, RB_IDTOINDEX, uBandID, 0L);¤	}¤	int HitTest(LPRBHITTESTINFO lprbht) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, RB_HITTEST, 0, (LPARAM)lprbht);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤};¤¤typedef CReBarCtrlT<CWindow>        CReBarCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CComboBoxEx¤¤template <class Base>¤class CComboBoxExT : public CComboBoxT< Base >¤{¤public:¤// Constructors¤	CComboBoxExT(HWND hWnd = NULL) : CComboBoxT< Base >(hWnd) { }¤¤	CComboBoxExT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return WC_COMBOBOXEX;¤	}¤¤#if (_WIN32_IE >= 0x0400)¤	DWORD GetExtendedStyle() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, CBEM_GETEXTENDEDSTYLE, 0, 0L);¤	}¤	DWORD SetExtendedStyle(DWORD dwExMask, DWORD dwExStyle)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, CBEM_SETEXTENDEDSTYLE, dwExMask, dwExStyle);¤	}¤#endif //(_WIN32_IE >= 0x0400)¤	HIMAGELIST GetImageList() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, CBEM_GETIMAGELIST, 0, 0L);¤	}¤	HIMAGELIST SetImageList(HIMAGELIST hImageList)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HIMAGELIST)::SendMessage(m_hWnd, CBEM_SETIMAGELIST, 0, (LPARAM)hImageList);¤	}¤¤// Operations¤	int InsertItem(const COMBOBOXEXITEM FAR* lpcCBItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CBEM_INSERTITEM, 0, (LPARAM)lpcCBItem);¤	}¤	int DeleteItem(int nIndex)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, CBEM_DELETEITEM, nIndex, 0L);¤	}¤	BOOL GetItem(PCOMBOBOXEXITEM pCBItem) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, CBEM_GETITEM, 0, (LPARAM)pCBItem);¤	}¤	BOOL SetItem(const COMBOBOXEXITEM FAR* lpcCBItem)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, CBEM_SETITEM, 0, (LPARAM)lpcCBItem);¤	}¤	HWND GetComboCtrl() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, CBEM_GETCOMBOCONTROL, 0, 0L);¤	}¤	HWND GetEditCtrl() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, CBEM_GETEDITCONTROL, 0, 0L);¤	}¤	BOOL HasEditChanged() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, CBEM_HASEDITCHANGED, 0, 0L);¤	}¤};¤¤typedef CComboBoxExT<CWindow>       CComboBoxEx;¤¤/////////////////////////////////////////////////////////////////////////////¤// CDateTimePickerCtrl¤¤template <class Base>¤class CDateTimePickerCtrlT : public Base¤{¤public:¤// Constructors¤	CDateTimePickerCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CDateTimePickerCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Operations¤	static LPCTSTR GetWndClassName()¤	{¤		return DATETIMEPICK_CLASS;¤	}¤¤	BOOL SetFormat(LPTSTR lpszFormat)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, DTM_SETFORMAT, 0, (LPARAM)lpszFormat);¤	}¤	COLORREF GetMonthCalColor(int nColorType) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, DTM_GETMCCOLOR, nColorType, 0L);¤	}¤	COLORREF SetMonthCalColor(int nColorType, COLORREF clr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, DTM_SETMCCOLOR, nColorType, clr);¤	}¤#if (_WIN32_IE >= 0x0400)¤	HFONT GetMonthCalFont() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HFONT)::SendMessage(m_hWnd, DTM_GETMCFONT, 0, 0L);¤	}¤	void SetMonthCalFont(HFONT hFont, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, DTM_SETMCFONT, (WPARAM)hFont, MAKELPARAM(bRedraw, 0));¤	}¤#endif //(_WIN32_IE >= 0x0400)¤	DWORD GetRange(LPSYSTEMTIME lpSysTimeArray) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, DTM_GETRANGE, 0, (LPARAM)lpSysTimeArray);¤	}¤	BOOL SetRange(DWORD dwFlags, LPSYSTEMTIME lpSysTimeArray)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, DTM_SETRANGE, dwFlags, (LPARAM)lpSysTimeArray);¤	}¤	DWORD GetSystemTime(LPSYSTEMTIME lpSysTime) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, DTM_GETSYSTEMTIME, 0, (LPARAM)lpSysTime);¤	}¤	BOOL SetSystemTime(DWORD dwFlags, LPSYSTEMTIME lpSysTime)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, DTM_SETSYSTEMTIME, dwFlags, (LPARAM)lpSysTime);¤	}¤	HWND GetMonthCal() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (HWND)::SendMessage(m_hWnd, DTM_GETMONTHCAL, 0, 0L);¤	}¤};¤¤typedef CDateTimePickerCtrlT<CWindow>       CDateTimePickerCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CMonthCalendarCtrl¤¤template <class Base>¤class CMonthCalendarCtrlT : public Base¤{¤public:¤// Constructors¤	CMonthCalendarCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CMonthCalendarCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return MONTHCAL_CLASS;¤	}¤¤	COLORREF GetColor(int nColorType) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, MCM_GETCOLOR, nColorType, 0L);¤	}¤	COLORREF SetColor(int nColorType, COLORREF clr)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, MCM_SETCOLOR, nColorType, clr);¤	}¤	BOOL GetCurSel(LPSYSTEMTIME lpSysTime) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_GETCURSEL, 0, (LPARAM)lpSysTime);¤	}¤	BOOL SetCurSel(LPSYSTEMTIME lpSysTime)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_SETCURSEL, 0, (LPARAM)lpSysTime);¤	}¤	int GetFirstDayOfWeek(BOOL* pbLocaleVal = NULL) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		DWORD dwRet = ::SendMessage(m_hWnd, MCM_GETFIRSTDAYOFWEEK, 0, 0L);¤		if(pbLocaleVal != NULL)¤			*pbLocaleVal = HIWORD(dwRet);¤		return (int)LOWORD(dwRet);¤	}¤	int SetFirstDayOfWeek(int nDay, BOOL* pbLocaleVal = NULL)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		DWORD dwRet = ::SendMessage(m_hWnd, MCM_SETFIRSTDAYOFWEEK, 0, nDay);¤		if(pbLocaleVal != NULL)¤			*pbLocaleVal = HIWORD(dwRet);¤		return (int)LOWORD(dwRet);¤	}¤	int GetMaxSelCount() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, MCM_GETMAXSELCOUNT, 0, 0L);¤	}¤	BOOL SetMaxSelCount(int nMax)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_SETMAXSELCOUNT, nMax, 0L);¤	}¤	int GetMonthDelta() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, MCM_GETMONTHDELTA, 0, 0L);¤	}¤	int SetMonthDelta(int nDelta)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, MCM_SETMONTHDELTA, nDelta, 0L);¤	}¤	DWORD GetRange(LPSYSTEMTIME lprgSysTimeArray) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, MCM_GETRANGE, 0, (LPARAM)lprgSysTimeArray);¤	}¤	BOOL SetRange(DWORD dwFlags, LPSYSTEMTIME lprgSysTimeArray)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_SETRANGE, dwFlags, (LPARAM)lprgSysTimeArray);¤	}¤	BOOL GetSelRange(LPSYSTEMTIME lprgSysTimeArray) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_GETSELRANGE, 0, (LPARAM)lprgSysTimeArray);¤	}¤	BOOL SetSelRange(LPSYSTEMTIME lprgSysTimeArray)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_SETSELRANGE, 0, (LPARAM)lprgSysTimeArray);¤	}¤	BOOL GetToday(LPSYSTEMTIME lpSysTime) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_GETTODAY, 0, (LPARAM)lpSysTime);¤	}¤	void SetToday(LPSYSTEMTIME lpSysTime)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, MCM_SETTODAY, 0, (LPARAM)lpSysTime);¤	}¤	BOOL GetMinReqRect(LPRECT lpRectInfo) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_GETMINREQRECT, 0, (LPARAM)lpRectInfo);¤	}¤¤// Operations¤	int GetMonthRange(DWORD dwFlags, LPSYSTEMTIME lprgSysTimeArray) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, MCM_GETMONTHRANGE, dwFlags, (LPARAM)lprgSysTimeArray);¤	}¤	BOOL SetDayState(int nMonths, LPMONTHDAYSTATE lpDayStateArray)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, MCM_SETDAYSTATE, nMonths, (LPARAM)lpDayStateArray);¤	}¤	DWORD HitTest(PMCHITTESTINFO pMCHitTest) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::SendMessage(m_hWnd, MCM_HITTEST, 0, (LPARAM)pMCHitTest);¤	}¤};¤¤typedef CMonthCalendarCtrlT<CWindow>        CMonthCalendarCtrl;¤¤/////////////////////////////////////////////////////////////////////////////¤// CFlatScrollBar¤¤#if (_WIN32_IE >= 0x0400)¤¤template <class Base>¤class CFlatScrollBarT : public Base¤{¤public:¤// Constructors¤	CFlatScrollBarT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CFlatScrollBarT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤// Initialization¤	BOOL FlatSB_Initialize()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::InitializeFlatSB(m_hWnd);¤	}¤	HRESULT FlatSB_Uninitialize()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::UninitializeFlatSB(m_hWnd);¤	}¤¤// Attributes¤	BOOL FlatSB_GetScrollProp(UINT uIndex, LPINT lpnValue) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_GetScrollProp(m_hWnd, uIndex, lpnValue);¤	}¤	BOOL FlatSB_SetScrollProp(UINT uIndex, int nValue, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_SetScrollProp(m_hWnd, uIndex, nValue, bRedraw);¤	}¤¤	int FlatSB_GetScrollPos(int nBar) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_GetScrollPos(m_hWnd, nBar);¤	}¤¤	int FlatSB_SetScrollPos(int nBar, int nPos, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_SetScrollPos(m_hWnd, nBar, nPos, bRedraw);¤	}¤¤	BOOL FlatSB_GetScrollRange(int nBar, LPINT lpMinPos, LPINT lpMaxPos) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_GetScrollRange(m_hWnd, nBar, lpMinPos, lpMaxPos);¤	}¤¤	BOOL FlatSB_SetScrollRange(int nBar, int nMinPos, int nMaxPos, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_SetScrollRange(m_hWnd, nBar, nMinPos, nMaxPos, bRedraw);¤	}¤¤	BOOL FlatSB_GetScrollInfo(int nBar, LPSCROLLINFO lpScrollInfo) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_GetScrollInfo(m_hWnd, nBar, lpScrollInfo);¤	}¤¤	int FlatSB_SetScrollInfo(int nBar, LPSCROLLINFO lpScrollInfo, BOOL bRedraw = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_SetScrollInfo(m_hWnd, nBar, lpScrollInfo, bRedraw);¤	}¤¤// Operations¤	BOOL FlatSB_ShowScrollBar(UINT nBar, BOOL bShow = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_ShowScrollBar(m_hWnd, nBar, bShow);¤	}¤¤	BOOL FlatSB_EnableScrollBar(UINT uSBFlags, UINT uArrowFlags = ESB_ENABLE_BOTH)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return ::FlatSB_EnableScrollBar(m_hWnd, uSBFlags, uArrowFlags);¤	}¤};¤¤typedef CFlatScrollBarT<CWindow>    CFlatScrollBar;¤¤#endif //(_WIN32_IE >= 0x0400)¤¤/////////////////////////////////////////////////////////////////////////////¤// CIPAddressCtrl¤¤#if (_WIN32_IE >= 0x0400)¤¤template <class Base>¤class CIPAddressCtrlT : public Base¤{¤public:¤// Constructors¤	CIPAddressCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CIPAddressCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Atteributes¤	static LPCTSTR GetWndClassName()¤	{¤		return WC_IPADDRESS;¤	}¤¤	BOOL IsBlank() const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (BOOL)::SendMessage(m_hWnd, IPM_ISBLANK, 0, 0L);¤	}¤	int GetAddress(LPDWORD lpdwAddress) const¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, IPM_GETADDRESS, 0, (LPARAM)lpdwAddress);¤	}¤	void SetAddress(DWORD dwAddress)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, IPM_SETADDRESS, 0, dwAddress);¤	}¤	void ClearAddress()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, IPM_CLEARADDRESS, 0, 0L);¤	}¤	void SetRange(int nField, WORD wRange)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, IPM_SETRANGE, nField, wRange);¤	}¤	void SetRange(int nField, BYTE nMin, BYTE nMax)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, IPM_SETRANGE, nField, MAKEIPRANGE(nMin, nMax));¤	}¤	void SetFocus(int nField)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, IPM_SETFOCUS, nField, 0L);¤	}¤};¤¤typedef CIPAddressCtrlT<CWindow>        CIPAddressCtrl;¤¤#endif //(_WIN32_IE >= 0x0400)¤¤/////////////////////////////////////////////////////////////////////////////¤// CPagerCtrl¤¤#if (_WIN32_IE >= 0x0400)¤¤template <class Base>¤class CPagerCtrlT : public Base¤{¤public:¤// Constructors¤	CPagerCtrlT(HWND hWnd = NULL) : Base(hWnd) { }¤¤	CPagerCtrlT< Base >& operator=(HWND hWnd)¤	{¤		m_hWnd = hWnd;¤		return *this;¤	}¤¤	HWND Create(HWND hWndParent, RECT& rcPos, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			UINT nID = 0, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, rcPos, szWindowName, dwStyle, dwExStyle, nID, lpCreateParam);¤	}¤	HWND Create(HWND hWndParent, LPRECT lpRect = NULL, LPCTSTR szWindowName = NULL,¤			DWORD dwStyle = 0, DWORD dwExStyle = 0,¤			HMENU hMenu = NULL, LPVOID lpCreateParam = NULL)¤	{¤		return CWindow::Create(GetWndClassName(), hWndParent, lpRect, szWindowName, dwStyle, dwExStyle, hMenu, lpCreateParam);¤	}¤¤// Attributes¤	static LPCTSTR GetWndClassName()¤	{¤		return WC_PAGESCROLLER;¤	}¤¤	int GetButtonSize()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, PGM_GETBUTTONSIZE, 0, 0L);¤	}¤	int SetButtonSize(int nButtonSize)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, PGM_SETBUTTONSIZE, 0, nButtonSize);¤	}¤	DWORD GetButtonState(int nButton)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(nButton == PGB_TOPORLEFT || nButton == PGB_BOTTOMORRIGHT);¤		return (DWORD)::SendMessage(m_hWnd, PGM_GETBUTTONSTATE, 0, nButton);¤	}¤	COLORREF GetBkColor()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, PGM_GETBKCOLOR, 0, 0L);¤	}¤	COLORREF SetBkColor(COLORREF clrBk)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (COLORREF)::SendMessage(m_hWnd, PGM_SETBKCOLOR, 0, (LPARAM)clrBk);¤	}¤	int GetBorder()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, PGM_GETBORDER, 0, 0L);¤	}¤	int SetBorder(int nBorderSize)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, PGM_SETBORDER, 0, nBorderSize);¤	}¤	int GetPos()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, PGM_GETPOS, 0, 0L);¤	}¤	int SetPos(int nPos)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		return (int)::SendMessage(m_hWnd, PGM_SETPOS, 0, nPos);¤	}¤¤// Operations¤	void SetChild(HWND hWndChild)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, PGM_SETCHILD, 0, (LPARAM)hWndChild);¤	}¤	void ForwardMouse(BOOL bForward = TRUE)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, PGM_FORWARDMOUSE, bForward, 0L);¤	}¤	void RecalcSize()¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		::SendMessage(m_hWnd, PGM_RECALCSIZE, 0, 0L);¤	}¤	void GetDropTarget(IDropTarget** ppDropTarget)¤	{¤		ATLASSERT(::IsWindow(m_hWnd));¤		ATLASSERT(ppDropTarget != NULL);¤		::SendMessage(m_hWnd, PGM_GETDROPTARGET, 0, (LPARAM)ppDropTarget);¤	}¤};¤¤typedef CPagerCtrlT<CWindow>        CPagerCtrl;¤¤#endif //(_WIN32_IE >= 0x0400)¤¤/////////////////////////////////////////////////////////////////////////////¤// CCustomDraw - MI class for custom-draw support¤¤template <class T>¤class CCustomDraw¤{¤public:¤	BEGIN_MSG_MAP(CCustomDraw< T >)¤		NOTIFY_CODE_HANDLER(NM_CUSTOMDRAW, OnCustomDraw)¤	ALT_MSG_MAP(1)¤		if(uMsg == OCM_NOTIFY && NM_CUSTOMDRAW == ((LPNMHDR)lParam)->code)¤		{¤			bHandled = TRUE;¤			lResult = OnCustomDraw((int)wParam, (LPNMHDR)lParam, bHandled);¤			if(bHandled)¤				return TRUE;¤		}¤	END_MSG_MAP()¤¤// message handler¤	LRESULT OnCustomDraw(int idCtrl, LPNMHDR pnmh, BOOL& bHandled)¤	{¤		T* pT = static_cast<T*>(this);¤		LPNMCUSTOMDRAW lpNMCustomDraw = (LPNMCUSTOMDRAW)pnmh;¤		DWORD dwRet = 0;¤		switch(lpNMCustomDraw->dwDrawStage)¤		{¤		case CDDS_PREPAINT:¤			dwRet = pT->OnPrePaint(idCtrl, lpNMCustomDraw);¤			break;¤		case CDDS_POSTPAINT:¤			dwRet = pT->OnPostPaint(idCtrl, lpNMCustomDraw);¤			break;¤		case CDDS_PREERASE:¤			dwRet = pT->OnPreErase(idCtrl, lpNMCustomDraw);¤			break;¤		case CDDS_POSTERASE:¤			dwRet = pT->OnPostErase(idCtrl, lpNMCustomDraw);¤			break;¤		case CDDS_ITEMPREPAINT:¤			dwRet = pT->OnItemPrePaint(idCtrl, lpNMCustomDraw);¤			break;¤		case CDDS_ITEMPOSTPAINT:¤			dwRet = pT->OnItemPostPaint(idCtrl, lpNMCustomDraw);¤			break;¤		case CDDS_ITEMPREERASE:¤			dwRet = pT->OnItemPreErase(idCtrl, lpNMCustomDraw);¤			break;¤		case CDDS_ITEMPOSTERASE:¤			dwRet = pT->OnItemPostErase(idCtrl, lpNMCustomDraw);¤			break;¤		default:¤			bHandled = FALSE;¤			break;¤		}¤		return dwRet;¤	}¤¤// overrideables¤	DWORD OnPrePaint(int idCtrl, LPNMCUSTOMDRAW lpNMCustomDraw)¤	{¤		return CDRF_DODEFAULT;¤	}¤	DWORD OnPostPaint(int idCtrl, LPNMCUSTOMDRAW lpNMCustomDraw)¤	{¤		return CDRF_DODEFAULT;¤	}¤	DWORD OnPreErase(int idCtrl, LPNMCUSTOMDRAW lpNMCustomDraw)¤	{¤		return CDRF_DODEFAULT;¤	}¤	DWORD OnPostErase(int idCtrl, LPNMCUSTOMDRAW lpNMCustomDraw)¤	{¤		return CDRF_DODEFAULT;¤	}¤	DWORD OnItemPrePaint(int idCtrl, LPNMCUSTOMDRAW lpNMCustomDraw)¤	{¤		return CDRF_DODEFAULT;¤	}¤	DWORD OnItemPostPaint(int idCtrl, LPNMCUSTOMDRAW lpNMCustomDraw)¤	{¤		return CDRF_DODEFAULT;¤	}¤	DWORD OnItemPreErase(int idCtrl, LPNMCUSTOMDRAW lpNMCustomDraw)¤	{¤		return CDRF_DODEFAULT;¤	}¤	DWORD OnItemPostErase(int idCtrl, LPNMCUSTOMDRAW lpNMCustomDraw)¤	{¤		return CDRF_DODEFAULT;¤	}¤};¤//#UC END# *45B5D15C031C_USER_DEFINITION*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/ATLControls|45B5D15C031C
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19012259353"))
	    quid       	"45B5D15C031C"
	    documentation 	"набор классов, облегчающих работу с окнами в ATL"
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator"
	    nestedClasses 	(list nestedClasses
		(object Class "CToolBarCtrl"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012259654"))
		    quid       	"45B5E2F80000"
		    documentation 	"тулбра"
		    stereotype 	"Typedef")
		(object Class "CToolTipCtrl"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012260225"))
		    quid       	"45B865EA035B"
		    stereotype 	"Typedef")
		(object Class "CTreeItem"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19027666612"))
		    quid       	"45BF25C70177"
		    stereotype 	"Typedef")))
	(object Class "DeleteQuestion"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/DeleteQuestion.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/DeleteQuestion.cpp")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need ref count"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"base wnd class"
		    value      	"CWnd")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"finished"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no base class"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no hands"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*490AFE1C0135_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *490AFE1C0135_DESTR_BODY*¤	//#UC END# *490AFE1C0135_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*490AFE1C0135_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *490AFE1C0135_MESSAGE_MAP*¤	//#UC END# *490AFE1C0135_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*490AFE1C0135_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *490AFE1C0135_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_ADDITIONAL_LIST, m_additional);¤	//#UC END# *490AFE1C0135_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*490AFE1C0135_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *490AFE1C0135_ON_INIT_DLG*¤		std::string caption ("Удаление элемента ");¤		caption += m_elem->IdentifyClass ();¤		¤		this->SetWindowText (caption.c_str ());¤		CWnd* message_wnd = this->GetDlgItem (IDC_MESSAGE);¤		if (message_wnd) {¤			std::string text ("Вы уверены, что хотите удалить элемент ");¤			text += RoseHelper::get_full_name (m_elem);¤			text += "?";¤			message_wnd->SetWindowText (text.c_str ());¤¤			// определяем текущий шрифт списка ¤			CFont* font = message_wnd->GetFont(); ¤¤			// создаем контекст для измерения ширины строк ¤			CClientDC dc (this); ¤			font = dc.SelectObject(font);¤			¤			SIZE size = dc.GetTextExtent(text.c_str (), text.size ());¤			CRect wnd_rect;¤			message_wnd->GetWindowRect (&wnd_rect);¤			if (wnd_rect.Width () < size.cx) {¤				UINT flags = SWP_NOZORDER | SWP_NOACTIVATE;¤				message_wnd->SetWindowPos(¤					0¤					, wnd_rect.left¤					, wnd_rect.top¤					, size.cx¤					, wnd_rect.Height ()¤					, flags¤				);¤			}¤			//message_wnd¤		}¤¤		this->fill_additional ();¤		//#UC END# *490AFE1C0135_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*490AFE1C0135_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *490AFE1C0135_CUSTOM_CONTROLS_CONSTRAINT*¤	¤	CPane buttons = pane (HORIZONTAL, ABSOLUTE_VERT)¤		<< itemGrowing (HORIZONTAL)¤		<< item (IDOK, NORESIZE)¤		<< item (IDCANCEL, NORESIZE);¤	¤	if (m_additional.GetItemCount () > 0) {¤		CPane additional = pane( VERTICAL )¤			<< item (IDC_ADDITIONAL_MESS, ABSOLUTE_VERT)¤			<< item (IDC_ADDITIONAL_LIST, GREEDY);¤¤		CreateRoot (VERTICAL)¤			<< item (IDC_MESSAGE, ABSOLUTE_VERT)¤			<< itemFixed (VERTICAL, 5)¤			<< additional¤			<< buttons;¤	} else {¤		CreateRoot (VERTICAL)¤			<< item (IDC_MESSAGE, ABSOLUTE_VERT)¤			<< itemFixed (VERTICAL, 5)¤			<< buttons;¤	}¤	¤	//#UC END# *490AFE1C0135_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/DeleteQuestion|490AFE1C0135
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19028457411"))
	    quid       	"490AFE1C0135"
	    documentation 	"дилог-вопрос об удалении элемента"
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012264104"))
		    quid       	"490AFEF101CE"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper"
		    quidu      	"4571F040008C"))
	    operations 	(list Operations
		(object Operation "ctor"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*490AFFED03DE_BASE_INIT*"
			    value      	(value Text 
|//#UC START# *490AFFED03DE_BASE_INIT*¤	, m_elem (elem)¤//#UC END# *490AFFED03DE_BASE_INIT*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*490AFFED03DE_BODY*"
			    value      	(value Text 
|//#UC START# *490AFFED03DE_BODY*¤	//#UC END# *490AFFED03DE_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012263009"))
		    quid       	"490AFFED03DE"
		    documentation 	"элемент, подлежащий удалению."
		    stereotype 	"ctor"
		    parameters 	(list Parameters
			(object Parameter "elem"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"45C3177C0177")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012263305"))
			    quid       	"490B0003018A"
			    type       	"IRoseElementPtr"
			    quidu      	"45C3177C0177"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "fill_additional"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*490B002B00D1*"
			    value      	(value Text 
|//#UC START# *490B002B00D1*	¤	//заполняем список	¤¤	IRoseCategoryPtr elem_cat = RoseHelper::get_parent_category (m_elem);¤	std::string elem_cat_guid = get_rose_element_uid(elem_cat);¤¤	IRoseItemCollectionPtr clients = RoseHelper::get_clients (m_elem);¤	RoseElementSet from_other_packs;¤	¤	short clients_count = clients->Count;¤	for (short i = 1; i <= clients_count; ++i) {¤		IRoseItemPtr it = clients->GetAt (i);¤		IRoseCategoryPtr it_cat = RoseHelper::get_parent_category (it);¤		if (get_rose_element_uid(it_cat) != elem_cat_guid) {¤			from_other_packs.insert (RoseElementWrapper (it));¤		}¤	}¤	if (!from_other_packs.empty ()) {				¤		CWnd* add_msg_wnd = this->GetDlgItem (IDC_ADDITIONAL_MESS);¤		if (add_msg_wnd) {¤			add_msg_wnd->SetWindowText ("Дополнительно будут удалены связи из других пакетов:");¤		}¤		¤		m_additional.init ();¤		CRect rect;¤		m_additional.GetWindowRect (rect);¤		m_additional.InsertColumn (0, "Имя", LVCFMT_LEFT, static_cast<long>(rect.Width ()*0.20));¤		m_additional.InsertColumn (1, "Тип элемента", LVCFMT_RIGHT, static_cast<long>(rect.Width ()*0.30));		¤		m_additional.InsertColumn (2, "Клиент", LVCFMT_RIGHT, static_cast<long>(rect.Width ()*0.50));		¤¤		GCL::StrVector info;¤		RoseElementSet::const_iterator it = from_other_packs.begin ();¤		RoseElementSet::const_iterator it_end = from_other_packs.end ();¤¤		for (; it != it_end; ++it) {¤			info.clear ();¤			IRoseElementPtr elem = it->element;¤			if (!elem->IsClass ("Diagram")) {¤				if (elem->IsClass("Association")) {¤					elem = RoseHelper::get_role ((IRoseAssociationPtr)elem);¤				}¤¤				info.push_back (static_cast<const char*> (elem->GetName ()));¤				if (elem->IsClass ("Role")) {¤					info.push_back (ATTRIBUTE_TYPE);¤				} else {¤					info.push_back (static_cast<const char*> (elem->IdentifyClass ()));¤				}				¤¤				std::string client_name;¤				if (elem->IsClass ("Relation")) {¤					IRoseElementPtr parent = RoseHelper::get_context (elem);¤					if (parent) {¤						client_name = static_cast<const char*> (parent->GetName ());¤					}¤				}¤¤				info.push_back (client_name);¤				m_additional.add_item (elem, info);¤			}¤		}¤¤		RoseItemList::SortParam param;¤		param.primary_column_id = 1;¤		param.secondary_column_id = 0;		¤		m_additional.sort (param);¤¤	} else {¤		CWnd* add_msg_wnd = this->GetDlgItem (IDC_ADDITIONAL_MESS);¤		if (add_msg_wnd) {¤			add_msg_wnd->ShowWindow (SW_HIDE);¤		}¤		m_additional.ShowWindow (SW_HIDE);¤	}	¤	//#UC END# *490B002B00D1*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012263711"))
		    quid       	"490B002B00D1"
		    documentation 	"заполнит список дополнительных элементов."
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "elem"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"45C3177C0177")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012262236"))
		    quid       	"490B00070356"
		    documentation 	"элемент, подлежащий удалению."
		    type       	"IRoseElementPtr"
		    quidu      	"45C3177C0177"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "ListCtrlWithCopy"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/ListCtrlWithCopy.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/ListCtrlWithCopy.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4AD86888019C_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *4AD86888019C_DESTR_BODY*¤	//#UC END# *4AD86888019C_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4AD86888019C_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *4AD86888019C_MESSAGE_MAP*¤	//ON_WM_KEYDOWN ()¤	ON_COMMAND(ID_EDIT_COPY, on_copy)¤    ON_UPDATE_COMMAND_UI(ID_EDIT_COPY, on_update_copy)¤	{ WM_KEYDOWN, 0, 0, 0, AfxSig_vwww, \¤		(AFX_PMSG)(AFX_PMSGW) \¤		(static_cast< void (AFX_MSG_CALL CWnd::*)(UINT, UINT, UINT) > ( &ThisClass::on_key_down)) },¤	//#UC END# *4AD86888019C_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/ListCtrlWithCopy|4AD86888019C
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19012264731"))
	    quid       	"4AD86888019C"
	    documentation 	"список с поддержкой копирования"
	    stereotype 	"GuiControl"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"4AD868A3027B"
		    supplier   	"Logical View::external::MFCTypes::Controls::CListCtrl"
		    quidu      	"45F9841C0251"))
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012267541"))
		    quid       	"4AD869FB03C5"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::GCL::str::str_op"
		    quidu      	"4503E01500CB")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012267953"))
		    quid       	"4AD86A000371"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::GCL::data::std_defs"
		    quidu      	"44FEBDF3039B")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012268323"))
		    quid       	"4AD85AA600D9"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::WinGUI::Helpers::ClipboardHelper"
		    quidu      	"4AD8524E02A2"))
	    operations 	(list Operations
		(object Operation "on_update_copy"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AD868B603E2*"
			    value      	(value Text 
|//#UC START# *4AD868B603E2*¤	POSITION pos = this->GetFirstSelectedItemPosition();¤	cmd->Enable(pos != NULL);¤	//#UC END# *4AD868B603E2*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012265012"))
		    quid       	"4AD868B603E2"
		    documentation 	"поддержка операции копирования в буфер"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "inout cmd"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4AD8557C00DA")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012265309"))
			    quid       	"4AD868B7005F"
			    type       	"CCmdUI"
			    quidu      	"4AD8557C00DA"))
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "on_copy"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AD868BF00EC*"
			    value      	(value Text 
|//#UC START# *4AD868BF00EC*¤	GCL::StrVector texts;¤	POSITION pos = this->GetFirstSelectedItemPosition();¤	if (pos != NULL) {¤		while (pos) {¤			int selected_item = this->GetNextSelectedItem(pos);¤			CString item_text = this->GetItemText (selected_item, 0);¤			texts.push_back (static_cast<const char*> (item_text));¤		}¤¤		std::string clipboard_data = GCL::join (texts, "\r\n");¤		WinGUI::ClipboardHelper::copy_text_to_clipboard (clipboard_data);¤	} else {¤		WinGUI::ClipboardHelper::copy_text_to_clipboard ("");¤	}¤	//#UC END# *4AD868BF00EC*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012265731"))
		    quid       	"4AD868BF00EC"
		    documentation 	"реализация копирования в буфер выделенного текста"
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "on_key_down"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AD868DC00B6*"
			    value      	(value Text 
|//#UC START# *4AD868DC00B6*¤    if (¤		(GetKeyState(VK_CONTROL) & 0x8000) ¤		&& (key == 'C' || key == 'С')¤	) {¤		this->on_copy ();¤    }¤	//#UC END# *4AD868DC00B6*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012266074"))
		    quid       	"4AD868DC00B6"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"450A6117003E")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012266370"))
			    quid       	"4AD8691403A6"
			    type       	"unsigned integer"
			    quidu      	"450A6117003E")
			(object Parameter "rep_cnt"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"450A6117003E")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012266754"))
			    quid       	"4AD869150035"
			    type       	"unsigned integer"
			    quidu      	"450A6117003E")
			(object Parameter "flags"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"450A6117003E")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012267111"))
			    quid       	"4AD8691500D4"
			    type       	"unsigned integer"
			    quidu      	"450A6117003E"))
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "GenerationErrorDialog"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need assign op"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need copy ctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Refcount"
		    value      	"none")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"base wnd class"
		    value      	"CWnd")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"finished"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need dctor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need objcounter"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"no hands"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"non virtual base"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"resizeable"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/GenerationErrorDialog.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/MDProcess/MDAAddinLib/MDAGui/GenerationErrorDialog.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4BE15A4F0223_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *4BE15A4F0223_DESTR_BODY*¤	//#UC END# *4BE15A4F0223_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4BE15A4F0223_MESSAGE_MAP*"
		    value      	(value Text 
|//#UC START# *4BE15A4F0223_MESSAGE_MAP*¤	//#UC END# *4BE15A4F0223_MESSAGE_MAP*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4BE15A4F0223_DO_DATA_EXCHANGE*"
		    value      	(value Text 
|//#UC START# *4BE15A4F0223_DO_DATA_EXCHANGE*¤	DDX_Control(pDX, IDC_ERRORS_LIST, m_view);¤	//#UC END# *4BE15A4F0223_DO_DATA_EXCHANGE*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4BE15A4F0223_ON_INIT_DLG*"
		    value      	(value Text 
|//#UC START# *4BE15A4F0223_ON_INIT_DLG*¤		this->SetIcon(::LoadIcon(NULL, IDI_ERROR), false);¤¤		if (m_can_be_ignored) {¤			this->GetDlgItem (IDCANCEL)->ShowWindow (SW_SHOW);¤		} else {¤			this->GetDlgItem (IDCANCEL)->ShowWindow (SW_HIDE);¤		}¤¤		m_view.init ();¤		¤		//Колонки списка: имя элемента, текст ошибки¤		CRect rect;¤		m_view.GetWindowRect (rect);¤		m_view.InsertColumn (0, "Имя", LVCFMT_LEFT, static_cast<long>(rect.Width ()*0.25));¤		m_view.InsertColumn (1, "Ошибка", LVCFMT_RIGHT, static_cast<long>(rect.Width ()*0.75));	¤¤		for (GenSupport::ErrorInfoList::const_iterator it = m_data.begin (); it != m_data.end (); ++it) {¤			this->add_error_impl (*it);¤		}¤		¤		RoseItemList::SortParam param;¤		param.primary_column_id = 1;¤		param.secondary_column_id = 0;		¤		m_view.sort (param);¤		//#UC END# *4BE15A4F0223_ON_INIT_DLG*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4BE15A4F0223_CUSTOM_CONTROLS_CONSTRAINT*"
		    value      	(value Text 
|//#UC START# *4BE15A4F0223_CUSTOM_CONTROLS_CONSTRAINT*¤	CreateRoot (VERTICAL)¤	<< item (IDC_ERRORS_LIST, GREEDY)¤	<< (pane (HORIZONTAL, ABSOLUTE_VERT)¤			<< itemGrowing (HORIZONTAL)¤			<< item(IDCANCEL, NORESIZE)¤			<< item(IDOK, NORESIZE)¤	);¤	//#UC END# *4BE15A4F0223_CUSTOM_CONTROLS_CONSTRAINT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|MDProcess,key:MDP,guid:456C0DD70110/Home/Модель проекта "MDProcess"/MDAAddinLib/MDAGui/GenerationErrorDialog|4BE15A4F0223
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"19028526817"))
	    quid       	"4BE15A4F0223"
	    documentation 	"дилог со списком ошибок, возникших в процессе генерации"
	    stereotype 	"Dialog"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012273578"))
		    quid       	"4BE1645D02F8"
		    stereotype 	"uses"
		    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper"
		    quidu      	"4571D1A5009C"))
	    operations 	(list Operations
		(object Operation "add_error"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4BE15A8C017B*"
			    value      	(value Text 
|//#UC START# *4BE15A8C017B*¤	if (::IsWindow (this->GetSafeHwnd ()) == TRUE) {¤		this->add_error_impl (error);¤	} else {¤		m_data.push_back (error);¤	}¤	//#UC END# *4BE15A8C017B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012271022"))
		    quid       	"4BE15A8C017B"
		    documentation 	"добавляет ошибку в список"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "error"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4BDFDB5000EA")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012271322"))
			    quid       	"4BE15AAC0162"
			    type       	"ErrorInfo"
			    quidu      	"4BDFDB5000EA"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "ctor"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4BE15AB902DD_BASE_INIT*"
			    value      	(value Text 
|//#UC START# *4BE15AB902DD_BASE_INIT*¤	, m_data (errors)¤//#UC END# *4BE15AB902DD_BASE_INIT*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4BE15AB902DD_BODY*"
			    value      	(value Text 
|//#UC START# *4BE15AB902DD_BODY*¤	m_can_be_ignored = can_be_ignored;¤	//#UC END# *4BE15AB902DD_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012271746"))
		    quid       	"4BE15AB902DD"
		    documentation 	"инициализация диалога списком ошибок"
		    stereotype 	"ctor"
		    parameters 	(list Parameters
			(object Parameter "errors"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4BDFDBD003D8")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012272045"))
			    quid       	"4BE29724016B"
			    type       	"ErrorInfoList"
			    quidu      	"4BDFDBD003D8")
			(object Parameter "can_be_ignored"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE100240")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012272402"))
			    quid       	"4BE2972401B9"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"
			    initv      	"false"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "add_error_impl"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4BE15EDB0373*"
			    value      	(value Text 
|//#UC START# *4BE15EDB0373*¤	GCL::StrVector view_info;¤	¤	const RoseAbstractDumper* rad = info.dumper ? dynamic_cast<const RoseAbstractDumper*> (info.dumper) : 0;¤	¤	view_info.push_back (rad ? rad->get_name_str () : info.alternative_name);¤	view_info.push_back (info.message);¤	¤	m_view.add_item (rad ? rad->rose_element () : 0, view_info);¤	//#UC END# *4BE15EDB0373*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012272830"))
		    quid       	"4BE15EDB0373"
		    documentation 	"метод для добавления информации в список, когда дилог уже инициализирован"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "info"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4BDFDB5000EA")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012273136"))
			    quid       	"4BE15F010398"
			    type       	"ErrorInfo"
			    quidu      	"4BDFDB5000EA"))
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "can_be_ignored"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE100240")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012269869"))
		    quid       	"4BE2972C013C"
		    documentation 	
|нужна ли дополнительная кнопка "Игнорировать" в диалоге
		    
		    type       	"boolean"
		    quidu      	"3DBFFE100240"
		    initv      	"false"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Association "$UNNAMED$0"
	    quid       	"457575F1027C"
	    roles      	(list role_list
		(object Role "properties"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012214855"))
		    quid       	"457575F20173"
		    documentation 	"результат создания новго проекта (имя, путь для генерации, выбранные генераторы)"
		    label      	"properties"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::StartProperties::Result"
		    quidu      	"4575757C004A"
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$1"
		    quid       	"457575F20175"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart::Result"
		    quidu      	"457575E20125"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$2"
	    quid       	"4575764602AB"
	    roles      	(list role_list
		(object Role "file_type"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012215278"))
		    quid       	"457576460367"
		    documentation 	"тип открываемого файла"
		    label      	"file_type"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart::ResultFileType"
		    quidu      	"4575760D0163"
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$3"
		    quid       	"457576460376"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart::Result"
		    quidu      	"457575E20125"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$4"
	    quid       	"4607C6E1030D"
	    roles      	(list role_list
		(object Role "result"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012218101"))
		    quid       	"4607C6E2004E"
		    label      	"result"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart::Result"
		    quidu      	"457575E20125"
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$5"
		    quid       	"4607C6E20050"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart"
		    quidu      	"457415F60222"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$6"
	    quid       	"464977140196"
	    roles      	(list role_list
		(object Role "temp_files"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012234442"))
		    quid       	"46497714035B"
		    documentation 	"множество созданных временных файлов"
		    label      	"temp_files"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::TempFileSet"
		    quidu      	"464976ED00CB"
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$7"
		    quid       	"46497714036B"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics"
		    quidu      	"457416330177"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$8"
	    quid       	"464977630196"
	    roles      	(list role_list
		(object Role "$UNNAMED$9"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012222559"))
		    quid       	"464977640177"
		    supplier   	"Logical View::Primitives::a-string"
		    quidu      	"452257A0036F"
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$10"
		    quid       	"464977640186"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::TempFileSet"
		    quidu      	"464976ED00CB"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$11"
	    quid       	"4670CED400FA"
	    roles      	(list role_list
		(object Role "$UNNAMED$12"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012223651"))
		    quid       	"4670CED50119"
		    supplier   	"Logical View::Primitives::a-string"
		    quidu      	"452257A0036F"
		    keys       	(list class_attribute_list
			(object ClassAttribute "key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4922C29D0103")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012223984"))
			    quid       	"4923AA8300F6"
			    type       	"ItemInfo"
			    exportControl 	"Public"
			    Containment 	"By Value"))
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$13"
		    quid       	"4670CED50128"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::GenArtDataToText"
		    quidu      	"4670CE84001F"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$14"
	    quid       	"490AFEF7020C"
	    roles      	(list role_list
		(object Role "additional"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012262613"))
		    quid       	"490AFEF7038E"
		    documentation 	"список дополнительных элементов, подлежащих удалению"
		    label      	"additional"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::CommonViews::RoseItemList"
		    quidu      	"47E79D7E0362"
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$15"
		    quid       	"490AFEF70396"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::DeleteQuestion"
		    quidu      	"490AFE1C0135"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$16"
	    quid       	"4922C2B201D2"
	    roles      	(list role_list
		(object Role "type"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012228316"))
		    quid       	"4922C2B300D9"
		    documentation 	"тип элемента"
		    label      	"type"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemType"
		    quidu      	"4922C06F0337"
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$17"
		    quid       	"4922C2B300DC"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfo"
		    quidu      	"4922C29D0103"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$18"
	    quid       	"4922C2E00114"
	    roles      	(list role_list
		(object Role "art_data"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"TargetStereotype"
			    value      	"const")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012228832"))
		    quid       	"4922C2E003CA"
		    documentation 	"данные генерации связанные с элементом"
		    label      	"art_data"
		    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtData"
		    quidu      	"45964D37029F"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$19"
		    quid       	"4922C2E003D2"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfo"
		    quidu      	"4922C29D0103")))
	(object Association "$UNNAMED$20"
	    quid       	"4922C32401DB"
	    roles      	(list role_list
		(object Role "$UNNAMED$21"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012229962"))
		    quid       	"4922C3250071"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfo"
		    quidu      	"4922C29D0103"
		    keys       	(list class_attribute_list
			(object ClassAttribute "key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"450A61050251")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ElementCreationOrder"
				    value      	"19012230277"))
			    quid       	"4922C32B00CE"
			    type       	"integer"
			    exportControl 	"Public"
			    Containment 	"By Value"))
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$22"
		    quid       	"4922C3250074"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::IndexToInfo"
		    quidu      	"4922C30D021D"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$23"
	    quid       	"4922C34402FC"
	    roles      	(list role_list
		(object Role "index2info"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012234816"))
		    quid       	"4922C34501D5"
		    documentation 	"мапа для получения по номеру элемента в списке информации об этом элементе"
		    label      	"index2info"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::IndexToInfo"
		    quidu      	"4922C30D021D"
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$24"
		    quid       	"4922C34501DA"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics"
		    quidu      	"457416330177"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$25"
	    quid       	"4923AA4D00F8"
	    roles      	(list role_list
		(object Role "$UNNAMED$26"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012231501"))
		    quid       	"4923AA4D02A3"
		    stereotype 	"first param"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfo"
		    quidu      	"4922C29D0103"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$27"
		    quid       	"4923AA4D02A7"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfoLess"
		    quidu      	"4923AA23017C")))
	(object Association "$UNNAMED$28"
	    quid       	"4923AA580183"
	    roles      	(list role_list
		(object Role "$UNNAMED$29"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012232193"))
		    quid       	"4923AA5803A0"
		    stereotype 	"second param"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfo"
		    quidu      	"4922C29D0103"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$30"
		    quid       	"4923AA5803A4"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfoLess"
		    quidu      	"4923AA23017C")))
	(object Association "$UNNAMED$31"
	    quid       	"4923AAB9001F"
	    roles      	(list role_list
		(object Role "$UNNAMED$32"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012224458"))
		    quid       	"4923AAB9019F"
		    stereotype 	"compare"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfoLess"
		    quidu      	"4923AA23017C"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$33"
		    quid       	"4923AAB901A2"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::GenArtDataToText"
		    quidu      	"4670CE84001F")))
	(object Association "$UNNAMED$34"
	    quid       	"4BE15AEB03B0"
	    roles      	(list role_list
		(object Role "view"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012270256"))
		    quid       	"4BE15AEC019E"
		    documentation 	"собственно вью-список "
		    label      	"view"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::CommonViews::RoseItemList"
		    quidu      	"47E79D7E0362"
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$35"
		    quid       	"4BE15AEC01AE"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenerationErrorDialog"
		    quidu      	"4BE15A4F0223"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$36"
	    quid       	"4BE15E64024A"
	    roles      	(list role_list
		(object Role "data"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"19012270647"))
		    quid       	"4BE15E6500B6"
		    documentation 	"данные для отображения"
		    label      	"data"
		    supplier   	"Logical View::MDProcess::MDAModel::GenSupport::ErrorInfoList"
		    quidu      	"4BDFDBD003D8"
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$37"
		    quid       	"4BE15E6500B8"
		    supplier   	"Logical View::MDProcess::MDAAddinLib::MDAGui::GenerationErrorDialog"
		    quidu      	"4BE15A4F0223"
		    is_aggregate 	TRUE))))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ColorizeFor"
		    value      	"456C0DD70110")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"4573E77C0242"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	4818
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::AdvancedSearch" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"423")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"7158")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"698")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"254"))
		    location   	(519, 2154)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(319, 2126)
			fill_color 	13434879
			nlines     	1
			max_width  	400
			justify    	0
			label      	"• AdvancedSearch")
		    stereotype 	(object ItemLabel
			Parent_View 	@1
			location   	(319, 2076)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	400
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"4573E7840177"
		    width      	418
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::ChoiceType" @2
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"738")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"174")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"268")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(333, 549)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(180, 521)
			fill_color 	13434879
			nlines     	1
			max_width  	306
			justify    	0
			label      	"• ChoiceType")
		    stereotype 	(object ItemLabel
			Parent_View 	@2
			location   	(180, 471)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	306
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"457415BB033C"
		    width      	324
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::ReportView" @3
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1152")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1203")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"1440")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"254"))
		    location   	(771, 3057)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@3
			location   	(620, 3029)
			fill_color 	13434879
			nlines     	1
			max_width  	302
			justify    	0
			label      	"• ReportView")
		    stereotype 	(object ItemLabel
			Parent_View 	@3
			location   	(620, 2979)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	302
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"457415DF00BB"
		    width      	320
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::StartProperties" @4
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1497")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"171")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"320")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(345, 780)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(162, 752)
			fill_color 	13434879
			nlines     	1
			max_width  	366
			justify    	0
			label      	"• StartProperties")
		    stereotype 	(object ItemLabel
			Parent_View 	@4
			location   	(162, 702)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	366
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"457416030271"
		    width      	384
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::StCollection" @5
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2388")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1749")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"1364")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"254"))
		    location   	(714, 1533)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@5
			location   	(556, 1505)
			fill_color 	13434879
			nlines     	1
			max_width  	316
			justify    	0
			label      	"• StCollection")
		    stereotype 	(object ItemLabel
			Parent_View 	@5
			location   	(556, 1455)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	316
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"4574164F0242"
		    width      	334
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::TemplArgs" @6
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2301")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1188")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"730")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"308"))
		    location   	(1671, 618)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@6
			location   	(1519, 590)
			fill_color 	13434879
			nlines     	1
			max_width  	304
			justify    	0
			label      	"• TemplArgs")
		    stereotype 	(object ItemLabel
			Parent_View 	@6
			location   	(1519, 540)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	304
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"4574165F0222"
		    width      	322
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::UnusedUserCode" @7
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"534")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"6318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"962")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"392"))
		    location   	(1458, 5037)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@7
			location   	(1248, 5009)
			fill_color 	13434879
			nlines     	1
			max_width  	420
			justify    	0
			label      	"• UnusedUserCode")
		    stereotype 	(object ItemLabel
			Parent_View 	@7
			location   	(1248, 4959)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	420
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    line_color 	7885055
		    fill_color 	15448575
		    quidu      	"457416890148"
		    width      	438
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GeneratorSelect" @8
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2274")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"168")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"348")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(1674, 990)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@8
			location   	(1483, 962)
			fill_color 	13434879
			nlines     	1
			max_width  	382
			justify    	0
			label      	"• GeneratorSelect")
		    stereotype 	(object ItemLabel
			Parent_View 	@8
			location   	(1483, 912)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	382
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"4574166E02FD"
		    width      	400
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::IChoiceDlg" @9
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"276")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"180")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"500")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"178"))
		    location   	(336, 186)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	705320
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@9
			location   	(137, 154)
			nlines     	1
			max_width  	398
			justify    	0
			label      	"• IChoiceDlg")
		    stereotype 	(object ItemLabel
			Parent_View 	@9
			location   	(137, 104)
			anchor     	10
			nlines     	1
			max_width  	398
			justify    	0
			label      	"<<SimpleClass>>")
		    icon_style 	"Label"
		    line_color 	705320
		    fill_color 	16777215
		    quidu      	"457556EF0134"
		    width      	416
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @10
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"603,175;526,176"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4575572E003A"
		    client     	@2
		    supplier   	@9
		    vertices   	(list Points
			(333, 458)
			(334, 280))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper" @11
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2346")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"813")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"178"))
		    location   	(1677, 198)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@11
			location   	(1510, 166)
			nlines     	1
			max_width  	334
			justify    	0
			label      	"• RoseHelper")
		    stereotype 	(object ItemLabel
			Parent_View 	@11
			location   	(1510, 116)
			anchor     	10
			nlines     	1
			max_width  	334
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"4571F040008C"
		    width      	352
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @12
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"2318,1177;2334,903"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @13
			Parent_View 	@12
			location   	(1631, 412)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.489823
			height     	43
			orientation 	0)
		    line_color 	3947680
		    quidu      	"457556A000B7"
		    client     	@6
		    supplier   	@11
		    vertices   	(list Points
			(1671, 527)
			(1675, 292))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::MdaAbout" @14
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2187")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1488")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"256")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(306, 1005)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@14
			location   	(161, 977)
			fill_color 	13434879
			nlines     	1
			max_width  	290
			justify    	0
			label      	"• MdaAbout")
		    stereotype 	(object ItemLabel
			Parent_View 	@14
			location   	(161, 927)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	290
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"458E706E0066"
		    width      	308
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart::Result" @15
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2487")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"525")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"256")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"190"))
		    location   	(1002, 198)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	2313060
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@15
			location   	(887, 170)
			nlines     	1
			max_width  	230
			justify    	0
			label      	"Result")
		    stereotype 	(object ItemLabel
			Parent_View 	@15
			location   	(887, 120)
			anchor     	10
			nlines     	1
			max_width  	230
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    line_color 	2313060
		    fill_color 	16777215
		    quidu      	"457575E20125"
		    width      	248
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart" @16
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1728")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"519")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"576")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"298"))
		    location   	(999, 609)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@16
			location   	(862, 581)
			fill_color 	13434879
			nlines     	1
			max_width  	274
			justify    	0
			label      	"• MdaStart")
		    stereotype 	(object ItemLabel
			Parent_View 	@16
			location   	(862, 531)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	274
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    line_color 	7885055
		    fill_color 	15448575
		    quidu      	"457415F60222"
		    width      	292
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$4" @17
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"2016,486;2278,486"))
		    location   	(1000, 403)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4607C6E1030D"
		    roleview_list 	(list RoleViews
			(object RoleView "result" @18
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewXPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewYPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewWidth"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewHeight"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LineVertices"
				    value      	"2147,486;2278,486"))
			    Parent_View 	@17
			    location   	(-1124, -83)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @19
				Parent_View 	@18
				location   	(955, 354)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	139
				justify    	0
				label      	"-result"
				pctDist    	0.429025
				height     	46
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4607C6E2004E"
			    client     	@17
			    supplier   	@15
			    vertices   	(list Points
				(1000, 403)
				(1001, 288))
			    line_style 	0)
			(object RoleView "$UNNAMED$5" @20
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewXPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewYPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewWidth"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewHeight"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LineVertices"
				    value      	"2147,486;2016,486"))
			    Parent_View 	@17
			    location   	(-1124, -83)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4607C6E20050"
			    client     	@17
			    supplier   	@16
			    vertices   	(list Points
				(1000, 403)
				(999, 518))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::CreateReport" @21
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"276")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"720")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"468")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"392"))
		    location   	(2235, 3063)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@21
			location   	(2067, 3035)
			fill_color 	13434879
			nlines     	1
			max_width  	336
			justify    	0
			label      	"• CreateReport")
		    stereotype 	(object ItemLabel
			Parent_View 	@21
			location   	(2067, 2985)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	336
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    line_color 	7885055
		    fill_color 	15448575
		    quidu      	"46CA74630128"
		    width      	354
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::CollectUserProperty" @22
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2964")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1380")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"418")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(1902, 1350)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	705320
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@22
			location   	(1676, 1322)
			nlines     	1
			max_width  	452
			justify    	0
			label      	"• CollectUserProperty")
		    stereotype 	(object ItemLabel
			Parent_View 	@22
			location   	(1676, 1272)
			anchor     	10
			nlines     	1
			max_width  	452
			justify    	0
			label      	"<<SimpleClass>>")
		    icon_style 	"Label"
		    line_color 	705320
		    fill_color 	16777215
		    quidu      	"46FC8A6202CE"
		    width      	470
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @23
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"2584,1621;2822,1470"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @24
			Parent_View 	@23
			location   	(1290, 1397)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.528777
			height     	47
			orientation 	0)
		    line_color 	3947680
		    quidu      	"46FC8BF7005D"
		    client     	@5
		    supplier   	@22
		    vertices   	(list Points
			(881, 1506)
			(1666, 1384))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::CollectUserProperty" @25
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"315")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"6717")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"418")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(516, 1782)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	705320
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@25
			location   	(290, 1754)
			nlines     	1
			max_width  	452
			justify    	0
			label      	"• CollectUserProperty")
		    stereotype 	(object ItemLabel
			Parent_View 	@25
			location   	(290, 1704)
			anchor     	10
			nlines     	1
			max_width  	452
			justify    	0
			label      	"<<SimpleClass>>")
		    icon_style 	"Label"
		    line_color 	705320
		    fill_color 	16777215
		    quidu      	"46FC8A6202CE"
		    width      	470
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @26
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"402,7030;339,6807"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @27
			Parent_View 	@26
			location   	(461, 1987)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.406863
			height     	57
			orientation 	0)
		    line_color 	3947680
		    quidu      	"46FC8CD0035B"
		    client     	@1
		    supplier   	@25
		    vertices   	(list Points
			(518, 2063)
			(516, 1872))
		    line_style 	0)
		(object UsesView "" @28
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"582,1076;582,716;510,716"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @29
			Parent_View 	@28
			location   	(1470, 3019)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.478255
			height     	41
			orientation 	0)
		    line_color 	3947680
		    quidu      	"46CA74960222"
		    client     	@3
		    supplier   	@21
		    vertices   	(list Points
			(931, 3057)
			(2057, 3062))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::ATLControls" @30
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2274")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"6588")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"346")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"178"))
		    location   	(2199, 240)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@30
			location   	(2035, 212)
			fill_color 	16777215
			nlines     	1
			max_width  	328
			justify    	0
			label      	"• ATLControls")
		    stereotype 	(object ItemLabel
			Parent_View 	@30
			location   	(2035, 162)
			fill_color 	16777215
			anchor     	10
			nlines     	1
			max_width  	325
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	7885055
		    fill_color 	14145535
		    quidu      	"45B5D15C031C"
		    width      	346
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @31
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @32
			Parent_View 	@31
			location   	(736, 2527)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.569676
			height     	110
			orientation 	1)
		    line_color 	3947680
		    quidu      	"47984E14016C"
		    client     	@3
		    supplier   	@1
		    vertices   	(list Points
			(745, 2966)
			(543, 2244))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::MDPSupport::CatLockerFacade" @33
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2415, 615)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	16714250
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@33
			location   	(2234, 583)
			nlines     	1
			max_width  	362
			justify    	0
			label      	"CatLockerFacade")
		    stereotype 	(object ItemLabel
			Parent_View 	@33
			location   	(2234, 533)
			anchor     	10
			nlines     	1
			max_width  	362
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    line_color 	16714250
		    fill_color 	16777215
		    quidu      	"46343B0002BF"
		    width      	380
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @34
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @35
			Parent_View 	@34
			location   	(2051, 558)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.560858
			height     	59
			orientation 	0)
		    line_color 	3947680
		    quidu      	"47D62D6E0363"
		    client     	@6
		    supplier   	@33
		    vertices   	(list Points
			(1832, 617)
			(2224, 615))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::GenerationParams" @36
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2430, 1035)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@36
			location   	(2213, 1003)
			nlines     	1
			max_width  	434
			justify    	0
			label      	"• GenerationParams")
		    stereotype 	(object ItemLabel
			Parent_View 	@36
			location   	(2213, 953)
			anchor     	10
			nlines     	1
			max_width  	434
			justify    	0
			label      	"<<Settings>>")
		    icon_style 	"Label"
		    line_color 	37632
		    fill_color 	16777215
		    quidu      	"48E46B5803E1"
		    width      	452
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @37
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @38
			Parent_View 	@37
			location   	(2039, 916)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"48E46C5C00DA"
		    client     	@8
		    supplier   	@36
		    vertices   	(list Points
			(1874, 1035)
			(2204, 1035))
		    line_style 	3
		    origin_attachment 	(1874, 1035)
		    terminal_attachment 	(2204, 1035))
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::Helpers::StereotypeManager" @39
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1884, 1722)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	16714250
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@39
			location   	(1688, 1690)
			nlines     	1
			max_width  	392
			justify    	0
			label      	"StereotypeManager")
		    stereotype 	(object ItemLabel
			Parent_View 	@39
			location   	(1688, 1640)
			anchor     	10
			nlines     	1
			max_width  	392
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    line_color 	16714250
		    fill_color 	16777215
		    quidu      	"4907EFD50359"
		    width      	410
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @40
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @41
			Parent_View 	@40
			location   	(1299, 1507)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4907F5EC0349"
		    client     	@5
		    supplier   	@39
		    vertices   	(list Points
			(881, 1559)
			(1678, 1688))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper" @42
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2346")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"813")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"178"))
		    location   	(468, 4968)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@42
			location   	(301, 4936)
			nlines     	1
			max_width  	334
			justify    	0
			label      	"• RoseHelper")
		    stereotype 	(object ItemLabel
			Parent_View 	@42
			location   	(301, 4886)
			anchor     	10
			nlines     	1
			max_width  	334
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"4571F040008C"
		    width      	352
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::CommonViews::RoseItemList" @43
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1263, 5427)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	13110000
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@43
			location   	(1094, 5395)
			nlines     	1
			max_width  	338
			justify    	0
			label      	"• RoseItemList")
		    stereotype 	(object ItemLabel
			Parent_View 	@43
			location   	(1094, 5345)
			anchor     	10
			nlines     	1
			max_width  	338
			justify    	0
			label      	"<<GuiControl>>")
		    icon_style 	"Label"
		    line_color 	13110000
		    fill_color 	16777215
		    quidu      	"47E79D7E0362"
		    width      	356
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::DeleteQuestion" @44
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(471, 5424)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@44
			location   	(283, 5396)
			fill_color 	13434879
			nlines     	1
			max_width  	376
			justify    	0
			label      	"• DeleteQuestion")
		    stereotype 	(object ItemLabel
			Parent_View 	@44
			location   	(283, 5346)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	376
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"490AFE1C0135"
		    width      	394
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @45
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @46
			Parent_View 	@45
			location   	(350, 5199)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"490AFEF101CE"
		    client     	@44
		    supplier   	@42
		    vertices   	(list Points
			(470, 5333)
			(468, 5062))
		    line_style 	0)
		(object AssociationViewNew "$UNNAMED$14" @47
		    location   	(876, 5425)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"490AFEF7020C"
		    roleview_list 	(list RoleViews
			(object RoleView "additional" @48
			    Parent_View 	@47
			    location   	(417, 913)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @49
				Parent_View 	@48
				location   	(900, 5383)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	196
				justify    	0
				label      	"-additional"
				pctDist    	0.117755
				height     	43
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"490AFEF7038E"
			    client     	@47
			    supplier   	@43
			    vertices   	(list Points
				(876, 5425)
				(1084, 5426))
			    line_style 	0)
			(object RoleView "$UNNAMED$15" @50
			    Parent_View 	@47
			    location   	(417, 913)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"490AFEF70396"
			    client     	@47
			    supplier   	@44
			    vertices   	(list Points
				(876, 5425)
				(668, 5424))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::TempFileSet" @51
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2523")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"6159")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"304")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(1662, 4692)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	6572835
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@51
			location   	(1519, 4664)
			nlines     	1
			max_width  	286
			justify    	0
			label      	"TempFileSet")
		    stereotype 	(object ItemLabel
			Parent_View 	@51
			location   	(1519, 4614)
			anchor     	10
			nlines     	1
			max_width  	286
			justify    	0
			label      	"<<Set>>")
		    icon_style 	"Label"
		    line_color 	6572835
		    fill_color 	16777215
		    quidu      	"464976ED00CB"
		    width      	304
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::IndexToInfo" @52
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1665, 4422)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	6572835
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@52
			location   	(1522, 4394)
			nlines     	1
			max_width  	286
			justify    	0
			label      	"IndexToInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@52
			location   	(1522, 4344)
			anchor     	10
			nlines     	1
			max_width  	286
			justify    	0
			label      	"<<Map>>")
		    icon_style 	"Label"
		    line_color 	6572835
		    fill_color 	16777215
		    quidu      	"4922C30D021D"
		    width      	304
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics" @53
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1590")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"6348")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"746")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"492"))
		    location   	(624, 4167)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@53
			location   	(458, 4139)
			fill_color 	13434879
			nlines     	1
			max_width  	332
			justify    	0
			label      	"• GenStatistics")
		    stereotype 	(object ItemLabel
			Parent_View 	@53
			location   	(458, 4089)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	332
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    line_color 	7885055
		    fill_color 	15448575
		    quidu      	"457416330177"
		    width      	350
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$6" @54
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"1890,6201;2523,6159"))
		    location   	(1154, 4434)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"464977140196"
		    roleview_list 	(list RoleViews
			(object RoleView "temp_files" @55
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewXPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewYPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewWidth"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewHeight"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LineVertices"
				    value      	"2316,6171;2523,6159"))
			    Parent_View 	@54
			    location   	(782, -2040)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @56
				Parent_View 	@55
				location   	(1103, 4535)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	208
				justify    	0
				label      	"-temp_files"
				pctDist    	-0.006520
				height     	113
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"46497714035B"
			    client     	@54
			    supplier   	@51
			    vertices   	(list Points
				(1154, 4434)
				(1509, 4614))
			    line_style 	0)
			(object RoleView "$UNNAMED$7" @57
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewXPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewYPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewWidth"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewHeight"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LineVertices"
				    value      	"2316,6171;1890,6201"))
			    Parent_View 	@54
			    location   	(782, -2040)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"46497714036B"
			    client     	@54
			    supplier   	@53
			    vertices   	(list Points
				(1154, 4434)
				(799, 4255))
			    line_style 	0)))
		(object AssociationViewNew "$UNNAMED$23" @58
		    location   	(1155, 4296)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4922C34402FC"
		    roleview_list 	(list RoleViews
			(object RoleView "index2info" @59
			    Parent_View 	@58
			    location   	(648, 819)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @60
				Parent_View 	@59
				location   	(1290, 4350)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	216
				justify    	0
				label      	"-index2info"
				pctDist    	0.391493
				height     	21
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4922C34501D5"
			    client     	@58
			    supplier   	@52
			    vertices   	(list Points
				(1155, 4296)
				(1512, 4384))
			    line_style 	0)
			(object RoleView "$UNNAMED$24" @61
			    Parent_View 	@58
			    location   	(648, 819)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4922C34501DA"
			    client     	@58
			    supplier   	@53
			    vertices   	(list Points
				(1155, 4296)
				(799, 4209))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseModel::IsVirtual" @62
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1047, 2547)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	16714250
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@62
			location   	(904, 2515)
			nlines     	1
			max_width  	286
			justify    	0
			label      	"• IsVirtual")
		    stereotype 	(object ItemLabel
			Parent_View 	@62
			location   	(904, 2465)
			anchor     	10
			nlines     	1
			max_width  	286
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    line_color 	16714250
		    fill_color 	16777215
		    quidu      	"4AA60846020A"
		    width      	304
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @63
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @64
			Parent_View 	@63
			location   	(1249, 2296)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	1.488578
			height     	322
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4AA608F0033F"
		    client     	@1
		    supplier   	@62
		    vertices   	(list Points
			(641, 2244)
			(921, 2452))
		    line_style 	0)
		(object UsesView "" @65
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @66
			Parent_View 	@65
			location   	(802, 2748)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4AA608FE01A3"
		    client     	@3
		    supplier   	@62
		    vertices   	(list Points
			(818, 2966)
			(995, 2641))
		    line_style 	0)
		(object ClassView "Class" "Logical View::external::boost::lexical_cast::lexical_cast" @67
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1005, 1077)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@67
			location   	(844, 1049)
			fill_color 	13434879
			nlines     	1
			max_width  	322
			justify    	0
			label      	"• lexical_cast")
		    stereotype 	(object ItemLabel
			Parent_View 	@67
			location   	(844, 999)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	322
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"46FCA22B0280"
		    width      	340
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @68
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @69
			Parent_View 	@68
			location   	(1121, 842)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4AC9BB2F0265"
		    client     	@16
		    supplier   	@67
		    vertices   	(list Points
			(999, 699)
			(1003, 986))
		    line_style 	0)
		(object ClassView "Class" "Logical View::external::boost::lexical_cast::lexical_cast" @70
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(288, 3453)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@70
			location   	(127, 3425)
			fill_color 	13434879
			nlines     	1
			max_width  	322
			justify    	0
			label      	"• lexical_cast")
		    stereotype 	(object ItemLabel
			Parent_View 	@70
			location   	(127, 3375)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	322
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"46FCA22B0280"
		    width      	340
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @71
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @72
			Parent_View 	@71
			location   	(767, 3264)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	-0.030210
			height     	159
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4ACD95F70273"
		    client     	@3
		    supplier   	@70
		    vertices   	(list Points
			(659, 3147)
			(397, 3362))
		    line_style 	0)
		(object ClassView "Class" "Logical View::shared::GCL::str::str_op" @73
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1596, 2538)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@73
			location   	(1446, 2510)
			nlines     	1
			max_width  	300
			justify    	0
			label      	"• str_op")
		    stereotype 	(object ItemLabel
			Parent_View 	@73
			location   	(1446, 2460)
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"4503E01500CB"
		    width      	318
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @74
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @75
			Parent_View 	@74
			location   	(1118, 2696)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4ACD973E0370"
		    client     	@3
		    supplier   	@73
		    vertices   	(list Points
			(913, 2966)
			(1449, 2628))
		    line_style 	0)
		(object UsesView "" @76
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @77
			Parent_View 	@76
			location   	(1601, 2324)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	1.135992
			height     	204
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4ACDA72403B5"
		    client     	@1
		    supplier   	@73
		    vertices   	(list Points
			(728, 2229)
			(1436, 2481))
		    line_style 	0)
		(object ClassView "Class" "Logical View::shared::WinGUI::Helpers::ClipboardHelper" @78
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1692, 4074)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@78
			location   	(1534, 4046)
			nlines     	1
			max_width  	316
			justify    	0
			label      	"ClipboardHelper")
		    stereotype 	(object ItemLabel
			Parent_View 	@78
			location   	(1534, 3996)
			anchor     	10
			nlines     	1
			max_width  	316
			justify    	0
			label      	"<<UtilityClass>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"4AD8524E02A2"
		    width      	334
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::ListCtrlWithCopy" @79
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2844, 4554)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@79
			location   	(2676, 4526)
			fill_color 	13434879
			nlines     	1
			max_width  	336
			justify    	0
			label      	"ListCtrlWithCopy")
		    stereotype 	(object ItemLabel
			Parent_View 	@79
			location   	(2676, 4476)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	336
			justify    	0
			label      	"<<GuiControl>>")
		    icon_style 	"Label"
		    line_color 	7885055
		    fill_color 	15448575
		    quidu      	"4AD86888019C"
		    width      	354
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::external::MFCTypes::Controls::CListCtrl" @80
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2370, 4092)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@80
			location   	(2223, 4064)
			fill_color 	13434879
			nlines     	1
			max_width  	294
			justify    	0
			label      	"• CListCtrl")
		    stereotype 	(object ItemLabel
			Parent_View 	@80
			location   	(2223, 4014)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	291
			justify    	0
			label      	"<<GuiControl>>")
		    icon_style 	"Label"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"45F9841C0251"
		    width      	312
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @81
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4AD868A3027B"
		    client     	@79
		    supplier   	@80
		    vertices   	(list Points
			(2750, 4463)
			(2462, 4182))
		    line_style 	0)
		(object UsesView "" @82
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @83
			Parent_View 	@82
			location   	(2218, 4422)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4AD85AA600D9"
		    client     	@79
		    supplier   	@78
		    vertices   	(list Points
			(2666, 4479)
			(1859, 4143))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::Helpers::ReportBuilder" @84
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1779, 3528)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	16714250
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@84
			location   	(1640, 3496)
			nlines     	1
			max_width  	278
			justify    	0
			label      	"ReportBuilder")
		    stereotype 	(object ItemLabel
			Parent_View 	@84
			location   	(1640, 3446)
			anchor     	10
			nlines     	1
			max_width  	278
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    line_color 	16714250
		    fill_color 	16777215
		    quidu      	"4BE12D3A036B"
		    width      	296
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @85
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @86
			Parent_View 	@85
			location   	(1331, 3185)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4BE152460187"
		    client     	@3
		    supplier   	@84
		    vertices   	(list Points
			(931, 3129)
			(1630, 3457))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::CommonViews::RoseItemList" @87
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1959, 5724)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	13110000
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@87
			location   	(1790, 5692)
			nlines     	1
			max_width  	338
			justify    	0
			label      	"• RoseItemList")
		    stereotype 	(object ItemLabel
			Parent_View 	@87
			location   	(1790, 5642)
			anchor     	10
			nlines     	1
			max_width  	338
			justify    	0
			label      	"<<GuiControl>>")
		    icon_style 	"Label"
		    line_color 	13110000
		    fill_color 	16777215
		    quidu      	"47E79D7E0362"
		    width      	356
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::GenSupport::ErrorInfoList" @88
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1911, 6204)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	6572835
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@88
			location   	(1768, 6172)
			nlines     	1
			max_width  	286
			justify    	0
			label      	"ErrorInfoList")
		    stereotype 	(object ItemLabel
			Parent_View 	@88
			location   	(1768, 6122)
			anchor     	10
			nlines     	1
			max_width  	286
			justify    	0
			label      	"<<Vector>>")
		    icon_style 	"Label"
		    line_color 	6572835
		    fill_color 	16777215
		    quidu      	"4BDFDBD003D8"
		    width      	304
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenerationErrorDialog" @89
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(663, 5943)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@89
			location   	(19, 5817)
			fill_color 	13434879
			nlines     	1
			max_width  	1288
			justify    	0
			label      	"• GenerationErrorDialog")
		    stereotype 	(object ItemLabel
			Parent_View 	@89
			location   	(19, 5767)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1288
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"4BE15A4F0223"
		    compartment 	(object Compartment
			Parent_View 	@89
			location   	(19, 5878)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	5
			max_width  	1285
			justify    	1)
		    width      	1306
		    height     	376
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$34" @90
		    location   	(1548, 5792)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4BE15AEB03B0"
		    roleview_list 	(list RoleViews
			(object RoleView "view" @91
			    Parent_View 	@90
			    location   	(1077, -151)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @92
				Parent_View 	@91
				location   	(1532, 5757)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	112
				justify    	0
				label      	"-view"
				pctDist    	-0.055300
				height     	39
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4BE15AEC019E"
			    client     	@90
			    supplier   	@87
			    vertices   	(list Points
				(1548, 5792)
				(1780, 5753))
			    line_style 	0)
			(object RoleView "$UNNAMED$35" @93
			    Parent_View 	@90
			    location   	(1077, -151)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4BE15AEC01AE"
			    client     	@90
			    supplier   	@89
			    vertices   	(list Points
				(1548, 5792)
				(1316, 5832))
			    line_style 	0)))
		(object AssociationViewNew "$UNNAMED$36" @94
		    location   	(1537, 6125)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4BE15E64024A"
		    roleview_list 	(list RoleViews
			(object RoleView "data" @95
			    Parent_View 	@94
			    location   	(1066, 182)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @96
				Parent_View 	@95
				location   	(1544, 6069)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	112
				justify    	0
				label      	"-data"
				pctDist    	-0.028487
				height     	57
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4BE15E6500B6"
			    client     	@94
			    supplier   	@88
			    vertices   	(list Points
				(1537, 6125)
				(1758, 6171))
			    line_style 	0)
			(object RoleView "$UNNAMED$37" @97
			    Parent_View 	@94
			    location   	(1066, 182)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4BE15E6500B8"
			    client     	@94
			    supplier   	@89
			    vertices   	(list Points
				(1537, 6125)
				(1316, 6079))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper" @98
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1521, 6513)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	705320
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@98
			location   	(1310, 6481)
			nlines     	1
			max_width  	422
			justify    	0
			label      	"RoseAbstractDumper")
		    stereotype 	(object ItemLabel
			Parent_View 	@98
			location   	(1310, 6431)
			anchor     	10
			nlines     	1
			max_width  	422
			justify    	0
			label      	"<<SimpleClass>>")
		    icon_style 	"Label"
		    line_color 	705320
		    fill_color 	16777215
		    quidu      	"4571D1A5009C"
		    width      	440
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @99
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @100
			Parent_View 	@99
			location   	(1108, 6383)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.525601
			height     	121
			orientation 	1)
		    line_color 	3947680
		    quidu      	"4BE1645D02F8"
		    client     	@89
		    supplier   	@98
		    vertices   	(list Points
			(946, 6131)
			(1379, 6418))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenerationErrorDialog" @101
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2223, 2085)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@101
			location   	(1579, 1959)
			fill_color 	13434879
			nlines     	1
			max_width  	1288
			justify    	0
			label      	"• GenerationErrorDialog")
		    stereotype 	(object ItemLabel
			Parent_View 	@101
			location   	(1579, 1909)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1288
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    fill_color 	15448575
		    quidu      	"4BE15A4F0223"
		    compartment 	(object Compartment
			Parent_View 	@101
			location   	(1579, 2020)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	5
			max_width  	1285
			justify    	1)
		    width      	1306
		    height     	376
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @102
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @103
			Parent_View 	@102
			location   	(1674, 2686)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4BE295F803BD"
		    client     	@3
		    supplier   	@101
		    vertices   	(list Points
			(931, 3012)
			(2041, 2710)
			(2166, 2273))
		    line_style 	0)
		(object UsesView "" @104
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @105
			Parent_View 	@104
			location   	(1145, 2008)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4BE295FD0042"
		    client     	@1
		    supplier   	@101
		    vertices   	(list Points
			(728, 2145)
			(1569, 2110))
		    line_style 	0)
		(object UsesView "" @106
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @107
			Parent_View 	@106
			location   	(2507, 1200)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4BE296030256"
		    client     	@8
		    supplier   	@101
		    vertices   	(list Points
			(1874, 1071)
			(2485, 1319)
			(2286, 1896))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::Commands::CmdManager" @108
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(267, 2589)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	16714250
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@108
			location   	(104, 2557)
			nlines     	1
			max_width  	326
			justify    	0
			label      	"• CmdManager")
		    stereotype 	(object ItemLabel
			Parent_View 	@108
			location   	(104, 2507)
			anchor     	10
			nlines     	1
			max_width  	326
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    line_color 	16714250
		    fill_color 	16777215
		    quidu      	"48031C2C0060"
		    width      	344
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @109
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @110
			Parent_View 	@109
			location   	(440, 2912)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4BE2BF43015C"
		    client     	@3
		    supplier   	@108
		    vertices   	(list Points
			(673, 2966)
			(369, 2683))
		    line_style 	0)
		(object UsesView "" @111
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @112
			Parent_View 	@111
			location   	(497, 2429)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3947680
		    quidu      	"4BE2BF5002E2"
		    client     	@1
		    supplier   	@108
		    vertices   	(list Points
			(465, 2244)
			(321, 2494))
		    line_style 	0)))
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ClassUID"
		    value      	"46CA74630128"))
	    quid       	"46CA753E0290"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::CreateReport" @113
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"588")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"687")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"292")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"166"))
		    location   	(588, 687)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	13110000
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@113
			location   	(452, 666)
			nlines     	1
			max_width  	272
			justify    	0
			label      	"CreateReport")
		    stereotype 	(object ItemLabel
			Parent_View 	@113
			location   	(452, 616)
			anchor     	10
			nlines     	1
			max_width  	272
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    line_color 	13110000
		    fill_color 	16777215
		    quidu      	"46CA74630128"
		    width      	290
		    height     	167
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::ReportsTreeItem" @114
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"618")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"273")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"418")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(618, 273)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	705320
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@114
			location   	(418, 245)
			nlines     	1
			max_width  	400
			justify    	0
			label      	"ReportsTreeItem")
		    stereotype 	(object ItemLabel
			Parent_View 	@114
			location   	(418, 195)
			anchor     	10
			nlines     	1
			max_width  	400
			justify    	0
			label      	"<<SimpleClass>>")
		    icon_style 	"Label"
		    line_color 	705320
		    fill_color 	16777215
		    quidu      	"458E8E730132"
		    width      	418
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @115
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"593,603;611,363"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @116
			Parent_View 	@115
			location   	(483, 474)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"46CA759D0177"
		    client     	@113
		    supplier   	@114
		    vertices   	(list Points
			(593, 603)
			(611, 363))
		    line_style 	0)))
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ClassUID"
		    value      	"457415F60222"))
	    quid       	"47982CD80328"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart::ResultFileType" @117
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(336, 168)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@117
			location   	(169, 86)
			fill_color 	13434879
			nlines     	1
			max_width  	334
			justify    	0
			label      	"ResultFileType")
		    stereotype 	(object ItemLabel
			Parent_View 	@117
			location   	(169, 36)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	334
			justify    	0
			label      	"<<Enum>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"4575760D0163"
		    width      	352
		    height     	288
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::MdaStart::Result" @118
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(582, 888)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@118
			location   	(382, 806)
			fill_color 	13434879
			nlines     	1
			max_width  	400
			justify    	0
			label      	"Result")
		    stereotype 	(object ItemLabel
			Parent_View 	@118
			location   	(382, 756)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	400
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"457575E20125"
		    width      	418
		    height     	288
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$2" @119
		    location   	(457, 527)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"4575764602AB"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$3" @120
			    Parent_View 	@119
			    location   	(-41, -226)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @121
				Parent_View 	@120
				location   	(556, 685)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				hidden     	TRUE
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	""
				pctDist    	0.800000
				height     	42
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"457576460376"
			    client     	@119
			    supplier   	@118
			    vertices   	(list Points
				(457, 527)
				(531, 743))
			    line_style 	0)
			(object RoleView "file_type" @122
			    Parent_View 	@119
			    location   	(-41, -226)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @123
				Parent_View 	@122
				location   	(467, 473)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	180
				justify    	0
				label      	"+file_type"
				pctDist    	0.219638
				height     	27
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"457576460367"
			    client     	@119
			    supplier   	@117
			    vertices   	(list Points
				(457, 527)
				(383, 312))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::StartProperties::Result" @124
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(909, 222)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	2313060
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@124
			location   	(755, 194)
			nlines     	1
			max_width  	308
			justify    	0
			label      	"Result")
		    stereotype 	(object ItemLabel
			Parent_View 	@124
			location   	(755, 144)
			anchor     	10
			nlines     	1
			max_width  	308
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    line_color 	2313060
		    fill_color 	16777215
		    quidu      	"4575757C004A"
		    width      	326
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$0" @125
		    location   	(756, 527)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"457575F1027C"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$1" @126
			    Parent_View 	@125
			    location   	(-54, 332)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @127
				Parent_View 	@126
				location   	(634, 682)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				hidden     	TRUE
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	""
				pctDist    	0.800000
				height     	42
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"457575F20175"
			    client     	@125
			    supplier   	@118
			    vertices   	(list Points
				(756, 527)
				(650, 743))
			    line_style 	0)
			(object RoleView "properties" @128
			    Parent_View 	@125
			    location   	(-54, 332)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @129
				Parent_View 	@128
				location   	(805, 337)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	218
				justify    	0
				label      	"+properties"
				pctDist    	0.800000
				height     	42
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"457575F20173"
			    client     	@125
			    supplier   	@124
			    vertices   	(list Points
				(756, 527)
				(862, 312))
			    line_style 	0)))))
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ClassUID"
		    value      	"45B5D15C031C"))
	    quid       	"46F34D4A030D"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::ATLControls::CToolBarCtrl" @130
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"168")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"117")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"296")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(339, 171)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@130
			location   	(169, 143)
			fill_color 	13434879
			nlines     	1
			max_width  	340
			justify    	0
			label      	"• CToolBarCtrl")
		    stereotype 	(object ItemLabel
			Parent_View 	@130
			location   	(169, 93)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	340
			justify    	0
			label      	"<<Typedef>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"45B5E2F80000"
		    width      	358
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::ATLControls::CToolTipCtrl" @131
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"171")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"336")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"296")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(333, 390)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@131
			location   	(169, 362)
			fill_color 	13434879
			nlines     	1
			max_width  	328
			justify    	0
			label      	"• CToolTipCtrl")
		    stereotype 	(object ItemLabel
			Parent_View 	@131
			location   	(169, 312)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	328
			justify    	0
			label      	"<<Typedef>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"45B865EA035B"
		    width      	346
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::ATLControls::CTreeItem" @132
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"171")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"555")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"296")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(330, 609)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@132
			location   	(182, 581)
			fill_color 	13434879
			nlines     	1
			max_width  	296
			justify    	0
			label      	"• CTreeItem")
		    stereotype 	(object ItemLabel
			Parent_View 	@132
			location   	(182, 531)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	296
			justify    	0
			label      	"<<Typedef>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"45BF25C70177"
		    width      	314
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)))
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ClassUID"
		    value      	"457416330177")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"47983417026F"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	415
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemType" @133
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(417, 309)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@133
			location   	(236, 152)
			fill_color 	13434879
			nlines     	1
			max_width  	362
			justify    	0
			label      	"ItemType")
		    stereotype 	(object ItemLabel
			Parent_View 	@133
			location   	(236, 102)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	362
			justify    	0
			label      	"<<Enum>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"4922C06F0337"
		    width      	380
		    height     	438
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtData" @134
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1422, 180)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	2313060
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@134
			location   	(1258, 152)
			nlines     	1
			max_width  	328
			justify    	0
			label      	"• GenArtData")
		    stereotype 	(object ItemLabel
			Parent_View 	@134
			location   	(1258, 102)
			anchor     	10
			nlines     	1
			max_width  	328
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    line_color 	2313060
		    fill_color 	16777215
		    quidu      	"45964D37029F"
		    width      	346
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::IndexToInfo" @135
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(291, 762)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@135
			location   	(149, 710)
			fill_color 	13434879
			nlines     	1
			max_width  	284
			justify    	0
			label      	"IndexToInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@135
			location   	(149, 660)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	284
			justify    	0
			label      	"<<Map>>")
		    icon_style 	"Label"
		    fill_color 	15787730
		    quidu      	"4922C30D021D"
		    width      	302
		    height     	228
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::TempFileSet" @136
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2523")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"6159")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"304")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(225, 1836)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@136
			location   	(83, 1784)
			fill_color 	16777215
			nlines     	1
			max_width  	284
			justify    	0
			label      	"TempFileSet")
		    stereotype 	(object ItemLabel
			Parent_View 	@136
			location   	(83, 1734)
			fill_color 	16777215
			anchor     	10
			nlines     	1
			max_width  	284
			justify    	0
			label      	"<<Set>>")
		    icon_style 	"Label"
		    fill_color 	15787730
		    quidu      	"464976ED00CB"
		    width      	302
		    height     	228
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfo" @137
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1155, 768)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@137
			location   	(1013, 716)
			fill_color 	13434879
			nlines     	1
			max_width  	284
			justify    	0
			label      	"ItemInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@137
			location   	(1013, 666)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	284
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"4922C29D0103"
		    width      	302
		    height     	228
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$16" @138
		    location   	(805, 550)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4922C2B201D2"
		    roleview_list 	(list RoleViews
			(object RoleView "type" @139
			    Parent_View 	@138
			    location   	(-236, -365)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @140
				Parent_View 	@139
				location   	(977, 490)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	627
				justify    	0
				label      	"+type"
				pctDist    	-0.497113
				height     	142
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4922C2B300D9"
			    client     	@138
			    supplier   	@133
			    vertices   	(list Points
				(805, 550)
				(607, 427))
			    line_style 	0)
			(object RoleView "$UNNAMED$17" @141
			    Parent_View 	@138
			    location   	(-236, -365)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4922C2B300DC"
			    client     	@138
			    supplier   	@137
			    vertices   	(list Points
				(805, 550)
				(1003, 673))
			    line_style 	0)))
		(object AssociationViewNew "$UNNAMED$18" @142
		    location   	(1292, 461)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4922C2E00114"
		    roleview_list 	(list RoleViews
			(object RoleView "art_data" @143
			    Parent_View 	@142
			    location   	(218, -754)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @144
				Parent_View 	@143
				location   	(1400, 325)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	256
				justify    	0
				label      	"+art_data"
				pctDist    	0.800000
				height     	42
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4922C2E003CA"
			    client     	@142
			    supplier   	@134
			    vertices   	(list Points
				(1292, 461)
				(1379, 270))
			    line_style 	0)
			(object RoleView "$UNNAMED$19" @145
			    Parent_View 	@142
			    location   	(218, -754)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4922C2E003D2"
			    client     	@142
			    supplier   	@137
			    vertices   	(list Points
				(1292, 461)
				(1205, 653))
			    line_style 	0)))
		(object AssociationViewNew "$UNNAMED$20" @146
		    location   	(722, 764)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4922C32401DB"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$21" @147
			    Parent_View 	@146
			    location   	(95, -235)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4922C3250071"
			    client     	@146
			    supplier   	@137
			    vertices   	(list Points
				(722, 764)
				(1003, 766))
			    line_style 	0)
			(object RoleView "$UNNAMED$22" @148
			    Parent_View 	@146
			    location   	(95, -235)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4922C3250074"
			    client     	@146
			    supplier   	@135
			    vertices   	(list Points
				(722, 764)
				(442, 762))
			    line_style 	0
			    label      	(object SegLabel @149
				Parent_View 	@148
				location   	(576, 762)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	5
				anchor_loc 	1
				nlines     	1
				max_width  	228
				justify    	0
				label      	"key : integer"
				pctDist    	0.900000
				height     	12
				orientation 	1))))
		(object ClassView "Class" "Logical View::Primitives::a-string" @150
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2964")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"5871")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"194")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"116"))
		    location   	(444, 1392)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	TRUE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@150
			location   	(337, 1346)
			fill_color 	13434879
			nlines     	1
			max_width  	214
			justify    	0
			label      	"a-string")
		    icon_style 	"None"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"452257A0036F"
		    width      	232
		    height     	117
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$8" @151
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"2660,6068;2873,5929"))
		    location   	(347, 1585)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"464977630196"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$9" @152
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewXPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewYPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewWidth"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewHeight"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LineVertices"
				    value      	"2766,5998;2873,5929"))
			    Parent_View 	@151
			    location   	(-421, -5249)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"464977640177"
			    client     	@151
			    supplier   	@150
			    vertices   	(list Points
				(347, 1585)
				(413, 1450))
			    line_style 	0)
			(object RoleView "$UNNAMED$10" @153
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewXPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewYPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewWidth"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewHeight"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LineVertices"
				    value      	"2766,5998;2660,6068"))
			    Parent_View 	@151
			    location   	(-421, -5249)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"464977640186"
			    client     	@151
			    supplier   	@136
			    vertices   	(list Points
				(347, 1585)
				(280, 1721))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::ItemInfoLess" @154
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1194, 1329)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@154
			location   	(999, 1277)
			fill_color 	13434879
			nlines     	1
			max_width  	390
			justify    	0
			label      	"ItemInfoLess")
		    stereotype 	(object ItemLabel
			Parent_View 	@154
			location   	(999, 1227)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	387
			justify    	0
			label      	"<<BinaryPredicate>>")
		    icon_style 	"Label"
		    fill_color 	15781360
		    quidu      	"4923AA23017C"
		    width      	408
		    height     	228
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$25" @155
		    location   	(972, 1082)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4923AA4D00F8"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$26" @156
			    Parent_View 	@155
			    location   	(-465, -460)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @157
				Parent_View 	@156
				location   	(1206, 917)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<first param>>"
				pctDist    	1.331395
				height     	136
				orientation 	1)
			    line_color 	3342489
			    quidu      	"4923AA4D02A3"
			    client     	@155
			    supplier   	@137
			    vertices   	(list Points
				(972, 1082)
				(932, 1037)
				(1058, 882))
			    line_style 	0)
			(object RoleView "$UNNAMED$27" @158
			    Parent_View 	@155
			    location   	(-465, -460)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4923AA4D02A7"
			    client     	@155
			    supplier   	@154
			    vertices   	(list Points
				(972, 1082)
				(1090, 1214))
			    line_style 	0)))
		(object AssociationViewNew "$UNNAMED$28" @159
		    location   	(1303, 1083)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4923AA580183"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$29" @160
			    Parent_View 	@159
			    location   	(-134, -459)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @161
				Parent_View 	@160
				location   	(1317, 701)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<second param>>"
				pctDist    	1.578913
				height     	174
				orientation 	0)
			    line_color 	3342489
			    quidu      	"4923AA5803A0"
			    client     	@159
			    supplier   	@137
			    vertices   	(list Points
				(1303, 1083)
				(1328, 1028)
				(1230, 882))
			    line_style 	0)
			(object RoleView "$UNNAMED$30" @162
			    Parent_View 	@159
			    location   	(-134, -459)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4923AA5803A4"
			    client     	@159
			    supplier   	@154
			    vertices   	(list Points
				(1303, 1083)
				(1243, 1214))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::GenStatistics::GenArtDataToText" @163
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"2958")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"6336")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"390")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(702, 1839)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@163
			location   	(516, 1787)
			fill_color 	16777215
			nlines     	1
			max_width  	372
			justify    	0
			label      	"GenArtDataToText")
		    stereotype 	(object ItemLabel
			Parent_View 	@163
			location   	(516, 1737)
			fill_color 	16777215
			anchor     	10
			nlines     	1
			max_width  	372
			justify    	0
			label      	"<<Map>>")
		    icon_style 	"Label"
		    fill_color 	15787730
		    quidu      	"4670CE84001F"
		    width      	390
		    height     	228
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$11" @164
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"2942,6246;2942,5928"))
		    location   	(556, 1587)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4670CED400FA"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$12" @165
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewXPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewYPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewWidth"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewHeight"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LineVertices"
				    value      	"2942,6087;2942,5928"))
			    Parent_View 	@164
			    location   	(109, -5646)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4670CED50119"
			    client     	@164
			    supplier   	@150
			    vertices   	(list Points
				(556, 1587)
				(478, 1450))
			    line_style 	0)
			(object RoleView "$UNNAMED$13" @166
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewXPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewYPosition"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewWidth"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ItemViewHeight"
				    value      	"0")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LineVertices"
				    value      	"2942,6087;2942,6246"))
			    Parent_View 	@164
			    location   	(109, -5646)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4670CED50128"
			    client     	@164
			    supplier   	@163
			    vertices   	(list Points
				(556, 1587)
				(635, 1724))
			    line_style 	0
			    label      	(object SegLabel @167
				Parent_View 	@166
				location   	(636, 1683)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	5
				anchor_loc 	1
				nlines     	1
				max_width  	244
				justify    	0
				label      	"key : ItemInfo"
				pctDist    	0.900000
				height     	12
				orientation 	1))))
		(object AssociationViewNew "$UNNAMED$31" @168
		    location   	(947, 1583)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"4923AAB9001F"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$32" @169
			    Parent_View 	@168
			    location   	(245, -256)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @170
				Parent_View 	@169
				location   	(973, 1570)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<compare>>"
				pctDist    	0.140592
				height     	10
				orientation 	0)
			    line_color 	3342489
			    quidu      	"4923AAB9019F"
			    client     	@168
			    supplier   	@154
			    vertices   	(list Points
				(947, 1583)
				(1082, 1443))
			    line_style 	0)
			(object RoleView "$UNNAMED$33" @171
			    Parent_View 	@168
			    location   	(245, -256)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4923AAB901A2"
			    client     	@168
			    supplier   	@163
			    vertices   	(list Points
				(947, 1583)
				(811, 1724))
			    line_style 	0)))))
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ClassUID"
		    value      	"4AD86888019C")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"4AD869E600C3"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::ListCtrlWithCopy" @172
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1095, 858)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	13110000
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@172
			location   	(927, 837)
			nlines     	1
			max_width  	336
			justify    	0
			label      	"ListCtrlWithCopy")
		    stereotype 	(object ItemLabel
			Parent_View 	@172
			location   	(927, 787)
			anchor     	10
			nlines     	1
			max_width  	336
			justify    	0
			label      	"<<GuiControl>>")
		    icon_style 	"Label"
		    line_color 	13110000
		    fill_color 	16777215
		    quidu      	"4AD86888019C"
		    width      	354
		    height     	167
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::GCL::str::str_op" @173
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(675, 432)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@173
			location   	(525, 404)
			nlines     	1
			max_width  	300
			justify    	0
			label      	"• str_op")
		    stereotype 	(object ItemLabel
			Parent_View 	@173
			location   	(525, 354)
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"4503E01500CB"
		    width      	318
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::GCL::data::std_defs" @174
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1338, 432)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@174
			location   	(1188, 404)
			nlines     	1
			max_width  	300
			justify    	0
			label      	"std_defs")
		    stereotype 	(object ItemLabel
			Parent_View 	@174
			location   	(1188, 354)
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"44FEBDF3039B"
		    width      	318
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @175
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"450422640109"
		    client     	@173
		    supplier   	@174
		    vertices   	(list Points
			(834, 432)
			(1178, 432))
		    line_style 	0)
		(object UsesView "" @176
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @177
			Parent_View 	@176
			location   	(805, 732)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"4AD869FB03C5"
		    client     	@172
		    supplier   	@173
		    vertices   	(list Points
			(1013, 774)
			(764, 522))
		    line_style 	0)
		(object UsesView "" @178
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @179
			Parent_View 	@178
			location   	(1110, 588)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"4AD86A000371"
		    client     	@172
		    supplier   	@174
		    vertices   	(list Points
			(1140, 774)
			(1285, 522))
		    line_style 	0)))
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ClassUID"
		    value      	"457416890148")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"4C0E2C530291"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseModel::ModelSearcher" @180
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1452, 309)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	16714250
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@180
			location   	(1298, 277)
			nlines     	1
			max_width  	308
			justify    	0
			label      	"ModelSearcher")
		    stereotype 	(object ItemLabel
			Parent_View 	@180
			location   	(1298, 227)
			anchor     	10
			nlines     	1
			max_width  	308
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    line_color 	16714250
		    fill_color 	16777215
		    quidu      	"4C0E1224034D"
		    width      	326
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::MDProcess::MDAAddinLib::MDAGui::UnusedUserCode" @181
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1311, 777)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	13110000
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@181
			location   	(1102, 756)
			nlines     	1
			max_width  	418
			justify    	0
			label      	"• UnusedUserCode")
		    stereotype 	(object ItemLabel
			Parent_View 	@181
			location   	(1102, 706)
			anchor     	10
			nlines     	1
			max_width  	418
			justify    	0
			label      	"<<Dialog>>")
		    icon_style 	"Label"
		    line_color 	13110000
		    fill_color 	16777215
		    quidu      	"457416890148"
		    width      	436
		    height     	167
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @182
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @183
			Parent_View 	@182
			location   	(1264, 515)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"4C0E2B8A00CC"
		    client     	@181
		    supplier   	@180
		    vertices   	(list Points
			(1334, 693)
			(1422, 403))
		    line_style 	0)
		(object ClassView "Class" "Logical View::external::std::fstream::ofstream" @184
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(780, 303)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@184
			location   	(658, 275)
			fill_color 	13434879
			nlines     	1
			max_width  	244
			justify    	0
			label      	"ofstream")
		    stereotype 	(object ItemLabel
			Parent_View 	@184
			location   	(658, 225)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	241
			justify    	0
			label      	"<<Typedef>>")
		    icon_style 	"Label"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"467B892C030F"
		    width      	262
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @185
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @186
			Parent_View 	@185
			location   	(971, 633)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"4C0E2C760149"
		    client     	@181
		    supplier   	@184
		    vertices   	(list Points
			(1218, 693)
			(882, 393))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase" @187
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2076, 774)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	705320
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@187
			location   	(1850, 742)
			nlines     	1
			max_width  	452
			justify    	0
			label      	"• AbstractDumperBase")
		    stereotype 	(object ItemLabel
			Parent_View 	@187
			location   	(1850, 692)
			anchor     	10
			nlines     	1
			max_width  	452
			justify    	0
			label      	"<<SimpleClass>>")
		    icon_style 	"Label"
		    line_color 	705320
		    fill_color 	16777215
		    quidu      	"4571A2EF02CE"
		    width      	470
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @188
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @189
			Parent_View 	@188
			location   	(1684, 656)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"4C0E2C8D0188"
		    client     	@181
		    supplier   	@187
		    vertices   	(list Points
			(1529, 775)
			(1840, 774))
		    line_style 	0)
		(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::SyntaxDef" @190
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(567, 792)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@190
			location   	(381, 760)
			nlines     	1
			max_width  	372
			justify    	0
			label      	"• SyntaxDef")
		    stereotype 	(object ItemLabel
			Parent_View 	@190
			location   	(381, 710)
			anchor     	10
			nlines     	1
			max_width  	372
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"4571A3B70109"
		    width      	390
		    height     	188
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @191
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @192
			Parent_View 	@191
			location   	(930, 903)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"4C0E2C9302FF"
		    client     	@181
		    supplier   	@190
		    vertices   	(list Points
			(1092, 780)
			(762, 787))
		    line_style 	0)
		(object ClassView "Class" "Logical View::shared::GCL::str::str_op" @193
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1320, 1194)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@193
			location   	(1170, 1166)
			nlines     	1
			max_width  	300
			justify    	0
			label      	"• str_op")
		    stereotype 	(object ItemLabel
			Parent_View 	@193
			location   	(1170, 1116)
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"4503E01500CB"
		    width      	318
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @194
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @195
			Parent_View 	@194
			location   	(1434, 980)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.500000
			height     	120
			orientation 	0)
		    line_color 	3342489
		    quidu      	"4C0E2D0E038B"
		    client     	@181
		    supplier   	@193
		    vertices   	(list Points
			(1312, 860)
			(1317, 1103))
		    line_style 	0)))))
