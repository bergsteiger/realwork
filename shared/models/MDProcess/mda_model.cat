
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.060314"
    charSet    	204)

(object Class_Category "MDAModel"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"is namespace"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"need UC"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (mpc)"
	    value      	"w:/MDProcess/project/MDAModel.mpc")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ApplyedGens"
	    value      	"C++ интерфейсы и реализация|COM|CORBA IDL")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (cpp)"
	    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper.cpp::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase.cpp::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase_ReportsTreeItem.cpp::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper_GenArtefacts_i.cpp::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceDumper.cpp::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceObject.cpp::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSingleDumperBase.cpp::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/ObjectTreeResolver.cpp::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/TemplateDumperDumper.cpp::4571A092005D,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractAttributeDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractCategoryDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractClassDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDependencyDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumpFactory.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractElementDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractOperationDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractParameterDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseDiagramDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseHelper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceDumper.cpp::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceObject.cpp::4571D1820251")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (h)"
	    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper.h::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase.h::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceDumper.h::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceObject.h::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSingleDumperBase.h::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/ObjectTreeResolver.h::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/SyntaxDef.h::4571A092005D,w:/MDProcess/MDAModel/AbstractDumpers/TemplateDumperDumper.h::4571A092005D,w:/MDProcess/MDAModel/RoseDumpers/RationalRoseTlb.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractAttributeDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractCategoryDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractClassDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDependencyDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumpFactory.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractElementDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractOperationDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractParameterDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseDiagramDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseHelper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceDumper.h::4571D1820251,w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceObject.h::4571D1820251")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (mpc2)"
	    value      	"")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (h)"
	    value      	"w:/MDProcess/MDAModel/LibHome.h")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (cpp)"
	    value      	"w:/MDProcess/MDAModel/LibHome.cpp")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"cpp:*4571A07300FA_ENVIRONMENTS_CONFIG*"
	    value      	(value Text 
|//#UC START# *4571A07300FA_ENVIRONMENTS_CONFIG*¤	//#UC END# *4571A07300FA_ENVIRONMENTS_CONFIG*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"cpp:*4571A07300FA_CUSTOM_REGISTRATE*"
	    value      	(value Text 
|//#UC START# *4571A07300FA_CUSTOM_REGISTRATE*¤	//#UC END# *4571A07300FA_CUSTOM_REGISTRATE*
	    ))
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"is standart"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"native name"
	    value      	""))
    quid       	"4571A07300FA"
    stereotype 	"Library"
    visible_categories 	(list visibility_relationship_list
	(object Visibility_Relationship
	    quid       	"4571E83B01F4"
	    supplier   	"Logical View::shared::GCL"
	    quidu      	"44FEB5D501E5")
	(object Visibility_Relationship
	    quid       	"460A3A610106"
	    supplier   	"Logical View::MDProcess::Описание MDGen"
	    quidu      	"458F96D20124")
	(object Visibility_Relationship
	    quid       	"462478BD02A8"
	    supplier   	"Logical View::MDProcess::ServerGate"
	    quidu      	"4614D4F6009C"))
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class_Category "AbstractDumpers"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper.h::4571A2CB02DE,w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase.h::4571A2EF02CE,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceDumper.h::4571A360030D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceObject.h::4571A3770203,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSingleDumperBase.h::4571A32201A5,w:/MDProcess/MDAModel/AbstractDumpers/ObjectTreeResolver.h::4571A0B90148,w:/MDProcess/MDAModel/AbstractDumpers/SyntaxDef.h::4571A3B70109,w:/MDProcess/MDAModel/AbstractDumpers/TemplateDumperDumper.h::4571A39F0280")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper.cpp::4571A2CB02DE,w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase.cpp::4571A2EF02CE,w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase_ReportsTreeItem.cpp::4571A2EF02CE,w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper_GenArtefacts_i.cpp::4571A2CB02DE,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceDumper.cpp::4571A360030D,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceObject.cpp::4571A3770203,w:/MDProcess/MDAModel/AbstractDumpers/AbstractSingleDumperBase.cpp::4571A32201A5,w:/MDProcess/MDAModel/AbstractDumpers/ObjectTreeResolver.cpp::4571A0B90148,w:/MDProcess/MDAModel/AbstractDumpers/TemplateDumperDumper.cpp::4571A39F0280"))
	    quid       	"4571A092005D"
	    stereotype 	"Unit"
	    visible_categories 	(list visibility_relationship_list
		(object Visibility_Relationship
		    quid       	"458E90A700C4"
		    supplier   	"Logical View::shared::GCL::data"
		    quidu      	"44FEB6B3010B")
		(object Visibility_Relationship
		    quid       	"460A3A3F028C"
		    supplier   	"Logical View::MDProcess::Описание MDGen::Проектирование и генерация"
		    quidu      	"46092E89025E")
		(object Visibility_Relationship
		    quid       	"462478F600F2"
		    supplier   	"Logical View::MDProcess::ServerGate::Contents"
		    quidu      	"462387C50000")
		(object Visibility_Relationship
		    quid       	"4624796F01EC"
		    supplier   	"Logical View::MDProcess::Описание MDGen::Интеграция с MDKnow"
		    quidu      	"46092EEE024E"))
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "ObjectTreeResolver"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A0B90148_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4571A0B90148_CUSTOM_INCLUDES*¤#include <algorithm>¤#include <map>¤#include <string>¤#include "shared/GCL/alg/sorting.h"¤//#UC END# *4571A0B90148_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A0B90148*"
			    value      	(value Text 
|//#UC START# *4571A0B90148*¤ObjectTreeResolver::ObjectTree* ObjectTreeResolver::s_tree = NULL;¤ObjectTreeResolver::AllSuppliersInfo ObjectTreeResolver::s_all_suppliers_info;¤¤ObjectTreeResolver::ObjectTreeResolver() {¤}¤¤bool ObjectTreeResolver::SortByUID::operator()(const ObjectTreeResolver* const x, const ObjectTreeResolver* const y) const {¤	return x->compare (y);¤}¤¤bool ObjectTreeResolver::PSortByUID::operator()(const ObjectTreeResolver** const x, const ObjectTreeResolver** const y) const {¤	return (*x)->compare ((*y));¤}¤    ¤int odp_compare( const void *a1, const void *a2 ) {¤	ObjectTreeResolver** x = *(ObjectTreeResolver***)a1;¤	ObjectTreeResolver** y = *(ObjectTreeResolver***)a2;¤¤	if ( (*y)->is_it_first ( *x ) ) {¤		//TRACE ( "COMPARE %s < %s\n", (*x)->get_full_name().data(), (*y)->get_full_name().data() );¤		return -1;¤	} else if ( (*x)->is_it_first ( *y ) ) {¤		//TRACE ( "COMPARE %s > %s\n", (*x)->get_full_name().data(), (*y)->get_full_name().data() );¤		return 1;¤/*	} else if ((*y)->is_it_first_in_model (*x)) {¤		TRACE ( "COMPARE %s < %s  (*)\n", (*x)->get_full_name().data(), (*y)->get_full_name().data() );¤		return -1;¤	} else if ((*x)->is_it_first_in_model (*y)) {¤		TRACE ( "COMPARE %s > %s  (*)\n", (*x)->get_full_name().data(), (*y)->get_full_name().data() );¤		return 1;¤*/	} else {¤		//TRACE ( "COMPARE %s = %s\n", (*x)->get_full_name().data(), (*y)->get_full_name().data() );¤		return 0;¤	}¤}¤¤ObjectTreeResolver::ObjectTreeResolver (const ObjectTreeResolver* parent ) {	¤	init (parent);¤}¤¤void ObjectTreeResolver::init (const ObjectTreeResolver* parent ) {	¤	m_own_tree = false;¤	if (parent) {		¤		s_tree->add_child (parent, this);¤	} else {¤		if (!s_tree) {¤			s_tree = new ObjectTree (this);¤			m_own_tree = true;¤		} else {¤			// looks like create temp dumper¤		}¤	}¤}¤¤void ObjectTreeResolver::sort_suppliers () {¤	//GDS::StopWatchEx sw ("ObjectTreeResolver::sort_suppliers");¤	ObjectTree::Items items = s_tree->sublings(this);¤	std::sort (items.begin(), items.end(), PSortByUID());¤¤	ObjectTree::Items::iterator it;¤¤	for (it = items.begin(); it != items.end(); it++ ) {¤		ObjectTreeResolver** p = const_cast<ObjectTreeResolver**>(*it);¤		set_suppler_position (*p);¤	}¤¤	// sort suppliers on child¤	items = s_tree->childs (this);¤	std::sort (items.begin(), items.end(), PSortByUID());¤¤	for (it = items.begin(); it != items.end(); it++ ) {¤		ObjectTreeResolver** p = const_cast<ObjectTreeResolver**>(*it);¤		(*p)->sort_suppliers();¤	}¤}¤¤void ObjectTreeResolver::clean_forward ( OTRSet& scope ) {¤	{¤		TRACE ("dump forward for %s\n", this->get_full_name().data());¤¤		for (OTRSet::iterator it = m_forwarded_suppliers.begin(); it != m_forwarded_suppliers.end(); it++) {¤			TRACE ("\t%s\n", (*it)->get_full_name().data());¤		}¤	}¤	{¤		m_not_in_scope_forwarded_suppliers = m_forwarded_suppliers;¤		// erase¤		OTRSet::iterator it;¤		for ( it = scope.begin(); it!=scope.end(); it++) {¤			m_forwarded_suppliers.erase (*it);¤		}¤¤		// insert¤		for ( it = m_forwarded_suppliers.begin(); it!=m_forwarded_suppliers.end(); it++)¤			scope.insert (*it);¤		¤		scope.insert (this);¤	}¤	¤	// clean on child¤	ObjectTree::Items items = s_tree->childs (this);¤	GCL::uqsort (items.begin(), items.size(), sizeof(ObjectTree::Item_ptr), odp_compare);¤¤	for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤		ObjectTreeResolver** p = const_cast<ObjectTreeResolver**>(*it);¤		(*p)->clean_forward(scope);¤	}¤}¤¤bool ObjectTreeResolver::is_it_supplier ( ¤	const ObjectTreeResolver* supplier, ¤	bool& is_navigable, ¤	bool& is_root, ¤	OTRVector& base ¤) const {¤	//GDS::StopWatchEx sw ("ObjectTreeResolver::is_it_supplier");¤¤	//GCL::StackMfcTrace st (1);¤	//TRACE ( "\t%sis_it_supplier[%s] (%s)\n", st.trace(), get_full_name().data(), supplier->get_full_name().data());¤¤	AllSuppliersInfo::iterator f = s_all_suppliers_info.find(AllSuppKey(this, supplier));¤	if (f != s_all_suppliers_info.end()) {		¤		is_navigable = f->second.is_navigable;¤		is_root = f->second.is_root;¤		//TRACE ( "\t%sRET : %d, is_root = %d, is_nav = %d\n", st.trace(), f->second.is_it_supp, is_root, is_navigable);¤		return f->second.is_it_supp;¤	}¤¤	is_navigable = false;¤	is_root = false;¤¤	if ( std::find (base.begin(), base.end(), this) != base.end() ) {¤		// cycle¤		//TRACE ( "\t%sRET : 0 (cycle)\n", st.trace() );¤		return false;¤	} ¤¤	base.push_back(this);¤	¤	bool ret_val = false;¤	while (1) {¤		// root suppliers¤		{	¤			if ( m_directive_suppliers.find (supplier) != m_directive_suppliers.end() ) {¤				is_root = true;¤				is_navigable = true;¤				ret_val = true;¤				break;¤			} else if ( m_suppliers.find (supplier) != m_suppliers.end() ) {¤				is_root = true;¤				is_navigable = false;¤				ret_val = true;¤				// no break to continue find navigable suppliers¤			}¤		}¤¤		// child suppliers¤		{¤			ObjectTree::Items items = s_tree->childs (this);¤			std::sort(items.begin(), items.end(), PSortByUID());¤¤			for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤				bool is_navigable_child, is_root_child;¤				if ( (**it)->is_it_supplier(supplier, is_navigable_child, is_root_child, base) ) {¤					ret_val = true;¤					if ( !is_root ) is_root = is_root_child;¤					if ( !is_navigable ) is_navigable = is_navigable_child;¤					if ( is_root && is_navigable ) break; // try to find root and navagable supplier in other childs¤				}¤			}¤			if (ret_val && is_root && is_navigable ) break; // try to find root and navagable supplier in sub-suppliers¤		}¤¤		// sub-supliers¤		{¤			bool is_navigable_sub, is_root_sub;¤			Supplier_set::const_iterator it;¤			for (it = m_directive_suppliers.begin(); it != m_directive_suppliers.end(); it++ ) {¤				if ( (*it).supplier->is_it_supplier (supplier, is_navigable_sub, is_root_sub, base) ) {¤					//is_root = false;					¤					if ( !is_navigable ) is_navigable = is_navigable_sub;¤					ret_val = true;¤					break;¤				}¤			}¤			if (ret_val) break;¤¤			for (it = m_suppliers.begin(); it != m_suppliers.end(); it++ ) {¤				if ( (*it).supplier->is_it_supplier (supplier, is_navigable_sub, is_root_sub, base) ) {¤					//is_root = false;¤					//is_navigable = false;					¤					ret_val = true;¤					break;¤				}¤			}¤			if (ret_val) break;¤		}¤¤		ret_val = false;¤		break;¤	}¤¤	base.pop_back();¤¤	//TRACE ( "\t%sRET : %d, is_root = %d, is_nav = %d\n", st.trace(), ret_val, is_root, is_navigable);¤	s_all_suppliers_info[AllSuppKey(this, supplier)] = SuppData (ret_val, is_navigable, is_root);¤	return ret_val;¤}¤¤void ObjectTreeResolver::add_supplier (const ObjectTreeResolver* sup, SuplType supl_type, std::string link_stereotype) {¤	if (sup) {¤		if (supl_type == ST_NAVIGABLE) {¤			Supplier_set::iterator it = m_directive_suppliers.find(SupplierInfo(sup));¤			if ( it == m_directive_suppliers.end() ) m_directive_suppliers.insert(SupplierInfo(sup, link_stereotype));¤			else {¤				GCL::StrSet* ptr = const_cast<GCL::StrSet*>(&((*it).link_stereotypes));¤				ptr->insert(link_stereotype);¤			}¤		} else if (supl_type == ST_NOT_NAVIGABLE) {¤			Supplier_set::iterator it2 = m_suppliers.find(SupplierInfo(sup));¤			if ( it2 == m_suppliers.end() ) m_suppliers.insert(SupplierInfo(sup, link_stereotype));¤			else {¤				GCL::StrSet* ptr2 = const_cast<GCL::StrSet*>(&((*it2).link_stereotypes));¤				ptr2->insert(link_stereotype);¤			}¤		} else {¤			Supplier_set::iterator it2 = m_other_suppliers.find(SupplierInfo(sup));¤			if ( it2 == m_other_suppliers.end() ) m_other_suppliers.insert(SupplierInfo(sup, link_stereotype));¤			else {¤				GCL::StrSet* ptr2 = const_cast<GCL::StrSet*>(&((*it2).link_stereotypes));¤				ptr2->insert(link_stereotype);¤			}¤		}¤	¤		// link consumer¤		if (!this->check_access (sup)) {¤			this->write_error_log ("Wrong access to " + sup->get_full_name());¤			link_stereotype += " WRONG ACCESS";¤		}¤¤		if (!this->check_visibility (sup, link_stereotype)) {¤			//this->write_error_log ("Can't access to " + sup->get_full_name());¤			link_stereotype += " WRONG VISIBILITY";¤		}¤¤		sup->add_consumer (this, link_stereotype);¤	}¤}¤¤bool ObjectTreeResolver::check_protected_visibility_access (const ObjectTreeResolver* sup, const std::string& link_stereotype) const {¤	const ObjectTreeResolver* par = this->get_parent_category ();¤	return (sup->get_parent_category () == par);¤}¤¤bool ObjectTreeResolver::check_private_visibility_access (const ObjectTreeResolver* sup, const std::string& link_stereotype) const {¤	return false;¤}¤¤bool ObjectTreeResolver::check_visibility (const ObjectTreeResolver* sup, const std::string& link_stereotype) const {¤	//TRACE ("%s::check_visibility to %s\n", this->get_full_name().data(), sup->get_full_name().data());¤¤	const ObjectTreeResolver* consumer = this->get_nearest_container();¤	const ObjectTreeResolver* sup_par = sup->ObjectTreeResolver::get_parent_category ();¤¤	//TRACE ("........... consumer is %s, sup_par is %s\n", consumer->get_full_name().data(), sup_par->get_full_name().data());¤¤	VisibilityType sup_vt = sup->get_visibility_type();¤	if (sup_vt == VT_PROTECTED) {¤		if (sup_par != consumer) {¤			if (!consumer->check_protected_visibility_access (sup, link_stereotype)) {		¤				this->write_error_log ("Can't access to PROTECTED " + sup->get_full_name());¤				return false;¤			}¤		}¤	} else if (sup_vt == VT_PRIVATE) {¤		if (sup_par != consumer) {¤			if (!consumer->check_private_visibility_access (sup, link_stereotype)) {¤				this->write_error_log ("Can't access to PRIVATE " + sup->get_full_name());¤				return false;¤			}¤		}¤	} else if (sup_vt == VT_IMPL) {¤		if (link_stereotype != ST_LINK_INH && link_stereotype != ST_LINK_DEP) {¤			std::string log = "Invalid access (" + link_stereotype;¤			log += ") to IMPLEMENTATION (cant only generalize) " + sup->get_full_name();¤			this->write_error_log (log);¤			return false;¤		}¤	}¤¤	if (sup->get_parent_category()->get_visibility_type() == VT_IMPL) {¤		if (sup->get_parent_category() != consumer->get_parent_category()) {¤			if (link_stereotype != ST_LINK_INH) {¤				std::string log = "Invalid access (" + link_stereotype;¤				log += ") to IMPLEMENTATION (cant only generalize) " + sup->get_full_name();¤				this->write_error_log (log);¤				return false;¤			}¤		}¤	}¤	return true;¤}¤¤bool ObjectTreeResolver::check_access (const ObjectTreeResolver* sup) const {¤	//TRACE ("%s::check_access to %s\n", this->get_full_name().data(), sup->get_full_name().data());¤		¤	const ObjectTreeResolver* sup_par = sup;¤	do {¤		if (sup_par == this || sup_par->is_global()) {¤			return true;¤		}¤	} while (sup_par = sup_par->get_parent_category ());¤¤	sup_par = sup->get_parent_category ();¤	assert (sup_par);¤	¤	const ObjectTreeResolver* par = this->get_parent_category ();¤	if (par == sup_par || par == sup) {¤		return true;¤	}¤	if (¤		par->m_suppliers.find(sup_par) != par->m_suppliers.end()¤		|| par->m_directive_suppliers.find(sup_par) != par->m_directive_suppliers.end()¤		|| par->m_other_suppliers.find(sup_par) != par->m_other_suppliers.end()¤		|| par->m_suppliers.find(sup) != par->m_suppliers.end()¤		|| par->m_directive_suppliers.find(sup) != par->m_directive_suppliers.end()¤		|| par->m_other_suppliers.find(sup) != par->m_other_suppliers.end()¤		|| this->m_suppliers.find(sup_par) != this->m_suppliers.end()¤		|| this->m_directive_suppliers.find(sup_par) != this->m_directive_suppliers.end()¤		|| this->m_other_suppliers.find(sup_par) != this->m_other_suppliers.end()¤	) {			¤		return true;¤	} else {¤		return false;¤	}	¤}¤¤bool ObjectTreeResolver::is_global() const {¤	return false;¤}¤¤void ObjectTreeResolver::add_consumer (const ObjectTreeResolver* consumer, std::string link_stereotype) const {¤	m_consumers.insert (ConsumerInfo(link_stereotype, consumer));¤}¤¤void ObjectTreeResolver::link_all_suppliers () {¤	link_suppliers();¤	ObjectTree::Items items = s_tree->childs (this);¤	for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤		ObjectTreeResolver** p = const_cast<ObjectTreeResolver**>(*it);¤		(*p)->link_all_suppliers();¤	}¤}¤¤void ObjectTreeResolver::add_forward_supplier ( const ObjectTreeResolver* sup ) {¤	m_forwarded_suppliers.insert(sup);¤	TRACE ( "add_forward_supplier %s -> (%s)\n", get_full_name().data(), sup->get_full_name().data() );¤}¤¤unsigned ObjectTreeResolver::suppliers_count () const {¤	return m_suppliers.size() + m_directive_suppliers.size() + m_other_suppliers.size();¤}¤¤bool ObjectTreeResolver::is_it_first ( const ObjectTreeResolver* od ) const {	¤	//ClassTreeResolver* cls = dynamic_cast<ClassTreeResolver*> (od);¤	//if ( !cls ) {¤		//TRACE ( "is_it_first %s(%s) : 1 (by dynamic_cast)\n", this->get_full_name().data(), od->get_full_name().data() );¤	//	return true;¤	//}¤	if ( od ) { ¤		OTRVector base;¤		if ( is_it_scope_no_forward(od, base) ) {¤			//TRACE ( "is_it_first %s(%s) : 1 (by this->is_it_scope_no_forward)\n", this->get_full_name().data(), od->get_full_name().data() );¤			return true;¤		}¤	}¤	//if ( od->is_it_scope_no_forward(this) ) {¤		//TRACE ( "is_it_first %s(%s) : 1 (by cls->is_it_scope_no_forward)\n", this->get_full_name().data(), od->get_full_name().data() );¤	//	return false;¤	//}¤	return false;¤}¤¤bool ObjectTreeResolver::is_it_scope ( const ObjectTreeResolver* od, OTRVector& base  ) const {¤	//TRACE ("is_it_scope[%s] (%s)\n", get_full_name().data(), od->get_full_name().data());¤	if ( od == this ) {¤		return true;¤	}¤¤	if ( m_forwarded_suppliers.find (od) != m_forwarded_suppliers.end() ) {¤		return true;¤	}¤¤	if ( std::find (base.begin(), base.end(), this) != base.end() ) {¤		// cycle¤		//TRACE ( "\tRET : 0 (cycle)\n");¤		return false;¤	} else {¤		base.push_back(this);¤	}¤¤	for (OTRSet::const_iterator it = m_top_suppliers.begin(); it != m_top_suppliers.end(); it++) {¤		if ( (*it)->is_it_scope(od, base) ) {¤			return true;¤		}¤	}¤	¤	return false;¤}¤bool ObjectTreeResolver::is_it_scope_no_forward ( const ObjectTreeResolver* od, OTRVector& base ) const {¤	//TRACE ("is_it_scope_no_forward[%s] (%s)\n", get_full_name().data(), od->get_full_name().data());¤	if ( od == this ) {¤		return true;¤	}¤¤	if ( std::find (base.begin(), base.end(), this) != base.end() ) {¤		// cycle¤		//TRACE ( "\tRET : 0 (cycle)\n");¤		return false;¤	} else {¤		base.push_back(this);¤	}¤¤	for (OTRSet::const_iterator it = m_top_suppliers.begin(); it != m_top_suppliers.end(); it++) {¤		if ( (*it)->is_it_scope_no_forward(od, base) ) {¤			return true;¤		}¤	}¤	¤	return false;¤}¤¤void ObjectTreeResolver::set_suppler_position ( ObjectTreeResolver* od ) {¤	//TRACE ( "set_suppler_position [%s] (%s)\n", get_full_name().data(), od->get_full_name().data() );¤¤	bool self_top = false;¤	bool is_navigable;¤	bool is_root;¤	bool is_back_root;¤	bool is_back_navigable;			¤¤	if ( od->is_it_supplier ( this, is_navigable, is_root) ) {¤		self_top = true;¤		//TRACE ( " *** check back suppl\n" );¤		if ( is_it_supplier ( od, is_back_navigable, is_back_root ) ) {¤			// chek for existent resolve¤			OTRVector base;¤			if ( is_it_scope_no_forward (od, base) ) {¤				//TRACE ( "RET:set_suppler_position: allready in scope\n" );¤				return;¤			}¤¤			// resolve cycle¤			bool sup_must_be_top = is_back_navigable || od->is_forbiden_forward_dcl();¤			bool sup_must_be_bottom = is_navigable || is_forbiden_forward_dcl();¤			¤			if ( sup_must_be_top && sup_must_be_bottom) {				¤				write_error_log ("Невозможно разрешить зависимость (возможно циклическая связь)", true);¤¤				// TODO : Ask user to resolve problem¤				sup_must_be_top = false;¤			}¤¤			if ( !sup_must_be_bottom && sup_must_be_top ) self_top = false;¤		}¤	}¤¤	if ( self_top ) {¤		OTRVector base;¤		if (is_back_root /*&& !is_it_scope (od, base)*/ ) {			¤			this->add_forward_supplier ( od );¤		}¤		¤		od->m_top_suppliers.insert(this);¤		m_botom_consumers.insert(od);¤	}¤¤	//TRACE ( "RET: set_suppler_position : %d\n", self_top );¤}¤¤ObjectTreeResolver::OTRSet ObjectTreeResolver::get_supplier_by_stereotype (std::string stereotype) const {¤	OTRSet res; ¤	Supplier_set::const_iterator it;¤	for (it = m_directive_suppliers.begin(); it != m_directive_suppliers.end(); it++) {¤		if ( (*it).link_stereotypes.find (stereotype) != (*it).link_stereotypes.end() ) ¤			res.insert((*it).supplier);¤	}¤	for (it = m_suppliers.begin(); it != m_suppliers.end(); it++) {¤		if ( (*it).link_stereotypes.find (stereotype) != (*it).link_stereotypes.end() )¤			res.insert((*it).supplier);¤	}¤	for (it = m_other_suppliers.begin(); it != m_other_suppliers.end(); it++) {¤		if ( (*it).link_stereotypes.find (stereotype) != (*it).link_stereotypes.end() )¤			res.insert((*it).supplier);¤	}¤	return res;¤}¤¤ObjectTreeResolver::OTRSet ObjectTreeResolver::get_supplier_by_stereotypes (GCL::StrSet stereotypes) const {¤	OTRSet res; ¤	Supplier_set::const_iterator it;¤¤	for (it = m_directive_suppliers.begin(); it != m_directive_suppliers.end(); it++) {¤		for (GCL::StrSet::iterator st_it = stereotypes.begin(); st_it != stereotypes.end(); st_it++) {¤			if ((*it).link_stereotypes.find (*st_it) != (*it).link_stereotypes.end()) {¤				res.insert((*it).supplier);¤				break;¤			}¤		}¤	}¤¤	for (it = m_suppliers.begin(); it != m_suppliers.end(); it++) {¤		for (GCL::StrSet::iterator st_it = stereotypes.begin(); st_it != stereotypes.end(); st_it++) {¤			if ( (*it).link_stereotypes.find (*st_it) != (*it).link_stereotypes.end() ) {¤				res.insert((*it).supplier);¤				break;¤			}¤		}¤	}¤¤	for (it = m_other_suppliers.begin(); it != m_other_suppliers.end(); it++) {¤		for (GCL::StrSet::iterator st_it = stereotypes.begin(); st_it != stereotypes.end(); st_it++) {¤			if ( (*it).link_stereotypes.find (*st_it) != (*it).link_stereotypes.end() ) {¤				res.insert((*it).supplier);¤				break;¤			}¤		}¤	}¤¤	return res;¤}¤¤/*ObjectTreeResolver::OTRSet ObjectTreeResolver::get_all_supplier_by_stereotype (std::string stereotype) const {¤	ObjectTreeResolver::OTRSet& res = this->get_supplier_by_stereotype (stereotype);¤¤	ObjectTree::Items items = s_tree->childs (this);¤	for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤		ObjectTreeResolver** p = const_cast<ObjectTreeResolver**>(*it);¤		res += (*p)->get_all_supplier_by_stereotype(stereotype);		¤	}¤¤	return res;¤}*/¤¤bool ObjectTreeResolver::compare (const ObjectTreeResolver* od) const {¤	return this < od;¤}	¤¤ObjectTreeResolver::OTRSet ObjectTreeResolver::get_all_suppliers () const {¤	OTRSet res; ¤	Supplier_set::const_iterator it;¤	for (it = m_directive_suppliers.begin(); it != m_directive_suppliers.end(); it++) {		¤		res.insert((*it).supplier);¤	}¤	¤	for (it = m_suppliers.begin(); it != m_suppliers.end(); it++) {¤		res.insert((*it).supplier);¤	}¤	¤	for (it = m_other_suppliers.begin(); it != m_other_suppliers.end(); it++) {¤		res.insert((*it).supplier);¤	}¤	return res;¤}¤¤const ObjectTreeResolver::Consumer_set& ObjectTreeResolver::get_consumer_infos () const {¤	return m_consumers;¤}¤¤ObjectTreeResolver::OTRSet ObjectTreeResolver::get_consumer_by_stereotype (std::string stereotype) const {¤	OTRSet res; ¤	Consumer_set::const_iterator it;¤	for (it = m_consumers.begin(); it != m_consumers.end(); it++) {¤		if ( (*it).link_stereotype == stereotype ) {¤			res.insert((*it).consumer);¤		}¤	}¤	return res;¤}¤¤const ObjectTreeResolver::OTRSet& ObjectTreeResolver::forwarded_suppliers () const {¤	return m_forwarded_suppliers;¤}¤¤const ObjectTreeResolver* ObjectTreeResolver::get_parent_category () const {	¤	return *(s_tree->parent(this));¤}¤¤const ObjectTreeResolver* ObjectTreeResolver::get_nearest_container () const {	¤	return *(s_tree->parent(this));¤}¤//#UC END# *4571A0B90148*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A0B90148_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571A0B90148_DESTR_BODY*¤	//#UC END# *4571A0B90148_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A0B90148_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4571A0B90148_CUSTOM_INCLUDES*¤#include <algorithm>¤#include <fstream>¤#include <functional>¤#include <list>¤#include "shared/GCL/data/std_defs.h"¤#include "shared/GCL/data/OnDemandFile.h"¤#include "shared/GCL/data/Tree.h"¤¤int odp_compare( const void *a1, const void *a2 );¤¤#define ST_LINK_INH "Inheretance"¤#define ST_LINK_DEP "Dependence"¤#define ST_LINK_REL "Realize"¤#define ST_SET_EXCEPTION "Set Exception"¤#define ST_GET_EXCEPTION "Get Exception"¤#define ST_TARGET "Target"¤#define ST_CATEGORY_NESTED_DEPENDENCE "Nested dependence"¤#define ST_SEQ_LINK_DEP "Sequence use"¤¤#define ST_USER_DEF_TARGET "UserTarget" // do not include in RegistredSupplierSt!¤//#UC END# *4571A0B90148_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A0B90148*"
			    value      	(value Text 
|//#UC START# *4571A0B90148*¤public:¤	struct AllSuppKey {¤		const ObjectTreeResolver* consumer;¤		const ObjectTreeResolver* supplier;¤¤		AllSuppKey (const ObjectTreeResolver* c, const ObjectTreeResolver* s)¤			: consumer (c)¤			, supplier (s)¤		{¤		}¤¤		bool operator < (const AllSuppKey& other) const {¤			return consumer != other.consumer ? consumer < other.consumer : supplier < other.supplier;¤		}¤	};¤¤	struct SuppData {¤		bool is_it_supp;¤		bool is_navigable;¤		bool is_root;¤¤		SuppData () 	¤			: is_it_supp (false)¤			, is_navigable (false)¤			, is_root (false)¤		{¤		}¤¤		SuppData (bool s, bool n, bool r) ¤			: is_it_supp (s)¤			, is_navigable (n)¤			, is_root (r)¤		{¤		}¤	};¤¤	typedef std::map<AllSuppKey, SuppData> AllSuppliersInfo;¤	static AllSuppliersInfo s_all_suppliers_info;¤¤protected:¤	struct SortByUID : public std::binary_function<const ObjectTreeResolver*, const ObjectTreeResolver*, bool> {¤		bool operator()(const ObjectTreeResolver* const x, const ObjectTreeResolver* const y) const;¤    };¤	struct PSortByUID : public std::binary_function<const ObjectTreeResolver*, const ObjectTreeResolver*, bool> {¤		bool operator()(const ObjectTreeResolver** const x, const ObjectTreeResolver** const y) const;¤    };¤	¤public:¤	typedef GCL::Tree<const ObjectTreeResolver*, false, SortByUID> ObjectTree;¤¤	struct SupplierInfo {¤		const ObjectTreeResolver* supplier;¤		GCL::StrSet link_stereotypes;¤		¤		SupplierInfo (const ObjectTreeResolver* s) : supplier(s) {¤		}¤		SupplierInfo (const ObjectTreeResolver* s, std::string st) : supplier(s) {¤			link_stereotypes.insert(st);¤		}¤		bool operator < (const SupplierInfo& c) const {¤				return supplier < c.supplier;¤		}¤	};¤¤	typedef std::set<const ObjectTreeResolver*, SortByUID> OTRSet;¤	typedef std::vector<const ObjectTreeResolver*> OTRVector;¤¤	enum SuplType {¤		ST_NAVIGABLE¤		, ST_NOT_NAVIGABLE¤		, ST_IGNORED¤	};¤¤protected:¤	typedef std::set<SupplierInfo> Supplier_set;	¤¤public:¤	ObjectTreeResolver(const ObjectTreeResolver* parent);¤	ObjectTreeResolver();¤	void init (const ObjectTreeResolver* parent );¤¤public:¤	virtual std::string get_full_name() const = 0;¤¤	enum VisibilityType {¤		VT_PUBLIC¤		, VT_PROTECTED¤		, VT_PRIVATE¤		, VT_IMPL¤	};¤¤	virtual VisibilityType get_visibility_type () const {¤		return VT_PUBLIC;¤	}¤¤public:¤	OTRSet get_supplier_by_stereotype (std::string stereotype) const;¤	OTRSet get_supplier_by_stereotypes (GCL::StrSet stereotypes) const;¤	OTRSet get_consumer_by_stereotype (std::string stereotype) const;¤	OTRSet get_all_suppliers () const;¤	const Consumer_set& ObjectTreeResolver::get_consumer_infos () const;¤	bool is_it_supplier (¤		const ObjectTreeResolver* supplier, ¤		bool& is_navigable, ¤		bool& is_root, ¤		OTRVector& base = OTRVector()¤	) const;¤	void add_forward_supplier (const ObjectTreeResolver* sup);¤	void add_supplier (const ObjectTreeResolver* sup, SuplType supl_type, std::string link_stereotype);¤	void add_consumer (const ObjectTreeResolver* consumer, std::string link_stereotype) const;¤	void link_all_suppliers ();	¤	virtual bool is_it_first (const ObjectTreeResolver* od) const;¤	virtual bool compare (const ObjectTreeResolver* od) const;¤¤public:¤	static ObjectTree* s_tree;¤¤protected:¤	virtual bool is_forbiden_forward_dcl () const = 0;¤	virtual void link_suppliers () = 0;	¤	virtual void write_error_log ( std::string mess, bool fatal = false ) const = 0;	¤	virtual void write_info_log ( std::string mess ) const = 0;	¤	virtual void write_warning_log ( std::string mess ) const = 0;	¤protected:¤	unsigned suppliers_count () const;¤	virtual bool is_it_scope ( const ObjectTreeResolver* od, OTRVector& base ) const;¤	virtual bool is_it_scope_no_forward ( const ObjectTreeResolver* od, OTRVector& base ) const;¤¤public:¤	void sort_suppliers ();	¤	virtual bool is_global() const;¤	virtual const ObjectTreeResolver* get_parent_category () const;			¤	virtual const ObjectTreeResolver* get_nearest_container () const;¤¤protected:¤	void clean_forward ( OTRSet& scope = OTRSet() );	¤	virtual void set_suppler_position ( ObjectTreeResolver* od );	¤	const OTRSet& forwarded_suppliers () const;¤	bool check_access (const ObjectTreeResolver* sup) const;¤	bool check_visibility (const ObjectTreeResolver* sup, const std::string& link_stereotype) const;¤	virtual bool check_protected_visibility_access (const ObjectTreeResolver* sup, const std::string& link_stereotype) const;¤	virtual bool check_private_visibility_access (const ObjectTreeResolver* sup, const std::string& link_stereotype) const;¤¤protected:¤	OTRSet m_top_suppliers;¤	OTRSet m_botom_consumers;¤	OTRSet m_not_in_scope_forwarded_suppliers;¤	mutable Consumer_set m_consumers;¤¤private:¤	bool m_own_tree;¤	OTRSet m_forwarded_suppliers;¤	Supplier_set m_suppliers;¤	Supplier_set m_directive_suppliers;¤	Supplier_set m_other_suppliers;¤//#UC END# *4571A0B90148*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/ObjectTreeResolver.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/ObjectTreeResolver.h"))
		    quid       	"4571A0B90148"
		    stereotype 	"SimpleClass"
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "ConsumerInfo"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need assign op"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need copy ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need init ctor"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need UC"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need dctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4575430E01C1_INIT_CTOR_BASE_INIT*"
				    value      	(value Text 
|//#UC START# *4575430E01C1_INIT_CTOR_BASE_INIT*¤	: link_stereotype(link_stereotype_), consumer(consumer_)¤//#UC END# *4575430E01C1_INIT_CTOR_BASE_INIT*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4575430E01C1_INIT_CTOR*"
				    value      	(value Text 
|//#UC START# *4575430E01C1_INIT_CTOR*¤	//#UC END# *4575430E01C1_INIT_CTOR*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4575430E01C1_457543AF024E_LESS*"
				    value      	(value Text 
|//#UC START# *4575430E01C1_457543AF024E_LESS*¤	return y.consumer < consumer || (y.consumer == consumer && y.link_stereotype < link_stereotype);¤	//#UC END# *4575430E01C1_457543AF024E_LESS*
				    )))
			    quid       	"4575430E01C1"
			    stereotype 	"Struct"
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "link_stereotype"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"TargetStereotype"
					    value      	"const")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45754336022E"
				    type       	"a-string"
				    quidu      	"452257A0036F"
				    exportControl 	"Public"
				    Containment 	"By Value")))
			(object Class "Consumer_set"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4575439C005A"
			    stereotype 	"Set")))
		(object Class "AbstractDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A2CB02DE_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4571A2CB02DE_CUSTOM_INCLUDES*¤#include <algorithm>¤#include <fstream>¤#include <string>¤#include <strstream>¤¤#include "shared/GCL/alg/CycleChecker.h"¤#include "shared/GCL/data/OnDemandFile.h"¤#include "shared/GCL/os/dir_op.h"¤#include "shared/GCL/alg/sorting.h"¤#include "shared/GCL/str/str_op.h"¤#include "shared/GCL/os/FileOp.h"¤#include "SyntaxDef.h"¤¤//#UC END# *4571A2CB02DE_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A2CB02DE*"
			    value      	(value Text 
|//#UC START# *4571A2CB02DE*¤typedef GCL::CycleChecker<const AbstractDumper*> GetFixedSizeCC;¤GetFixedSizeCC g_get_fixed_size_cc;¤//AbstractDumper::PostGenData AbstractDumper::s_stat;¤AbstractDumper::IsFixedTypeMap AbstractDumper::s_is_fixed_type_map;¤¤///////////////////////////////////////////////////////////////////////¤// contructor/destructor¤///////////////////////////////////////////////////////////////////////¤¤void AbstractDumper::init (const AbstractDumper * parent ) {¤	std::string tmp_map = s_current_map;¤¤	ObjectTreeResolver::init(parent);	¤¤	for (GenInfos::iterator it = s_gen_infos.begin(); it != s_gen_infos.end(); it++) {¤		s_current_map = it->first;¤		if ( parent ) {¤			m_outputs[s_current_map].intend = parent->is_plain()¤				? parent->intend()¤				: parent->intend() + 1;¤		}¤¤		TemplateBody tb = get_template_body ();¤		m_outputs[s_current_map].own_output = tb.file_create;¤	}¤	s_current_map = tmp_map;¤¤	if (parent) {¤		this->check_perent_st_constraint ();¤	}¤}¤¤///////////////////////////////////////////////////////////////////////¤// method implementation¤///////////////////////////////////////////////////////////////////////¤¤void AbstractDumper::check_perent_st_constraint () const {¤¤	const AbstractDumperBase* parent = this->parent();¤    ¤	if (parent) {¤		std::string st = this->get_model_stereotype_str();¤		std::string par_st = parent->get_model_stereotype_str();¤		¤		GCL::StrVector st_part = GCL::split_string_by_sub_string (st.data(), "::");¤		if (st_part.size() > 2) {¤			GCL::StrVector par_st_part = GCL::split_string_by_sub_string (par_st.data(), "::");¤¤			if ((st_part[0] == par_st_part[0] || st_part[0] == "default") && st_part[1] == par_st_part[1]) {¤				return;¤			}¤		} else {¤			const AbstractDumperBase::Template& pt = parent->get_template ();¤			if (pt.child_st_constarints.size()) {¤				GCL::StrSet::const_iterator it;¤				for (it = pt.child_st_constarints.begin (); it != pt.child_st_constarints.end (); ++it) {¤					if (pt.child_st_constarint_type == AbstractDumperBase::CSCT_INCLUDED) {¤						if (*it == st) {¤							return;¤						} else {¤							GCL::StrVector const_part = GCL::split_string_by_sub_string (it->data(), "::");¤							if (const_part[0] == "*" && st_part[1] == const_part[1]) {¤								return;¤							}¤						}¤					} else {¤						if (*it == st) {¤							break;¤						} else {¤							GCL::StrVector const_part = GCL::split_string_by_sub_string (it->data(), "::");¤							if (const_part[0] == "*" && st_part[1] == const_part[1]) {¤								break;¤							}¤						}¤					}¤				}¤¤				if (¤					pt.child_st_constarint_type == AbstractDumperBase::CSCT_EXCLUDED¤					&& it == pt.child_st_constarints.end()¤				) {¤					return;¤				}		¤			} else {¤				return;¤			}¤		}¤¤		std::string str ("Illegal use of stereotype <<");¤		str += st;¤		str += ">>";		¤		this->write_error_log (str.data());¤	}¤}¤¤std::string AbstractDumper::get_stereotype_str() const {¤	return "";¤}¤¤bool AbstractDumper::is_child_of (const AbstractDumperBase* parent) const {¤	if (s_tree) {¤		const AbstractDumper* ad_parent = dynamic_cast<const AbstractDumper*> (parent);¤		return s_tree->is_child_of_parent(this, ad_parent);¤	}¤	return false;¤}¤¤const AbstractDumperBase* AbstractDumper::parent() const {¤	const AbstractDumper* parent = NULL;	¤	if (s_tree) {¤		const ObjectTreeResolver** otr = s_tree->parent(this);¤		if (otr) parent = dynamic_cast<const AbstractDumper*>(*otr);¤	}¤	return parent;¤}¤¤//AbstractDumperBase::GenFileMap g_saved_generated_files;¤¤std::string AbstractDumper::get_intend_str (short intend_shift) const {¤	std::string ret;¤	short intend = 0;¤¤	OutputMap::const_iterator it = m_outputs.find(s_current_map);¤	if (it != m_outputs.end()) {¤		intend = (*it).second.intend;¤	}¤	intend += intend_shift;¤	if (intend < 0) {¤		intend = 0;¤	}¤	¤	for (int i = 0; i < intend; i++) {¤		ret += "\t";¤	}¤	return ret;¤}¤¤const RegistredSupplierSt g_registred_supplier;¤¤void AbstractDumper::collect_include (OTRSet& col) const {¤	{¤		OTRSet sups = this->get_supplier_by_stereotypes(g_registred_supplier);¤		for (OTRSet::iterator it = sups.begin(); it != sups.end(); it++) {¤			const AbstractDumper* rad = dynamic_cast<const AbstractDumper*>(*it);¤			while (rad) {¤				if (rad->get_template_body ().file_template != "") {¤					col.insert (rad);¤					break;¤				}¤				rad = dynamic_cast<const AbstractDumper*>(rad->parent());¤			}¤		}¤	}¤¤	ObjectTree::Items ch = s_tree->childs (this);¤	for ( ObjectTree::Items::iterator it = ch.begin(); it != ch.end(); it++ ) {¤		const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*(*it));¤		p->collect_include ( col );¤	}¤}¤¤void AbstractDumper::collect_all_include (OTRSet& col) const {¤	OTRSet prev = col;¤	this->collect_include (col);¤	¤	for (OTRSet::iterator it = col.begin(); it != col.end(); it++) {¤		if (prev.find(*it) == prev.end()) {¤			dynamic_cast<const AbstractDumper*>(*it)->collect_all_include(col);¤		}¤	}¤}¤¤AbstractDumper::ADList* AbstractDumper::get_includes () const {	¤	ADList_aptr ret = new ADList ();¤	OTRSet incs;¤	this->collect_include (incs);¤	incs.erase (this);¤	for (OTRSet::iterator it = incs.begin(); it != incs.end(); it++) {¤		AbstractDumper::ADList_aptr forwarded = this->get_forwarded();¤¤		if (std::find (forwarded->begin(), forwarded->end(), dynamic_cast<const AbstractDumper*>(*it)) == forwarded->end()) {¤			if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤				ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤			}¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_nsf_includes () const {		¤	OTRSet incs;¤	OTRSet incs_filtred;¤	this->collect_include (incs);¤	incs.erase (this);¤    ¤	OTRSet::iterator it;¤	for (it = incs.begin(); it != incs.end(); it++) {		¤		AbstractDumper::ADList_aptr nsf_forwarded = this->get_nsf_forwarded();¤¤		if (std::find (nsf_forwarded->begin(), nsf_forwarded->end(), dynamic_cast<const AbstractDumper*>(*it)) == nsf_forwarded->end()) {¤			if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤				const AbstractDumper* nsf = dynamic_cast<const AbstractDumper*>(*it);¤				while (nsf && nsf->create_file_name_str () == "") {¤					nsf = dynamic_cast<const AbstractDumper*>(nsf->parent());¤				}¤				if (nsf) {¤					incs_filtred.insert(nsf);¤				}¤			}¤		}¤	}¤¤	incs_filtred.erase (this);¤	ADList_aptr ret (new ADList ());¤	for (it = incs_filtred.begin(); it != incs_filtred.end(); it++) {¤		ret->push_back (dynamic_cast<const AbstractDumperBase*>(*it));¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_all_includes () const {	¤	ADList_aptr ret (new ADList ());¤	OTRSet incs;¤	this->collect_all_include (incs);¤	incs.erase (this);¤	for (OTRSet::iterator it = incs.begin(); it != incs.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_parents() const {¤	ADList_aptr ret (new ADList ());¤	const AbstractDumperBase* parent = this;¤¤	while (parent=parent->parent()) {¤		if (parent->parent()) { //cut Logical View¤			ret->push_back (parent);¤		}¤	}¤	return ret._retn ();¤}¤¤bool AbstractDumper::is_it_registred_supplied_by (const ObjectTreeResolver* supplier) const {¤	OTRSet supps = this->get_all_suppliers();¤¤	for (OTRSet::const_iterator it = supps.begin(); it != supps.end(); it++) {¤		if (*it == supplier) {¤			if (AbstractDumper::is_it_registred(this->get_model_stereotype_str())) {¤				return true;¤			}¤		}¤	}¤¤	ObjectTree::Items ch = s_tree->childs (this);¤	for ( ObjectTree::Items::iterator it = ch.begin(); it != ch.end(); it++ ) {¤		const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*(*it));¤		if (p->is_it_registred_supplied_by (supplier)) {¤			return true;¤		}¤	}¤¤	return false;¤}¤¤AbstractDumper::ADList* AbstractDumper::get_forwarded() const {¤	ADList_aptr ret (new ADList ());		¤	for (OTRSet::const_iterator it = this->forwarded_suppliers().begin(); it != this->forwarded_suppliers().end(); it++) {	¤		const AbstractDumper* ad = dynamic_cast<const AbstractDumper*>(*it);¤		if (this->is_it_registred_supplied_by(ad)) {¤			if (ad->accepted_generator()) {¤				ret->push_back(ad);¤			}¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_nsf_forwarded() const {¤	ADList_aptr ret (new ADList ());¤	for (OTRSet::const_iterator it = m_not_in_scope_forwarded_suppliers.begin(); it != m_not_in_scope_forwarded_suppliers.end(); it++) {	¤		const AbstractDumper* ad = dynamic_cast<const AbstractDumper*>(*it);¤		if (this->is_it_registred_supplied_by(ad)) {¤			if (ad->accepted_generator()) {¤				ret->push_back(ad);¤			}¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_sequences () const {	¤	ADList_aptr ret (new ADList ());¤¤	for (ADVector::const_iterator it = m_activity_seq.begin(); it != m_activity_seq.end(); it++) {¤		ret->push_back(it->in());¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList AbstractDumper::get_diagrams() const {			¤	return m_diagrams;¤}¤¤void AbstractDumper::add_diagram(AbstractDumperBase* ad) {¤	m_diagrams.push_back(ad);¤}¤¤AbstractDumper::ADList* AbstractDumper::get_get_exceptions() const {¤	OTRSet supp = get_supplier_by_stereotype (ST_GET_EXCEPTION);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_set_exceptions() const {¤	OTRSet supp = get_supplier_by_stereotype (ST_SET_EXCEPTION);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_realizations() const {¤	OTRSet supp = get_supplier_by_stereotype (ST_LINK_REL);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_generalizations () const {¤	OTRSet supp = get_supplier_by_stereotype (ST_LINK_INH);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_nested_realizations() const {¤¤	OTRSet gnrl;¤	this->collect_reqursive_generalization (gnrl);¤	gnrl.insert (this);¤¤	OTRSet set_ret;¤	for (OTRSet::iterator g_it = gnrl.begin(); g_it != gnrl.end(); g_it++) {¤		OTRSet supp = (*g_it)->get_supplier_by_stereotype (ST_LINK_REL);		¤¤		for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {	¤			const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*it);¤			if (p->accepted_generator()) {¤				set_ret.insert (p);¤				p->collect_reqursive_generalization (set_ret); // NOT realization!¤			}¤		}¤	}¤¤	ADList_aptr ret (new ADList ());¤	for (OTRSet::iterator it = set_ret.begin(); it != set_ret.end(); it++) {¤		ret->push_back (dynamic_cast<const AbstractDumper*>(*it));¤	}¤¤	return ret._retn ();¤}¤¤void AbstractDumper::collect_reqursive_generalization (OTRSet& res) const {¤	OTRSet supp = get_supplier_by_stereotype (ST_LINK_INH);¤			¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {		¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {			¤			res.insert(*it);¤			dynamic_cast<const AbstractDumper*>(*it)->collect_reqursive_generalization (res);¤		}¤	}	¤}¤¤AbstractDumper::ADList* AbstractDumper::get_nested_generalizations () const {¤	OTRSet supp;¤	this->collect_reqursive_generalization(supp);¤	¤	ADList_aptr ret (new ADList ());¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		ret->push_back (dynamic_cast<const AbstractDumper*>(*it));¤	}¤	return ret._retn ();¤}¤¤¤AbstractDumperBase::ADList* AbstractDumper::get_dependences () const {¤	OTRSet supp = get_supplier_by_stereotype (ST_LINK_DEP);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumperBase::ADList* AbstractDumper::get_reqursive_dependences () const {	¤	TRACE ("get_reqursive_dependences for %s\n", this->get_full_name().data());¤	OTRSet supp;¤	this->collect_reqursive_dependences (supp);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {		¤		ret->push_back(dynamic_cast<const AbstractDumper*>(*it));		¤	}¤	return ret._retn ();¤}¤¤void AbstractDumper::collect_reqursive_dependences (OTRSet& res) const {¤	TRACE ("collect_reqursive_dependences for %s\n", this->get_full_name().data());¤¤	OTRSet supp = this->get_supplier_by_stereotype (ST_LINK_DEP);¤			¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {		¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {			¤			if (res.insert(*it).second) {¤				TRACE ("collect_reqursive_dependences insert %s\n", dynamic_cast<const AbstractDumper*>(*it)->get_full_name().data());¤				dynamic_cast<const AbstractDumper*>(*it)->collect_reqursive_dependences (res);¤			}¤		}¤	}	¤}¤¤¤AbstractDumperBase::ADList* AbstractDumper::get_nested_top_suppliers () const {¤	ADList_aptr ret (new ADList ());¤¤	ObjectTree::Item_ptr my_par = s_tree->parent (this);¤	for (OTRSet::const_iterator it = m_top_suppliers.begin(); it != m_top_suppliers.end(); it++) {¤		if (my_par == s_tree->parent (*it)) {¤			if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤				ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤			}¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumperBase::ADList* AbstractDumper::get_nested_botom_consumers () const {¤	ADList_aptr ret (new ADList ());¤¤	ObjectTree::Item_ptr my_par = s_tree->parent (this);¤	for (OTRSet::const_iterator it = m_botom_consumers.begin(); it != m_botom_consumers.end(); it++) {¤		if (my_par == s_tree->parent (*it)) {¤			if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤				ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤			}¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumperBase::ADList* AbstractDumper::get_all_consumers () const {¤	ADList_aptr ret (new ADList ());¤¤	for (Consumer_set::const_iterator it = m_consumers.begin(); it != m_consumers.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(it->consumer)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(it->consumer));¤		}¤	}¤	return ret._retn ();¤}¤¤void AbstractDumper::collect_requrcive_all_consumers (OTRSet& col) const {¤	for (Consumer_set::const_iterator it = m_consumers.begin(); it != m_consumers.end(); it++) {¤		const AbstractDumper* ad = dynamic_cast<const AbstractDumper*>(it->consumer);¤		std::string mcs = ad->get_model_class_str ();¤		if (¤			mcs == "Operation" ¤			|| mcs == "Attribute"¤			|| mcs == "Parameter"¤			|| mcs == "Dependency"¤		) {¤			ad = dynamic_cast<const AbstractDumper*>(ad->parent ());¤		}¤		if (ad->accepted_generator()) {¤			if (col.insert (ad).second) {¤				ad->collect_requrcive_all_consumers (col);¤			}¤		}¤	}¤}¤¤AbstractDumperBase::ADList* AbstractDumper::get_requrcive_all_consumers () const {¤	ADList_aptr ret (new ADList ());¤	OTRSet col;¤	this->collect_requrcive_all_consumers (col);¤¤	col.erase (this);¤	for (OTRSet::iterator it = col.begin(); it != col.end(); it++) {¤		ret->push_back(dynamic_cast<const AbstractDumper*>(*it));		¤	}¤	return ret._retn ();¤}¤¤AbstractDumperBase::ADList* AbstractDumper::get_source () const {¤	OTRSet supp = get_consumer_by_stereotype (ST_TARGET);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumperBase::ADList* AbstractDumper::get_generalizator () const {¤	OTRSet supp = get_consumer_by_stereotype (ST_LINK_INH);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));	¤		}¤	}¤	return ret._retn ();¤}¤¤AbstractDumperBase::ADList* AbstractDumper::get_realizator () const {¤	OTRSet supp = get_consumer_by_stereotype (ST_LINK_REL);¤	ADList_aptr ret (new ADList ());¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret->push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret._retn ();¤}¤/*¤AbstractDumper::ADList AbstractDumper::get_generalizations () const {¤	OTRSet supp = get_supplier_by_stereotype (ST_LINK_INH);¤	ADList ret;¤		¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {¤		if (dynamic_cast<const AbstractDumper*>(*it)->accepted_generator()) {¤			ret.push_back(dynamic_cast<const AbstractDumper*>(*it));¤		}¤	}¤	return ret;¤}¤¤AbstractDumper::ADList AbstractDumper::get_nested_realizations() const {¤	OTRSet supp = get_supplier_by_stereotype (ST_LINK_REL);¤	ADList ret;¤¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {	¤		const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*it);¤		if (p->accepted_generator()) {¤			ret.push_back (p);¤¤			ADList nr = p->get_nested_realizations();¤			ret.insert(ret.end(), nr.begin(), nr.end()); ¤		}¤	}¤¤	return ret;¤}¤*/¤AbstractDumperBase::ADList* AbstractDumper::get_req_generalizator () const {¤	OTRSet supp = get_consumer_by_stereotype (ST_LINK_INH);¤	ADList_aptr ret (new ADList ());¤¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {	¤		const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*it);¤		if (p->accepted_generator()) {¤			ret->push_back (p);¤¤			ADList_aptr nr = p->get_req_generalizator();¤			ret->insert(ret->end(), nr->begin(), nr->end()); ¤		}¤	}¤¤	return ret._retn ();¤}¤¤AbstractDumperBase::ADList* AbstractDumper::get_req_realizator () const {¤	OTRSet supp = get_consumer_by_stereotype (ST_LINK_REL);¤	ADList_aptr ret (new ADList ());¤¤	for (OTRSet::iterator it = supp.begin(); it != supp.end(); it++) {	¤		const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*it);¤		if (p->accepted_generator()) {¤			ret->push_back (p);¤¤			ADList_aptr nr = p->get_req_generalizator(); //!!! - it is not an error !!!¤			ret->insert(ret->end(), nr->begin(), nr->end()); ¤		}¤	}¤¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_all_contents () const {¤	ObjectTree::Items items = s_tree->childs ((AbstractDumper*)this);¤	GCL::uqsort (items.begin(), items.size(), sizeof(ObjectTree::Item_ptr), odp_compare);¤¤	ADList_aptr ret (new ADList ());¤	for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤		const ObjectTreeResolver* otr = *(*it);¤		const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(otr);¤		const AbstractDumperBase* targ = p->get_target ();¤		if (p->accepted_generator() && (!targ || targ->accepted_generator())) {¤			ret->push_back (p);¤¤			ADList_aptr all_c = p->get_all_contents();¤¤			ret->insert(ret->end(), all_c->begin(), all_c->end()); ¤		}¤	}¤¤	return ret._retn ();¤}¤¤AbstractDumper::ADList* AbstractDumper::get_contents () const {¤	ObjectTree::Items items = s_tree->childs ((AbstractDumper*)this);¤	GCL::uqsort (items.begin(), items.size(), sizeof(ObjectTree::Item_ptr), odp_compare);¤	¤	ADList_aptr ret (new ADList ());¤	for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤		const ObjectTreeResolver* otr = *(*it);¤		const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(otr);¤		const AbstractDumperBase* targ = p->get_target ();¤		if (p->accepted_generator() && (!targ || targ->accepted_generator())) {¤			ret->push_back (p);¤		}¤	}¤¤	return ret._retn ();¤}¤¤bool AbstractDumper::am_i_registred () const {¤	return is_it_registred (get_model_stereotype_str());¤}¤¤std::ostream* AbstractDumper::output () const {¤	return m_outputs[s_current_map].file;¤}¤¤bool AbstractDumper::own_output () const {¤	bool ret = false;¤	OutputMap::const_iterator it = m_outputs.find(s_current_map);¤	if (it != m_outputs.end()) ret = (*it).second.own_output;¤	¤	return ret;¤}¤¤std::string AbstractDumper::file_name () const {¤	std::string ret;¤	OutputMap::const_iterator it = m_outputs.find(s_current_map);¤	if (it != m_outputs.end()) ret = (*it).second.file_name;¤	¤	return ret;¤}¤¤void AbstractDumper::own_output (bool oo) {¤	m_outputs[s_current_map].own_output = oo;¤}¤¤unsigned AbstractDumper::intend () const {¤	unsigned  ret = false;¤	OutputMap::const_iterator it = m_outputs.find(s_current_map);¤	if (it != m_outputs.end()) ret = (*it).second.intend;¤	¤	return ret;¤}¤¤void AbstractDumper::inc_intend () {¤	m_outputs[s_current_map].intend++;¤}¤¤void AbstractDumper::dec_intend () {¤	m_outputs[s_current_map].intend--;¤}¤¤bool AbstractDumper::is_type_fixed_size () const {		¤	IsFixedTypeMap::iterator is_fixed_it = s_is_fixed_type_map.find (this);¤	if (is_fixed_it == s_is_fixed_type_map.end ()) {¤		// check self¤		TemplatePainter::TPArgs args;¤		args.push_back(this);¤		AbstractDumper::TemplatePainter tp (args, NULL, this);¤		GCL::StrVector params;¤		params.push_back("%S");¤		std::string trans = tp.transform ("fixed_type", params);¤		if (trans == "true") {¤			is_fixed_it = s_is_fixed_type_map.insert (¤				IsFixedTypeMap::value_type (this, true)¤			).first;¤			return true;¤		} else if (trans == "false") {¤			is_fixed_it = s_is_fixed_type_map.insert (¤				IsFixedTypeMap::value_type (this, false)¤			).first;¤			return false;¤		} ¤¤		GetFixedSizeCC::Iteration iteration (g_get_fixed_size_cc, this);¤		if (iteration.is_cycled()) {¤			is_fixed_it = s_is_fixed_type_map.insert (¤				IsFixedTypeMap::value_type (this, false)¤			).first;¤			return false;¤		}¤		¤		bool constructed_type = false;¤¤		// check childs¤		{¤			ObjectTree::Items items = s_tree->childs ((AbstractDumper*)this);¤			if (items.size() != 0) {¤				for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤					const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*(*it));¤					if (!p->is_type_fixed_size()) {¤						is_fixed_it = s_is_fixed_type_map.insert (¤							IsFixedTypeMap::value_type (this, false)¤						).first;¤						return false;				¤					}¤				}¤				constructed_type = true;¤			} ¤		}¤¤		// check target¤		{¤			const AbstractDumper* target = dynamic_cast<const AbstractDumper*>(this->get_target());¤			if (target) {¤				if (!target->is_type_fixed_size()) {¤					is_fixed_it = s_is_fixed_type_map.insert (¤						IsFixedTypeMap::value_type (this, false)¤					).first;¤					return false;				¤				}¤				constructed_type = true;¤			}¤		}¤		¤		// check realizations¤		{¤			AbstractDumper::ADList_aptr ad_list = this->get_realizations();¤			if (ad_list->size() != 0) {¤				for (ADList::iterator it = ad_list->begin(); it != ad_list->end(); it++) {¤					const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*it);¤					if (!p->is_type_fixed_size()) {¤						is_fixed_it = s_is_fixed_type_map.insert (¤							IsFixedTypeMap::value_type (this, false)¤						).first;¤						return false;¤					}¤				}¤				constructed_type = true;¤			}¤		}¤¤		// check generalizations¤		{¤			AbstractDumper::ADList_aptr ad_list = this->get_generalizations();	¤			if (ad_list->size() != 0) {¤				for (ADList::iterator it = ad_list->begin(); it != ad_list->end(); it++) {¤					const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(*it);¤					if (!p->is_type_fixed_size()) {¤						is_fixed_it = s_is_fixed_type_map.insert (¤							IsFixedTypeMap::value_type (this, false)¤						).first;¤						return false;¤					}¤				}¤				constructed_type = true;¤			}¤		}¤		is_fixed_it = s_is_fixed_type_map.insert (¤			IsFixedTypeMap::value_type (this, constructed_type)¤		).first;¤		return constructed_type;¤	}¤	return is_fixed_it->second;¤}¤¤std::string AbstractDumper::get_type_fixed_size_str () const {¤	return (this->is_type_fixed_size() ? "true" : "false");¤}¤¤std::string AbstractDumper::get_abstract_str () const {¤	return "false";¤}¤¤std::string AbstractDumper::get_class_kind_str () const {¤	return "";¤}¤¤std::string AbstractDumper::get_link_type_str () const {¤	return "";¤}¤¤std::ostream* AbstractDumper::get_output () const {¤	if ( own_output() ) {¤		if (!m_outputs[s_current_map].file) {¤			m_outputs[s_current_map].file_name = create_file_name ();¤			¤			if (m_outputs[s_current_map].file_name == "") {¤				goto NO_OUTPUT;¤			}¤¤			FILE* file = fopen (m_outputs[s_current_map].file_name.c_str(), "rt");¤			if (this->get_template_body ().user_file && file) {¤				m_outputs[s_current_map].file = new std::strstream;¤				fclose (file);				¤			} else {¤				if (file) {¤					// ранее созданный файл¤					try {¤						this->load_user_code (file);¤					} catch (FatalError& ex) {¤						fclose (file);¤						throw FatalError (¤							std::string (ex.mess() + " in file (" + m_outputs[s_current_map].file_name + ")")¤						);¤					}¤¤					fclose (file);				¤				} ¤			¤				// Создаем полный путь¤				GCL::create_tree_dirs (m_outputs[s_current_map].file_name.c_str(), true);					¤				¤				std::ofstream* new_file = new std::ofstream(¤					create_gen_file_name (m_outputs[s_current_map].file_name).data()¤					, std::ios_base::out¤				);¤				¤				if (!new_file->is_open ()) {¤					char mess[128];¤					sprintf (mess, "Can't open output file for %s\n", this->get_full_name().c_str());¤					throw FatalError(mess);¤				} else {¤					/*char mess[128];¤					sprintf (¤						mess, ¤						"Output file: \"%s\"", ¤						m_outputs[s_current_map].file_name.c_str()¤					);¤					this->write_info_log(mess);*/¤				}¤				m_outputs[s_current_map].file = new_file;¤			}¤		}¤		return m_outputs[s_current_map].file;¤	}¤¤NO_OUTPUT:¤	if (this != AbstractDumperBase::s_gen_root_element && parent()) {¤		return parent()->get_output();¤	} else {¤		m_outputs[s_current_map].file = new std::strstream; //garbage stream¤		m_outputs[s_current_map].own_output = true;¤		return m_outputs[s_current_map].file;¤	}	¤}¤¤bool AbstractDumper::has_registred_parent () const {¤	const AbstractDumperBase* par = parent();¤	return par && (par->am_i_registred() || par->has_registred_parent ());	¤}¤¤const AbstractDumperBase* AbstractDumper::get_target() const {¤	GCL::StrSet target_st;¤	target_st.insert (ST_TARGET);¤	target_st.insert (ST_USER_DEF_TARGET);¤	OTRSet targets = get_supplier_by_stereotypes (target_st);¤	¤	if (targets.size() != 1) {¤		return NULL;¤	}¤	¤	if (dynamic_cast<const AbstractDumper*>(*targets.begin())->accepted_generator()) {¤		return dynamic_cast<const AbstractDumper*>(*targets.begin());¤	} else {¤		return 0;¤	}¤}¤¤void AbstractDumper::add_sequence (ADVector asds) {¤	for (ADVector::iterator it = asds.begin(); it != asds.end(); it++) {¤		//TRACE ("\n%s\n", (*it)->get_name_str().c_str());¤	}¤¤	if (asds.size()) {¤		if (m_activity_seq.size() > 0) {¤			//throw FatalError ("Different sequence");¤			char mess[128];¤			sprintf (¤				mess¤				, "Different sequence for one model opeartion \"%s\""¤				, this->get_name_str().c_str()¤			);¤			this->write_error_log (mess);¤		} else {¤			m_activity_seq = asds;¤		}¤	}¤}¤¤//#UC END# *4571A2CB02DE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A2CB02DE_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571A2CB02DE_DESTR_BODY*¤	for (ADList::iterator it2 = m_diagrams.begin(); it2 != m_diagrams.end(); it2++) {¤		delete const_cast<AbstractDumperBase*>(*it2);¤	}¤	//#UC END# *4571A2CB02DE_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A2CB02DE_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4571A2CB02DE_CUSTOM_INCLUDES*¤class RegistredSupplierSt: public GCL::StrSet {¤public:¤	RegistredSupplierSt () {¤		this->insert(ST_LINK_INH);¤		this->insert(ST_LINK_DEP);¤		this->insert(ST_LINK_REL);¤		this->insert(ST_SET_EXCEPTION);¤		this->insert(ST_GET_EXCEPTION);¤		this->insert(ST_TARGET);¤		this->insert(ST_CATEGORY_NESTED_DEPENDENCE);¤	}¤};¤//#UC END# *4571A2CB02DE_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A2CB02DE*"
			    value      	(value Text 
|//#UC START# *4571A2CB02DE*¤public:¤	typedef std::map<const AbstractDumper*, bool> IsFixedTypeMap;¤	static IsFixedTypeMap s_is_fixed_type_map;¤¤public:¤	void init (const AbstractDumper* parent );¤¤	virtual void add_sequence (ADVector aads);¤¤	bool am_i_registred () const;¤	virtual std::string get_intend_str (short intend_shift) const;¤	virtual std::string get_stereotype_str () const;¤	virtual std::string get_type_fixed_size_str () const;¤	virtual std::string get_abstract_str() const;¤	virtual std::string get_class_kind_str() const;¤	virtual std::string get_link_type_str () const;¤	virtual void collect_include (OTRSet& col) const;¤	virtual void collect_all_include (OTRSet& col) const;¤	virtual ADList* get_dependences() const;¤	virtual ADList* get_reqursive_dependences() const;¤	void collect_reqursive_dependences (OTRSet& res) const;¤	void collect_reqursive_generalization (OTRSet& res) const;¤	¤	virtual ADList* get_generalizations () const;	¤	virtual ADList* get_realizations() const;¤	virtual ADList* get_nested_generalizations () const;¤	virtual ADList* get_nested_realizations() const;¤	virtual ADList* get_generalizator() const;¤	virtual ADList* get_realizator() const;¤	virtual ADList* get_req_generalizator() const;¤	virtual ADList* get_req_realizator() const;¤	¤	virtual ADList* get_source () const;¤	virtual ADList* get_nested_top_suppliers () const;¤	virtual ADList* get_nested_botom_consumers () const;	¤	virtual ADList* get_all_consumers () const;¤	void collect_requrcive_all_consumers (OTRSet& col) const;¤	virtual ADList* get_requrcive_all_consumers  () const;	¤	virtual ADList* get_forwarded() const;¤	virtual ADList* get_nsf_forwarded() const;¤	virtual ADList* get_sequences () const;¤	virtual ADList* get_get_exceptions() const;¤	virtual ADList* get_set_exceptions() const;¤	virtual ADList* get_parents() const;¤	virtual ADList* get_contents () const;¤	virtual ADList* get_all_contents() const;¤	virtual ADList* get_includes () const;¤	virtual ADList* get_all_includes () const;¤	virtual ADList* get_nsf_includes () const;¤	virtual ADList get_diagrams() const;¤	void add_diagram(AbstractDumperBase* ad);¤	virtual const AbstractDumperBase* get_target () const;¤	const AbstractDumperBase* parent () const;¤	bool is_child_of (const AbstractDumperBase* parent) const;¤	bool has_registred_parent () const;¤	virtual bool is_type_fixed_size () const;¤	bool is_it_registred_supplied_by (const ObjectTreeResolver* supplier) const;¤¤	std::string file_name () const;¤¤	bool is_forbiden_forward_dcl () const {¤		return AbstractDumperBase::is_forbiden_forward_dcl();¤	}¤¤protected:¤	void check_perent_st_constraint () const;¤	bool own_output () const;	¤	std::ostream* get_output () const;¤	void own_output (bool oo);¤	std::ostream* output () const;	¤¤private:¤	struct OutputDesc {¤		std::string file_name;¤		std::ostream* file;¤		bool own_output;¤		unsigned intend;¤¤		OutputDesc ()  {¤			file = NULL;¤			own_output = false;¤			intend = 0;¤		}¤	};¤	typedef std::map <GenID, OutputDesc> OutputMap;¤¤protected:¤	mutable OutputMap m_outputs;¤	ADVector m_activity_seq;¤	ADList m_diagrams;¤¤protected:¤	unsigned intend () const;¤	void inc_intend ();¤	void dec_intend ();¤//#UC END# *4571A2CB02DE*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"DerivedImplement"
			    value      	"459D2DD40228,459D2DA9011E,45C9F5AE03B9,45C9F5490109")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ImplementSelectType"
			    value      	"exclude")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"OverloadSelectType"
			    value      	"include")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"NESTED GENERATED FILES (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper_GenArtefacts_i.cpp::45964CC70250"))
		    quid       	"4571A2CB02DE"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571A2EB03D8"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::ObjectTreeResolver"
			    quidu      	"4571A0B90148")
			(object Inheritance_Relationship
			    quid       	"4571A30003A9"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase"
			    quidu      	"4571A2EF02CE"))
		    operations 	(list Operations
			(object Operation "get_artefacts"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"TargetStereotype"
				    value      	"cached")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459650C2007C*"
				    value      	(value Text 
|//#UC START# *459650C2007C*¤	return *GenArtsSingleton::instance();¤	//#UC END# *459650C2007C*
				    )))
			    quid       	"459650C2007C"
			    documentation 	"Доступ к информации о сгенерированных артефактах"
			    stereotype 	"static"
			    result     	"GenArtefacts"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"459649A50137")
			(object Operation "push_changes"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"final")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459D4B190370*"
				    value      	(value Text 
|//#UC START# *459D4B190370*¤	std::string temp_map = s_current_map;¤	for ( GCL::StrSet::iterator it = s_active_map.begin(); it != s_active_map.end(); it++ ) {¤		bool with_parent;¤		if (this->is_native (with_parent) == false) {//собираем статистику ТОЛЬКО для НЕ native элементов¤			s_current_map = *it;¤¤			GenSourceInfo srs;¤			srs.gen_id = s_current_map;¤			SourceStatus status;¤¤			if (this->own_output()) {¤				std::ofstream* file = dynamic_cast<std::ofstream*>(output());¤				if (file) {¤					// truncate file to real size¤					unsigned int size = (unsigned int)file->tellp();¤					file->close();¤¤					if (AbstractDumperBase::s_options.cancel_generations) {¤						continue;¤					}¤¤					srs.source.file_name(this->file_name());¤									¤					HANDLE hFile; ¤					hFile = CreateFile(¤						create_gen_file_name (this->file_name()).data(),¤						GENERIC_READ|GENERIC_WRITE,// open for reading ¤						FILE_SHARE_READ,           // share for reading ¤						NULL,                      // no security ¤						OPEN_EXISTING,             // existing file only ¤						FILE_ATTRIBUTE_NORMAL,     // normal file ¤						NULL // no attr. template ¤					);¤					if (hFile == INVALID_HANDLE_VALUE) {¤						char mess[1024];¤						sprintf (¤							mess¤							, "Could not open file. \"%s\", errno = %d (%s)"¤							, create_gen_file_name (this->file_name()).data()¤							, errno¤							, strerror (errno)¤						);¤						throw FatalError(mess);   // process error ¤					} ¤					¤					char* buf = new char[size];¤					unsigned long right_size = 0;¤					ReadFile(hFile, buf, size, &right_size, NULL);¤					¤					FILE* right_file = fopen (this->file_name().data(), "rb");¤¤					SetEndOfFile(hFile);				¤					CloseHandle (hFile);¤¤					// check for changes			¤									¤					bool is_diff = true;¤					if (right_file) {¤						fseek(right_file, 0, SEEK_END);¤						right_size = ftell(right_file);¤						if (right_size == size) {¤							char* right_buf = new char [right_size];						¤							rewind (right_file);¤							fread (right_buf , right_size, 1, right_file);¤							¤							is_diff = memcmp (right_buf, buf, right_size) != 0;						¤							delete right_buf;¤						}¤						fclose (right_file);					¤					}¤					delete buf;¤¤					if (is_diff) {¤						if (right_file) {¤							status = SS_CHG;¤						} else if (size) {¤							status = SS_NEW;¤						}¤					} else {¤						status = SS_EQ;¤						GCL::FileOp::remove_file(create_gen_file_name(srs.source.file_name()).data());¤					}¤¤					AbstractDumper::get_artefacts().add (GenArtData(this, status, srs));¤				} ¤			}¤			¤			// check self for deleted files¤			Core::Aptr<GenSourceInfo> old_srs = this->get_self_generated_source ();¤			if (old_srs.ptr()) {¤				if (old_srs->source.d_ () == GST_FILE) {¤					if (old_srs->source.file_name() != "") {¤						if (srs.source.d_ () != GST_FILE || srs.source.file_name() != old_srs->source.file_name()) {¤							AbstractDumper::get_artefacts().add (GenArtData(this, SS_DEL, *old_srs));¤						}¤					}¤				} else {¤					assert (0);¤				}¤			}¤			¤			// check deleted childs for deleted files¤			Core::Aptr<GenSourceInfoSet> deleted_srs = this->get_deleted_child_generated_source ();¤			if (deleted_srs.ptr()) {¤				for (GenSourceInfoSet::iterator it = deleted_srs->begin(); it != deleted_srs->end(); it++) {¤					if (it->source.d_ () == GST_FILE) {¤						if (srs.source.d_ () != GST_FILE || srs.source.file_name() != it->source.file_name()) {¤							AbstractDumper::get_artefacts().add (GenArtData(this, SS_DEL, *it));¤						}¤					} else {¤						assert (0);¤					}¤				}¤			}¤		}¤	}¤¤	s_current_map = temp_map;¤¤////////////////¤¤	std::string tmp_map = s_current_map;¤¤	for (OutputMap::iterator it = m_outputs.begin(); it != m_outputs.end(); it++) {¤		s_current_map = it->first;¤		¤		OutputDesc& od = it->second;¤		if (od.own_output) {¤			delete od.file;¤			od.file = 0;¤		}¤¤		TemplateBody tb = get_template_body ();¤		od.own_output = tb.file_create;¤	}¤¤	s_current_map = tmp_map;¤	¤	ObjectTree::Items items = s_tree->childs (this);¤	for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤		const AbstractDumper* p = dynamic_cast<const AbstractDumper*>(**it);¤		if (p) {¤			p->push_changes ();¤		}¤	}¤	//#UC END# *459D4B190370*
				    )))
			    quid       	"459D4B190370"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "reset_artefacts"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9CDBF004E*"
				    value      	(value Text 
|//#UC START# *45C9CDBF004E*¤	GenArtsSingleton::instance()->reset();¤	//#UC END# *45C9CDBF004E*
				    )))
			    quid       	"45C9CDBF004E"
			    documentation 	"Сброс данных о сгенерированных артефактах"
			    stereotype 	"static"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "dump_commit"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9CDD703A9*"
				    value      	(value Text 
|//#UC START# *45C9CDD703A9*¤	// new¤	Core::Aptr<AbstractDumper::ArtefactSet> new_arts = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_NEW);¤	for (AbstractDumper::ArtefactSet::const_iterator it = new_arts->begin(); it != new_arts->end(); it++) {¤		if ((*it)->source_info.source.d_() == AbstractDumper::GST_FILE) {¤			try {¤				GCL::FileOp::move_file (¤					create_gen_file_name((*it)->source_info.source.file_name()).data()¤					, (*it)->source_info.source.file_name().data()¤					, true¤				);¤				(*it)->dumper->set_self_generated_source ((*it)->source_info);¤			} catch (GCL::FileOp::FOException& ex) {¤				char mess[1024];¤				sprintf (mess, "Can't rename new file \"%s\" (%s)", create_gen_file_name((*it)->source_info.source.file_name()).data(), ex.what());¤				this->write_warning_log(mess);¤			}¤		} else {¤			assert (0);¤		}¤	}¤¤	// chg¤	Core::Aptr<AbstractDumper::ArtefactSet> chg_arts = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_CHG);¤	for (AbstractDumper::ArtefactSet::const_iterator it = chg_arts->begin(); it != chg_arts->end(); it++) {¤		if ((*it)->source_info.source.d_() == AbstractDumper::GST_FILE) {¤			try {¤				GCL::FileOp::move_file ((*it)->source_info.source.file_name().data(), ((*it)->source_info.source.file_name() + ".bak").data(), true);¤				GCL::FileOp::move_file (¤					create_gen_file_name((*it)->source_info.source.file_name()).data()¤					, (*it)->source_info.source.file_name().data()¤					, true¤				);¤				(*it)->dumper->set_self_generated_source ((*it)->source_info);¤			} catch (GCL::FileOp::FOException& ex) {¤				char mess[1024];¤				sprintf (mess, "Can't rename changed file \"%s\" (%s)", create_gen_file_name((*it)->source_info.source.file_name()).data(), ex.what());¤				this->write_warning_log(mess);¤			}¤		} else {¤			assert (0);¤		}¤	}¤¤	// del¤	Core::Aptr<AbstractDumper::ArtefactSet> del_arts = AbstractDumper::get_artefacts ().get_by_status (AbstractDumper::SS_DEL);¤	for (AbstractDumper::ArtefactSet::const_iterator it = del_arts->begin(); it != del_arts->end(); it++) {¤		if ((*it)->source_info.source.d_() == AbstractDumper::GST_FILE) {¤			try {¤				GCL::FileOp::move_file (¤					(*it)->source_info.source.file_name().data()¤					, ((*it)->source_info.source.file_name() + ".bak").data()¤					, true¤				);¤				(*it)->dumper->remove_generated_source ((*it)->source_info);¤			} catch (GCL::FileOp::InvalidPath& ex) {¤				char mess[1024];¤				sprintf (mess, "Can't rename deleted file \"%s\" (%s)", (*it)->source_info.source.file_name().data(), ex.what());¤				this->write_warning_log(mess);¤				(*it)->dumper->remove_generated_source ((*it)->source_info);¤			} catch (GCL::FileOp::FOException& ex) {¤				char mess[1024];¤				sprintf (mess, "Can't rename deleted file \"%s\" (%s)", (*it)->source_info.source.file_name().data(), ex.what());¤				this->write_warning_log(mess);¤			}¤		} else {¤			assert (0);¤		}¤	}¤	¤	//fake_deleted¤	Core::Aptr<AbstractDumper::ArtefactSet> fake_del_arts = AbstractDumper::get_artefacts ().get_fake_deleted ();¤	for (AbstractDumper::ArtefactSet::const_iterator it = fake_del_arts->begin(); it != fake_del_arts->end(); it++) {¤		if ((*it)->source_info.source.d_() == AbstractDumper::GST_FILE) {¤			(*it)->dumper->remove_generated_source ((*it)->source_info);			¤		} else {¤			assert (0);¤		}¤	}¤	/*¤	// update saved generated file infos¤	¤		std::string tmp_map = s_current_map;¤		for (GCL::StrSet::iterator it = s_active_map.begin(); it != s_active_map.end(); it++) {¤			s_current_map = *it;¤			this->reset_generated_file_list (true);¤		}¤		s_current_map = tmp_map;¤	¤¤		¤	}*/¤¤	if (!AbstractDumperBase::s_options.disable_post_processing) {					¤		for (AbstractDumper::ArtefactSet::const_iterator it = new_arts->begin(); it != new_arts->end(); it++) {¤			std::string tmp_map = s_current_map;¤			s_current_map = (*it)->source_info.gen_id;¤			(*it)->dumper->run_post_command();¤			s_current_map = tmp_map;¤		}¤¤		for (AbstractDumper::ArtefactSet::const_iterator it = chg_arts->begin(); it != chg_arts->end(); it++) {¤			std::string tmp_map = s_current_map;¤			s_current_map = (*it)->source_info.gen_id;¤			(*it)->dumper->run_post_command();¤			s_current_map = tmp_map;¤		}¤	}¤	//#UC END# *45C9CDD703A9*
				    )))
			    quid       	"45C9CDD703A9"
			    documentation 	
|Завершает генерацию, применяя все ее результаты на файловую систему 
|и, сохраняя информацию о сгенерированных артефактах на модели
			    
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "dump_start"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9CDE70157*"
				    value      	(value Text 
|//#UC START# *45C9CDE70157*¤	//g_saved_generated_files.clear ();¤	this->write_info_log ("Start sorting...");¤	//const_cast<AbstractDumper*>(this)->sort_suppliers ();¤	{¤		ObjectTree::Items items = s_tree->childs (this);¤		std::sort (items.begin(), items.end(), PSortByUID());¤¤		for (ObjectTree::Items::iterator it = items.begin(); it != items.end(); it++ ) {¤			ObjectTreeResolver** p = const_cast<ObjectTreeResolver**>(*it);¤			(*p)->sort_suppliers();¤		}¤	}¤¤	const_cast<AbstractDumper*>(this)->clean_forward ();¤	¤	this->write_info_log ("Sorting complete. Start write to output files...");¤¤	AbstractDumperBase::s_gen_root_element = this;¤	for (GCL::StrSet::iterator it = s_active_map.begin(); it != s_active_map.end(); it++) {¤		char mess [128];¤		sprintf (mess, "Write for: %s...", it->c_str());¤		this->write_info_log (mess);¤¤		s_current_map = *it;¤¤		//AbstractDumperBase::GenFileMap s = this->get_all_generated_files ();¤		//g_saved_generated_files.insert (s.begin(), s.end());¤		¤		this->dump();¤	}¤	s_current_map = "";¤	AbstractDumperBase::s_gen_root_element = 0;¤	//#UC END# *45C9CDE70157*
				    )))
			    quid       	"45C9CDE70157"
			    documentation 	"Начинает генерацию, от данного узла"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "create_gen_file_name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"TargetStereotype"
				    value      	"const")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9CE01037A*"
				    value      	(value Text 
|//#UC START# *45C9CE01037A*¤	std::string ret = fn + STR_TEMP_GEN_EX;¤	size_t fp = fn.rfind('.');¤	if (fp > 0) {¤		ret += fn.data() + fp;¤	}¤	return ret;¤	//#UC END# *45C9CE01037A*
				    )))
			    quid       	"45C9CE01037A"
			    documentation 	"создает имя для файла временной генерации"
			    stereotype 	"static"
			    parameters 	(list Parameters
				(object Parameter "fn"
				    quid       	"45C9F94A001F"
				    type       	"a-string"
				    quidu      	"452257A0036F"))
			    result     	"a-string"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"452257A0036F"))
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "gen_arts"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4596508401C4"
			    stereotype 	"static"
			    type       	"GenArtefacts_i"
			    quidu      	"45964CC70250"
			    exportControl 	"Protected"
			    Containment 	"By Value"))
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "ArtefactSet"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"459651F100AB"
			    stereotype 	"Set")
			(object Class "GenArtefacts"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"459649A50137"
			    documentation 	"Информация об сгенерированных артефактах. Заполняется в процессе генерации, затем используется для отображения статистики и для сохранения подтвержденных изменений"
			    stereotype 	"Facet"
			    operations 	(list Operations
				(object Operation "add"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"abstract")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*45964A3E027F_45964CC70250*"
					    value      	(value Text 
|//#UC START# *45964A3E027F_45964CC70250*¤	/*if (art.status != AbstractDumper::SS_DEL) {¤		for (ArtefactSetUnic::const_iterator it = m_data.begin(); it != m_data.end(); it++) {¤			if (it->status == AbstractDumper::SS_DEL) {				¤				if (it->source_info.source.file_name () == art.source_info.source.file_name ()) {¤					m_fake_deleted.insert (*it);¤					m_data.erase (*it);¤				}			¤			}¤		}¤	}*/¤	m_data.insert (art);¤	//#UC END# *45964A3E027F_45964CC70250*
					    )))
				    quid       	"45964A3E027F"
				    stereotype 	"chg"
				    parameters 	(list Parameters
					(object Parameter "art"
					    quid       	"4596517F02AE"
					    type       	"GenArtData"
					    quidu      	"45964D37029F"))
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0)
				(object Operation "restore"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"abstract")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*45964C930241_45964CC70250*"
					    value      	(value Text 
|//#UC START# *45964C930241_45964CC70250*¤	ArtefactSetUnic::iterator f = m_data.find (art);¤	if (f != m_data.end()) {	¤		if (f->source_info.source.d_() == AbstractDumper::GST_FILE) {			¤			::ace_os_unlink (¤				AbstractDumper::create_gen_file_name (¤					f->source_info.source.file_name()¤				).data ()¤			);						¤		}¤		if (f->status != AbstractDumper::SS_NEW) {¤			GenArtData new_art = art;¤			new_art.status = AbstractDumper::SS_EQ;¤			m_data.erase (art);¤			m_data.insert (new_art);			¤		} else {¤			m_data.erase (art);			¤		}		¤		for (ArtefactSetUnic::const_iterator it = m_fake_deleted.begin(); it != m_fake_deleted.end(); it++) {¤			if (it->source_info.source.file_name () == art.source_info.source.file_name ()) {				¤				m_fake_deleted.erase (*it);¤			}						¤		}¤	}¤	//#UC END# *45964C930241_45964CC70250*
					    )))
				    quid       	"45964C930241"
				    stereotype 	"chg"
				    parameters 	(list Parameters
					(object Parameter "art"
					    quid       	"4596518602CD"
					    type       	"GenArtData"
					    quidu      	"45964D37029F"))
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0)
				(object Operation "get_by_status"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"abstract")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*4596519701C4_45964CC70250*"
					    value      	(value Text 
|//#UC START# *4596519701C4_45964CC70250*¤	Core::Aptr <ArtefactSet> ret = new ArtefactSet;¤	for (ArtefactSetUnic::const_iterator it = m_data.begin(); it != m_data.end(); it++) {¤		if (it->status == stat) {¤			ret->insert (&(*it));¤		}¤	}¤	return ret._retn();¤	//#UC END# *4596519701C4_45964CC70250*
					    )))
				    quid       	"4596519701C4"
				    parameters 	(list Parameters
					(object Parameter "stat"
					    quid       	"459651B60128"
					    type       	"SourceStatus"
					    quidu      	"45964E2E007C"))
				    result     	"ArtefactSet"
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0
				    quidu      	"459651F100AB")
				(object Operation "get_fake_deleted"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*45D432CD001F_45964CC70250*"
					    value      	(value Text 
|//#UC START# *45D432CD001F_45964CC70250*¤	Core::Aptr <ArtefactSet> ret = new ArtefactSet;¤	for (ArtefactSetUnic::const_iterator it = m_fake_deleted.begin(); it != m_fake_deleted.end(); it++) {	¤			ret->insert (&(*it));		¤	}¤	return ret._retn();¤	//#UC END# *45D432CD001F_45964CC70250*
					    )))
				    quid       	"45D432CD001F"
				    result     	"ArtefactSet"
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0
				    quidu      	"459651F100AB")
				(object Operation "correct_data"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"abstract")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*45D443180148_45964CC70250*"
					    value      	(value Text 
|//#UC START# *45D443180148_45964CC70250*	¤	for (ArtefactSetUnic::const_iterator it = m_data.begin(); it != m_data.end(); it++) {¤		if (it->status == AbstractDumper::SS_DEL) {¤			for (ArtefactSetUnic::const_iterator not_del_it = m_data.begin(); not_del_it != m_data.end(); not_del_it++) {¤				if (¤					not_del_it->status != AbstractDumper::SS_DEL ¤					&& it->source_info.source.file_name () == not_del_it->source_info.source.file_name () ¤				) {¤					m_fake_deleted.insert (*it);¤					m_data.erase (*it);¤					break;¤				}¤			}¤		}¤	}¤	//#UC END# *45D443180148_45964CC70250*
					    )))
				    quid       	"45D443180148"
				    stereotype 	"chg"
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0))
			    abstract   	TRUE)
			(object Class "GenArtefacts_i"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"final")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"SELF GENERATED FILE (cpp)"
				    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumper_GenArtefacts_i.cpp")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45964CC70250_DESTR_BODY*"
				    value      	(value Text 
|//#UC START# *45964CC70250_DESTR_BODY*¤	//#UC END# *45964CC70250_DESTR_BODY*
				    ))
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need assign op"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need copy ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need ref count"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need unsorted less"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"debug log"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"ifdef"
				    value      	"")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"local supervisor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need UC"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"no base class"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"non virtual base"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"singleton"
				    value      	"false"))
			    quid       	"45964CC70250"
			    stereotype 	"SimpleClass"
			    realized_interfaces 	(list realize_rel_list
				(object Realize_Relationship
				    quid       	"4596574702CD"
				    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts"
				    quidu      	"459649A50137"))
			    exportControl 	"Protected"
			    operations 	(list Operations
				(object Operation "reset"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*45C9F37801C5*"
					    value      	(value Text 
|//#UC START# *45C9F37801C5*¤	m_data.clear();¤	m_fake_deleted.clear ();¤	//#UC END# *45C9F37801C5*
					    )))
				    quid       	"45C9F37801C5"
				    documentation 	"Сбрасываем данные"
				    stereotype 	"chg"
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0))
			    nestedClasses 	(list nestedClasses
				(object Class "ArtefactSetUnic"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45C9F3C40148"
				    stereotype 	"Set")))
			(object Class "GenArtData"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need assign op"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need copy ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need init ctor"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need UC"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need dctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45964D37029F_45964FFB02ED_LESS*"
				    value      	(value Text 
|//#UC START# *45964D37029F_45964FFB02ED_LESS*¤	throw Core::MDAGenNotImplemented (GDS_CURRENT_FUNCTION);¤	//#UC END# *45964D37029F_45964FFB02ED_LESS*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45964D37029F_INIT_CTOR_BASE_INIT*"
				    value      	(value Text 
|//#UC START# *45964D37029F_INIT_CTOR_BASE_INIT*¤	: dumper (dumper_), status (status_), source_info (source_info_)¤//#UC END# *45964D37029F_INIT_CTOR_BASE_INIT*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45964D37029F_INIT_CTOR*"
				    value      	(value Text 
|//#UC START# *45964D37029F_INIT_CTOR*¤	//#UC END# *45964D37029F_INIT_CTOR*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45964D37029F_4596517F02AE_LESS*"
				    value      	(value Text 
|//#UC START# *45964D37029F_4596517F02AE_LESS*¤	return dumper < y.dumper ? true : (dumper > y.dumper ? false : source_info < y.source_info);¤	//#UC END# *45964D37029F_4596517F02AE_LESS*
				    )))
			    quid       	"45964D37029F"
			    stereotype 	"Struct"
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "dumper"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"TargetStereotype"
					    value      	"const"))
				    quid       	"45964D6B0260"
				    type       	"AbstractDumperBase"
				    quidu      	"4571A2EF02CE"
				    exportControl 	"Public")
				(object ClassAttribute "status"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45C9F294003E"
				    type       	"SourceStatus"
				    quidu      	"45964E2E007C"
				    exportControl 	"Public"
				    Containment 	"By Value")))
			(object Class "SourceStatus"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45964E2E007C"
			    documentation 	"Статус изменения источника генерации"
			    stereotype 	"Enum"
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "SS_EQ"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45964E5800E9"
				    documentation 	"Не изменившейся"
				    exportControl 	"Public"
				    Containment 	"By Value")
				(object ClassAttribute "SS_CHG"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45964E6B01E3"
				    documentation 	"Измененнный"
				    exportControl 	"Public"
				    Containment 	"By Value")
				(object ClassAttribute "SS_NEW"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45964E770379"
				    documentation 	"Новый"
				    exportControl 	"Public"
				    Containment 	"By Value")
				(object ClassAttribute "SS_DEL"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45964E8500D9"
				    documentation 	"Удаленный"
				    exportControl 	"Public"
				    Containment 	"By Value")))))
		(object Class "AbstractDumperBase"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A2EF02CE_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4571A2EF02CE_CUSTOM_INCLUDES*¤#include <algorithm>¤#include <cassert>¤#include <iterator>¤#include <string>¤#include <strstream>¤#include <ostream>¤#include <boost/lexical_cast.hpp>¤#include <boost/functional/hash/hash.hpp>¤¤#include "AbstractSingleDumperBase.h"¤#include "TemplateDumperDumper.h"¤#include "ObjectTreeResolver.h"¤¤#include "shared/GCL/alg/container_op.h"¤#include "shared/GCL/alg/sorting.h"¤#include "shared/GCL/os/dir_op.h"¤#include "shared/GCL/str/str_conv.h"¤#include "shared/GCL/str/str_op.h"¤¤#include "MDProcess/MDAModel/RoseDumpers/RoseHelper.h"¤//#UC END# *4571A2EF02CE_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A2EF02CE*"
			    value      	(value Text 
|//#UC START# *4571A2EF02CE*¤#ifdef max¤#undef max¤#endif¤¤#ifdef min¤#undef min¤#endif¤¤const std::string OPEN_CHARS = "{<[";¤const std::string CLOSE_CHARS = "}>]";¤¤void debug_func (const std::string& dbg_id) {¤	TRACE ("DEBUG POINT: %s\n", dbg_id.data());¤}¤¤///////////////////////////////////////////////////////////////////////¤// AbstractDumperBase - static initialization¤///////////////////////////////////////////////////////////////////////¤typedef std::map<std::string, const AbstractDumperBase*> VarDumpers;¤VarDumpers g_var_dumpers;¤¤// контейнер для хранения созданных экземпляров AbstractDumperBase¤typedef std::vector < Core::Box<AbstractDumperBase> > AbstractDumperBaseList;¤// "свалка" созданных экземпляров AbstractDumperBase подлежащих удалению¤AbstractDumperBaseList g_dumpers_heap;¤¤bool AbstractDumperBase::s_has_error = false;¤bool AbstractDumperBase::s_shift_scope = false;¤AbstractDumperBase::Templates AbstractDumperBase::s_templates;¤AbstractDumperBase::GenInfos AbstractDumperBase::s_gen_infos;¤AbstractDumperBase::GeneratorTree AbstractDumperBase::s_gen_tree;¤AbstractDumperBase::ReportInfos AbstractDumperBase::s_report_infos;¤AbstractDumperBase::ReportsTree AbstractDumperBase::s_reports_tree;¤AbstractDumperBase::Transformators AbstractDumperBase::s_transformators;¤AbstractDumperBase::Functions AbstractDumperBase::s_functions;¤GCL::StrSet AbstractDumperBase::s_active_map;¤std::string AbstractDumperBase::s_current_map;¤AbstractDumperBase::UserCode_map_mapGenId AbstractDumperBase::s_user_code;¤GCL::StrSet AbstractDumperBase::s_exception_stereotypes;¤AbstractDumperBase::Options AbstractDumperBase::s_options;¤FILE* AbstractDumperBase::s_log_file = NULL;¤short AbstractDumperBase::s_intend_shift = 0;¤AbstractDumperBase::Counters AbstractDumperBase::s_counters_value;¤const AbstractDumperBase* AbstractDumperBase::s_gen_root_element = 0;¤const AbstractDumperBase* AbstractDumperBase::s_model_main_element = 0;¤AbstractDumperBase::AcceptedGenMap AbstractDumperBase::s_accepted_gens;¤AbstractDumperBase::RoseStereotypeMap AbstractDumperBase::s_stereotypes;¤¤///////////////////////////////////////////////////////////////////////¤// AbstractDumperBase - static function implementation¤///////////////////////////////////////////////////////////////////////¤¤/*void check_templates (const char* mess) {¤	for (¤		AbstractDumperBase::Templates::const_iterator it = AbstractDumperBase::templates_begin ()¤		; it != AbstractDumperBase::templates_end ()¤		; it ++¤	) {¤		if (it->second.stereotype_name == "" || it->second.classtype_name == "") {¤			TRACE ("BAD ST %s: \"%s\" (%s, %s)\n", mess, it->first.data(), it->second.stereotype_name.data(), it->second.classtype_name.data());¤		}¤	}¤}*/¤¤AbstractDumperBase::TemplateBody::TemplateBody () {¤	plain = false;¤	file_create = false;¤	user_file = false;¤	tab_replacer = "\t";¤	¤	user_code_open_start_id = DEFAULT_USER_CODE_ID_START;¤	user_code_close_start_id = "";¤¤	user_code_open_end_id = DEFAULT_USER_CODE_ID_END;¤	user_code_close_end_id = "";¤¤	user_code_unique = false;			¤	use_current_root = false;¤}¤¤AbstractDumperBase::Template::Template () {¤	allow_empty_target = false;¤	forbiden_forward_decl = false;¤	skiped_item = false;¤	clrz_suppres_operation = false;¤	clrz_iconic_view = IVT_ST;¤	clrz_suppres_atribute = false;¤	¤	abstraction_type = ATF_REGULAR;¤	def_abstraction_type = "regular";¤	visability_type = VTF_PUBLIC;¤	def_visability_type = "PublicAccess";¤	link_type = LTF_AGR | LTF_REF | LTF_LNK;¤	def_link_type = "ref";¤¤	implementation_type = SX_IT_FALSE;¤	has_derived_impl = false;¤	child_st_constarint_type = CSCT_UNDEFINED;¤	parameterization_type = false;¤	main_st = false;¤	has_set_except = false;¤	has_get_except = false;¤};¤¤AbstractDumperBase::Template& AbstractDumperBase::Template::operator = (const Template& t) {¤	if (st_description_header == "") {¤		st_description_header = t.st_description_header;¤		st_description = t.st_description;¤	}¤	¤	if (child_st_constarint_type == CSCT_UNDEFINED) {¤		child_st_constarint_type = t.child_st_constarint_type;¤		child_st_constarints = t.child_st_constarints;¤	}¤¤	allow_empty_target = t.allow_empty_target;¤	forbiden_forward_decl = t.forbiden_forward_decl;¤	skiped_item = t.skiped_item;¤	generators = t.generators;¤	user_properties = t.user_properties;¤	available_target_stereotypes = t.available_target_stereotypes;¤	parent_visability = t.parent_visability;¤	parameterization_type = t.parameterization_type;¤	¤	clrz_iconic_view = t.clrz_iconic_view;¤	clrz_suppres_operation = t.clrz_suppres_operation;¤	clrz_suppres_atribute = t.clrz_suppres_atribute;¤	clrz_fill_color = t.clrz_fill_color;¤	clrz_line_color = t.clrz_line_color;¤	clrz_font_color = t.clrz_font_color;¤	clrz_forien_line_color = t.clrz_forien_line_color;¤	clrz_forien_font_color = t.clrz_forien_font_color;		¤	¤	implementation_type = t.implementation_type;¤	has_derived_impl = t.has_derived_impl;¤	main_st = t.main_st;¤	has_set_except = t.has_set_except;¤	has_get_except = t.has_get_except;¤	functions = t.functions;¤	transformators = t.transformators;¤¤	def_abstraction_type = t.def_abstraction_type;¤	abstraction_type = t.abstraction_type;¤	visability_type = t.visability_type;¤	def_visability_type = t.def_visability_type;¤	link_type = t.link_type;¤	def_link_type = t.def_link_type;¤¤	return *this;¤}¤¤¤void AbstractDumperBase::clean_up () {¤	s_templates.clear();¤	s_transformators.clear();¤	s_functions.clear();¤	s_user_code.clear();¤	s_counters_value.clear();¤	s_intend_shift = 0;¤	s_gen_infos.clear();¤	s_report_infos.clear();¤	s_gen_tree = 0;¤	s_reports_tree = 0;¤	g_var_dumpers.clear();¤	g_dumpers_heap.clear ();¤	s_exception_stereotypes.clear();	¤	s_accepted_gens.clear ();¤	TemplateDumperDumper::reset_dumpers_list ();	¤	s_stereotypes.clear ();¤}¤¤AbstractDumperBase::Templates::const_iterator AbstractDumperBase::templates_begin () {¤	return s_templates.begin();¤}¤¤const AbstractDumperBase::Templates::const_iterator AbstractDumperBase::templates_end () {¤	return s_templates.end();¤}¤¤AbstractDumperBase::UserCode_map_mapGenId::const_iterator AbstractDumperBase::uc_begin () {¤	return s_user_code.begin();¤}¤¤const AbstractDumperBase::UserCode_map_mapGenId::const_iterator AbstractDumperBase::uc_end () {¤	return s_user_code.end();¤}¤¤void AbstractDumperBase::get_gen_ids (GCL::StrSet& ret) {	¤¤	for (Templates::iterator it = s_templates.begin(); it != s_templates.end(); it++) {¤		for (GT_map::iterator it2 = (*it).second.generators.begin(); it2 != (*it).second.generators.end(); it2++) {¤			ret.insert ((*it2).first);¤		}¤	}¤}¤¤bool AbstractDumperBase::is_it_registred (const StereotypeID& st) {¤	bool ret = false;¤	¤	if (st != RST_UNSTEREOTYPED) {	¤		AbstractDumperBase::Templates::iterator f = s_templates.find(st);¤		if (f != s_templates.end() ) {¤			if (s_current_map == "") {¤				ret = true;¤			} else {¤				ret = f->second.generators.find(s_current_map) != f->second.generators.end();¤			}¤		}¤	}¤¤	return ret;¤}¤¤bool AbstractDumperBase::has_template (const StereotypeID& st) {¤	return s_templates.find(st) != s_templates.end();¤}¤¤bool AbstractDumperBase::is_has_error () {¤	return s_has_error;¤}¤¤void AbstractDumperBase::has_error ( bool error ) {¤	s_has_error = error;¤}¤¤void AbstractDumperBase::clean_active_map () {¤	s_active_map.clear();¤}¤¤void AbstractDumperBase::add_active_map (const GenID& gen_id) {¤	s_active_map.insert(gen_id);¤}¤¤GCL::StrSet& AbstractDumperBase::exception_stereotypes() {¤	return s_exception_stereotypes;¤}¤¤bool AbstractDumperBase::is_stereotype_exception(const std::string& streotype) {¤	return s_exception_stereotypes.find(streotype) != s_exception_stereotypes.end();¤}¤¤void AbstractDumperBase::load_templates (const FileDesc& in_file) {¤	if (!in_file.file) {¤		throw FatalError ("NULL Template File");¤	}¤¤	AbstractDumperBase::clean_up ();¤¤	char line[1024];¤	fgets (line, 1024, in_file.file);¤	if ( line[strlen(line)-1] == '\n' ) line[strlen(line)-1] = 0;¤	if (strcmp(line, FILE_SIGNATURE)) {¤		throw FatalError ("Invalid Template File");¤	}¤	load_template_file (in_file);¤}¤¤bool is_it_classtype_name (const std::string& name) {¤	if (¤		name == "Attribute"¤		|| name == "Operation"¤		|| name == "Class"¤		|| name == "Category"¤		|| name == "Parameter"¤		|| name == "ClassDepenedency"¤	) {¤		return true;¤	} else {¤		return false;¤	}¤}¤¤void AbstractDumperBase::load_template_file (const FileDesc& in_file, StereotypeID cur_stereotype, GenID cur_gen_id) {¤	char line[1024];¤¤	Transformator* cur_transformer = 0;¤	FunctionID cur_func_id;¤	FunctionID cur_st_func_id;¤	GCL::StrVector cur_columns_id;¤	¤	Core::Var<GenTreeItem> current_gen_item;¤	Core::Var<ReportsTreeItem> current_rep_item;¤¤	enum DefPart {¤		DP_GEN¤		, DP_ST¤		, DP_REP¤	};¤¤	DefPart in_def_part = DP_ST;¤¤	unsigned line_num = 0;¤	¤	char mess[2048];¤¤	try {¤		while (fgets( line, 1024, in_file.file)) {¤			//check_templates ("IN LOADING");¤			line_num++;¤			if (line[strlen(line)-1] == '\n') {¤				line[strlen(line)-1] = 0;¤			}¤¤			if (strcmp (line, "Generator definitions:") == 0) {¤				in_def_part = DP_GEN;¤				continue;¤			}¤¤			if (strcmp (line, "Stereotype definitions:") == 0) {¤				in_def_part = DP_ST;¤				continue;¤			}¤¤			if (strcmp (line, "Reports definitions:") == 0) {¤				in_def_part = DP_REP;¤				continue;¤			}¤¤			if (in_def_part == DP_GEN) {¤				GCL::StrVector split_line = GCL::split_string_by (line, '"');¤				if (split_line.size() == 3) {¤					if (GCL::trim_ws(split_line[0].data()) == "group") {¤						GenTreeItem* new_item = new GenTreeItem (split_line[1].data());¤						if (s_gen_tree.is_nil()) {¤							s_gen_tree = new_item;¤						} else {¤							current_gen_item->insert_back_child (new_item);¤						}¤						current_gen_item = GenTreeItem::_duplicate(new_item);					¤					} else if (GCL::trim_ws(split_line[0].data()) == "generator") {¤						if (s_gen_infos.find(split_line[1]) != s_gen_infos.end()) {¤							sprintf (mess, "%s:%d - Dublicated generator id (%s)\n", in_file.name.data(), line_num, split_line[1].data());¤							throw FatalError (mess);¤						}¤¤						GenTreeItem* new_item = new GenTreeItem (split_line[1].data());¤						current_gen_item->insert_back_child (new_item);¤						current_gen_item = GenTreeItem::_duplicate(new_item);					¤						s_gen_infos[split_line[1]] = new_item;¤					}¤				} else {¤					if (GCL::trim_ws(line) == "}") {¤						current_gen_item = dynamic_cast<GenTreeItem*>(current_gen_item->parent());¤					} else {¤						split_line = GCL::split_string_by (line, ':');¤						if (split_line.size() == 2) {¤							if (GCL::trim_ws(split_line[0].data()) == "Description") {¤								std::string desc = GCL::trim_ws(split_line[1].data());¤								current_gen_item->description (desc);¤							} else {¤								std::string prop_id = GCL::trim_ws(split_line[0].data());¤								std::string prop_value = GCL::trim_ws(split_line[1].data());¤								current_gen_item->set_property (prop_id, prop_value);¤							}¤						}¤					}¤				}¤				continue;¤			} else if (in_def_part == DP_REP) {¤				GCL::StrVector split_line = GCL::split_string_by (line, '"');¤				if (split_line.size() == 3 && GCL::trim_ws(split_line[0].data()) == "group") {¤¤					ReportsTreeItem* new_item = new ReportsTreeItem (split_line[1].data());¤					if (s_reports_tree.is_nil()) {¤						s_reports_tree = new_item;¤					} else {¤						current_rep_item->insert_back_child (new_item);¤					}¤					current_rep_item= ReportsTreeItem::_duplicate(new_item);¤				} else if (split_line.size() == 3 && GCL::trim_ws(split_line[0].data()) == "report") {¤					if (s_report_infos.find(split_line[1]) != s_report_infos.end()) {¤						sprintf (mess, "%s:%d - Dublicated report id (%s)\n", in_file.name.data(), line_num, split_line[1].data());¤						throw FatalError (mess);¤					}¤¤					ReportsTreeItem* new_item = new ReportsTreeItem (split_line[1].data());¤					current_rep_item->insert_back_child (new_item);¤					current_rep_item = ReportsTreeItem::_duplicate(new_item);					¤					s_report_infos[split_line[1]] = new_item;¤				} else if (GCL::trim_ws(line) == "}") {¤					current_rep_item = dynamic_cast<ReportsTreeItem*>(current_rep_item->parent());¤				} else {¤					std::string std_line = line;¤					split_line = GCL::split_string_by (std_line.begin(), std_line.end(), ':', '{', '\\', '}');¤					if (split_line.size() == 2 && GCL::trim_ws(split_line[0].data()) == "query") {¤						std::string q = "[";¤						q += GCL::trim_ws(split_line[1].data());¤						q += "true]";¤						current_rep_item->query (q);¤					} else if (split_line.size() == 2 && GCL::trim_ws(split_line[0].data()) == "auto") {¤						current_rep_item->set_auto(GCL::trim_ws(split_line[1].data()));¤					} else if (split_line.size() == 3) {¤						std::string view_name = GCL::trim_ws(split_line[0].data());¤						std::string view_value = GCL::trim_char(GCL::trim_ws(split_line[1].data()), "{}");¤						std::string view_len = GCL::trim_ws(split_line[2].data());¤						current_rep_item->set_view (view_name, view_value, atoi(view_len.data()));¤					} else if (GCL::trim_ws(line) != "") {¤						sprintf (mess, "%s:%d - Bad report format (%s)\n", in_file.name.data(), line_num, line);¤						throw FatalError (mess);¤					}¤				}¤				continue;¤			}¤			¤			switch ( line[0] ) {¤				case SX_1_INCLUDED_ST: {¤					if (¤						s_templates[cur_stereotype].child_st_constarint_type != CSCT_UNDEFINED ¤						&& s_templates[cur_stereotype].child_st_constarint_type != CSCT_INCLUDED¤					) {¤						sprintf (mess, "%s:%d - Can't use INCLUIDE and EXCLUDE paremeters together", in_file.name.data(), line_num);¤						throw FatalError (mess);¤					}¤¤					GCL::StrVector sv = GCL::split_string_by (line + 2, ',');¤					s_templates[cur_stereotype].child_st_constarint_type = CSCT_INCLUDED;¤¤					for (GCL::StrVector::iterator it = sv.begin(); it != sv.end(); it++) {¤						s_templates[cur_stereotype].child_st_constarints.insert (GCL::trim_ws(it->data()));¤					}¤					break;¤				}¤				case SX_1_EXCLUDED_ST: {¤					if (¤						s_templates[cur_stereotype].child_st_constarint_type != CSCT_UNDEFINED ¤						&& s_templates[cur_stereotype].child_st_constarint_type != CSCT_EXCLUDED¤					) {¤						sprintf (mess, "%s:%d - Can't use INCLUIDE and EXCLUDE paremeters together", in_file.name.data(), line_num);¤						throw FatalError (mess);¤					}¤¤					GCL::StrVector sv = GCL::split_string_by (line + 2, ',');¤					s_templates[cur_stereotype].child_st_constarint_type = CSCT_EXCLUDED;¤¤					for (GCL::StrVector::iterator it = sv.begin(); it != sv.end(); it++) {¤						s_templates[cur_stereotype].child_st_constarints.insert (GCL::trim_ws(it->data()));¤					}¤					break;¤				}¤				case SX_1_VISABILTY_TYPE: {¤					s_templates[cur_stereotype].visability_type = 0;¤					if (strlen (line) > 2) {¤						int i = 2;¤						while (line[i]) {¤							switch (line[i]) {¤								case SX_VT_PUBLIC:¤									s_templates[cur_stereotype].visability_type |= VTF_PUBLIC;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_visability_type = "PublicAccess";¤									}¤									break;¤								case SX_VT_PROTECTED:¤									s_templates[cur_stereotype].visability_type |= VTF_PROTECTED;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_visability_type = "ProtectedAccess";¤									}¤									break;¤								case SX_VT_PRIVATE:¤									s_templates[cur_stereotype].visability_type |= VTF_PRIVATE;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_visability_type = "PrivateAccess";¤									}¤									break;¤								case SX_VT_IMPL:¤									s_templates[cur_stereotype].visability_type |= VTF_IMPL;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_visability_type = "ImplementationAccess";¤									}¤									break;¤								default: {¤									sprintf (mess, "%s:%d - invalid Visability Type \"%s\"", in_file.name.data(), line_num, line);¤									throw FatalError (mess);¤								}¤							}¤							i++;¤						}¤					}¤					break;¤				}¤				case SX_1_ABSTRACTION_TYPE: {¤					s_templates[cur_stereotype].abstraction_type = 0;¤					if (strlen (line) > 2) {¤						int i = 2;¤						while (line[i]) {¤							switch (line[i]) {¤								case SX_AT_ABSTRACT:¤									s_templates[cur_stereotype].abstraction_type |= ATF_ABSTRACT;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_abstraction_type = "abstract";¤									}¤									break;¤								case SX_AT_REGULAR:¤									s_templates[cur_stereotype].abstraction_type |= ATF_REGULAR;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_abstraction_type = "regular";¤									}¤									break;¤								case SX_AT_FINAL:¤									s_templates[cur_stereotype].abstraction_type |= ATF_FINAL;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_abstraction_type = "final";¤									}¤									break;¤								/*case SX_AT_INLINE:¤									s_templates[cur_stereotype].abstraction_type |= ATF_INLINE;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_abstraction_type = "inline";¤									}¤									break;*/¤								default: {¤									sprintf (mess, "%s:%d - invalid Abstarction Type \"%s\"", in_file.name.data(), line_num, line);¤									throw FatalError (mess);¤								}¤							}¤							i++;¤						}¤					}¤					break;¤				}¤				case SX_1_LINK_TYPE: {¤					s_templates[cur_stereotype].link_type = 0;¤					if (strlen (line) > 2) {¤						int i = 2;¤						while (line[i]) {¤							switch (line[i]) {¤								case SX_LT_REF:¤									s_templates[cur_stereotype].link_type |= LTF_REF;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_link_type = "ref";¤									}¤									break;¤								case SX_LT_AGR:¤									s_templates[cur_stereotype].link_type |= LTF_AGR;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_link_type = "agr";¤									}¤									break;¤								case SX_LT_LNK:¤									s_templates[cur_stereotype].link_type |= LTF_LNK;¤									if (i == 2) {¤										s_templates[cur_stereotype].def_link_type = "lnk";¤									}¤									break;							¤								default: {¤									sprintf (mess, "%s:%d - invalid Link Type \"%s\"", in_file.name.data(), line_num, line);¤									throw FatalError (mess);¤								}¤							}¤							i++;¤						}¤					}¤					break;¤				}¤				case SX_1_IMPLEMENTATION_TYPE: {¤					switch (line[2]) {¤						case SX_IT_TRUE:¤							s_templates[cur_stereotype].implementation_type = SX_IT_TRUE;¤							break;¤						case SX_IT_FALSE:¤							s_templates[cur_stereotype].implementation_type = SX_IT_FALSE;¤							break;¤					}¤					break;¤				}¤				case SX_1_PARAMETERIZATION_TYPE:¤					s_templates[cur_stereotype].parameterization_type = true;¤					break;¤				case SX_1_HAS_DERIVED_IMPL: {¤					switch (line[2]) {¤						case '0':¤							s_templates[cur_stereotype].has_derived_impl = false;¤							break;¤						default:¤							s_templates[cur_stereotype].has_derived_impl = true;¤							break;¤					}¤					break;¤				}¤				case SX_1_COLORIZE_OPTION: {¤					switch (line[2]) {¤						case SX_C_ST_ICONIC_VIEW:¤							if (strlen(line) <= 4) {¤								sprintf (mess, "%s:%d - invalid Iconic View Type \"%s\"", in_file.name.data(), line_num, line);¤								throw FatalError (mess);¤							}¤							switch (line[4]) {¤							case 'i':¤								s_templates[cur_stereotype].clrz_iconic_view = IVT_ICON;¤								break;¤							case 'd':¤								s_templates[cur_stereotype].clrz_iconic_view = IVT_DECOR;¤								break;¤							case 'n':¤								s_templates[cur_stereotype].clrz_iconic_view = IVT_NONE;¤								break;¤							case 's':¤								s_templates[cur_stereotype].clrz_iconic_view = IVT_ST;¤								break;¤							default:¤								sprintf (mess, "%s:%d - invalid Iconic View Type \"%s\"", in_file.name.data(), line_num, line);¤								throw FatalError (mess);¤							}¤							¤							break;¤						case SX_C_SUPPRES_OPERATION:¤							s_templates[cur_stereotype].clrz_suppres_operation = true;¤							break;¤						case SX_C_SUPPRES_ATTRIBUTE	:¤							s_templates[cur_stereotype].clrz_suppres_atribute = true;¤							break;¤						case SX_C_FILL_COLOR: {¤							GCL::StrVector rgb_colors = GCL::split_string_by (line+3, ',');¤							s_templates[cur_stereotype].clrz_fill_color.clear ();¤							for (GCL::StrVector::iterator it = rgb_colors.begin(); it  != rgb_colors.end(); it++) {¤								s_templates[cur_stereotype].clrz_fill_color.push_back (atoi (it->data()));¤							}¤							break;¤						}¤						case SX_C_LINE_COLOR: {¤							GCL::StrVector rgb_colors = GCL::split_string_by (line+3, ',');¤							s_templates[cur_stereotype].clrz_line_color.clear ();¤							for (GCL::StrVector::iterator it = rgb_colors.begin(); it  != rgb_colors.end(); it++) {¤								s_templates[cur_stereotype].clrz_line_color.push_back (atoi (it->data()));¤							}¤							break;¤						}¤						case SX_C_FONT_COLOR: {¤							GCL::StrVector rgb_colors = GCL::split_string_by (line+3, ',');¤							s_templates[cur_stereotype].clrz_font_color.clear ();¤							for (GCL::StrVector::iterator it = rgb_colors.begin(); it  != rgb_colors.end(); it++) {¤								s_templates[cur_stereotype].clrz_font_color.push_back (atoi (it->data()));¤							}¤							break;¤						}¤						case SX_C_FORIEN_LINE_COLOR: {¤							GCL::StrVector rgb_colors = GCL::split_string_by (line+3, ',');¤							s_templates[cur_stereotype].clrz_forien_line_color.clear ();¤							for (GCL::StrVector::iterator it = rgb_colors.begin(); it  != rgb_colors.end(); it++) {¤								s_templates[cur_stereotype].clrz_forien_line_color.push_back (atoi (it->data()));¤							}¤							break;¤						}¤						case SX_C_FORIEN_FONT_COLOR: {¤							GCL::StrVector rgb_colors = GCL::split_string_by (line+3, ',');¤							s_templates[cur_stereotype].clrz_forien_font_color.clear ();¤							for (GCL::StrVector::iterator it = rgb_colors.begin(); it  != rgb_colors.end(); it++) {¤								s_templates[cur_stereotype].clrz_forien_font_color.push_back (atoi (it->data()));¤							}¤							break;¤						}¤					}¤					break;¤				} ¤				case SX_1_INCLUDE: {¤					FileDesc inc_file;¤					std::string inc_path = GCL::trim_ws(line+2);¤					¤					if (!GCL::end_with (inc_path.data(), ".tpi")) {¤						inc_path += ".tpi";¤					}¤¤					if ( inc_path[1] == ':' ) {¤						inc_file.name = inc_path;¤					} else {¤						// find base dir¤						std::string::size_type a = in_file.name.rfind ('\\');¤						std::string::size_type b = in_file.name.rfind ('/');¤						if (a == std::string::npos) {¤							a = 0;¤						} else {¤							a++;¤						}¤						if (b == std::string::npos) {¤							b = 0;¤						} else {¤							b++;¤						}¤						inc_file.name = std::string (¤							in_file.name.begin()¤							, std::max(a, b)¤						) + inc_path;¤					}¤¤					inc_file.file = fopen (inc_file.name.c_str(), "r");¤					if (!inc_file.file) {¤						sprintf (mess, "%s:%d - Can't load include file \"%s\"", in_file.name.data(), line_num, inc_file.name.c_str());¤						throw FatalError (mess);¤					}¤¤					load_template_file (inc_file, cur_stereotype, cur_gen_id);¤					fclose (inc_file.file);¤					break;¤				}			¤				case SX_1_STEREOTYPE: {						¤					cur_stereotype = GCL::trim_ws(line+2);¤					cur_gen_id = "";¤					cur_st_func_id = "";¤					cur_func_id = "";¤					cur_transformer = 0;¤¤					GCL::StrVector parts = GCL::split_string_by_sub_string (cur_stereotype.data(), "::");¤					if (parts.size() < 2) {¤						if (parts[0] != "default") {¤							sprintf (mess, "%s:%d - invalid stereotype format \"%s\"", in_file.name.data(), line_num, cur_stereotype.c_str());¤							throw FatalError (mess);¤						}¤						s_templates[cur_stereotype].stereotype_name = "<default>";¤						s_templates[cur_stereotype].classtype_name = "<default>";¤					}¤					¤					if (¤						s_templates.find(RST_ALL) != s_templates.end()¤						&& s_templates.find(cur_stereotype) == s_templates.end()¤					) {¤						s_templates[cur_stereotype] = s_templates[RST_ALL];¤					} else {¤						s_templates[cur_stereotype];¤					}¤¤					if (parts.size() == 2) { // like: BinaryFunctor::Class					¤						s_templates[cur_stereotype].stereotype_name = parts[0];¤						s_templates[cur_stereotype].classtype_name = parts[1];¤					} else if (parts.size () == 3) { // like: BinaryFunctor::Class::Attribute¤						s_templates[cur_stereotype].stereotype_name = "<default>";¤						s_templates[cur_stereotype].classtype_name = parts[2];¤					} else if (parts.size () == 4) { // like: BinaryFunctor::Class::first param::Attribute¤													// or: Interface::Class::Operation::Parameter¤						if (!is_it_classtype_name (parts[2])) {¤							s_templates[cur_stereotype].classtype_name = parts[3];¤							s_templates[cur_stereotype].stereotype_name = parts[2];¤						} else {¤							s_templates[cur_stereotype].classtype_name = parts[3];¤							s_templates[cur_stereotype].stereotype_name = "<default>";¤						}¤					} else if (parts.size () == 5) { // like Interface::Class::chg::Operation::Parameter¤						if (!is_it_classtype_name (parts[3])) {¤							s_templates[cur_stereotype].classtype_name = parts[4];¤							s_templates[cur_stereotype].stereotype_name = parts[3];¤						} else {¤							s_templates[cur_stereotype].classtype_name = parts[4];¤							s_templates[cur_stereotype].stereotype_name = "<default>";¤						}¤					}¤¤					// convert¤					if (s_templates[cur_stereotype].stereotype_name == "default") {¤						s_templates[cur_stereotype].stereotype_name = "<default>";¤					}¤¤					break;¤				}¤				case SX_1_STEREOTYPE_EQ: {¤					GCL::StrVector strs = GCL::split_string_by (line+2, ';');¤									¤					if (cur_gen_id == "" && strs.size() != 1) {¤						sprintf (mess, "%s:%d - Invalid stereotype EQ format\n", in_file.name.data(), line_num);¤						throw FatalError (mess);¤					}¤					¤					AbstractDumperBase::Templates::iterator f;¤					if (cur_gen_id == "" || strs.size() != 1) {¤						f = s_templates.find(strs[0]);¤¤						if (f == s_templates.end ()) {¤							sprintf (¤								mess¤								, "%s:%d - use undefinded stereotype in EQ opertaion (%s = %s)\n"¤								, in_file.name.data()¤								, line_num¤								, cur_stereotype.data()¤								, strs[0].data()¤							);¤							throw FatalError (mess);¤						}¤					}¤¤					if (cur_gen_id == "") {¤						s_templates[cur_stereotype] = f->second;¤					} else {¤						if (strs.size() == 1) {¤							s_templates[cur_stereotype].generators[cur_gen_id] = s_templates[cur_stereotype].generators[strs[0]];¤						} else {¤							s_templates[cur_stereotype].generators[cur_gen_id] = f->second.generators[strs[1]];¤						}¤					}¤					¤					break;¤				}¤				case SX_1_AVAILABLE_TARGET_STREOTYPES: {¤					s_templates[cur_stereotype].available_target_stereotypes = GCL::split_string_by (line+2, '|');¤					break;¤				}¤				case SX_1_PARENT_VISABILITY: {¤					s_templates[cur_stereotype].parent_visability = GCL::vector_to_set(GCL::split_string_by (line+2, '|'));¤					break;¤				}¤				case SX_1_USER_PROPERTY: {¤					GCL::StrVector strs0 = GCL::split_string_by (line+2, '?');¤					GCL::StrVector strs = GCL::split_string_by (GCL::trim_ws(strs0[0].data()).data(), '=');¤					GCL::StrVector str1s = GCL::split_string_by (strs[0].data(), ':');¤¤					UserPropertyType type = UPT_STRING;¤					if (str1s.size() > 1) {¤						switch (str1s[1][0]) {¤						case 's':¤							type = UPT_STRING;¤							break;¤						case 'b':¤							type = UPT_BOOL;¤							break;¤						}¤					}¤¤					GCL::StrVector str2s;¤					if (strs.size() > 1) {¤						str2s = GCL::split_string_by (strs[1].data(), '|');¤						if (str2s.size() > 1) {¤							type = AbstractDumperBase::UPT_LIST;¤							s_templates[cur_stereotype].user_properties[str1s[0]].value_list = str2s;¤						}¤					}¤¤					s_templates[cur_stereotype].user_properties[str1s[0]].type = type;				¤					s_templates[cur_stereotype].user_properties[str1s[0]].def_value = strs.size() > 1 ? str2s[0] : "";¤					¤					if (strs0.size() > 1) {¤						s_templates[cur_stereotype].user_properties[str1s[0]].description = strs0[1];¤					}¤					break;¤				}			¤				case SX_1_ALLOW_EMPTY_TARGET:¤					s_templates[cur_stereotype].allow_empty_target = true;¤					break;¤				case SX_1_IS_FFD:¤					s_templates[cur_stereotype].forbiden_forward_decl = true;¤					break;¤				case SX_1_SKIPED_ITEM:¤					s_templates[cur_stereotype].skiped_item = true;¤					break;¤				case SX_1_GENID:				¤					cur_gen_id = GCL::trim_ws (line+2);¤					if (strlen(line) < 3 || cur_gen_id == "") {¤						sprintf (mess, "%s:%d - Invalid generator id\n", in_file.name.data(), line_num);¤						throw FatalError (mess);¤					}¤					¤					if (s_gen_infos.find(cur_gen_id) == s_gen_infos.end()) {¤						sprintf (mess, "%s:%d - Unknown generator id (%s)\n", in_file.name.data(), line_num, cur_gen_id.data());¤						throw FatalError (mess);¤					}¤¤					s_templates[cur_stereotype].generators[cur_gen_id].reset (); // push them into template¤					cur_func_id = "";¤					cur_transformer = 0;¤					break;¤				case SX_1_OUTPUT_DIR_TPL_CREATE:¤					const char* dir_tpl_start;¤					if (line[2] == '*') {¤						dir_tpl_start = line+3;¤						s_templates[cur_stereotype].generators[cur_gen_id].use_current_root = true;¤					} else {¤						dir_tpl_start = line+2;¤					}¤					s_templates[cur_stereotype].generators[cur_gen_id].dir_template = dir_tpl_start;¤					break;¤				case SX_1_OUTPUT_TPL_CREATE:¤					if (line[1] != 0) {¤						s_templates[cur_stereotype].generators[cur_gen_id].file_template = line+2;¤						s_templates[cur_stereotype].generators[cur_gen_id].file_create = true;¤					} else {¤						s_templates[cur_stereotype].generators[cur_gen_id].file_template = "";¤						s_templates[cur_stereotype].generators[cur_gen_id].file_create = false;¤					}¤					break;¤				case SX_1_OUTPUT_TPL:¤					s_templates[cur_stereotype].generators[cur_gen_id].file_template = line+2;¤					s_templates[cur_stereotype].generators[cur_gen_id].file_create = false;¤					break;¤				case SX_1_POST_COMMAND_TPL:¤					s_templates[cur_stereotype].generators[cur_gen_id].post_command_template = line+2;¤					break;¤				case SX_1_GEN_OR_ST_INFO:¤					if (cur_gen_id == "") {¤						if (s_templates[cur_stereotype].st_description_header == "") {¤							s_templates[cur_stereotype].st_description_header += line+2;¤						} else {¤							s_templates[cur_stereotype].st_description += line+2;¤						}¤					} else {¤						s_templates[cur_stereotype].generators[cur_gen_id].generator_info = line+2;¤					}¤					break;¤				case SX_1_TAB_REPLACER:¤					s_templates[cur_stereotype].generators[cur_gen_id].tab_replacer = line+2;¤					break;¤				case SX_1_USER_FILE:¤					s_templates[cur_stereotype].generators[cur_gen_id].user_file = true;¤					break;¤				case SX_1_MAIN_ST:¤					s_templates[cur_stereotype].main_st = true;¤					break;¤				/*case SX_1_USER_MODIFICATOR:¤					s_templates[cur_stereotype].generators[cur_gen_id].user_modificator = line+2;¤					break;*/¤				case SX_1_OPEN_SCOPE_TPL:¤					s_templates[cur_stereotype].generators[cur_gen_id].open_scope_template = line+2;¤					break;¤				case SX_1_CLOSE_SCOPE_TPL:¤					s_templates[cur_stereotype].generators[cur_gen_id].close_scope_template = line+2;¤					break;¤				case SX_1_FORWARD_TPL:				¤					s_templates[cur_stereotype].generators[cur_gen_id].forward_template = line+2;¤					break;			¤				case SX_1_IS_PLAIN:¤					s_templates[cur_stereotype].generators[cur_gen_id].plain = true;¤					break;¤				case SX_1_IS_EXCEPTION:¤					s_exception_stereotypes.insert(cur_stereotype);¤					break;¤				case SX_1_HAS_EXCEPTION: {¤					char ex_t = 'g';¤					if (strlen(line) > 2) {¤						ex_t = line[2];¤					}¤					switch (ex_t) {¤					case 'a':¤						s_templates[cur_stereotype].has_get_except = true;¤						s_templates[cur_stereotype].has_set_except = true;¤						break;¤					case 's':¤						s_templates[cur_stereotype].has_set_except = true;¤						s_templates[cur_stereotype].has_get_except = false;¤						break;¤					case 'g':¤						s_templates[cur_stereotype].has_get_except = true;¤						s_templates[cur_stereotype].has_set_except = false;¤						break;¤					default:¤						sprintf (mess, "%s:%d - Invalid HAS exception type \"%s\" format\n", in_file.name.data(), line_num, line);¤						throw FatalError (mess);¤					}¤				}¤					break;¤				case SX_1_CODE_TPL: {¤					if (cur_gen_id != "") {¤						CodeTemplate ct = s_templates[cur_stereotype].generators[cur_gen_id].code_template;¤¤						if (ct == "") {¤							s_templates[cur_stereotype].generators[cur_gen_id].code_template = (char*)(line+1);				¤						} else {¤							s_templates[cur_stereotype].generators[cur_gen_id].code_template = ct + "\n" + (char*)(line+1);¤						}¤					} else if (cur_st_func_id != "") {¤						FunctionTemplate& ft = s_templates[cur_stereotype].functions[cur_st_func_id];¤						if (ft == "") {¤							ft = (char*)(line+1);				¤						} else {¤							ft = ft + "\n" + (char*)(line+1);¤						}¤					} else if (cur_func_id != "") {¤						FunctionTemplate ft = s_functions[cur_func_id];¤						if (ft == "") s_functions[cur_func_id] = (char*)(line+1);				¤						else s_functions[cur_func_id] = ft + "\n" + (char*)(line+1);¤					}¤					break;¤				}¤				case SX_1_ST_MEMBERS: {¤					switch (line[1]) {¤					case SX_1_FUNCTION_TPL:¤						cur_st_func_id = GCL::trim_ws(line+3);¤						s_templates[cur_stereotype].functions[cur_st_func_id] = "";¤		¤						cur_func_id = "";¤						cur_gen_id = "";¤						cur_transformer = 0;¤						break;¤					case SX_1_TRANSFORMER_TPL:¤						cur_transformer = &(s_templates[cur_stereotype].transformators[GCL::trim_ws(line+3)]);¤						cur_transformer->rows.clear();¤						cur_transformer->name = GCL::trim_ws(line+3);¤						¤						cur_func_id = "";¤						cur_gen_id = "";¤						cur_st_func_id = "";					¤						break;¤					default:¤						assert (0);¤						sprintf (mess, "%s:%d - Invalid stereotype's member declaration \"%s\" format\n", in_file.name.data(), line_num, line+1);¤						throw FatalError (mess);¤					}¤					break;¤				}¤				case SX_1_FUNCTION_TPL:¤					if (cur_transformer && cur_transformer->rows.size() == 0) {¤						sprintf (mess, "%s:%d - Invalid transformer \"%s\" format\n", in_file.name.data(), line_num, cur_transformer->name.c_str());¤						throw FatalError (mess);¤					}¤¤					cur_func_id = GCL::trim_ws(line+2);¤					s_functions[cur_func_id] = "";¤¤					cur_gen_id = "";¤					cur_transformer = 0;¤					cur_st_func_id = "";¤					break;¤				case SX_1_TRANSFORMER_TPL:¤					if (cur_transformer && cur_transformer->rows.size() == 0) {¤						sprintf (mess, "%s:%d - Invalid transformer \"%s\" format\n", in_file.name.data(), line_num, cur_transformer->name.c_str());¤						throw FatalError (mess);¤					}¤					¤					cur_transformer = &(s_transformators[GCL::trim_ws(line+2)]);¤					cur_transformer->name = GCL::trim_ws(line+2);¤¤					cur_func_id = "";¤					cur_gen_id = "";¤					cur_st_func_id = "";¤¤					cur_columns_id.clear();¤					break;¤				case SX_1_TRANSFORMER_COLUMN: {¤					cur_columns_id = GCL::split_string_by_fragment (line+2, '{', '}');¤					break;¤				}			¤				case SX_1_TRANSFORMER_ROW: {¤					TransformatorBody tb;¤					GCL::StrVector row_data;¤					¤					{¤						std::string _str = line+2;¤						std::string::const_iterator it_exp_end = _str.begin ();¤						std::string::const_iterator it_exp_begin = _str.begin ();¤						std::string::const_iterator it_data_begin;¤¤						bool res;¤						if (line[2] == '{') {¤							// new raw format¤							res = GCL::find_char_ex (it_exp_end, _str.end (), ':', '{', '}', '\\');¤							it_data_begin = it_exp_end;¤							it_exp_end--;¤							it_exp_begin++;¤						} else {¤							// old raw format¤							res = GCL::find_char_ex (it_exp_end, _str.end (), ':', '"', '"', '\\');¤							it_data_begin = it_exp_end;¤						}¤¤						if (!res) {¤							sprintf (mess, "%s:%d - Invalid transformer row \"%s\" format\n", in_file.name.data(), line_num, cur_transformer->name.c_str());¤							throw FatalError (mess);¤						}¤¤						tb.row_exp = std::string(it_exp_begin, it_exp_end);¤						row_data = GCL::split_string_by_fragment (it_data_begin, '{', '}');¤					}¤¤					unsigned i=0; // unsigned siz = cur_columns_id.size();¤					for (GCL::StrVector::iterator it=row_data.begin(); it!=row_data.end(); it++) {¤						//if (i < siz) { ¤							tb.row[cur_columns_id[i++]] = (*it); // GARANT_SEGMENTATION_FAULT¤						//}¤					}¤¤					cur_transformer->rows.push_back (tb);¤					break;¤				}¤				case SX_1_UC_OPEN_START_ID: ¤					s_templates[cur_stereotype].generators[cur_gen_id].user_code_open_start_id = line+2;¤					break;¤				case SX_1_UC_OPEN_END_ID: ¤					s_templates[cur_stereotype].generators[cur_gen_id].user_code_open_end_id = line+2;¤					break;¤				case SX_1_UC_CLOSE_START_ID: ¤					s_templates[cur_stereotype].generators[cur_gen_id].user_code_close_start_id = line+2;¤					break;¤				case SX_1_UC_CLOSE_END_ID: ¤					s_templates[cur_stereotype].generators[cur_gen_id].user_code_close_end_id = line+2;¤					break;¤				case SX_1_UC_UNIQUE: ¤					s_templates[cur_stereotype].generators[cur_gen_id].user_code_unique = true;¤					break;¤¤				case 0:¤				case '/': ¤					break;			¤¤				default:¤					sprintf (mess, "%s:%d - Invalid Start-line character \"%s\"\n", in_file.name.data(), line_num, line);¤					throw FatalError (mess);¤					break;¤			}¤		}¤	} catch (FatalError& ex) {¤		throw ex;¤	} catch (...) {¤		sprintf (mess, "%s:%d - Unknown exception in %s", in_file.name.data(), line_num, line);¤		throw FatalError (mess);¤	}¤¤	if (cur_transformer) {¤		if (cur_transformer->rows.size() == 0) {¤			sprintf (mess, "%s:%d - Invalid transformer \"%s\" format\n", in_file.name.data(), line_num, cur_transformer->name.c_str());¤			throw FatalError (mess);¤		}¤	}¤}¤¤void AbstractDumperBase::load_user_code (FILE* in_file) const {¤	if (AbstractDumperBase::s_options.rewrite_user_code) {¤		return;¤	}¤	if (!in_file) {¤		throw FatalError ("NULL Template File");¤	}¤	¤	fseek(in_file, 0, SEEK_END);¤	long size = ftell(in_file);¤	rewind (in_file);¤¤	Core::Box<char> buf = new char[size+1];¤	size = fread(buf.in(), 1, size, in_file);¤	buf.ptr()[size] = 0;¤¤	std::string uc_id;¤	const char* buf_p = buf.ptr ();¤	const char* uc_begin;¤	const char* uc_end;¤¤	std::string uc_open_start_id = get_template_body ().user_code_open_start_id;¤	std::string uc_close_start_id = get_template_body ().user_code_close_start_id;¤	std::string uc_open_end_id = get_template_body ().user_code_open_end_id;¤	std::string uc_close_end_id = get_template_body ().user_code_close_end_id;¤	¤	while (uc_begin = strstr(buf_p, uc_open_start_id.c_str())) {¤		std::string uc_end_str;¤¤		if (!get_template_body ().user_code_unique) {¤			char uc_id_buf [1024];¤			sscanf (uc_begin + strlen (uc_open_start_id.c_str()), "%s", uc_id_buf);¤			if (*uc_id_buf == '*') {¤				char* end = GCL::find_part_end(uc_id_buf¤					, uc_id_buf + strlen (uc_id_buf) - 1¤					, '*'¤				);¤				if (end) {¤					//end += strlen (uc_close_start_id.c_str ());¤					*(++end) = 0;¤					uc_id = uc_id_buf;¤				}¤			}¤			if (uc_id == "") {¤				char mess[1024];¤				sprintf ( mess, "Invalid format for user code ID %s", uc_id_buf);¤				throw FatalError (mess);¤			}¤			uc_end_str = uc_open_end_id + uc_id + uc_close_end_id;¤		} else {¤			uc_id = "*" + this->get_model_unique_id_str () + "*";¤			uc_end_str = uc_open_end_id /*+ uc_id */+ uc_close_end_id;¤		}¤¤		uc_end = strstr (uc_begin, uc_end_str.c_str());¤		if (!uc_end) {¤			throw FatalError ("Not closed user code section"+uc_end_str);¤		}¤		¤		uc_end += uc_end_str.size();¤		UserCode uc (uc_begin, uc_end);¤		buf_p = uc_end;¤¤		std::string current_map;		¤		if (*uc_end == '*') {¤			current_map = GCL::part (uc_end, '*');¤			// need to check id for existance¤			if (current_map == "") {¤				current_map = s_current_map;¤			}¤		} else {¤			current_map = s_current_map;¤		}¤		¤		if (s_user_code[current_map][uc_id].uc == "") {¤			s_user_code[current_map][uc_id].uc = uc;¤			this->add_user_code (current_map, uc_id, uc);¤		} else {¤			throw FatalError ("Multiple user code section in GenID \"" + s_current_map + "\" with same ID \"" + uc_id + "\"");¤		}¤	}¤}¤¤///////////////////////////////////////////////////////////////////////¤// AbstractDumperBase - method implementation¤///////////////////////////////////////////////////////////////////////¤¤std::string AbstractDumperBase::create_file_name_str () const {¤	bool with_parent;¤	if (this->is_native(with_parent)) {¤		std::string ret = this->get_native_path_str ();¤		if (ret != "") {¤			return ret;¤		}¤	}¤	¤	TemplatePainter::TPArgs args;¤	args.push_back(this);¤	return TemplatePainter::resolve_exp(get_template_body ().file_template, args, this);¤}¤¤std::string AbstractDumperBase::resolve_expression (const std::string& exp) const {¤	TemplatePainter::TPArgs args;¤	args.push_back(this);¤	return TemplatePainter::resolve_exp(exp, args, this);	¤}¤¤std::string AbstractDumperBase::get_post_command_str () const {¤	TemplatePainter::TPArgs args;¤	args.push_back(this);¤	return TemplatePainter::resolve_exp(get_template_body ().post_command_template, args, this);¤}¤¤std::string AbstractDumperBase::create_dir_name_str () const {¤	TemplatePainter::TPArgs args;¤	args.push_back(this);¤	return TemplatePainter::resolve_exp(get_template_body ().dir_template, args, this);¤}¤¤std::string AbstractDumperBase::get_generator_info_str () const {¤	TemplatePainter::TPArgs args;¤	args.push_back(this);¤	return TemplatePainter::resolve_exp(get_template_body ().generator_info, args, this);¤}¤¤bool AbstractDumperBase::accepted_generator() const {¤	//Core::GDS::StopWatchEx sw ("AbstractDumperBase::accepted_generator ()");¤	AcceptedGenMap::iterator f = s_accepted_gens.find (AcceptedGenKey (this, s_current_map));¤	if (f != s_accepted_gens.end()) {¤		return f->second;¤	} else {¤		bool ret = false;¤		¤		Selections applied = this->get_applied_gens ();¤¤		if (applied.size() == 0 || (applied.find("All") != applied.end())) {¤			const AbstractDumperBase* parent = this->parent();¤			if (parent) {¤				ret = parent->accepted_generator ();¤			} else {¤				ret = true;¤			}¤		} else {¤			if (s_current_map != "") {¤				assert (s_gen_infos.find(s_current_map) != s_gen_infos.end());¤				Core::Var<GenTreeItem> cur_gen = GenTreeItem::_duplicate(s_gen_infos[s_current_map]);¤				¤				while (!cur_gen.is_nil()) {¤					if (applied.find(cur_gen->name()) != applied.end()) {¤						ret = true;¤						break;				¤					}¤					cur_gen = dynamic_cast<GenTreeItem*>(cur_gen->parent());¤				}¤			} else {¤				ret = true;¤			}¤		}¤¤		s_accepted_gens[AcceptedGenKey (this, s_current_map)] = ret;¤		return ret;¤	}¤}¤¤void AbstractDumperBase::dump (std::ostream* output) const {¤	bool wilth_parent;¤	if (!this->is_native(wilth_parent) && this->accepted_generator()) {¤		if (!output || own_output()) {¤			if (create_file_name () != "") {¤				output = get_output();¤			}¤		}¤¤		TemplatePainter::TPArgs args;¤		args.push_back(this);	¤		TemplatePainter tp (args, output, this);	¤¤		CodeTemplate templ = get_template_body ().code_template;¤		CodeTemplate::const_iterator it = templ.begin();¤		CodeTemplate::const_iterator it_end = templ.end();¤		tp.paint(it, it_end);¤	}	¤}¤¤bool AbstractDumperBase::dump_open_scope (std::ostream* output) const {¤	bool ret = false;¤	const AbstractDumperBase* par = parent();¤	if ( par ) {¤		par->dump_open_scope(output);¤¤		CodeTemplate templ = par->get_template_body ().open_scope_template;¤		¤		TemplatePainter::TPArgs args;¤		args.push_back(par);¤		TemplatePainter tp (args, output, par);¤		CodeTemplate::const_iterator it = templ.begin();¤		CodeTemplate::const_iterator it_end = templ.end();¤		tp.paint (it, it_end);¤		ret = true;¤	}¤¤	return ret;¤}¤¤bool AbstractDumperBase::dump_close_scope (std::ostream* output) const {¤	bool ret = false;¤	const AbstractDumperBase* par = parent();¤	if (par) {¤		CodeTemplate templ = par->get_template_body ().close_scope_template;	¤		¤		TemplatePainter::TPArgs args;¤		args.push_back(par);¤		TemplatePainter tp (args, output, par);¤		CodeTemplate::const_iterator it = templ.begin();¤		CodeTemplate::const_iterator it_end = templ.end();¤		tp.paint (it, it_end);¤		¤		par->dump_close_scope(output);¤		ret = true;¤	}¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractDumperBase::get_scopes(const AbstractDumperBase* main_scope) const {¤	class _local_CollectParents {¤	public:¤		_local_CollectParents (const AbstractDumperBase* parent, ADList& ret) {¤			do {¤				if (parent->am_i_registred()) {¤					ret.push_front(parent);¤				}¤			} while (parent = parent->parent());¤		}¤	};¤	¤	ADList full_ret;¤	std::string name1 = main_scope->get_name_str();¤	std::string name2 = this->get_name_str();¤	if  (main_scope && main_scope != this) {		¤		_local_CollectParents (this->parent(), full_ret);¤¤		ADList bases;¤		¤		_local_CollectParents(main_scope, bases);				¤¤		GCL::normalize(bases, full_ret, false);¤		if (full_ret.size() == 0 && AbstractDumperBase::s_shift_scope == true) {¤			full_ret.push_back (this->parent());¤		}		¤	}¤	if (¤		full_ret.size() == 1 ¤		&& *full_ret.begin() == main_scope¤		&& AbstractDumperBase::s_shift_scope == false¤	) {¤		full_ret.pop_back();¤	}¤¤	ADList_aptr ret (new ADList ());¤	// remove non namespaces¤	for (ADList::iterator it = full_ret.begin(); it != full_ret.end(); it++) {¤		const TemplateBody& templ_body = (*it)->get_template_body ();		¤		if (templ_body.open_scope_template.size()) {¤	¤			std::ostrstream output;¤	¤			TemplatePainter::TPArgs args;¤			args.push_back(*it);	¤			TemplatePainter tp (args, &output, 0);¤¤			CodeTemplate templ = templ_body.open_scope_template;¤			CodeTemplate::const_iterator tpl_it = templ.begin();¤			CodeTemplate::const_iterator tpl_it_end = templ.end();¤			tp.paint(tpl_it, tpl_it_end);¤¤			if (output.pcount() > 0) {¤				ret->push_back(*it);¤			}¤		}¤	}¤		¤	return ret._retn ();¤}¤¤AbstractDumperBase::Template& AbstractDumperBase::get_template (const StereotypeID& st) {¤	AbstractDumperBase::Templates::iterator f = s_templates.find(st);¤	if (f != s_templates.end()) {¤		return f->second;¤	} else {¤		return s_templates[RST_DEFAULT];¤	}¤}¤¤const AbstractDumperBase::Template& AbstractDumperBase::get_template () const {¤	AbstractDumperBase::Templates::iterator f = s_templates.find(this->get_model_stereotype_str());¤	if (f != s_templates.end()) {¤		return f->second;¤	} else {¤		return s_templates[RST_DEFAULT];¤	}¤}¤¤const AbstractDumperBase::TemplateBody& AbstractDumperBase::get_template_body () const {¤	AbstractDumperBase::Templates::iterator f = s_templates.find(get_model_stereotype_str());¤	if (f != s_templates.end()) {¤		if (f->second.generators.find(s_current_map) != f->second.generators.end()¤		) {¤			return f->second.generators[s_current_map];¤		}¤	}¤	return s_templates[RST_DEFAULT].generators[s_current_map];¤}	¤¤bool AbstractDumperBase::is_forbiden_forward_dcl () const {¤	bool ret = false;¤	AbstractDumperBase::Templates::iterator f = s_templates.find(get_model_stereotype_str());¤¤	if (f != s_templates.end()) {¤		ret = f->second.forbiden_forward_decl;¤	} else {¤		ret = s_templates[RST_DEFAULT].forbiden_forward_decl;¤	}¤	return ret;¤}¤¤bool AbstractDumperBase::is_allow_empty_target () const {¤	bool ret = false;¤	AbstractDumperBase::Templates::iterator f = s_templates.find(get_model_stereotype_str());¤	if (f != s_templates.end()) {¤		ret = f->second.allow_empty_target;¤	} else {¤		ret = s_templates[RST_DEFAULT].allow_empty_target;¤	}¤	return ret;¤}¤¤bool AbstractDumperBase::is_parent_visability_stereotype (const std::string& st) const {¤	bool ret = false;	¤	Templates::iterator f = s_templates.find(get_model_stereotype_str());¤	if (f != s_templates.end()) {¤		ret = (f->second.parent_visability.find(st) != f->second.parent_visability.end());¤	} else {¤		ret = (s_templates[RST_DEFAULT].parent_visability.find(st) != s_templates[RST_DEFAULT].parent_visability.end());		¤	}¤	return ret;¤}¤¤bool AbstractDumperBase::is_plain () const {¤	return get_template_body ().plain;¤}¤¤///////////////////////////////////////////////////////////////////////¤// AbstractDumperBase::TemplatePainter - contructor/destructor¤///////////////////////////////////////////////////////////////////////¤¤AbstractDumperBase::TemplatePainter::TemplatePainter (¤	const TPArgs& args,¤	std::ostream* output,¤	const AbstractDumperBase* main_scope¤) : ¤	m_args(args)¤	, m_output (output, *this)¤	, m_main_scope(main_scope)¤	, m_is_reversed_cycle (false)¤	, m_cycle_num (0)¤	, m_sorting_type (0)¤	, m_sort_processed (true)¤{¤		m_owner = args.size() ? args[0] : NULL;¤}¤¤AbstractDumperBase::TemplatePainter::TemplatePainter (¤	const TemplatePainter& base¤) : ¤	m_owner(base.m_owner)¤	, m_args(base.m_args)¤	, m_output (base.get_output(), *this)¤	, m_is_reversed_cycle (base.m_is_reversed_cycle)¤	, m_main_scope (base.m_main_scope)¤	, m_data (base.m_data)¤	, m_cycle_end(base.m_cycle_end)¤	, m_cycle_it(base.m_cycle_it)¤	, m_save_cycle_it(base.m_save_cycle_it)¤	, m_cycle_num (base.m_cycle_num)¤	, m_sorting_type (base.m_sorting_type)¤	, m_sort_processed (base.m_sort_processed)¤{	¤}¤¤///////////////////////////////////////////////////////////////////////¤// AbstractDumperBase::TemplatePainter - method implementation¤///////////////////////////////////////////////////////////////////////¤¤AbstractDumperBase::TemplatePainter::~TemplatePainter () {¤}¤¤bool AbstractDumperBase::TemplatePainter::paint (¤	CodeTemplate::const_iterator& it¤	, const CodeTemplate::const_iterator& it_end¤) {¤	return execute_paint (it, it_end, false, false);¤}¤¤std::string AbstractDumperBase::TemplatePainter::resolve_exp (¤	const CodeTemplate& exp, ¤	const TPArgs& args,¤	const AbstractDumperBase* main_scope¤) {¤	std::ostrstream resolve;¤	TemplatePainter tp (args, &resolve, main_scope);¤	¤	CodeTemplate::const_iterator it_begin = exp.begin();¤	CodeTemplate::const_iterator it_end = exp.end();¤	tp.paint(it_begin, it_end);¤	resolve << '\0';¤	¤	char* p = resolve.str();¤	resolve.freeze(false);	¤	return p;¤}¤¤std::string AbstractDumperBase::TemplatePainter::resolve_exp (¤	const CodeTemplate& exp, ¤	const TemplatePainter* base¤) {¤	std::ostrstream resolve;¤	TemplatePainter tp (*base);¤	tp.output(&resolve);¤¤	CodeTemplate::const_iterator it_begin = exp.begin();¤	CodeTemplate::const_iterator it_end = exp.end();¤	tp.paint(it_begin, it_end);¤	resolve << '\0';¤	¤	char* p = resolve.str();¤	resolve.freeze(false);	¤	return p;¤}¤¤bool AbstractDumperBase::TemplatePainter::paint_user_code (CodeTemplate::const_iterator& it, const CodeTemplate::const_iterator& it_end) {¤	bool res;¤	¤	GCL::StrVector params = GCL::extract_fragments (it, it_end, SX_2_IFCYCLE_PARAMS_OPEN, SX_2_IFCYCLE_PARAMS_CLOSE, '\\');¤	it--;¤	std::string uc_str = GCL::part(it, it_end, ']', '\\', '[');	¤	if (it == it_end) {¤		char mess[128];¤		sprintf (mess, "Unclosed user code section (started from: \"%.20s...\")\n", uc_str.c_str());¤		throw FatalError (mess);¤	}¤	¤	std::string current_map = s_current_map;¤	std::string uc_sufix;	¤	if (params.size() > 0) {¤		uc_sufix = TemplatePainter::resolve_exp(params[0], this);¤		¤		GCL::StrVector gen_ids = GCL::split_string_by_fragment (uc_sufix.data(), '!', '!');¤		if (gen_ids.size() == 1) {¤			// need to check id for existance			¤			current_map = gen_ids[0];¤			std::string to_remove = "!";¤			to_remove += gen_ids[0] + "!";¤			GCL::str_replace (uc_sufix, to_remove.data(), "");¤		}¤	}¤	¤	UserCode user_code;¤	std::string uc_id_templ = "*%SU"+ uc_sufix +"*";¤	UserCodeId uc_id = resolve_exp (uc_id_templ, this);	¤	¤	if (!AbstractDumperBase::s_options.rewrite_user_code) {¤		if (s_user_code [current_map].find (uc_id) != s_user_code [current_map].end()) {¤			user_code = s_user_code [current_map][uc_id].uc;¤			s_user_code [current_map][uc_id].used = true;¤		} else {¤			user_code = m_owner->get_user_code (current_map, uc_id);¤		}¤	}¤¤	if (user_code != "") {¤		output() << user_code;		¤		res = true;¤	} else {		¤		output() << m_owner->get_template_body ().user_code_open_start_id;¤		if (!m_owner->get_template_body ().user_code_unique) {¤			output() << uc_id;¤		}¤		output() << m_owner->get_template_body ().user_code_close_start_id;¤		std::string::const_iterator uc_it = uc_str.begin ();¤		res = execute_paint (uc_it, uc_str.end (), true, false);¤		output() << m_owner->get_template_body ().user_code_open_end_id;¤		if (!m_owner->get_template_body ().user_code_unique) {¤			output() << uc_id;¤		}¤		output() << m_owner->get_template_body ().user_code_close_end_id;¤	}¤	if (current_map != s_current_map) {¤		output() << "*";¤		output() << current_map;¤		output() << "*";¤	}¤	¤	return res;¤}¤¤bool AbstractDumperBase::TemplatePainter::paint_if (CodeTemplate::const_iterator& it, const CodeTemplate::const_iterator& it_end) {¤¤	CodeTemplate::const_iterator saved_begin = it;¤	GCL::StrVector params = GCL::extract_fragments (it, it_end, SX_2_IFCYCLE_PARAMS_OPEN, SX_2_IFCYCLE_PARAMS_CLOSE, '\\');¤	it--;¤	std::string if_str = GCL::part (it, it_end, SX_2_IF_CLOSE, SX_2_SYMBOL, SX_2_IF_OPEN);¤	if (it == it_end) {¤		char mess[128];¤		sprintf (mess, "Unclosed IF statement, started from: \"%.20s...\")\n", saved_begin);¤		throw FatalError (mess);¤	}¤¤	std::string::const_iterator if_it = if_str.begin ();¤	std::string else_str;¤	std::string condition;¤	¤	if (params.size() > 0) condition = params[0];¤	if (params.size() > 1) else_str = params[1];¤		¤	bool success = false;¤	if (condition != "") {¤		if (TemplatePainter::resolve_cond (condition, this)) {¤			success = true;¤			execute_paint (if_it, if_str.end (), true, false);¤		} else {¤			std::string::const_iterator else_it = else_str.begin ();¤			success = execute_paint (else_it, else_str.end (), true, false);¤		}¤	} else {¤		std::streampos if_pos = output ().tellp ();¤		success = execute_paint (if_it, if_str.end (), true, false);¤		if (!success) {¤			output ().seekp (if_pos);¤			std::string::const_iterator else_it = else_str.begin ();¤			success = execute_paint (else_it, else_str.end (), true, false);¤		} ¤	}¤¤	return success;¤}¤¤bool AbstractDumperBase::TemplatePainter::paint_cycle (¤	CodeTemplate::const_iterator& it¤	, const CodeTemplate::const_iterator& it_end¤) {¤	(*m_cycle_it).reset();¤¤	std::string cycle_str;¤	std::string separator;¤	std::string condition;¤	std::string params_ex;¤	std::string cycle_item;¤	m_sorting_type = 0;¤¤	unsigned shift_begin = 0;¤	unsigned shift_end = 0;¤	bool cycle_count_dump = false;¤¤	{¤		CodeTemplate::const_iterator saved_begin = it;¤¤		GCL::StrVector params = GCL::extract_fragments (it, it_end, SX_2_IFCYCLE_PARAMS_OPEN, SX_2_IFCYCLE_PARAMS_CLOSE, '\\');¤		it--;¤		cycle_str = GCL::part (it, it_end, SX_2_CYCLE_CLOSE, SX_2_SYMBOL, SX_2_CYCLE_OPEN);¤		if (it == it_end) {¤			char mess[128];¤			sprintf (mess, "Unclosed cycle (started from: \"%.20s...\")\n", saved_begin);¤			throw FatalError (mess);¤		}¤	¤		if (params.size() > 2) params_ex = params[2];¤		if (params.size() > 1) condition = params[1];¤		¤		std::string::iterator params_it;¤		for (params_it = params_ex.begin(); params_it != params_ex.end(); params_it++) {¤			switch (*params_it) {¤				case SX_3_CYCLE_COUNT_DUMP:¤					cycle_count_dump = true;¤					break;¤				case SX_3_REVERSE_CYCLE:¤					m_is_reversed_cycle = true;¤					break;¤				case SX_3_SHIFT_BEGIN:¤					shift_begin++;¤					break;¤				case SX_3_SHIFT_END:¤					shift_end++;¤					break;¤				case SX_2_ARGUMENT:¤					params_it++;¤					cycle_item = params_it;¤					break;¤				case SX_3_SORTING_TYPE:¤					params_it++;¤					m_sorting_type = params_it[0];¤					*m_sort_processed = false;¤					break;¤			}¤		}¤				¤		if (cycle_item != "") {¤			CodeTemplate::const_iterator ci_it = cycle_item.begin();¤			// setup iterator¤			this->get_dumper_by_template (ci_it);¤		}¤		¤		if (params.size() > 0) separator = TemplatePainter::resolve_exp(params[0], this); //implicit setup itereator¤	}¤		¤	std::vector<bool> success_iteration;	¤	if (condition != "") {¤		bool first_cycle = true;¤		ADList::iterator local_save_cycle_it;¤		do {¤			bool success = TemplatePainter::resolve_cond (condition, this); //implicit setup itereator¤			/////////¤			if (m_save_cycle_it == m_cycle_end) {¤				success = false;¤			}¤			/////////¤			success_iteration.push_back(success);¤		¤			if (first_cycle) {¤				local_save_cycle_it = **m_cycle_it;¤				first_cycle = false;¤			}¤¤			// advance cycle iterator¤			if (!(*m_cycle_it)) break;¤			if (!m_is_reversed_cycle) (**m_cycle_it)++;¤			else (**m_cycle_it)--;		¤		} while (!(*m_cycle_it == m_cycle_end));¤		¤		// restore cycle it¤		**m_cycle_it = local_save_cycle_it;¤	}¤¤	for (¤		std::vector<bool>::iterator it3 = success_iteration.begin()¤		; it3 != success_iteration.end() && shift_begin¤		; it3++¤	) {¤		if (*it3) {¤			shift_begin--;¤			*it3 = false;¤		}¤	}¤¤	for (¤		std::vector<bool>::reverse_iterator rit3 = success_iteration.rbegin()¤		; rit3 != success_iteration.rend() && shift_end¤		; rit3++¤	) {¤		if (*rit3) {¤			shift_end--;¤			*rit3 = false;¤		}¤	}¤	¤	bool ret_success = false;¤¤	if (cycle_count_dump) {¤		unsigned cycle_count = 0;¤		if (success_iteration.size()) {¤			for (¤				std::vector<bool>::iterator it3 = success_iteration.begin()¤				; it3 != success_iteration.end()¤				; it3++¤			) if (*it3) cycle_count++;¤		} else {¤			do {¤				if (!(*m_cycle_it == m_cycle_end)) {¤                    cycle_count++;¤				}¤				if (!(*m_cycle_it)) {¤					break;¤				}¤				if (!m_is_reversed_cycle) {¤					(**m_cycle_it)++;¤				} else {¤					(**m_cycle_it)--;¤				}¤			} while (!(*m_cycle_it == m_cycle_end));¤	¤			if (cycle_count >= shift_begin) cycle_count -= shift_begin;¤			else cycle_count = 0;¤			if (cycle_count >= shift_end) cycle_count -= shift_end;¤			else cycle_count = 0;¤¤			// restore cycle it¤			**m_cycle_it = *m_save_cycle_it;¤		}¤¤		char buf[128];¤		cycle_str = itoa (cycle_count, buf, 10);¤		CodeTemplate::const_iterator cs_it = cycle_str.begin();¤		execute_paint (cs_it, cycle_str.end(), false, true);		¤		ret_success = true;¤	} else {¤		bool prev_success = false;¤¤		std::streampos if_pos;¤		unsigned i = 0;¤		m_cycle_num = 0;¤		do {		¤			if (success_iteration.size()) {¤				if (success_iteration[i++]) {¤					if (prev_success) {¤						output() << separator;¤					}¤					CodeTemplate::const_iterator cs_it = cycle_str.begin();¤					m_cycle_num++;¤					prev_success = execute_paint (cs_it, cycle_str.end(), false, true);					¤				}¤			} else {¤				if (!shift_begin) {¤					if_pos = output().tellp();¤					¤					if (prev_success) {¤						output() << separator;¤					}¤					CodeTemplate::const_iterator cs_it = cycle_str.begin();¤					m_cycle_num++;¤					prev_success = execute_paint (cs_it, cycle_str.end(), false, true); //implicit setup itereator					¤¤					if (*m_cycle_it == m_cycle_end) {¤						// no cycle item, but sucsess by other template - reset succsess¤						prev_success = false;¤					}¤							¤					if (!prev_success ) {¤						output().seekp(if_pos);¤					}¤				} else {¤					shift_begin--;¤				}¤			}¤¤			ret_success |= prev_success;¤¤			// advance cycle iterator¤			if (!(*m_cycle_it)) break;¤			if (!m_is_reversed_cycle) (**m_cycle_it)++;¤			else (**m_cycle_it)--;		¤		} while (!(*m_cycle_it == m_cycle_end));¤		m_cycle_num = 0;¤¤		if (shift_end) {¤			output().seekp(if_pos);¤		}¤			¤		// restore cycle it¤		**m_cycle_it = *m_save_cycle_it;¤	}¤¤	return ret_success;¤}¤¤bool AbstractDumperBase::TemplatePainter::sort (ADList_box& ad_list) {	¤	if (*m_sort_processed == false) {¤		*m_sort_processed = true;¤		switch (m_sorting_type) {¤		case SX_4_ST_BY_NAME:¤			ad_list->sort (SortByName());¤			break;¤		case SX_4_ST_BY_GUID:¤			ad_list->sort (SortByUID());¤			break;¤		case SX_4_ST_BY_PARENT_AND_NAME:¤			ad_list->sort (SortByParentAndName());¤			break;¤		default:¤			return false;¤		}¤		return true;¤	} else {¤		return false;¤	}¤}¤¤const AbstractDumperBase* AbstractDumperBase::TemplatePainter::setup_iterator (¤	ADListIt_box& it_begin, // link to list it (begin)¤	ADList::iterator& it_end //new it (end)¤¤) {¤	if ( !(*m_cycle_it) ) {	//empty link to cycle it¤		m_save_cycle_it.replace (*it_begin);¤		if (!m_is_reversed_cycle) {¤			m_cycle_end.replace (it_end); //empty link to cycle end, copy NEW it (end)¤		} else {¤			m_cycle_end.replace (*it_begin); //empty link to cycle end, copy link list it (begin)¤			(*m_cycle_end)--; //move to top of begin¤¤			it_begin.replace (it_end); // link list it (begin) capture NEW it (end)¤			(*it_begin)--; // move to top of end (last el)¤		}¤		*m_cycle_it = it_begin; // empty link to cycle it, capture link¤		//m_save_cycle_it = **m_cycle_it;¤	}¤	return it_begin == it_end ? NULL : **it_begin;¤}¤¤////////////////////////¤¤const AbstractDumperBase* get_var_dumper (const std::string& var_id) {¤	VarDumpers::iterator it = g_var_dumpers.find (var_id);¤	if (it != g_var_dumpers.end()) {¤		return it->second;¤	} else {	¤		return NULL;¤	}¤}¤¤void set_var_dumper (const std::string& var_id, const AbstractDumperBase* dumper) {¤	g_var_dumpers[var_id] = dumper;¤}¤¤////////////////////////¤¤const AbstractDumperBase* AbstractDumperBase::TemplatePainter::get_dumper_by_template (CodeTemplate::const_iterator& it) {¤	const AbstractDumperBase* templ_dump = NULL;¤	if (!m_data) {¤		m_data.replace (PainterADData::make ());¤	}¤	char map_key = *it;¤	switch (*it) {		¤		case SX_3_CONTENTS:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_contents () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤		case SX_3_ALL_CONTENTS:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_all_contents () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;			¤		case SX_3_DEPENDENCES:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_dependences () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_REQURSIVE_DEPENDENCES:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {					¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_reqursive_dependences () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤¤		case SX_3_REALIZATOR:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_realizator () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤¤		case SX_3_GENERALIZATOR:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_generalizator () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;			¤¤		case SX_3_REQURSIVE_REALIZATOR:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_req_realizator () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_REQURSIVE_GENERALIZATOR:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_req_generalizator () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_SOURCE:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_source () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_NESTED_TOP_SUPPLIERS:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_nested_top_suppliers () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_NESTED_BOTOM_CONSUMERS:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_nested_botom_consumers () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_ALL_CONSUMERS:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_all_consumers () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_REQURCIVE_ALL_CONSUMERS:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_requrcive_all_consumers () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_GENERALIZATION:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_generalizations () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_REQURSIVE_GENERALIZATION:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_nested_generalizations () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;			¤¤		case SX_3_REALIZATION: ¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_realizations () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤¤		case SX_3_REQURSIVE_REALIZATION: ¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_nested_realizations () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_GET_EXCEPTIONS: ¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_get_exceptions () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_SET_EXCEPTIONS: ¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_set_exceptions () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_SCOPES: ¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_scopes (m_main_scope) : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_INCLUDES: ¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_includes () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_ALL_INCLUDES: ¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_all_includes () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_WITHOUT_NSF_INCLUDES:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_nsf_includes () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_PARENTS:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_parents () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_FORWARDED:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_forwarded () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_NO_SCOPE_FORWARDED:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_nsf_forwarded () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤¤		case SX_3_SEQUENCES:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_sequences () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_DIAGRAMS:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_diagrams () : ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤¤		case SX_3_DERIVED_IMPL:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_derived_impl () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤¤		case SX_3_DERIVED_OVER:¤			{¤				PainterADData::DataMap::iterator data = m_data->m_data_map.find (map_key);¤				if (data == m_data->m_data_map.end ()) {				¤					data = m_data->m_data_map.insert (¤						PainterADData::DataMap::value_type (¤							map_key¤							, PainterADData::DataPair (m_owner ? m_owner->get_derived_over () : new ADList(), ADListIt_box ())¤						)¤					).first;¤					this->sort (data->second.first);¤					data->second.second.replace (data->second.first->begin());¤				} else {¤					if (this->sort (data->second.first)) {¤						data->second.second.replace (data->second.first->begin());¤					}¤				}¤				templ_dump = setup_iterator (data->second.second, data->second.first->end());¤			}¤			break;¤			¤		case SX_3_TARGET:¤			templ_dump = m_owner ? m_owner->get_target() : NULL;¤			break;¤		case SX_3_SELF:¤			templ_dump = m_owner;¤			break;¤		case SX_3_MAIN_SCOPE:¤			templ_dump = m_main_scope;¤			break;¤		case SX_3_MAIN_ELEMENT:¤			//templ_dump = s_main_element;¤			templ_dump = m_owner ? m_owner->get_main_element() : s_model_main_element;¤			break;¤		case SX_3_GENERATOR: ¤			{¤				TemplateDumperDumper* temp_dump = new TemplateDumperDumper (s_current_map);¤				TemplateDumperDumper::add_dumper (temp_dump);¤				templ_dump = temp_dump;¤			}¤			break;¤¤		case '0':¤		case '1':¤		case '2':¤		case '3':¤		case '4':¤		case '5':¤		case '6':¤		case '7':¤		case '8':¤		case '9': {¤			char buff[2];¤			buff[0] = *it;¤			buff[1] = 0;¤			unsigned indx = atoi (buff);¤			if (m_args.size() > indx) templ_dump = m_args[indx];		¤			break;¤		}¤		case '{': {¤			std::string var_id = GCL::part(it, '}');¤			if (*it == 0) {¤				char mess[128];¤				sprintf (mess, "Unclosed VAR id (started from: \"%.20s...\")\n", var_id.c_str());¤				throw FatalError (mess);¤			}¤			templ_dump = get_var_dumper (var_id);¤			break;¤		}¤		default: {¤			char mess[128];¤			sprintf (mess, "Invalid dumper command at: %.20s \n", it);¤			throw FatalError (mess);¤		}¤	}¤¤	if (*(it+1) == SX_2_ARGUMENT && *(it+2) != SX_3_FUNCTION && *(it+2) != SX_3_TRANSFORMATOR) {¤		it++;¤		it++;¤		if (templ_dump) {¤			AbstractDumperBase::TemplatePainter::TPArgs args;¤			args.push_back (templ_dump);¤			AbstractDumperBase::TemplatePainter tp (args, get_output(), m_main_scope);¤			templ_dump = tp.get_dumper_by_template(it);¤		}¤	}¤	¤	if (!templ_dump || !templ_dump->accepted_generator()) {¤		return 0;¤	}¤	return templ_dump;¤}¤¤class TextDumper: public AbstractSingleDumperBase {¤public:¤	TextDumper (const char* str) {¤		m_str = str;¤	}¤	std::string get_name_str () const {¤		return m_str;¤	}¤¤	bool operator == (const AbstractDumperBase& c) const {¤		bool ret = false;¤		const TextDumper* td = dynamic_cast<const TextDumper*>(&c);¤		if (td) {¤			ret = (m_str == td->m_str);¤		}¤		return ret;¤	}¤¤private:¤	std::string m_str;¤};¤¤std::string AbstractDumperBase::TemplatePainter::st_function (¤	const FunctionID& f_id¤	, const GCL::StrVector& params¤	, const AbstractDumperBase* context¤) {¤	const Template& tpl = context->get_template ();¤	Functions::const_iterator f = tpl.functions.find (f_id);¤¤	if (f == tpl.functions.end()) {¤		char mess [128];¤		sprintf (mess, "use undefined stereotype's function \"%s\"", f_id.c_str());¤		throw FatalError (mess);¤	}¤¤¤	return this->resolve_function (f->second, params, context);¤¤}¤¤std::string AbstractDumperBase::TemplatePainter::resolve_function (¤	const FunctionTemplate& f_tpl¤	, const GCL::StrVector& params¤	, const AbstractDumperBase* context¤) {¤	typedef Core::Box<AbstractDumperBase> AbstractDumperBase_box;¤	typedef std::vector<AbstractDumperBase_box> DumpersDestructor;¤	DumpersDestructor destruct;¤¤	TPArgs args;¤	if (context) {¤		args.push_back(context);¤	}¤	for (GCL::StrVector::const_iterator p_it = params.begin(); p_it != params.end(); p_it++) {¤		switch ((*p_it)[0]) {¤			case SX_2_ARGUMENT: {				¤				std::string::const_iterator it_begin = (*p_it).begin();¤				std::string::const_iterator it_end = (*p_it).end();¤				bool only_dump = true;¤				for (; it_begin != it_end; it_begin++) {¤					if (*it_begin == SX_2_ARGUMENT) {						¤						it_begin++;¤						if (¤							(*it_begin >= 'A' && *it_begin <= 'Z') ¤							|| (*it_begin >= 'a' && *it_begin <= 'z') ¤							|| (*it_begin >= '0' && *it_begin <= '9')¤						) {¤						} else if (*it_begin == '{') {¤							for (; it_begin != it_end; it_begin++) {¤								if (*it_begin == '}') {¤									break;¤								}¤							}¤						} else {¤							only_dump = false;¤							break;¤						}						¤					} else {¤						only_dump = false;¤						break;¤					}¤				}¤				/*if ((*p_it)[1] == SX_3_TRANSFORMATOR) {					¤					GCL::StrVector params;¤					std::string::const_iterator it = (*p_it).begin(); ¤					it++;						¤					std::string::const_iterator it_end = (*p_it).end(); ¤					TransformatorID t_id = this->extract_transformer (it, it_end, params);¤					¤					AbstractDumperBase::TemplatePainter tp (*this);						¤					std::string trans_rs = tp.transform (t_id, params);						¤					AbstractDumperBase* arg = new TextDumper (trans_rs.data()); ¤					args.push_back(arg); ¤					destruct.push_back(arg);¤				} else if ((*p_it)[1] == SX_3_FUNCTION) {					¤					GCL::StrVector params;¤					std::string::const_iterator it = (*p_it).begin(); ¤					it++;						¤					std::string::const_iterator it_end = (*p_it).end(); ¤¤					FunctionID f_id = this->extract_function (it, it_end, params);¤					¤					std::string func_rs = this->function (f_id, params);¤					AbstractDumperBase* arg = new TextDumper (func_rs.data()); ¤					args.push_back(arg); ¤					destruct.push_back(arg);¤				} else */¤				if (!only_dump) {¤					std::string::const_iterator arg_it = (*p_it).begin();¤					//arg_it++;¤					std::string s = TemplatePainter::resolve_exp(arg_it, this);					¤					AbstractDumperBase* arg = new TextDumper (s.data());¤					args.push_back(arg);¤					destruct.push_back(arg);¤				} else {¤					std::string::const_iterator arg_it = (*p_it).begin(); ¤					arg_it++; ¤					const AbstractDumperBase* arg = get_dumper_by_template (arg_it);¤					args.push_back(arg); 					¤				}				¤				break; 								¤			} ¤			case SX_3_SEPARATOR_BEGIN: {¤				std::string::const_iterator arg_it = (*p_it).begin();¤				arg_it++;¤				std::string s = TemplatePainter::resolve_exp(arg_it, this);¤				s.resize(s.size()-1);¤				AbstractDumperBase* arg = new TextDumper (s.data());¤				args.push_back(arg);¤				destruct.push_back(arg);¤				break;¤			}¤		}¤	}¤¤	if (args.size() && args[0]) {¤		return TemplatePainter::resolve_exp(f_tpl, args, context ? context : m_main_scope);¤	} else {¤		return "";¤	}¤}¤¤¤std::string AbstractDumperBase::TemplatePainter::function (const std::string& f_id, const GCL::StrVector& params) {¤	if (f_id == FID_DEBUG_POINT) {¤		::debug_func (TemplatePainter::resolve_exp(params[0], this));¤	} else if (f_id == FID_CONVERT_TO_OMG_STYLE) {¤		std::string ret = TemplatePainter::resolve_exp(params[0], this);¤		return GCL::convert_to_omg_style(ret, GCL::CI_FUNCTION);¤	} else if (f_id == FID_CONVERT_TO_BORLAND_STYLE) {¤		std::string ret = TemplatePainter::resolve_exp(params[0], this);¤		return GCL::convert_to_borland_style(ret, GCL::CI_FUNCTION);¤	} else if (f_id == FID_NORMOLIZED_PATH) {¤		GenID tmp = s_current_map;¤		s_current_map = TemplatePainter::resolve_exp(params[0], this);¤		¤		std::string::const_iterator it = params[1].begin();		¤		const AbstractDumperBase* adb = this->get_dumper_by_template(it);¤		¤		std::string target_path;¤		std::string target_root;¤		if (adb) {¤			target_path = adb->create_relative_file_name();¤			target_root = adb->get_root_dir ();¤		}¤		¤		s_current_map = tmp;¤¤		if (target_path != "") {¤			return m_main_scope->create_normolized_path (target_path.data(), target_root.data());¤		} else {¤			return "";¤		}¤	} else if (f_id == FID_NORMOLIZED_DIR) {¤		GenID tmp = s_current_map;¤		s_current_map = TemplatePainter::resolve_exp(params[0], this);¤			¤		std::string::const_iterator it = params[1].begin();		¤		const AbstractDumperBase* adb = this->get_dumper_by_template(it);¤		¤		std::string target_path;¤		std::string target_root;¤		if (adb) {¤			target_path = adb->create_relative_dir_name();¤			target_root = adb->get_root_dir ();¤		}¤		¤		s_current_map = tmp;¤¤		if (target_path != "") {¤			return m_main_scope->create_normolized_path (target_path.data(), target_root.data());¤		} else {¤			return "";¤		}¤	} else if (f_id == FID_STRING_CONVERTER) {¤		std::string str (params[0].begin()+1, params[0].end()-1);¤		str = TemplatePainter::resolve_exp(str, this);¤		std::string in_format (params[1].begin()+1, params[1].end()-1);¤		std::string out_format (params[2].begin()+1, params[2].end()-1);¤¤		GCL::convert_to_scanf_format (in_format);¤		GCL::convert_to_scanf_format (out_format);¤¤		return GCL::string_converter(str, in_format, out_format );¤	} else if (f_id == FID_STRING_SPLIT) {¤		std::string ret = TemplatePainter::resolve_exp(params[0], this);¤		GCL::StrVector strs = GCL::split_string_format (ret.c_str(), std::max<unsigned int> (60, 20));¤		¤		std::string prefix;¤		if (params.size() > 1) {¤			prefix = TemplatePainter::resolve_exp(params[1], this);¤		}¤		¤		std::string sep;¤		if (params.size() > 2) {¤			sep = TemplatePainter::resolve_exp(params[2], this);¤		} else {¤			sep = "\n";¤		}¤				¤		ret = "";¤		for (GCL::StrVector::iterator it = strs.begin(); it != strs.end(); it++) {¤			ret += prefix + GCL::trim_ws(it->data ());¤			if (std::distance (it, strs.end()) > 1) ret += sep;¤		}¤		return ret;¤	} else if (f_id == FID_STR_REPLACE) {¤		if (params.size() < 3) {¤			char mess [128];¤			sprintf (mess, "invalid parameters count for function %s", f_id.c_str());¤			throw FatalError (mess);¤		}¤¤		std::string ret = TemplatePainter::resolve_exp(params[0], this);¤		std::string source_substr = TemplatePainter::resolve_exp(params[1], this);¤		std::string target_substr = TemplatePainter::resolve_exp(params[2], this);¤				¤		GCL::str_replace (ret, source_substr.data(), target_substr.data());¤		return ret;¤	} else if (f_id == FID_STRING_UPPER_CASE) {¤		std::string ret = TemplatePainter::resolve_exp(params[0], this);¤		GCL::to_upper(ret);¤		return ret;¤	} else if (f_id == FID_DEC_TO_HEX) {¤		std::string str = TemplatePainter::resolve_exp(params[0], this);¤		int i = atoi (str.c_str()+1);¤		char buf[32];¤		std::string ret = itoa (i, buf, 16);¤¤		int length = atoi (params[1].c_str());¤¤		while (length - (int)ret.size() > 0) {¤			ret = "0" + ret;¤		}¤		return ret;¤	} else if (f_id == FID_STRING_LOWER_CASE) {¤		std::string ret = TemplatePainter::resolve_exp(params[0], this);¤		GCL::to_lower(ret);¤		return ret;¤	} else if (f_id == FID_TO_WIDE_STR) {¤		std::string ret = TemplatePainter::resolve_exp(params[0], this);¤		char prefix = 0;¤		char open = 0;¤		char close = 0;¤		bool keep_eng = false;¤		if (params.size() > 1) prefix = params[1][0];¤		if (params.size() > 2) {¤			open = params[2][0];¤			keep_eng = true;¤		}¤		if (params.size() > 3) close = params[3][0];		¤		return GCL::multibyte_to_str (ret, prefix, keep_eng, open, close);¤	} else if (f_id == FID_SHIFT_INTEND) {¤		s_intend_shift += atoi(params[0].c_str());¤	} else if (f_id == FID_SHIFT_SCOPE) {¤		std::string param = TemplatePainter::resolve_exp(params[0], this);¤		s_shift_scope = (param == "true");¤	} else if (f_id == FID_MODEL_ERROR) {		¤		this->m_owner->write_template_error_log(TemplatePainter::resolve_exp(params[0], this).data());¤	} else if (f_id == FID_MODEL_WARNING) {		¤		this->m_owner->write_template_warning_log(TemplatePainter::resolve_exp(params[0], this).data());¤	} else if (f_id == FID_CHANGE_GENID) {¤		GenID tmp = s_current_map;¤		s_current_map = TemplatePainter::resolve_exp(params[0], this);¤		std::string ret = TemplatePainter::resolve_exp(params[1], this);¤		s_current_map = tmp;¤		return ret;¤	} else if (f_id == FID_SET_GENID) {¤		s_current_map = TemplatePainter::resolve_exp(params[0], this);¤	} else if (f_id == FID_SET_GEN_PROP) {¤		std::string prop_id = TemplatePainter::resolve_exp(params[0], this);¤		std::string prop_val = TemplatePainter::resolve_exp(params[1], this);¤		s_gen_infos[s_current_map]->set_property (prop_id, prop_val);¤	} else if (f_id == FID_SET_VAR_DUMPER) {¤		std::string var_id = TemplatePainter::resolve_exp(params[0], this);¤		std::string param = TemplatePainter::resolve_exp(params[1], this);¤		if (GCL::start_with(param.data(), "\"") && GCL::end_with(param.data(), "\"")) {¤			std::string text (param.begin () + 1, param.end () - 1);¤			AbstractDumperBase* arg = new TextDumper (text.data());¤			g_dumpers_heap.push_back (arg);¤			set_var_dumper (var_id, arg);¤		} else {¤			std::string::const_iterator it = param.begin();¤			set_var_dumper (var_id, this->get_dumper_by_template(it));¤		}		¤	} else if (f_id == FID_ELEMENT_COUNTER) {		¤		std::string counter_id = TemplatePainter::resolve_exp(params[0], this);¤		std::string::const_iterator it = params[1].begin();¤		return this->get_dumper_by_template(it)->element_counter (counter_id);¤	} else if (f_id == FID_SUBSTRING_FROM_END) {¤		if (params.size () < 2) {¤			char mess [128];¤			sprintf (mess, "invalid parameters count for function %s", f_id.c_str());¤			throw FatalError (mess);¤		}¤		std::string source_str = TemplatePainter::resolve_exp(params[0], this);¤		long symbols_count = boost::lexical_cast<long> (TemplatePainter::resolve_exp(params[1], this));¤		long skip_symbols = source_str.size () - symbols_count;¤		if (skip_symbols < 0) {//если просят символов больше чем есть - отдаем всю строку¤			skip_symbols = 0;¤		}¤		std::string ret (¤			source_str.begin () + skip_symbols¤			, source_str.end ()¤		);¤		return ret;¤	} else if (f_id == FID_SUBSTRING_FROM_BEGIN) {¤		if (params.size () < 2) {¤			char mess [128];¤			sprintf (mess, "invalid parameters count for function %s", f_id.c_str());¤			throw FatalError (mess);¤		}¤		std::string source_str = TemplatePainter::resolve_exp(params[0], this);¤		std::string::size_type symbols_count = boost::lexical_cast<long> (TemplatePainter::resolve_exp(params[1], this));		¤		if (symbols_count > source_str.size ()) {//если просят символов больше чем есть - отдаем всю строку¤			symbols_count = source_str.size ();¤		}¤		std::string ret (¤			source_str.begin () ¤			, source_str.begin () + symbols_count¤		);¤		return ret;	¤	} else if (f_id == FID_DELSUBSTR_FROM_END) {¤		if (params.size () < 2) {¤			char mess [128];¤			sprintf (mess, "invalid parameters count for function %s", f_id.c_str());¤			throw FatalError (mess);¤		}¤		std::string source_str = TemplatePainter::resolve_exp(params[0], this);¤		long symbols_count = boost::lexical_cast<long> (TemplatePainter::resolve_exp(params[1], this));		¤		long skip_symbols = source_str.size () - symbols_count;¤		if (skip_symbols < 0) {//если просят символов больше чем есть - удаляем всю строку¤			skip_symbols = source_str.size ();¤		}		¤		return source_str.substr (0, skip_symbols);¤	} else if (f_id == FID_DELSUBSTR_FROM_BEGIN) {¤		if (params.size () < 2) {¤			char mess [128];¤			sprintf (mess, "invalid parameters count for function %s", f_id.c_str());¤			throw FatalError (mess);¤		}¤		std::string source_str = TemplatePainter::resolve_exp(params[0], this);¤		std::string::size_type symbols_count = boost::lexical_cast<long> (TemplatePainter::resolve_exp(params[1], this));				¤		if (symbols_count > source_str.size ()) {//если просят символов больше чем есть - удаляем всю строку¤			symbols_count = source_str.size ();¤		}	¤¤		return source_str.substr (symbols_count);¤	} else if (f_id == FID_STRING_HASH) {		¤		std::string source_str = TemplatePainter::resolve_exp(params[0], this);¤		boost::hash<std::string> str_hash;		¤		std::string ret = boost::lexical_cast<std::string> (str_hash (source_str));¤		return ret;¤	} else if (f_id == FID_STRING_LENGTH) {¤		std::string source_str = TemplatePainter::resolve_exp(params[0], this);		¤		std::string ret = boost::lexical_cast<std::string> (source_str.length ());¤		return ret;¤	} else if (f_id == FID_STRING_CMP) {¤		if (params.size () < 3) {¤			char mess [128];¤			sprintf (mess, "invalid parameters count for function %s", f_id.c_str());¤			throw FatalError (mess);¤		}¤		std::string first = TemplatePainter::resolve_exp(params[0], this);¤		std::string second = TemplatePainter::resolve_exp(params[1], this);¤		std::string op = TemplatePainter::resolve_exp(params[2], this);¤¤		std::string ret;¤		if (op == "\"<\"") {¤			ret = boost::lexical_cast<std::string> (first < second);¤		} else if (op == "\"<=\"") {¤			ret = boost::lexical_cast<std::string> (first <= second);¤		} else if (op == "\">\"") {¤			ret = boost::lexical_cast<std::string> (first > second);¤		} else if (op == "\">=\"") {¤			ret = boost::lexical_cast<std::string> (first >= second);¤		} else if (op == "\"==\"") {¤			ret = boost::lexical_cast<std::string> (first == second);¤		} else if (op == "\"!=\"") {¤			ret = boost::lexical_cast<std::string> (first != second);¤		} else {¤			char mess [128];¤			sprintf (mess, "Wrong compare operation %s for function %s", op.c_str (), f_id.c_str());¤			throw FatalError (mess);¤		}¤		return ret;¤	} else if (f_id == FID_NUMBER_CMP) {¤		if (params.size () < 3) {¤			char mess [128];¤			sprintf (mess, "invalid parameters count for function %s", f_id.c_str());¤			throw FatalError (mess);¤		}¤		std::string first_str = TemplatePainter::resolve_exp(params[0], this);¤		std::string second_str = TemplatePainter::resolve_exp(params[1], this);¤		std::string op = TemplatePainter::resolve_exp(params[2], this);¤¤		first_str = first_str.substr (1, first_str.length () - 2);¤		second_str = second_str.substr (1, second_str.length () - 2);		¤¤		long first;¤		long second;¤¤		try {¤			first = boost::lexical_cast<long> (¤				first_str¤			);¤			second = boost::lexical_cast<long> (¤				second_str¤			);¤		} catch (boost::bad_lexical_cast&) {¤			char mess [128];¤			sprintf (¤				mess¤				, "Bad params in function: %s (%s, %s, %s)"¤				, f_id.c_str()¤				, first_str.c_str ()¤				, second_str.c_str ()¤				, op.c_str ()				¤			);¤			throw FatalError (mess);¤		}		¤¤		std::string ret;¤		if (op == "\"<\"") {¤			ret = boost::lexical_cast<std::string> (first < second);¤		} else if (op == "\"<=\"") {¤			ret = boost::lexical_cast<std::string> (first <= second);¤		} else if (op == "\">\"") {¤			ret = boost::lexical_cast<std::string> (first > second);¤		} else if (op == "\">=\"") {¤			ret = boost::lexical_cast<std::string> (first >= second);¤		} else if (op == "\"==\"") {¤			ret = boost::lexical_cast<std::string> (first == second);¤		} else if (op == "\"!=\"") {¤			ret = boost::lexical_cast<std::string> (first != second);¤		} else {¤			char mess [128];¤			sprintf (mess, "Wrong compare operation %s for function %s", op.c_str (), f_id.c_str());¤			throw FatalError (mess);¤		}¤		return ret;¤	} else {¤		Functions::iterator f = s_functions.find(f_id);¤		if (f == s_functions.end()) {¤			char mess [128];¤			sprintf (mess, "use undefined function \"%s\"", f_id.c_str());¤			throw FatalError (mess);¤		}¤		¤		return this->resolve_function (f->second, params, 0);¤	}¤	return "";¤}¤¤std::string AbstractDumperBase::TemplatePainter::st_transform (¤	const TransformatorID& t_id¤	, const GCL::StrVector& params¤	, const AbstractDumperBase* context¤) {¤	const Template& tpl = context->get_template ();¤	Transformators::const_iterator f = tpl.transformators.find (t_id);¤¤	if (f == tpl.transformators.end()) {¤		/*char mess [128];¤		sprintf (mess, "use undefined stereotype's transformator \"%s\"", t_id.c_str());¤		throw FatalError (mess);*/¤		return "";¤	}¤¤	return this->resolve_transform (f->second, params, context);¤}¤¤std::string AbstractDumperBase::TemplatePainter::resolve_transform (¤	const Transformator& transf¤	, const GCL::StrVector& params¤	, const AbstractDumperBase* context¤) {¤¤	TPArgs args;¤	typedef Core::Box<AbstractDumperBase> AbstractDumperBase_box;¤	typedef std::vector<AbstractDumperBase_box> DumpersDestructor;¤	DumpersDestructor destruct;¤¤	if (context) {¤		args.push_back(context);¤	}¤	¤	for (GCL::StrVector::const_iterator p_it = params.begin(); p_it != params.end(); p_it++) {¤		switch ((*p_it)[0]) {¤			case SX_2_ARGUMENT: {¤				std::string::const_iterator arg_it  = (*p_it).begin();¤				arg_it++;¤				const AbstractDumperBase* arg = get_dumper_by_template (arg_it);¤				if (arg) {¤					args.push_back(arg);¤				}¤				break;¤			} ¤			case SX_3_SEPARATOR_BEGIN: {¤				std::string s = TemplatePainter::resolve_exp(std::string ((*p_it).begin()+1, (*p_it).end()-1), this);¤				AbstractDumperBase* arg = new TextDumper (s.data());¤				args.push_back(arg);¤				destruct.push_back(arg);¤				break;¤			}¤		}¤	}¤¤	std::string first_arg_str;¤	if (args.size() > 1) {¤		first_arg_str = args[1]->get_name_str ();¤	}¤¤	bool we_find_row = false;¤	AbstractDumperBase::TransformatorBodyList::const_iterator finded_row = transf.rows.end();¤	for (¤		AbstractDumperBase::TransformatorBodyList::const_iterator tbl_it = transf.rows.begin()¤		; tbl_it != transf.rows.end() && finded_row == transf.rows.end()¤		; tbl_it++¤	) {	¤		if (TemplatePainter::resolve_cond((*tbl_it).row_exp, args, context ? context : m_main_scope)) {¤			finded_row = tbl_it;¤		}¤	}¤¤	if (finded_row != transf.rows.end()) {		¤		AbstractDumperBase::TransformatorRow::const_iterator f = (*finded_row).row.find(first_arg_str);¤		if (f == (*finded_row).row.end()) {¤			f = (*finded_row).row.find("");¤		}¤¤		if (f != (*finded_row).row.end()) {¤			TransformatorTemplate templ = (*f).second;¤			return TemplatePainter::resolve_exp(templ, args, context ? context : m_main_scope);¤		}¤	}¤¤	return "";¤}¤¤std::string AbstractDumperBase::TemplatePainter::transform (const std::string& t_id, const GCL::StrVector& params) {¤	Transformators::const_iterator f = s_transformators.find(t_id);¤¤	if (f == s_transformators.end()) {¤		char mess [128];¤		sprintf (mess, "use undefined transformator \"%s\"", t_id.c_str());¤		throw FatalError (mess);¤	}¤¤	//return this->resolve_transform (f->second, params, 0);¤¤	TPArgs args;¤	¤	typedef Core::Box<AbstractDumperBase> AbstractDumperBase_box;¤	typedef std::vector<AbstractDumperBase_box> DumpersDestructor;¤	DumpersDestructor destruct;¤	for (GCL::StrVector::const_iterator p_it = params.begin(); p_it != params.end(); p_it++) {¤		switch ((*p_it)[0]) {¤			case SX_2_ARGUMENT: {¤				std::string::const_iterator arg_it  = (*p_it).begin();¤				arg_it++;¤				const AbstractDumperBase* arg = get_dumper_by_template (arg_it);¤				if (arg) {¤					args.push_back(arg);¤				}¤				break;¤			} ¤			case SX_3_SEPARATOR_BEGIN: {¤				std::string s = TemplatePainter::resolve_exp(std::string ((*p_it).begin()+1, (*p_it).end()-1), this);¤				AbstractDumperBase* arg = new TextDumper (s.data());¤				args.push_back(arg);¤				destruct.push_back(arg);¤				break;¤			}¤		}¤	}¤¤	std::string first_arg_str;¤	if (args.size() > 1) {¤		first_arg_str = args[1]->get_name_str ();¤	}¤¤	bool we_find_row = false;¤	AbstractDumperBase::TransformatorBodyList::iterator finded_row ¤		= AbstractDumperBase::s_transformators[t_id].rows.end();¤	for (¤		AbstractDumperBase::TransformatorBodyList::iterator tbl_it ¤			= AbstractDumperBase::s_transformators[t_id].rows.begin()¤		; tbl_it != AbstractDumperBase::s_transformators[t_id].rows.end() ¤			&& finded_row == AbstractDumperBase::s_transformators[t_id].rows.end()¤		; tbl_it++¤	) {	¤		if (TemplatePainter::resolve_cond((*tbl_it).row_exp, args, m_main_scope)) {¤			finded_row = tbl_it;¤		}¤	}¤¤	if (finded_row != AbstractDumperBase::s_transformators[t_id].rows.end()) {		¤		AbstractDumperBase::TransformatorRow::iterator f = (*finded_row).row.find(first_arg_str);¤		if (f == (*finded_row).row.end()) {¤			f = (*finded_row).row.find("");¤		}¤¤		if (f != (*finded_row).row.end()) {¤			TransformatorTemplate templ = (*f).second;			¤			return TemplatePainter::resolve_exp(templ, args, m_main_scope);¤		}¤	}¤¤	return "";¤}¤¤bool AbstractDumperBase::TemplatePainter::resolve_cond (¤	const CodeTemplate& exp¤	, const TemplatePainter* base¤) {	¤	return resolve_cond_ex(exp, TPArgs(), NULL, base);¤}¤¤bool AbstractDumperBase::TemplatePainter::resolve_cond (¤	const CodeTemplate& exp¤	, const TPArgs& args¤	, const AbstractDumperBase* main_scope¤) {	¤	return resolve_cond_ex(exp, args, main_scope, NULL);¤}¤¤bool AbstractDumperBase::TemplatePainter::resolve_cond_ex (¤	const CodeTemplate& exp¤	, const TPArgs& args¤	, const AbstractDumperBase* main_scope¤	, const TemplatePainter* base¤) {	¤	bool exp_good = false;¤¤	GCL::StrVector exp_or_parts;¤	GCL::split_string_by (¤		exp.begin(), exp.end(), SX_4_COND_OR, OPEN_CHARS, SX_2_SYMBOL, CLOSE_CHARS, exp_or_parts¤	);¤	for (¤		GCL::StrVector::iterator ep_or_it = exp_or_parts.begin()¤		; ep_or_it != exp_or_parts.end() && !exp_good¤		; ep_or_it++¤	) {		¤		GCL::StrVector exp_and_parts;¤		GCL::split_string_by (¤			(*ep_or_it).begin(), (*ep_or_it).end(), SX_4_COND_AND, OPEN_CHARS, SX_2_SYMBOL, CLOSE_CHARS, exp_and_parts¤		);¤		exp_good = true;¤		for (¤			GCL::StrVector::iterator ep_and_it = exp_and_parts.begin()¤			; ep_and_it != exp_and_parts.end() && exp_good¤			; ep_and_it++¤		) {¤			GCL::StrVector exp_part_parts;¤			GCL::split_string_by (¤				(*ep_and_it).begin(), (*ep_and_it).end(), SX_4_COND_EQU, OPEN_CHARS, SX_2_SYMBOL, CLOSE_CHARS, exp_part_parts¤			);¤			if (exp_part_parts.size() == 1) {¤				std::string exp_resolv;¤				if (!base) exp_resolv = TemplatePainter::resolve_exp(exp_part_parts[0], args, main_scope);¤				else exp_resolv = TemplatePainter::resolve_exp(exp_part_parts[0], base);¤				exp_good = exp_resolv != "";¤			} else {¤				if (exp_part_parts.size() != 2) {¤					char mess[128];¤					sprintf (mess, "Bad expression format \"%s\"\n", (*ep_and_it).c_str());¤					throw FatalError(mess);¤				}¤¤				bool is_not = false;¤				if (exp_part_parts[0][exp_part_parts[0].size()-1] == SX_4_COND_NOT) {¤					is_not = true;¤					exp_part_parts[0].resize(exp_part_parts[0].size()-1);¤				}¤				¤				std::string exp_resolv_0;¤				std::string exp_resolv_1;¤				if (!base) {¤					exp_resolv_0 = TemplatePainter::resolve_exp(exp_part_parts[0], args, main_scope);¤					exp_resolv_1 = TemplatePainter::resolve_exp(exp_part_parts[1], args, main_scope);¤				} else {¤					exp_resolv_0 = TemplatePainter::resolve_exp(exp_part_parts[0], base);¤					exp_resolv_1 = TemplatePainter::resolve_exp(exp_part_parts[1], base);¤				}¤			¤				exp_good = exp_resolv_0 == exp_resolv_1;¤				if (is_not) exp_good = !exp_good;¤			}¤		}¤	}¤¤	return exp_good;¤}¤¤bool AbstractDumperBase::TemplatePainter::paint_parameter ( ¤	CodeTemplate::const_iterator& it, ¤	const CodeTemplate::const_iterator& it_end, ¤	const AbstractDumperBase* templ_dump¤) {¤	bool output_success = false;¤	std::streampos pos = output().tellp ();¤	it++;¤¤	if (*it == SX_4_IS_EXISTS) {¤		output() << (templ_dump ? "true" : "false");¤	} else if (templ_dump) {¤		switch (*it) {¤			case SX_2_ARGUMENT: ¤			{¤				it++;¤				std::string rs;¤				GCL::StrVector params;			¤¤				if (*it == SX_3_FUNCTION) {¤					FunctionID f_id = this->extract_function (it, it_end, params);¤					rs = this->st_function (f_id, params, templ_dump);¤				} else if (*it == SX_3_TRANSFORMATOR) {¤					TransformatorID t_id = this->extract_transformer (it, it_end, params);¤					AbstractDumperBase::TemplatePainter tp (*this);¤					rs = tp.st_transform (t_id, params, templ_dump);¤				} else {¤					assert (0);¤					rs = "[ERROR 34]";¤				}¤¤				output() << rs;¤				output_success |= (rs != "");¤¤				break;¤			}¤			case SX_4_IS_TOP_REG:¤				output() << (templ_dump->has_registred_parent() ? "false" : "true");¤				break;¤			case SX_4_IS_REG: ¤				output() << (templ_dump->am_i_registred() ? "true" : "false");¤				break;¤			case SX_4_IS_EXTERNAL_NATIVE: {¤				bool b;¤				output() << (templ_dump->is_native (b) ? "true" : "false");¤				break;¤			}¤			case SX_4_IS_FIXED:¤				output() << templ_dump->get_type_fixed_size_str();¤				break;		¤			case SX_4_NAME:					¤				output() << templ_dump->get_name_str();¤				break;¤			case SX_4_AUTO_COUNTER:					¤				output() << templ_dump->get_auto_counter_str();¤				break;¤			case SX_4_INITIAL_VALUE:¤				output() << templ_dump->get_initial_value_str();¤				break;¤			case SX_4_STEREOTYPE:¤				output() << templ_dump->get_stereotype_str();¤				break;¤			case SX_4_TARGET_STEREOTYPE:¤				output() << templ_dump->get_target_stereotype_str();¤				break;¤			case SX_4_MODEL_STEREOTYPE:¤				output() << templ_dump->get_model_stereotype_str();¤				break;¤			case SX_4_OS_GUID:¤				output() << templ_dump->get_guid_str();¤				break;¤			case SX_4_MODEL_UNIQUE_ID:¤				output() << templ_dump->get_model_unique_id_str();¤				break;¤			case SX_4_MODEL_CLASS:¤				output() << templ_dump->get_model_class_str();¤				break;¤			case SX_4_DOCUMENTATION:¤				output() << templ_dump->get_documentation_str();					¤				break;¤			case SX_4_FILE_NAME:¤				output() << templ_dump->create_file_name_str();¤				break;¤			case SX_4_FILE_PATH:¤				output() << templ_dump->create_file_name();¤				break;¤			case SX_4_DIR_RELATIVE_PATH:¤				output() << templ_dump->create_relative_dir_name ();¤				break;¤			case SX_4_FILE_RELATIVE_PATH:¤				output() << templ_dump->create_relative_file_name();¤				break;¤			case SX_4_FILE_RELATIVE_PATH_WITH_PARENT:¤				output() << templ_dump->create_relative_file_name_with_parent();¤				break;¤			case SX_4_VISABILITY:¤				output() << templ_dump->get_visability_str();¤				break;¤			case SX_4_IS_ABSTRACT:¤				output() << templ_dump->get_abstract_str();¤				break;¤			case SX_4_CLASS_KIND:¤				output() << templ_dump->get_class_kind_str();¤				break;				¤			case SX_4_LINK_TYPE:¤				output() << templ_dump->get_link_type_str();¤				break;¤			case SX_4_GEN_INFO:¤				output() << templ_dump->get_generator_info_str();¤				break;¤			case SX_4_DUMPING:¤				templ_dump->dump(get_output());¤				break;¤			case SX_4_OPEN_SCOPE:¤				templ_dump->dump_open_scope(get_output());¤				break;¤			case SX_4_CLOSE_SCOPE:¤				templ_dump->dump_close_scope(get_output());¤				break;				¤			case SX_4_FORWARD: {¤				AbstractDumperBase::CodeTemplate templ = templ_dump->get_template_body ().forward_template;		¤				AbstractDumperBase::TemplatePainter::TPArgs args;¤				args.push_back (templ_dump);¤				AbstractDumperBase::TemplatePainter tp (args, get_output(), m_main_scope);¤				AbstractDumperBase::CodeTemplate::const_iterator fwd_it = templ.begin ();¤				AbstractDumperBase::CodeTemplate::const_iterator fwd_it_end = templ.end ();¤				tp.paint (fwd_it, fwd_it_end);¤				break;¤			}¤			case SX_2_CYCLE_OPEN: {¤				it++;¤				AbstractDumperBase::TemplatePainter::TPArgs args;¤				args.push_back (templ_dump);¤				args.insert (args.end(), m_args.begin(), m_args.end());¤				AbstractDumperBase::TemplatePainter tp (args, get_output(), m_main_scope );¤				output_success |= tp.paint_cycle(it, it_end);¤				break;¤			}¤			case SX_2_IF_OPEN: {¤				it++;¤				AbstractDumperBase::TemplatePainter::TPArgs args;¤				args.push_back (templ_dump);¤				args.insert (args.end(), m_args.begin(), m_args.end());¤				AbstractDumperBase::TemplatePainter tp (args, get_output(), m_main_scope );¤				output_success |= tp.paint_if(it, it_end);				¤				break;				¤			}¤			case SX_2_USER_PROP_OPEN: {¤				std::string up_name = GCL::part (it, it_end, SX_2_USER_PROP_CLOSE);¤				if (it == it_end) {¤					char mess[128];¤					sprintf (mess, "Unclosed user propery name (started from: \"%.20s...\")\n", up_name.c_str());¤					throw FatalError (mess);¤				}¤				output() << templ_dump->get_user_property_str(up_name);¤				break;¤			}¤			case SX_4_ROOT_DIR: {¤				output() << templ_dump->get_root_dir(true);				¤				break;¤			}¤			case SX_4_CYCLE_NUM: {¤				char buf[32];¤				itoa(m_cycle_num, buf, 10);¤				output() << buf;¤				break;¤			}¤			default: {¤				char mess[128];¤				sprintf (mess, "Invalid argument at: %.20s \n", it);¤				throw FatalError (mess);¤			}¤		}¤	} else {¤		CodeTemplate::const_iterator saved_begin = it;¤		switch (*it) {¤			case SX_2_CYCLE_OPEN:¤				GCL::part (it, it_end, SX_2_CYCLE_CLOSE, SX_2_SYMBOL, SX_2_CYCLE_OPEN);¤				if (it == it_end) {¤					char mess[128];¤					sprintf (mess, "Unclosed cycle (started from: \"%.20s...\")\n", saved_begin);¤					throw FatalError (mess);¤				}¤				break;¤			case SX_2_IF_OPEN:¤				GCL::part (it, it_end, SX_2_IF_CLOSE, SX_2_SYMBOL, SX_2_IF_OPEN);¤				if (it == it_end) {¤					char mess[128];¤					sprintf (mess, "Unclosed IF-statement (started from: \"%.20s...\")\n", saved_begin);¤					throw FatalError (mess);¤				}¤				break;¤			case SX_2_USER_PROP_OPEN:¤				GCL::part (it, it_end, SX_2_USER_PROP_CLOSE, SX_2_SYMBOL, SX_2_USER_PROP_OPEN);¤				if (it == it_end) {¤					char mess[128];¤					sprintf (mess, "Unclosed user property id (started from: \"%.20s...\")\n", saved_begin);¤					throw FatalError (mess);¤				}¤				break;¤			case SX_2_ARGUMENT: ¤			{				¤				GCL::StrVector params;¤				if (*(it+1) == SX_3_FUNCTION) {¤					it++;¤					this->extract_function (it, it_end, params);					¤				} else if (*(it+1) == SX_3_TRANSFORMATOR) {¤					it++;¤					this->extract_transformer (it, it_end, params);¤				}¤				break;¤			}¤			break;			¤		}¤	}¤		¤	output_success |= pos != output().tellp();¤	return output_success;¤}¤¤const AbstractDumperBase::FunctionID AbstractDumperBase::TemplatePainter::extract_function (¤	CodeTemplate::const_iterator& it¤	, const CodeTemplate::const_iterator& it_end¤	, GCL::StrVector& params¤) {	¤	FunctionID f_id = GCL::part (it, it_end, '(');¤	¤	if (it == it_end) {¤		char mess[128];¤		sprintf (mess, "Unclosed function id (started from: \"%.20s...\")\n", f_id.c_str());¤		throw FatalError (mess);¤	}¤	std::string params_str = GCL::part (it, it_end, ')', SX_2_SYMBOL, '(');¤	¤	if (it == it_end) {¤		char mess[128];¤		sprintf (mess, "Unclosed function params (started from: \"%.20s...\")\n", params_str.c_str());¤		throw FatalError (mess);¤	}¤	¤	params = GCL::split_string_by (¤		params_str.begin()¤		, params_str.end()¤		, ','¤		, "\"("¤		, SX_2_SYMBOL¤		, "\")"		¤	);¤	/*params = GCL::split_string_by (¤		params_str.begin()¤		, params_str.end()¤		, ','¤		, '"'¤		, SX_2_SYMBOL¤	);*/¤¤	return f_id;¤}¤¤const AbstractDumperBase::TransformatorID AbstractDumperBase::TemplatePainter::extract_transformer (¤	CodeTemplate::const_iterator& it¤	, const CodeTemplate::const_iterator& it_end¤	, GCL::StrVector& params¤) {¤	TransformatorID t_id = GCL::part (it, it_end, '(');¤	if (it == it_end) {¤		char mess[128];¤		sprintf (mess, "Unclosed transformator id (started from: \"%.20s...\")\n", t_id.c_str());¤		throw FatalError (mess);¤	}¤¤	std::string params_str = GCL::part (it, it_end, ')', SX_2_SYMBOL, '(');¤	if (it == it_end) {¤		char mess[128];¤		sprintf (mess, "Unclosed transformator params (started from: \"%.20s...\")\n", params_str.c_str());¤		throw FatalError (mess);¤	}¤¤	params = GCL::split_string_by (params_str.begin(), params_str.end(), ',', '"', '\\', '"');¤¤	return t_id;¤}¤¤bool AbstractDumperBase::TemplatePainter::execute_paint (¤	CodeTemplate::const_iterator& it, ¤	const CodeTemplate::const_iterator& it_end, ¤	bool if_flag, ¤	bool cycle_flag¤) {	¤	if (if_flag && cycle_flag) {¤		throw FatalError ("Bad AbstractDumperBase::TemplatePainter::execute_paint params combination");¤	}¤¤	bool output_success = false;¤	bool end_if_parse = false;¤	bool end_cycle_parse = false;¤	//const AbstractDumperBase* if_statement_scope = m_owner;	¤	for (; it != it_end; it++ ) {¤		switch (*it) {¤			case SX_2_ARGUMENT: {¤				it++;			¤				switch (*it) {¤					case SX_3_TRANSFORMATOR: {¤						GCL::StrVector params;¤						TransformatorID t_id = this->extract_transformer (it, it_end, params);¤						¤						AbstractDumperBase::TemplatePainter tp (*this);						¤						std::string trans_rs = tp.transform (t_id, params);¤						output() << trans_rs;						¤						output_success |= (trans_rs != "");¤						break;¤					}¤					case SX_3_FUNCTION: {¤						GCL::StrVector params;¤¤						FunctionID f_id = this->extract_function (it, it_end, params);¤						¤						std::string func_rs = this->function (f_id, params);¤						output() << func_rs;						¤						output_success |= (func_rs != "");¤						break;¤					}¤					case SX_3_USER_CODE: {¤						TemplatePainter tp (*this);¤						it++;¤						assert (*it == SX_2_IF_OPEN);¤						it++;¤						output_success |= tp.paint_user_code(it, it_end);¤						break;						¤					}¤					default: {¤						const AbstractDumperBase* templ_dump = get_dumper_by_template (it);¤						output_success |= this->paint_parameter (it, it_end, templ_dump);						¤						//if_statement_scope = templ_dump;¤						break;¤					}¤				}							¤				break;¤			}¤			case SX_2_INTEND:¤				if (m_owner) {¤					output() << m_owner->get_intend_str(s_intend_shift);					¤				}¤				break;¤			case SX_2_SYMBOL: {¤				it++;¤				switch (*it) {¤					case SX_2_INTEND:¤					case SX_2_SYMBOL: ¤					case SX_2_CYCLE_OPEN:¤					case SX_2_CYCLE_CLOSE:¤					case SX_2_IF_OPEN: ¤					case SX_2_IF_CLOSE:¤					case SX_2_IFCYCLE_PARAMS_OPEN:¤					case SX_2_IFCYCLE_PARAMS_CLOSE:¤					case SX_2_ARGUMENT:¤						output() << *it;						¤						break;¤					case SX_3_NEW_STR:¤						output() << '\n';						¤						break;¤					case SX_3_TAB:¤						output() << '\t';					¤						break;¤					case 10:¤						// skip new line¤						if (*it == 13) {¤							it++;¤						}¤						break;¤					default: {¤						char* stop_str;¤						std::string hex_code (it, it+2);¤						long x = strtol (hex_code.c_str(), &stop_str, 16);¤						if (x) {¤							output() << (char)x;							¤							it++;¤						} else {¤							char mess[1024];¤							sprintf (mess, "Unknown escape character in %s", it);¤							throw FatalError (mess);							¤						}¤						break;¤					}¤				}¤				break;¤			}¤			case SX_2_IF_OPEN: {¤				TemplatePainter tp (*this);¤				it++;¤				output_success |= tp.paint_if(it, it_end);¤				break;¤			}			¤			case SX_2_IF_CLOSE :¤				end_if_parse = true;			¤				break;¤			case SX_2_CYCLE_OPEN: {¤				TemplatePainter tp (*this);¤				it++;¤				output_success |= tp.paint_cycle(it, it_end);¤				break;¤			}					¤			case SX_2_CYCLE_CLOSE :¤				end_cycle_parse = true;			¤				break;			¤			default:¤				output() << *it;				¤				break;¤			}¤		if (if_flag && end_if_parse || cycle_flag && end_cycle_parse) break;¤	}¤	//output().flush_buffer ();¤	return output_success;¤}¤¤AbstractDumperBase::TemplatePainter::OutputWrapper& AbstractDumperBase::TemplatePainter::output() {¤	return m_output;¤}¤¤std::ostream* AbstractDumperBase::TemplatePainter::get_output() const {¤	return m_output.output();¤}¤¤void AbstractDumperBase::TemplatePainter::output(std::ostream* op) {¤	m_output.output(op);¤}¤¤AbstractDumperBase::TemplatePainter::OutputWrapper::OutputWrapper (std::ostream* out, const AbstractDumperBase::TemplatePainter& tp): ¤	m_output(out)¤	, m_own_output(false) ¤	, m_owner (tp)¤{¤	//m_buffer.clear ();¤	if (!m_output) {¤		m_own_output = true;¤		m_output = new std::strstream;¤	}	¤}¤¤AbstractDumperBase::TemplatePainter::OutputWrapper::~OutputWrapper () {¤	//this->flush_buffer ();¤	if (m_own_output) delete this->output();¤}¤¤void AbstractDumperBase::TemplatePainter::OutputWrapper::output (std::ostream* out) {¤	if (out) {¤		if (m_own_output) {¤			delete m_output;			¤		}¤		m_output = out;¤	}¤	//m_buffer.clear ();¤}¤¤std::ostream* AbstractDumperBase::TemplatePainter::OutputWrapper::output() const {¤	return m_output;¤}¤¤AbstractDumperBase::TemplatePainter::OutputWrapper& ¤AbstractDumperBase::TemplatePainter::OutputWrapper::operator << (const char* str) {¤	if (GCL::contains ('\t', str)) {¤		std::string replaced_string;¤		GCL::replace_char (¤			str, replaced_string, '\t', m_owner.m_owner->get_template_body ().tab_replacer¤		);¤		*this->output() << replaced_string;¤		//m_buffer += replaced_string;¤	} else {¤		*this->output() << str;¤		//m_buffer += str;¤	}¤	/*if (m_buffer.size () > buffer_size) {¤		this->flush_buffer ();¤	}*/¤	return *this;¤}¤¤AbstractDumperBase::TemplatePainter::OutputWrapper& ¤AbstractDumperBase::TemplatePainter::OutputWrapper::operator << (const std::string& str) {¤	//Core::GDS::StopWatchEx sw ("OutputWrapper::operator << (const std::string& str)");		¤	if (GCL::contains ('\t', str.c_str ())) {¤		std::string replaced_string;¤		GCL::replace_char (¤			str, replaced_string, '\t', m_owner.m_owner->get_template_body ().tab_replacer¤		);¤		*this->output() << replaced_string;¤		//m_buffer += replaced_string;¤	} else {¤		*this->output() << str;¤		//m_buffer += str;¤	}¤	/*if (m_buffer.size () > buffer_size) {¤		this->flush_buffer ();¤	}*/¤	return *this;¤}¤¤AbstractDumperBase::TemplatePainter::OutputWrapper& ¤AbstractDumperBase::TemplatePainter::OutputWrapper::operator << (const char& c) {¤	if (c == '\t') {¤		*this->output() << m_owner.m_owner->get_template_body ().tab_replacer;¤		//m_buffer += m_owner.m_owner->get_template_body ().tab_replacer;¤	} else {¤		*this->output() << c;¤		//m_buffer += c;¤	}¤	/*if (m_buffer.size () > buffer_size) {¤		this->flush_buffer ();¤	}*/¤	return *this;¤}¤¤void AbstractDumperBase::TemplatePainter::OutputWrapper::seekp (std::streampos pos) {¤	//this->flush_buffer ();¤	this->output()->seekp(pos);¤}¤¤std::streampos AbstractDumperBase::TemplatePainter::OutputWrapper::tellp () const {¤	//(const_cast<OutputWrapper*>(this))->flush_buffer ();¤	return this->output()->tellp();¤}¤¤////////////////////////////////////////////////////////////////////////////////////////////////////////////////¤¤std::string AbstractDumperBase::create_relative_dir_name () const {¤	if (this->get_template ().main_st || this->parent() == 0) {¤		return this->create_dir_name_str ();¤	} else {¤		return this->parent()->create_relative_dir_name () + this->create_dir_name_str ();¤	}¤}¤¤std::string AbstractDumperBase::create_dir_name () const {¤	return this->get_root_dir() + this->create_relative_dir_name();¤}¤¤std::string AbstractDumperBase::create_file_name () const {	¤	TRACE ("%s\n", this->get_name_str ().data());¤	std::string fn = this->create_file_name_str ();¤	if (fn.size() > 0) {¤		if (fn[0] == '/') {¤			return fn.data() + 1;¤		} else {¤			return this->create_dir_name () + "/" + fn;¤		}¤	} else {¤		return "";¤	}¤}¤¤std::string AbstractDumperBase::create_relative_file_name () const {	¤	std::string fn = this->create_file_name_str ();¤	if (fn != "") {¤		if (fn[0] == '/') {¤			return fn.data() + 1;¤		} else {¤			std::string ret = this->create_relative_dir_name () + "/" + fn;¤			return std::string(ret.c_str() + 1); // skip first slash¤		}¤	} else {¤		return "";¤	}¤}¤¤std::string AbstractDumperBase::create_relative_file_name_with_parent () const {¤	std::string fn = this->create_file_name_str ();¤	if (fn != "") {¤		if (fn[0] == '/') {¤			return fn.data() + 1;¤		} else {¤			std::string ret = this->create_relative_dir_name () + "/" + fn;¤			return std::string(ret.c_str() + 1); // skip first slash¤		}¤	} else {¤		if (this->parent()) {¤			return this->parent()->create_relative_file_name_with_parent ();¤		} else {¤			return "";¤		}¤	}¤}¤¤std::string AbstractDumperBase::create_normolized_path (const char* target_path, const char* target_root) const {¤	std::string self_path = this->create_relative_file_name();¤	¤	GCL::StrVector self_path_s = GCL::split_string_by (self_path.data(), '/');¤	GCL::StrVector target_path_s = GCL::split_string_by (target_path, '/');¤¤	if (target_path_s.size () == 0) {¤		assert (0);¤	} ¤¤	if (self_path_s.size () == 0) {¤		self_path_s = GCL::split_string_by (this->create_relative_dir_name ().data(), '/');		¤	} else {¤		self_path_s.pop_back();¤	}¤¤	std::string self_root = this->get_root_dir();¤	if (self_root != target_root) {¤		if (self_root[0] != target_root[0]) {¤			// diff drive's volumes¤			return std::string (target_root) + "/" + target_path;¤		} else {¤			GCL::StrVector self_root_s = GCL::split_string_by (self_root.data(), '/');¤			GCL::StrVector target_root_s = GCL::split_string_by (target_root, '/');¤			¤			GCL::StrVector::iterator t_it = target_root_s.begin();¤			GCL::StrVector::iterator s_it = self_root_s.begin();¤			for (				¤				; s_it != self_root_s.end() && t_it != target_root_s.end() && *s_it == *t_it¤				; s_it++, t_it++) ¤			{¤			}¤			self_path_s.insert (self_path_s.begin(), s_it, self_root_s.end());¤			target_path_s.insert (target_path_s.begin(), t_it, target_root_s.end());¤		}¤	}¤	¤	std::string ret = "./";¤	GCL::StrVector::iterator target_it = target_path_s.begin();¤	bool difference = false;¤	for (GCL::StrVector::iterator it = self_path_s.begin(); it != self_path_s.end(); it++) {¤		if (!difference) {¤			if (target_it == target_path_s.end() || *it != *target_it) {¤				difference = true;¤			} else {¤				target_it++;¤			}¤		}¤		if (difference) {¤			ret += "../";¤		}¤	}¤	GCL::normalize(self_path_s, target_path_s, false);¤¤	ret += GCL::merge_string_and_sub_string (target_path_s, "/");¤	return ret;¤}¤¤void AbstractDumperBase::write_debug_log (const std::string& mess) const {	¤	if (s_log_file) {¤		fprintf (s_log_file, "%s\n", mess.c_str());¤	}¤}¤//#UC END# *4571A2EF02CE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A2EF02CE_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571A2EF02CE_DESTR_BODY*¤	//#UC END# *4571A2EF02CE_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A2EF02CE_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4571A2EF02CE_CUSTOM_INCLUDES*¤#include "shared/GCL/data/std_defs.h"¤#include <comutil.h>¤//#UC END# *4571A2EF02CE_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A2EF02CE*"
			    value      	(value Text 
|//#UC START# *4571A2EF02CE*¤public:¤	static void clean_up ();¤	¤public:¤	typedef std::map<std::string, std::string> GenFileMap;¤¤	class FatalError {¤	public:¤		FatalError (const std::string& mess) : m_mess(mess) {¤		}¤		std::string mess () {¤			return m_mess;¤		}¤¤		~FatalError () {¤			// clean up adb¤			//AbstractDumperBase::clean_up ();¤		}¤	private:¤		std::string m_mess;	¤	};¤	typedef std::list<const AbstractDumperBase*> ADList;¤	typedef Core::Box<ADList> ADList_box;¤	typedef Core::Aptr<ADList> ADList_aptr;¤	typedef Core::Box<ADList::iterator> ADListIt_box;¤	typedef Core::Box<AbstractDumperBase> AbstractDumper_box;¤	typedef std::vector <AbstractDumper_box> ADVector;¤¤	struct SortByUID {¤		bool operator()(const AbstractDumperBase* const x, const AbstractDumperBase* const y) const {¤			return strcmp (x->get_model_unique_id_str().data(), y->get_model_unique_id_str().data()) < 0;¤		}¤    };¤¤	struct SortByName {¤		bool operator()(const AbstractDumperBase* const x, const AbstractDumperBase* const y) const {¤			return strcmp (x->get_name_str().data(), y->get_name_str().data()) < 0;¤		}¤    };¤¤	struct SortByParentAndName {¤		bool operator()(const AbstractDumperBase* const x, const AbstractDumperBase* const y) const {¤			int pc = strcmp (x->parent()->get_name_str().data(), y->parent()->get_name_str().data());¤			return  pc ? pc < 0 : strcmp (x->get_name_str().data(), y->get_name_str().data()) < 0;¤		}¤    };¤	¤	class GenTreeItem : public virtual GCL::StaticNode {¤	public:¤		static GenTreeItem* make_copy(const GenTreeItem* source) {¤			Core::Var<GenTreeItem> ret = new GenTreeItem (source->name().data());¤			ret->m_item_desc = source->m_item_desc;¤			ret->m_item_props = source->m_item_props;¤			return ret._retn();¤		}¤¤		GenTreeItem (const char* name): m_item_name (name) {¤		}¤		¤		const std::string& name () const {¤			return m_item_name;¤		}¤		¤		void description (const std::string& desc) {¤			m_item_desc = desc;¤		}¤		¤		const std::string& description () const {¤			return m_item_desc;¤		}¤		¤		void set_property (const std::string& prop_id, const std::string& prop_value) {¤			m_item_props[prop_id] = prop_value;¤		}¤¤		bool get_property (const std::string& prop_id, std::string& ret_value) const {¤			std::map<std::string, std::string>::const_iterator f = m_item_props.find (prop_id);¤			if (f != m_item_props.end()) {¤				ret_value = f->second;¤				return true;¤			} else {¤				return false;¤			}¤		}¤¤	private:¤		std::string m_item_name;¤		std::string m_item_desc;¤		std::map<std::string, std::string> m_item_props;¤	};¤¤	typedef Core::Var<GenTreeItem> GeneratorTree;¤	typedef std::map<GenID, GenTreeItem*> GenInfos;¤¤	typedef Core::Var<ReportsTreeItem> ReportsTree;¤¤	typedef std::string ReportID;¤	typedef std::map<ReportID, ReportsTreeItem*> ReportInfos;¤	//////////////  end of reports tree¤	¤	typedef std::string CodeTemplate;¤	typedef std::string FileTemplate;¤	typedef std::string UserCode;¤	struct TemplateBody {¤		TemplateBody ();¤¤		void reset () {¤			code_template = "";¤		}¤¤	public:¤		CodeTemplate code_template;¤		CodeTemplate open_scope_template;¤		CodeTemplate close_scope_template;¤		CodeTemplate forward_template;¤		FileTemplate file_template;¤		FileTemplate dir_template;¤		FileTemplate post_command_template;¤		CodeTemplate generator_info;¤		bool plain;¤		bool file_create;¤		bool user_file;¤		std::string tab_replacer;¤		CodeTemplate user_code_open_start_id;¤		CodeTemplate user_code_close_start_id;¤		CodeTemplate user_code_open_end_id;¤		CodeTemplate user_code_close_end_id;¤		bool user_code_unique;¤		bool use_current_root;¤	};¤	¤	enum UserPropertyType {¤		UPT_STRING¤		, UPT_BOOL¤		, UPT_LIST¤	};¤	¤	struct UserPropertyDef {¤		UserPropertyType type;¤		std::string def_value;¤		GCL::StrVector value_list;¤		std::string description;¤	};¤	¤	typedef std::map<std::string, UserPropertyDef> UserPoperty_map;¤	¤	typedef std::map<GenID, TemplateBody> GT_map;¤¤	typedef std::string FunctionTemplate;¤	typedef std::string FunctionID;¤	typedef std::map<FunctionID, FunctionTemplate> Functions;	¤¤	typedef std::string TransformatorTemplate;¤	typedef std::string TransformatorID;¤	typedef std::string ColumnID;¤	typedef std::map<ColumnID, TransformatorTemplate> TransformatorRow;	¤	struct TransformatorBody {¤		std::string row_exp;¤		TransformatorRow row;¤	};¤	typedef std::list<TransformatorBody> TransformatorBodyList;	¤	struct Transformator {¤		//std::string column_exp;¤		std::string name;¤		TransformatorBodyList rows;¤	};¤	typedef std::map<TransformatorID, Transformator> Transformators;¤	¤	enum ConsraintType {¤		CSCT_UNDEFINED¤		, CSCT_INCLUDED¤		, CSCT_EXCLUDED¤	};¤	¤	#define ATF_ABSTRACT 1¤	#define ATF_REGULAR  2¤	#define ATF_FINAL    4¤//	#define ATF_INLINE   8¤¤	#define VTF_PUBLIC    1¤	#define VTF_PROTECTED 2¤	#define VTF_PRIVATE   4¤	#define VTF_IMPL      8¤¤	#define LTF_AGR    1¤	#define LTF_REF    2¤	#define LTF_LNK    4¤¤	enum IconViewType {¤		IVT_ICON¤		, IVT_DECOR¤		, IVT_NONE¤		, IVT_ST¤	};¤¤	struct Template {¤		Template ();¤¤		Template& operator = (const Template& t);¤¤	public:¤		char abstraction_type;¤		std::string def_abstraction_type;¤		char visability_type;¤		std::string def_visability_type;¤		char link_type;¤		std::string def_link_type;¤¤		std::string st_description_header;¤		std::string st_description;¤		bool allow_empty_target;¤		bool forbiden_forward_decl;¤		bool skiped_item;¤		GT_map generators;¤		Functions functions;¤		Transformators transformators;¤		UserPoperty_map user_properties;¤		GCL::StrVector available_target_stereotypes;¤		GCL::StrSet parent_visability;¤		char implementation_type;¤		bool parameterization_type;¤		bool has_derived_impl;¤		ConsraintType child_st_constarint_type;¤		GCL::StrSet child_st_constarints;¤		bool main_st;¤		bool has_set_except;¤		bool has_get_except;¤¤		bool clrz_suppres_operation;¤		IconViewType clrz_iconic_view;¤		bool clrz_suppres_atribute;¤		std::vector<unsigned char> clrz_fill_color;¤		std::vector<unsigned char> clrz_line_color;¤		std::vector<unsigned char> clrz_font_color;¤		std::vector<unsigned char> clrz_forien_line_color;¤		std::vector<unsigned char> clrz_forien_font_color;¤¤		std::string classtype_name;¤		std::string stereotype_name;¤	};¤¤	typedef std::string StereotypeID;¤	typedef std::map<StereotypeID, Template> Templates;¤¤	typedef std::string UserCodeId;¤	struct UserCodeData {¤		UserCode uc;¤		bool used;¤		UserCodeData () : used(false) {¤		}¤	};¤	typedef std::map<UserCodeId, UserCodeData> UserCode_map;¤	typedef std::map<GenID, UserCode_map> UserCode_map_mapGenId;¤				¤	class TemplatePainter {		¤	public:¤		typedef std::vector<const AbstractDumperBase*> TPArgs;¤		class OutputWrapper {¤			friend TemplatePainter;¤		public:¤			OutputWrapper (std::ostream* out, const TemplatePainter& owner);¤			virtual ~OutputWrapper ();¤			void output (std::ostream* out);¤			OutputWrapper& operator << (const char* str);¤			OutputWrapper& operator << (const std::string& str);¤			OutputWrapper& operator << (const char& str);¤			void seekp (std::streampos pos);¤			std::streampos tellp () const;¤			/*void flush_buffer () {¤				*this->output () << m_buffer;¤				m_buffer.clear ();¤			}*/¤		protected:¤			std::ostream* output() const;¤		private:¤			std::ostream* m_output;¤			bool m_own_output;¤			const TemplatePainter& m_owner;¤			//std::string m_buffer;¤			//static const unsigned long buffer_size = 1024;¤		};¤		friend OutputWrapper;¤¤	public:¤		static std::string resolve_exp (const CodeTemplate& exp, const TPArgs& args, const AbstractDumperBase* main_scope);¤		static std::string resolve_exp (const CodeTemplate& exp, const TemplatePainter* base);¤		static bool resolve_cond (const CodeTemplate& exp, const TPArgs& args, const AbstractDumperBase* main_scope);¤		static bool resolve_cond (const CodeTemplate& exp, const TemplatePainter* base);		¤¤	public:		¤		TemplatePainter (const TPArgs& owner, std::ostream* output, const AbstractDumperBase* main_scope);¤		TemplatePainter (const TemplatePainter& base);¤		~TemplatePainter ();¤¤		bool paint (CodeTemplate::const_iterator& it, const CodeTemplate::const_iterator& it_end);¤		bool paint_if (CodeTemplate::const_iterator& it, const CodeTemplate::const_iterator& it_end);¤		bool paint_cycle (CodeTemplate::const_iterator& it, const CodeTemplate::const_iterator& it_end);¤		bool paint_user_code (CodeTemplate::const_iterator& it, const CodeTemplate::const_iterator& it_end);¤		std::string transform (const std::string& t_id, const GCL::StrVector& params);¤		std::string function (const std::string& f_id, const GCL::StrVector& params);¤		¤		std::string st_transform (const TransformatorID& t_id, const GCL::StrVector& params, const AbstractDumperBase* context);¤		std::string st_function (const FunctionID& f_id, const GCL::StrVector& params, const AbstractDumperBase* context);¤¤		std::string resolve_function (const FunctionTemplate& f_tpl, const GCL::StrVector& params, const AbstractDumperBase* context);¤		std::string resolve_transform (const Transformator& transf, const GCL::StrVector& params, const AbstractDumperBase* context);¤¤		const FunctionID TemplatePainter::extract_function (¤			CodeTemplate::const_iterator& it¤			, const CodeTemplate::const_iterator& it_end¤			, GCL::StrVector& params¤		);¤¤		const TransformatorID TemplatePainter::extract_transformer (¤			CodeTemplate::const_iterator& it¤			, const CodeTemplate::const_iterator& it_end¤			, GCL::StrVector& params¤		);¤¤	protected:¤		const AbstractDumperBase* setup_iterator (ADListIt_box& it_begin, ADList::iterator& it_end);¤		bool sort (ADList_box& ad_list);¤		bool execute_paint (¤			CodeTemplate::const_iterator& it¤			, const CodeTemplate::const_iterator& it_end¤			, bool if_flag¤			, bool cycle_flag¤		);		¤		OutputWrapper& output();¤		std::ostream* get_output() const;¤		void output(std::ostream* op);¤		const AbstractDumperBase* get_dumper_by_template (CodeTemplate::const_iterator& it);¤		bool paint_parameter (¤			CodeTemplate::const_iterator& it¤			, const CodeTemplate::const_iterator& it_end¤			, const AbstractDumperBase* templ_dump¤		);¤	private:¤		static bool resolve_cond_ex (¤			const CodeTemplate& exp¤			, const TPArgs& args¤			, const AbstractDumperBase* main_scope¤			, const TemplatePainter* base¤		);	¤¤	private:		¤		TPArgs m_args;¤		OutputWrapper m_output;¤		bool m_is_reversed_cycle;¤		char m_sorting_type;¤		Core::Box<bool> m_sort_processed;¤		const AbstractDumperBase* m_owner;¤		const AbstractDumperBase* m_main_scope;		¤		unsigned m_cycle_num;¤¤		struct PainterADData {¤		protected:¤			PainterADData () {				¤			};¤			~PainterADData () {				¤			};¤		public:¤			static inline PainterADData* make () {¤				//Core::GDS::StopWatchEx sw ("PainterADData::PainterADData ()");¤				PainterADData* tmp = new PainterADData ();¤				return tmp;¤			}¤			struct PainterADDataDestructor {¤				static inline void destroy (PainterADData* t) {¤					//Core::GDS::StopWatchEx sw ("PainterADData::~PainterADData ()");¤					delete t;¤				}¤			};¤			typedef std::pair<ADList_box, ADListIt_box> DataPair;¤			typedef std::map<char, DataPair> DataMap;¤			DataMap m_data_map;			¤		};¤		Core::Box<PainterADData, PainterADData::PainterADDataDestructor> m_data;¤		¤		ADListIt_box m_save_cycle_it;¤		Core::Box<ADListIt_box> m_cycle_it;¤		ADListIt_box m_cycle_end;	¤	};¤¤	struct FileDesc {¤		FILE* file;¤		std::string name;¤	};¤	¤	struct Options {¤		bool suppress_user_code;¤		bool rewrite_user_code;¤		bool cancel_generations;¤		bool dis_auto_count;¤		bool disable_post_processing;¤		Options () ¤			: suppress_user_code(false)¤			, rewrite_user_code(false)¤			, cancel_generations(false)¤			, dis_auto_count(false)¤			, disable_post_processing(false)¤		{¤		}¤	};¤¤public:¤	static bool is_it_registred (const StereotypeID& st);¤	static bool has_template (const StereotypeID& st);¤	static void add_active_map (const GenID& gen_id);¤	static void clean_active_map ();¤	static void load_templates (const FileDesc& in_file);¤	static void get_gen_ids (GCL::StrSet& ret);¤	static void has_error (bool error = true);¤	static bool is_has_error ();¤	static GCL::StrSet& exception_stereotypes();¤	static bool is_stereotype_exception (const std::string& stereotype);¤	// доступ к темплейтам¤	static Template& get_template (const StereotypeID& st);¤	static Templates::const_iterator templates_begin ();¤	static const Templates::const_iterator templates_end ();¤	// доступ к UC¤	static UserCode_map_mapGenId::const_iterator uc_begin ();¤	static const UserCode_map_mapGenId::const_iterator uc_end ();¤¤private:¤	static void load_template_file (const FileDesc& in_file, StereotypeID cur_stereotype = "", GenID cur_gen_id = "");¤¤public:¤	static GCL::StrSet s_active_map;¤	static GenID s_current_map;¤	static Options s_options;¤	static FILE* s_log_file;¤	¤	static GenInfos s_gen_infos;¤	static GeneratorTree s_gen_tree;¤	static ReportInfos s_report_infos;¤	static ReportsTree s_reports_tree;¤¤	static const AbstractDumperBase* s_gen_root_element; // element from wich generation was started¤	static const AbstractDumperBase* s_model_main_element; // element on model marked as MAIN¤¤	typedef std::map <_bstr_t, std::string> RoseStereotypeMap;¤	static RoseStereotypeMap s_stereotypes; //cache of result create_gen_stereotype¤private:¤	static Templates s_templates;¤	static Transformators s_transformators;¤	static Functions s_functions;¤	static UserCode_map_mapGenId s_user_code;¤	static GCL::StrSet s_exception_stereotypes;¤	static bool s_has_error;¤	static short s_intend_shift;¤	static bool s_shift_scope; //нужно ли сдвинуть scope на один уровень¤¤public:¤	virtual bool operator == (const AbstractDumperBase& c) const = 0;¤¤	std::string resolve_expression (const std::string& exp) const;¤	virtual void write_template_error_log (const char* log) const = 0;¤	virtual void write_template_warning_log (const char* log) const = 0;¤	virtual const AbstractDumperBase* parent() const = 0;¤	virtual std::string get_name_str () const = 0;¤	virtual const AbstractDumperBase* get_target () const = 0;¤	virtual const AbstractDumperBase* get_main_element () const {¤		return s_gen_root_element;¤	}¤¤	virtual bool am_i_registred () const = 0;¤	virtual bool has_registred_parent () const = 0;¤	virtual std::ostream* get_output () const = 0;¤¤	typedef GCL::StrSet Selections;¤	virtual Selections get_applied_gens () const = 0;¤	¤public:¤	const Template& get_template () const;¤	const TemplateBody& get_template_body () const;¤¤¤	typedef std::map<std::string, unsigned long> Counters;¤	static Counters s_counters_value;¤	mutable Counters m_counters;¤¤	std::string element_counter (const std::string& counter_id) const {¤		unsigned long ret = 0;¤		Counters::iterator f = m_counters.find(counter_id);¤		if (f != m_counters.end()) {¤			ret = f->second;¤		} else {		¤			f = s_counters_value.find(counter_id);¤			if (f != s_counters_value.end()) {¤				f->second++;			¤				m_counters[counter_id] = f->second;¤				ret = f->second;¤			} else {¤				s_counters_value[counter_id] = 0;¤				m_counters[counter_id] = 0;				¤			}¤		}¤		char buf [32];¤		return itoa (ret, buf, 10);¤	}¤¤//protected:	¤¤	virtual ADList* get_generalizations () const = 0;¤	virtual ADList* get_realizations() const = 0;¤	virtual ADList* get_nested_generalizations () const = 0;¤	virtual ADList* get_nested_realizations() const = 0;¤¤	virtual ADList* get_nested_botom_consumers () const = 0;	¤	virtual ADList* get_all_consumers () const = 0;	¤	virtual ADList* get_requrcive_all_consumers () const = 0;	¤	virtual ADList* get_nested_top_suppliers () const = 0;	¤	virtual ADList* get_forwarded() const = 0;¤	virtual ADList* get_nsf_forwarded() const = 0;¤	virtual ADList* get_sequences() const = 0;¤	virtual ADList* get_get_exceptions() const = 0;¤	virtual ADList* get_set_exceptions() const = 0;¤	virtual ADList* get_parents() const = 0;¤	virtual ADList* get_contents () const = 0;¤	virtual ADList* get_all_contents() const = 0;¤	virtual ADList* get_includes () const = 0;¤	virtual ADList* get_all_includes () const = 0;¤	virtual ADList* get_nsf_includes () const = 0;¤	virtual ADList get_diagrams() const = 0;¤	virtual ADList* get_derived_impl() const = 0;¤	virtual ADList* get_derived_over() const = 0;¤	¤	virtual ADList* get_dependences() const = 0; // get all dependence target¤	virtual ADList* get_reqursive_dependences() const = 0; // get all dependence target¤	virtual ADList* get_realizator() const = 0; // get all realization source¤	virtual ADList* get_generalizator() const = 0; // get all generalization source¤	virtual ADList* get_req_realizator() const = 0; // get all realization source (requrcive)¤	virtual ADList* get_req_generalizator() const = 0; // get all generalization source (requrcive)¤	virtual ADList* get_source () const = 0; // get all attribute source¤¤	virtual const std::string& get_model_unique_id_str() const = 0;¤	virtual std::string get_guid_str() const = 0;¤	virtual std::string get_model_class_str() const = 0;¤	virtual std::string get_model_stereotype_str() const = 0;¤	virtual std::string get_documentation_str () const = 0;¤	virtual std::string get_initial_value_str () const = 0;¤	virtual std::string get_visability_str () const = 0;¤	virtual std::string get_intend_str (short intend_shift) const = 0;¤	virtual std::string get_stereotype_str () const = 0;¤	virtual std::string get_type_fixed_size_str () const = 0;¤	virtual std::string get_abstract_str() const = 0;¤	virtual std::string get_class_kind_str() const = 0;¤	virtual std::string get_link_type_str () const = 0;¤	virtual std::string get_user_property_str (const std::string& prop_name) const = 0;¤	virtual std::string get_root_dir (bool direct_get = false) const = 0;¤	virtual std::string get_auto_counter_str () const = 0;¤	virtual std::string get_target_stereotype_str() const = 0;¤	virtual std::string get_native_path_str() const = 0;¤	¤	virtual bool is_native (bool &wilth_parent) const {¤		wilth_parent = false;¤		return false;¤	}¤	virtual std::string get_post_command_str () const;¤	virtual std::string create_file_name_str () const;¤	virtual std::string get_generator_info_str () const;¤	virtual std::string create_dir_name_str () const;¤	¤	virtual bool own_output () const = 0; ¤	virtual void add_user_code (const GenID& gen_id, const UserCodeId& uc_id, const UserCode& uc) const = 0;¤	virtual UserCode get_user_code (const GenID& gen_id, const UserCodeId& uc_id) const = 0;¤¤	bool accepted_generator() const;¤¤protected:¤	struct AcceptedGenKey {¤		const AbstractDumperBase* adb;¤		std::string gen_id;¤		¤		AcceptedGenKey (const AcceptedGenKey& c) : adb (c.adb), gen_id(c.gen_id) {¤		}¤		AcceptedGenKey (const AbstractDumperBase* _adb, const std::string& _gen_id) : adb (_adb), gen_id(_gen_id) {¤		}¤¤		bool operator < (const AcceptedGenKey& c) const {¤			return adb == c.adb ? gen_id < c.gen_id : adb < c.adb;¤		}¤	};¤¤	typedef std::map<AcceptedGenKey, bool> AcceptedGenMap;¤¤	static AcceptedGenMap s_accepted_gens;¤¤	friend TemplatePainter;	¤¤	std::string create_relative_dir_name () const;¤	std::string create_scoped_dir_name (const AbstractDumperBase* main_scope) const;¤	std::string create_normolized_path (const char* target_path, const char* target_root) const;¤	std::string create_relative_file_name () const;¤	std::string create_relative_file_name_with_parent () const;¤	virtual std::string create_file_name() const;¤	virtual void dump (std::ostream* output = NULL) const;¤	virtual std::string create_dir_name () const;¤	virtual bool dump_open_scope (std::ostream* output) const;¤	virtual bool dump_close_scope (std::ostream* output) const; ¤¤protected:¤	void load_user_code (FILE* in_file) const;¤	bool is_forbiden_forward_dcl () const;¤	bool is_plain () const;¤	bool is_allow_empty_target() const;¤	bool is_parent_visability_stereotype (const std::string& st) const;¤	ADList* get_scopes(const AbstractDumperBase* main_scope) const;¤	void write_debug_log (const std::string& mess) const;¤//#UC END# *4571A2EF02CE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"NESTED GENERATED FILES (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase_ReportsTreeItem.cpp::458E8E730132"))
		    quid       	"4571A2EF02CE"
		    stereotype 	"SimpleClass"
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571A3DB0148"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::SyntaxDef"
			    quidu      	"4571A3B70109"))
		    operations 	(list Operations
			(object Operation "get_self_generated_source"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459D2DA9011E*"
				    value      	(value Text 
|//#UC START# *459D2DA9011E*¤	return 0;¤	//#UC END# *459D2DA9011E*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459D2DA9011E_4571D1A5009C*"
				    value      	(value Text 
|//#UC START# *459D2DA9011E_4571D1A5009C*¤	AbstractDumperBase::GenSourceInfo* ret = 0;¤	if (m_rose_item != 0) {¤		ret = new AbstractDumperBase::GenSourceInfo;¤		std::string prop_id = "SELF GENERATED FILE (" + AbstractDumperBase::s_current_map + ")";¤		ret->source.file_name ((const char*)m_rose_item->GetPropertyValue (TOOL_NAME, prop_id.data()));¤		ret->gen_id = AbstractDumperBase::s_current_map;¤	}¤	return ret;¤	//#UC END# *459D2DA9011E_4571D1A5009C*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459D2DA9011E_4571A32201A5*"
				    value      	(value Text 
|//#UC START# *459D2DA9011E_4571A32201A5*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *459D2DA9011E_4571A32201A5*
				    )))
			    quid       	"459D2DA9011E"
			    documentation 	"возвращает информацию о ранее сгенерированном файле"
			    result     	"GenSourceInfo"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"45C9F2340119")
			(object Operation "get_deleted_child_generated_source"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459D2DD40228*"
				    value      	(value Text 
|//#UC START# *459D2DD40228*¤	return 0;¤	//#UC END# *459D2DD40228*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459D2DD40228_4571D1A5009C*"
				    value      	(value Text 
|//#UC START# *459D2DD40228_4571D1A5009C*¤	AbstractDumperBase::GenSourceInfoSet* ret = 0;¤	¤	if (m_rose_item != 0) {¤		ret = new AbstractDumperBase::GenSourceInfoSet;¤¤		std::string prop_id = "NESTED GENERATED FILES (" + AbstractDumperBase::s_current_map + ")";¤		std::string value = (const char*)m_rose_item->GetPropertyValue (TOOL_NAME, prop_id.data());¤		if (value != "") {¤			GCL::StrVector ngfs = GCL::split_string_by (value.data(), ',');¤¤			for (GCL::StrVector::iterator it = ngfs.begin(); it != ngfs.end(); it++) {¤				GCL::StrVector parts = GCL::split_string_by_sub_string (it->data(), "::");¤				if (parts.size() == 2) {¤					IRoseItemPtr item = RoseHelper::rose_app()->CurrentModel->FindItemWithID (parts[1].data());¤					if (item == 0 || (item->GetContext()->GetUniqueID() != m_rose_item->GetUniqueID())) {¤						AbstractDumperBase::GenSourceInfo srs;¤						srs.source.file_name(parts[0]);¤						srs.gen_id = s_current_map;¤						ret->insert(srs);¤					}¤				} else {¤					assert (0);¤				}¤			}¤		}¤	}¤	return ret;¤	//#UC END# *459D2DD40228_4571D1A5009C*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459D2DD40228_4571A32201A5*"
				    value      	(value Text 
|//#UC START# *459D2DD40228_4571A32201A5*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *459D2DD40228_4571A32201A5*
				    )))
			    quid       	"459D2DD40228"
			    documentation 	
|возвращает информацию об тех файлах которые были сгенерированны 
|ранее, а теперь "исчезли" из списка генерации. Т.е. о тех файлы, 
|который фактически удалились из репазитария
			    
			    result     	"GenSourceInfoSet"
			    concurrency 	"Sequential"
			    opExportControl 	"Protected"
			    uid        	0
			    quidu      	"459D2D5B03DD")
			(object Operation "set_self_generated_source"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9F5490109_4571A32201A5*"
				    value      	(value Text 
|//#UC START# *45C9F5490109_4571A32201A5*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *45C9F5490109_4571A32201A5*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9F5490109_4571D1A5009C*"
				    value      	(value Text 
|//#UC START# *45C9F5490109_4571D1A5009C*¤	std::string prop_id = "SELF GENERATED FILE (" + src.gen_id + ")";¤	RoseHelper::override_property (m_rose_item, TOOL_NAME, prop_id.data(), src.source.file_name ().data());¤	¤	// update parents info¤	prop_id = "NESTED GENERATED FILES (" + src.gen_id + ")";¤	_bstr_t root_uid = RoseHelper::rose_app()->CurrentModel->RootCategory->GetUniqueID();¤¤	IRoseItemPtr child = m_rose_item;¤	IRoseItemPtr par = m_rose_item->GetContext();¤	while (par && par->GetUniqueID() != root_uid) {¤		std::string value = (const char*)par->GetPropertyValue (TOOL_NAME, prop_id.data());¤		¤		GCL::StrSet files;¤		GCL::split_string_by (value.data(), ',', files);¤¤		value = src.source.file_name() + "::";¤		value += child->GetUniqueID ();¤		files.insert (value);¤		¤		RoseHelper::override_property (par, TOOL_NAME, prop_id.data(), GCL::merge_string_and_sub_string (files, ",").data());¤¤		child = par;¤		par = par->GetContext();¤	}¤	//#UC END# *45C9F5490109_4571D1A5009C*
				    )))
			    quid       	"45C9F5490109"
			    documentation 	"записывает на модели информацию о сггенерированном файле"
			    parameters 	(list Parameters
				(object Parameter "src"
				    quid       	"45C9F6E40222"
				    type       	"GenSourceInfo"
				    quidu      	"45C9F2340119"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "remove_generated_source"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9F5AE03B9_4571A32201A5*"
				    value      	(value Text 
|//#UC START# *45C9F5AE03B9_4571A32201A5*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *45C9F5AE03B9_4571A32201A5*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9F5AE03B9_4571D1A5009C*"
				    value      	(value Text 
|//#UC START# *45C9F5AE03B9_4571D1A5009C*¤	std::string prop_id = "SELF GENERATED FILE (" + src.gen_id + ")";¤	if (src.source.file_name() == (const char*)m_rose_item->GetPropertyValue (TOOL_NAME, prop_id.data())) {¤		RoseHelper::override_property (m_rose_item, TOOL_NAME, prop_id.data(), "");¤	}¤¤	// update parents info¤	prop_id = "NESTED GENERATED FILES (" + src.gen_id + ")";¤	_bstr_t root_uid = RoseHelper::rose_app()->CurrentModel->RootCategory->GetUniqueID();¤¤	IRoseItemPtr par = m_rose_item;¤	while (par) {¤		std::string value = (const char*)par->GetPropertyValue (TOOL_NAME, prop_id.data());¤		¤		GCL::StrSet files;¤		GCL::StrSet updated_files;¤		GCL::split_string_by (value.data(), ',', files);¤¤		for (GCL::StrSet::iterator it = files.begin(); it != files.end(); it++) {¤			GCL::StrVector parts = GCL::split_string_by_sub_string (it->data(), "::");¤			if (parts[0] != src.source.file_name()) {¤				updated_files.insert (*it);¤			}¤		}¤¤		RoseHelper::override_property (par, TOOL_NAME, prop_id.data(), GCL::merge_string_and_sub_string (updated_files, ",").data());¤¤		par = par->GetContext();¤		if (par && par->GetUniqueID() == root_uid) {¤			par = 0;¤		}¤	}¤	//#UC END# *45C9F5AE03B9_4571D1A5009C*
				    )))
			    quid       	"45C9F5AE03B9"
			    parameters 	(list Parameters
				(object Parameter "src"
				    quid       	"45C9F5DA03B9"
				    type       	"GenSourceInfo"
				    quidu      	"45C9F2340119"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "run_post_command"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9F5EB003E*"
				    value      	(value Text 
|//#UC START# *45C9F5EB003E*¤	std::string pc = this->get_post_command_str();¤	¤	if (pc == "") {¤		return;¤	}¤	std::string root_dir = this->get_root_dir();¤	¤	HANDLE hChildStdoutRd;¤	HANDLE hChildStdoutWr;¤¤	SECURITY_ATTRIBUTES saAttr;  ¤	// Set the bInheritHandle flag so pipe handles are inherited. ¤ ¤	saAttr.nLength = sizeof(SECURITY_ATTRIBUTES);¤	saAttr.bInheritHandle = TRUE;¤	saAttr.lpSecurityDescriptor = NULL; ¤¤	// Get the handle to the current STDOUT. ¤		 ¤	// Create a pipe for the child process's STDOUT. ¤	 ¤	if (!CreatePipe(&hChildStdoutRd, &hChildStdoutWr, &saAttr, 0)) {¤		MessageBox(NULL, "Stdout pipe creation failed\n", "Error", MB_OK);¤	} else {¤		// Ensure the read handle to the pipe for STDOUT is not inherited.¤		SetHandleInformation( hChildStdoutRd, HANDLE_FLAG_INHERIT, 0);¤¤		STARTUPINFO si;¤		PROCESS_INFORMATION pi;¤¤		ZeroMemory( &si, sizeof(si) );¤		ZeroMemory( &pi, sizeof(pi) );¤		si.cb = sizeof(STARTUPINFO);¤		si.hStdError = hChildStdoutWr;¤		si.hStdOutput = hChildStdoutWr;¤		si.dwFlags |= STARTF_USESTDHANDLES;¤¤		if (CreateProcess (¤			0¤			, (char*) pc.data()¤			, NULL¤			, NULL¤			, true¤			, 0¤			, NULL¤			, root_dir.data()¤			, &si¤			, &pi¤		)) {¤			CloseHandle(pi.hThread);¤¤			if (WaitForSingleObject(pi.hProcess, INFINITE) == WAIT_FAILED) {¤				TerminateProcess(pi.hProcess, WAIT_FAILED);¤			}¤¤			DWORD dwRead = 0; ¤			CHAR chBuf[512] = {0}; ¤¤			// Close the write end of the pipe before reading from the ¤			// read end of the pipe. ¤¤			if (!CloseHandle(hChildStdoutWr)) {¤				MessageBox(NULL, "Closing handle failed", "Error", MB_OK);¤			}¤¤			// Read output from the child process, and write to parent's STDOUT.¤			pc += ":\r\n";¤			std::string console_output;¤			//RoseHelper::write_info_log (pc.data ());¤			while (¤				ReadFile( hChildStdoutRd, chBuf, 512, &dwRead, NULL) ¤				&& dwRead != 0¤			) {¤				//RoseHelper::write_info_log (chBuf);¤				pc += chBuf;¤			} ¤			DWORD exit_code = 0;¤			if (GetExitCodeProcess (pi.hProcess, &exit_code)) {¤				if (exit_code == 0) {¤					RoseHelper::write_info_log (pc.data ());¤					//RoseHelper::write_info_log (console_output.data ());¤				} else {¤					RoseHelper::write_error_log (pc.data ());¤					//RoseHelper::write_error_log (console_output.data ());¤				}¤			}¤			CloseHandle(pi.hProcess);¤		} else {¤			CHAR szBuf[512]; ¤			DWORD dw = GetLastError(); ¤			 ¤			sprintf(szBuf, "\"%s\" is failed: GetLastError returned %u\n", pc.data(), dw);¤			 ¤			MessageBox(NULL, szBuf, "Error", MB_OK); ¤		}¤	}¤	//#UC END# *45C9F5EB003E*
				    )))
			    quid       	"45C9F5EB003E"
			    documentation 	"Вызывает внешний обработчик измененного файла"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0))
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "ReportsTreeItem"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need assign op"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need copy ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need ref count"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need unsorted less"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"debug log"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"ifdef"
				    value      	"")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"local supervisor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need UC"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"no base class"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"non virtual base"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"singleton"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"SELF GENERATED FILE (cpp)"
				    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractDumperBase_ReportsTreeItem.cpp")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*458E8E730132_CUSTOM_INCLUDES*"
				    value      	"//#UC START# *458E8E730132_CUSTOM_INCLUDES*¤//#UC END# *458E8E730132_CUSTOM_INCLUDES*")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*458E8E730132*"
				    value      	"//#UC START# *458E8E730132*¤//#UC END# *458E8E730132*")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*458E8E730132_DESTR_BODY*"
				    value      	(value Text 
|//#UC START# *458E8E730132_DESTR_BODY*¤	//#UC END# *458E8E730132_DESTR_BODY*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"h:*458E8E730132*"
				    value      	(value Text 
|//#UC START# *458E8E730132*¤	public:¤		struct ViewData {¤			ViewData (const std::string& name_, const std::string& exp, unsigned len) : name (name_), expression(exp), view_length(len) {¤			}¤			std::string name;¤			std::string expression;¤			unsigned view_length;¤		};¤¤		typedef std::vector<ViewData> Views;¤¤	public:¤		ReportsTreeItem (const char* name): m_item_name (name) {¤		}¤		¤		const std::string& name () const {¤			return m_item_name;¤		}¤		¤		void query (const std::string& q) {¤			m_query = q;¤		}¤		¤		const std::string& query () const {¤			return m_query;¤		}¤		¤		void set_view (const std::string& view_name, const std::string& view_value, unsigned len) {¤			m_views.push_back (ViewData (view_name, view_value, len));¤		}¤¤		const Views& get_views () const{¤			return m_views;¤		}¤¤		void set_auto (const std::string& auto_type) {¤			m_auto = auto_type;¤		}¤¤		const std::string& get_auto () const {¤			return m_auto;¤		}¤¤	private:¤		std::string m_item_name;¤		std::string m_query;¤		std::string m_auto;¤¤		Views m_views;¤	//#UC END# *458E8E730132*
				    )))
			    quid       	"458E8E730132"
			    stereotype 	"SimpleClass"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"458E8EC50306"
				    supplier   	"Logical View::shared::GCL::data::StaticNode"
				    quidu      	"4501367B01C5")))
			(object Class "GenSource"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need less"
				    value      	"true"))
			    quid       	"45964ACF0156"
			    documentation 	"Источник в который происходит генерация. Может быть фалом или каким-либюо другим внешним источником."
			    stereotype 	"Union"
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "file_name"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45964BB40202"
				    type       	"a-string"
				    quidu      	"452257A0036F"
				    initv      	"GST_FILE"
				    exportControl 	"Public"
				    Containment 	"By Value")
				(object ClassAttribute "wiki_page"
				    quid       	"45964BF00147"
				    type       	"Contents::Page"
				    initv      	"GST_WIKI"
				    exportControl 	"Public")))
			(object Class "GenSourceType"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45964B3E0399"
			    documentation 	"Типы источников генерации"
			    stereotype 	"Enum"
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "GST_FILE"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45964B600241"
				    documentation 	"Обычный внешний файл"
				    exportControl 	"Public"
				    Containment 	"By Value")
				(object ClassAttribute "GST_WIKI"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45964B7C01F3"
				    documentation 	"Внешний wiki-server"
				    exportControl 	"Public"
				    Containment 	"By Value")))
			(object Class "GenSourceInfoSet"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"459D2D5B03DD"
			    stereotype 	"Set")
			(object Class "GenID"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45C9EF3F01D4"
			    documentation 	"Идентификатор генератора"
			    stereotype 	"Typedef"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"45C9F1F402FD"
				    supplier   	"Logical View::Primitives::a-string"
				    quidu      	"452257A0036F")))
			(object Class "GenSourceInfo"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need assign op"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need copy ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need init ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need UC"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need dctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45C9F2340119_459D2DA9011E_LESS*"
				    value      	(value Text 
|//#UC START# *45C9F2340119_459D2DA9011E_LESS*¤	return source < y.source;¤	//#UC END# *45C9F2340119_459D2DA9011E_LESS*
				    )))
			    quid       	"45C9F2340119"
			    stereotype 	"Struct")))
		(object Class "AbstractSingleDumperBase"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A32201A5_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571A32201A5_CUSTOM_INCLUDES*¤//#UC END# *4571A32201A5_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A32201A5*"
			    value      	(value Text 
|//#UC START# *4571A32201A5*¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_nested_top_suppliers () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_nested_botom_consumers () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_all_consumers () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_requrcive_all_consumers () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_dependences () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_reqursive_dependences () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_source () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_generalizator () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_req_generalizator () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_generalizations () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_realizations() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_nested_generalizations () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_nested_realizations() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_realizator () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_req_realizator () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_forwarded() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_nsf_forwarded() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList AbstractSingleDumperBase::get_diagrams() const {¤	ADList ret;¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_sequences() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_get_exceptions() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_derived_impl() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_derived_over() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_set_exceptions() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_scopes(const AbstractDumperBase* main_scope) const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_contents () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_all_contents() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_parents() const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_includes () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_all_includes () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤AbstractDumperBase::ADList* AbstractSingleDumperBase::get_nsf_includes () const {¤	ADList* ret = new ADList ();¤	return ret;¤}¤¤std::string AbstractSingleDumperBase::get_user_property_str (const std::string& prop_name) const {¤	std::string ret;¤	return ret;¤}¤¤const std::string& AbstractSingleDumperBase::get_model_unique_id_str() const {	¤	return m_model_unique_id;¤}¤¤std::string AbstractSingleDumperBase::get_guid_str() const {	¤	std::string ret;¤	return ret;¤}¤¤std::string AbstractSingleDumperBase::get_model_stereotype_str() const {¤	std::string ret;¤	return ret;¤}¤¤std::string AbstractSingleDumperBase::get_documentation_str () const {¤	std::string ret;¤	return ret;¤}¤¤std::string AbstractSingleDumperBase::get_initial_value_str () const {¤	std::string ret;¤	return ret;¤}¤¤std::string AbstractSingleDumperBase::get_visability_str () const {¤	std::string ret;¤	return ret;¤}¤¤std::string AbstractSingleDumperBase::get_intend_str (short intend_shift) const {¤	std::string ret;¤	return ret;¤}¤¤std::string AbstractSingleDumperBase::get_stereotype_str () const {¤	std::string ret;¤	return ret;¤}¤¤std::string AbstractSingleDumperBase::get_type_fixed_size_str () const {¤	std::string ret;¤	return ret;¤}¤¤bool AbstractSingleDumperBase::has_registred_parent () const {¤	bool ret = false;¤	return ret;¤}¤¤bool AbstractSingleDumperBase::am_i_registred () const {¤	bool ret = true;¤	return ret;¤}¤¤bool AbstractSingleDumperBase::own_output () const {	¤	return false;¤}¤¤std::string AbstractSingleDumperBase::get_link_type_str () const {¤	return "";¤}¤¤std::string AbstractSingleDumperBase::get_abstract_str () const {¤	return "false";¤}¤¤std::string AbstractSingleDumperBase::get_class_kind_str () const {¤	return "";¤}¤¤std::ostream* AbstractSingleDumperBase::get_output () const {¤	return NULL;¤}¤¤std::string AbstractSingleDumperBase::get_root_dir(bool direct_get) const {¤	return "";¤}¤¤void AbstractSingleDumperBase::add_user_code (const GenID& gen_id, const UserCodeId& uc_id, const UserCode& uc) const {¤}¤¤AbstractSingleDumperBase::UserCode AbstractSingleDumperBase::get_user_code (const GenID& gen_id, const UserCodeId& uc_id) const {¤	return "";¤}¤¤std::string AbstractSingleDumperBase::get_auto_counter_str () const {¤	return "";¤}¤//#UC END# *4571A32201A5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A32201A5_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571A32201A5_DESTR_BODY*¤	//#UC END# *4571A32201A5_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A32201A5_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571A32201A5_CUSTOM_INCLUDES*¤//#UC END# *4571A32201A5_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A32201A5*"
			    value      	(value Text 
|//#UC START# *4571A32201A5*¤protected:	¤	virtual ADList* get_dependences() const;¤	virtual ADList* get_reqursive_dependences() const;¤¤	virtual ADList* get_realizator() const;¤	virtual ADList* get_generalizator() const;¤	virtual ADList* get_req_realizator() const;¤	virtual ADList* get_req_generalizator() const;¤¤	virtual ADList* get_generalizations () const;¤	virtual ADList* get_realizations() const;¤	virtual ADList* get_nested_generalizations () const;¤	virtual ADList* get_nested_realizations() const;¤¤	virtual ADList* get_source () const;¤	virtual ADList* get_nested_botom_consumers () const;	¤	virtual ADList* get_all_consumers () const;	¤	virtual ADList* get_requrcive_all_consumers () const;¤	virtual ADList* get_nested_top_suppliers () const;	¤	virtual ADList* get_forwarded() const;¤	virtual ADList* get_nsf_forwarded() const;¤	virtual ADList* get_sequences() const;¤	virtual ADList get_diagrams() const;¤	virtual ADList* get_derived_impl() const;¤	virtual ADList* get_derived_over() const;¤¤	virtual ADList* get_get_exceptions() const;¤	virtual ADList* get_set_exceptions() const;¤	virtual ADList* get_scopes(const AbstractDumperBase* main_scope) const;¤	virtual ADList* get_parents() const;¤	virtual ADList* get_contents () const;¤	virtual ADList* get_all_contents() const;¤	virtual ADList* get_includes () const;¤	virtual ADList* get_all_includes () const;¤	virtual ADList* get_nsf_includes () const;¤	std::string get_guid_str() const;¤	virtual const std::string& get_model_unique_id_str() const;¤	virtual std::string get_abstract_str () const;¤	virtual std::string get_class_kind_str() const;¤	virtual std::string get_link_type_str () const;¤	virtual std::string get_model_stereotype_str() const;¤	virtual std::string get_documentation_str () const;¤	virtual std::string get_initial_value_str () const;¤	virtual std::string get_visability_str () const;¤	virtual std::string get_intend_str (short intend_shift) const;¤	virtual std::string get_stereotype_str () const;¤	virtual std::string get_auto_counter_str () const;¤	virtual std::string get_type_fixed_size_str () const;¤	virtual std::string get_user_property_str (const std::string& prop_name) const;¤	virtual bool has_registred_parent () const;¤	virtual bool am_i_registred () const;¤	virtual bool own_output () const;¤	virtual std::ostream* get_output () const;¤	std::string get_root_dir(bool direct_get = false) const;¤	void add_user_code (const GenID& gen_id, const UserCodeId& uc_id, const UserCode& uc) const;¤	UserCode get_user_code (const GenID& gen_id, const UserCodeId& uc_id) const;¤	virtual const AbstractDumperBase* parent() const {¤		return NULL;¤	}¤	virtual const AbstractDumperBase* get_target () const {¤		return NULL;¤	}¤	virtual std::string get_model_class_str() const {¤		return "";¤	}¤¤	virtual std::string get_target_stereotype_str() const {¤		return "";¤	}¤¤	virtual Selections get_applied_gens () const {¤		return Selections();¤	}¤¤	void write_template_error_log (const char* log) const {¤		assert (0);¤	}¤¤	void write_template_warning_log (const char* log) const {¤		assert (0);¤	}¤¤	std::string get_native_path_str() const {¤		return "";¤	}¤¤protected:¤	mutable std::string m_model_unique_id;¤//#UC END# *4571A32201A5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractSingleDumperBase.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractSingleDumperBase.h"))
		    quid       	"4571A32201A5"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571A3380186"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase"
			    quidu      	"4571A2EF02CE"))
		    language   	"MDA Generator")
		(object Class "AbstractSequenceDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A360030D_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571A360030D_CUSTOM_INCLUDES*¤//#UC END# *4571A360030D_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A360030D*"
			    value      	(value Text 
|//#UC START# *4571A360030D*¤AbstractSequenceDumper::AbstractSequenceDumper () {¤	m_reciver = NULL;¤	m_sender = NULL;¤	m_operation = NULL;¤}¤¤bool AbstractSequenceDumper::operator == (const AbstractDumperBase& c) const {¤	return get_name_str() == c.get_name_str() ¤		&& *get_target() == *c.get_target();¤}¤¤///////////////////////////////////////////////////////////////////////¤// abstracte base - method implementation¤///////////////////////////////////////////////////////////////////////¤¤const AbstractDumperBase* AbstractSequenceDumper::get_target () const {¤	return m_reciver;¤}¤	¤const AbstractDumperBase* AbstractSequenceDumper::parent() const {¤	return m_operation;¤}¤¤std::string AbstractSequenceDumper::get_name_str () const {¤	return m_message;¤}¤¤std::string AbstractSequenceDumper::get_model_class_str() const {¤	std::string ret = "Message";¤	return ret;¤}¤//#UC END# *4571A360030D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A360030D_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571A360030D_DESTR_BODY*¤	//#UC END# *4571A360030D_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A360030D_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571A360030D_CUSTOM_INCLUDES*¤//#UC END# *4571A360030D_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A360030D*"
			    value      	(value Text 
|//#UC START# *4571A360030D*¤public:¤	AbstractSequenceDumper ();¤	bool operator == (const AbstractDumperBase& c) const;¤¤protected:¤	virtual const AbstractDumperBase* get_target () const;¤	virtual const AbstractDumperBase* parent() const;¤	virtual std::string get_model_class_str() const;¤	virtual std::string get_name_str () const;	¤¤protected:¤	AbstractDumperBase* m_reciver;¤	AbstractDumperBase* m_sender;¤	AbstractDumperBase* m_operation;¤	std::string m_message;¤//#UC END# *4571A360030D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceDumper.h"))
		    quid       	"4571A360030D"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571A36602AF"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSingleDumperBase"
			    quidu      	"4571A32201A5"))
		    language   	"MDA Generator")
		(object Class "AbstractSequenceObject"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A3770203_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571A3770203_CUSTOM_INCLUDES*¤//#UC END# *4571A3770203_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A3770203*"
			    value      	(value Text 
|//#UC START# *4571A3770203*¤AbstractSequenceObject::AbstractSequenceObject() {¤	AbstractDumperBase* m_class = NULL;¤}¤¤bool AbstractSequenceObject::operator == (const AbstractDumperBase& c) const {¤	return get_name_str() == c.get_name_str() ¤		&& get_target() == c.get_target();¤}¤¤std::string AbstractSequenceObject::get_name_str () const {¤	return m_name;¤}¤¤///////////////////////////////////////////////////////////////////////¤// abstracte base - method implementation¤///////////////////////////////////////////////////////////////////////¤¤const AbstractDumperBase* AbstractSequenceObject::get_target () const {¤	return m_class;¤}¤	¤const AbstractDumperBase* AbstractSequenceObject::parent() const {¤	return m_class;¤}¤¤std::string AbstractSequenceObject::get_model_class_str() const {¤	std::string ret = "ClassInstance";¤	return ret;¤}¤//#UC END# *4571A3770203*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A3770203_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571A3770203_DESTR_BODY*¤	//#UC END# *4571A3770203_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A3770203_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571A3770203_CUSTOM_INCLUDES*¤//#UC END# *4571A3770203_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A3770203*"
			    value      	(value Text 
|//#UC START# *4571A3770203*¤public:¤	AbstractSequenceObject();¤	bool operator == (const AbstractDumperBase& c) const;¤¤protected:¤	virtual const AbstractDumperBase* parent() const;¤	virtual const AbstractDumperBase* get_target () const;¤¤	virtual std::string get_model_class_str() const;¤	virtual std::string get_name_str () const;¤¤protected:¤	const AbstractDumperBase* m_class;¤	std::string m_name;¤//#UC END# *4571A3770203*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceObject.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/AbstractSequenceObject.h"))
		    quid       	"4571A3770203"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571A38501C5"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSingleDumperBase"
			    quidu      	"4571A32201A5"))
		    language   	"MDA Generator")
		(object Class "TemplateDumperDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A39F0280_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571A39F0280_CUSTOM_INCLUDES*¤//#UC END# *4571A39F0280_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A39F0280*"
			    value      	(value Text 
|//#UC START# *4571A39F0280*¤TemplateDumperDumper::TemplateDumperList TemplateDumperDumper::s_dumpers_list;¤¤std::string TemplateDumperDumper::get_root_dir (bool direct_get) const {¤	assert (0);¤//	return RoseHelper::get_root_dir (0);¤	return "";¤} ¤¤// метод помещает указатель в контейнер¤void TemplateDumperDumper::add_dumper (const TemplateDumperDumper* dumper) {	¤	TemplateDumperDumper* non_const_dumper = const_cast<TemplateDumperDumper*> (dumper);¤	if (non_const_dumper) {¤		TemplateDumperDumper::s_dumpers_list.push_back (non_const_dumper);¤	}¤}¤¤//#UC END# *4571A39F0280*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571A39F0280_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571A39F0280_DESTR_BODY*¤	//#UC END# *4571A39F0280_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A39F0280_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571A39F0280_CUSTOM_INCLUDES*¤//#UC END# *4571A39F0280_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A39F0280*"
			    value      	(value Text 
|//#UC START# *4571A39F0280*¤public:¤	// контейнер для хранения созданных экземпляров TemplateDumperDumper¤	typedef std::vector < Core::Box<TemplateDumperDumper> > TemplateDumperList;¤¤	// метод помещает указатель в контейнер¤	static void add_dumper (const TemplateDumperDumper* dumper);¤¤public:¤¤	TemplateDumperDumper (std::string gen_id) {¤		m_gen_id = gen_id;¤	}¤¤	virtual std::string get_name_str () const {¤		GenInfos::iterator f = s_gen_infos.find (m_gen_id);¤		if (f != s_gen_infos.end()) {¤			return f->second->description ();¤		} else {¤			return "";¤		}¤	}¤¤	std::string get_user_property_str (const std::string& prop_name) const {¤		GenInfos::iterator f = s_gen_infos.find (m_gen_id);¤		if (f != s_gen_infos.end()) {¤			std::string ret;¤			f->second->get_property (prop_name, ret);¤			return ret;¤		} else {¤			return "";¤		}¤	}¤¤	const std::string& get_model_unique_id_str() const {	¤		return m_gen_id;¤	}¤¤	bool operator == (const AbstractDumperBase& c) const {¤		return c.get_model_unique_id_str() == this->get_model_unique_id_str();		¤	}¤¤	std::string get_root_dir (bool direct_get = false) const;¤	¤	const AbstractDumperBase* get_main_element () const {¤		if (!s_model_main_element) {¤			throw FatalError ("No Main element was defined");¤		}¤		return s_model_main_element;¤	}¤	¤protected:¤	std::string m_gen_id;	¤¤// static member data¤private:¤	static TemplateDumperList s_dumpers_list;¤//#UC END# *4571A39F0280*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/TemplateDumperDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/TemplateDumperDumper.h"))
		    quid       	"4571A39F0280"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571A3AB0280"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSingleDumperBase"
			    quidu      	"4571A32201A5"))
		    operations 	(list Operations
			(object Operation "reset_dumpers_list"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*459CFE7C00E0*"
				    value      	(value Text 
|//#UC START# *459CFE7C00E0*¤	TemplateDumperDumper::s_dumpers_list.clear ();¤	//#UC END# *459CFE7C00E0*
				    )))
			    quid       	"459CFE7C00E0"
			    documentation 	"принудительно сбрасываем кэш (пока самого кэша на модели нет)"
			    stereotype 	"static"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0))
		    language   	"MDA Generator")
		(object Class "SyntaxDef"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A3B70109_USER_INCLUDES*"
			    value      	"//#UC START# *4571A3B70109_USER_INCLUDES*¤//#UC END# *4571A3B70109_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571A3B70109_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4571A3B70109_USER_DEFINITION*¤#define SX_1_CODE_TPL              '\t'¤#define SX_1_STEREOTYPE		       ':'¤#define SX_1_STEREOTYPE_EQ	       '='¤#define SX_1_GENID			       '+'¤#define SX_1_INCLUDE               '#'¤#define SX_1_GEN_OR_ST_INFO        '?'¤¤#define SX_1_OUTPUT_TPL		       'o'¤#define SX_1_OUTPUT_TPL_CREATE     'O'¤#define SX_1_OUTPUT_DIR_TPL_CREATE 'C'¤#define SX_1_POST_COMMAND_TPL      'X'¤#define SX_1_IS_FFD			       'D'  //forbiden forward declaration¤#define SX_1_ALLOW_EMPTY_TARGET    'T'¤#define SX_1_USER_PROPERTY         'p'¤#define SX_1_IS_EXCEPTION          'E'¤#define SX_1_HAS_EXCEPTION         'e'¤#define SX_1_SKIPED_ITEM           'K'¤#define SX_1_AVAILABLE_TARGET_STREOTYPES 'A'¤#define SX_1_PARENT_VISABILITY     'w'¤#define SX_1_IS_PLAIN		       'P'¤#define SX_1_OPEN_SCOPE_TPL        'S'¤#define SX_1_CLOSE_SCOPE_TPL       's'¤#define SX_1_FORWARD_TPL           'F'¤#define SX_1_FUNCTION_TPL	       'f'¤#define SX_1_TRANSFORMER_TPL       't'¤#define SX_1_TRANSFORMER_COLUMN    'c'¤#define SX_1_TRANSFORMER_ROW       'r'¤#define SX_1_USER_FILE             'U'¤#define SX_1_MAIN_ST               'M'¤#define SX_1_TAB_REPLACER          'R'¤¤#define SX_1_UC_OPEN_START_ID      'I'¤#define SX_1_UC_CLOSE_START_ID     'i'¤¤#define SX_1_UC_OPEN_END_ID        'J'¤#define SX_1_UC_CLOSE_END_ID       'j'¤¤#define SX_1_UC_UNIQUE             'u'¤#define SX_1_COLORIZE_OPTION       '$'¤#define SX_1_ABSTRACTION_TYPE      'a'¤#define SX_1_VISABILTY_TYPE        'v'¤#define SX_1_LINK_TYPE             'l'¤#define SX_1_IMPLEMENTATION_TYPE   'm'¤#define SX_1_HAS_DERIVED_IMPL      'd'¤#define SX_1_INCLUDED_ST           '>'¤#define SX_1_EXCLUDED_ST           '<'¤#define SX_1_PARAMETERIZATION_TYPE 'W'¤#define SX_1_ST_MEMBERS            '%'¤¤#define SX_C_SUPPRES_OPERATION     'S'¤#define SX_C_SUPPRES_ATTRIBUTE     's'¤#define SX_C_ST_ICONIC_VIEW        'i'¤#define SX_C_FILL_COLOR			   'C'¤#define SX_C_LINE_COLOR			   'L'¤#define SX_C_FORIEN_LINE_COLOR     'l'¤#define SX_C_FONT_COLOR			   'F'¤#define SX_C_FORIEN_FONT_COLOR     'f'¤¤//#define SX_AT_SELECT               's'¤//#define SX_AT_TRUE                 't'¤//#define SX_AT_FALSE                'f'¤#define SX_AT_ABSTRACT             'a'¤#define SX_AT_REGULAR              'r'¤#define SX_AT_FINAL                'f'¤//#define SX_AT_INLINE               'i'¤¤#define SX_VT_PUBLIC               '+'¤#define SX_VT_PROTECTED            '#'¤#define SX_VT_PRIVATE              '-'¤#define SX_VT_IMPL                 'i'¤¤#define SX_LT_AGR                 'a'¤#define SX_LT_REF                 'r'¤#define SX_LT_LNK                 'l'¤¤#define SX_IT_TRUE                 't'¤#define SX_IT_FALSE                'f'¤¤#define SX_2_ARGUMENT		'%'¤#define SX_2_INTEND			'#'¤#define SX_2_SYMBOL			'\\'¤#define SX_2_CYCLE_OPEN		'<'¤#define SX_2_CYCLE_CLOSE	'>'¤#define SX_2_IF_OPEN		'['¤#define SX_2_IF_CLOSE		']'¤#define SX_2_IFCYCLE_PARAMS_OPEN  '{'¤#define SX_2_IFCYCLE_PARAMS_CLOSE '}'¤#define SX_2_USER_PROP_OPEN		'{'¤#define SX_2_USER_PROP_CLOSE	'}'¤¤#define SX_3_ALL_CONTENTS				'A'¤#define SX_3_ALL_CONSUMERS				'a'¤#define SX_3_MAIN_SCOPE 				'B'¤#define SX_3_NESTED_BOTOM_CONSUMERS		'b'¤#define SX_3_CONTENTS					'C'¤#define SX_3_REQURCIVE_ALL_CONSUMERS    'c'¤#define SX_3_DEPENDENCES				'D'¤#define SX_3_REQURSIVE_DEPENDENCES		'd'¤#define SX_3_GET_EXCEPTIONS				'E'¤#define SX_3_SET_EXCEPTIONS				'e'¤#define SX_3_FORWARDED					'F'¤#define SX_3_FUNCTION					'f'¤#define SX_3_GENERALIZATION				'G'¤#define SX_3_REQURSIVE_GENERALIZATION	'g'¤#define SX_3_INCLUDES					'I'¤#define SX_3_ALL_INCLUDES				'i'¤#define SX_3_REALIZATOR					'L'¤#define SX_3_REQURSIVE_REALIZATOR		'l'¤#define SX_3_MAIN_ELEMENT				'M'¤#define SX_3_DIAGRAMS					'm'¤#define SX_3_SCOPES						'N'¤#define SX_3_NESTED_TOP_SUPPLIERS		'n'¤#define SX_3_DERIVED_OVER				'O'¤#define SX_3_DERIVED_IMPL				'o'¤#define SX_3_PARENTS					'P'¤#define SX_3_SEQUENCES					'Q'¤#define SX_3_REALIZATION				'R'¤#define SX_3_REQURSIVE_REALIZATION		'r'¤#define SX_3_SELF						'S'¤#define SX_3_SOURCE						's'¤#define SX_3_TARGET						'T'¤#define SX_3_TRANSFORMATOR				't'¤#define SX_3_USER_CODE					'U'¤#define SX_3_NO_SCOPE_FORWARDED			'W'¤#define SX_3_WITHOUT_NSF_INCLUDES       'w'¤#define SX_3_GENERATOR					'X'¤#define SX_3_GENERALIZATOR				'Z'¤#define SX_3_REQURSIVE_GENERALIZATOR	'z'¤¤#define SX_4_NAME			'N'¤#define SX_4_STEREOTYPE       'S'¤#define SX_4_TARGET_STEREOTYPE 's'¤#define SX_4_MODEL_STEREOTYPE 'M'¤#define SX_4_MODEL_CLASS      'C'¤#define SX_4_MODEL_UNIQUE_ID  'U'¤#define SX_4_OS_GUID          'G'¤#define SX_4_DOCUMENTATION    'D'¤#define SX_4_FILE_NAME        'O'¤#define SX_4_FILE_PATH        'o'¤#define SX_4_DIR_RELATIVE_PATH 'd'¤#define SX_4_FILE_RELATIVE_PATH 'L'¤#define SX_4_FILE_RELATIVE_PATH_WITH_PARENT 'W'¤#define SX_4_DUMPING		'X'¤#define SX_4_OPEN_SCOPE     'P'¤#define SX_4_CLOSE_SCOPE    'p'¤#define SX_4_FORWARD        'F' ¤#define SX_4_VISABILITY     'V'¤#define SX_4_INITIAL_VALUE  'I' // for attr and ops::param¤#define SX_4_AUTO_COUNTER	'A'¤#define SX_4_IS_EXISTS      'x'¤#define SX_4_IS_FIXED       'f'¤#define SX_4_IS_REG			'r'¤#define SX_4_IS_TOP_REG		't'¤#define SX_4_GEN_INFO		'?'¤#define SX_4_ROOT_DIR		'R'¤#define SX_4_CYCLE_NUM      'n'¤#define SX_4_IS_ABSTRACT    'a'¤#define SX_4_LINK_TYPE      'l'¤#define SX_4_CLASS_KIND     'K'¤#define SX_4_IS_EXTERNAL_NATIVE    'e'¤¤#define SX_3_REVERSE_CYCLE   'r'¤#define SX_3_SEPARATOR_BEGIN '"'¤#define SX_3_SEPARATOR_END   '"'¤#define SX_3_SHIFT_BEGIN     '+'¤#define SX_3_SHIFT_END       '-'¤#define SX_3_CYCLE_COUNT_DUMP 'C'¤#define SX_3_SORTING_TYPE    'S'¤#define SX_4_ST_BY_NAME      'n'¤#define SX_4_ST_BY_GUID      'g'¤#define SX_4_ST_BY_PARENT_AND_NAME 'p'¤¤#define SX_4_COND_NOT		'!'¤#define SX_4_COND_EQU		'='¤#define SX_4_COND_AND		'&'¤#define SX_4_COND_OR		'|'¤¤#define SX_3_NEW_STR		'n'¤#define SX_3_TAB			't'¤¤#include "usercode_def.i.h"¤¤// standart function identificator¤#define FID_DEBUG_POINT "_dbg_point"¤#define FID_CONVERT_TO_OMG_STYLE "_to_omg"¤#define FID_CONVERT_TO_BORLAND_STYLE "_to_borland"¤#define FID_STRING_CONVERTER "_str_conv"¤#define FID_STRING_SPLIT "_str_split"¤#define FID_STRING_LOWER_CASE "_to_lower"¤#define FID_STRING_UPPER_CASE "_to_upper"¤#define FID_TO_WIDE_STR "_to_wide_code"¤#define FID_STR_REPLACE "_str_replace"¤#define FID_MODEL_ERROR "_error"¤#define FID_MODEL_WARNING "_warning"¤#define FID_CHANGE_GENID "_with_gen_id"¤#define FID_SET_GENID "_set_gen_id"¤#define FID_SET_GEN_PROP "_set_prop"¤#define FID_SET_VAR_DUMPER "_set_var"¤#define FID_ELEMENT_COUNTER "_elem_counter"¤#define FID_SHIFT_INTEND "_shift_intend"¤#define FID_DEC_TO_HEX "_dec_to_hex"¤#define FID_NORMOLIZED_PATH "_normolized_path"¤#define FID_NORMOLIZED_DIR "_normolized_dir"¤#define FID_SUBSTRING_FROM_END "_substr_from_end"¤#define FID_SUBSTRING_FROM_BEGIN "_substr_from_begin"¤#define FID_DELSUBSTR_FROM_END "_delsubstr_from_end"¤#define FID_DELSUBSTR_FROM_BEGIN "_delsubstr_from_begin"¤#define FID_STRING_HASH "_string_hash"¤#define FID_STRING_LENGTH "_string_length"¤#define FID_STRING_CMP "_string_cmp"¤#define FID_NUMBER_CMP "_number_cmp"¤#define FID_SHIFT_SCOPE "_shift_scope"¤¤¤#define FILE_SIGNATURE "MDA GENERATOR TEMPLATE FILE"¤#define STR_TEMP_GEN_EX ".tmpgen"¤¤// reserved stereotype¤#define RST_ALL "all"¤#define RST_DEFAULT "default"¤#define RST_UNSTEREOTYPED "unstereotyped"¤//#UC END# *4571A3B70109_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/AbstractDumpers/SyntaxDef.h"))
		    quid       	"4571A3B70109"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Association "$UNNAMED$0"
		    quid       	"4575432400F6"
		    roles      	(list role_list
			(object Role "consumer"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"TargetStereotype"
				    value      	"const")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45754324022E"
			    label      	"consumer"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::ObjectTreeResolver"
			    quidu      	"4571A0B90148"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$1"
			    quid       	"457543240230"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::ObjectTreeResolver::ConsumerInfo"
			    quidu      	"4575430E01C1")))
		(object Association "$UNNAMED$2"
		    quid       	"457543AF0144"
		    roles      	(list role_list
			(object Role "$UNNAMED$3"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"457543AF024E"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::ObjectTreeResolver::ConsumerInfo"
			    quidu      	"4575430E01C1"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$4"
			    quid       	"457543AF0250"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::ObjectTreeResolver::Consumer_set"
			    quidu      	"4575439C005A"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$5"
		    quid       	"45964BA5036A"
		    roles      	(list role_list
			(object Role "$UNNAMED$6"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45964BA600D9"
			    stereotype 	"switch"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceType"
			    quidu      	"45964B3E0399"
			    Containment 	"By Reference"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$7"
			    quid       	"45964BA600DB"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSource"
			    quidu      	"45964ACF0156"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$8"
		    quid       	"4596520801A5"
		    roles      	(list role_list
			(object Role "$UNNAMED$9"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"TargetStereotype"
				    value      	"const"))
			    quid       	"4596520802BE"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtData"
			    quidu      	"45964D37029F"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$10"
			    quid       	"4596520802CD"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::ArtefactSet"
			    quidu      	"459651F100AB")))
		(object Association "$UNNAMED$11"
		    quid       	"45C9F26703C8"
		    roles      	(list role_list
			(object Role "source"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45C9F26901A5"
			    label      	"source"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSource"
			    quidu      	"45964ACF0156"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$12"
			    quid       	"45C9F26901A7"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceInfo"
			    quidu      	"45C9F2340119"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$13"
		    quid       	"45C9F2780196"
		    roles      	(list role_list
			(object Role "gen_id"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45C9F27802DE"
			    label      	"gen_id"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenID"
			    quidu      	"45C9EF3F01D4"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$14"
			    quid       	"45C9F27802EF"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceInfo"
			    quidu      	"45C9F2340119"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$15"
		    quid       	"45C9F2CC0000"
		    roles      	(list role_list
			(object Role "source_info"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"TargetStereotype"
				    value      	"const"))
			    quid       	"45C9F2CC01A5"
			    label      	"source_info"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceInfo"
			    quidu      	"45C9F2340119"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$16"
			    quid       	"45C9F2CC01B5"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtData"
			    quidu      	"45964D37029F"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$17"
		    quid       	"45C9F2E9038A"
		    roles      	(list role_list
			(object Role "$UNNAMED$18"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45C9F2EA00FA"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceInfo"
			    quidu      	"45C9F2340119"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$19"
			    quid       	"45C9F2EA00FC"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceInfoSet"
			    quidu      	"459D2D5B03DD"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$20"
		    quid       	"45C9F3DD005D"
		    roles      	(list role_list
			(object Role "$UNNAMED$21"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45C9F3DD0251"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtData"
			    quidu      	"45964D37029F"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$22"
			    quid       	"45C9F3DD0253"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts_i::ArtefactSetUnic"
			    quidu      	"45C9F3C40148"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$23"
		    quid       	"45C9F42D000F"
		    roles      	(list role_list
			(object Role "data"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45C9F42D01C5"
			    label      	"data"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts_i::ArtefactSetUnic"
			    quidu      	"45C9F3C40148"
			    Containment 	"By Value"
			    exportControl 	"Private"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$24"
			    quid       	"45C9F42D01C7"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts_i"
			    quidu      	"45964CC70250"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$25"
		    quid       	"45D4323503D8"
		    roles      	(list role_list
			(object Role "fake_deleted"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45D4323701E4"
			    documentation 	"множество элементов, у которых изменился родитель, но не поменялся путь к файлу генерации."
			    label      	"fake_deleted"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts_i::ArtefactSetUnic"
			    quidu      	"45C9F3C40148"
			    Containment 	"By Value"
			    exportControl 	"Private"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$26"
			    quid       	"45D4323701E6"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts_i"
			    quidu      	"45964CC70250"
			    is_aggregate 	TRUE))))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"456C0DD70110"))
		    quid       	"4571A0B1009C"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	0
		    origin_y   	3792
		    items      	(list diagram_item_list
			(object NoteView @1
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571A0B90148"))
			    location   	(270, 282)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@1
				location   	(132, 222)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{no base class:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper" @2
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1005, 1101)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@2
				location   	(476, 892)
				fill_color 	13434879
				nlines     	1
				max_width  	1058
				justify    	0
				label      	"AbstractDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@2
				location   	(476, 842)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1058
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571A2CB02DE"
			    width      	1076
			    height     	542
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @3
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571A2CB02DE"))
			    location   	(1074, 384)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@3
				location   	(627, 6)
				fill_color 	13434879
				nlines     	18
				max_width  	859
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
|
|FOR OPER. "get_artefacts"
|Target stereotype: cached
|
|FOR OPER. "push_changes"
|Abstraction type: final
|
|FOR OPER. "create_gen_file_name"
|Target stereotype: const
|
|IMPLEMENT ALL ABSTRACTS, EXCLUDE:
|AbstractDumperBase::get_deleted_child_generated_source
|AbstractDumperBase::get_self_generated_source
|AbstractDumperBase::remove_generated_source
|AbstractDumperBase::set_self_generated_source
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	919
			    height     	769)
			(object AttachView "" @4
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@3
			    supplier   	@2
			    vertices   	(list Points
				(1035, 768)
				(1030, 829))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase" @5
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2127, 516)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@5
				location   	(1576, 357)
				fill_color 	13434879
				nlines     	1
				max_width  	1102
				justify    	0
				label      	"AbstractDumperBase")
			    stereotype 	(object ItemLabel
				Parent_View 	@5
				location   	(1576, 307)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1102
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571A2EF02CE"
			    width      	1120
			    height     	442
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @6
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571A2EF02CE"))
			    location   	(3195, 363)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@6
				location   	(2876, 25)
				fill_color 	13434879
				nlines     	16
				max_width  	603
				justify    	1
				label      	
|{need UC:=true}
|{no base class:=true}
|
|FOR OPER. "get_self_generated_source"
|Abstraction type: abstract
|
|FOR OPER. "get_deleted_child_generated_source"
|Abstraction type: abstract
|
|FOR OPER. "set_self_generated_source"
|Abstraction type: abstract
|
|FOR OPER. "remove_generated_source"
|Abstraction type: abstract
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	663
			    height     	688)
			(object AttachView "" @7
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@6
			    supplier   	@5
			    vertices   	(list Points
				(2863, 409)
				(2687, 434))
			    line_style 	0)
			(object InheritView "" @8
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571A30003A9"
			    client     	@2
			    supplier   	@5
			    vertices   	(list Points
				(1522, 829)
				(1701, 737))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSingleDumperBase" @9
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1884, 1119)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@9
				location   	(1611, 1089)
				fill_color 	13434879
				nlines     	1
				max_width  	546
				justify    	0
				label      	"AbstractSingleDumperBase")
			    stereotype 	(object ItemLabel
				Parent_View 	@9
				location   	(1611, 1039)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	546
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571A32201A5"
			    width      	564
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @10
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571A32201A5"))
			    location   	(1782, 882)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@10
				location   	(1644, 822)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @11
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@10
			    supplier   	@9
			    vertices   	(list Points
				(1810, 948)
				(1843, 1026))
			    line_style 	0)
			(object InheritView "" @12
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571A3380186"
			    client     	@9
			    supplier   	@5
			    vertices   	(list Points
				(1920, 1026)
				(2035, 737))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSequenceDumper" @13
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2538, 1194)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@13
				location   	(2282, 1164)
				fill_color 	13434879
				nlines     	1
				max_width  	512
				justify    	0
				label      	"AbstractSequenceDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@13
				location   	(2282, 1114)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	512
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571A360030D"
			    width      	530
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @14
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571A36602AF"
			    client     	@13
			    supplier   	@9
			    vertices   	(list Points
				(2272, 1162)
				(2166, 1150))
			    line_style 	0)
			(object NoteView @15
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571A360030D"))
			    location   	(3144, 1194)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@15
				location   	(3006, 1134)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @16
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@15
			    supplier   	@13
			    vertices   	(list Points
				(2993, 1194)
				(2803, 1194))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSequenceObject" @17
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2535, 963)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@17
				location   	(2288, 933)
				fill_color 	13434879
				nlines     	1
				max_width  	494
				justify    	0
				label      	"AbstractSequenceObject")
			    stereotype 	(object ItemLabel
				Parent_View 	@17
				location   	(2288, 883)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	494
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571A3770203"
			    width      	512
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @18
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571A3770203"))
			    location   	(3147, 963)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@18
				location   	(3009, 903)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @19
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@18
			    supplier   	@17
			    vertices   	(list Points
				(2996, 963)
				(2791, 963))
			    line_style 	0)
			(object InheritView "" @20
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571A38501C5"
			    client     	@17
			    supplier   	@9
			    vertices   	(list Points
				(2278, 1023)
				(2166, 1050))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::TemplateDumperDumper" @21
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2517, 1473)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@21
				location   	(2200, 1414)
				fill_color 	13434879
				nlines     	1
				max_width  	634
				justify    	0
				label      	"TemplateDumperDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@21
				location   	(2200, 1364)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	634
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571A39F0280"
			    width      	652
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @22
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571A39F0280"))
			    location   	(3063, 1470)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@22
				location   	(2925, 1410)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @23
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@22
			    supplier   	@21
			    vertices   	(list Points
				(2912, 1470)
				(2843, 1470))
			    line_style 	0)
			(object InheritView "" @24
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571A3AB0280"
			    client     	@21
			    supplier   	@9
			    vertices   	(list Points
				(2299, 1351)
				(2049, 1211))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::SyntaxDef" @25
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1749, 114)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@25
				location   	(1599, 84)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"SyntaxDef")
			    stereotype 	(object ItemLabel
				Parent_View 	@25
				location   	(1599, 34)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4571A3B70109"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @26
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571A3B70109"))
			    location   	(2154, 108)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@26
				location   	(2016, 48)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @27
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@26
			    supplier   	@25
			    vertices   	(list Points
				(2003, 109)
				(1908, 111))
			    line_style 	0)
			(object UsesView "" @28
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @29
				Parent_View 	@28
				location   	(1857, 270)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.516403
				height     	29
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571A3DB0148"
			    client     	@5
			    supplier   	@25
			    vertices   	(list Points
				(1919, 294)
				(1836, 206))
			    line_style 	0)
			(object NoteView @30
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4575432400F6"))
			    location   	(507, 1539)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@30
				location   	(371, 1479)
				fill_color 	13434879
				nlines     	3
				max_width  	237
				justify    	1
				label      	"Target stereotype: const")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	297
			    height     	133)
			(object NoteView @31
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4575430E01C1"))
			    location   	(960, 1569)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@31
				location   	(757, 1457)
				fill_color 	13434879
				nlines     	5
				max_width  	371
				justify    	1
				label      	
|{Need init ctor:=true}
|
|FOR ATTR. "link_stereotype"
|Target stereotype: const
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	431
			    height     	237)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::ObjectTreeResolver" @32
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(276, 552)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@32
				location   	(82, 522)
				fill_color 	13434879
				nlines     	1
				max_width  	388
				justify    	0
				label      	"ObjectTreeResolver")
			    stereotype 	(object ItemLabel
				Parent_View 	@32
				location   	(82, 472)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	388
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571A0B90148"
			    width      	406
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object AttachView "" @33
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@1
			    supplier   	@32
			    vertices   	(list Points
				(270, 348)
				(273, 459))
			    line_style 	0)
			(object InheritView "" @34
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571A2EB03D8"
			    client     	@2
			    supplier   	@32
			    vertices   	(list Points
				(644, 829)
				(398, 644))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::ObjectTreeResolver::ConsumerInfo" @35
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(279, 1818)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@35
				location   	(29, 1761)
				fill_color 	13434879
				nlines     	1
				max_width  	500
				justify    	0
				label      	"ConsumerInfo")
			    stereotype 	(object ItemLabel
				Parent_View 	@35
				location   	(29, 1711)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	500
				justify    	0
				label      	"<<Struct>>")
			    icon_style 	"Label"
			    fill_color 	13427169
			    quidu      	"4575430E01C1"
			    width      	518
			    height     	238
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$0" @36
			    location   	(277, 1171)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4575432400F6"
			    roleview_list 	(list RoleViews
				(object RoleView "consumer" @37
				    Parent_View 	@36
				    location   	(-26, 343)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @38
					Parent_View 	@37
					location   	(138, 798)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	215
					justify    	0
					label      	"+consumer"
					pctDist    	0.710346
					height     	139
					orientation 	0)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45754324022E"
				    client     	@36
				    supplier   	@32
				    vertices   	(list Points
					(277, 1171)
					(276, 644))
				    line_style 	0)
				(object RoleView "$UNNAMED$1" @39
				    Parent_View 	@36
				    location   	(-26, 343)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"457543240230"
				    client     	@36
				    supplier   	@35
				    vertices   	(list Points
					(277, 1171)
					(278, 1698))
				    line_style 	0)))
			(object AttachView "" @40
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@30
			    supplier   	@36
			    vertices   	(list Points
				(464, 1472)
				(277, 1171))
			    line_style 	0)
			(object AttachView "" @41
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@31
			    supplier   	@35
			    vertices   	(list Points
				(744, 1646)
				(538, 1722))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::ObjectTreeResolver::Consumer_set" @42
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(921, 1830)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@42
				location   	(727, 1802)
				fill_color 	13434879
				nlines     	1
				max_width  	388
				justify    	0
				label      	"Consumer_set")
			    stereotype 	(object ItemLabel
				Parent_View 	@42
				location   	(727, 1752)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	388
				justify    	0
				label      	"<<Set>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"4575439C005A"
			    width      	406
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$2" @43
			    location   	(627, 1823)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"457543AF0144"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$3" @44
				    Parent_View 	@43
				    location   	(237, 182)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"457543AF024E"
				    client     	@43
				    supplier   	@35
				    vertices   	(list Points
					(627, 1823)
					(538, 1820))
				    line_style 	0)
				(object RoleView "$UNNAMED$4" @45
				    Parent_View 	@43
				    location   	(237, 182)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"457543AF0250"
				    client     	@43
				    supplier   	@42
				    vertices   	(list Points
					(627, 1823)
					(717, 1824))
				    line_style 	0)))
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::ReportsTreeItem" @46
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1830, 1698)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@46
				location   	(1630, 1645)
				fill_color 	13434879
				nlines     	1
				max_width  	400
				justify    	0
				label      	"ReportsTreeItem")
			    stereotype 	(object ItemLabel
				Parent_View 	@46
				location   	(1630, 1595)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	400
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"458E8E730132"
			    width      	418
			    height     	230
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @47
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"458E8E730132"))
			    location   	(2256, 1698)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@47
				location   	(2118, 1638)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object ClassView "Class" "Logical View::shared::GCL::data::StaticNode" @48
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1827, 1383)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@48
				location   	(1661, 1355)
				nlines     	1
				max_width  	332
				justify    	0
				label      	"StaticNode")
			    stereotype 	(object ItemLabel
				Parent_View 	@48
				location   	(1661, 1305)
				anchor     	10
				nlines     	1
				max_width  	332
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4501367B01C5"
			    width      	350
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @49
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"458E8EC50306"
			    client     	@46
			    supplier   	@48
			    vertices   	(list Points
				(1828, 1582)
				(1827, 1473))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts" @50
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(996, 2211)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	TRUE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@50
				location   	(532, 2029)
				fill_color 	13434879
				nlines     	1
				max_width  	928
				justify    	0
				label      	"GenArtefacts")
			    stereotype 	(object ItemLabel
				Parent_View 	@50
				location   	(532, 1979)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	928
				justify    	0
				label      	"<<Facet>>")
			    icon_style 	"Label"
			    fill_color 	16766935
			    quidu      	"459649A50137"
			    compartment 	(object Compartment
				Parent_View 	@50
				location   	(532, 2134)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	TRUE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				icon_style 	"Label"
				fill_color 	16777215
				anchor     	2
				nlines     	6
				max_width  	937
				justify    	1)
			    width      	946
			    height     	488
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @51
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45964CC70250"))
			    location   	(2028, 1914)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@51
				location   	(1890, 1854)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"Abstraction type: final")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::SourceStatus" @52
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(210, 2205)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@52
				location   	(46, 2073)
				fill_color 	13434879
				nlines     	1
				max_width  	328
				justify    	0
				label      	"SourceStatus")
			    stereotype 	(object ItemLabel
				Parent_View 	@52
				location   	(46, 2023)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	328
				justify    	0
				label      	"<<Enum>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"45964E2E007C"
			    compartment 	(object Compartment
				Parent_View 	@52
				location   	(46, 2178)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				icon_style 	"Label"
				fill_color 	16777215
				anchor     	2
				nlines     	4
				max_width  	234
				justify    	1)
			    width      	346
			    height     	388
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @53
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45964D37029F"))
			    location   	(2730, 3540)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@53
				location   	(2533, 3418)
				fill_color 	13434879
				nlines     	6
				max_width  	359
				justify    	1
				label      	
|{Need init ctor:=true}
|
|FOR ATTR. "dumper"
|Target stereotype: const
|Link type: lnk
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	419
			    height     	256)
			(object NoteView @54
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45964ACF0156"))
			    location   	(333, 3282)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@54
				location   	(195, 3222)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{Need less:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @55
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@47
			    supplier   	@46
			    vertices   	(list Points
				(2105, 1698)
				(2039, 1698))
			    line_style 	0)
			(object ClassView "Class" "Logical View::Primitives::a-string" @56
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    location   	(330, 3534)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	TRUE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	658120
				default_color 	FALSE)
			    label      	(object ItemLabel
				Parent_View 	@56
				location   	(242, 3495)
				fill_color 	13434879
				nlines     	1
				max_width  	176
				justify    	0
				label      	"a-string")
			    icon_style 	"None"
			    line_color 	14803425
			    fill_color 	14803425
			    quidu      	"452257A0036F"
			    width      	194
			    height     	103
			    autoResize 	TRUE)
			(object NoteView @57
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45C9F2CC0000"))
			    location   	(2133, 3297)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@57
				location   	(1995, 3237)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"Target stereotype: const")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object NoteView @58
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4596520801A5"))
			    location   	(2682, 2754)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@58
				location   	(2544, 2694)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"Target stereotype: const")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceType" @59
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(249, 3009)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@59
				location   	(49, 2927)
				fill_color 	13434879
				nlines     	1
				max_width  	400
				justify    	0
				label      	"GenSourceType")
			    stereotype 	(object ItemLabel
				Parent_View 	@59
				location   	(49, 2877)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	400
				justify    	0
				label      	"<<Enum>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"45964B3E0399"
			    compartment 	(object Compartment
				Parent_View 	@59
				location   	(49, 3032)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				icon_style 	"Label"
				fill_color 	16777215
				anchor     	2
				nlines     	2
				max_width  	250
				justify    	1)
			    width      	418
			    height     	288
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSource" @60
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1068, 3009)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@60
				location   	(673, 2927)
				fill_color 	13434879
				nlines     	1
				max_width  	790
				justify    	0
				label      	"GenSource")
			    stereotype 	(object ItemLabel
				Parent_View 	@60
				location   	(673, 2877)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	790
				justify    	0
				label      	"<<Union>>")
			    icon_style 	"Label"
			    fill_color 	13427169
			    quidu      	"45964ACF0156"
			    compartment 	(object Compartment
				Parent_View 	@60
				location   	(673, 3032)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				icon_style 	"Label"
				fill_color 	16777215
				anchor     	2
				nlines     	2
				max_width  	787
				justify    	1)
			    width      	808
			    height     	288
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$5" @61
			    location   	(560, 3009)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45964BA5036A"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$6" @62
				    Parent_View 	@61
				    location   	(-454, 969)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    stereotype 	(object SegLabel @63
					Parent_View 	@62
					location   	(528, 3051)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	10
					anchor_loc 	1
					nlines     	1
					max_width  	450
					justify    	0
					label      	"<<switch>>"
					pctDist    	0.318478
					height     	42
					orientation 	0)
				    line_color 	3342489
				    quidu      	"45964BA600D9"
				    client     	@61
				    supplier   	@59
				    vertices   	(list Points
					(560, 3009)
					(458, 3009))
				    line_style 	0)
				(object RoleView "$UNNAMED$7" @64
				    Parent_View 	@61
				    location   	(-454, 969)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45964BA600DB"
				    client     	@61
				    supplier   	@60
				    vertices   	(list Points
					(560, 3009)
					(663, 3009))
				    line_style 	0)))
			(object AttachView "" @65
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@54
			    supplier   	@60
			    vertices   	(list Points
				(483, 3224)
				(677, 3153))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenID" @66
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(759, 3525)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@66
				location   	(553, 3494)
				fill_color 	13434879
				nlines     	1
				max_width  	412
				justify    	0
				label      	"GenID")
			    stereotype 	(object ItemLabel
				Parent_View 	@66
				location   	(553, 3444)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	412
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"45C9EF3F01D4"
			    width      	430
			    height     	186
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @67
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45C9F1F402FD"
			    client     	@66
			    supplier   	@56
			    vertices   	(list Points
				(543, 3529)
				(427, 3531))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceInfoSet" @68
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2067, 3537)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@68
				location   	(1867, 3509)
				fill_color 	13434879
				nlines     	1
				max_width  	400
				justify    	0
				label      	"GenSourceInfoSet")
			    stereotype 	(object ItemLabel
				Parent_View 	@68
				location   	(1867, 3459)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	400
				justify    	0
				label      	"<<Set>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"459D2D5B03DD"
			    width      	418
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::ArtefactSet" @69
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2673, 3021)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@69
				location   	(2509, 2993)
				fill_color 	13434879
				nlines     	1
				max_width  	328
				justify    	0
				label      	"ArtefactSet")
			    stereotype 	(object ItemLabel
				Parent_View 	@69
				location   	(2509, 2943)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	328
				justify    	0
				label      	"<<Set>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"459651F100AB"
			    width      	346
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumperBase::GenSourceInfo" @70
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1425, 3537)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@70
				location   	(1225, 3484)
				fill_color 	13434879
				nlines     	1
				max_width  	400
				justify    	0
				label      	"GenSourceInfo")
			    stereotype 	(object ItemLabel
				Parent_View 	@70
				location   	(1225, 3434)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	400
				justify    	0
				label      	"<<Struct>>")
			    icon_style 	"Label"
			    fill_color 	13427169
			    quidu      	"45C9F2340119"
			    width      	418
			    height     	230
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$11" @71
			    location   	(1255, 3287)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45C9F26703C8"
			    roleview_list 	(list RoleViews
				(object RoleView "source" @72
				    Parent_View 	@71
				    location   	(-224, -1261)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @73
					Parent_View 	@72
					location   	(1257, 3269)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	147
					justify    	0
					label      	"+source"
					pctDist    	0.091985
					height     	12
					orientation 	1)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F26901A5"
				    client     	@71
				    supplier   	@60
				    vertices   	(list Points
					(1255, 3287)
					(1165, 3153))
				    line_style 	0)
				(object RoleView "$UNNAMED$12" @74
				    Parent_View 	@71
				    location   	(-224, -1261)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F26901A7"
				    client     	@71
				    supplier   	@70
				    vertices   	(list Points
					(1255, 3287)
					(1346, 3421))
				    line_style 	0)))
			(object AssociationViewNew "$UNNAMED$13" @75
			    location   	(1094, 3530)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45C9F2780196"
			    roleview_list 	(list RoleViews
				(object RoleView "gen_id" @76
				    Parent_View 	@75
				    location   	(-385, -1018)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @77
					Parent_View 	@76
					location   	(1079, 3491)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	160
					justify    	0
					label      	"+gen_id"
					pctDist    	0.144358
					height     	40
					orientation 	1)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F27802DE"
				    client     	@75
				    supplier   	@66
				    vertices   	(list Points
					(1094, 3530)
					(974, 3527))
				    line_style 	0)
				(object RoleView "$UNNAMED$14" @78
				    Parent_View 	@75
				    location   	(-385, -1018)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F27802EF"
				    client     	@75
				    supplier   	@70
				    vertices   	(list Points
					(1094, 3530)
					(1215, 3531))
				    line_style 	0)))
			(object AssociationViewNew "$UNNAMED$17" @79
			    location   	(1745, 3537)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45C9F2E9038A"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$18" @80
				    Parent_View 	@79
				    location   	(-334, -1011)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F2EA00FA"
				    client     	@79
				    supplier   	@70
				    vertices   	(list Points
					(1745, 3537)
					(1634, 3537))
				    line_style 	0)
				(object RoleView "$UNNAMED$19" @81
				    Parent_View 	@79
				    location   	(-334, -1011)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F2EA00FC"
				    client     	@79
				    supplier   	@68
				    vertices   	(list Points
					(1745, 3537)
					(1857, 3537))
				    line_style 	0)))
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtData" @82
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2025, 3018)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@82
				location   	(1719, 2936)
				fill_color 	13434879
				nlines     	1
				max_width  	612
				justify    	0
				label      	"GenArtData")
			    stereotype 	(object ItemLabel
				Parent_View 	@82
				location   	(1719, 2886)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	612
				justify    	0
				label      	"<<Struct>>")
			    icon_style 	"Label"
			    fill_color 	13427169
			    quidu      	"45964D37029F"
			    compartment 	(object Compartment
				Parent_View 	@82
				location   	(1719, 3041)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				icon_style 	"Label"
				fill_color 	16777215
				anchor     	2
				nlines     	2
				max_width  	618
				justify    	1)
			    width      	630
			    height     	288
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$8" @83
			    location   	(2419, 3018)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4596520801A5"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$9" @84
				    Parent_View 	@83
				    location   	(-98, 876)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"4596520802BE"
				    client     	@83
				    supplier   	@82
				    vertices   	(list Points
					(2419, 3018)
					(2340, 3018))
				    line_style 	0)
				(object RoleView "$UNNAMED$10" @85
				    Parent_View 	@83
				    location   	(-98, 876)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"4596520802CD"
				    client     	@83
				    supplier   	@69
				    vertices   	(list Points
					(2419, 3018)
					(2499, 3018))
				    line_style 	0)))
			(object AttachView "" @86
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@58
			    supplier   	@83
			    vertices   	(list Points
				(2616, 2820)
				(2419, 3018))
			    line_style 	0)
			(object AttachView "" @87
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@53
			    supplier   	@82
			    vertices   	(list Points
				(2555, 3411)
				(2220, 3162))
			    line_style 	0)
			(object AssociationViewNew "$UNNAMED$15" @88
			    location   	(1707, 3291)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45C9F2CC0000"
			    roleview_list 	(list RoleViews
				(object RoleView "source_info" @89
				    Parent_View 	@88
				    location   	(-372, -738)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @90
					Parent_View 	@89
					location   	(1648, 3300)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	241
					justify    	0
					label      	"+source_info"
					pctDist    	0.258561
					height     	33
					orientation 	1)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F2CC01A5"
				    client     	@88
				    supplier   	@70
				    vertices   	(list Points
					(1707, 3291)
					(1556, 3421))
				    line_style 	0)
				(object RoleView "$UNNAMED$16" @91
				    Parent_View 	@88
				    location   	(-372, -738)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F2CC01B5"
				    client     	@88
				    supplier   	@82
				    vertices   	(list Points
					(1707, 3291)
					(1856, 3162))
				    line_style 	0)))
			(object AttachView "" @92
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@57
			    supplier   	@88
			    vertices   	(list Points
				(1982, 3294)
				(1707, 3291))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts_i::ArtefactSetUnic" @93
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2643, 2463)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@93
				location   	(2479, 2435)
				fill_color 	13434879
				nlines     	1
				max_width  	328
				justify    	0
				label      	"ArtefactSetUnic")
			    stereotype 	(object ItemLabel
				Parent_View 	@93
				location   	(2479, 2385)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	328
				justify    	0
				label      	"<<Set>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"45C9F3C40148"
			    width      	346
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$20" @94
			    location   	(2362, 2713)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45C9F3DD005D"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$21" @95
				    Parent_View 	@94
				    location   	(-194, 325)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F3DD0251"
				    client     	@94
				    supplier   	@82
				    vertices   	(list Points
					(2362, 2713)
					(2182, 2873))
				    line_style 	0)
				(object RoleView "$UNNAMED$22" @96
				    Parent_View 	@94
				    location   	(-194, 325)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F3DD0253"
				    client     	@94
				    supplier   	@93
				    vertices   	(list Points
					(2362, 2713)
					(2540, 2553))
				    line_style 	0)))
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper::GenArtefacts_i" @97
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2001, 2211)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@97
				location   	(1827, 2129)
				fill_color 	13434879
				nlines     	1
				max_width  	348
				justify    	0
				label      	"GenArtefacts_i")
			    stereotype 	(object ItemLabel
				Parent_View 	@97
				location   	(1827, 2079)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	348
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"45964CC70250"
			    compartment 	(object Compartment
				Parent_View 	@97
				location   	(1827, 2234)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				icon_style 	"Label"
				fill_color 	16777215
				anchor     	2
				nlines     	2
				max_width  	353
				justify    	1)
			    width      	366
			    height     	288
			    annotation 	8
			    autoResize 	TRUE)
			(object AttachView "" @98
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@51
			    supplier   	@97
			    vertices   	(list Points
				(2021, 1980)
				(2013, 2066))
			    line_style 	0)
			(object RealizeView "" @99
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4596574702CD"
			    client     	@97
			    supplier   	@50
			    vertices   	(list Points
				(1817, 2211)
				(1469, 2211))
			    line_style 	0)
			(object AssociationViewNew "$UNNAMED$23" @100
			    location   	(2326, 2338)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45C9F42D000F"
			    roleview_list 	(list RoleViews
				(object RoleView "data" @101
				    Parent_View 	@100
				    location   	(325, 127)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @102
					Parent_View 	@101
					location   	(2366, 2309)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	112
					justify    	0
					label      	"-data"
					pctDist    	0.167945
					height     	43
					orientation 	0)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F42D01C5"
				    client     	@100
				    supplier   	@93
				    vertices   	(list Points
					(2326, 2338)
					(2469, 2394))
				    line_style 	0)
				(object RoleView "$UNNAMED$24" @103
				    Parent_View 	@100
				    location   	(325, 127)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45C9F42D01C7"
				    client     	@100
				    supplier   	@97
				    vertices   	(list Points
					(2326, 2338)
					(2184, 2282))
				    line_style 	0)))
			(object AssociationViewNew "$UNNAMED$25" @104
			    location   	(2179, 2462)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45D4323503D8"
			    roleview_list 	(list RoleViews
				(object RoleView "fake_deleted" @105
				    Parent_View 	@104
				    location   	(178, 251)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @106
					Parent_View 	@105
					location   	(2210, 2426)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	251
					justify    	0
					label      	"-fake_deleted"
					pctDist    	0.110664
					height     	37
					orientation 	0)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45D4323701E4"
				    client     	@104
				    supplier   	@93
				    vertices   	(list Points
					(2179, 2462)
					(2469, 2462))
				    line_style 	0)
				(object RoleView "$UNNAMED$26" @107
				    Parent_View 	@104
				    location   	(178, 251)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45D4323701E6"
				    client     	@104
				    supplier   	@97
				    vertices   	(list Points
					(2179, 2462)
					(1996, 2462)
					(1997, 2355))
				    line_style 	0)))
			(object Label @108
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45964CC70250"))
			    location   	(1824, 2316)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	255
				default_color 	FALSE)
			    nlines     	1
			    max_width  	12
			    justify    	1
			    label      	"protected")))))
	(object Class_Category "RoseDumpers"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractAttributeDumper.cpp::4571DF1E00CB,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractCategoryDumper.cpp::4571DD1A009C,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractClassDumper.cpp::4571DD3D03D8,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDependencyDumper.cpp::4571DFE7035B,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumpFactory.cpp::4571DD4D0399,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.cpp::4571D1A5009C,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractElementDumper.cpp::4571D3040222,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractOperationDumper.cpp::4571DF59030D,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractParameterDumper.cpp::4571DF8401B5,w:/MDProcess/MDAModel/RoseDumpers/RoseDiagramDumper.cpp::4571DFB400FA,w:/MDProcess/MDAModel/RoseDumpers/RoseHelper.cpp::4571F040008C,w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceDumper.cpp::4571D2DD0196,w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceObject.cpp::4571D2F502EE")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/MDProcess/MDAModel/RoseDumpers/RationalRoseTlb.h::4571DD8C003E,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractAttributeDumper.h::4571DF1E00CB,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractCategoryDumper.h::4571DD1A009C,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractClassDumper.h::4571DD3D03D8,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDependencyDumper.h::4571DFE7035B,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumpFactory.h::4571DD4D0399,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.h::4571D1A5009C,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractElementDumper.h::4571D3040222,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractOperationDumper.h::4571DF59030D,w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractParameterDumper.h::4571DF8401B5,w:/MDProcess/MDAModel/RoseDumpers/RoseDiagramDumper.h::4571DFB400FA,w:/MDProcess/MDAModel/RoseDumpers/RoseHelper.h::4571F040008C,w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceDumper.h::4571D2DD0196,w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceObject.h::4571D2F502EE"))
	    quid       	"4571D1820251"
	    stereotype 	"Unit"
	    visible_categories 	(list visibility_relationship_list
		(object Visibility_Relationship
		    quid       	"4571D1940128"
		    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers"
		    quidu      	"4571A092005D")
		(object Visibility_Relationship
		    quid       	"4571E8330177"
		    supplier   	"Logical View::shared::GCL::str"
		    quidu      	"4503DF990167")
		(object Visibility_Relationship
		    quid       	"4571F79B008C"
		    supplier   	"Logical View::shared::GCL::alg"
		    quidu      	"44FEE24001F5")
		(object Visibility_Relationship
		    quid       	"45757AA70088"
		    supplier   	"Logical View::shared::GCL::data"
		    quidu      	"44FEB6B3010B"))
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "RoseAbstractDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571D1A5009C_CUSTOM_INCLUDES*"
			    value      	(value Text "//#UC START# *4571D1A5009C_CUSTOM_INCLUDES*¤//#UC END# *4571D1A5009C_CUSTOM_INCLUDES*"))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571D1A5009C*"
			    value      	(value Text 
|//#UC START# *4571D1A5009C*¤public:¤	static const RoseAbstractDumper& get_model_tree_root ();¤	static void reset_model_tree_root ();¤	static void lock_reset ();¤	static void unlock_reset ();¤¤private:¤	static RoseAbstractDumper* s_model_tree_root;¤	static RoseAbstractDumper* s_void_rad;¤	static unsigned s_lock_reset;¤	static bool s_attempt_reset_while_locked;¤¤public:		¤	typedef std::list<const RoseAbstractDumper*> RADList;¤	¤	class IMissedGenFileDlg {¤	public:¤		virtual bool do_remove (const std::string& file_name) = 0;¤	};¤¤public:¤	static void set_choice_dlg (IChoiceDlg* dlg);¤	static void set_missed_gen_file_dlg (IMissedGenFileDlg* dlg);¤	static RADList& global_cats();¤	static DumpersFactory* dump_factory();	¤	static RoseAbstractDumper* find_in_tree (IRoseItemPtr item);	¤	static void reset_all ();¤¤private:¤	static void set_dumper_factory (DumpersFactory* factory);¤	static IMissedGenFileDlg* s_missed_gen_file_dlg;¤	static IChoiceDlg* s_choice_dlg;¤	static DumpersFactory* s_dump_factory;¤	static RADList s_global_cats;¤	static unsigned s_current_elem_order;¤¤public:	¤	RoseAbstractDumper (const RoseAbstractDumper* parent, IRoseItemPtr item, std::string st = "" );	¤	bool operator == (const AbstractDumperBase& c) const;¤¤	const RoseAbstractDumper* resolve (std::string type) const;¤	IRoseItemPtr rose_item () const;¤¤	virtual void link_suppliers ();¤	virtual std::string get_guid_str() const;¤	virtual const std::string& get_model_unique_id_str() const;¤	virtual std::string get_model_stereotype_str() const;¤	virtual std::string get_documentation_str () const;¤	virtual std::string get_initial_value_str () const;¤	virtual std::string get_name_str () const;¤	virtual std::string get_auto_counter_str () const;¤	virtual std::string get_visability_str() const;¤	virtual std::string get_root_dir(bool direct_get = false) const;¤	virtual std::string get_full_name() const;¤	virtual ADList* get_derived_impl() const;¤	virtual ADList* get_derived_over() const;¤	virtual std::string get_abstract_str() const;¤	virtual std::string get_target_stereotype_str() const;¤	virtual std::string get_stereotype_str() const;¤	virtual VisibilityType get_visibility_type () const;¤	virtual std::string get_native_path_str() const;¤¤	virtual Selections get_applied_gens () const;¤	static void force_applied_gens_to_all (bool set);¤¤	virtual std::string get_user_property_str (const std::string& prop_name) const;¤	void add_user_code (const GenID& gen_id, const UserCodeId& uc_id, const UserCode& uc) const;¤	UserCode get_user_code (const GenID& gen_id, const UserCodeId& uc_id) const;¤	unsigned elem_order () const;¤	void fill_sequence_data ();¤	bool RoseAbstractDumper::is_native (bool& wilth_parent) const;¤	¤public:¤	void write_template_error_log (const char* log) const;¤	void write_template_warning_log (const char* log) const;¤	void write_error_log ( std::string mess, bool fatal = false ) const;¤	void write_info_log ( std::string mess ) const;¤	void write_warning_log ( std::string mess ) const;	¤¤protected:¤	virtual bool compare (const ObjectTreeResolver* od) const;¤	virtual const ObjectTreeResolver* get_parent_category () const;¤	virtual const ObjectTreeResolver* get_nearest_container () const;¤	virtual const ObjectTreeResolver* get_parent_container () const;¤¤private:¤	typedef std::string SeqId;¤	struct MessTreeNode {¤		SeqId id;¤		IRoseMessagePtr mess;¤¤		MessTreeNode (const SeqId a_id);¤		MessTreeNode (const char* a_id);¤		MessTreeNode (const SeqId a_id, IRoseMessagePtr a_mess);¤		bool operator < (const MessTreeNode& c) const;¤¤		struct Sort: public std::binary_function<const MessTreeNode, const MessTreeNode, bool> {¤			bool operator()(const MessTreeNode* const x, const MessTreeNode* const y) const {¤				return *x < *y;¤			}¤		};¤	};¤	typedef GCL::Tree<MessTreeNode> MessTree;¤¤protected:¤	mutable std::string m_model_unique_id;¤¤private:¤	std::string m_model_stereotype;¤	mutable std::string m_abstract_type;¤	mutable std::string m_visability_type;¤	mutable char m_is_native;¤	mutable bool m_native_with_parent;¤¤	unsigned m_elem_order;¤¤	static bool s_force_applied_gens_to_all;¤¤public:¤¤	typedef std::map<const RoseAbstractDumper*, AbstractDumperBase::Selections> SelectionsMap;¤	static SelectionsMap s_selections_map;¤//#UC END# *4571D1A5009C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D1A5009C_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4571D1A5009C_CUSTOM_INCLUDES*¤#include <algorithm>¤#include <set>¤#include <strstream>¤#include <typeinfo>¤#include <direct.h>¤#include <objbase.h>¤#include <shlobj.h>¤¤#include "shared/GCL/os/FileOp.h"¤#include "shared/GCL/alg/container_op.h"¤#include "shared/GCL/str/str_conv.h"¤#include "shared/GCL/str/str_op.h"¤#include "shared/GCL/alg/sorting.h"¤//#UC END# *4571D1A5009C_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D1A5009C*"
			    value      	(value Text 
|//#UC START# *4571D1A5009C*¤RoseAbstractDumper::DumpersFactory* RoseAbstractDumper::s_dump_factory = NULL;¤RoseAbstractDumper::IChoiceDlg* RoseAbstractDumper::s_choice_dlg = NULL;¤RoseAbstractDumper::RADList RoseAbstractDumper::s_global_cats;¤unsigned RoseAbstractDumper::s_current_elem_order = 0;¤RoseAbstractDumper::IMissedGenFileDlg* RoseAbstractDumper::s_missed_gen_file_dlg;¤bool RoseAbstractDumper::s_force_applied_gens_to_all = false;¤unsigned RoseAbstractDumper::s_lock_reset = 0;¤bool RoseAbstractDumper::s_attempt_reset_while_locked = false;¤¤RoseAbstractDumper* RoseAbstractDumper::s_model_tree_root;¤RoseAbstractDumper* RoseAbstractDumper::s_void_rad;¤¤RoseAbstractDumper::SelectionsMap RoseAbstractDumper::s_selections_map;¤¤const RoseAbstractDumper& RoseAbstractDumper::get_model_tree_root () {¤	if (!s_model_tree_root) {¤		RoseAbstractDumper::reset_all ();¤		RoseAbstractDumper::has_error (false);	¤		IRoseCategoryPtr rootCat = RoseHelper::rose_app()->CurrentModel->GetRootCategory();¤		try {¤			Core::Aptr<DumpersFactory> df = new RoseAbstractDumpFactory;¤			RoseAbstractDumper::set_dumper_factory (df.in());¤			s_model_tree_root = df->create_by_root (rootCat);¤			s_model_tree_root->fill_sequence_data ();¤		} catch (AbstractDumperBase::FatalError& ex) {¤			RoseHelper::write_error_log("Loading model tree finished by Fatal error:");¤			RoseHelper::write_error_log(ex.mess().data());¤			throw FatalError("Fatal errors while loading model tree - see log for detail");			¤		} catch (...) {¤			throw FatalError("Unknown exception while loading model tree");			¤		}¤	}¤	return *s_model_tree_root;¤}¤¤void RoseAbstractDumper::lock_reset () {¤	s_lock_reset++;¤}¤¤void RoseAbstractDumper::unlock_reset () {¤	if (s_lock_reset) {¤		if (!--s_lock_reset) {¤			if (s_attempt_reset_while_locked) {¤				s_attempt_reset_while_locked = false;¤				RoseAbstractDumper::reset_model_tree_root ();¤			}¤		}		¤	}¤}¤¤void RoseAbstractDumper::reset_model_tree_root () {¤	if (s_lock_reset == 0) {¤		AbstractDumperBase::has_error(false);¤		RoseHelper::init_logs ();¤		s_model_tree_root = 0;¤	} else {¤		s_attempt_reset_while_locked = true;¤	}¤}¤¤void RoseAbstractDumper::set_choice_dlg (IChoiceDlg* dlg) {¤	s_choice_dlg = dlg;¤}¤¤void RoseAbstractDumper::set_missed_gen_file_dlg (IMissedGenFileDlg* dlg) {¤	s_missed_gen_file_dlg = dlg;¤}¤¤RoseAbstractDumper::RADList& RoseAbstractDumper::global_cats() {¤	return s_global_cats;¤}¤¤RoseAbstractDumper::DumpersFactory* RoseAbstractDumper::dump_factory() {¤	return s_dump_factory;¤}¤¤void RoseAbstractDumper::set_dumper_factory (DumpersFactory* factory) {¤	s_dump_factory = factory;¤}¤¤RoseAbstractDumper* RoseAbstractDumper::find_in_tree (IRoseItemPtr item) {¤	RoseAbstractDumper* ret = NULL;¤	if (s_tree) {¤		if (item != NULL) {¤			class TempOD : public RoseAbstractElementDumper {¤			public:¤				TempOD ( IRoseItemPtr item ) : RoseAbstractElementDumper (NULL, item) {¤					this->own_output(false);¤				}¤				void link_suppliers () {¤				}	¤				std::string get_model_class_str() const {¤					return "Temp";¤				}¤			};¤¤			TempOD temp (item);¤			const ObjectTreeResolver** otr = s_tree->find(&temp);¤			if ( otr ) {¤				return const_cast<RoseAbstractDumper*>(dynamic_cast <const RoseAbstractDumper*> (*otr));¤			} else {¤				return NULL;¤			}¤		} else {¤			return s_void_rad;¤		}¤	} ¤	return ret;¤}¤¤void RoseAbstractDumper::reset_all () {¤	if (s_tree) {¤		try {¤			for ( ObjectTree::iterator it = s_tree->begin(); it != s_tree->end(); it++ ) {¤				try {¤					ObjectTreeResolver* p = const_cast<ObjectTreeResolver*>(*(*it));¤					if (p) {¤						delete p;¤					}¤				} catch (...) {¤					assert (0);¤				}¤			}¤			delete s_tree;¤		} catch (...) {¤		}¤		s_tree = NULL;¤	}¤¤	//s_stat.reset();¤	RoseHelper::clear_incremented_counters ();¤	s_all_suppliers_info.clear();¤	s_model_main_element = 0;¤	s_void_rad = 0;¤	s_selections_map.clear ();¤	AbstractDumper::s_is_fixed_type_map.clear ();¤}¤¤///////////////////////////////////////////////////////////////////////¤// RoseAbstractDumper¤///////////////////////////////////////////////////////////////////////¤RoseAbstractDumper::RoseAbstractDumper (const RoseAbstractDumper* parent, IRoseItemPtr item, std::string st )¤	: m_rose_item(item)¤	, m_model_stereotype (st)¤	, m_elem_order(s_current_elem_order++)¤	, m_is_native (2)¤	, m_native_with_parent (false)¤{	¤	if (m_model_stereotype == "") {¤		m_model_stereotype = RoseHelper::get_gen_stereotype(m_rose_item);¤	}¤	AbstractDumper::init (parent);¤¤	if (s_model_main_element == 0) {¤		if (RoseHelper::is_it_main_model_element(m_rose_item)) {¤			s_model_main_element = this;¤		}¤	}¤	if (s_void_rad == 0) {¤		if (item->Name == _bstr_t("void") && item->Stereotype == _bstr_t("UMLPrimitive")) {¤			s_void_rad = this;¤		}¤	}¤}¤¤void RoseAbstractDumper::link_suppliers () {¤	GCL::StrVector set_e = GCL::split_string_by((char*) this->rose_item()->GetPropertyValue(TOOL_NAME, PROP_ATTR_SET_RAISES), ',');¤	GCL::StrVector get_e = GCL::split_string_by((char*) this->rose_item()->GetPropertyValue(TOOL_NAME, PROP_ATTR_GET_RAISES), ',');¤¤	GCL::StrVector::iterator it;¤	for (it = set_e.begin(); it != set_e.end(); it++) {¤		std::string uid = (*it);¤		IRoseItemPtr item = this->rose_item()->Model->FindClassWithID (uid.data());¤		if (item != 0) {¤			this->add_supplier (RoseAbstractDumper::find_in_tree (item), ST_NAVIGABLE, ST_SET_EXCEPTION );		¤		}¤	}¤	for (it = get_e.begin(); it != get_e.end(); it++) {¤		std::string uid = (*it);¤		IRoseItemPtr item = this->rose_item()->Model->FindClassWithID (uid.data());¤		if (item != 0) {¤			this->add_supplier (RoseAbstractDumper::find_in_tree (item), ST_NAVIGABLE, ST_GET_EXCEPTION );		¤		}¤	}¤}¤¤unsigned RoseAbstractDumper::elem_order () const {¤	return m_elem_order;¤}¤¤std::string RoseAbstractDumper::get_root_dir (bool direct_get) const {¤	if (direct_get) {¤		 std::string ret = RoseHelper::get_root_dir (m_rose_item);¤		 if (ret != "") {¤			 return ret;¤		 } else {¤			 return this->get_root_dir (false);¤		 }¤	}¤¤	if (this->get_template_body().use_current_root && this != AbstractDumperBase::s_model_main_element) {¤		return AbstractDumperBase::s_model_main_element->get_root_dir();¤	} else {¤		if (this->get_template().main_st) {¤			std::string ret = RoseHelper::get_root_dir (m_rose_item);¤			if (ret == "") {¤				std::string str ("Main element \"" + this->get_full_name() + "\": must specify generation root dir (check MDA property)");¤				throw FatalError (str);¤			}¤			return ret;¤		} else if (this->parent()) {¤			return this->parent()->get_root_dir();¤		} else {¤			assert (0);¤			return "";¤		}¤	}¤}¤¤void RoseAbstractDumper::fill_sequence_data () {¤	IRoseCategoryPtr root = RoseHelper::rose_app()->CurrentModel->GetRootCategory();¤	IRoseCategoryCollectionPtr cats = root->GetAllCategories();¤¤	for (int i=1; i < cats->Count+1; i++) {¤		IRoseScenarioDiagramCollectionPtr col = cats->GetAt(i)->GetScenarioDiagrams();¤		IRoseClassCollectionPtr classes = cats->GetAt(i)->GetClasses();¤		IRoseClassPtr usecase = 0;¤		for (int ii=1; ii < col->Count+1; ii++) {¤			IRoseScenarioDiagramPtr sd = col->GetAt(ii);¤			TRACE ("%s\n", (const char*) sd->Name);¤¤			for (int iii = 1; iii < classes->Count + 1; iii++) {¤				if (classes->GetAt (iii)->Name == sd->Name) {¤					usecase = classes->GetAt (iii);¤					break;¤				}¤			}¤¤			if (usecase == 0) {¤				TRACE (("Error - unlinked sequence diagram\n"));¤				return;¤			}¤¤			const RoseAbstractDumper* usecase_ad = RoseAbstractDumper::find_in_tree (usecase);¤			GDS_ASSERT (usecase_ad);¤			¤			IRoseItemCollectionPtr items = sd->GetItems();¤¤			for (int ll=1; ll<items->Count + 1; ll++) {				¤				IRoseObjectInstancePtr oi = items->GetAt(ll);¤				if (oi) {¤					IRoseClassPtr cls = oi->GetClass();¤					if (cls != 0) {¤						if (cls->Stereotype != _bstr_t("UseCase") && cls->Stereotype != _bstr_t("Actor")) {¤							RoseAbstractDumper* cls_ad = RoseAbstractDumper::find_in_tree (cls);¤							cls_ad->add_supplier (usecase_ad, ST_NAVIGABLE, /*ST_SEQ_LINK_DEP*/ ST_LINK_DEP);¤						} else {¤							// нужно проверять определеня ли прямая зависимость на диаграмме прецедентов¤						}¤					}¤				}¤			}¤¤			/*¤			//fill tree¤			MessTree tree ("0");¤			¤			for (int ll=1; ll<mesages->Count+1; ll++) {				¤				IRoseMessagePtr message = mesages->GetAt(ll);¤				SeqId mess_id = std::string("0.") + (char*)message->GetSequenceInformation();¤				¤				GCL::StrVector ids = GCL::split_string_by(mess_id.c_str(), '.');¤				ids.pop_back();¤				SeqId parent_id = GCL::merge_string_and_sub_string (ids, ".");¤				¤				try {¤					tree.add_child(parent_id, MessTreeNode(mess_id, message));			¤				} catch (...) {¤					std::string mess = "Inavalid sequence diagram (";¤					mess += (char*)sd->GetQualifiedName();¤					mess += ")";¤					write_error_log (mess);¤					return;¤				}¤			}¤¤			MessTree::iterator it = tree.begin();¤			it++;¤			for (; it != tree.end(); it++) {¤				const RoseAbstractDumper* op = RoseAbstractDumper::find_in_tree ((*it)->mess->GetOperation());¤¤				if (op) {¤					ADVector aads;¤					MessTree::Items ch = tree.childs(**it);¤					¤					std::sort(ch.begin(), ch.end(), MessTreeNode::Sort());¤					for (MessTree::Items::iterator it2 = ch.begin(); it2 != ch.end(); it2++) {¤						AbstractDumper_box aad = new RoseSequenceDumper((*it2)->mess);¤						aads.push_back(aad);¤					}¤					const_cast<RoseAbstractDumper*>(op)->add_sequence (aads);¤				}¤			}*/¤		}¤	}¤}¤¤void RoseAbstractDumper::write_template_error_log (const char* log) const {¤	AbstractDumperBase::has_error(true);¤	std::string str ("CONSTRAINT ERROR: ");¤	str += log;¤	¤	RoseHelper::write_error_log (str.data());¤	this->write_debug_log (str);	¤}¤¤void RoseAbstractDumper::write_template_warning_log (const char* log) const {¤	std::string str ("CONSTRAINT WARNING: ");¤	str += log;¤	¤	RoseHelper::write_warning_log (str.data());¤	this->write_debug_log (str);	¤}¤¤void RoseAbstractDumper::write_error_log (std::string mess, bool fatal) const {¤	AbstractDumperBase::has_error(true);¤	std::string str ("ERROR: " + this->get_full_name() + ": " + mess);¤	¤	if (fatal) {¤		throw FatalError (str);¤	} else {¤		RoseHelper::write_error_log (str.data());¤		this->write_debug_log (str);¤	}¤}¤¤void RoseAbstractDumper::write_info_log (std::string mess) const {¤	std::string str ("INFO: " + this->get_full_name() + ": " + mess);¤	RoseHelper::write_info_log(str.data());¤	this->write_debug_log (str);	¤}¤¤void RoseAbstractDumper::write_warning_log (std::string mess) const {¤	std::string str ("WARNING: " + this->get_full_name() + ": " + mess);¤	RoseHelper::write_warning_log(str.data());¤	this->write_debug_log (str);	¤}¤¤IRoseItemPtr RoseAbstractDumper::rose_item () const {¤	return m_rose_item;¤}¤¤std::string RoseAbstractDumper::get_full_name() const {¤	std::string ret;¤	¤	ADList_aptr parents;¤	try {¤		parents = this->get_parents();		¤	} catch (...) {¤	}	¤	parents->push_front(this);¤	¤	for (ADList::reverse_iterator it = parents->rbegin(); it != parents->rend(); it++) {¤		bool reg_par = (*it)->am_i_registred();¤		if (!reg_par) ret += "[";¤		ret += (*it)->get_name_str();¤		if (!reg_par) ret += "]";¤		if (std::distance (it, parents->rend()) > 1) ret += "::";¤	}¤¤	return ret;	¤}¤¤bool RoseAbstractDumper::operator == (const AbstractDumperBase& c) const {¤	bool ret = false;¤	const RoseAbstractDumper* rad = dynamic_cast<const RoseAbstractDumper*>(&c);¤	if (rad) ret = (this->rose_item()->GetUniqueID() == rad->rose_item()->GetUniqueID());¤	return ret;¤}¤¤bool RoseAbstractDumper::compare (const ObjectTreeResolver* od) const {¤	const RoseAbstractDumper* rad;¤	try {¤		rad = dynamic_cast<const RoseAbstractDumper*>(od);¤	} catch (std::bad_cast& ex) {¤		ex.what();¤	}¤¤	if (!rad) return true;	¤	//return this->rose_item()->GetUniqueID() < rad->rose_item()->GetUniqueID();¤	return get_model_unique_id_str() < rad->get_model_unique_id_str();¤}¤	¤std::string RoseAbstractDumper::get_initial_value_str () const {¤	std::string ret;¤	return ret;¤}¤¤std::string RoseAbstractDumper::get_documentation_str () const {¤	std::string ret;¤	std::string doc = (char*)m_rose_item->GetDocumentation();¤	for (std::string::iterator it = doc.begin(); it != doc.end(); it++) {¤		if (*it == 10) {¤			ret += ' ';¤		} else if (*it == 13) {¤		} else {¤			ret += *it;¤		}¤		¤	}¤¤	return ret;¤}¤¤¤std::string RoseAbstractDumper::get_name_str() const {¤	return (char*)m_rose_item->Name;¤}¤¤std::string RoseAbstractDumper::get_auto_counter_str() const {¤	return RoseHelper::get_auto_counter(m_rose_item);¤}¤¤¤std::string RoseAbstractDumper::get_user_property_str (const std::string& prop_name) const {¤	std::string ret = (char*) m_rose_item->GetPropertyValue (USER_PROP_NAME, prop_name.data());¤	if (ret == "") {¤		ret = RoseAbstractDumper::get_template (this->get_model_stereotype_str()).user_properties[prop_name].def_value;¤	}¤	return ret;¤}¤¤ObjectTreeResolver::VisibilityType RoseAbstractDumper::get_visibility_type () const {¤	if (m_visability_type == "") {¤		m_visability_type = RoseHelper::get_visability_type(m_rose_item);¤	}¤¤	if (m_visability_type == "PublicAccess") {¤		return VT_PUBLIC;¤	} else if (m_visability_type == "ProtectedAccess") {¤		return VT_PROTECTED;¤	} else if (m_visability_type == "PrivateAccess") {¤		return VT_PRIVATE;¤	} else if (m_visability_type == "ImplementationAccess") {¤		return VT_IMPL;¤	} else {¤		assert (0);¤		return VT_PUBLIC;¤	}¤}¤¤std::string RoseAbstractDumper::get_visability_str() const {¤	if (m_visability_type == "") {¤		m_visability_type = RoseHelper::get_visability_type(m_rose_item);¤	}¤	return m_visability_type;¤}¤¤const std::string& RoseAbstractDumper::get_model_unique_id_str() const {¤	if (m_model_unique_id == "") {¤		m_model_unique_id = (char*)m_rose_item->GetUniqueID();¤	}¤	return m_model_unique_id;¤}¤¤std::string RoseAbstractDumper::get_guid_str() const {	¤	std::string ret;¤¤	ret = this->rose_item()->GetPropertyValue(TOOL_NAME, "OS_GUID");¤	¤	if (ret == "") {¤		GUID guid;¤		CoCreateGuid (&guid);¤		LPOLESTR str;¤		StringFromCLSID (guid, &str);¤		char _str[256];¤		WideCharToMultiByte( CP_ACP, 0, str, -1, _str, 256, NULL, NULL );		¤		CoTaskMemFree(str);¤		¤		ret = _str+1;¤		ret.resize (ret.size()-1);¤		this->rose_item()->CreateProperty(TOOL_NAME, "OS_GUID", ret.data(), "String");¤	}¤	return ret;¤}¤¤std::string RoseAbstractDumper::get_model_stereotype_str() const {¤	return m_model_stereotype;¤}¤¤const RoseAbstractDumper* RoseAbstractDumper::resolve (std::string type) const {¤	//TRACE ("RoseAbstractDumper[%s]::resolve (%s)\n", this->get_full_name().data(), type.data());¤¤	const RoseAbstractDumper* ret = NULL;¤    if ( type == "" ) {¤		if (!this->is_allow_empty_target()) {¤			this->write_error_log ("Не определенный тип, использован void по умолчанию");¤		}¤		type = "void";¤    }   ¤¤    // chek for linked item¤    _bstr_t prop_linkeditem (PROP_LINKEDITEM);¤    prop_linkeditem += type.data ();¤    _bstr_t linked_uid = this->m_rose_item->GetPropertyValue (TOOL_NAME, prop_linkeditem);¤    if (linked_uid == _bstr_t ("")) {¤		linked_uid = this->m_rose_item->GetPropertyValue (TOOL_NAME, PROP_LINKEDITEM);¤    }¤    IRoseClassPtr linked_cls = this->m_rose_item->Model->FindClassWithID (linked_uid);¤    if (linked_cls != NULL && !strcmp ((char*)linked_cls->Name, type.data())) {¤		ret = RoseAbstractDumper::find_in_tree(linked_cls);¤    } else {¤		// try to resolve		¤		RADList cats_in_scope;¤		¤		// collect pakage of visibilty		¤		const RoseAbstractDumper* owner_cat = dynamic_cast<const RoseAbstractDumper*>(this->get_parent_category());¤		const RoseAbstractDumper* self_class = dynamic_cast<const RoseAbstractDumper*>(this->get_parent_container());¤		if (self_class) {¤			cats_in_scope.push_back (self_class);			¤¤			// owner's parent cats¤			while (self_class = dynamic_cast<const RoseAbstractDumper*>(self_class->parent())) {¤				cats_in_scope.push_back (self_class);¤			}¤		}		¤		¤		// global cats¤		cats_in_scope.insert(¤			cats_in_scope.end(), ¤			RoseAbstractDumper::s_global_cats.begin(), ¤			RoseAbstractDumper::s_global_cats.end()¤		);¤¤		if (owner_cat) {			¤			// owner cat dependences¤			OTRSet deps = owner_cat->get_supplier_by_stereotype (ST_LINK_DEP);			¤			for (OTRSet::const_iterator it = deps.begin(); it != deps.end(); it++) {¤				const RoseAbstractDumper* dep_cat = dynamic_cast<const RoseAbstractDumper*>(*it);¤				if (dep_cat) cats_in_scope.push_back (dep_cat);				¤			}¤			¤			// owner's parent cats¤			//while (owner_cat = dynamic_cast<const RoseAbstractDumper*>(owner_cat->parent())) {¤			//	cats_in_scope.push_back (owner_cat);¤			//}¤		}¤¤		// expand to all nested class¤		{¤			class collect_all_nested_class {¤			public:¤				collect_all_nested_class (const RoseAbstractDumper* rad, RADList& res) {¤					IRoseItemPtr ri = rad->rose_item ();¤					IRoseClassPtr rcls = (IRoseClassPtr)ri;¤					IRoseCategoryPtr rc = (IRoseCategoryPtr)ri;¤¤					if (rcls) {¤						IRoseClassCollectionPtr cc = rcls->GetNestedClasses();¤						for (int i = 1; i < cc->Count+1; i++) {¤							if (cc->GetAt(i)->GetNestedClasses()->Count > 0) {¤								const RoseAbstractDumper* rad_res = RoseAbstractDumper::find_in_tree(cc->GetAt(i));¤								res.push_back (rad_res);¤								collect_all_nested_class (rad_res, res);¤							}¤						}¤					} else if (rc) {¤						IRoseClassCollectionPtr cc = rc->Classes;¤						for (int i = 1; i < cc->Count+1; i++) {¤							if (cc->GetAt(i)->GetNestedClasses()->Count > 0) {¤								const RoseAbstractDumper* rad_res = RoseAbstractDumper::find_in_tree(cc->GetAt(i));¤								res.push_back (rad_res);¤								collect_all_nested_class (rad_res, res);¤							}¤						}¤					}					¤				}¤			};¤¤			RADList all_nested;¤¤			for (RADList::const_iterator it = cats_in_scope.begin(); it != cats_in_scope.end(); it++) {¤				collect_all_nested_class (*it, all_nested);¤			}¤¤			cats_in_scope.insert(cats_in_scope.end(), all_nested.begin(), all_nested.end());¤		}¤		¤		typedef std::map<std::string, const RoseAbstractDumper*> TypeMap;¤		TypeMap types;¤¤		for (RADList::const_iterator it = cats_in_scope.begin(); it != cats_in_scope.end(); it++) {¤			ObjectTree::Items items = s_tree->childs (*it);¤			for (ObjectTree::Items::iterator it2 = items.begin(); it2 != items.end(); it2++ ) {¤				const RoseAbstractDumper* cls = dynamic_cast<const RoseAbstractDumper*>(*(*it2));¤				//TRACE ("RoseAbstractDumper::resolve - chek for %s\n", cls->get_name().data());¤				if (cls->get_name_str() == type) {¤					std::string full_name = cls->get_full_name();¤					TypeMap::value_type vt (full_name, cls);¤					types.insert(vt);					¤				}¤			}¤		}¤¤		if (types.size() > 1) {¤			TypeMap cls_types;¤			// remove not Classes¤			for (TypeMap::const_iterator it = types.begin(); it != types.end(); it++) {¤				if (it->second->rose_item()->IsClass("Class")) {¤					cls_types[it->first]=it->second;¤				}¤			}¤			types = cls_types;¤		}¤		¤		if (types.size() > 1) {¤			GCL::StrSet choise_strings;¤			for (TypeMap::const_iterator it = types.begin(); it != types.end(); it++) {¤				choise_strings.insert(it->first);¤			}¤¤			std::string choice = s_choice_dlg->make_choice (choise_strings, this->get_full_name());¤			¤			if (choice == "") {¤				this->write_error_log (¤					std::string("Не могу точно определить связанный тип ") ¤					+ type¤				);¤				ret = NULL;¤			} else {¤				ret = types[choice];¤¤				this->write_info_log (¤					std::string("Тип" )¤					+ type¤					+ " был связан с элементом: "¤					+ choice¤					+ "(" ¤					+ (char*)ret->m_rose_item->GetUniqueID() ¤					+ ")" ¤				);¤¤				RoseHelper::override_property(m_rose_item, TOOL_NAME, prop_linkeditem, ret->m_rose_item->GetUniqueID());¤			}¤		} else if (types.size() == 1 ) {		¤			ret = (*types.begin()).second;¤		} else {¤			this->write_error_log (¤				std::string("Не могу найти связанный тип ") ¤				+ type¤			);¤			ret = NULL;¤		}¤	}¤¤	return ret;¤}¤¤RoseAbstractDumper::MessTreeNode::MessTreeNode(const SeqId a_id) : id(a_id), mess(NULL) {¤}¤¤RoseAbstractDumper::MessTreeNode::MessTreeNode (const char* a_id) : id(a_id), mess(NULL) {¤}¤¤RoseAbstractDumper::MessTreeNode::MessTreeNode (const SeqId a_id, IRoseMessagePtr a_mess) : id(a_id), mess(a_mess) {¤}¤¤bool RoseAbstractDumper::MessTreeNode::operator < (const MessTreeNode& c) const {¤	return id < c.id;¤}¤¤const ObjectTreeResolver* RoseAbstractDumper::get_parent_category () const {	¤	const RoseAbstractDumper* ret = this;¤	bool is_cat = false;¤	do {¤		ret = dynamic_cast<const RoseAbstractDumper*>(ret->parent());¤		if (ret) {¤			is_cat = ret->rose_item()->IsClass("Category") != 0;¤		}¤	} while (!is_cat && ret);¤	return ret;¤}¤¤const ObjectTreeResolver* RoseAbstractDumper::get_parent_container () const {¤	const RoseAbstractDumper* ret = this;¤	bool is_cont = false;¤	do {¤		ret = dynamic_cast<const RoseAbstractDumper*>(ret->parent());¤		if (ret) {¤			is_cont = ret->rose_item()->IsClass("Category") != 0 || ret->rose_item()->IsClass("Class") != 0;¤		}¤	} while (!is_cont && ret);¤	return ret;¤}¤¤const ObjectTreeResolver* RoseAbstractDumper::get_nearest_container () const {¤	if (this->rose_item()->IsClass("Class") || this->rose_item()->IsClass("Category")) {¤		return this;¤	}¤¤	const RoseAbstractDumper* parent = dynamic_cast<const RoseAbstractDumper*>(this->parent());¤	if (parent == NULL) {¤		return NULL;¤	}¤¤	return parent->get_nearest_container();¤}¤¤void RoseAbstractDumper::add_user_code (const GenID& gen_id, const UserCodeId& uc_id, const UserCode& uc) const {¤	GCL::StrVector strs = GCL::split_string_by_fragment (uc_id.data(), '*', '*');¤	std::string guid = strs[0];¤	guid.erase (12);¤	IRoseItemPtr item = m_rose_item->Model->FindItemWithID(guid.data());¤	if (item != NULL) {¤		std::string prop_id = gen_id + ":" + uc_id;¤¤		std::string s;¤		s += char(164);¤¤		std::string uc_to_save;¤		std::string uc_to_save_2;¤¤		GCL::replace_char(uc, uc_to_save, 10, s);¤		GCL::replace_char(uc_to_save, uc_to_save_2, 13, "");		¤¤		RoseHelper::override_property(item, TOOL_NAME, prop_id.data(), uc_to_save_2.data());¤		¤		{¤			std::string ch = (char*)item->GetPropertyValue (TOOL_NAME, prop_id.data());¤			¤			GCL::replace_char(ch, uc_to_save_2, char(164), "\n");¤			if (uc_to_save_2 != uc) {¤				throw FatalError ("Text Changed in Rose Model");¤			}¤		}¤		¤	} else {¤		//missed item for UC¤	}¤}¤¤AbstractDumperBase::UserCode RoseAbstractDumper::get_user_code (const GenID& gen_id, const UserCodeId& uc_id) const {¤	UserCode  ret;¤	if (!AbstractDumperBase::s_options.suppress_user_code) {¤		GCL::StrVector strs = GCL::split_string_by_fragment (uc_id.data(), '*', '*');¤		std::string guid = strs[0];¤		guid.erase (12);¤		IRoseItemPtr item = m_rose_item->Model->FindItemWithID(guid.data());¤¤		if (item != NULL) {¤			std::string prop_id = gen_id + ":" + uc_id;¤			std::string uc = (char*)item->GetPropertyValue (TOOL_NAME, prop_id.data());¤¤			GCL::replace_char(uc, ret, char(164), "\n");			¤		} else {¤			//missed item for UC¤		}			¤	}¤	return ret;¤}¤¤bool RoseAbstractDumper::is_native (bool& wilth_parent) const {¤	if (m_is_native == 2) {¤		if (RoseHelper::get_is_native_with_parent (m_rose_item, m_native_with_parent)) {¤			m_is_native = 1;¤		} else {¤			m_is_native = 0;			¤		}¤	}¤	wilth_parent = m_native_with_parent;¤	return m_is_native;¤}¤¤AbstractDumperBase::ADList* RoseAbstractDumper::get_derived_impl() const {¤	ADList* ret = new ADList ();¤¤	std::string impl_sel_type = (char*) this->rose_item()->GetPropertyValue(TOOL_NAME, PROP_IMPLEMENT_SELECT_TYPE);¤	if (impl_sel_type == "include") {¤		GCL::StrVector impl = GCL::split_string_by((char*) this->rose_item()->GetPropertyValue(TOOL_NAME, PROP_DERIVED_IMPLEMENT), ',');¤¤		for (GCL::StrVector::iterator it = impl.begin(); it != impl.end(); it++) {¤			std::string uid = (*it);¤			IRoseItemPtr item = this->rose_item()->Model->FindItemWithID (uid.data());¤			if (item) {¤				const RoseAbstractDumper* f = RoseAbstractDumper::find_in_tree (item);¤				if (f) {¤					ret->push_back(f);¤				}¤			}¤		}¤	} else if (impl_sel_type == "exclude") {¤		GCL::StrSet all_abstr;¤		RoseHelper::find_all_derived_abstract (this->rose_item(), all_abstr);¤¤		GCL::StrSet all_impl;¤		RoseHelper::find_all_derived_impl (this->rose_item(), all_impl);¤		GCL::StrVector impl = GCL::split_string_by((char*) this->rose_item()->GetPropertyValue(TOOL_NAME, PROP_DERIVED_IMPLEMENT), ',');¤		¤		for (GCL::StrSet::iterator it = all_abstr.begin(); it != all_abstr.end(); it++) {¤			std::string uid = (*it);¤			if (¤				std::find (all_impl.begin(), all_impl.end(), uid) == all_impl.end()¤				&& std::find (impl.begin(), impl.end(), uid) == impl.end()¤			) {¤				IRoseItemPtr item = this->rose_item()->Model->FindItemWithID (uid.data());¤				if (item) {¤					ret->push_back(RoseAbstractDumper::find_in_tree (item));¤				}¤			}			¤		}¤	} else {¤		GCL::StrSet all;¤		RoseHelper::find_all_derived_abstract (this->rose_item(), all);¤¤		GCL::StrSet all_impl;¤		RoseHelper::find_all_derived_impl (this->rose_item(), all_impl);¤		¤		for (GCL::StrSet::iterator it = all.begin(); it != all.end(); it++) {¤			std::string uid = (*it);¤¤			if (¤				std::find (all_impl.begin(), all_impl.end(), uid) == all_impl.end()¤			) {¤				IRoseItemPtr item = this->rose_item()->Model->FindItemWithID (uid.data());¤				if (item) {¤					ret->push_back(RoseAbstractDumper::find_in_tree (item));¤				}¤			}¤		}¤	}¤¤	return ret;¤}¤¤AbstractDumperBase::ADList* RoseAbstractDumper::get_derived_over() const {¤	ADList* ret = new ADList ();¤¤	RoseHelper::RoseItemMap all_derived_impl = RoseHelper::find_all_derived_impl (this->rose_item());¤	GCL::StrVector overloaded = GCL::split_string_by((char*) this->rose_item()->GetPropertyValue(TOOL_NAME, PROP_DERIVED_OVERLOAD), ',');¤		¤	RoseHelper::RoseItemMap::iterator it;¤	for (it = all_derived_impl.begin(); it != all_derived_impl.end(); it++) {¤		if (std::find(overloaded.begin(), overloaded.end(), (*it).second) != overloaded.end() ) {¤			std::string uid = it->second;¤			IRoseItemPtr item = this->rose_item()->Model->FindItemWithID (uid.data());¤			if (item) {¤				ret->push_back(RoseAbstractDumper::find_in_tree (item));¤			}¤		}¤	}¤	¤	return ret;¤}¤¤¤std::string RoseAbstractDumper::get_abstract_str () const {¤	if (m_abstract_type == "") {¤		m_abstract_type = RoseHelper::get_abstraction_type(m_rose_item);¤	}¤	¤	return m_abstract_type;¤}¤¤std::string RoseAbstractDumper::get_target_stereotype_str() const {¤	return RoseHelper::get_target_stereotype(m_rose_item);¤}¤¤std::string RoseAbstractDumper::get_stereotype_str() const {¤	return (char*) m_rose_item->Stereotype;¤}¤¤struct FlaterEachFunc {¤	struct CollectEachFunc {¤		void each_func (const GCL::StaticNode* item, RoseHelper::Selections& res) const {¤			if (!item->has_children()) {¤				res.insert(dynamic_cast<const AbstractDumperBase::GenTreeItem*>(item)->name());¤			}¤		}¤	};¤¤	FlaterEachFunc (AbstractDumperBase::Selections& sels) : selsected_nodes (sels) {¤	}¤	¤	void each_func (const GCL::StaticNode* item, RoseHelper::Selections& flat_child_gens) const {¤		if (std::find(selsected_nodes.begin(), selsected_nodes.end(), dynamic_cast<const AbstractDumperBase::GenTreeItem*>(item)->name()) != selsected_nodes.end()) {¤			item->for_each (CollectEachFunc(), flat_child_gens);¤		}		¤	}¤¤	AbstractDumperBase::Selections& selsected_nodes;¤};¤¤void RoseAbstractDumper::force_applied_gens_to_all (bool set) {¤	s_force_applied_gens_to_all = set;¤}¤¤AbstractDumperBase::Selections RoseAbstractDumper::get_applied_gens () const {¤	//Core::GDS::StopWatchEx sw ("RoseAbstractDumper::get_applied_gens ()");	¤	SelectionsMap::iterator current_selections = s_selections_map.find (this);¤	if (current_selections == s_selections_map.end ()) {¤		AbstractDumperBase::Selections ret;¤		if (s_force_applied_gens_to_all) {¤			ret.insert ("All");¤		} else {¤			//_bstr_t prop_key = PROP_APPLGEN;¤			//prop_key += m_rose_item->GetUniqueID();¤			//std::string merged_sels = RoseHelper::get_main_model_element()->GetPropertyValue(TOOL_NAME, prop_key);¤			//if (merged_sels == "") {¤				std::string merged_sels = m_rose_item->GetPropertyValue(TOOL_NAME, PROP_APPLGEN);¤			//}¤			ret = GCL::split_string_by_sub_string_uniq (merged_sels.data(), "|");¤¤			if (ret.find("none") != ret.end()) {¤				ret.clear();¤				ret.insert ("none");¤			} else {¤				if (ret.size() == 0 || (ret.find("All") != ret.end())) {¤					const AbstractDumperBase* parent = this->parent();¤					if (parent) {¤						ret = parent->get_applied_gens();¤					} else {¤						if (ret.size() == 0) {¤							ret.insert ("All");¤						}¤					}¤				} else {¤					AbstractDumperBase::Selections flat_ret;¤					{¤						FlaterEachFunc fef (ret);¤						AbstractDumperBase::s_gen_tree->for_each (fef, flat_ret);¤					}¤					ret = flat_ret;¤¤					const AbstractDumperBase* parent = this->parent();¤					if (parent) {¤						AbstractDumperBase::Selections filt = parent->get_applied_gens();¤						¤						if (filt.size() == 0 || (filt.find("All") != filt.end())) {¤						} else if (filt.find("none") != filt.end()) {¤							ret.clear();¤							ret.insert ("none");¤						} else {¤							GCL::intersect(ret, filt);¤							if (!ret.size()) {¤								ret.insert ("none");¤							}¤						}¤					}¤				}¤			}¤		}¤		current_selections = s_selections_map.insert (¤		SelectionsMap::value_type (this, ret)¤		).first;¤	}¤	return current_selections->second;¤}¤¤std::string RoseAbstractDumper::get_native_path_str() const {¤	std::string prop_name = "NATIVE_PATH";¤	prop_name += s_current_map;¤¤	return (const char*)this->rose_item()->GetPropertyValue (TOOL_NAME, prop_name.data());¤}¤//#UC END# *4571D1A5009C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D1A5009C_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571D1A5009C_DESTR_BODY*¤	//#UC END# *4571D1A5009C_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumper.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"DerivedOverload"
			    value      	"459D2DD40228,459D2DA9011E")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ImplementSelectType"
			    value      	"all")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"OverloadSelectType"
			    value      	"include"))
		    quid       	"4571D1A5009C"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571D1D5000F"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper"
			    quidu      	"4571A2CB02DE"))
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571DCD300AB"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractElementDumper"
			    quidu      	"4571D3040222")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571DCE90251"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseSequenceDumper"
			    quidu      	"4571D2DD0196")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571DD090251"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::SyntaxDef"
			    quidu      	"4571A3B70109")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571DD6C0261"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumpFactory"
			    quidu      	"4571DD4D0399")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571DD720280"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractClassDumper"
			    quidu      	"4571DD3D03D8")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571DD760399"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractCategoryDumper"
			    quidu      	"4571DD1A009C"))
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "rose_item"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571F3F10186"
			    type       	"IRoseItemPtr"
			    quidu      	"4571DE0802BF"
			    Containment 	"By Value"))
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "DumpersFactory"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need assign op"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need copy ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need ref count"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need unsorted less"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"debug log"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"ifdef"
				    value      	"")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"local supervisor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need UC"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"no base class"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"non virtual base"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"singleton"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4571E05D02EE_CUSTOM_INCLUDES*"
				    value      	"//#UC START# *4571E05D02EE_CUSTOM_INCLUDES*¤//#UC END# *4571E05D02EE_CUSTOM_INCLUDES*")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4571E05D02EE*"
				    value      	"//#UC START# *4571E05D02EE*¤//#UC END# *4571E05D02EE*")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4571E05D02EE_DESTR_BODY*"
				    value      	(value Text 
|//#UC START# *4571E05D02EE_DESTR_BODY*¤	//#UC END# *4571E05D02EE_DESTR_BODY*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"h:*4571E05D02EE*"
				    value      	(value Text 
|//#UC START# *4571E05D02EE*¤	//#UC END# *4571E05D02EE*
				    )))
			    quid       	"4571E05D02EE"
			    documentation 	"Класс-фабрика создающий конкретный Dumper объект для класса по его стереотипу"
			    stereotype 	"SimpleClass"
			    operations 	(list Operations
				(object Operation "create_by_stereotype"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"abstract")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*4575AA4602EA_4571DD4D0399*"
					    value      	(value Text 
|//#UC START# *4575AA4602EA_4571DD4D0399*¤		RoseAbstractDumper* ret = NULL;¤¤	// check stereotype for existing	¤	if (!AbstractDumperBase::has_template(RoseHelper::create_gen_stereotype (cls))) {¤		if (¤			!cls->IsClass ("Parameter") ¤			&& !(cls->IsClass("Category") && RoseHelper::get_context (cls)->Stereotype == _bstr_t(""))¤		) {¤			std::string str ("ERROR: Unknown stereotype <<");¤			str += (const char*)cls->GetStereotype();¤			str += ">> on ";¤			str += (const char*)cls->IdentifyClass();¤			str += " element ";¤			str += RoseHelper::get_full_name (cls);¤			AbstractDumperBase::has_error(true);¤			RoseHelper::write_error_log(str.data());¤		}¤	}¤¤	std::string stereotype = RoseHelper::get_gen_stereotype(cls);¤¤	if (!AbstractDumperBase::get_template(stereotype).skiped_item) {¤		try {¤			if ( cls->IsClass ("Category") ) {¤				ret = new RoseAbstractCategoryDumper (&parent, (IRoseCategoryPtr)cls);¤			}¤¤			if ( cls->IsClass ("Class") ) {¤				ret = new RoseAbstractClassDumper (&parent, (IRoseClassPtr)cls);¤			} ¤¤			if ( cls->IsClass ("Attribute") || cls->IsClass ("Role") )  {				¤				ret = new RoseAbstractAttributeDumper (&parent, cls, RoseHelper::get_gen_stereotype(cls));¤			} ¤			¤			if ( cls->IsClass ("Operation") ) {¤				ret = new RoseAbstractOperationDumper (&parent, (IRoseOperationPtr)cls, RoseHelper::get_gen_stereotype(cls));¤			} ¤¤			if ( cls->IsClass ("Parameter") ) {¤				ret = new RoseAbstractParameterDumper (&parent, (IRoseParameterPtr)cls, RoseHelper::get_gen_stereotype(cls));¤			}¤¤			if ( cls->IsClass ("ClassDependency") ) {¤				ret = new RoseAbstractDependencyDumper (&parent, (IRoseClassDependencyPtr)cls, RoseHelper::get_gen_stereotype(cls));¤			}¤		} catch (ObjectTreeResolver::ObjectTree::AlreadyInTree& ) {¤			std::string str ("Duplicatede model id (");¤			str += cls->GetUniqueID();¤			str += ") for element ";¤			str += RoseHelper::get_full_name (cls);¤			str += " - check model integrity";¤			throw AbstractDumperBase::FatalError(str.data());¤		}¤	}¤	¤	return ret;¤	//#UC END# *4575AA4602EA_4571DD4D0399*
					    )))
				    quid       	"4575AA4602EA"
				    stereotype 	"chg"
				    parameters 	(list Parameters
					(object Parameter "parent"
					    quid       	"4575AAC700A8"
					    type       	"RoseAbstractDumper"
					    quidu      	"4571D1A5009C")
					(object Parameter "cls"
					    quid       	"4575AAC700E6"
					    type       	"IRoseItemPtr"
					    quidu      	"4571DE0802BF"))
				    result     	"RoseAbstractDumper"
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0
				    quidu      	"4571D1A5009C")
				(object Operation "create_by_root"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*4575AFA90396*"
					    value      	(value Text 
|//#UC START# *4575AFA90396*¤	throw Core::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4575AFA90396*
					    ))
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"abstract")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*4575AFA90396_4571DD4D0399*"
					    value      	(value Text 
|//#UC START# *4575AFA90396_4571DD4D0399*¤	if ( cls->IsClass ("Category") ) {¤		RoseAbstractDumper* ret = new RoseAbstractCategoryDumper (0, (IRoseCategoryPtr)cls);¤		ret->link_all_suppliers();¤		return ret;¤	} else {¤		assert (0);¤		return 0;¤	}¤	//#UC END# *4575AFA90396_4571DD4D0399*
					    )))
				    quid       	"4575AFA90396"
				    stereotype 	"chg"
				    parameters 	(list Parameters
					(object Parameter "cls"
					    quid       	"4575B28B0154"
					    type       	"IRoseItemPtr"
					    quidu      	"4571DE0802BF"))
				    result     	"RoseAbstractDumper"
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0
				    quidu      	"4571D1A5009C"))
			    abstract   	TRUE)
			(object Class "IChoiceDlg"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need assign op"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need copy ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need ref count"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need unsorted less"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"debug log"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"ifdef"
				    value      	"")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"local supervisor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need UC"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"no base class"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"non virtual base"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"singleton"
				    value      	"false"))
			    quid       	"457556EF0134"
			    stereotype 	"SimpleClass"
			    operations 	(list Operations
				(object Operation "make_choice"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"abstract")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"cpp:*457587CF00C7_457415BB033C*"
					    value      	(value Text 
|//#UC START# *457587CF00C7_457415BB033C*¤	m_data = ch_list;¤	m_for_item_name_str = for_item_name;¤	if (this->DoModal() == IDOK) {¤		return std::string(LPCTSTR(m_list_value));¤	} else {¤		return "";¤	}¤	//#UC END# *457587CF00C7_457415BB033C*
					    ))
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"TargetStereotype"
					    value      	"const"))
				    quid       	"457587CF00C7"
				    stereotype 	"chg"
				    parameters 	(list Parameters
					(object Parameter "ch_list"
					    quid       	"45758B5301FF"
					    type       	"StrSet"
					    quidu      	"44FEBE140197")
					(object Parameter "for_item_name"
					    quid       	"45758B53027C"
					    type       	"a-string"
					    quidu      	"452257A0036F"))
				    result     	"a-string"
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0
				    quidu      	"452257A0036F"))
			    abstract   	TRUE)
			(object Class "IRoseItemWrapper"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need assign op"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need copy ctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need init ctor"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need UC"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"need dctor"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4575AB0200E6_4575AB8F0309_LESS*"
				    value      	(value Text 
|//#UC START# *4575AB0200E6_4575AB8F0309_LESS*¤	return m_rose_item->GetUniqueID() < y.m_rose_item->GetUniqueID();¤	//#UC END# *4575AB0200E6_4575AB8F0309_LESS*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4575AB0200E6_INIT_CTOR_BASE_INIT*"
				    value      	(value Text 
|//#UC START# *4575AB0200E6_INIT_CTOR_BASE_INIT*¤	: m_rose_item(m_rose_item_)¤//#UC END# *4575AB0200E6_INIT_CTOR_BASE_INIT*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4575AB0200E6_INIT_CTOR*"
				    value      	(value Text 
|//#UC START# *4575AB0200E6_INIT_CTOR*¤	//#UC END# *4575AB0200E6_INIT_CTOR*
				    )))
			    quid       	"4575AB0200E6"
			    stereotype 	"Struct"
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "m_rose_item"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"4575AB380338"
				    type       	"IRoseItemPtr"
				    quidu      	"4571DE0802BF"
				    exportControl 	"Public"
				    Containment 	"By Value")))
			(object Class "IRoseItemPtr_vector"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4575AB60001B"
			    stereotype 	"Vector")))
		(object Class "RoseSequenceDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D2DD0196_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571D2DD0196_CUSTOM_INCLUDES*¤//#UC END# *4571D2DD0196_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D2DD0196*"
			    value      	"//#UC START# *4571D2DD0196*¤//#UC END# *4571D2DD0196*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D2DD0196_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571D2DD0196_DESTR_BODY*¤	delete m_reciver;¤	delete m_sender;¤	//#UC END# *4571D2DD0196_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571D2DD0196_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571D2DD0196_CUSTOM_INCLUDES*¤//#UC END# *4571D2DD0196_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571D2DD0196*"
			    value      	(value Text 
|//#UC START# *4571D2DD0196*¤public:¤	void write_template_error_log (const char* log) const {¤		assert (0);¤	}¤	void write_template_warning_log (const char* log) const {¤		assert (0);¤	}¤//#UC END# *4571D2DD0196*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceDumper.h"))
		    quid       	"4571D2DD0196"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571D2EE02FD"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSequenceDumper"
			    quidu      	"4571A360030D"))
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571DE7C029F"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseSequenceObject"
			    quidu      	"4571D2F502EE"))
		    operations 	(list Operations
			(object Operation "ctor"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4571E5130213_BASE_INIT*"
				    value      	"//#UC START# *4571E5130213_BASE_INIT*¤//#UC END# *4571E5130213_BASE_INIT*")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4571E5130213_BODY*"
				    value      	(value Text 
|//#UC START# *4571E5130213_BODY*¤	m_reciver = new RoseSequenceObject (mess->GetReceiverObject());¤	m_sender = new RoseSequenceObject (mess->GetSenderObject());¤	m_message = (char*) mess->Name;¤	//#UC END# *4571E5130213_BODY*
				    )))
			    quid       	"4571E5130213"
			    stereotype 	"ctor"
			    parameters 	(list Parameters
				(object Parameter "mess"
				    quid       	"4571E5230203"
				    type       	"IRoseMessagePtr"
				    quidu      	"4571E4FD0000"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0))
		    language   	"MDA Generator")
		(object Class "RoseSequenceObject"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D2F502EE_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571D2F502EE_CUSTOM_INCLUDES*¤//#UC END# *4571D2F502EE_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D2F502EE*"
			    value      	"//#UC START# *4571D2F502EE*¤//#UC END# *4571D2F502EE*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D2F502EE_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571D2F502EE_DESTR_BODY*¤	//#UC END# *4571D2F502EE_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571D2F502EE_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571D2F502EE_CUSTOM_INCLUDES*¤//#UC END# *4571D2F502EE_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571D2F502EE*"
			    value      	(value Text 
|//#UC START# *4571D2F502EE*¤public:¤	void write_template_error_log (const char* log) const {¤		assert (0);¤	}¤¤	void write_template_warning_log (const char* log) const {¤		assert (0);¤	}¤//#UC END# *4571D2F502EE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceObject.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseSequenceObject.h"))
		    quid       	"4571D2F502EE"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571D2FC0271"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSequenceObject"
			    quidu      	"4571A3770203"))
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571DEBC033C"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper"
			    quidu      	"4571D1A5009C"))
		    operations 	(list Operations
			(object Operation "ctor"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4571E4BC031C_BASE_INIT*"
				    value      	"//#UC START# *4571E4BC031C_BASE_INIT*¤//#UC END# *4571E4BC031C_BASE_INIT*")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4571E4BC031C_BODY*"
				    value      	(value Text 
|//#UC START# *4571E4BC031C_BODY*¤	IRoseClassPtr cls = obj->GetClass();	¤	m_class = RoseAbstractDumper::find_in_tree (cls);¤	m_name = (char*) obj->Name;¤	//#UC END# *4571E4BC031C_BODY*
				    )))
			    quid       	"4571E4BC031C"
			    stereotype 	"ctor"
			    parameters 	(list Parameters
				(object Parameter "obj"
				    quid       	"4571E4DB007D"
				    type       	"IRoseObjectInstancePtr"
				    quidu      	"4571E48201F4"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0))
		    language   	"MDA Generator")
		(object Class "RoseAbstractElementDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D3040222_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571D3040222_CUSTOM_INCLUDES*¤//#UC END# *4571D3040222_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D3040222*"
			    value      	(value Text 
|//#UC START# *4571D3040222*¤RoseAbstractElementDumper::RoseAbstractElementDumper (const RoseAbstractDumper* parent, IRoseItemPtr cls, std::string st ) ¤	: RoseAbstractDumper (parent, cls, st) ¤{¤}¤¤bool RoseAbstractElementDumper::is_it_first (const ObjectTreeResolver* od) const {¤	const RoseAbstractDumper* rad = dynamic_cast<const RoseAbstractDumper*>(od);¤	if (!rad) return false;¤	return (this->elem_order() > rad->elem_order());¤}¤¤//#UC END# *4571D3040222*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571D3040222_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571D3040222_DESTR_BODY*¤	//#UC END# *4571D3040222_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571D3040222_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571D3040222_CUSTOM_INCLUDES*¤//#UC END# *4571D3040222_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571D3040222*"
			    value      	(value Text 
|//#UC START# *4571D3040222*¤public:¤	RoseAbstractElementDumper (const RoseAbstractDumper* parent, IRoseItemPtr cls, std::string st = "" );	¤	virtual bool is_it_first (const ObjectTreeResolver* od) const;¤//#UC END# *4571D3040222*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractElementDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractElementDumper.h"))
		    quid       	"4571D3040222"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571D30B0196"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper"
			    quidu      	"4571D1A5009C"))
		    language   	"MDA Generator")
		(object Class "RoseAbstractCategoryDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD1A009C_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DD1A009C_CUSTOM_INCLUDES*¤//#UC END# *4571DD1A009C_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD1A009C*"
			    value      	(value Text 
|//#UC START# *4571DD1A009C*¤RoseAbstractCategoryDumper::RoseAbstractCategoryDumper (const RoseAbstractDumper* parent, IRoseCategoryPtr cat)¤	: RoseAbstractDumper ( parent, cat )¤{¤	bool is_global;¤¤	if (!parent) {¤		RoseAbstractDumper::global_cats().clear();¤		is_global = false;¤	} else {¤		is_global =( cat->Global != 0 || parent->is_global());¤	}¤¤	if (is_global) {	¤		RoseAbstractDumper::global_cats().push_back(this);¤	}¤¤	// insert childs¤	int i;¤	¤	IRoseClassCollectionPtr classes = cat->GetClasses();¤	if (classes != 0) {¤		for (i = 1; i < classes->Count + 1; i++) {¤			IRoseClassPtr cls = classes->GetAt(i);¤			RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, cls);¤		}¤	} else {¤		RoseHelper::write_error_log("NULL in Class collection");¤	}¤¤	IRoseClassDiagramCollectionPtr diags = cat->ClassDiagrams;¤	if (diags != 0) {¤		for (i = 1; i < diags->Count+1; i++) {			¤			IRoseClassDiagramPtr diag = diags->GetAt(i);¤			this->add_diagram(new RoseDiagramDumper (diag));¤		}¤	¤		IRoseScenarioDiagramCollectionPtr diags = cat->ScenarioDiagrams;¤		if (diags != 0) {¤			for (i = 1; i < diags->Count+1; i++) {			¤				IRoseScenarioDiagramPtr diag = diags->GetAt(i);¤				this->add_diagram(new RoseDiagramDumper (diag));¤			}¤		} else {¤			RoseHelper::write_error_log("NULL in Scenario Diagrams collection");¤		}¤	} else {¤		RoseHelper::write_error_log("NULL in Diagrams collection");¤	}¤¤	IRoseCategoryCollectionPtr cats = cat->Categories;¤	if (cats != 0) {¤		for (i = 1; i < cats->Count+1; i++) {			¤			IRoseCategoryPtr ch_cat = cats->GetAt(i);¤			RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, ch_cat);¤		}¤	} else {¤		RoseHelper::write_error_log("NULL in Category collection");¤	}¤}¤¤std::string RoseAbstractCategoryDumper::get_model_class_str() const {¤	std::string ret = "Category";¤	return ret;¤}¤¤void RoseAbstractCategoryDumper::link_suppliers () {¤	RoseAbstractDumper::link_suppliers ();¤¤	int i;¤	IRoseCategoryDependencyCollectionPtr deps = cat()->GetCategoryDependencies();¤	for (i = 1; i<deps->Count+1; i++) {		¤		IRoseCategoryDependencyPtr dep = deps->GetAt(i);¤		try { // damn... shit¤			IRoseCategoryPtr sup_cat = dep->GetSupplierCategory();¤			if (sup_cat != 0) {¤				if ( dep->Stereotype != _bstr_t ("") ) {¤					add_supplier ( RoseAbstractDumper::find_in_tree(sup_cat), ST_NOT_NAVIGABLE, (char*)dep->Stereotype );¤				} else {¤					add_supplier ( RoseAbstractDumper::find_in_tree(sup_cat), ST_NOT_NAVIGABLE, ST_LINK_DEP);¤				}¤			}¤		} catch (...) {¤		}¤	}¤¤	// link with parent¤	IRoseCategoryPtr par = cat()->GetParentCategory();¤	while (par) {¤		const RoseAbstractDumper* par_rad = RoseAbstractDumper::find_in_tree(par);¤		if (this->is_parent_visability_stereotype (par_rad->get_model_stereotype_str())) {¤			add_supplier (par_rad , ST_NOT_NAVIGABLE, ST_CATEGORY_NESTED_DEPENDENCE);¤		}¤		¤		par = par->GetParentCategory();¤	}¤}¤¤IRoseCategoryPtr RoseAbstractCategoryDumper::cat() const {¤	return (IRoseCategoryPtr) this->rose_item();¤}¤¤bool RoseAbstractCategoryDumper::is_global() const {¤	//TRACE ("%s: %s", (const char*) this->cat()->GetName(), p ? : p->;¤	if (this->cat()->Global != 0 && this->cat()->GetParentCategory() != 0) {¤		return true;¤	} else {¤		const ObjectTreeResolver* par = dynamic_cast<const ObjectTreeResolver*> (this->parent());¤		if (par) {¤			return par->is_global();¤		} else {¤			return false;¤		}¤	}	¤}¤//#UC END# *4571DD1A009C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD1A009C_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571DD1A009C_DESTR_BODY*¤	//#UC END# *4571DD1A009C_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DD1A009C_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DD1A009C_CUSTOM_INCLUDES*¤//#UC END# *4571DD1A009C_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DD1A009C*"
			    value      	(value Text 
|//#UC START# *4571DD1A009C*¤public:	¤	RoseAbstractCategoryDumper (const RoseAbstractDumper* parent, IRoseCategoryPtr cat);	¤	std::string get_model_class_str() const;¤	IRoseCategoryPtr cat() const;¤	virtual bool is_global() const;¤¤protected:¤	// рекурсивная сборка всех include путей у вложенных папок генерируемых в текущий IDL-файл¤	//virtual void collect_include (GCL::StrSet& col);¤	bool data;¤	¤protected:¤	// возвращает указатель на COM-объект категории в модели¤	virtual void link_suppliers ();¤//#UC END# *4571DD1A009C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractCategoryDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractCategoryDumper.h"))
		    quid       	"4571DD1A009C"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571E01F02CE"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper"
			    quidu      	"4571D1A5009C"))
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571E80302BF"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseDiagramDumper"
			    quidu      	"4571DFB400FA"))
		    language   	"MDA Generator")
		(object Class "RoseAbstractClassDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD3D03D8_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DD3D03D8_CUSTOM_INCLUDES*¤//#UC END# *4571DD3D03D8_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD3D03D8*"
			    value      	(value Text 
|//#UC START# *4571DD3D03D8*¤RoseAbstractClassDumper::RoseAbstractClassDumper (const RoseAbstractDumper* parent, IRoseClassPtr cls ) : RoseAbstractDumper (parent, cls ) {¤	int i;¤	// ops¤¤	IRoseClassCollectionPtr classes = cls->GetNestedClasses();¤	for (i = 1; i < classes->Count + 1; i++) {¤		IRoseClassPtr cls = classes->GetAt(i);¤		RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, cls);			¤	}¤¤	IRoseAttributeCollectionPtr attrs = cls->Attributes;¤	for (i = 1; i < attrs->Count + 1; i++) {		¤		IRoseAttributePtr attr = attrs->GetAt(i);¤		RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, attr);¤	}¤¤	IRoseRoleCollectionPtr rl_attrs = cls->GetAssociateRoles();¤	for (i = 1; i < rl_attrs->Count + 1; i++) {¤		IRoseRolePtr rl_attr = rl_attrs->GetAt(i);¤		if ( rl_attr->Navigable ) RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, rl_attr);¤	}¤¤	IRoseOperationCollectionPtr ops = cls->Operations;	¤	for (i = 1; i < ops->Count + 1; i++) {¤		IRoseOperationPtr op = ops->GetAt(i);¤		RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, op);¤	}¤¤	IRoseParameterCollectionPtr pars = cls->Parameters;¤	for (i = 1; i < pars->Count + 1; i++) {¤		IRoseParameterPtr par = pars->GetAt(i);¤		RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, par);¤	}¤¤	IRoseClassDependencyCollectionPtr deps = cls->GetClassDependencies();	¤	for (i = 1; i < deps->Count + 1; i++) {¤		IRoseClassDependencyPtr dep = deps->GetAt(i);¤		RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, dep);¤	}¤}¤¤std::string RoseAbstractClassDumper::get_model_class_str() const {¤	std::string ret = "Class";¤	return ret;¤}¤¤std::string RoseAbstractClassDumper::get_class_kind_str () const {¤	return (char*)cls()->ClassKind->GetName();¤}¤¤void RoseAbstractClassDumper::link_suppliers () {¤	RoseAbstractDumper::link_suppliers ();¤¤	int i;¤¤	IRoseInheritRelationCollectionPtr inhs = cls()->GetInheritRelations();¤	for (i = 1; i<inhs->Count+1; i++) {¤		IRoseInheritRelationPtr inh = inhs->GetAt(i);	¤		IRoseClassPtr sup_cls = inh->GetSupplierClass();¤		add_supplier (RoseAbstractDumper::find_in_tree(sup_cls), ST_NAVIGABLE, ST_LINK_INH );¤	}¤¤	IRoseRealizeRelationCollectionPtr rels = cls()->GetRealizeRelations();¤	for (i = 1; i<rels->Count+1; i++) {¤		IRoseRealizeRelationPtr rel = rels->GetAt(i);	¤		IRoseClassPtr sup_cls = rel->GetSupplierClass();¤		add_supplier (RoseAbstractDumper::find_in_tree(sup_cls), ST_NAVIGABLE, ST_LINK_REL );¤	}¤}¤¤IRoseClassPtr RoseAbstractClassDumper::cls() const {¤	return (IRoseClassPtr) this->rose_item();¤}¤¤bool RoseAbstractClassDumper::check_protected_visibility_access (const ObjectTreeResolver* sup, const std::string& link_stereotype) const {¤	const ObjectTreeResolver* par = this->ObjectTreeResolver::get_parent_category();¤	const ObjectTreeResolver* sup_par = sup->ObjectTreeResolver::get_parent_category();¤	if (par == sup_par) {¤		return true;¤	} else {¤		return false;¤	}¤}¤¤bool RoseAbstractClassDumper::check_private_visibility_access (const ObjectTreeResolver* sup, const std::string& link_stereotype) const {¤	const ObjectTreeResolver* par = this->ObjectTreeResolver::get_parent_category();¤	const ObjectTreeResolver* sup_par = sup->ObjectTreeResolver::get_parent_category();¤	return (par == sup_par);¤}¤//#UC END# *4571DD3D03D8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD3D03D8_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571DD3D03D8_DESTR_BODY*¤	//#UC END# *4571DD3D03D8_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DD3D03D8_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DD3D03D8_CUSTOM_INCLUDES*¤//#UC END# *4571DD3D03D8_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DD3D03D8*"
			    value      	(value Text 
|//#UC START# *4571DD3D03D8*¤public:		¤	RoseAbstractClassDumper (const RoseAbstractDumper* parent, IRoseClassPtr cls );		¤	std::string get_model_class_str() const;	¤	std::string get_class_kind_str() const;¤	IRoseClassPtr cls() const;¤¤protected:¤	virtual void link_suppliers ();¤	virtual bool check_protected_visibility_access (const ObjectTreeResolver* sup, const std::string& link_stereotype) const;¤	virtual bool check_private_visibility_access (const ObjectTreeResolver* sup, const std::string& link_stereotype) const;¤//#UC END# *4571DD3D03D8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractClassDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractClassDumper.h"))
		    quid       	"4571DD3D03D8"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571E02E035B"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper"
			    quidu      	"4571D1A5009C"))
		    language   	"MDA Generator")
		(object Class "RoseAbstractDumpFactory"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD4D0399_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DD4D0399_CUSTOM_INCLUDES*¤//#UC END# *4571DD4D0399_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD4D0399*"
			    value      	(value Text "//#UC START# *4571DD4D0399*¤//#UC END# *4571DD4D0399*"))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DD4D0399_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571DD4D0399_DESTR_BODY*¤	//#UC END# *4571DD4D0399_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DD4D0399_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DD4D0399_CUSTOM_INCLUDES*¤//#UC END# *4571DD4D0399_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DD4D0399*"
			    value      	(value Text "//#UC START# *4571DD4D0399*¤//#UC END# *4571DD4D0399*"))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumpFactory.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDumpFactory.h"))
		    quid       	"4571DD4D0399"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571E088036B"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::DumpersFactory"
			    quidu      	"4571E05D02EE"))
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571E6EA03B9"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractAttributeDumper"
			    quidu      	"4571DF1E00CB")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571E7040222"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractCategoryDumper"
			    quidu      	"4571DD1A009C")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571E71903C8"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractClassDumper"
			    quidu      	"4571DD3D03D8")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571E76701A5"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractOperationDumper"
			    quidu      	"4571DF59030D")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571E78A0232"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractParameterDumper"
			    quidu      	"4571DF8401B5")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571F3950157"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDependencyDumper"
			    quidu      	"4571DFE7035B"))
		    language   	"MDA Generator")
		(object Class "RationalRoseTlb"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DD8C003E_USER_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4571DD8C003E_USER_INCLUDES*¤#import "X:\support\import\RationalRose.tlb"                                                              \¤	no_namespace                                                                                                       \¤	rename ("GetClassName", "GetRoseClassName")                                                                        \¤	rename ("GetProfileString", "GetRoseProfileString")                                                                \¤	rename ("WriteProfileString", "WriteRoseProfileString")¤//#UC END# *4571DD8C003E_USER_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DD8C003E_USER_DEFINITION*"
			    value      	"//#UC START# *4571DD8C003E_USER_DEFINITION*¤//#UC END# *4571DD8C003E_USER_DEFINITION*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RationalRoseTlb.h"))
		    quid       	"4571DD8C003E"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "IRoseItemPtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"4571DE0802BF"
			    stereotype 	"Typedef")
			(object Class "IRoseObjectInstancePtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"4571E48201F4"
			    stereotype 	"Typedef")
			(object Class "IRoseMessagePtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"4571E4FD0000"
			    stereotype 	"Typedef")
			(object Class "IRoseDiagramPtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"4571F3BE00BB"
			    stereotype 	"Typedef")
			(object Class "IRoseClassPtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"45757AC102BB"
			    stereotype 	"Typedef")
			(object Class "IRoseApplicationPtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"45B9F58B004E"
			    stereotype 	"Typedef")
			(object Class "IRoseModelPtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"45BF2745031C"
			    stereotype 	"Typedef")
			(object Class "IRoseCategoryPtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"45BF43DE00DA"
			    stereotype 	"Typedef")
			(object Class "IRoseElementPtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"45C3177C0177"
			    stereotype 	"Typedef")
			(object Class "IRoseCategoryCollectionPtr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"45EC04F80339"
			    stereotype 	"Typedef")))
		(object Class "RoseAbstractAttributeDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF1E00CB_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DF1E00CB_CUSTOM_INCLUDES*¤//#UC END# *4571DF1E00CB_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF1E00CB*"
			    value      	(value Text 
|//#UC START# *4571DF1E00CB*¤RoseAbstractAttributeDumper::RoseAbstractAttributeDumper (const RoseAbstractDumper* parent, IRoseItemPtr attr, std::string st) ¤	: RoseAbstractElementDumper (parent, attr, st) ¤{¤	if ( attr->IsClass ("Attribute") ) m_is_rl_attr = false;¤	else if ( attr->IsClass ("Role") ) {¤		m_is_rl_attr = true;¤		IRoseAttributeCollectionPtr keys = ((IRoseRolePtr)attr)->Keys;¤		for (int i = 1; i < keys->Count + 1; i++) {		¤			IRoseAttributePtr key = keys->GetAt(i);¤			RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, key);¤		}¤	} else {¤		// shit happence¤		throw;¤	}¤}¤¤std::string RoseAbstractAttributeDumper::get_model_class_str() const {¤	return "Attribute";¤}¤¤void RoseAbstractAttributeDumper::link_suppliers () {¤	RoseAbstractDumper::link_suppliers ();¤	¤	const RoseAbstractDumper* supl = 0;¤	if (m_is_rl_attr) {¤		supl = RoseAbstractDumper::find_in_tree(this->rl_attr()->GetClass());		¤	} else {¤		/*_bstr_t prop_linkeditem (PROP_LINKEDITEM);¤		prop_linkeditem += this->op()->GetType ();¤		_bstr_t linked_uid = this->rose_item ()->GetPropertyValue (TOOL_NAME, prop_linkeditem);¤		¤		if (linked_uid == _bstr_t ("")) {¤			linked_uid = this->m_rose_item->GetPropertyValue (TOOL_NAME, PROP_LINKEDITEM);¤		}*/¤		IRoseClassPtr linked_cls = this->attr()->GetTypeClass();¤		¤		/*if (linked_cls == 0) {¤			linked_cls = this->par()->GetTypeClass();¤		}*/¤		if (linked_cls == 0) {¤			if (this->attr()->GetType () != _bstr_t ("")) {¤				supl = this->resolve ((const char*)this->attr()->GetType ());¤				TRACE (¤					"SHIT! in attribute void TypeClass with correct TypeName (for %s::%s, type name is %s"¤					, (const char*) this->attr()->GetContext()->Name¤					, (const char*) this->attr()->Name¤					, (const char*) this->attr()->GetType ()¤				);¤			} else if (!this->is_allow_empty_target()) {¤				this->write_error_log ("Не определенный тип атрибута");¤			} else {¤				supl = RoseAbstractDumper::find_in_tree(0);¤			}¤		} else {¤			supl = RoseAbstractDumper::find_in_tree(linked_cls);			¤		}¤	}¤	if (supl) {¤		std::string link_type = this->get_link_type_str ();¤		if (link_type == "agr" || link_type == "ref") {¤			this->add_supplier (supl, ST_NAVIGABLE, ST_TARGET);¤		} else {¤			this->add_supplier (supl, ST_NOT_NAVIGABLE, ST_TARGET);¤		}¤	}¤}¤¤std::string RoseAbstractAttributeDumper::get_stereotype_str() const {¤	if (m_is_rl_attr) {¤		return (char*) this->rl_attr()->Stereotype;¤	} else {¤		return (char*) this->attr()->Stereotype;¤	}	¤}¤¤std::string RoseAbstractAttributeDumper::get_initial_value_str () const {¤	std::string ret;¤	if ( !m_is_rl_attr ) {¤		ret = (char*)attr ()->InitValue;¤	}¤¤	return ret;¤}¤¤IRoseAttributePtr RoseAbstractAttributeDumper::attr () const {¤	return m_is_rl_attr ? NULL : (IRoseAttributePtr)this->rose_item();¤}¤¤IRoseRolePtr RoseAbstractAttributeDumper::rl_attr () const {¤	return m_is_rl_attr ? (IRoseRolePtr)this->rose_item() : NULL;¤}¤¤IRoseClassPtr RoseAbstractAttributeDumper::parent_cls () const {¤	const RoseAbstractDumper* parent_ptr = dynamic_cast<const RoseAbstractDumper*> (this->parent());¤	return (IRoseClassPtr)parent_ptr->rose_item();¤}¤¤std::string RoseAbstractAttributeDumper::get_link_type_str () const {¤	return RoseHelper::get_link_type(this->rose_item());¤}¤//#UC END# *4571DF1E00CB*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF1E00CB_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571DF1E00CB_DESTR_BODY*¤	//#UC END# *4571DF1E00CB_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DF1E00CB_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DF1E00CB_CUSTOM_INCLUDES*¤//#UC END# *4571DF1E00CB_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DF1E00CB*"
			    value      	(value Text 
|//#UC START# *4571DF1E00CB*¤public:¤	RoseAbstractAttributeDumper (const RoseAbstractDumper* parent, IRoseItemPtr attr, std::string st );¤¤protected:¤	bool m_is_rl_attr;¤¤	std::string get_model_class_str() const;¤	IRoseAttributePtr attr () const;¤	IRoseRolePtr rl_attr () const;¤	IRoseClassPtr parent_cls () const;¤	void link_suppliers ();	¤	virtual std::string get_stereotype_str() const;¤	virtual std::string get_initial_value_str () const;¤	virtual std::string get_link_type_str () const;¤//#UC END# *4571DF1E00CB*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractAttributeDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractAttributeDumper.h"))
		    quid       	"4571DF1E00CB"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571DF42033C"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractElementDumper"
			    quidu      	"4571D3040222"))
		    language   	"MDA Generator")
		(object Class "RoseAbstractOperationDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF59030D_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DF59030D_CUSTOM_INCLUDES*¤//#UC END# *4571DF59030D_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF59030D*"
			    value      	(value Text 
|//#UC START# *4571DF59030D*¤RoseAbstractOperationDumper::RoseAbstractOperationDumper (const RoseAbstractDumper* parent, IRoseOperationPtr op, std::string st )¤		: RoseAbstractElementDumper (parent, op, st) ¤{¤	IRoseParameterCollectionPtr params = op->Parameters;¤	int l;¤	for (l=1; l < params->Count + 1; l++) {		¤		IRoseParameterPtr par = params->GetAt(l);¤		RoseAbstractDumper::dump_factory()->create_by_stereotype (*this, par);¤	}¤}¤¤std::string RoseAbstractOperationDumper::get_model_class_str() const {¤	std::string ret = "Operation";¤	return ret;¤}¤¤IRoseOperationPtr RoseAbstractOperationDumper::op () const {¤	return (IRoseOperationPtr)this->rose_item();¤}¤¤IRoseClassPtr RoseAbstractOperationDumper::parent_cls () const {¤	const RoseAbstractDumper* parent_ptr = dynamic_cast<const RoseAbstractDumper*> (this->parent());¤	return (IRoseClassPtr)parent_ptr->rose_item();¤}¤¤void RoseAbstractOperationDumper::link_suppliers () {¤	RoseAbstractDumper::link_suppliers ();¤¤	const RoseAbstractDumper* supl = 0;¤	/*_bstr_t prop_linkeditem (PROP_LINKEDITEM);¤	prop_linkeditem += this->op()->ReturnType;¤	_bstr_t linked_uid = this->rose_item ()->GetPropertyValue (TOOL_NAME, prop_linkeditem);¤	¤	if (linked_uid == _bstr_t ("")) {¤		linked_uid = this->rose_item ()->GetPropertyValue (TOOL_NAME, PROP_LINKEDITEM);¤	}*/¤	IRoseClassPtr linked_cls = this->op()->GetResultClass();¤	¤	if (linked_cls == 0) {¤		if (this->op()->ReturnType != _bstr_t ("")) {¤			supl = this->resolve ((const char*)this->op()->ReturnType);¤			TRACE (¤				"SHIT! in operation void TypeClass with correct TypeName (for %s::%s, type name is %s"¤				, (const char*) this->op()->GetContext()->Name¤				, (const char*) this->op()->Name¤				, (const char*) this->op()->ReturnType¤			);¤		} else if (!this->is_allow_empty_target()) {¤			this->write_error_log ("Не определенный тип результата операции");¤			return;¤		} else {¤			supl = RoseAbstractDumper::find_in_tree(0);¤		}¤	} else {¤		supl = RoseAbstractDumper::find_in_tree(linked_cls);¤	}¤¤	if (supl) {¤		add_supplier (supl, ST_NOT_NAVIGABLE, ST_TARGET);¤	}	¤}¤//#UC END# *4571DF59030D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF59030D_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571DF59030D_DESTR_BODY*¤	//#UC END# *4571DF59030D_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DF59030D_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DF59030D_CUSTOM_INCLUDES*¤//#UC END# *4571DF59030D_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DF59030D*"
			    value      	(value Text 
|//#UC START# *4571DF59030D*¤public:¤	RoseAbstractOperationDumper (const RoseAbstractDumper* parent, IRoseOperationPtr op, std::string st );¤	¤protected:¤	std::string get_model_class_str() const;¤	IRoseOperationPtr op () const;¤	IRoseClassPtr parent_cls () const;¤	¤	void link_suppliers ();¤//#UC END# *4571DF59030D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractOperationDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractOperationDumper.h"))
		    quid       	"4571DF59030D"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571DF7700FA"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractElementDumper"
			    quidu      	"4571D3040222"))
		    language   	"MDA Generator")
		(object Class "RoseAbstractParameterDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF8401B5_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DF8401B5_CUSTOM_INCLUDES*¤//#UC END# *4571DF8401B5_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF8401B5*"
			    value      	(value Text 
|//#UC START# *4571DF8401B5*¤RoseAbstractParameterDumper::RoseAbstractParameterDumper (const RoseAbstractDumper* parent, IRoseParameterPtr attr, std::string st ) ¤	: RoseAbstractElementDumper (parent, attr, st) ¤{¤}¤¤void RoseAbstractParameterDumper::link_suppliers () {¤	RoseAbstractDumper::link_suppliers ();¤¤	const RoseAbstractDumper* supl = 0;¤¤	if (RoseHelper::get_context (this->par())->IsClass("Class")) {¤		supl = this;¤	} else {¤¤		/*_bstr_t prop_linkeditem (PROP_LINKEDITEM);¤		prop_linkeditem += this->par()->GetType ();¤		_bstr_t linked_uid = this->rose_item ()->GetPropertyValue (TOOL_NAME, prop_linkeditem);¤		¤		if (linked_uid == _bstr_t ("")) {¤			linked_uid = this->m_rose_item->GetPropertyValue (TOOL_NAME, PROP_LINKEDITEM);¤		}*/¤		IRoseClassPtr linked_cls = this->par()->GetTypeClass();¤		¤		/*if (linked_cls == 0) {¤			linked_cls = this->par()->GetTypeClass();¤		}*/¤		if (linked_cls == 0) {¤			if (this->par()->GetType () != _bstr_t ("")) {¤				supl = this->resolve ((const char*)this->par()->GetType ());¤				TRACE (¤					"SHIT! in parameter void TypeClass with correct TypeName (for %s::%s, type name is %s"¤					, (const char*) this->par()->GetContext()->Name¤					, (const char*) this->par()->Name¤					, (const char*) this->par()->GetType ()¤				);¤			} else if (!this->is_allow_empty_target()) {¤				this->write_error_log ("Не определенный тип параметра");¤			} else {¤				supl = RoseAbstractDumper::find_in_tree(0);¤			}¤		} else {¤			supl = RoseAbstractDumper::find_in_tree(linked_cls);			¤		}¤	}¤¤	this->add_supplier (supl, ST_NOT_NAVIGABLE, ST_TARGET);¤}¤¤std::string RoseAbstractParameterDumper::get_model_class_str() const {¤	return "Parameter";¤}¤¤IRoseParameterPtr RoseAbstractParameterDumper::par () const {¤	return (IRoseParameterPtr)this->rose_item();¤}¤¤IRoseClassPtr RoseAbstractParameterDumper::parent_cls () const {¤	const AbstractDumperBase* parent_ptr = this->parent();¤	return dynamic_cast<const RoseAbstractClassDumper*> (parent_ptr->parent())->cls();	¤}¤¤IRoseOperationPtr RoseAbstractParameterDumper::parent_op () const {¤	const RoseAbstractDumper* parent_ptr = dynamic_cast<const RoseAbstractDumper*> (this->parent());¤	return (IRoseOperationPtr)parent_ptr->rose_item();¤}¤¤std::string RoseAbstractParameterDumper::get_stereotype_str () const {¤	GCL::StrVector names = GCL::split_string_by (RoseAbstractElementDumper::get_name_str().c_str(), ' ');¤	if (names.size () == 1) return "in";¤	else return names[0];¤}¤¤std::string RoseAbstractParameterDumper::get_name_str () const {¤	GCL::StrVector names = GCL::split_string_by (RoseAbstractElementDumper::get_name_str().c_str(), ' ');¤	¤	if (names.size () == 1) return names[0];¤	else return names[1];	¤}¤¤std::string RoseAbstractParameterDumper::get_initial_value_str () const {¤	return (char*)par()->InitValue;	¤}¤//#UC END# *4571DF8401B5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DF8401B5_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571DF8401B5_DESTR_BODY*¤	//#UC END# *4571DF8401B5_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DF8401B5_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DF8401B5_CUSTOM_INCLUDES*¤//#UC END# *4571DF8401B5_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DF8401B5*"
			    value      	(value Text 
|//#UC START# *4571DF8401B5*¤public:¤	RoseAbstractParameterDumper (const RoseAbstractDumper* parent, IRoseParameterPtr attr, std::string st );¤¤protected:¤	std::string get_model_class_str() const;¤	IRoseClassPtr parent_cls () const;¤	IRoseOperationPtr parent_op () const;¤	IRoseParameterPtr par () const;¤¤	virtual void link_suppliers ();¤	virtual std::string get_stereotype_str () const;¤	virtual std::string get_name_str () const;¤	virtual std::string get_initial_value_str () const;¤//#UC END# *4571DF8401B5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractParameterDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractParameterDumper.h"))
		    quid       	"4571DF8401B5"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571DF94030D"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractElementDumper"
			    quidu      	"4571D3040222"))
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571E57A006D"
			    stereotype 	"uses"
			    supplier   	"Logical View::shared::GCL::str::str_op"
			    quidu      	"4503E01500CB")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571E5AE005D"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractClassDumper"
			    quidu      	"4571DD3D03D8"))
		    language   	"MDA Generator")
		(object Class "RoseDiagramDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DFB400FA_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DFB400FA_CUSTOM_INCLUDES*¤//#UC END# *4571DFB400FA_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DFB400FA*"
			    value      	(value Text 
|//#UC START# *4571DFB400FA*¤RoseDiagramDumper::RoseDiagramDumper(const IRoseDiagramPtr diag): m_diag (diag) {	¤}¤¤bool RoseDiagramDumper::operator == (const AbstractDumperBase& c) const {¤	bool ret = false;¤	const RoseDiagramDumper* rdd = dynamic_cast<const RoseDiagramDumper*>(&c);¤	if (rdd) ret = (this->m_diag->GetUniqueID() == rdd->m_diag->GetUniqueID());¤	return ret;¤}¤¤const std::string& RoseDiagramDumper::get_model_unique_id_str() const {¤	if (m_model_unique_id == "") {¤		m_model_unique_id = (char*)m_diag->GetUniqueID();¤	}¤	return m_model_unique_id;¤}¤¤std::string RoseDiagramDumper::get_name_str () const {¤	std::string ret = (char*)m_diag->Name;¤	return ret;¤}¤¤std::string RoseDiagramDumper::get_model_stereotype_str() const {¤	return RoseHelper::get_gen_stereotype(m_diag);¤}¤¤///////////////////////////////////////////////////////////////////////¤// abstracte base - method implementation¤///////////////////////////////////////////////////////////////////////¤¤void RoseDiagramDumper::dump (std::ostream* output) const {	¤	//std::string root_dir = (char*) RoseHelper::rose_app()->CurrentModel->GetPropertyValue(TOOL_NAME, PROP_ROOTDIR);¤	//std::string root_dir = RoseHelper::get_root_dir ();¤	std::string root_dir;¤¤	std::string ret = root_dir + "/" + this->create_file_name_str();¤	m_diag->Render(ret.data());¤	//m_diag->Render("T:\\aaaa.wmf  ");	¤}¤¤const AbstractDumperBase* RoseDiagramDumper::get_target () const {¤	return NULL;¤}¤	¤const AbstractDumperBase* RoseDiagramDumper::parent() const {¤	return NULL;¤}¤¤std::string RoseDiagramDumper::get_model_class_str() const {¤	std::string ret = "Diagram";¤	return ret;¤}¤//#UC END# *4571DFB400FA*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DFB400FA_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571DFB400FA_DESTR_BODY*¤	//#UC END# *4571DFB400FA_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DFB400FA_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DFB400FA_CUSTOM_INCLUDES*¤//#UC END# *4571DFB400FA_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DFB400FA*"
			    value      	(value Text 
|//#UC START# *4571DFB400FA*¤public:¤	RoseDiagramDumper(const IRoseDiagramPtr diag);¤	bool operator == (const AbstractDumperBase& c) const;¤¤protected:¤	virtual const std::string& get_model_unique_id_str() const;¤	virtual void dump (std::ostream* output = NULL) const;¤	virtual const AbstractDumperBase* parent() const;¤	virtual const AbstractDumperBase* get_target () const;¤¤	virtual std::string get_model_class_str() const;¤	virtual std::string get_name_str () const;¤	virtual std::string get_model_stereotype_str() const;¤	void write_template_error_log (const char* log) const {¤		assert (0);¤	}¤	void write_template_warning_log (const char* log) const {¤		assert (0);¤	}¤¤//#UC END# *4571DFB400FA*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseDiagramDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseDiagramDumper.h"))
		    quid       	"4571DFB400FA"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571DFC901C5"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSingleDumperBase"
			    quidu      	"4571A32201A5"))
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "diag"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571F4230000"
			    type       	"IRoseDiagramPtr"
			    quidu      	"4571F3BE00BB"
			    Containment 	"By Value"))
		    language   	"MDA Generator")
		(object Class "RoseAbstractDependencyDumper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DFE7035B_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DFE7035B_CUSTOM_INCLUDES*¤//#UC END# *4571DFE7035B_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DFE7035B*"
			    value      	(value Text 
|//#UC START# *4571DFE7035B*¤RoseAbstractDependencyDumper::RoseAbstractDependencyDumper (const RoseAbstractDumper* parent, IRoseItemPtr attr, std::string st) ¤	: RoseAbstractElementDumper (parent, attr, st) ¤{	¤}¤¤std::string RoseAbstractDependencyDumper::get_model_class_str() const {¤	return "Dependency";¤}¤¤IRoseClassDependencyPtr RoseAbstractDependencyDumper::dep () const {¤	return (IRoseClassDependencyPtr)this->rose_item();¤}¤¤IRoseClassPtr RoseAbstractDependencyDumper::parent_cls () const {¤	const RoseAbstractDumper* parent_ptr = dynamic_cast<const RoseAbstractDumper*> (this->parent());¤	return (IRoseClassPtr)parent_ptr->rose_item();¤}¤¤void RoseAbstractDependencyDumper::link_suppliers () {¤	RoseAbstractDumper::link_suppliers ();¤	IRoseItemPtr sup = this->dep()->GetSupplier();¤	if (sup != 0) {	¤		this->add_supplier (RoseAbstractDumper::find_in_tree(sup), ST_IGNORED, ST_USER_DEF_TARGET );¤	}¤}¤//#UC END# *4571DFE7035B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571DFE7035B_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4571DFE7035B_DESTR_BODY*¤	//#UC END# *4571DFE7035B_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DFE7035B_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571DFE7035B_CUSTOM_INCLUDES*¤//#UC END# *4571DFE7035B_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571DFE7035B*"
			    value      	(value Text 
|//#UC START# *4571DFE7035B*¤public:¤	RoseAbstractDependencyDumper (const RoseAbstractDumper* parent, IRoseItemPtr attr, std::string st );¤¤protected:¤	std::string get_model_class_str() const;¤	IRoseClassDependencyPtr dep () const;¤	IRoseClassPtr parent_cls () const;¤¤	void link_suppliers ();		¤//#UC END# *4571DFE7035B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDependencyDumper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseAbstractDependencyDumper.h"))
		    quid       	"4571DFE7035B"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"4571DFFE03C8"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractElementDumper"
			    quidu      	"4571D3040222"))
		    language   	"MDA Generator")
		(object Class "RoseHelper"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local helper"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571F040008C_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4571F040008C_CUSTOM_INCLUDES*¤#include <afxdlgs.h>¤//#UC END# *4571F040008C_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4571F040008C*"
			    value      	(value Text 
|//#UC START# *4571F040008C*¤typedef std::vector <IRoseClassDiagramPtr> Diagrams;¤typedef std::set<std::string> UndeletebleItems;¤typedef std::set<std::string> UnmanagedDeps;¤typedef GCL::CycleChecker<std::string> AllVisibleItemCC;¤¤static AllVisibleItemCC g_all_visible_item_cc;¤static IRoseApplicationPtr s_rose_app = NULL;¤static bool s_template_is_loaded = false;¤static GCL::StrSet s_incremented_counters;¤¤//////////////////////////////////////////////////¤// private declaration¤¤void find_all_visible_item (IRoseCategoryPtr from, const std::string& stereotype, GCL::StrSet& result, bool is_root = 1);¤¤void find_all_child_item (IRoseItemPtr from, const std::string& stereotype, GCL::StrSet& result);¤¤RoseItemMap uids_to_items (IRoseCategoryPtr from, GCL::StrSet& uids);¤¤//////////////////////////////////////////////////¤// all definitions¤¤void clear_incremented_counters () {¤	RoseHelper::s_incremented_counters.clear();¤}¤¤void delete_stereotype_from_map (const _bstr_t& key) {¤	AbstractDumperBase::s_stereotypes.erase (key);¤}¤¤IRoseApplicationPtr rose_app () {¤	return s_rose_app;¤}¤¤void set_rose_app (IRoseApplicationPtr app) {¤	s_rose_app = app;¤}¤¤void reset_template () {¤	s_template_is_loaded = false;¤	AbstractDumperBase::clean_up ();¤}¤¤void init_logs () {		¤	s_rose_app->LogCloseTab ("Errors", "MDA");¤	s_rose_app->LogCloseTab ("Warnings", "MDA");¤}¤¤void write_info_log (const char* mess) {¤	s_rose_app->WriteErrorLog (mess);¤}¤¤void write_error_log (const char* mess) {¤	s_rose_app->LogCreateTab ("Errors", "MDA");¤	s_rose_app->LogSetActiveTab ("Errors", "MDA");¤	s_rose_app->LogWriteTab ("Errors", "MDA", mess);¤}¤¤void write_warning_log (const char* mess) {¤	s_rose_app->LogCreateTab ("Warnings", "MDA");¤	s_rose_app->LogSetActiveTab ("Warnings", "MDA");¤	s_rose_app->LogWriteTab ("Warnings", "MDA", mess);¤}¤¤bool load_template () {¤	if (!s_template_is_loaded) {¤		if (RoseHelper::load_template (RoseHelper::s_rose_app->CurrentModel->GetRootCategory(), "", false) == "") {¤			RoseHelper::write_error_log ("ERROR: No template loaded");¤			return false;¤		}¤		s_template_is_loaded = true;¤		return true;¤	} else {¤		return true;¤	}	¤}¤¤std::string load_template (IRoseItemPtr root, const std::string& use_file, bool one_try) {¤	std::string file_name;¤	bool from_property = false;¤	if (use_file == "") {¤		bool by_parent;¤		file_name = RoseHelper::get_template_file(root, by_parent);¤		if (file_name != "") {¤			from_property = true;¤		}¤	} else {¤		file_name = use_file;¤	}¤¤	if (file_name == "" && one_try) {¤		return "";¤	} ¤¤	FILE* templ_file = NULL;¤	bool cancel = false;¤	while (!templ_file && !cancel) {¤		if (file_name != "") {¤			templ_file = fopen (file_name.c_str(), "r");¤		}¤¤		if (!templ_file & !one_try) {¤			from_property = false;¤¤			char szFilters[] = "MDA Template Files (*.tpl)|*.tpl|All Files (*.*)|*.*||";¤¤			CFileDialog f_dlg (true, "tpl", "*.tpl", OFN_FILEMUSTEXIST| OFN_HIDEREADONLY, szFilters);¤¤¤			if (f_dlg.DoModal() == IDOK) {¤				file_name = (LPCTSTR)f_dlg.GetPathName();¤			} else {¤				cancel = true;¤			}¤		}			¤	}¤¤	if (!cancel && templ_file) {¤		try {¤			RoseAbstractDumper::FileDesc fd;¤			fd.file = templ_file;¤			fd.name = file_name;¤			RoseAbstractDumper::load_templates (fd);			¤¤			// save template in the Model¤			if (!from_property) {¤				RoseHelper::set_template_file(root, file_name);¤			}			¤		} catch (AbstractDumperBase::FatalError& ex) {¤			::MessageBox (NULL, ex.mess().data(), "Exception while loading template", MB_OK);¤			file_name = "";¤		} catch (...) {¤			::MessageBox (NULL, "UNKNOWN", "Exception while loading template", MB_OK);¤			file_name = "";¤		}¤		fclose (templ_file);¤¤		s_template_is_loaded = true;¤		return file_name;¤	} else {¤		return "";¤	}	¤}¤¤std::string create_gen_stereotype (IRoseItemPtr item) {¤	if (item == 0) {¤		return "bad item";¤	}¤	AbstractDumperBase::RoseStereotypeMap::iterator stereotype = AbstractDumperBase::s_stereotypes.find (item->GetUniqueID ());¤	if (stereotype == AbstractDumperBase::s_stereotypes.end ()) {¤		std::string ret;¤		//TRACE ("%s:%s\n", (const char*)item->GetName(), (const char*)item->IdentifyClass());¤		if (item->IsClass ("Category") || item->IsClass ("Class")) {¤			ret = item->Stereotype;¤						¤			if (ret == "") {¤				ret = "unstereotyped";¤			}		¤		} else {¤			IRoseItemPtr par;¤			if (item->IsClass ("Diagram")) {¤				par = ((IRoseDiagramPtr)item)->GetParentContext();¤			} else {¤				par = item->GetContext();¤			}¤					¤			if (item->IsClass ("Role")) {¤				IRoseClassPtr cls = ((IRoseRolePtr)item)->Class;¤				if (cls) {¤					ret = create_gen_stereotype (				¤						((IRoseRolePtr)item)->Association->GetOtherRole(cls)->Class¤					);¤				} else {¤					ret = "unstereotyped";¤				}¤			} else {¤				ret = create_gen_stereotype (par);¤			}¤		}¤¤		if (item->Stereotype != _bstr_t("") && (item->IsClass ("Role") || item->IsClass ("ClassDependency") || item->IsClass ("Attribute") || item->IsClass ("Operation"))) {¤			std::string tmp_ret = ret;¤			tmp_ret += "::" + item->Stereotype;¤¤			if (item->IsClass ("Role")) {¤				tmp_ret = tmp_ret + "::Attribute";¤			} else {¤				tmp_ret = tmp_ret + "::" + (char*) item->IdentifyClass();¤			}¤¤			//if (AbstractDumperBase::has_template(tmp_ret)) {¤				return tmp_ret;¤			//}¤		}¤¤		if (item->IsClass ("Role")) {¤			ret = ret + "::Attribute";¤		} else {¤			ret = ret + "::" + (char*) item->IdentifyClass();¤		}¤		stereotype = AbstractDumperBase::s_stereotypes.insert (¤			AbstractDumperBase::RoseStereotypeMap::value_type (item->GetUniqueID (), ret)¤		).first;¤	}¤	¤	return stereotype->second;¤}¤std::string get_gen_stereotype (IRoseItemPtr item) {¤	std::string ret = create_gen_stereotype (item);¤¤	if (!AbstractDumperBase::has_template(ret)) {		¤		GCL::StrVector part = GCL::split_string_by_sub_string (ret.data(), "::");¤		part[0] = "default";¤		ret = GCL::merge_string_and_sub_string(part, "::");¤	}¤¤	return ret;¤}¤¤IRoseCategoryPtr get_parent_category (IRoseItemPtr item) {¤	if ( item->IsClass("Category") ) {¤		return ((IRoseCategoryPtr)item)->GetParentCategory();¤	}¤¤	IRoseItemPtr parent_item = RoseHelper::get_context(item);¤¤	if ( parent_item->IsClass("Category") ) {¤		return parent_item;¤	}¤	return get_parent_category (parent_item);¤}¤¤IRoseItemPtr get_nearest_container (IRoseItemPtr item) {¤	//TRACE ("Item name - %s, st - %s, class  - %s\n", (const char*)item->Name, (const char*)item->Stereotype, (const char*)item->IdentifyClass());¤	if (item->IsClass("Class") || item->IsClass("Category")) {¤		return item;¤	}¤¤	IRoseItemPtr parent_item = RoseHelper::get_context (item);¤	if (parent_item == NULL) {¤		return NULL;¤	}¤¤//	if (parent_item->IsClass("Class") || item->IsClass("Category")) {¤//		return parent_item;¤//	}¤	return get_nearest_container (parent_item);¤}¤¤void find_all_visible_item (IRoseCategoryPtr from, const std::string& stereotype, GCL::StrSet& result, bool is_root) {¤	if (from == NULL) {¤		return;¤	}¤¤	AllVisibleItemCC::Iteration iteration (g_all_visible_item_cc, (char*)from->GetUniqueID());¤	if (iteration.is_cycled()) {¤		return;¤	}	¤¤	if (is_root) {¤		IRoseCategoryPtr par = from->GetParentCategory();¤		if (par) { ¤			IRoseClassCollectionPtr dep_clss = par->Classes;¤			for (int l=1; l<dep_clss->Count+1; l++) {¤				IRoseClassPtr dep_cls = dep_clss->GetAt(l);¤				if ( dep_cls->Stereotype == _bstr_t (stereotype.data()) ) {			¤					result.insert ( (char*)dep_cls->GetUniqueID() );¤				}				¤			}¤		}¤	}¤¤	IRoseClassCollectionPtr dep_clss = from->Classes;¤	for (int l=1; l<dep_clss->Count+1; l++) {¤		IRoseClassPtr dep_cls = dep_clss->GetAt(l);¤		if (RoseHelper::get_gen_stereotype (dep_cls) == stereotype) {¤			result.insert ( (char*)dep_cls->GetUniqueID() );			¤		}¤	}¤¤	IRoseCategoryDependencyCollectionPtr deps = from->GetCategoryDependencies();¤	int i;¤	for (i = 1; i<deps->Count+1; i++) {¤		IRoseCategoryDependencyPtr dep = deps->GetAt(i);¤		find_all_visible_item (dep->GetSupplierCategory(), stereotype, result, 0);¤	}¤}¤¤void find_all_child_item (IRoseItemPtr from, const std::string& stereotype, GCL::StrSet& result) {¤	if (from == NULL) {¤		return;¤	}¤¤	if (from->IsClass ("Category")) {¤		IRoseCategoryPtr from_cat = (IRoseCategoryPtr) from;¤¤		IRoseCategoryCollectionPtr cats = from_cat->GetCategories();¤		for (int l=1; l<cats->Count+1; l++) {¤			IRoseCategoryPtr cat = cats->GetAt(l);¤			if (RoseHelper::get_gen_stereotype (cat) == stereotype) {¤				result.insert ( (char*)cat->GetUniqueID() );¤			}¤			find_all_child_item (cat, stereotype, result);¤		}¤¤		IRoseClassCollectionPtr clss = from_cat->Classes;¤		for (int l=1; l<clss->Count+1; l++) {¤			IRoseClassPtr cls = clss->GetAt(l);¤			if (RoseHelper::get_gen_stereotype (cls) == stereotype) {¤				result.insert ( (char*)cls->GetUniqueID() );¤			}¤			find_all_child_item (cls, stereotype, result);¤		}		¤	} else if (from->IsClass ("Class")) {¤		IRoseClassPtr from_cls = (IRoseClassPtr) from;¤¤		IRoseClassCollectionPtr clss = from_cls->GetNestedClasses();¤		for (int l=1; l<clss->Count+1; l++) {¤			IRoseClassPtr cls = clss->GetAt(l);¤			if (RoseHelper::get_gen_stereotype (cls) == stereotype) {¤				result.insert ( (char*)cls->GetUniqueID() );¤			}¤			find_all_child_item (cls, stereotype, result);¤		}¤	}	¤}¤¤RoseItemMap find_all_visible_ex (IRoseItemPtr from, const GCL::StrSet& stereotypes) {¤	IRoseCategoryPtr from_cat = RoseHelper::get_parent_category (from);¤	if (from_cat == NULL) {¤		return RoseItemMap();¤	}¤¤	IRoseItemPtr from_cont = RoseHelper::get_nearest_container (from);¤	if (from_cont == NULL) {¤		return RoseItemMap();¤	}¤¤	GCL::StrSet uids;¤	for (GCL::StrSet::const_iterator it = stereotypes.begin(); it != stereotypes.end(); it++) {¤		find_all_visible_item (from_cat, *it, uids);¤		find_all_child_item (from_cont, *it, uids);¤		find_all_child_item (from_cat, *it, uids);¤	}¤¤	return uids_to_items (from_cat, uids);¤}¤RoseItemMap find_all_visible_item (IRoseItemPtr from, const GCL::StrSet& stereotypes) {¤	IRoseCategoryPtr from_cat = RoseHelper::get_parent_category (from);¤	if (from_cat == NULL) {¤		return RoseItemMap();¤	}¤¤	IRoseItemPtr from_cont = RoseHelper::get_nearest_container (from);¤	if (from_cont == NULL) {¤		return RoseItemMap();¤	}¤¤	GCL::StrSet uids;¤	for (GCL::StrSet::const_iterator it = stereotypes.begin(); it != stereotypes.end(); it++) {¤		find_all_visible_item (from_cat, *it, uids);¤		find_all_child_item (from_cont, *it, uids);¤	}¤¤	return uids_to_items (from_cat, uids);¤}¤¤RoseItemMap find_all_derived_abstract (IRoseItemPtr from) {¤	if (from == NULL) {¤		return RoseItemMap();¤	}¤¤	GCL::StrSet uids;¤	RoseHelper::find_all_derived_abstract (from, uids);¤¤	return uids_to_items (RoseHelper::get_parent_category(from), uids);¤}¤	¤void find_all_derived_abstract (IRoseItemPtr from, GCL::StrSet& res) {¤	class _local_fill_result {¤	public:¤		static void fill (IRoseClassPtr base, GCL::StrSet& res) {¤			if (base != 0) {¤				RoseHelper::find_all_derived_abstract (base, res);¤¤				// self		¤				IRoseAttributeCollectionPtr attrs = base->GetAttributes();¤				short i;¤				for (i = 1; i < attrs->Count + 1; i++) {¤					if (RoseHelper::is_it_implementable (attrs->GetAt(i)) & RoseHelper::is_it_abstract (attrs->GetAt(i))) {¤						res.insert ((char*)attrs->GetAt(i)->GetUniqueID());¤					}¤				}¤¤				IRoseRoleCollectionPtr rl_attrs = base->GetAssociateRoles();¤				for (i = 1; i < rl_attrs->Count + 1; i++) {¤					IRoseRolePtr rl_attr = rl_attrs->GetAt(i);¤					if ( rl_attr->Navigable ) {¤						if (RoseHelper::is_it_implementable (rl_attr) & RoseHelper::is_it_abstract (rl_attr)) {¤							res.insert ((char*)rl_attr->GetUniqueID());¤						}¤					}¤				}¤¤				IRoseOperationCollectionPtr ops = base->GetOperations();¤				for (i = 1; i < ops->Count + 1; i++) {¤					if (RoseHelper::is_it_implementable (ops->GetAt(i)) & RoseHelper::is_it_abstract (ops->GetAt(i))) {¤						res.insert ((char*)ops->GetAt(i)->GetUniqueID());¤					}¤				}¤			}¤		}¤	};¤¤	if (from != 0) {¤		IRoseRealizeRelationCollectionPtr rs = ((IRoseClassPtr)from)->GetRealizeRelations ();¤¤		short i;¤		for (i = 1; i < rs->Count + 1; i++) {¤			IRoseRealizeRelationPtr rel = rs->GetAt(i);¤			if (rel) {¤				_local_fill_result::fill (rel->GetSupplierClass(), res);¤			}¤		}¤		¤		IRoseInheritRelationCollectionPtr is = ((IRoseClassPtr)from)->GetInheritRelations ();¤¤		for (i = 1; i < is->Count + 1; i++) {¤			IRoseInheritRelationPtr rel = is->GetAt(i);¤			if (rel) {¤				_local_fill_result::fill (rel->GetSupplierClass(), res);¤			}¤		}¤	}¤}¤¤RoseItemMap find_all_derived_impl (IRoseItemPtr from) {¤	if (from == NULL) {¤		return RoseItemMap();¤	}¤¤	GCL::StrSet uids;¤	RoseHelper::find_all_derived_impl (from, uids);¤¤	return uids_to_items (RoseHelper::get_parent_category(from), uids);¤}¤	¤void find_all_derived_impl (IRoseItemPtr from, GCL::StrSet& res) {¤	class _local_fill_result {¤	public:¤		static void fill (IRoseClassPtr base, GCL::StrSet& res) {¤			if (base == 0) {¤				return;¤			}¤¤			RoseHelper::find_all_derived_impl (base, res);¤			¤			if (!RoseHelper::has_it_derived_impl (base)) {¤				return;¤			}¤¤			// self¤			IRoseAttributeCollectionPtr attrs = base->GetAttributes();¤			short i;¤			for (i = 1; i < attrs->Count + 1; i++) {¤				std::string name = attrs->GetAt(i)->Name;¤				if (RoseHelper::is_it_implementable (attrs->GetAt(i)) & !RoseHelper::is_it_abstract (attrs->GetAt(i))) {¤					res.insert ((char*)attrs->GetAt(i)->GetUniqueID());¤				}¤			}¤¤			IRoseOperationCollectionPtr ops = base->GetOperations();¤			for (i = 1; i < ops->Count + 1; i++) {¤				std::string name = ops->GetAt(i)->Name;¤				if (RoseHelper::is_it_implementable (ops->GetAt(i)) & !RoseHelper::is_it_abstract (ops->GetAt(i))) {¤					res.insert ((char*)ops->GetAt(i)->GetUniqueID());¤				}¤			}			¤¤			std::string sel_type = (char*) base->GetPropertyValue(TOOL_NAME, PROP_IMPLEMENT_SELECT_TYPE);¤¤			if (sel_type == "exclude") {¤				GCL::StrSet all_abstr;¤				RoseHelper::find_all_derived_abstract (base, all_abstr);¤				GCL::StrVector implemented = GCL::split_string_by((char*) base->GetPropertyValue(TOOL_NAME, PROP_DERIVED_IMPLEMENT), ',');¤¤				for (GCL::StrSet::iterator it = all_abstr.begin(); it != all_abstr.end(); it++) {¤					if (std::find (implemented.begin(), implemented.end(), *it) == implemented.end()) {¤						res.insert (*it);¤					}¤				}¤			} else if (sel_type == "include") {¤				GCL::StrVector implemented = GCL::split_string_by((char*) base->GetPropertyValue(TOOL_NAME, PROP_DERIVED_IMPLEMENT), ',');¤							¤				for (GCL::StrVector::iterator it = implemented.begin(); it != implemented.end(); it++) {¤					res.insert (*it);¤				}¤			} else {¤				GCL::StrSet all_abstr;¤				RoseHelper::find_all_derived_abstract (base, all_abstr);¤				for (GCL::StrSet::iterator it = all_abstr.begin(); it != all_abstr.end(); it++) {¤					res.insert (*it);¤				}¤			}		¤		}¤	};¤¤	if (from != 0) {¤		IRoseRealizeRelationCollectionPtr rs = ((IRoseClassPtr)from)->GetRealizeRelations ();¤		short i;¤		for (i = 1; i < rs->Count + 1; i++) {¤			IRoseRealizeRelationPtr rel = rs->GetAt(i);¤			if (rel) {¤				_local_fill_result::fill (rel->GetSupplierClass(), res);¤			}¤		}¤		¤		IRoseInheritRelationCollectionPtr is = ((IRoseClassPtr)from)->GetInheritRelations ();¤¤		for (i = 1; i < is->Count + 1; i++) {¤			IRoseInheritRelationPtr rel = is->GetAt(i);¤			if (rel) {¤				_local_fill_result::fill (rel->GetSupplierClass(), res);¤			}¤		}¤	}¤}¤¤std::string get_visability_type(IRoseItemPtr item) {¤	if (item->IsClass("Class")) {¤		return (char*) ((IRoseClassPtr)item)->ExportControl->Name;¤	} else if (item->IsClass("Attribute")) {¤		return (char*) ((IRoseAttributePtr)item)->ExportControl->Name;¤	} else if (item->IsClass("HasRelationship")) {¤		return (char*) ((IRoseHasRelationshipPtr)item)->ExportControl->Name;¤	} else if (item->IsClass("Operation")) {¤		return (char*) ((IRoseOperationPtr)item)->ExportControl->Name;¤	} else if (item->IsClass("Role")) {¤		return (char*) ((IRoseRolePtr)item)->ExportControl->Name;¤	} else {¤		std::string ret = item->GetPropertyValue(TOOL_NAME, PROP_ITEM_VISABILITY);¤		if (ret == "") {¤			¤			std::string stereotype = RoseHelper::get_gen_stereotype(item);	¤			char vt = AbstractDumperBase::get_template (stereotype).visability_type;¤¤			if (vt & VTF_PUBLIC) {¤				return "PublicAccess";¤			} else if (vt & VTF_PROTECTED) {¤				return "ProtectedAccess";¤			} else if (vt & VTF_PRIVATE) {¤				return "PrivateAccess";¤			} else if (vt & VTF_IMPL) {¤				return "ImplementationAccess";¤			} else {¤				return "PublicAccess";¤			}¤		} else {¤			return ret;¤		}¤	}¤}¤¤void set_visability_type (IRoseItemPtr item, std::string& vt) {¤	if (item->IsClass("Class")) {¤		((IRoseClassPtr)item)->ExportControl->Name = vt.data();¤	} else if (item->IsClass("Attribute")) {¤		((IRoseAttributePtr)item)->ExportControl->Name = vt.data();¤	} else if (item->IsClass("HasRelationship")) {¤		((IRoseHasRelationshipPtr)item)->ExportControl->Name = vt.data();¤	} else if (item->IsClass("Operation")) {¤		((IRoseOperationPtr)item)->ExportControl->Name = vt.data();¤	} else if (item->IsClass("Role")) {¤		((IRoseRolePtr)item)->ExportControl->Name = vt.data();¤	} else {¤		override_property(item, TOOL_NAME, PROP_ITEM_VISABILITY, vt.data());¤	}	¤}¤¤std::string get_abstraction_type (IRoseItemPtr item) {¤	std::string ret = (char*) item->GetPropertyValue(TOOL_NAME, PROP_ITEM_ABSTRACT);¤	if (ret == "true") {¤		ret = "abstract";¤	} else if (ret == "false" || ret == "") {¤		if (item->IsClass ("Class")) {¤			if (((IRoseClassPtr)item)->Abstract) {¤				return "abstract";¤			}¤		}¤		¤		std::string stereotype = RoseHelper::get_gen_stereotype(item);	¤		char at = AbstractDumperBase::get_template (stereotype).abstraction_type;¤¤		if (at & ATF_REGULAR) {¤			ret = "regular";¤		} else if (at & ATF_ABSTRACT) {¤			ret = "abstract";¤		} else if (at & ATF_FINAL) {¤			ret = "final";¤		}¤	}¤¤	return ret;¤}¤¤bool is_it_abstract (IRoseItemPtr item) {¤	std::string stereotype = RoseHelper::get_gen_stereotype(item);¤	AbstractDumperBase::Template& tplt = AbstractDumperBase::get_template (stereotype);¤	char at = tplt.abstraction_type;¤	¤	if (at & ATF_ABSTRACT) {¤		if (at & (~ATF_ABSTRACT)) {¤			std::string abstr = (char*) item->GetPropertyValue(TOOL_NAME, PROP_ITEM_ABSTRACT);¤			if (abstr.empty ()) {¤				abstr = tplt.def_abstraction_type;¤			}¤			return abstr == "abstract";¤		} else {¤			return true;¤		}¤	} else {¤		return false;¤	}¤}¤¤bool is_it_implementable (IRoseItemPtr item) {¤	std::string stereotype = RoseHelper::get_gen_stereotype(item);	¤¤	AbstractDumperBase::Template& tplt = AbstractDumperBase::get_template (stereotype);¤	if (tplt.implementation_type == SX_IT_TRUE) {¤		// abstract or regular¤		if (tplt.abstraction_type & ATF_ABSTRACT) {¤			if (tplt.abstraction_type & (~ATF_ABSTRACT)) {¤				std::string abstr = (char*) item->GetPropertyValue(TOOL_NAME, PROP_ITEM_ABSTRACT);¤				if (abstr.empty ()) {¤					abstr = tplt.def_abstraction_type;¤				}¤				if (abstr == "abstract") {¤					return true;¤				}¤			} else {¤				return true;¤			}¤		}¤¤		if (tplt.abstraction_type & ATF_REGULAR) {¤			if (tplt.abstraction_type & (~ATF_REGULAR)) {¤				std::string abstr = (char*) item->GetPropertyValue(TOOL_NAME, PROP_ITEM_ABSTRACT);¤				if (abstr.empty ()) {¤					abstr = tplt.def_abstraction_type;¤				}¤				return abstr == "regular";¤			} else {¤				return true;¤			}¤		} else {¤			return false;¤		}¤	} else {¤		return false;¤	}		¤}¤¤bool has_it_derived_impl (IRoseItemPtr item) {¤	std::string stereotype = RoseHelper::get_gen_stereotype(item);	¤	return AbstractDumperBase::get_template (stereotype).has_derived_impl;¤}¤¤RoseItemMap uids_to_items (IRoseCategoryPtr from, GCL::StrSet& uids) {¤	RoseItemMap res;¤	GCL::StrVector base_path = GCL::split_string_by_sub_string (RoseHelper::get_full_name (from).data(), "::");¤¤	for (GCL::StrSet::iterator it = uids.begin(); it != uids.end(); it++) {¤		IRoseItemPtr item = from->Model->FindItemWithID ( (*it).data() );¤		if (item != 0) {¤			GCL::StrVector target_path = GCL::split_string_by_sub_string (¤				RoseHelper::get_full_name(item).data(), ¤				"::"¤			);¤			¤			std::string norm_name;¤¤			if (item->IsClass("Operation") || item->IsClass("Attribute")) {¤				if (item->Stereotype != _bstr_t("")) {¤					norm_name += "<<";¤					norm_name += (const char*)item->Stereotype;¤					norm_name += ">>";					¤				}¤			}¤¤			target_path = GCL::normalize (base_path, target_path);¤			norm_name += GCL::merge_string_and_sub_string (target_path, "::");¤		¤			RoseItemMap::value_type ri ( norm_name, (*it) );¤			res.insert(ri);¤		}¤	}¤	return res;¤}¤¤std::string get_full_name (IRoseItemPtr item) {¤	if (!item->IsClass("Role")) {¤		return (char*) item->GetQualifiedName();¤	} else {		¤		IRoseAssociationPtr cl = ((IRoseRolePtr)item)->Association;¤		¤		std::string cl_path;¤		if (cl->Role1->GetUniqueID() != item->GetUniqueID()) {¤			cl_path = cl->Role1->Class->GetQualifiedName();¤		} else {¤			cl_path = cl->Role2->Class->GetQualifiedName();¤		}¤		cl_path += "::" + item->GetName();¤		return cl_path;¤	}¤}¤¤std::string get_template_file(IRoseItemPtr item, bool& by_parent) {¤	std::string ret;¤	by_parent = false;¤	¤	while (ret == "" && item != NULL) {¤		ret = (char*)item->GetPropertyValue(TOOL_NAME, PROP_TEMPLATE_FILE);¤¤		if (ret != "") {¤			FILE* templ_file = fopen (ret.c_str(), "r");¤			if (templ_file) {¤				fclose (templ_file);¤				return ret;¤			} ¤						¤			item->OverrideProperty(TOOL_NAME, PROP_TEMPLATE_FILE, _bstr_t(""));¤			ret = "";			¤		}¤		item = RoseHelper::get_context (item);¤		by_parent = true;¤	}¤¤	return ret;¤}¤¤std::string get_root_dir(IRoseItemPtr item) {	¤	if (item) {¤		return (char*)item->GetPropertyValue(TOOL_NAME, PROP_ROOTDIR);¤	} else {¤		return "";¤	}¤}¤¤void set_root_dir(IRoseItemPtr item, const std::string& value) {¤	if (value != get_root_dir(item)) {¤		RoseHelper::override_property(item, TOOL_NAME, PROP_ROOTDIR, value.data());¤	}¤}¤¤void set_template_file(IRoseItemPtr item, const std::string& value) {		¤	RoseHelper::override_property(item, TOOL_NAME, PROP_TEMPLATE_FILE, value.data());¤}¤¤bool get_is_native(IRoseItemPtr item) {¤	if (item) {¤		std::string ret;¤		ret = (char*)item->GetPropertyValue(TOOL_NAME, PROP_IS_NATIVE);¤		¤		return ret == "true";¤	} else {¤		return false;¤	}¤}¤¤bool get_is_native_with_parent(IRoseItemPtr item) {¤	bool b;¤	return get_is_native_with_parent(item, b);¤}¤¤bool get_is_native_with_parent(IRoseItemPtr item, bool& with_parent) {¤	bool ret = get_is_native(item);¤	if (!ret) {¤		IRoseItemPtr par = item->GetContext();¤		if (par) {¤			if (par->IsClass ("Model")) {¤				ret = false;¤			} else {¤				with_parent = ret = get_is_native_with_parent (par);¤			}¤		} else {¤			ret = false;¤		}¤	} else {¤		with_parent = false;¤	}¤	¤	return ret;¤}¤¤bool set_is_native(IRoseItemPtr item, bool value) {	¤	std::string str;¤	if (value) {¤		str = "true";¤	} else {¤		str = "false";¤	}¤¤	bool ret = RoseHelper::override_property(item, TOOL_NAME, PROP_IS_NATIVE, str.data());¤	if (ret) {¤		RoseAbstractDumper::reset_model_tree_root ();¤	}¤¤	return ret;¤}¤¤void set_parameterized(IRoseItemPtr item, bool value) {	¤	IRoseClassPtr cls = (IRoseClassPtr)item;¤	if (cls == 0) {¤		return;¤	}¤	if (value && (cls->ClassKind->Name != _bstr_t("ParameterizedClass"))) {¤		cls->ClassKind->PutValue(1);¤	} else if (!value && cls->ClassKind->Name != _bstr_t("Class")) {¤		cls->ClassKind->PutValue(0);¤	}¤}¤¤bool override_property (IRoseElementPtr item, _bstr_t tool_name, _bstr_t prop_name, _bstr_t value) {¤	_bstr_t prev_value = item->GetPropertyValue(tool_name, prop_name);¤	if (prev_value != value) {¤		item->OverrideProperty(tool_name, prop_name, value);¤		return true;¤	} else {¤		return false;¤	}¤}¤¤bool is_it_available_by_type (IRoseItemPtr item, IRoseItemPtr item_context, const AbstractDumperBase::Templates::value_type& st_tp) {¤	if (item != 0) {¤		//TRACE ("Check by type for: %s in %s\n ", st_tp.first.data(), (const char*)item->IdentifyClass());¤	}¤	GCL::StrVector parts = GCL::split_string_by_sub_string (st_tp.first.data(), "::");¤	¤	if (parts[0] == "default") {¤		return false;¤	}¤¤	if (item == 0) {¤		//AbstractDumperBase::Template& t = AbstractDumperBase::get_template (RoseHelper::get_gen_stereotype(item_context));¤		if (parts.size() >= 3) {¤			if (parts[0] == (const char*)item_context->Stereotype) {¤				if (item_context->IsClass(parts[1].data())) {¤					//MySt::Class::Opertaion¤					//MySt::Class::Opertaion::Parameter¤					//MySt::Class::OpSt::Opertaion¤					//MySt::Class::OpSt::Opertaion::Parameter¤					if (parts.size() < 5) {¤						//MySt::Class::Opertaion¤						//MySt::Class::Opertaion::Parameter¤						//MySt::Class::OpSt::Opertaion						¤						if (parts[2] != "ClassDependency" && (parts.size() < 4 || parts[3] != "ClassDependency")) {¤							if (parts[2] != "Parameter" && (parts.size() < 4 || parts[3] != "Parameter")) {¤								return true;¤							}¤						}¤					}¤				}¤			}¤			return false;¤		} else {¤			return true;¤		}¤	}¤¤	//AbstractDumperBase::Template& t = AbstractDumperBase::get_template (RoseHelper::get_gen_stereotype(item));¤	¤	if (parts.size() == 2 && item->IsClass(parts[1].data())) {¤		return true;¤	} else if (¤		(¤			parts.size() == 4 && (¤				item->IsClass(parts[3].data()) ¤				|| (parts[3] == "Attribute" && item->IsClass("Role"))¤			)¤		)¤		|| (¤			parts.size() == 3 && (¤				item->IsClass(parts[2].data())¤				|| (parts[2] == "Attribute" && item->IsClass("Role"))¤			)¤		)¤	) {¤		IRoseItemPtr item_context = RoseHelper::get_context(item);		¤		if (item_context->IsClass(parts[1].data()) && item_context->GetStereotype() == _bstr_t(parts[0].data())) {¤			return true;¤		} else {¤			return false;¤		}¤	} else {¤		return false;			¤	}¤}¤¤IRoseItemPtr get_context(IRoseItemPtr item) {¤	if (item->IsClass("Role")) {¤		IRoseRolePtr rr = IRoseRolePtr(item);¤		IRoseAssociationPtr ra = rr->Association;¤		rr = ra->GetOtherRole(rr->Class);¤		return rr->AssociateItem;¤	} else {¤		return item->GetContext();¤	}¤/*¤	IRoseRolePtr role = (IRoseRolePtr) item;¤	if (role) {¤		if (role != role->Association->Role2) {¤			return role->Association->Role2->Class;¤		} else {¤			return role->Association->Role1->Class;¤		}¤	} else {¤		return item->GetContext();¤	}*/¤}¤¤bool is_it_available_by_constr (IRoseItemPtr item, IRoseItemPtr item_context, const AbstractDumperBase::Templates::value_type& st_tp) {¤	//TRACE ("Check by constr for: %s\n", st_tp.first.data());¤	if (item_context->IsClass ("Model")) {¤		return true;¤	} else {		¤		AbstractDumperBase::Template& pt = AbstractDumperBase::get_template (RoseHelper::get_gen_stereotype(item_context));¤		if (!pt.child_st_constarints.size()) {¤			return true;¤		} else {¤			GCL::StrVector chk_parts = GCL::split_string_by_sub_string (st_tp.first.data(), "::");¤			if (chk_parts.size() >= 4) {¤				// chk_parts == MySt::Class::oneway::Operation¤				// chk_parts == MySt::Class::oneway::Operation::Parametr				¤				// chk_parts == MySt::Class::Operation::Parametr¤				return true;¤				return item != 0; // small hack - to disable sub stereotypes¤			} else if (chk_parts.size() == 3) {¤				// chk_parts == MySt::Class::Operation¤				return true;¤			}¤¤			for (¤				GCL::StrSet::iterator it = pt.child_st_constarints.begin()¤				; it != pt.child_st_constarints.end()¤				; it++¤			) {¤				GCL::StrVector parts = GCL::split_string_by_sub_string (it->data(), "::");¤				if (chk_parts.size() == 2) {¤					if (parts[0] == "*") {¤						if (item != 0) {¤							if (item->IsClass(parts[1].data())) {¤								return pt.child_st_constarint_type == AbstractDumperBase::CSCT_INCLUDED;¤							}¤						} else if (parts[1] == chk_parts[1]) {¤							return pt.child_st_constarint_type == AbstractDumperBase::CSCT_INCLUDED;¤						}¤					} ¤				}¤                    ¤				if (*it == st_tp.first) {¤					return pt.child_st_constarint_type == AbstractDumperBase::CSCT_INCLUDED;¤				}				¤			}¤		¤			return pt.child_st_constarint_type != AbstractDumperBase::CSCT_INCLUDED;			¤		}¤	}	¤}¤¤RoseHelper::TemplatesSet get_available_parent_by_constr (const AbstractDumperBase::Templates::value_type& child) {¤	GCL::StrVector c_parts = GCL::split_string_by_sub_string (child.first.data(), "::");¤	std::string parent_st;¤	if (c_parts.size() > 2) {¤		parent_st = c_parts[0];¤	}¤¤	//TRACE ("find parent st for %s:\n", child.first.data());¤	TemplatesSet res;¤	for (¤		AbstractDumperBase::Templates::const_iterator it = AbstractDumperBase::templates_begin ()¤		; it != AbstractDumperBase::templates_end ()¤		; it ++¤	) {		¤		const AbstractDumperBase::Template& parent = it->second;¤		if (¤			parent.classtype_name == "Attribute" ¤			|| parent.classtype_name == "Parameter" ¤			|| parent.classtype_name == "Operation" ¤			|| parent.classtype_name == "ClassDependency"¤			|| parent.stereotype_name == "<default>"¤		) {¤			continue;¤		}¤¤		//TRACE ("\tCHECK FOR%s:\n", it->first.data());¤¤		if (parent_st == parent.stereotype_name) {¤			res.insert (&(*it));¤			//TRACE ("\t%s:\n", it->first.data());¤		} else if (parent_st == "") {¤			if (!parent.child_st_constarints.size()) {¤				res.insert (&(*it));¤				//TRACE ("\t%s:\n", it->first.data());¤			} else {¤				bool exit = false;¤				for (¤					GCL::StrSet::const_iterator it2 = parent.child_st_constarints.begin ()¤					; !exit && it2 != parent.child_st_constarints.end ()¤					; it2++¤				) {¤					//TRACE ("\t\tCHECK CONST%s:\n", it2->data());¤					GCL::StrVector parts = GCL::split_string_by_sub_string (it2->data(), "::");¤					¤					if (parts.size() == 2) {¤						if (parts[1] == child.second.classtype_name) {¤							if (parts[0] == "*" || parts[0] == child.second.stereotype_name) {¤								if (parent.child_st_constarint_type == AbstractDumperBase::CSCT_INCLUDED) {¤									res.insert (&(*it));¤									//TRACE ("\t%s:\n", it->first.data());¤								}¤								exit = true;¤							}¤						}¤					} else {¤						assert (0);¤					}¤				}¤				if (exit) {¤					continue;¤				}¤¤				if (parent.child_st_constarint_type != AbstractDumperBase::CSCT_INCLUDED) {¤					res.insert (&(*it));¤					//TRACE ("\t%s:\n", it->first.data());¤				}¤			}¤		}¤	}¤¤	return res;¤}¤¤GCL::StrVector get_available_target_stereotypes (IRoseItemPtr item) {¤	GCL::StrVector ret;¤	¤	AbstractDumperBase::Template& t = AbstractDumperBase::get_template (RoseHelper::get_gen_stereotype(item));¤	if (t.available_target_stereotypes.size()) {¤		ret = t.available_target_stereotypes;¤	}¤	return ret;¤}¤¤std::string get_auto_counter(IRoseItemPtr item) {¤	std::string ret;¤	ret = (char*)item->GetPropertyValue(TOOL_NAME, PROP_AUTO_COUNTER);¤	if (ret == "") {¤		ret = "0";¤		RoseHelper::override_property(item, TOOL_NAME, PROP_AUTO_COUNTER, ret.data());¤		s_incremented_counters.insert ((char*)item->GetUniqueID());¤	} else {¤		if (s_incremented_counters.find((char*)item->GetUniqueID()) == s_incremented_counters.end()) {¤			s_incremented_counters.insert ((char*)item->GetUniqueID());			¤			long counter = atoi (ret.data());¤			if (!AbstractDumperBase::s_options.dis_auto_count) {¤				counter++;¤			}¤			char buf [32];¤			ret = itoa (counter, buf, 10);¤			RoseHelper::override_property(item, TOOL_NAME, PROP_AUTO_COUNTER, ret.data());¤		}¤	}¤¤	return ret;¤}¤¤bool set_link_type (IRoseItemPtr item, const std::string& lt) {¤	bool ret = false;¤	IRoseRolePtr rl = (IRoseRolePtr)item;¤	if (rl) {¤		if (lt == "agr") {¤			rl->Association->Role2->Aggregate = true;¤			rl->Association->Role1->Containment->PutValue(1);¤		} else if (lt == "ref") {¤			rl->Association->Role2->Aggregate = true;¤			rl->Association->Role1->Containment->PutValue(2);¤		} else if (lt == "lnk") {¤			rl->Association->Role2->Aggregate = false;¤			rl->Association->Role1->Containment->PutValue(0);¤		}¤	} else if ((IRoseAttributePtr)item) {¤		IRoseAttributePtr atr = (IRoseAttributePtr)item;¤		RoseHelper::override_property (atr, TOOL_NAME, "ValueInitialized", "true");¤		short prev_val = atr->Containment->GetValue();¤		if (lt == "agr") {		¤			atr->Containment->PutValue(1);¤		} else if (lt == "ref") {¤			atr->Containment->PutValue(2);¤		} else if (lt == "lnk") {¤			atr->Containment->PutValue(0);¤		}¤		ret = (prev_val != atr->Containment->GetValue());¤	} else {¤	}¤¤	return ret;¤}¤¤std::string get_link_type (IRoseItemPtr item) {¤	if ((IRoseRolePtr)item) {¤		IRoseRolePtr rol = (IRoseRolePtr)item;¤¤		if (rol->Association->Role2->GetAggregate()) {¤			if (rol->Association->Role1->GetContainment()->GetValue() == 1 /*by value*/) {¤				return "agr";¤			} else {¤				return "ref";¤			}¤		} else {¤			return "lnk";¤		}¤	} else if ((IRoseAttributePtr)item) {¤		IRoseAttributePtr atr = (IRoseAttributePtr)item;¤		if (atr->GetPropertyValue(TOOL_NAME, "ValueInitialized") == _bstr_t("true")) {¤			switch (atr->Containment->GetValue()) {¤			case 0:¤				return "lnk";¤			case 1:¤				return "agr";¤			case 2:¤				return "ref";¤			default:¤				assert (0);¤				return "agr";¤			}¤		} else {¤			return "agr";¤		}¤	} else {¤		return "agr";¤	}¤}¤¤std::string get_target_stereotype(IRoseItemPtr item) {¤	return (char*)item->GetPropertyValue(TOOL_NAME, PROP_TARGET_STEREOTYPE);¤}¤¤bool set_target_stereotype (IRoseItemPtr item, const std::string& st) {		¤	return RoseHelper::override_property(item, TOOL_NAME, PROP_TARGET_STEREOTYPE, st.data());¤}¤¤¤¤static const char ENTER[3] = {13, 10, 0};¤¤unsigned char bit_count (unsigned char l, unsigned char count_mask = 0xFF) {¤	char ret = 0;¤	if (l & 1) ++ret;¤	if (l & 2) ++ret;¤	if (l & 4) ++ret;¤	if (l & 8) ++ret;¤	if (l & 16) ++ret;¤	if (l & 32) ++ret;¤	if (l & 64) ++ret;¤	if (l & 128) ++ret;¤	return ret;¤}¤¤class InsertInNote {¤public:¤	IRoseItemPtr m_item;¤	¤	InsertInNote (IRoseItemPtr _item) : m_item(_item) {¤	}¤¤	void each_func (const GCL::StaticNode* item, std::string& res) {¤		if (!item->has_children()) {¤			¤			std::string prop_name = "NATIVE_PATH";¤			std::string gen_id = dynamic_cast<const AbstractDumperBase::GenTreeItem*>(item)->name();¤			prop_name += gen_id;¤			std::string n_path = m_item->GetPropertyValue (TOOL_NAME, prop_name.data());¤			if (n_path != "") {¤				if (res != "") {¤					res += ENTER;¤				}¤				res += "Native path for \"";¤				res += gen_id;¤				res += "\": ";¤				res += n_path;¤			}¤		}¤	}¤};¤¤¤std::string get_overwriten_prop (IRoseItemPtr item) {¤	std::string ret;¤	std::string stereotype = RoseHelper::get_gen_stereotype(item);¤	¤	AbstractDumperBase::Template& tpl = AbstractDumperBase::get_template (stereotype);¤¤	for (¤		AbstractDumperBase::UserPoperty_map::iterator it = tpl.user_properties.begin();¤		it != tpl.user_properties.end();¤		it ++¤	) {¤		std::string val = (char*) item->GetPropertyValue (USER_PROP_NAME, it->first.data());¤		if (val != "" && val != it->second.def_value) {¤			//TRACE ("\t for %s : \"%s\" != \"%s\"\n", it->first.data(), val.data(), it->second.data());¤			if (ret != "") {¤				ret += ENTER;¤			}¤			ret += "{";¤			ret += it->first;¤			ret += ":=";¤			ret += val;¤			ret += "}";¤		}¤	}¤	bool with_p;¤	if (RoseHelper::get_is_native_with_parent (item, with_p)) {¤		if (with_p == false) {¤			if (ret != "") {¤				ret += ENTER;¤			}¤			ret += "NATIVE";¤		}¤¤		Core::Var<AbstractDumperBase::GenTreeItem> gen_tree_copy = AbstractDumperBase::GenTreeItem::clone_tree (¤			RoseAbstractDumper::s_gen_tree.in()¤			, RoseAbstractDumper::s_gen_tree.in()¤			, ParentSelectFilter (item)¤		);¤		gen_tree_copy->for_each (InsertInNote(item), ret);¤¤	}¤¤	if (bit_count (tpl.abstraction_type) != 1) {	¤		std::string abstr = RoseHelper::get_abstraction_type(item);¤¤		if (abstr != "regular" && (item->IsClass("Operation") || item->IsClass("Attribute") || abstr != "abstract")) {¤			if (ret != "") {¤				ret += ENTER;¤			}¤			ret += "Abstraction type: ";¤			ret += abstr;¤		}¤	}¤¤	std::string st = RoseHelper::get_target_stereotype(item);¤	if (st != "") {¤		if (ret != "") {¤			ret += ENTER;¤		}¤		ret += "Target stereotype: ";¤		ret += st;¤	}¤¤	if (item->IsClass("Attribute")) {¤		std::string lt = RoseHelper::get_link_type(item);¤		if (lt != "" & lt != "agr") {¤			if (ret != "") {¤				ret += ENTER;¤			}¤			ret += "Link type: ";¤			ret += lt;¤		}¤	}¤¤	/*if (tpl.has_get_except) {¤		GCL::StrVector get_e = GCL::split_string_by((char*) item->GetPropertyValue(TOOL_NAME, PROP_ATTR_GET_RAISES), ',');¤		std::string except;¤		for (RoseItemMap::iterator it = g_all_ex.begin(); it != g_all_ex.end(); it++) {¤			if (std::find(get_e.begin(), get_e.end(), (*it).second) != get_e.end()) {¤				if (except != "") {¤					except += ", ";¤				}¤				except += it->first;¤			}¤		}¤¤		if (except != "") {¤			if (ret != "") {¤				ret += ENTER;¤			}¤			ret += "GET Exception: ";¤			ret += except;¤		}¤	}¤	if (tpl.has_set_except) {¤		GCL::StrVector set_e = GCL::split_string_by((char*) item->GetPropertyValue(TOOL_NAME, PROP_ATTR_SET_RAISES), ',');¤		std::string except;¤		for (RoseItemMap::iterator it = g_all_ex.begin(); it != g_all_ex.end(); it++) {¤			if (std::find(set_e.begin(), set_e.end(), (*it).second) != set_e.end()) {¤				if (except != "") {¤					except += ", ";¤				}¤				except += it->first;¤			}¤		}¤¤		if (except != "") {¤			if (ret != "") {¤				ret += ENTER;¤			}¤			ret += "SET Exception: ";¤			ret += except;¤		}¤	}*/¤¤	if (item->IsClass("Class")) {¤		IRoseAttributeCollectionPtr attrs = ((IRoseClassPtr)item)->Attributes;¤		for (int i = 1; i < attrs->Count + 1; i++) {		¤			IRoseAttributePtr attr = attrs->GetAt(i);¤			std::string atr_note = RoseHelper::get_overwriten_prop(attr);¤			if (atr_note != "") {¤				if (ret != "") {¤					ret += ENTER;¤					ret += ENTER;¤				}¤				ret += "FOR ATTR. \"";¤				ret += (const char*)attr->Name;¤				ret += "\"";¤				ret += ENTER;¤				ret += atr_note;¤			}¤		}¤¤		IRoseOperationCollectionPtr ops = ((IRoseClassPtr)item)->Operations;	¤		for (int i = 1; i < ops->Count + 1; i++) {¤			IRoseOperationPtr op = ops->GetAt(i);¤			std::string op_note = RoseHelper::get_overwriten_prop(op);¤			if (op_note != "") {¤				if (ret != "") {¤					ret += ENTER;¤					ret += ENTER;¤				}¤				ret += "FOR OPER. \"";¤				ret += (const char*)op->Name;¤				ret += "\"";¤				ret += ENTER;¤				ret += op_note;¤			}¤		}¤¤		{ //  print implemented/overwriten prop¤			RoseItemMap::iterator it;¤			RoseItemMap all_derived_impl = RoseHelper::find_all_derived_impl (item);¤			¤			std::string impl_sel_type = (char*) item->GetPropertyValue(TOOL_NAME, PROP_IMPLEMENT_SELECT_TYPE);¤			¤			if (impl_sel_type == "exclude" || impl_sel_type == "include") {¤				RoseItemMap all_derived_abstract = RoseHelper::find_all_derived_abstract (item);¤				GCL::StrVector implemented = GCL::split_string_by((char*) item->GetPropertyValue(TOOL_NAME, PROP_DERIVED_IMPLEMENT), ',');¤¤				bool first_der_abst = true;¤				for (it = all_derived_abstract.begin(); it != all_derived_abstract.end(); it++) {¤					if (all_derived_impl.find(it->first) == all_derived_impl.end()) {¤						if (std::find(implemented.begin(), implemented.end(), (*it).second) != implemented.end()) {¤							if (first_der_abst) {¤								first_der_abst = false;¤								if (ret != "") {¤									ret += ENTER;¤									ret += ENTER;¤								}¤								if (impl_sel_type == "exclude") {¤									ret += "IMPLEMENT ALL ABSTRACTS, EXCLUDE:";¤								} else {¤									ret += "IMPLEMENT ONLY THIS ABSTRACTS:";¤								}								¤							}¤							ret += ENTER;¤							ret += it->first;¤						}					¤					}¤				}¤			}¤			¤			GCL::StrVector overloaded = GCL::split_string_by((char*) item->GetPropertyValue(TOOL_NAME, PROP_DERIVED_OVERLOAD), ',');¤			¤			bool first_der_impl = true;			¤			for (it = all_derived_impl.begin(); it != all_derived_impl.end(); it++) {¤				if ( std::find(overloaded.begin(), overloaded.end(), (*it).second) != overloaded.end() ) {¤					if (first_der_impl) {¤						first_der_impl = false;¤						if (ret != "") {¤							ret += ENTER;¤							ret += ENTER;¤						}¤						ret += "OVERWRITEN IMPLEMENTATIONS:";						¤					}¤					ret += ENTER;¤					ret += it->first;¤				} ¤			}¤		}¤	}¤¤	return ret;¤}¤¤¤IRoseClassDiagramPtr get_self_diagram (IRoseItemPtr item) {¤	IRoseCategoryPtr cat = RoseHelper::get_parent_category (item);¤	if (cat != 0) {¤		IRoseItemPtr item_to_select = RoseHelper::get_nearest_container (item);¤		¤		/*TRACE (¤			"Selected item - %s, item category - %s, item container %s\n"¤			, rad->get_full_name().data()¤			, (const char*)cat->Name¤			, (const char*)item_to_select->Name¤		);*/¤¤		IRoseClassDiagramCollectionPtr diags = cat->GetClassDiagrams();¤¤		if (diags) {¤			for (int i = 1; i < diags->Count + 1; i++) {¤				IRoseClassDiagramPtr diag = diags->GetAt(i);			¤¤				IRoseItemViewPtr iview = diag->GetViewFrom(item_to_select);¤				if (iview != NULL) {¤					return diag;¤				}¤			}¤		}¤	}¤ 	return 0;¤}¤¤void colorize_all () {¤	/*¤	IRoseCategoryCollectionPtr all_cats = s_rose_app->CurrentModel->GetAllCategories ();¤	_bstr_t main_guid =  RoseHelper::get_main_model_element ()->GetUniqueID ();¤¤	bool first_colorize_need_logs = true;¤¤	for (int i = 1; i < all_cats->Count + 1; i++) {¤		IRoseCategoryPtr cat = all_cats->GetAt(i);¤		if (cat->Stereotype != _bstr_t ("UMLModule")) {¤			IRoseClassDiagramCollectionPtr diags  = cat->GetClassDiagrams ();¤			for (int i = 1; i < diags->Count + 1; i++) {¤				IRoseClassDiagramPtr diag = diags->GetAt(i);¤¤				if (main_guid != diag->GetPropertyValue(TOOL_NAME, "ColorizeFor")) {¤					if (first_colorize_need_logs) {¤						first_colorize_need_logs = false;¤						RoseHelper::write_error_log ("Pre-colorization start...");¤					}¤					RoseHelper::colorize (diag);¤				}¤			}¤		}¤	}¤¤	if (!first_colorize_need_logs) {¤		RoseHelper::write_error_log ("Pre-colorization end.");¤	}¤	*/¤}¤¤void colorize(const IRoseDiagramPtr& d) {¤	if (d == 0) {¤		return;¤	}¤¤	_bstr_t main_guid = RoseHelper::get_main_model_element ()->GetUniqueID ();¤	//RoseHelper::override_property (d, TOOL_NAME, "ColorizeFor", main_guid);¤¤	//d->AutosizeAll¤	typedef std::map<std::string, IRoseNoteViewPtr> NoteMap;¤	NoteMap note_map;¤	NoteMap up_note_map;¤¤	// find all linked notes¤	for (int i = 1; i < d->ItemViews->Count + 1; i++) {¤		IRoseNoteViewPtr rnv = d->ItemViews->GetAt(i);¤		if (rnv != 0 && rnv->Item == 0) {¤			_bstr_t linked_guid = rnv->GetPropertyValue(TOOL_NAME, "LinkedItemGuid");¤			if (linked_guid != _bstr_t("")) {¤				if (rnv->GetNoteViewType() == 1) {¤					note_map[(const char*)linked_guid] = rnv;¤				} else {¤					up_note_map[(const char*)linked_guid] = rnv;¤				}¤			}¤		}¤	}¤¤	IRoseItemPtr current_cat = d->GetParentContext();¤	¤	for (int i = 1; i < d->ItemViews->Count + 1; i++) {¤		IRoseItemViewPtr riv = d->ItemViews->GetAt(i);¤		IRoseItemPtr ri = riv->Item;¤¤		if (ri == 0 && ((IRoseNoteViewPtr)riv) != 0) {¤			_bstr_t linked_guid = riv->GetPropertyValue(TOOL_NAME, "LinkedItemGuid");¤			if (linked_guid != _bstr_t ("")) {¤				continue;¤			}¤		}¤		¤		if (riv->Font->Size != 10) {¤			riv->Font->Size = 10;¤		}¤		¤		if (riv->Font->Underline != false) {¤			riv->Font->Underline = false;¤		}¤		¤		if (ri != NULL) {¤			IRoseCategoryPtr it_cat = RoseHelper::get_parent_category(ri);¤¤			if (ri->IsClass("Category") || ri->IsClass("Class")) {¤				std::string note;¤				std::string vt = RoseHelper::get_visability_type(ri);¤				if (vt == "PublicAccess") {						¤				} else if (vt == "ProtectedAccess") {¤					note = "protected";¤				} else if (vt == "PrivateAccess") {¤					note = "private";¤				} else {¤					note = "implement";¤				}¤¤				IRoseNoteViewPtr nv;¤¤				NoteMap::iterator f = note_map.find ((const char*)ri->GetUniqueID());¤				if (f != note_map.end()) {¤					nv = f->second;¤					d->RemoveNoteView (nv);¤					nv = 0;¤				}¤				¤				if (note != "") {¤					nv = d->AddNoteView ("", 1);¤					nv->Font->Size = 8;¤					SET_COLOR_RGB (nv->Font, 255, 0, 0);¤					nv->OverrideProperty(TOOL_NAME, "LinkedItemGuid", ri->GetUniqueID());¤				}¤				¤				if (nv != 0) {¤					if (nv->Text != _bstr_t(note.data())) {¤						nv->Text = note.data();¤					}¤¤					short x = riv->GetXPosition();¤					x -= riv->Width / 2;¤					x += 5;¤¤					short y = riv->GetYPosition();¤					y += riv->Height / 2;¤					y -= nv->Height;¤					if (ri->IsClass("Class")) {¤						y += 5;¤					}¤¤					// FUCK!!!!!!!!!!¤					//TRACE ("w = %d, cx = %d, nx = %d\n", nv->Width, nv->XPosition, x);¤					//TRACE ("h = %d, cy = %d, ny = %d\n", nv->Height, nv->YPosition, y);¤					if (abs (nv->XPosition - (x + nv->Width/2)) > 2) {¤						nv->PutXPosition (x);¤					}¤					if (abs (nv->YPosition - (y + nv->Height/2)) > 2) {¤						nv->PutYPosition (y);¤					}				¤				}¤			}¤¤			if (it_cat == current_cat) {¤				if (ri->IsClass("Category") || ri->IsClass("Class") || ri->IsClass ("Association")) {¤					std::string up_note;¤¤					//g_all_ex = RoseHelper::find_all_visible_item (ri, AbstractDumperBase::exception_stereotypes());¤¤					if (ri->IsClass ("Association")) {¤						IRoseRolePtr role = ((IRoseAssociationPtr)ri)->Role1;¤						if (!role->Navigable) {¤							role = ((IRoseAssociationPtr)ri)->Role2;¤						}¤						up_note = RoseHelper::get_overwriten_prop (role);¤					} else {¤						up_note = RoseHelper::get_overwriten_prop (ri);¤					}¤¤					IRoseNoteViewPtr nv;¤¤					NoteMap::iterator f = up_note_map.find ((const char*)ri->GetUniqueID());¤					if (f != up_note_map.end()) {¤						nv = f->second;¤					} else {¤						if (up_note != "") {¤							nv = d->AddNoteView (up_note.data(), 2);¤							nv->Font->Size = 8;¤							nv->AddAttachmentToView (riv, "");¤							nv->OverrideProperty(TOOL_NAME, "LinkedItemGuid", ri->GetUniqueID());¤¤							short x = riv->GetXPosition();¤							x += riv->Width / 2;¤							x +=  + 70 + nv->Width/2;¤¤							short y = riv->GetYPosition();¤¤							//TRACE ("w = %d, cx = %d, nx = %d\n", nv->Width, nv->XPosition, x);¤							//TRACE ("h = %d, cy = %d, ny = %d\n", nv->Height, nv->YPosition, y);¤¤							if (abs(nv->XPosition - x) > 2) {							¤								nv->PutXPosition (x);¤							}¤							¤							if (abs(nv->YPosition - y) > 2) {¤								nv->PutYPosition (y);¤							}¤						}¤					}¤¤					if (nv != 0) {¤						if (up_note == "") {¤							d->RemoveNoteView (nv);¤						} else {¤							if (nv->Text != _bstr_t(up_note.data())) {¤								nv->Text = up_note.data();¤							}¤							nv->Invalidate ();¤¤							//riv->PutHeight (500); - does not work :((¤							//riv->PutWidth (500);¤						}¤					}¤				}¤			}¤¤			bool unexist_item;¤			if (RoseAbstractDumper::s_gen_tree.ptr()) {¤				// look is this item exist to project (has at least one generator)¤				IRoseItemPtr cat;¤				if (ri->IsClass("Category")) {¤					cat = ri;¤				} else {¤					cat = RoseHelper::get_parent_category(ri);¤				}¤¤				//_bstr_t prop_key = PROP_APPLGEN;¤				//prop_key += cat->GetUniqueID();¤				//std::string merged_sels = RoseHelper::get_main_model_element()->GetPropertyValue(TOOL_NAME, prop_key);¤¤				//if (merged_sels == "") {¤					std::string merged_sels = cat->GetPropertyValue(TOOL_NAME, PROP_APPLGEN);¤				//}¤				¤				if (merged_sels == "none") {¤					unexist_item = true;¤				} else {¤					RoseHelper::Selections selections = GCL::split_string_by_sub_string_uniq (merged_sels.data(), "|");¤¤					Core::Var<AbstractDumperBase::GenTreeItem> gen_tree = AbstractDumperBase::GenTreeItem::clone_tree (¤						RoseAbstractDumper::s_gen_tree.in()¤						, RoseAbstractDumper::s_gen_tree.in()¤						, ParentSelectFilter (cat)¤					);¤¤					unexist_item = !gen_tree->has_children();¤				}¤			} else {¤				// template has no one generator defined¤				unexist_item = false;¤			}¤¤			if (ri->IsClass("Class") || ri->IsClass("Category")) {¤				AbstractDumperBase::Template& t = AbstractDumperBase::get_template (RoseHelper::get_gen_stereotype(ri));¤				¤				if (it_cat != current_cat) {¤					if (ri->IsClass("Class")) {¤						IRoseClassViewPtr rciv = ((IRoseClassViewPtr)riv);¤						¤						if (t.clrz_iconic_view == AbstractDumperBase::IVT_ST) {¤							if (rciv->GetStereotypeDisplay() != 1) {¤								rciv->PutStereotypeDisplay(1);¤							}¤						} else if (t.clrz_iconic_view == AbstractDumperBase::IVT_ICON) {¤							if (rciv->GetStereotypeDisplay() != 3) {¤								rciv->PutStereotypeDisplay(3);¤							}¤						} else if (t.clrz_iconic_view == AbstractDumperBase::IVT_DECOR) {¤							if (rciv->GetStereotypeDisplay() != 2) {¤								rciv->PutStereotypeDisplay(2);¤							}¤						} else if (t.clrz_iconic_view == AbstractDumperBase::IVT_NONE) {¤							if (rciv->GetStereotypeDisplay() != 0) {¤								rciv->PutStereotypeDisplay(0);¤							}¤						}¤						if (!rciv->SuppressAttributes) {¤							rciv->SuppressAttributes = true;¤						}¤						if (!rciv->SuppressOperations) {¤							rciv->SuppressOperations = true;¤						}							¤					}¤¤					_bstr_t name = RoseHelper::get_context (ri)->Name;¤					if (!strcmp("Primitives", name)) {¤						if (ri->IsClass("Class")) {¤							IRoseClassViewPtr rciv = ((IRoseClassViewPtr)riv);¤							if (rciv->Visibility != false) {¤								rciv->Visibility = false;¤							}¤						}¤						if (riv->GetStereotypeDisplay() != 0) {¤							riv->PutStereotypeDisplay(0);¤						}¤						SET_COLOR_RGB(riv->LineColor, 225, 225, 225);¤						SET_COLOR_RGB(riv->FillColor, 225, 225, 225);¤						SET_COLOR_RGB(riv->Font, 200, 10, 10);¤						if (!riv->Font->Bold) {¤							riv->Font->Bold = true;¤						}¤					} else if (RoseHelper::get_is_native_with_parent(ri)) {¤						SET_COLOR_RGB(riv->LineColor, 225, 225, 225);¤						SET_COLOR_RGB(riv->FillColor, 225, 225, 225);¤						SET_COLOR_RGB(riv->Font, 200, 10, 10);¤						if (riv->Font->Bold) {¤							riv->Font->Bold = false;¤						}¤					} else {¤						if (riv->Font->Bold != false) {¤							riv->Font->Bold = false;¤						}¤¤						SET_COLOR_RGB(riv->FillColor, 255, 255, 255);¤¤						if (t.clrz_forien_line_color.size() >= 3) {¤							SET_COLOR(riv->LineColor, t.clrz_forien_line_color);¤						} else {¤							SET_COLOR_RGB(riv->LineColor, 0, 0, 0);¤						}¤¤						if (t.clrz_forien_font_color.size() >= 3) {¤							SET_COLOR(riv->Font, t.clrz_forien_font_color);¤						} else {¤							SET_COLOR_RGB(riv->Font, 0, 0, 0);¤						}¤						//riv->Height = riv->GetMinHeight ();¤						//riv->Width = riv->GetMinWidth ();¤						if (ri->IsClass("Class")) {¤							((IRoseClassViewPtr)riv)->AutomaticResize = true;¤						}¤						riv->Invalidate();¤					}¤				} else {¤					if (riv->Font->Bold != false) {¤						riv->Font->Bold = false;¤					}¤					if (ri->IsClass("Class")) {¤						IRoseClassViewPtr rciv = ((IRoseClassViewPtr)riv);¤¤						if (t.clrz_iconic_view == AbstractDumperBase::IVT_ST) {¤							if (rciv->GetStereotypeDisplay() != 1) {¤								rciv->PutStereotypeDisplay(1);¤							}¤						} else if (t.clrz_iconic_view == AbstractDumperBase::IVT_ICON) {¤							if (rciv->GetStereotypeDisplay() != 3) {¤								rciv->PutStereotypeDisplay(3);¤							}¤						} else if (t.clrz_iconic_view == AbstractDumperBase::IVT_DECOR) {¤							if (rciv->GetStereotypeDisplay() != 2) {¤								rciv->PutStereotypeDisplay(2);¤							}¤						} else if (t.clrz_iconic_view == AbstractDumperBase::IVT_NONE) {¤							if (rciv->GetStereotypeDisplay() != 0) {¤								rciv->PutStereotypeDisplay(0);¤							}¤						}¤¤						if (rciv->GetSuppressAttributes() != (t.clrz_suppres_atribute ? -1 : 0)) {¤							rciv->PutSuppressAttributes(t.clrz_suppres_atribute ? -1 : 0);						¤						}¤¤						if (rciv->GetSuppressOperations() != (t.clrz_suppres_operation ? -1 : 0)) {¤							rciv->PutSuppressOperations (t.clrz_suppres_operation ? -1 : 0);¤						}¤¤						if (rciv->GetShowOperationSignature() != -1) {¤							rciv->PutShowOperationSignature(-1);¤						}						¤					}¤¤					if (t.clrz_fill_color.size() >= 3) {¤						SET_COLOR(riv->FillColor, t.clrz_fill_color);¤					} else {¤						SET_COLOR_RGB(riv->FillColor, 255, 255, 204);¤					}¤¤					if (t.clrz_line_color.size() >= 3) {¤						SET_COLOR(riv->LineColor, t.clrz_line_color);¤					} else {¤						SET_COLOR_RGB(riv->LineColor, 0, 0, 0);¤					}					¤¤					if (t.clrz_font_color.size() >= 3) {¤						SET_COLOR(riv->Font, t.clrz_font_color);¤					} else {¤						SET_COLOR_RGB(riv->Font, 0, 0, 0);¤					}¤				}				¤			} else if (!unexist_item) {¤				SET_COLOR_RGB(riv->LineColor, 160, 60, 60);¤				SET_COLOR_RGB(riv->FillColor, 255, 200, 200);¤				SET_COLOR_RGB(riv->Font, 0, 0, 0);¤			}¤¤			if (ri->GetUniqueID() == main_guid) {¤				if (!riv->Font->Underline) {¤					riv->Font->Underline = true;¤				}¤			}¤			¤			if (unexist_item) {¤				SET_COLOR_RGB(riv->LineColor, 235, 235, 235);¤				SET_COLOR_RGB(riv->FillColor, 245, 245, 245);¤				SET_COLOR_RGB(riv->Font, 200, 200, 200);¤			}			¤		}¤¤		IRoseClassViewPtr rciv = ((IRoseClassViewPtr)riv);¤		if (rciv != 0) {¤			if (!rciv->AutomaticResize) {¤				rciv->AutomaticResize = true;¤			}¤		} else {¤			//if ((IRoseCategoryPtr)riv->Item == 0) {¤			//	riv->Height = riv->GetMinHeight();¤			//	riv->Width = riv->GetMinWidth();¤			//}¤		}¤	}¤}¤¤void make_visible (CTreeCtrl& tree, HTREEITEM ht_node) {¤	while (ht_node = tree.GetNextItem (ht_node, TVGN_PARENT)) {¤		tree.Expand(ht_node, TVE_EXPAND);¤	}¤}¤¤void fill_node (Selections& selections, CTreeCtrl& tree, HTREEITEM ht_node, RoseAbstractDumper::GenTreeItem* gt_node) {¤	if (ht_node == 0) {¤		ht_node = tree.InsertItem (gt_node->name().data(), TVI_ROOT);¤		tree.SetItemData (ht_node, (DWORD)gt_node);¤		if (selections.find (gt_node->name()) != selections.end() || selections.size() == 0) {¤			tree.SetCheck(ht_node);¤		}¤		¤		RoseHelper::fill_node (selections, tree, ht_node, gt_node);¤	} else {¤		Core::Var<RoseAbstractDumper::GenTreeItem> child = dynamic_cast<RoseAbstractDumper::GenTreeItem*>(gt_node->first_child());¤		while (!child.is_nil()) {¤			HTREEITEM ht_child;¤			¤			if (child->description () != "") {			¤				ht_child = tree.InsertItem (child->description().data(), ht_node);¤			} else {¤				ht_child = tree.InsertItem (child->name().data(), ht_node);¤			}¤¤			if (selections.find (child->name()) != selections.end()) {¤				tree.SetCheck(ht_child);¤				make_visible (tree, ht_child);¤			}¤¤			tree.SetItemData (ht_child, (DWORD)child.ptr());¤¤			if (child->has_children()) {¤				fill_node (selections, tree, ht_child, child.in());¤			}¤			child = dynamic_cast<RoseAbstractDumper::GenTreeItem*>(child->next());¤		}¤	}¤}¤¤void collect_all_checked (const CTreeCtrl& tree, RoseHelper::TreeItems& items, RoseHelper::TreeItems& leaf_items, HTREEITEM current, bool parent_checked) {¤	if (!current) {¤		current = tree.GetRootItem ();¤	}¤	if (tree.GetCheck(current)) {¤		items.push_back (current);¤	}¤	¤	HTREEITEM next = tree.GetNextItem (current, TVGN_CHILD);¤	if (next) {		¤		collect_all_checked (tree, items, leaf_items, next, parent_checked || tree.GetCheck(current));¤	} else {¤		if (parent_checked || tree.GetCheck(current)) {¤			leaf_items.push_back (current);¤		}¤	}¤¤	next = tree.GetNextItem (current, TVGN_NEXT);¤	if (next) {¤		collect_all_checked (tree, items, leaf_items, next, parent_checked);¤	}¤}¤¤bool is_it_main_model_element(IRoseItemPtr item) {¤	//std::string stereotype = RoseHelper::get_gen_stereotype(item);¤	_bstr_t main_guid = item->Model->GetPropertyValue (TOOL_NAME, "MODEL_MAIN_ELEMENT");¤	return main_guid == item->GetUniqueID();¤	//return AbstractDumperBase::get_template (stereotype).main_st;¤}¤¤void set_new_main_model_element(IRoseItemPtr item) {¤	if (item->Model->GetPropertyValue (TOOL_NAME, "MODEL_MAIN_ELEMENT") != item->GetUniqueID()) {¤		item->Model->OverrideProperty(TOOL_NAME, "MODEL_MAIN_ELEMENT", item->GetUniqueID());¤¤		RoseHelper::colorize_all ();¤	}¤}¤¤IRoseItemPtr get_main_model_element() {¤	_bstr_t main_guid = s_rose_app->CurrentModel->GetPropertyValue (TOOL_NAME, "MODEL_MAIN_ELEMENT");¤	IRoseItemPtr main_item = s_rose_app->CurrentModel->FindItemWithID (main_guid);¤	return main_item != 0 ? main_item : s_rose_app->CurrentModel;¤}¤¤void browse_item (IRoseItemPtr item) {¤	IRoseItemPtr item_to_select = RoseHelper::get_nearest_container (item);¤	IRoseClassDiagramPtr diag = RoseHelper::get_self_diagram (item);¤¤	if (diag != 0) {¤		IRoseItemViewPtr iview = diag->GetViewFrom(item_to_select);¤		diag->Activate();¤		iview->SetSelected(true);¤		diag->CenterDiagramToView(iview);¤	} else {¤		MessageBox(0, "No diagrams availble", 0, MB_ICONERROR | MB_OK);¤	}¤}¤¤void delete_item (IRoseItemPtr new_item) {¤	IRoseItemPtr parent_item = new_item->GetContext();¤	TRACE ("%s\n", (const char*)new_item->IdentifyClass());¤	if (new_item->IsClass("Role")) {¤		((IRoseRolePtr)new_item)->GetClass()->DeleteAssociation(((IRoseRolePtr)new_item)->Association);¤	} else if (parent_item->IsClass("Class")) {		¤		if (new_item->IsClass("Class")) {¤			((IRoseClassPtr)parent_item)->DeleteNestedClass ((IRoseClassPtr)new_item);¤		} else if (new_item->IsClass("Attribute")) {¤			((IRoseClassPtr)parent_item)->DeleteAttribute ((IRoseAttributePtr)new_item);¤		} else if (new_item->IsClass("Operation")) {¤			((IRoseClassPtr)parent_item)->DeleteOperation ((IRoseOperationPtr)new_item);¤		} else if (new_item->IsClass("ClassDependency")) {¤			((IRoseClassPtr)parent_item)->DeleteClassDependency((IRoseClassDependencyPtr)new_item);¤		} else {¤			GDS_ASSERT (0);¤		}¤	} else if (parent_item->IsClass("Category")) {¤		if (new_item->IsClass("Class")) {¤			((IRoseCategoryPtr)parent_item)->DeleteClass ((IRoseClassPtr)new_item);¤		} else if (new_item->IsClass("Category")) {¤			((IRoseCategoryPtr)parent_item)->DeleteCategory ((IRoseCategoryPtr)new_item);¤		} else {¤			GDS_ASSERT (0);¤		}¤	} else if (parent_item->IsClass("Operation")) {¤		if (new_item->IsClass("Parameter")) {¤			((IRoseOperationPtr)parent_item)->DeleteParameter((IRoseParameterPtr)new_item);¤		}¤	}¤}¤¤void check_name (IRoseItemPtr item, const std::string& pure_name) /*throw BadName*/ {¤	if (item == 0) {¤		return;¤	}¤	if (item->IsClass("Class") || item->IsClass("Category") || item->IsClass("Operation")) {¤		IRoseItemPtr item_par = item->GetContext();¤¤		class _local {¤		public:¤			static void check_name (IRoseItemPtr item, const std::string& pure_name) /*throw BadName*/ {¤				if (item == 0) {¤					return;¤				}¤¤				if (item->Name == _bstr_t(pure_name.data())) {¤					throw BadName ("Conflict with parent's or (parent base's) content name");¤				}¤				¤				IRoseClassPtr cls_item = item;¤				IRoseCategoryPtr cat_item = item;¤¤				if (cls_item) {¤					IRoseClassCollectionPtr nested_class = cls_item->GetNestedClasses();¤					int i;¤					for (i = 1; i < nested_class->Count+1; i++) {¤						if (nested_class->GetAt(i)->GetName() == _bstr_t(pure_name.data())) {¤							throw BadName ("Conflict with parent's or (parent base's) nested class' name");¤						}¤					}¤¤					IRoseOperationCollectionPtr nested_op = cls_item->GetOperations();¤					for (i = 1; i < nested_op->Count+1; i++) {¤						if (nested_op->GetAt(i)->GetName() == _bstr_t(pure_name.data())) {¤							throw BadName ("Conflict with parent's or (parent base's) nested operation's name");¤						}¤					}¤¤					IRoseRealizeRelationCollectionPtr rels = cls_item->GetRealizeRelations();¤					for (i = 1; i < rels->Count+1; i++) {¤						IRoseRealizeRelationPtr rel = rels->GetAt(i);¤						if (rel != 0) {¤							IRoseClassPtr sup_cls = rel->GetSupplierClass();¤							_local::check_name(sup_cls, pure_name);¤						}¤					}¤¤					IRoseInheritRelationCollectionPtr gens = cls_item->GetInheritRelations();¤					for (i = 1; i < gens->Count+1; i++) {¤						IRoseInheritRelationPtr rel = gens->GetAt(i);	¤						if (rel != 0) {¤							IRoseClassPtr sup_cls = rel->GetSupplierClass();¤							_local::check_name(sup_cls, pure_name);¤						}¤					}¤				}¤				if (cat_item) {¤					IRoseClassCollectionPtr nested_class = cat_item->GetClasses();¤					int i;¤					for (i = 1; i < nested_class->Count+1; i++) {¤						if (nested_class->GetAt(i)->GetName() == _bstr_t(pure_name.data())) {¤							throw BadName ("Conflict with parent's or (parent base's) nested class' name");¤						}¤					}¤¤					IRoseCategoryCollectionPtr nested_cat = cat_item->GetCategories();¤					for (i = 1; i < nested_cat->Count+1; i++) {¤						if (nested_cat->GetAt(i)->GetName() == _bstr_t(pure_name.data())) {¤							throw BadName ("Conflict with parent's or (parent base's) nested category's name");¤						}¤					}¤				}¤			}¤		};¤¤		_local::check_name(item_par, pure_name);¤	}¤}¤¤void check_name (const AbstractDumperBase* par_ad, const std::string& pure_name) /*throw BadName*/ {¤	if (par_ad->get_name_str () == pure_name) {¤		throw BadName ("Conflict with parent or (parent base) name");¤	}¤¤	AbstractDumperBase::ADList_aptr par_cont = par_ad->get_all_contents ();¤¤	AbstractDumperBase::ADList::iterator it;¤	for (it = par_cont->begin(); it != par_cont->end(); it++) {¤		if ((*it)->get_model_class_str () != "Attribute" && (*it)->get_model_class_str () != "Parameter" ) {¤			if ((*it)->get_name_str () == pure_name) {¤				throw BadName ("Conflict with parent's or (parent base's) content name");¤			}¤		}¤	}¤}¤¤typedef std::string ModelStamp;¤¤/*¤all:¤	ADVector m_activity_seq;¤	ADList m_diagrams;¤¤	//mutable std::string m_abstract_type;¤	//mutable std::string m_visability_type;¤	//mutable char m_is_native;¤	¤?  ¤	static Counters s_counters_value;¤	mutable Counters m_counters;¤¤sequence ¤	std::string m_name;¤	AbstractDumperBase* m_reciver;¤	AbstractDumperBase* m_sender;¤	AbstractDumperBase* m_operation;¤	std::string m_message;¤¤*/¤¤void add_to_stamp (ModelStamp& stamp, IRoseItemPtr item) {¤	stamp += item->GetUniqueID ();¤	stamp += item->Stereotype;¤	int i;¤¤	if (item->IsClass ("Category")) {¤		IRoseCategoryCollectionPtr cats = ((IRoseCategoryPtr)item)->GetCategories ();¤		for (i = 1; i < cats->Count + 1; i++) {¤			add_to_stamp (stamp, cats->GetAt(i));¤		}¤¤		IRoseClassCollectionPtr clss = ((IRoseCategoryPtr)item)->GetClasses ();¤		for (i = 1; i < clss->Count + 1; i++) {¤			add_to_stamp (stamp, clss->GetAt(i));¤		}¤¤		//////¤		IRoseCategoryDependencyCollectionPtr dps = ((IRoseCategoryPtr)item)->GetCategoryDependencies ();¤		for (i = 1; i < dps->Count + 1; i++) {¤			IRoseItemPtr s = dps->GetAt(i)->GetSupplier();¤			if (s != 0) {¤				stamp += s->GetUniqueID();¤			}¤		}¤	} else if (item->IsClass ("Class")) {¤		IRoseClassCollectionPtr clss = ((IRoseClassPtr)item)->GetNestedClasses ();¤		for (i = 1; i < clss->Count + 1; i++) {¤			add_to_stamp (stamp, clss->GetAt(i));¤		}¤¤		IRoseAttributeCollectionPtr atrs = ((IRoseClassPtr)item)->GetAttributes ();¤		for (i = 1; i < atrs->Count + 1; i++) {¤			add_to_stamp (stamp, atrs->GetAt(i));¤		}¤¤		IRoseOperationCollectionPtr ops = ((IRoseClassPtr)item)->GetOperations ();¤		for (i = 1; i < ops->Count + 1; i++) {¤			add_to_stamp (stamp, ops->GetAt(i));¤		}¤¤		IRoseParameterCollectionPtr pars = ((IRoseClassPtr)item)->GetParameters ();¤		for (i = 1; i < pars->Count + 1; i++) {¤			add_to_stamp (stamp, pars->GetAt(i));¤		}¤¤		IRoseRoleCollectionPtr rls = ((IRoseClassPtr)item)->GetRoles ();¤		for (i = 1; i < rls->Count + 1; i++) {¤			add_to_stamp (stamp, rls->GetAt(i));¤		}¤¤		IRoseClassDependencyCollectionPtr dps = ((IRoseClassPtr)item)->GetClassDependencies ();¤		for (i = 1; i < dps->Count + 1; i++) {¤			add_to_stamp (stamp, dps->GetAt(i));¤		}¤		////¤		IRoseRealizeRelationCollectionPtr rs = ((IRoseClassPtr)item)->GetRealizeRelations();¤		for (i = 1; i < rs->Count + 1; i++) {¤			IRoseItemPtr s = rs->GetAt(i)->GetSupplier();¤			if (s != 0) {¤				stamp += s->GetUniqueID();¤			}¤		}¤		IRoseInheritRelationCollectionPtr is = ((IRoseClassPtr)item)->GetInheritRelations ();¤		for (i = 1; i < is->Count + 1; i++) {¤			IRoseItemPtr s = is->GetAt(i)->GetSupplier();¤			if (s != 0) {¤				stamp += s->GetUniqueID();¤			}¤		}¤		stamp += RoseHelper::get_abstraction_type(item);¤		stamp += RoseHelper::get_visability_type(item);¤	} else if (item->IsClass ("Attribute")) {¤		IRoseItemPtr s = ((IRoseAttributePtr)item)->GetTypeClass ();¤		if (s != 0) {¤			stamp += s->GetUniqueID();¤		}¤		stamp += RoseHelper::get_abstraction_type(item);¤		stamp += RoseHelper::get_visability_type(item);¤	} else if (item->IsClass ("Role"))  {¤		IRoseItemPtr s = ((IRoseRolePtr)item)->GetClass();¤		if (s != 0) {¤			stamp += s->GetUniqueID();¤		}¤¤		IRoseAttributeCollectionPtr atrs = ((IRoseRolePtr)item)->GetKeys ();¤		for (i = 1; i < atrs->Count + 1; i++) {¤			add_to_stamp (stamp, atrs->GetAt(i));¤		}¤		stamp += RoseHelper::get_abstraction_type(item);¤		stamp += RoseHelper::get_visability_type(item);¤	} else if (item->IsClass ("Operation")) {¤		IRoseClassPtr s = ((IRoseOperationPtr)item)->GetResultClass ();¤		if (s != 0) {¤			stamp += s->GetUniqueID();¤		} else {¤			stamp += ((IRoseOperationPtr)item)->GetReturnType ();¤		}¤		IRoseParameterCollectionPtr pars = ((IRoseOperationPtr)item)->GetParameters ();¤		for (i = 1; i < pars->Count + 1; i++) {¤			add_to_stamp (stamp, pars->GetAt(i));¤		}¤		stamp += RoseHelper::get_abstraction_type(item);¤		stamp += RoseHelper::get_visability_type(item);¤	} else if (item->IsClass ("Parameter")) {		¤		IRoseClassPtr s = ((IRoseParameterPtr)item)->GetTypeClass();¤		if (s != 0) {¤			stamp += s->GetUniqueID();¤		}¤	} else if (item->IsClass ("ClassDependency")) {¤		IRoseClassPtr s = ((IRoseClassDependencyPtr)item)->GetSupplier();¤		if (s != 0) {¤			stamp += s->GetUniqueID();¤		}¤	} else {¤		assert (0);¤	}¤	¤	stamp += ".";¤}¤¤bool check_model_for_changes () {¤	IRoseCategoryPtr root_cat = RoseHelper::s_rose_app->CurrentModel->RootCategory;¤¤	static ModelStamp saved_stamp;¤	ModelStamp stamp;¤	add_to_stamp (stamp, root_cat);¤¤	TRACE ("ModelStamp size is %d\n", stamp.size());¤	¤	bool res = false;¤	if (stamp != saved_stamp) {¤		RoseAbstractDumper::reset_model_tree_root ();¤		saved_stamp = stamp;¤		res = true;¤	}¤	return res;¤}¤¤int get_image_id (const AbstractDumperBase* adb) {¤	if (adb->get_model_class_str() == "Class") {¤		return 1;¤	} else if (adb->get_model_class_str() == "Category") {¤		return 0;¤	} else if (adb->get_model_class_str() == "Operation") {¤		return 5;¤	} else if (adb->get_model_class_str() == "Attribute") {¤		return 4;¤	} else if (adb->get_model_class_str() == "Dependency") {¤		return 6;¤	} else if (adb->get_model_class_str() == "Parameter") {¤		return 10;¤	} else {¤		return -1;¤	}¤}¤¤bool has_content (IRoseItemPtr item) {¤	IRoseClassPtr cls = item;¤	IRoseCategoryPtr cat = item;¤	IRoseOperationPtr op = item;¤	IRoseRolePtr rol = item;¤	¤	if (cls != 0) {¤		if (cls->GetNestedClasses()->Count) {¤			return true;¤		}¤		IRoseRoleCollectionPtr rl_attrs = cls->GetAssociateRoles();¤		if (rl_attrs->Count) {			¤			for (int i = 1; i < rl_attrs->Count + 1; i++) {¤				if (rl_attrs->GetAt(i)->Navigable) {¤					return true;¤				}¤			}¤		}¤		if (cls->GetAttributes()->Count) {¤			return true;¤		}¤		if (cls->GetClassDependencies()->Count) {¤			return true;¤		}¤		if (cls->GetOperations()->Count) {¤			return true;¤		}¤		if (cls->GetParameters()->Count) {¤			return true;¤		}¤	}¤	if (cat != 0) {¤		if (cat->GetClasses()->Count) {¤			return true;¤		}¤		if (cat->GetCategories()->Count) {¤			return true;¤		}¤	}¤	if (op != 0) {¤		if (op->GetParameters()->Count) {¤			return true;¤		}¤	}¤	if (rol != 0) {¤		if (rol->GetKeys()->Count) {¤			return true;¤		}¤	}¤¤	return false;¤}¤¤//#UC END# *4571F040008C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571F040008C_USER_INCLUDES*"
			    value      	"//#UC START# *4571F040008C_USER_INCLUDES*¤#include <functional>¤#include <map>¤#include <set>¤#include <afxcmn.h>¤¤//#UC END# *4571F040008C_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4571F040008C_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4571F040008C_USER_DEFINITION*¤#define TOOL_NAME                  OLESTR("MDA Generator")¤#define USER_PROP_NAME             OLESTR("MDA Generator User Properties")¤#define PROP_ROOTDIR			   OLESTR("RootDir")¤#define PROP_OUTPUTPATH            OLESTR("DefaultOutPut")¤#define PROP_LINKEDITEM            OLESTR("LinkedItem")¤#define PROP_ATTR_SET_RAISES	   OLESTR("SetRaises")¤#define PROP_ATTR_GET_RAISES	   OLESTR("GetRaises")¤#define PROP_TEMPLATE_FILE         OLESTR("TempliteFile")¤#define PROP_AUTO_COUNTER          OLESTR("AutoCounter")¤#define PROP_IS_NATIVE             OLESTR("IsNative")¤#define PROP_DERIVED_IMPLEMENT	   OLESTR("DerivedImplement")¤#define PROP_DERIVED_OVERLOAD	   OLESTR("DerivedOverload")¤#define PROP_IMPLEMENT_SELECT_TYPE  OLESTR("ImplementSelectType")¤#define PROP_OVERLOAD_SELECT_TYPE  OLESTR("OverloadSelectType")¤#define PROP_ITEM_ABSTRACT		   OLESTR("AbstarctOperation")¤#define PROP_ITEM_VISABILITY	   OLESTR("VisabilityType")¤#define PROP_TARGET_STEREOTYPE     OLESTR("TargetStereotype")¤#define PROP_APPLGEN			   OLESTR("ApplyedGens")¤¤#define SET_COLOR(TARGET,SOURCE)      \¤	if (TARGET->Red != SOURCE[0]) {   \¤		TARGET->Red = SOURCE[0];      \¤	}                                 \¤	if (TARGET->Green != SOURCE[1]) { \¤		TARGET->Green = SOURCE[1];    \¤	}                                 \¤	if (TARGET->Blue != SOURCE[2]) {  \¤		TARGET->Blue = SOURCE[2];     \¤	}¤¤#define SET_COLOR_RGB(TARGET,R,G,B)      \¤	if (TARGET->Red != R) {   \¤		TARGET->Red = R;      \¤	}                                 \¤	if (TARGET->Green != G) { \¤		TARGET->Green = G;    \¤	}                                 \¤	if (TARGET->Blue != B) {  \¤		TARGET->Blue = B;     \¤	}¤¤IRoseApplicationPtr rose_app ();¤¤void set_rose_app (IRoseApplicationPtr app);¤¤void clear_incremented_counters ();¤¤void delete_stereotype_from_map (const _bstr_t& key);¤¤void check_name (IRoseItemPtr item, const std::string& pure_name) /*throw BadName*/;¤¤void init_logs ();¤¤void write_info_log (const char* mess);¤¤void write_error_log (const char* mess);¤¤void write_warning_log (const char* mess);¤¤bool has_content (IRoseItemPtr item);¤¤int get_image_id (const AbstractDumperBase* adb);¤¤void delete_item (IRoseItemPtr new_item);¤¤void browse_item (IRoseItemPtr new_item);¤¤void reset_template ();¤¤bool load_template ();¤¤std::string load_template (IRoseItemPtr root, const std::string& use_file, bool one_try = false);¤¤std::string create_gen_stereotype (IRoseItemPtr item);¤¤IRoseCategoryPtr get_parent_category (IRoseItemPtr item);¤¤IRoseItemPtr get_nearest_container (IRoseItemPtr item);¤¤IRoseClassDiagramPtr get_self_diagram (IRoseItemPtr item);¤¤RoseItemMap find_all_visible_item (IRoseItemPtr from, const GCL::StrSet& stereotypes);¤¤RoseItemMap find_all_visible_ex (IRoseItemPtr from, const GCL::StrSet& stereotypes);¤¤std::string get_full_name (IRoseItemPtr item);¤¤std::string get_gen_stereotype (IRoseItemPtr item);¤¤std::string get_template_file(IRoseItemPtr item, bool& by_parent);¤¤std::string get_root_dir(IRoseItemPtr item);¤¤void set_template_file(IRoseItemPtr item, const std::string& value);¤¤void set_root_dir(IRoseItemPtr item, const std::string& value);¤¤bool override_property (IRoseElementPtr item, _bstr_t tool_name, _bstr_t prop_name, _bstr_t value);¤¤GCL::StrVector get_available_target_stereotypes (IRoseItemPtr item);	¤¤std::string get_auto_counter(IRoseItemPtr item);¤¤std::string get_link_type (IRoseItemPtr item);¤¤bool set_link_type (IRoseItemPtr item, const std::string& lt);¤¤bool get_is_native(IRoseItemPtr item);¤¤bool get_is_native_with_parent(IRoseItemPtr item, bool& with_parent);¤¤bool get_is_native_with_parent(IRoseItemPtr item);¤¤bool set_is_native(IRoseItemPtr item, bool value);¤¤void set_parameterized(IRoseItemPtr item, bool value);¤¤RoseItemMap find_all_derived_abstract (IRoseItemPtr from);¤¤void find_all_derived_abstract (IRoseItemPtr from, GCL::StrSet& res);¤¤RoseItemMap find_all_derived_impl (IRoseItemPtr from);¤¤void find_all_derived_impl (IRoseItemPtr from, GCL::StrSet& res);¤¤std::string get_abstraction_type (IRoseItemPtr item);¤¤std::string get_visability_type(IRoseItemPtr item);¤¤void set_visability_type (IRoseItemPtr item, std::string& vt);¤¤bool is_it_abstract (IRoseItemPtr item);¤¤bool is_it_implementable (IRoseItemPtr item);¤¤bool has_it_derived_impl (IRoseItemPtr item);¤¤std::string get_target_stereotype(IRoseItemPtr item);¤¤bool set_target_stereotype (IRoseItemPtr item, const std::string& st);¤¤IRoseItemPtr get_context(IRoseItemPtr item);¤¤std::string get_overwriten_prop (IRoseItemPtr item);¤¤void colorize(const IRoseDiagramPtr& d);¤¤void colorize_all ();¤¤void fill_node (Selections& selections, CTreeCtrl& tree, HTREEITEM ht_node, RoseAbstractDumper::GenTreeItem* gt_node);¤¤typedef std::vector<HTREEITEM> TreeItems;¤¤void collect_all_checked (const CTreeCtrl& tree, TreeItems& items, TreeItems& leaf_items, HTREEITEM current = NULL, bool parent_checked = false);¤¤bool is_it_available_by_type (IRoseItemPtr item, IRoseItemPtr item_context, const AbstractDumperBase::Templates::value_type& st_tp);¤¤bool is_it_available_by_constr (IRoseItemPtr item, IRoseItemPtr item_context, const AbstractDumperBase::Templates::value_type& st_tp);¤¤bool is_it_main_model_element(IRoseItemPtr item);¤¤void set_new_main_model_element(IRoseItemPtr item);¤¤IRoseItemPtr get_main_model_element();¤¤typedef std::set<const AbstractDumperBase::Templates::value_type*> TemplatesSet;¤¤TemplatesSet get_available_parent_by_constr (const AbstractDumperBase::Templates::value_type& child);¤¤bool check_model_for_changes ();¤¤struct ParentSelectFilter {¤	ParentSelectFilter (IRoseItemPtr item): m_item (item) {¤	}¤¤	/*bool has_parent_project_filters () const {¤		IRoseItemPtr context = RoseHelper::get_context (m_item);¤¤		while (context) {¤			_bstr_t prop_key = PROP_APPLGEN;¤			prop_key += context->GetUniqueID();¤			std::string merged_sels = context->Model->GetPropertyValue(TOOL_NAME, prop_key);¤			if (merged_sels != "") {¤				return true;¤			}¤¤			context = RoseHelper::get_context (context);¤		}¤		return false;¤	}*/¤	¤	bool is_meet (const AbstractDumperBase::GenTreeItem* node) const {¤		IRoseItemPtr context = RoseHelper::get_context (m_item);¤¤		while (context) {¤			//_bstr_t prop_key = PROP_APPLGEN;¤			//prop_key += context->GetUniqueID();¤			//std::string merged_sels = RoseHelper::get_main_model_element()->GetPropertyValue(TOOL_NAME, prop_key);¤			//if (merged_sels == "") {¤				std::string merged_sels = context->GetPropertyValue(TOOL_NAME, PROP_APPLGEN);¤			//}¤¤			context = RoseHelper::get_context (context);¤¤			RoseHelper::Selections selections = GCL::split_string_by_sub_string_uniq (merged_sels.data(), "|");¤¤			if (selections.size()) {¤				bool good = false;¤¤				Core::Var<const AbstractDumperBase::GenTreeItem> parent = AbstractDumperBase::GenTreeItem::_duplicate(node);¤¤				if (this->check_parent_down (parent.in(), selections)) {¤					good = true;¤				} else {¤					while (!parent.is_nil()) {¤						if (selections.find (parent->name()) != selections.end()) {¤							good = true;¤							break;¤						}¤¤						parent = dynamic_cast<const AbstractDumperBase::GenTreeItem*>(parent->parent());¤					}¤				}¤¤				if (!good) {¤					return false;¤				}¤			}¤		}¤¤		return true;¤	}¤¤	void each_func (const GCL::StaticNode* item, RoseHelper::Selections& all_child_gens) const {¤		all_child_gens.insert(dynamic_cast<const AbstractDumperBase::GenTreeItem*>(item)->name());¤	}¤¤	bool check_parent_down (const AbstractDumperBase::GenTreeItem* root_gen, const RoseHelper::Selections& selections) const {¤		RoseHelper::Selections all_child_gens;¤		root_gen->for_each (*this, all_child_gens);¤		¤		if (std::find_first_of(all_child_gens.begin(), all_child_gens.end(), selections.begin(), selections.end()) != all_child_gens.end()) {¤			return true;¤		} else {¤			return false;¤		}¤	}¤¤	IRoseItemPtr m_item;¤};¤//#UC END# *4571F040008C_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseHelper.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/MDProcess/MDAModel/RoseDumpers/RoseHelper.h"))
		    quid       	"4571F040008C"
		    documentation 	"вспомогательные функции в основном для работы с интерфейсов Розы"
		    stereotype 	"UtilityPack"
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571F7020222"
			    supplier   	"Logical View::shared::GCL::str::str_op"
			    quidu      	"4503E01500CB")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571F7080222"
			    stereotype 	"uses"
			    supplier   	"Logical View::shared::GCL::alg::CycleChecker"
			    quidu      	"4501338B00FA")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571F70C03D8"
			    stereotype 	"uses"
			    supplier   	"Logical View::shared::GCL::alg::container_op"
			    quidu      	"450130B00213")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571F7210242"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumpFactory"
			    quidu      	"4571DD4D0399")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4571F7370261"
			    stereotype 	"uses"
			    supplier   	"Logical View::MDProcess::MDAModel::AbstractDumpers::SyntaxDef"
			    quidu      	"4571A3B70109")
			(object Uses_Relationship
			    quid       	"4572058500DA"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper"
			    quidu      	"4571D1A5009C"))
		    operations 	(list Operations
			(object Operation "check_name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"GetRaises"
				    value      	"4572051902FD")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*457204D401D4*"
				    value      	(value Text 
|//#UC START# *457204D401D4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *457204D401D4*
				    )))
			    quid       	"457204D401D4"
			    parameters 	(list Parameters
				(object Parameter "ad"
				    quid       	"45720552030D"
				    type       	"AbstractDumperBase"
				    quidu      	"4571A2EF02CE")
				(object Parameter "pure_name"
				    quid       	"45720552033C"
				    type       	"a-string"
				    quidu      	"452257A0036F"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "position_in_diagram"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45CCC76E0157*"
				    value      	(value Text 
|//#UC START# *45CCC76E0157*¤	POINT point = {x, y};¤	if (point_to_diagram (point, diag)) {¤		IRoseItemViewPtr item_view = diag->GetViewFrom (item);¤		item_view->XPosition = (short)point.x;¤		item_view->YPosition = (short)point.y;¤		RoseHelper::colorize (diag);¤	}¤	/*HWND diag_wnd = WindowFromPoint (point);¤	if (diag_wnd != NULL && is_diagram_window (diag_wnd, diag)) {¤		¤		IRoseItemViewPtr item_view = diag->GetViewFrom (item);¤¤		SCROLLINFO horiz_scroll = {};¤		SCROLLINFO vert_scroll = {};¤¤		CWnd* parent = CWnd::FromHandle (::GetParent (diag_wnd));		¤		if (parent != NULL) {¤			CWnd* first_scroll = CWnd::FindWindowEx (¤				parent->GetSafeHwnd ()¤				, NULL¤				, "ScrollBar"¤				, NULL¤			);¤			CWnd* second_scroll = NULL;¤			if (first_scroll) {¤				second_scroll = CWnd::FindWindowEx (¤					parent->GetSafeHwnd ()¤					, first_scroll->GetSafeHwnd ()¤					, "ScrollBar"¤					, NULL¤				);¤			}¤			if (first_scroll) {¤				RECT cl_rect = {};¤				::GetWindowRect (first_scroll->GetSafeHwnd (), &cl_rect);¤				CScrollBar temp;¤				temp.Attach (first_scroll->GetSafeHwnd ());¤				if ((cl_rect.bottom - cl_rect.top) <= 20) { // this is horiz scroll!!!					¤					temp.GetScrollInfo (&horiz_scroll);¤				} else { //this is vert scroll¤					temp.GetScrollInfo (&vert_scroll);¤				}¤				temp.Detach ();¤			}¤			if (second_scroll) {¤				RECT cl_rect = {};¤				::GetWindowRect (second_scroll->GetSafeHwnd (), &cl_rect);¤				CScrollBar temp;¤				temp.Attach (second_scroll->GetSafeHwnd ());¤				if ((cl_rect.bottom - cl_rect.top) <= 20) { // this is horiz scroll!!!¤					temp.GetScrollInfo (&horiz_scroll);¤				} else { //this is vert scroll¤					temp.GetScrollInfo (&vert_scroll);¤				}¤				temp.Detach ();¤			}¤		}¤		::ScreenToClient (diag_wnd, &point);¤		item_view->XPosition = (short)(abs (156 + (short)(point.x + horiz_scroll.nPos)*2.9)*100/diag->ZoomFactor);¤		item_view->YPosition = (short)(abs (96 + (short)(point.y + vert_scroll.nPos)*2.9)*100/diag->ZoomFactor);¤		RoseHelper::colorize (diag);¤	}*/¤	//#UC END# *45CCC76E0157*
				    )))
			    quid       	"45CCC76E0157"
			    documentation 	
|метод корретирует положение элемента на диаграмме в соответствии 
|с координатами курсора (x, y)
			    
			    parameters 	(list Parameters
				(object Parameter "diag"
				    quid       	"45CCC7B3005D"
				    type       	"IRoseDiagramPtr"
				    quidu      	"4571F3BE00BB")
				(object Parameter "item"
				    quid       	"45CCC7B300AB"
				    type       	"IRoseItemPtr"
				    quidu      	"4571DE0802BF")
				(object Parameter "x"
				    quid       	"45CCC7B300EA"
				    type       	"long"
				    quidu      	"3DBFFD7002C2")
				(object Parameter "y"
				    quid       	"45CCC7B30148"
				    type       	"long"
				    quidu      	"3DBFFD7002C2"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "is_diagram_window"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45CCC8AE03B9*"
				    value      	(value Text 
|//#UC START# *45CCC8AE03B9*¤	class CFindWnd {¤	private:¤	   //////////////////¤	   // This private function is used with EnumChildWindows to find the ¤	   // child with a given class name. Returns FALSE if found (to stop ¤	   // enumerating).¤	   //¤	   static BOOL CALLBACK FindChildClassHwnd(HWND hwndParent, LPARAM lParam) {¤		  CFindWnd *pfw = (CFindWnd*)lParam;¤		  HWND hwnd = FindWindowEx(hwndParent, NULL, pfw->m_classname, pfw->m_caption);¤		  if (hwnd) {¤			 pfw->m_hWnd = hwnd;  // found: save it¤			 return FALSE;        // stop enumerating¤		  }¤		  // recurse¤		  EnumChildWindows(hwndParent, FindChildClassHwnd, lParam); ¤		  return TRUE;            // keep looking¤	   }¤¤	public:¤	   LPCSTR m_classname;        // class name to look for¤	   LPCSTR m_caption;        // caption to look for¤	   HWND m_hWnd;               // HWND if found¤¤	   // ctor does the work—just instantiate and go¤	   CFindWnd(HWND hwndParent, LPCSTR classname, LPCSTR caption)¤		  : m_hWnd(NULL), m_classname(classname), m_caption (caption) ¤	   {¤		  FindChildClassHwnd(hwndParent, (LPARAM)this);¤	   }¤	};¤	¤	CWnd* wnd = CWnd::FromHandle (h_wnd);¤	CWnd* root = NULL;¤	if (wnd) {¤		root = wnd->GetTopLevelParent ();	¤	}¤	if (diag) {¤		IRoseCategoryPtr context = diag->GetParentContext ();				¤		std::string window_diagram_name = "Class Diagram: " + context->GetName () + " / " + diag->GetName ();¤		CFindWnd fw (root->GetSafeHwnd (), NULL, window_diagram_name.data ());¤		if (fw.m_hWnd == ::GetParent (h_wnd) || fw.m_hWnd == h_wnd) {¤			return true;¤		} else {¤			return false;¤		}¤	}¤	return false;¤	//#UC END# *45CCC8AE03B9*
				    )))
			    quid       	"45CCC8AE03B9"
			    documentation 	"метод определяет является ли окно h_wnd окном диаграммы"
			    parameters 	(list Parameters
				(object Parameter "h_wnd"
				    quid       	"45CCC92F006D"
				    type       	"HWND"
				    quidu      	"45CC30BD02DE")
				(object Parameter "diag"
				    quid       	"45CCC92F00BB"
				    type       	"IRoseDiagramPtr"
				    quidu      	"4571F3BE00BB"))
			    result     	"boolean"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFE100240")
			(object Operation "get_element"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45F50B8D01F4*"
				    value      	(value Text 
|//#UC START# *45F50B8D01F4*¤	IRoseElementPtr elem;¤	POINT in_point = {x, y};¤	if (point_to_diagram (in_point, diag)) {¤		::POINT mfc_point = {in_point.x, in_point.y};¤		IRoseItemViewCollectionPtr views = diag->GetItemViews ();¤		short count = views->Count;¤		for (short i = 1; i <= count; ++i) {¤			IRoseItemViewPtr view = views->GetAt (i);			¤			if (view->PointInView ((short)mfc_point.x, (short)mfc_point.y)) {¤				elem = view->GetItem ();¤				break;¤			}¤		}¤	}¤	return elem;¤	//#UC END# *45F50B8D01F4*
				    )))
			    quid       	"45F50B8D01F4"
			    documentation 	"возвращает элемент диаграммы по заданным координатам"
			    parameters 	(list Parameters
				(object Parameter "diag"
				    quid       	"45F50BCB0157"
				    type       	"IRoseDiagramPtr"
				    quidu      	"4571F3BE00BB")
				(object Parameter "x"
				    quid       	"45F50BDF01C5"
				    type       	"long"
				    quidu      	"3DBFFD7002C2")
				(object Parameter "y"
				    quid       	"45F50BDF0261"
				    type       	"long"
				    quidu      	"3DBFFD7002C2"))
			    result     	"IRoseElementPtr"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"45C3177C0177")
			(object Operation "point_to_diagram"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45F514A400DA*"
				    value      	(value Text 
|//#UC START# *45F514A400DA*¤	::POINT mfc_point = {point.x, point.y};¤	HWND diag_wnd = WindowFromPoint (mfc_point);¤	if (diag_wnd != NULL && is_diagram_window (diag_wnd, diag)) {¤¤		SCROLLINFO horiz_scroll = {};¤		SCROLLINFO vert_scroll = {};¤¤		CWnd* parent = CWnd::FromHandle (::GetParent (diag_wnd));		¤		if (parent != NULL) {¤			CWnd* first_scroll = CWnd::FindWindowEx (¤				parent->GetSafeHwnd ()¤				, NULL¤				, "ScrollBar"¤				, NULL¤			);¤			CWnd* second_scroll = NULL;¤			if (first_scroll) {¤				second_scroll = CWnd::FindWindowEx (¤					parent->GetSafeHwnd ()¤					, first_scroll->GetSafeHwnd ()¤					, "ScrollBar"¤					, NULL¤				);¤			}¤			if (first_scroll) {¤				RECT cl_rect = {};¤				::GetWindowRect (first_scroll->GetSafeHwnd (), &cl_rect);¤				CScrollBar temp;¤				temp.Attach (first_scroll->GetSafeHwnd ());¤				if ((cl_rect.bottom - cl_rect.top) <= 20) { // this is horiz scroll!!!					¤					temp.GetScrollInfo (&horiz_scroll);¤				} else { //this is vert scroll¤					temp.GetScrollInfo (&vert_scroll);¤				}¤				temp.Detach ();¤			}¤			if (second_scroll) {¤				RECT cl_rect = {};¤				::GetWindowRect (second_scroll->GetSafeHwnd (), &cl_rect);¤				CScrollBar temp;¤				temp.Attach (second_scroll->GetSafeHwnd ());¤				if ((cl_rect.bottom - cl_rect.top) <= 20) { // this is horiz scroll!!!¤					temp.GetScrollInfo (&horiz_scroll);¤				} else { //this is vert scroll¤					temp.GetScrollInfo (&vert_scroll);¤				}¤				temp.Detach ();¤			}¤		}		¤		::ScreenToClient (diag_wnd, &mfc_point);¤		const double k_x = (1233-150)/(828-476);¤		const double k_y = (1962-132)/(696-110);¤		point.x = (long)((mfc_point.x + horiz_scroll.nPos)*k_x*100/diag->ZoomFactor);¤		point.y = (long)((mfc_point.y + vert_scroll.nPos)*k_y*100/diag->ZoomFactor);¤		return true;¤	}¤	return false;¤	//#UC END# *45F514A400DA*
				    )))
			    quid       	"45F514A400DA"
			    documentation 	"приводит точки из координат экрана в координаты диаграммы"
			    parameters 	(list Parameters
				(object Parameter "inout point"
				    quid       	"45F516CF004E"
				    type       	"POINT"
				    quidu      	"45F5174B006D")
				(object Parameter "diag"
				    quid       	"45F515050213"
				    type       	"IRoseDiagramPtr"
				    quidu      	"4571F3BE00BB"))
			    result     	"boolean"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFE100240"))
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "BadName"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"stored message"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"OS_GUID"
				    value      	"4A700E36-3B13-4045-AA38-75DC1BD8558A")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"h:*4572051902FD*"
				    value      	(value Text 
|//#UC START# *4572051902FD*¤		//#UC END# *4572051902FD*
				    )))
			    quid       	"4572051902FD"
			    stereotype 	"Exception"
			    operations 	(list Operations
				(object Operation "ctor"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator User Properties"
					    name       	"debug log"
					    value      	"false")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"h:*4572065200DA_BASE_INIT*"
					    value      	(value Text 
|//#UC START# *4572065200DA_BASE_INIT*¤		: m_message (mess)¤	//#UC END# *4572065200DA_BASE_INIT*
					    ))
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"h:*4572065200DA_BODY*"
					    value      	(value Text 
|//#UC START# *4572065200DA_BODY*¤		//#UC END# *4572065200DA_BODY*
					    )))
				    quid       	"4572065200DA"
				    stereotype 	"ctor"
				    parameters 	(list Parameters
					(object Parameter "mess"
					    quid       	"4572065D0128"
					    type       	"string"
					    quidu      	"3DBFFE240068"))
				    concurrency 	"Sequential"
				    opExportControl 	"Public"
				    uid        	0)))
			(object Class "RoseItemMap"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45754FBD01D1"
			    stereotype 	"Map")
			(object Class "Selections"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4575518901D1"
			    stereotype 	"Typedef"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"457551BC0192"
				    supplier   	"Logical View::shared::GCL::data::std_defs::StrSet"
				    quidu      	"44FEBE140197")))
			(object Class "ExecResult"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"457585E402CB"
			    stereotype 	"Enum"
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "ER_EDIT_OK"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"457585FB0328"
				    exportControl 	"Public"
				    Containment 	"By Value")
				(object ClassAttribute "ER_CANCEL"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"4575860A02EA"
				    exportControl 	"Public"
				    Containment 	"By Value")
				(object ClassAttribute "ER_DELETE"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"457586180154"
				    exportControl 	"Public"
				    Containment 	"By Value")))
			(object Class "POINT"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45F5174B006D"
			    stereotype 	"Struct"
			    class_attributes 	(list class_attribute_list
				(object ClassAttribute "x"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45F5176003C8"
				    type       	"long"
				    quidu      	"3DBFFD7002C2"
				    exportControl 	"Public"
				    Containment 	"By Value")
				(object ClassAttribute "y"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"45F5176C0280"
				    type       	"long"
				    quidu      	"3DBFFD7002C2"
				    exportControl 	"Public"
				    Containment 	"By Value")))))
		(object Association "$UNNAMED$27"
		    quid       	"457550080182"
		    roles      	(list role_list
			(object Role "$UNNAMED$28"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45755008025D"
			    supplier   	"Logical View::Primitives::a-string"
			    quidu      	"452257A0036F"
			    keys       	(list class_attribute_list
				(object ClassAttribute "NewKey"
				    attributes 	(list Attribute_Set
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"ValueInitialized"
					    value      	"true")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"AbstarctOperation"
					    value      	"regular")
					(object Attribute
					    tool       	"MDA Generator"
					    name       	"IsNative"
					    value      	"false"))
				    quid       	"4575500D027C"
				    type       	"a-string"
				    exportControl 	"Public"
				    Containment 	"By Value"))
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$29"
			    quid       	"45755008026D"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper::RoseItemMap"
			    quidu      	"45754FBD01D1"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$30"
		    quid       	"4575AB8F01FF"
		    roles      	(list role_list
			(object Role "$UNNAMED$31"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4575AB8F0309"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::IRoseItemWrapper"
			    quidu      	"4575AB0200E6"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$32"
			    quid       	"4575AB8F030B"
			    supplier   	"Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::IRoseItemPtr_vector"
			    quidu      	"4575AB60001B"
			    is_aggregate 	TRUE))))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"456C0DD70110"))
		    quid       	"4571D1970167"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	3038
		    origin_y   	3535
		    items      	(list diagram_item_list
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractDumper" @109
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(309, 1002)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@109
				location   	(139, 975)
				nlines     	1
				max_width  	340
				justify    	0
				label      	"AbstractDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@109
				location   	(139, 925)
				anchor     	10
				nlines     	1
				max_width  	340
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4571A2CB02DE"
			    width      	358
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseSequenceDumper" @110
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1569, 1203)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@110
				location   	(1175, 1144)
				fill_color 	13434879
				nlines     	1
				max_width  	788
				justify    	0
				label      	"RoseSequenceDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@110
				location   	(1175, 1094)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	788
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571D2DD0196"
			    width      	806
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSequenceDumper" @111
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1677, 858)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@111
				location   	(1421, 831)
				nlines     	1
				max_width  	512
				justify    	0
				label      	"AbstractSequenceDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@111
				location   	(1421, 781)
				anchor     	10
				nlines     	1
				max_width  	512
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4571A360030D"
			    width      	530
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @112
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571D2EE02FD"
			    client     	@110
			    supplier   	@111
			    vertices   	(list Points
				(1605, 1081)
				(1648, 947))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseSequenceObject" @113
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2622, 1209)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@113
				location   	(2199, 1150)
				fill_color 	13434879
				nlines     	1
				max_width  	846
				justify    	0
				label      	"RoseSequenceObject")
			    stereotype 	(object ItemLabel
				Parent_View 	@113
				location   	(2199, 1100)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	846
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571D2F502EE"
			    width      	864
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSequenceObject" @114
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2349, 873)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@114
				location   	(2102, 846)
				nlines     	1
				max_width  	494
				justify    	0
				label      	"AbstractSequenceObject")
			    stereotype 	(object ItemLabel
				Parent_View 	@114
				location   	(2102, 796)
				anchor     	10
				nlines     	1
				max_width  	494
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4571A3770203"
			    width      	512
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @115
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571D2FC0271"
			    client     	@113
			    supplier   	@114
			    vertices   	(list Points
				(2522, 1087)
				(2421, 962))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractElementDumper" @116
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(603, 2079)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@116
				location   	(315, 2049)
				fill_color 	13434879
				nlines     	1
				max_width  	576
				justify    	0
				label      	"RoseAbstractElementDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@116
				location   	(315, 1999)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	576
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571D3040222"
			    width      	594
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::SyntaxDef" @117
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(768, 1056)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@117
				location   	(598, 1029)
				nlines     	1
				max_width  	340
				justify    	0
				label      	"SyntaxDef")
			    stereotype 	(object ItemLabel
				Parent_View 	@117
				location   	(598, 979)
				anchor     	10
				nlines     	1
				max_width  	340
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4571A3B70109"
			    width      	358
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractCategoryDumper" @118
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2229, 1827)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@118
				location   	(1935, 1797)
				fill_color 	13434879
				nlines     	1
				max_width  	588
				justify    	0
				label      	"RoseAbstractCategoryDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@118
				location   	(1935, 1747)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	588
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571DD1A009C"
			    width      	606
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractClassDumper" @119
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1578, 1821)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@119
				location   	(1317, 1791)
				fill_color 	13434879
				nlines     	1
				max_width  	522
				justify    	0
				label      	"RoseAbstractClassDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@119
				location   	(1317, 1741)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	522
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571DD3D03D8"
			    width      	540
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumpFactory" @120
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(498, 3477)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@120
				location   	(231, 3447)
				fill_color 	13434879
				nlines     	1
				max_width  	534
				justify    	0
				label      	"RoseAbstractDumpFactory")
			    stereotype 	(object ItemLabel
				Parent_View 	@120
				location   	(231, 3397)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	534
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571DD4D0399"
			    width      	552
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb" @121
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(201, 165)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@121
				location   	(38, 136)
				fill_color 	13434879
				nlines     	1
				max_width  	326
				justify    	0
				label      	"RationalRoseTlb")
			    stereotype 	(object ItemLabel
				Parent_View 	@121
				location   	(38, 86)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	326
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4571DD8C003E"
			    width      	344
			    height     	182
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @122
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DD8C003E"))
			    location   	(591, 174)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@122
				location   	(453, 114)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @123
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@122
			    supplier   	@121
			    vertices   	(list Points
				(440, 169)
				(373, 168))
			    line_style 	0)
			(object NoteView @124
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DE0802BF"))
			    location   	(684, 393)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@124
				location   	(546, 333)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseItemPtr" @125
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(234, 393)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@125
				location   	(60, 361)
				fill_color 	13434879
				nlines     	1
				max_width  	348
				justify    	0
				label      	"IRoseItemPtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@125
				location   	(60, 311)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	348
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"4571DE0802BF"
			    width      	366
			    height     	188
			    annotation 	8
			    autoResize 	TRUE)
			(object AttachView "" @126
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@124
			    supplier   	@125
			    vertices   	(list Points
				(533, 393)
				(417, 393))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper" @127
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(609, 1455)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@127
				location   	(358, 1396)
				fill_color 	13434879
				nlines     	1
				max_width  	502
				justify    	0
				label      	"RoseAbstractDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@127
				location   	(358, 1346)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	502
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571D1A5009C"
			    width      	520
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @128
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571D1D5000F"
			    client     	@127
			    supplier   	@109
			    vertices   	(list Points
				(529, 1333)
				(368, 1091))
			    line_style 	0)
			(object UsesView "" @129
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @130
				Parent_View 	@129
				location   	(2081, 1086)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.500000
				height     	120
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571DE7C029F"
			    client     	@110
			    supplier   	@113
			    vertices   	(list Points
				(1972, 1205)
				(2189, 1206))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractAttributeDumper" @131
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(465, 2463)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@131
				location   	(174, 2433)
				fill_color 	13434879
				nlines     	1
				max_width  	582
				justify    	0
				label      	"RoseAbstractAttributeDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@131
				location   	(174, 2383)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	582
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571DF1E00CB"
			    width      	600
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @132
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571DF42033C"
			    client     	@131
			    supplier   	@116
			    vertices   	(list Points
				(497, 2370)
				(569, 2171))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractOperationDumper" @133
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1251, 2910)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@133
				location   	(950, 2880)
				fill_color 	13434879
				nlines     	1
				max_width  	602
				justify    	0
				label      	"RoseAbstractOperationDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@133
				location   	(950, 2830)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	602
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571DF59030D"
			    width      	620
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractParameterDumper" @134
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1623, 2418)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@134
				location   	(1316, 2388)
				fill_color 	13434879
				nlines     	1
				max_width  	614
				justify    	0
				label      	"RoseAbstractParameterDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@134
				location   	(1316, 2338)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	614
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571DF8401B5"
			    width      	632
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseDiagramDumper" @135
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2358, 582)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@135
				location   	(2122, 523)
				fill_color 	13434879
				nlines     	1
				max_width  	472
				justify    	0
				label      	"RoseDiagramDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@135
				location   	(2122, 473)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	472
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571DFB400FA"
			    width      	490
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @136
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DFB400FA"))
			    location   	(2874, 735)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@136
				location   	(2736, 675)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @137
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@136
			    supplier   	@135
			    vertices   	(list Points
				(2723, 688)
				(2603, 654))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::AbstractSingleDumperBase" @138
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1662, 579)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@138
				location   	(1389, 552)
				nlines     	1
				max_width  	546
				justify    	0
				label      	"AbstractSingleDumperBase")
			    stereotype 	(object ItemLabel
				Parent_View 	@138
				location   	(1389, 502)
				anchor     	10
				nlines     	1
				max_width  	546
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4571A32201A5"
			    width      	564
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @139
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571A36602AF"
			    client     	@111
			    supplier   	@138
			    vertices   	(list Points
				(1671, 768)
				(1666, 668))
			    line_style 	0)
			(object InheritView "" @140
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571A38501C5"
			    client     	@114
			    supplier   	@138
			    vertices   	(list Points
				(2143, 783)
				(1873, 668))
			    line_style 	0)
			(object InheritView "" @141
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571DFC901C5"
			    client     	@135
			    supplier   	@138
			    vertices   	(list Points
				(2112, 580)
				(1944, 579))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDependencyDumper" @142
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(675, 2700)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@142
				location   	(351, 2670)
				fill_color 	13434879
				nlines     	1
				max_width  	648
				justify    	0
				label      	"RoseAbstractDependencyDumper")
			    stereotype 	(object ItemLabel
				Parent_View 	@142
				location   	(351, 2620)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	648
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571DFE7035B"
			    width      	666
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::DumpersFactory" @143
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2112, 3477)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	TRUE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@143
				location   	(1132, 3370)
				fill_color 	13434879
				nlines     	1
				max_width  	1960
				justify    	0
				label      	"DumpersFactory")
			    stereotype 	(object ItemLabel
				Parent_View 	@143
				location   	(1132, 3320)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1960
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4571E05D02EE"
			    width      	1978
			    height     	338
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @144
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571E088036B"
			    client     	@120
			    supplier   	@143
			    vertices   	(list Points
				(774, 3477)
				(1122, 3477))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseObjectInstancePtr" @145
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1023, 183)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@145
				location   	(794, 151)
				fill_color 	13434879
				nlines     	1
				max_width  	458
				justify    	0
				label      	"IRoseObjectInstancePtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@145
				location   	(794, 101)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	458
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"4571E48201F4"
			    width      	476
			    height     	188
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @146
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571E48201F4"))
			    location   	(1503, 183)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@146
				location   	(1365, 123)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @147
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@146
			    supplier   	@145
			    vertices   	(list Points
				(1352, 183)
				(1261, 183))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseMessagePtr" @148
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1872, 186)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@148
				location   	(1693, 154)
				fill_color 	13434879
				nlines     	1
				max_width  	358
				justify    	0
				label      	"IRoseMessagePtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@148
				location   	(1693, 104)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	358
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"4571E4FD0000"
			    width      	376
			    height     	188
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @149
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571E4FD0000"))
			    location   	(2274, 183)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@149
				location   	(2136, 123)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @150
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@149
			    supplier   	@148
			    vertices   	(list Points
				(2123, 183)
				(2060, 184))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::str::str_op" @151
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2013, 2763)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@151
				location   	(1863, 2736)
				nlines     	1
				max_width  	300
				justify    	0
				label      	"str_op")
			    stereotype 	(object ItemLabel
				Parent_View 	@151
				location   	(1863, 2686)
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4503E01500CB"
			    width      	318
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object UsesView "" @152
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @153
				Parent_View 	@152
				location   	(1838, 2605)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.586121
				height     	3
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571E57A006D"
			    client     	@134
			    supplier   	@151
			    vertices   	(list Points
				(1727, 2510)
				(1912, 2673))
			    line_style 	0)
			(object UsesView "" @154
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @155
				Parent_View 	@154
				location   	(1559, 2098)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.561155
				height     	40
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571E5AE005D"
			    client     	@134
			    supplier   	@119
			    vertices   	(list Points
				(1615, 2325)
				(1584, 1913))
			    line_style 	0)
			(object InheritView "" @156
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571D30B0196"
			    client     	@116
			    supplier   	@127
			    vertices   	(list Points
				(446, 1986)
				(446, 1575))
			    line_style 	3
			    origin_attachment 	(446, 1986)
			    terminal_attachment 	(446, 1575))
			(object InheritView "" @157
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571E02E035B"
			    client     	@119
			    supplier   	@127
			    vertices   	(list Points
				(1308, 1819)
				(711, 1819)
				(711, 1576))
			    line_style 	3
			    origin_attachment 	(1308, 1819)
			    terminal_attachment 	(711, 1576))
			(object UsesView "" @158
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @159
				Parent_View 	@158
				location   	(1447, 1440)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.675573
				height     	26
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571DEBC033C"
			    client     	@113
			    supplier   	@127
			    vertices   	(list Points
				(2567, 1330)
				(2567, 1414)
				(869, 1414))
			    line_style 	3
			    origin_attachment 	(2567, 1330)
			    terminal_attachment 	(869, 1414))
			(object InheritView "" @160
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571E01F02CE"
			    client     	@118
			    supplier   	@127
			    vertices   	(list Points
				(2114, 1735)
				(2114, 1506)
				(869, 1506))
			    line_style 	3
			    origin_attachment 	(2114, 1735)
			    terminal_attachment 	(869, 1506))
			(object UsesView "" @161
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @162
				Parent_View 	@161
				location   	(587, 1692)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.282460
				height     	10
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571DCD300AB"
			    client     	@127
			    supplier   	@116
			    vertices   	(list Points
				(577, 1576)
				(577, 1987))
			    line_style 	3
			    origin_attachment 	(577, 1576)
			    terminal_attachment 	(577, 1987))
			(object UsesView "" @163
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @164
				Parent_View 	@163
				location   	(1008, 1304)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.507522
				height     	45
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571DCE90251"
			    client     	@127
			    supplier   	@110
			    vertices   	(list Points
				(869, 1386)
				(1165, 1308))
			    line_style 	0)
			(object UsesView "" @165
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @166
				Parent_View 	@165
				location   	(688, 1233)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.528989
				height     	9
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571DD090251"
			    client     	@127
			    supplier   	@117
			    vertices   	(list Points
				(656, 1333)
				(731, 1145))
			    line_style 	0)
			(object UsesView "" @167
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @168
				Parent_View 	@167
				location   	(247, 1538)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.043636
				height     	62
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571DD6C0261"
			    client     	@127
			    supplier   	@120
			    vertices   	(list Points
				(349, 1476)
				(97, 1476)
				(97, 3452)
				(222, 3452))
			    line_style 	3
			    origin_attachment 	(349, 1476)
			    terminal_attachment 	(222, 3452))
			(object UsesView "" @169
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @170
				Parent_View 	@169
				location   	(887, 1732)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.417275
				height     	37
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571DD720280"
			    client     	@127
			    supplier   	@119
			    vertices   	(list Points
				(779, 1576)
				(779, 1768)
				(1308, 1768))
			    line_style 	3
			    origin_attachment 	(779, 1576)
			    terminal_attachment 	(1308, 1768))
			(object UsesView "" @171
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @172
				Parent_View 	@171
				location   	(1612, 1393)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.457537
				height     	65
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571DD760399"
			    client     	@127
			    supplier   	@118
			    vertices   	(list Points
				(869, 1457)
				(2214, 1457)
				(2214, 1735))
			    line_style 	3
			    origin_attachment 	(869, 1457)
			    terminal_attachment 	(2214, 1735))
			(object InheritView "" @173
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571DFFE03C8"
			    client     	@142
			    supplier   	@116
			    vertices   	(list Points
				(818, 2607)
				(818, 2170))
			    line_style 	3
			    origin_attachment 	(818, 2607)
			    terminal_attachment 	(818, 2170))
			(object NoteView @174
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571D2DD0196"))
			    location   	(1239, 945)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@174
				location   	(1101, 885)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @175
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@174
			    supplier   	@110
			    vertices   	(list Points
				(1323, 1011)
				(1413, 1081))
			    line_style 	0)
			(object NoteView @176
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571D2F502EE"))
			    location   	(2862, 957)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@176
				location   	(2724, 897)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @177
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@176
			    supplier   	@113
			    vertices   	(list Points
				(2798, 1023)
				(2737, 1087))
			    line_style 	0)
			(object NoteView @178
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571D3040222"))
			    location   	(1125, 1935)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@178
				location   	(987, 1875)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @179
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@178
			    supplier   	@116
			    vertices   	(list Points
				(974, 1975)
				(900, 1996))
			    line_style 	0)
			(object NoteView @180
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DD1A009C"))
			    location   	(2475, 1590)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@180
				location   	(2337, 1530)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @181
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@180
			    supplier   	@118
			    vertices   	(list Points
				(2405, 1656)
				(2323, 1734))
			    line_style 	0)
			(object NoteView @182
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DD3D03D8"))
			    location   	(1668, 1599)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@182
				location   	(1530, 1539)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @183
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@182
			    supplier   	@119
			    vertices   	(list Points
				(1639, 1665)
				(1614, 1728))
			    line_style 	0)
			(object NoteView @184
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DD4D0399"))
			    location   	(312, 3726)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@184
				location   	(174, 3666)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @185
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@184
			    supplier   	@120
			    vertices   	(list Points
				(360, 3659)
				(428, 3569))
			    line_style 	0)
			(object NoteView @186
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571D1A5009C"))
			    location   	(264, 1221)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@186
				location   	(126, 1161)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @187
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@186
			    supplier   	@127
			    vertices   	(list Points
				(362, 1287)
				(429, 1333))
			    line_style 	0)
			(object NoteView @188
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DF1E00CB"))
			    location   	(279, 2256)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@188
				location   	(141, 2196)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @189
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@188
			    supplier   	@131
			    vertices   	(list Points
				(338, 2322)
				(381, 2370))
			    line_style 	0)
			(object NoteView @190
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DF59030D"))
			    location   	(1443, 2670)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@190
				location   	(1305, 2610)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @191
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@190
			    supplier   	@133
			    vertices   	(list Points
				(1389, 2736)
				(1325, 2817))
			    line_style 	0)
			(object NoteView @192
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DF8401B5"))
			    location   	(2160, 2430)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@192
				location   	(2022, 2370)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @193
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@192
			    supplier   	@134
			    vertices   	(list Points
				(2009, 2426)
				(1939, 2424))
			    line_style 	0)
			(object NoteView @194
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571DFE7035B"))
			    location   	(1014, 2472)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@194
				location   	(876, 2412)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{non virtual base:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @195
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@194
			    supplier   	@142
			    vertices   	(list Points
				(913, 2538)
				(809, 2607))
			    line_style 	0)
			(object NoteView @196
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571E05D02EE"))
			    location   	(2742, 3099)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@196
				location   	(2533, 2974)
				fill_color 	13434879
				nlines     	6
				max_width  	383
				justify    	1
				label      	
|{need UC:=true}
|{no base class:=true}
|
|FOR OPER. "create_by_stereotype"
|Abstraction type: abstract
|
|FOR OPER. "create_by_root"
|Abstraction type: abstract
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	443
			    height     	262)
			(object AttachView "" @197
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@196
			    supplier   	@143
			    vertices   	(list Points
				(2520, 3230)
				(2393, 3307))
			    line_style 	0)
			(object InheritView "" @198
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571DF94030D"
			    client     	@134
			    supplier   	@116
			    vertices   	(list Points
				(1407, 2326)
				(1407, 2050)
				(900, 2050))
			    line_style 	3
			    origin_attachment 	(1407, 2326)
			    terminal_attachment 	(900, 2050))
			(object InheritView "" @199
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571DF7700FA"
			    client     	@133
			    supplier   	@116
			    vertices   	(list Points
				(1193, 2818)
				(1193, 2130)
				(900, 2130))
			    line_style 	3
			    origin_attachment 	(1193, 2818)
			    terminal_attachment 	(900, 2130))
			(object UsesView "" @200
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @201
				Parent_View 	@200
				location   	(2689, 1787)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.064150
				height     	41
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571E80302BF"
			    client     	@118
			    supplier   	@135
			    vertices   	(list Points
				(2532, 1827)
				(3177, 1827)
				(3177, 591)
				(2603, 591))
			    line_style 	3
			    origin_attachment 	(2532, 1827)
			    terminal_attachment 	(2603, 591))
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper" @202
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2319, 4245)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@202
				location   	(1544, 4086)
				fill_color 	13434879
				nlines     	1
				max_width  	1550
				justify    	0
				label      	"RoseHelper")
			    stereotype 	(object ItemLabel
				Parent_View 	@202
				location   	(1544, 4036)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1550
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4571F040008C"
			    width      	1568
			    height     	442
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @203
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571F040008C"))
			    location   	(3762, 4107)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@203
				location   	(3568, 4022)
				fill_color 	13434879
				nlines     	4
				max_width  	352
				justify    	1
				label      	
|{is namespace:=true}
|{local helper:=true}
|{need UC:=true}
|{need impl-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	412
			    height     	182)
			(object AttachView "" @204
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@203
			    supplier   	@202
			    vertices   	(list Points
				(3555, 4126)
				(3103, 4169))
			    line_style 	0)
			(object UsesView "" @205
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @206
				Parent_View 	@205
				location   	(246, 3204)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.218452
				height     	15
				orientation 	1)
			    line_color 	3947680
			    quidu      	"4571E6EA03B9"
			    client     	@120
			    supplier   	@131
			    vertices   	(list Points
				(231, 3385)
				(231, 2555))
			    line_style 	3
			    origin_attachment 	(231, 3385)
			    terminal_attachment 	(231, 2555))
			(object UsesView "" @207
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @208
				Parent_View 	@207
				location   	(2064, 3115)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.486735
				height     	100
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571E7040222"
			    client     	@120
			    supplier   	@118
			    vertices   	(list Points
				(680, 3385)
				(680, 3214)
				(2409, 3214)
				(2409, 1919))
			    line_style 	3
			    origin_attachment 	(680, 3385)
			    terminal_attachment 	(2409, 1919))
			(object UsesView "" @209
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @210
				Parent_View 	@209
				location   	(2064, 3182)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.431098
				height     	25
				orientation 	1)
			    line_color 	3947680
			    quidu      	"4571E71903C8"
			    client     	@120
			    supplier   	@119
			    vertices   	(list Points
				(631, 3385)
				(631, 3157)
				(2334, 3157)
				(2334, 2232)
				(1659, 2232)
				(1659, 1913))
			    line_style 	3
			    origin_attachment 	(631, 3385)
			    terminal_attachment 	(1659, 1913))
			(object UsesView "" @211
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @212
				Parent_View 	@211
				location   	(749, 2960)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.785354
				height     	45
				orientation 	1)
			    line_color 	3947680
			    quidu      	"4571E76701A5"
			    client     	@120
			    supplier   	@133
			    vertices   	(list Points
				(522, 3385)
				(522, 2915)
				(941, 2915))
			    line_style 	3
			    origin_attachment 	(522, 3385)
			    terminal_attachment 	(941, 2915))
			(object UsesView "" @213
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @214
				Parent_View 	@213
				location   	(1266, 3076)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.497312
				height     	29
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571E78A0232"
			    client     	@120
			    supplier   	@134
			    vertices   	(list Points
				(575, 3385)
				(575, 3104)
				(1656, 3104)
				(1656, 2510))
			    line_style 	3
			    origin_attachment 	(575, 3385)
			    terminal_attachment 	(1656, 2510))
			(object UsesView "" @215
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @216
				Parent_View 	@215
				location   	(376, 3102)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.477462
				height     	13
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571F3950157"
			    client     	@120
			    supplier   	@142
			    vertices   	(list Points
				(388, 3384)
				(388, 2791))
			    line_style 	3
			    origin_attachment 	(388, 3384)
			    terminal_attachment 	(388, 2791))
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseDiagramPtr" @217
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2652, 195)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@217
				location   	(2476, 163)
				fill_color 	13434879
				nlines     	1
				max_width  	352
				justify    	0
				label      	"IRoseDiagramPtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@217
				location   	(2476, 113)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	352
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"4571F3BE00BB"
			    width      	370
			    height     	188
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @218
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4571F3BE00BB"))
			    location   	(3072, 183)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@218
				location   	(2934, 123)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @219
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@218
			    supplier   	@217
			    vertices   	(list Points
				(2921, 186)
				(2837, 189))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::alg::CycleChecker" @220
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1767, 3810)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@220
				location   	(1617, 3783)
				nlines     	1
				max_width  	300
				justify    	0
				label      	"CycleChecker")
			    stereotype 	(object ItemLabel
				Parent_View 	@220
				location   	(1617, 3733)
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4501338B00FA"
			    width      	318
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::alg::container_op" @221
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2154, 3819)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@221
				location   	(2004, 3792)
				nlines     	1
				max_width  	300
				justify    	0
				label      	"container_op")
			    stereotype 	(object ItemLabel
				Parent_View 	@221
				location   	(2004, 3742)
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"450130B00213"
			    width      	318
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::AbstractDumpers::SyntaxDef" @222
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2559, 3822)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@222
				location   	(2389, 3795)
				nlines     	1
				max_width  	340
				justify    	0
				label      	"SyntaxDef")
			    stereotype 	(object ItemLabel
				Parent_View 	@222
				location   	(2389, 3745)
				anchor     	10
				nlines     	1
				max_width  	340
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4571A3B70109"
			    width      	358
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::str::str_op" @223
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2991, 3804)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@223
				location   	(2841, 3777)
				nlines     	1
				max_width  	300
				justify    	0
				label      	"str_op")
			    stereotype 	(object ItemLabel
				Parent_View 	@223
				location   	(2841, 3727)
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4503E01500CB"
			    width      	318
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper::BadName" @224
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1125, 3963)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@224
				location   	(842, 3881)
				fill_color 	13434879
				nlines     	1
				max_width  	566
				justify    	0
				label      	"BadName")
			    stereotype 	(object ItemLabel
				Parent_View 	@224
				location   	(842, 3831)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	566
				justify    	0
				label      	"<<Exception>>")
			    icon_style 	"Label"
			    fill_color 	9869055
			    quidu      	"4572051902FD"
			    width      	584
			    height     	288
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @225
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4572051902FD"))
			    location   	(771, 3684)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@225
				location   	(633, 3624)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{stored message:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @226
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@225
			    supplier   	@224
			    vertices   	(list Points
				(856, 3750)
				(942, 3818))
			    line_style 	0)
			(object UsesView "" @227
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4571F7020222"
			    client     	@202
			    supplier   	@223
			    vertices   	(list Points
				(2656, 4023)
				(2854, 3893))
			    line_style 	0)
			(object UsesView "" @228
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @229
				Parent_View 	@228
				location   	(1927, 3972)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.598929
				height     	29
				orientation 	0)
			    line_color 	3947680
			    quidu      	"4571F7080222"
			    client     	@202
			    supplier   	@220
			    vertices   	(list Points
				(2038, 4023)
				(1881, 3899))
			    line_style 	0)
			(object UsesView "" @230
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @231
				Parent_View 	@230
				location   	(2211, 3953)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.599380
				height     	6
				orientation 	1)
			    line_color 	3947680
			    quidu      	"4571F70C03D8"
			    client     	@202
			    supplier   	@221
			    vertices   	(list Points
				(2232, 4023)
				(2187, 3908))
			    line_style 	0)
			(object UsesView "" @232
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @233
				Parent_View 	@232
				location   	(1372, 4203)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.096522
				height     	39
				orientation 	1)
			    line_color 	3947680
			    quidu      	"4571F7210242"
			    client     	@202
			    supplier   	@120
			    vertices   	(list Points
				(1535, 4241)
				(516, 4241)
				(516, 3569))
			    line_style 	3
			    origin_attachment 	(1535, 4241)
			    terminal_attachment 	(516, 3569))
			(object UsesView "" @234
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @235
				Parent_View 	@234
				location   	(2498, 3959)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.640152
				height     	16
				orientation 	1)
			    line_color 	3947680
			    quidu      	"4571F7370261"
			    client     	@202
			    supplier   	@222
			    vertices   	(list Points
				(2443, 4023)
				(2507, 3911))
			    line_style 	0)
			(object UsesView "" @236
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4572058500DA"
			    client     	@202
			    supplier   	@127
			    vertices   	(list Points
				(1535, 4285)
				(60, 4285)
				(60, 1576)
				(349, 1576))
			    line_style 	3
			    origin_attachment 	(1535, 4285)
			    terminal_attachment 	(349, 1576))
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper::Selections" @237
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1725, 5004)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@237
				location   	(1592, 4976)
				fill_color 	13434879
				nlines     	1
				max_width  	266
				justify    	0
				label      	"Selections")
			    stereotype 	(object ItemLabel
				Parent_View 	@237
				location   	(1592, 4926)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	266
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"4575518901D1"
			    width      	284
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper::RoseItemMap" @238
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1719, 4731)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@238
				location   	(1573, 4703)
				fill_color 	13434879
				nlines     	1
				max_width  	292
				justify    	0
				label      	"RoseItemMap")
			    stereotype 	(object ItemLabel
				Parent_View 	@238
				location   	(1573, 4653)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	292
				justify    	0
				label      	"<<Map>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"45754FBD01D1"
			    width      	310
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::data::std_defs::StrSet" @239
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2154, 4986)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@239
				location   	(2046, 4959)
				nlines     	1
				max_width  	216
				justify    	0
				label      	"StrSet")
			    stereotype 	(object ItemLabel
				Parent_View 	@239
				location   	(2046, 4909)
				anchor     	10
				nlines     	1
				max_width  	216
				justify    	0
				label      	"<<Set>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"44FEBE140197"
			    width      	234
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::Primitives::a-string" @240
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2493, 4737)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	TRUE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	658120
				default_color 	FALSE)
			    label      	(object ItemLabel
				Parent_View 	@240
				location   	(2405, 4697)
				fill_color 	13434879
				nlines     	1
				max_width  	176
				justify    	0
				label      	"a-string")
			    icon_style 	"None"
			    line_color 	14803425
			    fill_color 	14803425
			    quidu      	"452257A0036F"
			    width      	194
			    height     	105
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$27" @241
			    location   	(2134, 4733)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"457550080182"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$28" @242
				    Parent_View 	@241
				    location   	(358, 629)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45755008025D"
				    client     	@241
				    supplier   	@240
				    vertices   	(list Points
					(2134, 4733)
					(2395, 4735))
				    line_style 	0)
				(object RoleView "$UNNAMED$29" @243
				    Parent_View 	@241
				    location   	(358, 629)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45755008026D"
				    client     	@241
				    supplier   	@238
				    vertices   	(list Points
					(2134, 4733)
					(1874, 4731))
				    line_style 	0
				    label      	(object SegLabel @244
					Parent_View 	@243
					location   	(2055, 4731)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	5
					anchor_loc 	1
					nlines     	1
					max_width  	322
					justify    	0
					label      	"NewKey : a-string"
					pctDist    	0.900000
					height     	12
					orientation 	1))))
			(object AssociationViewNew "" @245
			    location   	(2345, 4843)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"44FEBE230262"
			    roleview_list 	(list RoleViews
				(object RoleView "" @246
				    Parent_View 	@245
				    location   	(-205, 733)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @247
					Parent_View 	@246
					location   	(2262, 4853)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					hidden     	TRUE
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	450
					justify    	0
					label      	""
					pctDist    	0.800000
					height     	42
					orientation 	1)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"44FEBE23039D"
				    client     	@245
				    supplier   	@239
				    vertices   	(list Points
					(2345, 4843)
					(2271, 4897))
				    line_style 	0)
				(object RoleView "" @248
				    Parent_View 	@245
				    location   	(-205, 733)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @249
					Parent_View 	@248
					location   	(2380, 4767)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					hidden     	TRUE
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	450
					justify    	0
					label      	""
					pctDist    	0.800000
					height     	42
					orientation 	0)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"44FEBE23039B"
				    client     	@245
				    supplier   	@240
				    vertices   	(list Points
					(2345, 4843)
					(2420, 4789))
				    line_style 	0)))
			(object InheritView "" @250
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"457551BC0192"
			    client     	@237
			    supplier   	@239
			    vertices   	(list Points
				(1867, 4997)
				(2036, 4990))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::IChoiceDlg" @251
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(765, 4674)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	TRUE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@251
				location   	(64, 4592)
				fill_color 	13434879
				nlines     	1
				max_width  	1402
				justify    	0
				label      	"IChoiceDlg")
			    stereotype 	(object ItemLabel
				Parent_View 	@251
				location   	(64, 4542)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1402
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"457556EF0134"
			    width      	1420
			    height     	288
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseClassPtr" @252
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(237, 642)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@252
				location   	(61, 610)
				fill_color 	13434879
				nlines     	1
				max_width  	352
				justify    	0
				label      	"IRoseClassPtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@252
				location   	(61, 560)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	352
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"45757AC102BB"
			    width      	370
			    height     	188
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @253
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45757AC102BB"))
			    location   	(723, 639)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@253
				location   	(585, 579)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @254
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@253
			    supplier   	@252
			    vertices   	(list Points
				(572, 639)
				(422, 640))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper::ExecResult" @255
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2859, 4797)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@255
				location   	(2709, 4690)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"ExecResult")
			    stereotype 	(object ItemLabel
				Parent_View 	@255
				location   	(2709, 4640)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	300
				justify    	0
				label      	"<<Enum>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"457585E402CB"
			    width      	318
			    height     	338
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @256
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"457556EF0134"))
			    location   	(249, 4416)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@256
				location   	(111, 4356)
				fill_color 	13434879
				nlines     	2
				max_width  	240
				justify    	1
				label      	
|FOR OPER. "make_choice"
|Abstraction type: abstract
|Target stereotype: const
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @257
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@256
			    supplier   	@251
			    vertices   	(list Points
				(382, 4482)
				(477, 4529))
			    line_style 	0)
			(object NoteView @258
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4575AB0200E6"))
			    location   	(2883, 1989)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@258
				location   	(2745, 1929)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{Need init ctor:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::IRoseItemWrapper" @259
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2889, 2256)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@259
				location   	(2610, 2199)
				fill_color 	13434879
				nlines     	1
				max_width  	558
				justify    	0
				label      	"IRoseItemWrapper")
			    stereotype 	(object ItemLabel
				Parent_View 	@259
				location   	(2610, 2149)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	558
				justify    	0
				label      	"<<Struct>>")
			    icon_style 	"Label"
			    fill_color 	13427169
			    quidu      	"4575AB0200E6"
			    width      	576
			    height     	238
			    annotation 	8
			    autoResize 	TRUE)
			(object AttachView "" @260
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@258
			    supplier   	@259
			    vertices   	(list Points
				(2884, 2055)
				(2886, 2136))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseAbstractDumper::IRoseItemPtr_vector" @261
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2892, 2640)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@261
				location   	(2692, 2612)
				fill_color 	13434879
				nlines     	1
				max_width  	400
				justify    	0
				label      	"IRoseItemPtr_vector")
			    stereotype 	(object ItemLabel
				Parent_View 	@261
				location   	(2692, 2562)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	400
				justify    	0
				label      	"<<Vector>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"4575AB60001B"
			    width      	418
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$30" @262
			    location   	(2890, 2462)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4575AB8F01FF"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$31" @263
				    Parent_View 	@262
				    location   	(-32, -199)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"4575AB8F0309"
				    client     	@262
				    supplier   	@259
				    vertices   	(list Points
					(2890, 2462)
					(2889, 2375))
				    line_style 	0)
				(object RoleView "$UNNAMED$32" @264
				    Parent_View 	@262
				    location   	(-32, -199)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"4575AB8F030B"
				    client     	@262
				    supplier   	@261
				    vertices   	(list Points
					(2890, 2462)
					(2890, 2549))
				    line_style 	0)))
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseApplicationPtr" @265
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1080, 399)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@265
				location   	(881, 367)
				fill_color 	13434879
				nlines     	1
				max_width  	398
				justify    	0
				label      	"IRoseApplicationPtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@265
				location   	(881, 317)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	398
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"45B9F58B004E"
			    width      	416
			    height     	188
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @266
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45B9F58B004E"))
			    location   	(1530, 402)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@266
				location   	(1392, 342)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @267
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@266
			    supplier   	@265
			    vertices   	(list Points
				(1379, 400)
				(1288, 399))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseCategoryPtr" @268
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(3510, 138)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@268
				location   	(3336, 110)
				fill_color 	13434879
				nlines     	1
				max_width  	348
				justify    	0
				label      	"IRoseCategoryPtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@268
				location   	(3336, 60)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	348
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"45BF43DE00DA"
			    width      	366
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @269
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45BF43DE00DA"))
			    location   	(3912, 138)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@269
				location   	(3774, 78)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @270
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@269
			    supplier   	@268
			    vertices   	(list Points
				(3761, 138)
				(3693, 138))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseElementPtr" @271
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(3510, 480)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@271
				location   	(3338, 452)
				fill_color 	13434879
				nlines     	1
				max_width  	344
				justify    	0
				label      	"IRoseElementPtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@271
				location   	(3338, 402)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	344
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"45C3177C0177"
			    width      	362
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @272
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45C3177C0177"))
			    location   	(3912, 480)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@272
				location   	(3774, 420)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @273
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@272
			    supplier   	@271
			    vertices   	(list Points
				(3761, 480)
				(3691, 480))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RationalRoseTlb::IRoseCategoryCollectionPtr" @274
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(3561, 837)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@274
				location   	(3299, 810)
				fill_color 	13434879
				nlines     	1
				max_width  	524
				justify    	0
				label      	"IRoseCategoryCollectionPtr")
			    stereotype 	(object ItemLabel
				Parent_View 	@274
				location   	(3299, 760)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	524
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"45EC04F80339"
			    width      	542
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @275
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45EC04F80339"))
			    location   	(4119, 843)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@275
				location   	(3981, 783)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @276
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@275
			    supplier   	@274
			    vertices   	(list Points
				(3968, 840)
				(3832, 839))
			    line_style 	0)
			(object ClassView "Class" "Logical View::MDProcess::MDAModel::RoseDumpers::RoseHelper::POINT" @277
			    ShowCompartmentStereotypes 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(3486, 4557)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@277
				location   	(3353, 4475)
				fill_color 	13434879
				nlines     	1
				max_width  	266
				justify    	0
				label      	"POINT")
			    stereotype 	(object ItemLabel
				Parent_View 	@277
				location   	(3353, 4425)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	266
				justify    	0
				label      	"<<Struct>>")
			    icon_style 	"Label"
			    fill_color 	13427169
			    quidu      	"45F5174B006D"
			    width      	284
			    height     	288
			    annotation 	8
			    autoResize 	TRUE))))))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ColorizeFor"
		    value      	"456C0DD70110"))
	    quid       	"4571A08C035B"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	9
	    items      	(list diagram_item_list
		(object CategoryView "Logical View::MDProcess::MDAModel::AbstractDumpers" @278
		    location   	(1074, 570)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@278
			location   	(899, 536)
			fill_color 	13434879
			nlines     	2
			max_width  	350
			justify    	0
			label      	"AbstractDumpers")
		    stereotype 	(object ItemLabel
			Parent_View 	@278
			location   	(899, 486)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	350
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"4571A092005D"
		    width      	363
		    height     	181)
		(object CategoryView "Logical View::MDProcess::MDAModel::RoseDumpers" @279
		    location   	(1062, 1014)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@279
			location   	(918, 979)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"RoseDumpers")
		    stereotype 	(object ItemLabel
			Parent_View 	@279
			location   	(918, 929)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"4571D1820251"
		    width      	300
		    height     	182)
		(object ImportView "" @280
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4571D1940128"
		    client     	@279
		    supplier   	@278
		    vertices   	(list Points
			(1065, 868)
			(1071, 660))
		    line_style 	0)
		(object CategoryView "Logical View::shared::GCL::str" @281
		    location   	(1485, 579)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	705290
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@281
			location   	(1341, 545)
			nlines     	2
			max_width  	288
			justify    	0
			label      	"str")
		    stereotype 	(object ItemLabel
			Parent_View 	@281
			location   	(1341, 495)
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    line_color 	705290
		    fill_color 	16777215
		    quidu      	"4503DF990167"
		    width      	300
		    height     	180)
		(object ImportView "" @282
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4571E8330177"
		    client     	@279
		    supplier   	@281
		    vertices   	(list Points
			(1200, 868)
			(1395, 669))
		    line_style 	0)
		(object CategoryView "Logical View::shared::GCL::alg" @283
		    location   	(1854, 582)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	705290
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@283
			location   	(1710, 548)
			nlines     	2
			max_width  	288
			justify    	0
			label      	"alg")
		    stereotype 	(object ItemLabel
			Parent_View 	@283
			location   	(1710, 498)
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    line_color 	705290
		    fill_color 	16777215
		    quidu      	"44FEE24001F5"
		    width      	300
		    height     	180)
		(object ImportView "" @284
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4571F79B008C"
		    client     	@279
		    supplier   	@283
		    vertices   	(list Points
			(1212, 931)
			(1703, 663))
		    line_style 	0)
		(object CategoryView "Logical View::shared::GCL::data" @285
		    location   	(546, 561)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	705290
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@285
			location   	(402, 527)
			nlines     	2
			max_width  	288
			justify    	0
			label      	"data")
		    stereotype 	(object ItemLabel
			Parent_View 	@285
			location   	(402, 477)
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    line_color 	705290
		    fill_color 	16777215
		    quidu      	"44FEB6B3010B"
		    width      	300
		    height     	180)
		(object ImportView "" @286
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"45757AA70088"
		    client     	@279
		    supplier   	@285
		    vertices   	(list Points
			(911, 880)
			(649, 651))
		    line_style 	0)
		(object ImportView "" @287
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"458E90A700C4"
		    client     	@278
		    supplier   	@285
		    vertices   	(list Points
			(892, 566)
			(696, 563))
		    line_style 	0)
		(object CategoryView "Logical View::MDProcess::Описание MDGen::Проектирование и генерация" @288
		    location   	(1215, 156)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	12800
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@288
			location   	(925, 122)
			nlines     	2
			max_width  	580
			justify    	0
			label      	"Проектирование и генерация")
		    stereotype 	(object ItemLabel
			Parent_View 	@288
			location   	(925, 72)
			anchor     	10
			nlines     	1
			max_width  	580
			justify    	0
			label      	"<<UseCases>>")
		    icon_style 	"Label"
		    line_color 	705290
		    fill_color 	16777215
		    quidu      	"46092E89025E"
		    width      	593
		    height     	181)
		(object ImportView "" @289
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"460A3A3F028C"
		    client     	@278
		    supplier   	@288
		    vertices   	(list Points
			(1121, 425)
			(1183, 246))
		    line_style 	0)
		(object CategoryView "Logical View::MDProcess::ServerGate::Contents" @290
		    location   	(1800, 159)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	16714250
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@290
			location   	(1613, 124)
			nlines     	2
			max_width  	374
			justify    	0
			label      	"Contents")
		    stereotype 	(object ItemLabel
			Parent_View 	@290
			location   	(1613, 74)
			anchor     	10
			nlines     	1
			max_width  	374
			justify    	0
			label      	"<<ServerInterface>>")
		    icon_style 	"Label"
		    line_color 	16714250
		    fill_color 	16777215
		    quidu      	"462387C50000"
		    width      	386
		    height     	182)
		(object ImportView "" @291
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"462478F600F2"
		    client     	@278
		    supplier   	@290
		    vertices   	(list Points
			(1255, 467)
			(1635, 250))
		    line_style 	0)
		(object CategoryView "Logical View::MDProcess::Описание MDGen::Интеграция с MDKnow" @292
		    location   	(591, 159)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	12800
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@292
			location   	(365, 108)
			nlines     	2
			max_width  	452
			justify    	0
			label      	"Интеграция с MDKnow")
		    stereotype 	(object ItemLabel
			Parent_View 	@292
			location   	(365, 58)
			anchor     	10
			nlines     	1
			max_width  	452
			justify    	0
			label      	"<<UseCases>>")
		    icon_style 	"Label"
		    line_color 	705290
		    fill_color 	16777215
		    quidu      	"46092EEE024E"
		    width      	464
		    height     	214)
		(object ImportView "" @293
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4624796F01EC"
		    client     	@278
		    supplier   	@292
		    vertices   	(list Points
			(904, 425)
			(717, 266))
		    line_style 	0)))))
