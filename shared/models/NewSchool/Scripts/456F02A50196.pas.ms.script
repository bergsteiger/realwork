// BaseTreeSupport 456F02A50196 Interfaces Category

INCLUDE 'ElementsRTTI.ms.dict'

FORWARD ME_456F02A50196

: ME_456FE6270222
 CONST UID '456FE6270222'
 CONST Name 'EntityType'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 %SUMMARY 'идентификатор типа сущности лежащей в Ноде. В каждом конкретном дереве определяется как AdapterEnum' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 )
 ; // Inherits
 CONST extprop:pas:TypeName 'TEntityType'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_456FE6270222 EntityType

: ME_456FEB35000F
 CONST UID '456FEB35000F'
 CONST Name 'CopyDisabled'
 CONST Class class_Class
 : Stereotype st_Exception ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Возвращается если нода не может быть скопирована.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;

ref; // ME_456FEB35000F CopyDisabled

: ME_456FEB350011
 CONST UID '456FEB350011'
 CONST Name 'InvalidContainer'
 CONST Class class_Class
 : Stereotype st_Exception ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Вызывается при попытке использовать нодй не являющуюся контенером как контейнер.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;

ref; // ME_456FEB350011 InvalidContainer

: ME_456FEB350013
 CONST UID '456FEB350013'
 CONST Name 'MoveDisabled'
 CONST Class class_Class
 : Stereotype st_Exception ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Возвращается если нода не может быть перенесена.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;

ref; // ME_456FEB350013 MoveDisabled

: ME_456FEB350015
 CONST UID '456FEB350015'
 CONST Name 'InvalidEntityType'
 CONST Class class_Class
 : Stereotype st_Exception ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Возвращается при попытке присвоить одной сущности сущность другого типа.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;

ref; // ME_456FEB350015 InvalidEntityType

: ME_456FEB760128
 CONST UID '456FEB760128'
 CONST Name 'InvalidIndex'
 CONST Class class_Class
 : Stereotype st_Exception ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Возвращается при попытке получить элемент списка по несуществующему индексу. Т.е. index<0 или index>=count.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;

ref; // ME_456FEB760128 InvalidIndex

: ME_456FEB8C00AB
 CONST UID '456FEB8C00AB'
 CONST Name 'NotEntityElement'
 CONST Class class_Class
 : Stereotype st_Exception ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Возвращается при попытке вызвать операцию open у элемента каталога, не являющегося сущностью (в частности у папки).' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;

ref; // ME_456FEB8C00AB NotEntityElement

FORWARD ME_456FE63B01D4

: ME_456FE63B01EF
 CONST UID '456FE63B01EF'
 CONST Name 'level'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Уровень вложенности элемента в древовидной структуре.'#13#10'У root_node=0.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST "pm" false

ref; // ME_456FE63B01EF level

: ME_456FE63B01F0
 CONST UID '456FE63B01F0'
 CONST Name 'child_count'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Количество вложенных элементов для текущего (один уровень).'#13#10'У листьевых элементов =0.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST "pm" false

ref; // ME_456FE63B01F0 child_count

: ME_456FE63B01F1
 CONST UID '456FE63B01F1'
 CONST Name 'all_child_count'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Количество вложенных элементов для текущего с учетом всех уровней вложенности.'#13#10'У листьевых элементов =0.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST "pm" false

ref; // ME_456FE63B01F1 all_child_count

: ME_456FE63B01F4
 CONST UID '456FE63B01F4'
 CONST Name 'flags'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Поле для передачи дополнительной винарной информации о статусе элемента.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST "pm" false

ref; // ME_456FE63B01F4 flags

: ME_456FE63B01F5
 CONST UID '456FE63B01F5'
 CONST Name 'index'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Позиция текущего элемента в предке (parent).' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST "pm" false

ref; // ME_456FE63B01F5 index

: ME_456FE63B01F6
 CONST UID '456FE63B01F6'
 CONST Name 'through_index'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Сквозная позиция элемента.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST "pm" false

ref; // ME_456FE63B01F6 through_index

: ME_456FE7BC03C8
 CONST UID '456FE7BC03C8'
 CONST Name 'parent'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'родитель' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 CONST "pm" false

ref; // ME_456FE7BC03C8 parent

: ME_456FE82903C8
 CONST UID '456FE82903C8'
 CONST Name 'previous_node'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'предыдущая нода в дереве' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 CONST "pm" false

ref; // ME_456FE82903C8 previous_node

: ME_456FE84E033C
 CONST UID '456FE84E033C'
 CONST Name 'next_node'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'следующая нода в дереве' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 CONST "pm" false

ref; // ME_456FE84E033C next_node

: ME_457025090261
 CONST UID '457025090261'
 CONST Name 'caption'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 %SUMMARY 'название' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_431841610361' '4423F94903C8.pas.ms.script' // String
 ;
 : CanRaiseInSet
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 WL 'ME_456EB4540188' '456EA56002BF.pas.ms.script' // AccessDenied
 )
 ; // CanRaiseInSet
 CONST "pm" false

ref; // ME_457025090261 caption

: ME_4570251D0119
 CONST UID '4570251D0119'
 CONST Name 'hint'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 %SUMMARY 'информация о ноде' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_431841610361' '4423F94903C8.pas.ms.script' // String
 ;
 : CanRaiseInSet
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 WL 'ME_456EB4540188' '456EA56002BF.pas.ms.script' // AccessDenied
 )
 ; // CanRaiseInSet
 CONST "pm" false

ref; // ME_4570251D0119 hint

: ME_457025CB033C
 CONST UID '457025CB033C'
 CONST Name 'object_type'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'тип сущности, представляемой нодой' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target ME_456FE6270222 // EntityType
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB454018A' '456EA56002BF.pas.ms.script' // Unsupported
 )
 ; // CanRaise
 CONST "pm" false

ref; // ME_457025CB033C object_type

: ME_4628755F034B
 CONST Name 'index'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;

ref; // ME_4628755F034B index

: ME_456FE63B01D6
 CONST UID '456FE63B01D6'
 CONST Name 'get_child'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Получить интерфейс на один из вложенных элементов.'#13#10'Параметр должен принимать значения из диапазона: 0<=index<=(child_coun-1)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 : CanRaise
   Seq: ( ME_456FEB760128 // InvalidIndex
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_4628755F034B // index
 )
 ; // Parameters

ref; // ME_456FE63B01D6 get_child

: ME_456FE63B01DA
 CONST Name 'node'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_456FE63B01D4 // Node
 ;

ref; // ME_456FE63B01DA node

: ME_456FE63B01D9
 CONST UID '456FE63B01D9'
 CONST Name 'is_same_node'
 CONST Class class_Operation
 %SUMMARY 'Сравнивает текущий элемент с элементом, поданным в параметре node.'#13#10'Возвращает true в случае совпадения.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 : Parameters
   Seq: ( ME_456FE63B01DA // node
 )
 ; // Parameters

ref; // ME_456FE63B01D9 is_same_node

: ME_456FE63B01DB
 CONST UID '456FE63B01DB'
 CONST Name 'open'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Возвращает интерфейс для работы с конкретным элементом (сущностью) системы.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_4242EBBB03B9' '3DBFDB23006E.pas.ms.script' // object
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB454018E' '456EA56002BF.pas.ms.script' // CanNotFindData
 ME_456FEB8C00AB // NotEntityElement
 )
 ; // CanRaise

ref; // ME_456FE63B01DB open

: ME_456FE63B01DD
 CONST UID '456FE63B01DD'
 CONST Name 'delete_node'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Удаляет указанные узел из списка/дерева.'#13#10'Если указан элемент, имеющий вложенные элементы, то они тоже удаляются. Если список/дерево созданно как константное (неизменяемое) то генерится исключение ConstantModify' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 WL 'ME_456EB4540188' '456EA56002BF.pas.ms.script' // AccessDenied
 WL 'ME_456EC825009C' '456EA56002BF.pas.ms.script' // EmptyResult
 )
 ; // CanRaise

ref; // ME_456FE63B01DD delete_node

: ME_46028CE90148
 CONST Name 'entity'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_4242EBBB03B9' '3DBFDB23006E.pas.ms.script' // object
 ;

ref; // ME_46028CE90148 entity

: ME_456FE63B01DE
 CONST UID '456FE63B01DE'
 CONST Name 'add_child_node'
 CONST Class class_Operation
 %SUMMARY 'Добавляет сущность как ребенка к указанной ноде, возвращает новую созданную ноду. Если список/дерево созданно как константное (неизменяемое) то генерится исключение ConstantModify. Если нода не может содержать детей возвращается исключение InvalidContainer' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 WL 'ME_456EB4540188' '456EA56002BF.pas.ms.script' // AccessDenied
 WL 'ME_456EB454018A' '456EA56002BF.pas.ms.script' // Unsupported
 WL 'ME_456EB4540194' '456EA56002BF.pas.ms.script' // DuplicateNode
 ME_456FEB350015 // InvalidEntityType
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_46028CE90148 // entity
 )
 ; // Parameters

ref; // ME_456FE63B01DE add_child_node

: ME_46028D1B02FD
 CONST Name 'entity'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_4242EBBB03B9' '3DBFDB23006E.pas.ms.script' // object
 ;

ref; // ME_46028D1B02FD entity

: ME_456FE63B01E0
 CONST UID '456FE63B01E0'
 CONST Name 'add_sibling_node'
 CONST Class class_Operation
 %SUMMARY 'Добавляет сущность как "соседа" справа к указанной ноде, возвращает новую созданную ноду. Если список/дерево созданно как константное (неизменяемое) то генерится исключение ConstantModify' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 WL 'ME_456EB454018A' '456EA56002BF.pas.ms.script' // Unsupported
 WL 'ME_456EB4540194' '456EA56002BF.pas.ms.script' // DuplicateNode
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_46028D1B02FD // entity
 )
 ; // Parameters

ref; // ME_456FE63B01E0 add_sibling_node

: ME_461CD03C00CB
 CONST Name 'destination'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_456FE63B01D4 // Node
 ;

ref; // ME_461CD03C00CB destination

: ME_456FE63B01E2
 CONST UID '456FE63B01E2'
 CONST Name 'move_to_location'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Переносит текущую ноду в указанный узел, делая ее его ребенком. Если узел не может пнринять ноду (т.е. вставить ее в себя), то генерируется исключение InvalidContainer. Если операция перемещения узлов не доступна, генерируется исключение MoveDisabled' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : CanRaise
   Seq: ( ME_456FEB350011 // InvalidContainer
 ME_456FEB350013 // MoveDisabled
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_461CD03C00CB // destination
 )
 ; // Parameters

ref; // ME_456FE63B01E2 move_to_location

: ME_46287B75034B
 CONST Name 'destination'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_456FE63B01D4 // Node
 ;

ref; // ME_46287B75034B destination

: ME_456FE63B01E4
 CONST UID '456FE63B01E4'
 CONST Name 'copy_to_location'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Сопирует текущую ноду и оекурсивно все ее содержимое, в указанный узел, делая ее его ребенком. Если узел не может пнринять ноду (т.е. вставить ее в себя), то генерируется исключение InvalidContainer. Если операция копирования узлов не доступна, генерируется исключение CopyDisabled' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : CanRaise
   Seq: ( ME_456FEB35000F // CopyDisabled
 ME_456FEB350011 // InvalidContainer
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_46287B75034B // destination
 )
 ; // Parameters

ref; // ME_456FE63B01E4 copy_to_location

: ME_456FE63B01E6
 CONST UID '456FE63B01E6'
 CONST Name 'can_move'
 CONST Class class_Operation
 %SUMMARY 'можно ли переместить ноду' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_456FE63B01E6 can_move

: ME_456FE63B01E7
 CONST UID '456FE63B01E7'
 CONST Name 'can_copy'
 CONST Class class_Operation
 %SUMMARY 'можно ли скопировать ноду' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_456FE63B01E7 can_copy

: ME_46028DDB005D
 CONST Name 'source'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_456FE63B01D4 // Node
 ;

ref; // ME_46028DDB005D source

: ME_456FE63B01E8
 CONST UID '456FE63B01E8'
 CONST Name 'can_insert'
 CONST Class class_Operation
 %SUMMARY 'можно ли вставить ноду' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 : Parameters
   Seq: ( ME_46028DDB005D // source
 )
 ; // Parameters

ref; // ME_456FE63B01E8 can_insert

: ME_456FE63B01EA
 CONST UID '456FE63B01EA'
 CONST Name 'is_last'
 CONST Class class_Operation
 %SUMMARY 'Последнией элемент.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_456FE63B01EA is_last

: ME_456FE63B01EB
 CONST UID '456FE63B01EB'
 CONST Name 'is_first'
 CONST Class class_Operation
 %SUMMARY 'Первый элемент.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_456FE63B01EB is_first

: ME_456FE63B01EC
 CONST UID '456FE63B01EC'
 CONST Name 'has_child'
 CONST Class class_Operation
 %SUMMARY 'Есть ли дочерние элементы.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_456FE63B01EC has_child

: ME_46028E2A0232
 CONST Name 'entity'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_4242EBBB03B9' '3DBFDB23006E.pas.ms.script' // object
 ;

ref; // ME_46028E2A0232 entity

: ME_456FE63B01ED
 CONST UID '456FE63B01ED'
 CONST Name 'override_child_node'
 CONST Class class_Operation
 %SUMMARY 'перезаписать дочернюю ноду' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 WL 'ME_456EB4540188' '456EA56002BF.pas.ms.script' // AccessDenied
 WL 'ME_456EB454018A' '456EA56002BF.pas.ms.script' // Unsupported
 WL 'ME_456EB4540194' '456EA56002BF.pas.ms.script' // DuplicateNode
 ME_456FEB350015 // InvalidEntityType
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_46028E2A0232 // entity
 )
 ; // Parameters

ref; // ME_456FE63B01ED override_child_node

: ME_4602879E0119
 CONST UID '4602879E0119'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 %SUMMARY 'фабрика' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 CONST "const_type" 'read-write'

ref; // ME_4602879E0119 make

: ME_4AA55863036D
 CONST UID '4AA55863036D'
 CONST Name 'can_modify'
 CONST Class class_Operation
 %SUMMARY 'можно ли модифицировать ноду' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FE63B01D4 // Node
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_4AA55863036D can_modify

: ME_461636870045_ME_456FE63B01D4
 : Original WL 'ME_461636870045' '456EA56002BF.pas.ms.script' // get_content_type
 ;
 : Implementor ME_456FE63B01D4 // Node
 ;
 CONST OpKind opkind_Implemented
 CONST "dll export" false
ref; // ME_461636870045_ME_456FE63B01D4 get_content_type

: ME_4616371B010F_ME_456FE63B01D4
 : Original WL 'ME_4616371B010F' '456EA56002BF.pas.ms.script' // get_cached_content
 ;
 : Implementor ME_456FE63B01D4 // Node
 ;
 CONST OpKind opkind_Implemented
 CONST "dll export" false
ref; // ME_4616371B010F_ME_456FE63B01D4 get_cached_content

: ME_456FE63B01D4
 CONST UID '456FE63B01D4'
 CONST GUID 'A050343E-CA33-4D63-8385-2FFBD9B012DA'
 CONST Name 'Node'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Интерфейс для чтения данных об элементе древовидной структуры.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;
 : Inherits
   Seq: ( WL 'ME_456EC7C300DA' '456EA56002BF.pas.ms.script' // EntityStorage
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_456FE63B01EF // level
 ME_456FE63B01F0 // child_count
 ME_456FE63B01F1 // all_child_count
 ME_456FE63B01F4 // flags
 ME_456FE63B01F5 // index
 ME_456FE63B01F6 // through_index
 ME_456FE7BC03C8 // parent
 ME_456FE82903C8 // previous_node
 ME_456FE84E033C // next_node
 ME_457025090261 // caption
 ME_4570251D0119 // hint
 ME_457025CB033C // object_type
 )
 ; // Attributes
 : Operations
   Seq: ( ME_456FE63B01D6 // get_child
 ME_456FE63B01D9 // is_same_node
 ME_456FE63B01DB // open
 ME_456FE63B01DD // delete_node
 ME_456FE63B01DE // add_child_node
 ME_456FE63B01E0 // add_sibling_node
 ME_456FE63B01E2 // move_to_location
 ME_456FE63B01E4 // copy_to_location
 ME_456FE63B01E6 // can_move
 ME_456FE63B01E7 // can_copy
 ME_456FE63B01E8 // can_insert
 ME_456FE63B01EA // is_last
 ME_456FE63B01EB // is_first
 ME_456FE63B01EC // has_child
 ME_456FE63B01ED // override_child_node
 ME_4602879E0119 // make
 ME_4AA55863036D // can_modify
 )
 ; // Operations
 : Implemented
   Seq: ( ME_461636870045_ME_456FE63B01D4 // get_content_type
 ME_4616371B010F_ME_456FE63B01D4 // get_cached_content
 )
 ; // Implemented
 CONST "single impl" false
 CONST extprop:pas:TypeName 'INode'
 CONST extprop:rc:SelfName 'Node'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_456FE63B01D4 Node

FORWARD ME_456FEA67007D

: ME_456FEA7A03B9
 CONST UID '456FEA7A03B9'
 CONST Name 'root'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'корень дерева' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_456FEA67007D // BaseCatalog
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 CONST "pm" false

ref; // ME_456FEA7A03B9 root

: ME_457024AB002E
 CONST UID '457024AB002E'
 CONST Name 'filter'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 %SUMMARY 'наложенный фильтр' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_456FEA67007D // BaseCatalog
 ;
 : Target ME_456FE6270222 // EntityType
 ;
 CONST "pm" false

ref; // ME_457024AB002E filter

: ME_456FEA67007F
 CONST Name 'entity'
 CONST Class class_Parameter
 : Stereotype st_in ;
 %SUMMARY 'Искомый элемент.' ;
 : Target WL 'ME_4242EBBB03B9' '3DBFDB23006E.pas.ms.script' // object
 ;

ref; // ME_456FEA67007F entity

: ME_456FEA67007E
 CONST UID '456FEA67007E'
 CONST Name 'find'
 CONST Class class_Operation
 %SUMMARY 'Найти узел по его элементу.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FEA67007D // BaseCatalog
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 : Parameters
   Seq: ( ME_456FEA67007F // entity
 )
 ; // Parameters

ref; // ME_456FEA67007E find

: ME_456FEA670081
 CONST Name 'mask'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;

ref; // ME_456FEA670081 mask

: ME_456FEA670082
 CONST Name 'mode'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_456FED800399' '456FED4903D8.pas.ms.script' // SearchMode
 ;

ref; // ME_456FEA670082 mode

: ME_456FEA670083
 CONST Name 'cur_item'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_456FE63B01D4 // Node
 ;

ref; // ME_456FEA670083 cur_item

: ME_456FEA670084
 CONST Name 'result'
 CONST Class class_Parameter
 : Stereotype st_out ;
 %SUMMARY 'Результат поиска. При этом возвращается сквозной индекс.' ;
 : Target WL 'ME_456FED6B00BB' '456FED4903D8.pas.ms.script' // ContextSearchResult
 ;

ref; // ME_456FEA670084 result

: ME_456FEA670080
 CONST UID '456FEA670080'
 CONST Name 'find_context'
 CONST Class class_Operation
 %SUMMARY 'Поиск контекста среди элементов списка.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FEA67007D // BaseCatalog
 ;
 : Target ME_456FE63B01D4 // Node
 ;
 : Parameters
   Seq: ( ME_456FEA670081 // mask
 ME_456FEA670082 // mode
 ME_456FEA670083 // cur_item
 ME_456FEA670084 // result
 )
 ; // Parameters

ref; // ME_456FEA670080 find_context

: ME_456FEA670085
 CONST UID '456FEA670085'
 CONST Name 'reset_type_filter'
 CONST Class class_Operation
 %SUMMARY 'сбрасывает все установленные фильтры по типам' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456FEA67007D // BaseCatalog
 ;

ref; // ME_456FEA670085 reset_type_filter

: ME_456FEA67007D
 CONST UID '456FEA67007D'
 CONST GUID 'B41C62C4-F733-4465-9B22-3D4C52162F8A'
 CONST Name 'BaseCatalog'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Базовый интерфейс для работы с древовидными и/или линейными списками различных сущностей системы. Навигация по структуре (дерево или линейный список) осуществляется через экземпляры интерфейса Node. При этом каждый екземпляр Node может быть приведен к интерфейсу необходимой сущности через метод open интерфейса BaseCatalog. Для того что бы сущность можно было привести таким образом, ее экземпляр должен реализовывать интерфейс BaseEntity.'#13#10'В случае если конкретное дерево не поддерживает тех или иных операция определенных на BaseCatalog, то при их вызове должно генерироваться исключение' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;
 : Attributes
   Seq: ( ME_456FEA7A03B9 // root
 ME_457024AB002E // filter
 )
 ; // Attributes
 : Operations
   Seq: ( ME_456FEA67007E // find
 ME_456FEA670080 // find_context
 ME_456FEA670085 // reset_type_filter
 )
 ; // Operations
 CONST "TODO" 'depricated by CatalogBase from DynamicTree'
 CONST "single impl" false
 CONST extprop:pas:TypeName 'IBaseCatalog'
 CONST extprop:rc:SelfName 'BaseCatalog'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_456FEA67007D BaseCatalog

: ME_460281B50290
 CONST UID '460281B50290'
 CONST Name 'BaseTreeNodeMask'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 %SUMMARY 'флаги на старой ноде' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_456F02A50196 // BaseTreeSupport
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 )
 ; // Inherits
 CONST extprop:pas:TypeName 'TBaseTreeNodeMask'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_460281B50290 BaseTreeNodeMask

: ME_456F02A50196
 CONST UID '456F02A50196'
 CONST Name 'BaseTreeSupport'
 CONST Class class_Category
 : Stereotype st_Interfaces ;
 %SUMMARY 'Поддержка старого дерева.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent WL 'ME_456EA3D2031C' '456EA3D2031C.pas.ms.script' // GblAdapterLib
 ;
 : Children
   Seq: ( ME_456FE6270222 // EntityType
 ME_456FEB35000F // CopyDisabled
 ME_456FEB350011 // InvalidContainer
 ME_456FEB350013 // MoveDisabled
 ME_456FEB350015 // InvalidEntityType
 ME_456FEB760128 // InvalidIndex
 ME_456FEB8C00AB // NotEntityElement
 ME_456FE63B01D4 // Node
 ME_456FEA67007D // BaseCatalog
 ME_460281B50290 // BaseTreeNodeMask
 )
 ; // Children
 : Depends
   Seq: ( WL 'ME_4423F94903C8' '4423F94903C8.pas.ms.script' // IO
 WL 'ME_456EA56002BF' '456EA56002BF.pas.ms.script' // BaseTypes
 WL 'ME_456FED4903D8' '456FED4903D8.pas.ms.script' // ContextSearchSupport
 )
 ; // Depends
 CONST "no hands" false
 CONST cpp:Path 'garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport\BaseTreeSupport.cpp'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport'
 CONST dll.cpp:Path 'garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport\BaseTreeSupport_tie.cpp'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport'
 CONST dll.h:Path 'garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport\BaseTreeSupport_tie.h'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport'
 CONST fctr.cpp:Path 'garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport\BaseTreeSupportFactories.cpp'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport'
 CONST fctr.h:Path 'garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport\BaseTreeSupportFactories.h'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport'
 CONST h:Path 'garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport\BaseTreeSupport.h'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupport'
 CONST intf.pas:Path 'garant6x\implementation\Garant\tie\Garant\GblAdapterLib\BaseTreeSupportUnit.pas'
 CONST pas:Path 'garant6x\implementation\Garant\GblAdapterLib\BaseTreeSupportUnit.pas'
 CONST extprop:pas:UnitName 'BaseTreeSupportUnit'

ref; // ME_456F02A50196 BaseTreeSupport
