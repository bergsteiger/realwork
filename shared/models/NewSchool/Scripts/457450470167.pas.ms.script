// DynamicTree 457450470167 Interfaces Category

INCLUDE 'ElementsRTTI.ms.dict'

FORWARD ME_457450470167

FORWARD ME_45EEBB9B01F4

: ME_45F6A01A007D
 CONST UID '45F6A01A007D'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBB9B01F4 // FilterForTree
 ;
 CONST "const_type" 'read-write'

ref; // ME_45F6A01A007D make

: ME_45EEBB9B01F4
 CONST UID '45EEBB9B01F4'
 CONST GUID '2EE1EBDC-4804-47C2-964A-89BABD67A457'
 CONST Name 'FilterForTree'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Абстрактный интерфейс фильтров деревьев' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_457450470167 // DynamicTree
 ;
 : Operations
   Seq: ( ME_45F6A01A007D // make
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IFilterForTree'
 CONST extprop:rc:SelfName 'FilterForTree'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEBB9B01F4 FilterForTree

FORWARD ME_45EEBD050271

: ME_45F69FCA00DA
 CONST UID '45F69FCA00DA'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_ref
 : Parent ME_45EEBD050271 // FilterList
 ;
 : Target ME_45EEBB9B01F4 // FilterForTree
 ;

ref; // ME_45F69FCA00DA 

: ME_45EEBD050271
 CONST UID '45EEBD050271'
 CONST Name 'FilterList'
 CONST Class class_Class
 : Stereotype st_Vector ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Список фильтров' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45F69FCA00DA // 
 )
 ; // Attributes
 CONST "array type" 'dynamic'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IFilterList'

ref; // ME_45EEBD050271 FilterList

FORWARD ME_45EEBBE501D4

: ME_45EEBBE501D5
 CONST UID '45EEBBE501D5'
 CONST Name 'CP_ANY'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEBBE501D4 // ContextPlace
 ;

ref; // ME_45EEBBE501D5 CP_ANY

: ME_45EEBBE501D6
 CONST UID '45EEBBE501D6'
 CONST Name 'CP_BEGIN_OF_WORD'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEBBE501D4 // ContextPlace
 ;

ref; // ME_45EEBBE501D6 CP_BEGIN_OF_WORD

: ME_45EEBBE501D7
 CONST UID '45EEBBE501D7'
 CONST Name 'CP_BEGIN_OF_PHRASE'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEBBE501D4 // ContextPlace
 ;

ref; // ME_45EEBBE501D7 CP_BEGIN_OF_PHRASE

: ME_45EEBBE501D8
 CONST UID '45EEBBE501D8'
 CONST Name 'CP_WHOLE_WORD'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEBBE501D4 // ContextPlace
 ;

ref; // ME_45EEBBE501D8 CP_WHOLE_WORD

: ME_45EEBBE501D4
 CONST UID '45EEBBE501D4'
 CONST Name 'ContextPlace'
 CONST Class class_Class
 : Stereotype st_Enum ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEBBE501D5 // CP_ANY
 ME_45EEBBE501D6 // CP_BEGIN_OF_WORD
 ME_45EEBBE501D7 // CP_BEGIN_OF_PHRASE
 ME_45EEBBE501D8 // CP_WHOLE_WORD
 )
 ; // Attributes
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TContextPlace'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEBBE501D4 ContextPlace

: ME_45EEC48C01F0
 CONST UID '45EEC48C01F0'
 CONST Name 'IndexInParent'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 )
 ; // Inherits
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TIndexInParent'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC48C01F0 IndexInParent

FORWARD ME_45EEC3260222

: ME_45EEC3260223
 CONST UID '45EEC3260223'
 CONST Name 'FO_SEQUENCE'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3260222 // FindOrder
 ;

ref; // ME_45EEC3260223 FO_SEQUENCE

: ME_45EEC3260224
 CONST UID '45EEC3260224'
 CONST Name 'FO_ANY'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3260222 // FindOrder
 ;

ref; // ME_45EEC3260224 FO_ANY

: ME_45EEC3260222
 CONST UID '45EEC3260222'
 CONST Name 'FindOrder'
 CONST Class class_Class
 : Stereotype st_Enum ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Порядок поиска' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEC3260223 // FO_SEQUENCE
 ME_45EEC3260224 // FO_ANY
 )
 ; // Attributes
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TFindOrder'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC3260222 FindOrder

FORWARD ME_45EEC8680109

: ME_45EEC88E034B
 CONST UID '45EEC88E034B'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC8680109 // NodeIndexPath
 ;
 : Target ME_45EEC48C01F0 // IndexInParent
 ;

ref; // ME_45EEC88E034B 

: ME_45EEC8680109
 CONST UID '45EEC8680109'
 CONST Name 'NodeIndexPath'
 CONST Class class_Class
 : Stereotype st_Vector ;
 CONST Kind kind_NormalClass
 %SUMMARY 'путь в дереве, заданный списком индексов нод' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEC88E034B // 
 )
 ; // Attributes
 CONST "array type" 'dynamic'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'INodeIndexPath'

ref; // ME_45EEC8680109 NodeIndexPath

FORWARD ME_45EEC2A902BF

: ME_45EEC2A902C0
 CONST UID '45EEC2A902C0'
 CONST Name 'node'
 CONST Class class_Attribute
 %SUMMARY 'Путь к ноде данной позиции итератора.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC2A902BF // FindPosition
 ;
 : Target ME_45EEC8680109 // NodeIndexPath
 ;

ref; // ME_45EEC2A902C0 node

: ME_45EEC2A902C1
 CONST UID '45EEC2A902C1'
 CONST Name 'begin'
 CONST Class class_Attribute
 %SUMMARY 'Начало позиции.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC2A902BF // FindPosition
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST Value 0
 : ValueType WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST extprop:pas:Value 0

ref; // ME_45EEC2A902C1 begin

: ME_45EEC2A902C2
 CONST UID '45EEC2A902C2'
 CONST Name 'end'
 CONST Class class_Attribute
 %SUMMARY 'Конец позиции. Если -1 - то до конца.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC2A902BF // FindPosition
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST Value '-1'
 : ValueType WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST extprop:pas:Value '-1'

ref; // ME_45EEC2A902C2 end

: ME_45EEC2A902BF
 CONST UID '45EEC2A902BF'
 CONST Name 'FindPosition'
 CONST Class class_Class
 : Stereotype st_Struct ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Позиция поискового итератора.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEC2A902C0 // node
 ME_45EEC2A902C1 // begin
 ME_45EEC2A902C2 // end
 )
 ; // Attributes
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TFindPosition'

ref; // ME_45EEC2A902BF FindPosition

: ME_45EEC375006D
 CONST UID '45EEC375006D'
 CONST Name 'NodeType'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Пользовательский тип ноды' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFDF10213' '3DBFDB23006E.pas.ms.script' // unsigned long long
 )
 ; // Inherits
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TNodeType'

ref; // ME_45EEC375006D NodeType

: ME_45EEC48C01E4
 CONST UID '45EEC48C01E4'
 CONST Name 'NodeId'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Идентификатор ноды дерева' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 )
 ; // Inherits
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TNodeId'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC48C01E4 NodeId

FORWARD ME_45EECCFE0251

: ME_45EECCFE0252
 CONST UID '45EECCFE0252'
 CONST Name 'SA_ONE_LEVEL'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EECCFE0251 // SearchArea
 ;

ref; // ME_45EECCFE0252 SA_ONE_LEVEL

: ME_45EECCFE0253
 CONST UID '45EECCFE0253'
 CONST Name 'SA_ALL_LEVEL'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EECCFE0251 // SearchArea
 ;

ref; // ME_45EECCFE0253 SA_ALL_LEVEL

: ME_45EECCFE0254
 CONST UID '45EECCFE0254'
 CONST Name 'SA_IN_ALL_TEXT'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EECCFE0251 // SearchArea
 ;

ref; // ME_45EECCFE0254 SA_IN_ALL_TEXT

: ME_45EECCFE0255
 CONST UID '45EECCFE0255'
 CONST Name 'SA_IN_ONE_SENTENCES'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EECCFE0251 // SearchArea
 ;

ref; // ME_45EECCFE0255 SA_IN_ONE_SENTENCES

: ME_45EECCFE0251
 CONST UID '45EECCFE0251'
 CONST Name 'SearchArea'
 CONST Class class_Class
 : Stereotype st_Enum ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Область поиска'#13#10'SA_IN_ALL_TEXT - используется в контекстном поиске, ищем по всему тексту, результат по каждой ноде это списко всех вхождений любого слова внутри текста одной ноды.'#13#10'SA_IN_ONE_SENTENCES - используется в контекстном поиске двух и более слов, указывает что слова запроса должны находиться внутри предложения в любом порядке' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EECCFE0252 // SA_ONE_LEVEL
 ME_45EECCFE0253 // SA_ALL_LEVEL
 ME_45EECCFE0254 // SA_IN_ALL_TEXT
 ME_45EECCFE0255 // SA_IN_ONE_SENTENCES
 )
 ; // Attributes
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TSearchArea'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EECCFE0251 SearchArea

FORWARD ME_45EEC2C0005D

: ME_45EEC2E203C8
 CONST UID '45EEC2E203C8'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC2C0005D // FindPositionList
 ;
 : Target ME_45EEC2A902BF // FindPosition
 ;

ref; // ME_45EEC2E203C8 

: ME_45EEC2C0005D
 CONST UID '45EEC2C0005D'
 CONST Name 'FindPositionList'
 CONST Class class_Class
 : Stereotype st_Vector ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Набор позиций итератора поиска.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEC2E203C8 // 
 )
 ; // Attributes
 CONST "array type" 'dynamic'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IFindPositionList'

ref; // ME_45EEC2C0005D FindPositionList

: ME_45EEC48C01EC
 CONST UID '45EEC48C01EC'
 CONST Name 'VisibleIndex'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Видимый индекс в дереве' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 )
 ; // Inherits
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TVisibleIndex'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC48C01EC VisibleIndex

: ME_45EEC7EA01C5
 CONST UID '45EEC7EA01C5'
 CONST Name 'LayerId'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Идентификатор уровня' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFDC502B0' '3DBFDB23006E.pas.ms.script' // unsigned short
 )
 ; // Inherits
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TLayerId'

ref; // ME_45EEC7EA01C5 LayerId

FORWARD ME_45EEC3DE0232

: ME_45EEC3DE0233
 CONST UID '45EEC3DE0233'
 CONST Name 'FM_SHARED_NONE'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3DE0232 // FlagsConst
 ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST Value 0
 : ValueType WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 0

ref; // ME_45EEC3DE0233 FM_SHARED_NONE

: ME_45EEC3DE0234
 CONST UID '45EEC3DE0234'
 CONST Name 'FM_OPEN'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3DE0232 // FlagsConst
 ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST Value 2
 : ValueType WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 2

ref; // ME_45EEC3DE0234 FM_OPEN

: ME_45EEC3DE0235
 CONST UID '45EEC3DE0235'
 CONST Name 'FM_SELECTION'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3DE0232 // FlagsConst
 ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST Value 1
 : ValueType WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 1

ref; // ME_45EEC3DE0235 FM_SELECTION

: ME_466F9D260109
 CONST UID '466F9D260109'
 CONST Name 'FM_FIRST_USER_FLAG'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3DE0232 // FlagsConst
 ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST Value 4
 : ValueType WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST "AutoInc" false
 CONST "forced type" 'unsigned long'
 CONST "is define" false
 CONST extprop:pas:Value 4

ref; // ME_466F9D260109 FM_FIRST_USER_FLAG

: ME_45EEC3DE0236
 CONST UID '45EEC3DE0236'
 CONST Name 'FM_USER_FLAG_MASK'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3DE0232 // FlagsConst
 ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST Value 65532
 : ValueType WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 65532

ref; // ME_45EEC3DE0236 FM_USER_FLAG_MASK

: ME_45EEC3DE0237
 CONST UID '45EEC3DE0237'
 CONST Name 'FM_SHARED_ALL'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3DE0232 // FlagsConst
 ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST Value 65535
 : ValueType WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 65535

ref; // ME_45EEC3DE0237 FM_SHARED_ALL

: ME_45EEC3DE0238
 CONST UID '45EEC3DE0238'
 CONST Name 'IIP_BEFORE_LEFT_CHILD'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3DE0232 // FlagsConst
 ;
 : Target ME_45EEC48C01F0 // IndexInParent
 ;
 CONST Value 4294967295
 : ValueType ME_45EEC48C01F0 // IndexInParent
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 4294967295

ref; // ME_45EEC3DE0238 IIP_BEFORE_LEFT_CHILD

: ME_45EEC3DE0239
 CONST UID '45EEC3DE0239'
 CONST Name 'VI_ALL_CHILDREN'
 CONST Class class_Attribute
 %SUMMARY 'Уведомление об изменении всех узлов.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC3DE0232 // FlagsConst
 ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;
 CONST Value '-1'
 : ValueType ME_45EEC48C01EC // VisibleIndex
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value '-1'

ref; // ME_45EEC3DE0239 VI_ALL_CHILDREN

: ME_45EEC3DE0232
 CONST UID '45EEC3DE0232'
 CONST Name 'FlagsConst'
 CONST Class class_Class
 : Stereotype st_Constants ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Константы для флагов' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEC3DE0233 // FM_SHARED_NONE
 ME_45EEC3DE0234 // FM_OPEN
 ME_45EEC3DE0235 // FM_SELECTION
 ME_466F9D260109 // FM_FIRST_USER_FLAG
 ME_45EEC3DE0236 // FM_USER_FLAG_MASK
 ME_45EEC3DE0237 // FM_SHARED_ALL
 ME_45EEC3DE0238 // IIP_BEFORE_LEFT_CHILD
 ME_45EEC3DE0239 // VI_ALL_CHILDREN
 )
 ; // Attributes
 CONST "spell names" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'

ref; // ME_45EEC3DE0232 FlagsConst

FORWARD ME_45EEC80F0128

: ME_45EEC82A00CB
 CONST UID '45EEC82A00CB'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC80F0128 // LayerIdList
 ;
 : Target ME_45EEC7EA01C5 // LayerId
 ;

ref; // ME_45EEC82A00CB 

: ME_45EEC80F0128
 CONST UID '45EEC80F0128'
 CONST Name 'LayerIdList'
 CONST Class class_Class
 : Stereotype st_Vector ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Список идентификаторов уровня' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEC82A00CB // 
 )
 ; // Attributes
 CONST "array type" 'dynamic'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ILayerIdList'

ref; // ME_45EEC80F0128 LayerIdList

FORWARD ME_45EEC54700C1

: ME_45EEC54700C3
 CONST UID '45EEC54700C3'
 CONST Name 'type'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEC54700C1 // SortFilter
 ;
 : Target WL 'ME_456ECC87033C' '456EA56002BF.pas.ms.script' // SortType
 ;
 CONST "pm" false

ref; // ME_45EEC54700C3 type

: ME_45EEC54700C4
 CONST UID '45EEC54700C4'
 CONST Name 'order'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEC54700C1 // SortFilter
 ;
 : Target WL 'ME_456ECB110222' '456EA56002BF.pas.ms.script' // SortOrder
 ;
 CONST "pm" false

ref; // ME_45EEC54700C4 order

: ME_45F6AB9A035B
 CONST UID '45F6AB9A035B'
 CONST Name 'sub_filter'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEC54700C1 // SortFilter
 ;
 : Target ME_45EEC54700C1 // SortFilter
 ;
 CONST "pm" false

ref; // ME_45F6AB9A035B sub_filter

: ME_45EEC54700C1
 CONST UID '45EEC54700C1'
 CONST GUID 'D0268B80-08CD-419D-BDF5-D3DA7A12199D'
 CONST Name 'SortFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_45EEC54700C3 // type
 ME_45EEC54700C4 // order
 ME_45F6AB9A035B // sub_filter
 )
 ; // Attributes
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ISortFilter'
 CONST extprop:rc:SelfName 'SortFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC54700C1 SortFilter

FORWARD ME_45EEC54700CE

: ME_45EEC54700D0
 CONST UID '45EEC54700D0'
 CONST Name 'is_trimmed'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEC54700CE // TrimFilter
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 CONST "pm" false

ref; // ME_45EEC54700D0 is_trimmed

: ME_45EEC54700CE
 CONST UID '45EEC54700CE'
 CONST GUID '31549898-CEF0-46C3-94D9-1D6FA71A2C65'
 CONST Name 'TrimFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_45EEC54700D0 // is_trimmed
 )
 ; // Attributes
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ITrimFilter'
 CONST extprop:rc:SelfName 'TrimFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC54700CE TrimFilter

FORWARD ME_45EEC54700D2

: ME_45F6A928038A
 CONST UID '45F6A928038A'
 CONST Name 'layer'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEC54700D2 // LayerFilter
 ;
 : Target ME_45EEC7EA01C5 // LayerId
 ;
 CONST "pm" false

ref; // ME_45F6A928038A layer

: ME_45EEC54700D2
 CONST UID '45EEC54700D2'
 CONST GUID '217D0932-BA42-439D-8CCC-77ABAB9F12D6'
 CONST Name 'LayerFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Класс фильтров для переключения визуального уровня (языка)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_45F6A928038A // layer
 )
 ; // Attributes
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ILayerFilter'
 CONST extprop:rc:SelfName 'LayerFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC54700D2 LayerFilter

FORWARD ME_45EEC282029F

: ME_49FFDC8B015D
 CONST UID '49FFDC8B015D'
 CONST Name 'count'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'количество найденных фрагментов' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEC282029F // FindIterator
 ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;
 CONST "pm" false

ref; // ME_49FFDC8B015D count

: ME_45EEC28202A0
 CONST UID '45EEC28202A0'
 CONST Name 'next'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Перемещенеи итератора на следующий элемент.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC282029F // FindIterator
 ;

ref; // ME_45EEC28202A0 next

: ME_45EEC28202A1
 CONST UID '45EEC28202A1'
 CONST Name 'prev'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Перемещенеи итератора на предыдущий элемент.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC282029F // FindIterator
 ;

ref; // ME_45EEC28202A1 prev

: ME_461D00B9005D
 CONST UID '461D00B9005D'
 CONST Name 'get_position'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC282029F // FindIterator
 ;
 : Target ME_45EEC2C0005D // FindPositionList
 ;

ref; // ME_461D00B9005D get_position

: ME_45EEC28202A2
 CONST UID '45EEC28202A2'
 CONST Name 'is_good'
 CONST Class class_Operation
 %SUMMARY 'Возвращает true, если по итератору можно получить данные, т.е. position. Иначе итератор за концом, т.е. равен end или вообще пуст' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC282029F // FindIterator
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEC28202A2 is_good

: ME_461A15BA01F4
 CONST UID '461A15BA01F4'
 CONST Name 'iterator'
 CONST Class class_Parameter
 : Stereotype st_in ;

ref; // ME_461A15BA01F4 iterator

: ME_45FA9B1E03D8
 CONST UID '45FA9B1E03D8'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC282029F // FindIterator
 ;
 : Parameters
   Seq: ( ME_461A15BA01F4 // iterator
 )
 ; // Parameters
 CONST "const_type" 'read-write'
 CONST "dll export" false

ref; // ME_45FA9B1E03D8 make

: ME_49FEC51501D8
 CONST UID '49FEC51501D8'
 CONST Name 'is_first'
 CONST Class class_Operation
 %SUMMARY 'возвращает true, если нельзя перейти на предыдущий фрагмент' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC282029F // FindIterator
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_49FEC51501D8 is_first

: ME_45EEC282029F
 CONST UID '45EEC282029F'
 CONST GUID '7C8B08E1-3BA1-4122-9E2F-4FDCC7935360'
 CONST Name 'FindIterator'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Итератор поиска.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_49FFDC8B015D // count
 )
 ; // Attributes
 : Operations
   Seq: ( ME_45EEC28202A0 // next
 ME_45EEC28202A1 // prev
 ME_461D00B9005D // get_position
 ME_45EEC28202A2 // is_good
 ME_45FA9B1E03D8 // make
 ME_49FEC51501D8 // is_first
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IFindIterator'
 CONST extprop:rc:SelfName 'FindIterator'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC282029F FindIterator

: ME_475E4ACC0117
 CONST UID '475E4ACC0117'
 CONST Name 'NotifierID'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 )
 ; // Inherits
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TNotifierID'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_475E4ACC0117 NotifierID

FORWARD ME_466530AD038A

: ME_466530D302AF
 CONST UID '466530D302AF'
 CONST Name 'GS_DEFAULT'
 CONST Class class_Attribute
 %SUMMARY 'выливаем только верхний уровень, нормальные имена' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_466530AD038A // EVDGeneratorStyle
 ;

ref; // ME_466530D302AF GS_DEFAULT

: ME_466530FA038A
 CONST UID '466530FA038A'
 CONST Name 'GS_FULL_TREE'
 CONST Class class_Attribute
 %SUMMARY 'выливаем дерево полностью, нормальные имена' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_466530AD038A // EVDGeneratorStyle
 ;

ref; // ME_466530FA038A GS_FULL_TREE

: ME_4665311F03B9
 CONST UID '4665311F03B9'
 CONST Name 'GS_TOPIC_AS_NAME'
 CONST Class class_Attribute
 %SUMMARY 'выливаем только верхний уровень, вместо имён используем номера топиков' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_466530AD038A // EVDGeneratorStyle
 ;

ref; // ME_4665311F03B9 GS_TOPIC_AS_NAME

: ME_466530AD038A
 CONST UID '466530AD038A'
 CONST Name 'EVDGeneratorStyle'
 CONST Class class_Class
 : Stereotype st_Enum ;
 CONST Kind kind_NormalClass
 %SUMMARY 'стиль выливки дерева или нод в evd' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_466530D302AF // GS_DEFAULT
 ME_466530FA038A // GS_FULL_TREE
 ME_4665311F03B9 // GS_TOPIC_AS_NAME
 )
 ; // Attributes
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TEVDGeneratorStyle'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_466530AD038A EVDGeneratorStyle

: ME_45EECBE20280
 CONST UID '45EECBE20280'
 CONST Name 'NoEntity'
 CONST Class class_Class
 : Stereotype st_Exception ;
 CONST Kind kind_NormalClass
 %SUMMARY 'генерируется при попытке получить сущность на ноде которая ее не содержит' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'

ref; // ME_45EECBE20280 NoEntity

: ME_45EECBE20290
 CONST UID '45EECBE20290'
 CONST Name 'NotFound'
 CONST Class class_Class
 : Stereotype st_Exception ;
 CONST Kind kind_NormalClass
 %SUMMARY 'возвращается если get_visible_delta не может найти ноду' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'

ref; // ME_45EECBE20290 NotFound

: ME_45EECC11034B
 CONST UID '45EECC11034B'
 CONST Name 'PropertyID'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 )
 ; // Inherits
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TPropertyID'

ref; // ME_45EECC11034B PropertyID

FORWARD ME_45EECD5D02EE

: ME_45EECD5D02F0
 CONST UID '45EECD5D02F0'
 CONST Name 'id'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EECC11034B // PropertyID
 ;

ref; // ME_45EECD5D02F0 id

: ME_45EECD5D02EF
 CONST UID '45EECD5D02EF'
 CONST Name 'save_in_setting'
 CONST Class class_Operation
 %SUMMARY 'Сохраняет "ссылку" на данный экземпляр в настройках, связывая ее с переданным строковым ключем. Тип ссылки зависит зависит от конкретного класса реализующего джанный интерфейс.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EECD5D02EE // SettingEntity
 ;
 : Parameters
   Seq: ( ME_45EECD5D02F0 // id
 )
 ; // Parameters

ref; // ME_45EECD5D02EF save_in_setting

: ME_45EECD5D02F2
 CONST UID '45EECD5D02F2'
 CONST Name 'id'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EECC11034B // PropertyID
 ;

ref; // ME_45EECD5D02F2 id

: ME_45EECD5D02F1
 CONST UID '45EECD5D02F1'
 CONST Name 'load_from_setting'
 CONST Class class_Operation
 %SUMMARY 'Восстанавливает "ссылку" из настроек свзанную с данным ключем и данным типом (классом, группой) объеков.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EECD5D02EE // SettingEntity
 ;
 : Target ME_45EECD5D02EE // SettingEntity
 ;
 : Parameters
   Seq: ( ME_45EECD5D02F2 // id
 )
 ; // Parameters

ref; // ME_45EECD5D02F1 load_from_setting

: ME_45EECD5D02EE
 CONST UID '45EECD5D02EE'
 CONST GUID '3790FA3D-D4C9-4A31-9864-F3D1CE9E97B1'
 CONST Name 'SettingEntity'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'абстрактный интерфейс, наследники которого умеют "сохранять" себя в настройках' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_457450470167 // DynamicTree
 ;
 : Operations
   Seq: ( ME_45EECD5D02EF // save_in_setting
 ME_45EECD5D02F1 // load_from_setting
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ISettingEntity'
 CONST extprop:rc:SelfName 'SettingEntity'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EECD5D02EE SettingEntity

FORWARD ME_45EECADF0232

: ME_45EECADF0233
 CONST UID '45EECADF0233'
 CONST Name 'NT_UNKNOWN'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EECADF0232 // NodeTypeConst
 ;
 : Target ME_45EEC375006D // NodeType
 ;
 CONST Value 0
 : ValueType ME_45EEC375006D // NodeType
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 0

ref; // ME_45EECADF0233 NT_UNKNOWN

: ME_45EECADF0232
 CONST UID '45EECADF0232'
 CONST Name 'NodeTypeConst'
 CONST Class class_Class
 : Stereotype st_Constants ;
 CONST Kind kind_NormalClass
 %SUMMARY 'константы типов ноды' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EECADF0233 // NT_UNKNOWN
 )
 ; // Attributes
 CONST "spell names" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'

ref; // ME_45EECADF0232 NodeTypeConst

FORWARD ME_45EECAA0007D

: ME_45EECAA0007F
 CONST UID '45EECAA0007F'
 CONST Name 'count'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EECAA0007D // NodesClipboard
 ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;
 CONST "pm" false

ref; // ME_45EECAA0007F count

: ME_4665316E008C
 CONST UID '4665316E008C'
 CONST Name 'style'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_466530AD038A // EVDGeneratorStyle
 ;

ref; // ME_4665316E008C style

: ME_45EECAA0007E
 CONST UID '45EECAA0007E'
 CONST Name 'as_evd'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EECAA0007D // NodesClipboard
 ;
 : Target WL 'ME_4423FB5903D8' '4423F94903C8.pas.ms.script' // Stream
 ;
 : Parameters
   Seq: ( ME_4665316E008C // style
 )
 ; // Parameters

ref; // ME_45EECAA0007E as_evd

: ME_4600E43B0232
 CONST UID '4600E43B0232'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EECAA0007D // NodesClipboard
 ;
 CONST "const_type" 'read-write'

ref; // ME_4600E43B0232 make

: ME_4600E5520213
 CONST UID '4600E5520213'
 CONST Name 'node_holder'
 CONST Class class_Parameter
 : Stereotype st_in ;

ref; // ME_4600E5520213 node_holder

: ME_4600E5140157
 CONST UID '4600E5140157'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EECAA0007D // NodesClipboard
 ;
 : Parameters
   Seq: ( ME_4600E5520213 // node_holder
 )
 ; // Parameters
 CONST "const_type" 'read-write'
 CONST "dll export" false

ref; // ME_4600E5140157 make

: ME_45EECAA0007D
 CONST UID '45EECAA0007D'
 CONST GUID 'B990C46B-9FF3-4C7C-8C61-2DD226FE644E'
 CONST Name 'NodesClipboard'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'контейнер для скопированных нод' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EECAA0007F // count
 )
 ; // Attributes
 : Operations
   Seq: ( ME_45EECAA0007E // as_evd
 ME_4600E43B0232 // make
 ME_4600E5140157 // make
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'INodesClipboard'
 CONST extprop:rc:SelfName 'NodesClipboard'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EECAA0007D NodesClipboard

: ME_475424C500AA
 CONST UID '475424C500AA'
 CONST GUID '6AFFD7FC-CA48-450D-8EB7-E7E47E04F9BF'
 CONST Name 'FakeFacetForFactory'
 CONST Class class_Class
 : Stereotype st_Facet ;
 CONST Kind kind_NormalClass
 %SUMMARY 'когда будут локальные интерфейсы, фасет надо грохнуть' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IFakeFacetForFactory'
 CONST extprop:rc:SelfName 'FakeFacetForFactory'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_475424C500AA FakeFacetForFactory

FORWARD ME_45EEC8E102FD

: ME_45EEC8E102FF
 CONST UID '45EEC8E102FF'
 CONST Name 'node_index'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_45EEC8E102FF node_index

: ME_45EEC8E10300
 CONST UID '45EEC8E10300'
 CONST Name 'delta'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;

ref; // ME_45EEC8E10300 delta

: ME_45EEC8E10301
 CONST UID '45EEC8E10301'
 CONST Name 'index_path'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC8680109 // NodeIndexPath
 ;

ref; // ME_45EEC8E10301 index_path

: ME_45EEC8E10302
 CONST UID '45EEC8E10302'
 CONST Name 'child_index'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01F0 // IndexInParent
 ;

ref; // ME_45EEC8E10302 child_index

: ME_45EEC8E102FE
 CONST UID '45EEC8E102FE'
 CONST Name 'change_children_count'
 CONST Class class_Operation
 %SUMMARY 'нотификация об изменении кол-ва видимых детей на ноде с указвнным индексом. В случае если изменение нод внутри рута не последовательное и не от начала, индекс должен быть задан как -1. '#13#10'parent_path - путь к УЗЛУ в котором произашли изменения (если delta < 0 - удаление, если delta > 0 - вставка)'#13#10'    left_child_index - индекс ребенка в узле: если удаление, то начиная с которого (включительно) мы удаляем delta элементорв; если вставка, то сразу после которого вы вставляем delta элементов.'#13#10'    left_child_index, может принять "специальное" значение IIP_BEFORE_LEFT_CHILD (-1) - означающее элемент "до первого" - например для вставки в начало детей.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8E102FD // NodeNotifier
 ;
 : Parameters
   Seq: ( ME_45EEC8E102FF // node_index
 ME_45EEC8E10300 // delta
 ME_45EEC8E10301 // index_path
 ME_45EEC8E10302 // child_index
 )
 ; // Parameters

ref; // ME_45EEC8E102FE change_children_count

: ME_45EEC8E10303
 CONST UID '45EEC8E10303'
 CONST Name 'reset_children_count'
 CONST Class class_Operation
 %SUMMARY 'устанавливает кол-во детей = 0' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8E102FD // NodeNotifier
 ;

ref; // ME_45EEC8E10303 reset_children_count

: ME_45EEC8E10304
 CONST UID '45EEC8E10304'
 CONST Name 'is_root_visible'
 CONST Class class_Operation
 %SUMMARY 'признак аутлайнера что он с видимым рутом' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8E102FD // NodeNotifier
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEC8E10304 is_root_visible

: ME_45EEC8E10305
 CONST UID '45EEC8E10305'
 CONST Name 'is_one_level'
 CONST Class class_Operation
 %SUMMARY 'признак аутлайнера что он одноуровневый' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8E102FD // NodeNotifier
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEC8E10305 is_one_level

: ME_45EEC8E10307
 CONST UID '45EEC8E10307'
 CONST Name 'index_path'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC8680109 // NodeIndexPath
 ;

ref; // ME_45EEC8E10307 index_path

: ME_45EEC8E10306
 CONST UID '45EEC8E10306'
 CONST Name 'invalidate'
 CONST Class class_Operation
 %SUMMARY 'нотификация о необходимости перерисовки. Должна вызываться после change_children_count (которые можно группирвать) или самостоятельно при изменении дерева не связанном с кол-вом детей.'#13#10'    parent_path - путь к НОДЕ в которой произашли изменения' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8E102FD // NodeNotifier
 ;
 : Parameters
   Seq: ( ME_45EEC8E10307 // index_path
 )
 ; // Parameters

ref; // ME_45EEC8E10306 invalidate

: ME_45EEC8E10308
 CONST UID '45EEC8E10308'
 CONST Name 'changing'
 CONST Class class_Operation
 %SUMMARY 'Начало итерации изменения дерева' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8E102FD // NodeNotifier
 ;

ref; // ME_45EEC8E10308 changing

: ME_45EEC8E10309
 CONST UID '45EEC8E10309'
 CONST Name 'changed'
 CONST Class class_Operation
 %SUMMARY 'Конец итерации изменения дерева' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8E102FD // NodeNotifier
 ;

ref; // ME_45EEC8E10309 changed

: ME_475E4B020072
 CONST UID '475E4B020072'
 CONST Name 'get_id'
 CONST Class class_Operation
 %SUMMARY 'Возвращает уникальный идентификатор объекта' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8E102FD // NodeNotifier
 ;
 : Target ME_475E4ACC0117 // NotifierID
 ;

ref; // ME_475E4B020072 get_id

: ME_45EEC8E102FD
 CONST UID '45EEC8E102FD'
 CONST GUID 'D368CD98-23ED-4EA2-B1A8-E72679D98593'
 CONST Name 'NodeNotifier'
 CONST Class class_Class
 : Stereotype st_Facet ;
 CONST Kind kind_NormalClass
 %SUMMARY 'callback интерфейс для оповещения визуального дерева об изменениях на ноде' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Operations
   Seq: ( ME_45EEC8E102FE // change_children_count
 ME_45EEC8E10303 // reset_children_count
 ME_45EEC8E10304 // is_root_visible
 ME_45EEC8E10305 // is_one_level
 ME_45EEC8E10306 // invalidate
 ME_45EEC8E10308 // changing
 ME_45EEC8E10309 // changed
 ME_475E4B020072 // get_id
 )
 ; // Operations
 CONST "call way" 'back'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'INodeNotifier'
 CONST extprop:rc:SelfName 'NodeNotifier'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC8E102FD NodeNotifier

FORWARD ME_4D399FCD0271

: ME_4D3D272402AE
 CONST UID '4D3D272402AE'
 CONST Name 'count'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_4D399FCD0271 // ListForFiltering
 ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;
 CONST "pm" false

ref; // ME_4D3D272402AE count

: ME_4D3D2D6D0195
 CONST UID '4D3D2D6D0195'
 CONST Name 'index'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;

ref; // ME_4D3D2D6D0195 index

: ME_4D3D26DC0123
 CONST UID '4D3D26DC0123'
 CONST Name 'item'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_4D399FCD0271 // ListForFiltering
 ;
 : Target WL 'ME_431841610361' '4423F94903C8.pas.ms.script' // String
 ;
 : Parameters
   Seq: ( ME_4D3D2D6D0195 // index
 )
 ; // Parameters

ref; // ME_4D3D26DC0123 item

: ME_4D399FCD0271
 CONST UID '4D399FCD0271'
 CONST GUID '89EBBAAC-B4DA-4DAB-9FEE-FE7F4A1BD86A'
 CONST Name 'ListForFiltering'
 CONST Class class_Class
 : Stereotype st_Facet ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_4D3D272402AE // count
 )
 ; // Attributes
 : Operations
   Seq: ( ME_4D3D26DC0123 // item
 )
 ; // Operations
 CONST "call way" 'back'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IListForFiltering'
 CONST extprop:rc:SelfName 'ListForFiltering'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_4D399FCD0271 ListForFiltering

FORWARD ME_45EEC8A6033C

FORWARD ME_45EEC90D00FA

FORWARD ME_45EEB95901C5

: ME_45EEB9590222
 CONST UID '45EEB9590222'
 CONST Name 'caption'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Пользовательское название ноды' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_431841610361' '4423F94903C8.pas.ms.script' // String
 ;
 CONST "pm" false

ref; // ME_45EEB9590222 caption

: ME_45EEB9590223
 CONST UID '45EEB9590223'
 CONST Name 'level'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'уровень ноды в дереве' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST "pm" false

ref; // ME_45EEB9590223 level

: ME_45EEB9590224
 CONST UID '45EEB9590224'
 CONST Name 'type'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 %SUMMARY 'Пользовательский тип ноды. Может определять тип связанной сущности, или просто использоваться для диффиренцации отображения' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC375006D // NodeType
 ;
 : CanRaiseInSet
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 )
 ; // CanRaiseInSet
 CONST "pm" false

ref; // ME_45EEB9590224 type

: ME_45EEB9590227
 CONST UID '45EEB9590227'
 CONST Name 'child_count'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;
 CONST "pm" false

ref; // ME_45EEB9590227 child_count

: ME_45EEB9590228
 CONST UID '45EEB9590228'
 CONST Name 'is_expanded'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'возвращает true, если установлен флаг раскрытия всех нод' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 CONST "pm" false

ref; // ME_45EEB9590228 is_expanded

: ME_45F65BEA00DA
 CONST UID '45F65BEA00DA'
 CONST Name 'entity'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_456EB3E10177' '456EA56002BF.pas.ms.script' // EntityBase
 ;
 : CanRaise
   Seq: ( ME_45EECBE20280 // NoEntity
 )
 ; // CanRaise
 CONST "pm" false

ref; // ME_45F65BEA00DA entity

: ME_45FE5E3000DA
 CONST UID '45FE5E3000DA'
 CONST Name 'first_child'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 CONST "pm" false

ref; // ME_45FE5E3000DA first_child

: ME_45FE5E5902FD
 CONST UID '45FE5E5902FD'
 CONST Name 'prev'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 CONST "pm" false

ref; // ME_45FE5E5902FD prev

: ME_45FE5E9C0109
 CONST UID '45FE5E9C0109'
 CONST Name 'next'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 CONST "pm" false

ref; // ME_45FE5E9C0109 next

: ME_45FE5ECB0261
 CONST UID '45FE5ECB0261'
 CONST Name 'parent'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 CONST "pm" false

ref; // ME_45FE5ECB0261 parent

: ME_47B953DD00BE
 CONST UID '47B953DD00BE'
 CONST Class class_Attribute
 : Stereotype st_factory_switch::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;

ref; // ME_47B953DD00BE 

: ME_45FE826B00CB
 CONST UID '45FE826B00CB'
 CONST Name 'notifier'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EEC8E102FD // NodeNotifier
 ;

ref; // ME_45FE826B00CB notifier

: ME_45EEB95901C7
 CONST UID '45EEB95901C7'
 CONST Name 'add_notifier'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_45FE826B00CB // notifier
 )
 ; // Parameters

ref; // ME_45EEB95901C7 add_notifier

: ME_462368F8037A
 CONST UID '462368F8037A'
 CONST Name 'filter'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEBD050271 // FilterList
 ;

ref; // ME_462368F8037A filter

: ME_462368F9006D
 CONST UID '462368F9006D'
 CONST Name 'shared_flags'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_462368F9006D shared_flags

: ME_462368F90148
 CONST UID '462368F90148'
 CONST Name 'sync_node'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_462368F90148 sync_node

: ME_462368F90222
 CONST UID '462368F90222'
 CONST Name 'sync_index'
 CONST Class class_Parameter
 : Stereotype st_out ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_462368F90222 sync_index

: ME_462368F902FD
 CONST UID '462368F902FD'
 CONST Name 'levels'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;

ref; // ME_462368F902FD levels

: ME_462368F903D8
 CONST UID '462368F903D8'
 CONST Name 'unfiltered'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_462368F903D8 unfiltered

: ME_462368FA00CB
 CONST UID '462368FA00CB'
 CONST Name 'auto_open'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_462368FA00CB auto_open

: ME_462368FA01A5
 CONST UID '462368FA01A5'
 CONST Name 'truncate_this_view'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_462368FA01A5 truncate_this_view

: ME_45EEB95901C9
 CONST UID '45EEB95901C9'
 CONST Name 'create_view_ex'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Расширенная версия метода create_view. (покачто вью всегда создается от рута)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_462368F8037A // filter
 ME_462368F9006D // shared_flags
 ME_462368F90148 // sync_node
 ME_462368F90222 // sync_index
 ME_462368F902FD // levels
 ME_462368F903D8 // unfiltered
 ME_462368FA00CB // auto_open
 ME_462368FA01A5 // truncate_this_view
 )
 ; // Parameters

ref; // ME_45EEB95901C9 create_view_ex

: ME_45EEB95901D3
 CONST UID '45EEB95901D3'
 CONST Name 'node_to_find'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_45EEB95901D3 node_to_find

: ME_45EEB95901D2
 CONST UID '45EEB95901D2'
 CONST Name 'find_node'
 CONST Class class_Operation
 %SUMMARY 'ищет в текущем дереву ноду равную переданной' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_45EEB95901D3 // node_to_find
 )
 ; // Parameters

ref; // ME_45EEB95901D2 find_node

: ME_46248EC002FD
 CONST UID '46248EC002FD'
 CONST Name 'node_to_find'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_46248EC002FD node_to_find

: ME_45EEB95901D4
 CONST UID '45EEB95901D4'
 CONST Name 'find_node_path'
 CONST Class class_Operation
 %SUMMARY 'Получение индексного пути ноды. Первый индекс в пути сам узел node_to_find' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC8680109 // NodeIndexPath
 ;
 : Parameters
   Seq: ( ME_46248EC002FD // node_to_find
 )
 ; // Parameters

ref; // ME_45EEB95901D4 find_node_path

: ME_462367EC0119
 CONST UID '462367EC0119'
 CONST Name 'ind'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_462367EC0119 ind

: ME_45EEB95901D6
 CONST UID '45EEB95901D6'
 CONST Name 'get_by_sibbling_index'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'возвращает ноду-соседа (т.е. "брата" текущей) по индексу' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_462367EC0119 // ind
 )
 ; // Parameters

ref; // ME_45EEB95901D6 get_by_sibbling_index

: ME_461650BC03A9
 CONST UID '461650BC03A9'
 CONST Name 'ind'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_461650BC03A9 ind

: ME_45EEB95901D8
 CONST UID '45EEB95901D8'
 CONST Name 'get_by_visible_index'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'возвращает ноду по видемому индексу относительно текущей' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_461650BC03A9 // ind
 )
 ; // Parameters

ref; // ME_45EEB95901D8 get_by_visible_index

: ME_45EEB95901DB
 CONST UID '45EEB95901DB'
 CONST Name 'filter'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEBD050271 // FilterList
 ;

ref; // ME_45EEB95901DB filter

: ME_45EEB95901DA
 CONST UID '45EEB95901DA'
 CONST Name 'get_first_fit'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC8680109 // NodeIndexPath
 ;
 : Parameters
   Seq: ( ME_45EEB95901DB // filter
 )
 ; // Parameters

ref; // ME_45EEB95901DA get_first_fit

: ME_45EEB95901DD
 CONST UID '45EEB95901DD'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_45EEB95901DD flag

: ME_45EEB95901DC
 CONST UID '45EEB95901DC'
 CONST Name 'get_flag_count'
 CONST Class class_Operation
 %SUMMARY 'возвращает кол-во зхаданных флагов в текущем поддереве' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;
 : Parameters
   Seq: ( ME_45EEB95901DD // flag
 )
 ; // Parameters

ref; // ME_45EEB95901DC get_flag_count

: ME_4677A52B031C
 CONST UID '4677A52B031C'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_4677A52B031C flag

: ME_4677A5180213
 CONST UID '4677A5180213'
 CONST Name 'get_first_level_children_flag_count'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;
 : Parameters
   Seq: ( ME_4677A52B031C // flag
 )
 ; // Parameters

ref; // ME_4677A5180213 get_first_level_children_flag_count

: ME_45EEB95901DE
 CONST UID '45EEB95901DE'
 CONST Name 'get_node_id'
 CONST Class class_Operation
 %SUMMARY 'Получение идентификатора ноды. Обычно возвращает пойнтер, но для документа value->id (), т.е. не уникален.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC48C01E4 // NodeId
 ;

ref; // ME_45EEB95901DE get_node_id

: ME_460788960261
 CONST UID '460788960261'
 CONST Name 'id'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01E4 // NodeId
 ;

ref; // ME_460788960261 id

: ME_45EEB95901DF
 CONST UID '45EEB95901DF'
 CONST Name 'set_node_id'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'Изменить идентификатор ноды. Обычно ничего не делает, но для документа изменяет value->id ().' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_460788960261 // id
 )
 ; // Parameters

ref; // ME_45EEB95901DF set_node_id

: ME_46236D06007D
 CONST UID '46236D06007D'
 CONST Name 'get_available_layers'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC80F0128 // LayerIdList
 ;

ref; // ME_46236D06007D get_available_layers

: ME_46000500031C
 CONST UID '46000500031C'
 CONST Name 'node'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_46000500031C node

: ME_45EEB95901E1
 CONST UID '45EEB95901E1'
 CONST Name 'get_visible_delta'
 CONST Class class_Operation
 %SUMMARY 'возвращает разницу видимых индексов двух нод (может автоматически развернуть необходимые уровни)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;
 : CanRaise
   Seq: ( ME_45EECBE20290 // NotFound
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_46000500031C // node
 )
 ; // Parameters

ref; // ME_45EEB95901E1 get_visible_delta

: ME_4600052A00EA
 CONST UID '4600052A00EA'
 CONST Name 'entity'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_456EB3E10177' '456EA56002BF.pas.ms.script' // EntityBase
 ;

ref; // ME_4600052A00EA entity

: ME_45EEB95901E3
 CONST UID '45EEB95901E3'
 CONST Name 'get_visible_delta_by_entity'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;
 : CanRaise
   Seq: ( ME_45EECBE20290 // NotFound
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_4600052A00EA // entity
 )
 ; // Parameters

ref; // ME_45EEB95901E3 get_visible_delta_by_entity

: ME_45EEB95901E5
 CONST UID '45EEB95901E5'
 CONST Name 'get_index_from_parent'
 CONST Class class_Operation
 %SUMMARY 'Возвращает порядковый номер узла относительно родителя (начиная с 1)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_45EEB95901E5 get_index_from_parent

: ME_45EEB95901E6
 CONST UID '45EEB95901E6'
 CONST Name 'get_abs_index'
 CONST Class class_Operation
 %SUMMARY 'Возвращает абс. индекс для ноды' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB454018E' '456EA56002BF.pas.ms.script' // CanNotFindData
 )
 ; // CanRaise

ref; // ME_45EEB95901E6 get_abs_index

: ME_45FEB0C30000
 CONST UID '45FEB0C30000'
 CONST Name 'index'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_45FEB0C30000 index

: ME_45EEB95901E7
 CONST UID '45EEB95901E7'
 CONST Name 'get_child_path_by_abs_index'
 CONST Class class_Operation
 %SUMMARY 'Возвращает путь к ноде по её абс. индексу' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC8680109 // NodeIndexPath
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB454018E' '456EA56002BF.pas.ms.script' // CanNotFindData
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_45FEB0C30000 // index
 )
 ; // Parameters

ref; // ME_45EEB95901E7 get_child_path_by_abs_index

: ME_4624DEED008C
 CONST UID '4624DEED008C'
 CONST Name 'get_frozen_node'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_4624DEED008C get_frozen_node

: ME_4625D15D0138
 CONST UID '4625D15D0138'
 CONST Name 'get_unfiltered_node'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_4625D15D0138 get_unfiltered_node

: ME_45EEB95901EA
 CONST UID '45EEB95901EA'
 CONST Name 'has_children'
 CONST Class class_Operation
 %SUMMARY 'признакк есть ли дети' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEB95901EA has_children

: ME_45EEB95901EC
 CONST UID '45EEB95901EC'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_45EEB95901EC flag

: ME_45EEB95901EB
 CONST UID '45EEB95901EB'
 CONST Name 'has_children_flag'
 CONST Class class_Operation
 %SUMMARY 'признак взведен ли у детей указанный флаг' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 : Parameters
   Seq: ( ME_45EEB95901EC // flag
 )
 ; // Parameters

ref; // ME_45EEB95901EB has_children_flag

: ME_45EEB95901ED
 CONST UID '45EEB95901ED'
 CONST Name 'has_filtered_children'
 CONST Class class_Operation
 %SUMMARY 'признак того что нода соджержит отфильтрованных детей' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEB95901ED has_filtered_children

: ME_45EEB95901EF
 CONST UID '45EEB95901EF'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_45EEB95901EF flag

: ME_45EEB95901EE
 CONST UID '45EEB95901EE'
 CONST Name 'has_flag'
 CONST Class class_Operation
 %SUMMARY 'признак взведен ли указанный флаг' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 : Parameters
   Seq: ( ME_45EEB95901EF // flag
 )
 ; // Parameters

ref; // ME_45EEB95901EE has_flag

: ME_45EEB95901F1
 CONST UID '45EEB95901F1'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_45EEB95901F1 flag

: ME_45EEB95901F0
 CONST UID '45EEB95901F0'
 CONST Name 'has_parent_flag'
 CONST Class class_Operation
 %SUMMARY 'признак взведен ли у родителей указанный флаг' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 : Parameters
   Seq: ( ME_45EEB95901F1 // flag
 )
 ; // Parameters

ref; // ME_45EEB95901F0 has_parent_flag

: ME_45EEB95901F2
 CONST UID '45EEB95901F2'
 CONST Name 'is_first'
 CONST Class class_Operation
 %SUMMARY 'признак первый ли это ребенок' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEB95901F2 is_first

: ME_4624E6AD02DE
 CONST UID '4624E6AD02DE'
 CONST Name 'it'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_4624E6AD02DE it

: ME_45EEB95901F3
 CONST UID '45EEB95901F3'
 CONST Name 'is_it_higher'
 CONST Class class_Operation
 %SUMMARY 'возвращает true если переданная нода (it) выше текущей' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 : Parameters
   Seq: ( ME_4624E6AD02DE // it
 )
 ; // Parameters

ref; // ME_45EEB95901F3 is_it_higher

: ME_45EEB95901F5
 CONST UID '45EEB95901F5'
 CONST Name 'is_last'
 CONST Class class_Operation
 %SUMMARY 'признак последний ли это ребенок' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEB95901F5 is_last

: ME_4624E72100FA
 CONST UID '4624E72100FA'
 CONST Name 'node'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_4624E72100FA node

: ME_45EEB95901F6
 CONST UID '45EEB95901F6'
 CONST Name 'is_same_node'
 CONST Class class_Operation
 %SUMMARY 'проверяет на равенство две ноды' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;
 : Parameters
   Seq: ( ME_4624E72100FA // node
 )
 ; // Parameters

ref; // ME_45EEB95901F6 is_same_node

: ME_45EEB95901F9
 CONST UID '45EEB95901F9'
 CONST Name 'with_flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_45EEB95901F9 with_flag

: ME_45EEB95901F8
 CONST UID '45EEB95901F8'
 CONST Name 'iterate_nodes'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'возвращает сквозной итератор по нодам с указанным флагом' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC8A6033C // NodeIterator
 ;
 : Parameters
   Seq: ( ME_45EEB95901F9 // with_flag
 )
 ; // Parameters

ref; // ME_45EEB95901F8 iterate_nodes

: ME_45EEB95901FA
 CONST UID '45EEB95901FA'
 CONST Name 'make_visible'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_45EEB95901FA make_visible

: ME_45FE826101F4
 CONST UID '45FE826101F4'
 CONST Name 'notifier'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EEC8E102FD // NodeNotifier
 ;

ref; // ME_45FE826101F4 notifier

: ME_45EEB95901FB
 CONST UID '45EEB95901FB'
 CONST Name 'remove_notifier'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_45FE826101F4 // notifier
 )
 ; // Parameters

ref; // ME_45EEB95901FB remove_notifier

: ME_46078CB301B5
 CONST UID '46078CB301B5'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_46078CB301B5 flag

: ME_46078CB30251
 CONST UID '46078CB30251'
 CONST Name 'value'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_46078CB30251 value

: ME_45EEB95901FD
 CONST UID '45EEB95901FD'
 CONST Name 'set_all_flag'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'устанавливает у всего поддерева (КРОМЕ самой ноды на который была вызвана операция) указанный флаг (сейчас работает всегда от рута, и иногда глючит именно установка, сброс работает корректно)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_46078CB301B5 // flag
 ME_46078CB30251 // value
 )
 ; // Parameters

ref; // ME_45EEB95901FD set_all_flag

: ME_46078CB9004E
 CONST UID '46078CB9004E'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_46078CB9004E flag

: ME_46078CB900CB
 CONST UID '46078CB900CB'
 CONST Name 'value'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_46078CB900CB value

: ME_45EEB9590200
 CONST UID '45EEB9590200'
 CONST Name 'set_flag'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'взводит указанный флаг' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_46078CB9004E // flag
 ME_46078CB900CB // value
 )
 ; // Parameters

ref; // ME_45EEB9590200 set_flag

: ME_46078CBE033C
 CONST UID '46078CBE033C'
 CONST Name 'offset_from'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_46078CBE033C offset_from

: ME_46078CBE03B9
 CONST UID '46078CBE03B9'
 CONST Name 'offset_to'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_46078CBE03B9 offset_to

: ME_46078CBF004E
 CONST UID '46078CBF004E'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_46078CBF004E flag

: ME_46078CBF00DA
 CONST UID '46078CBF00DA'
 CONST Name 'value'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_46078CBF00DA value

: ME_46078CBF0157
 CONST UID '46078CBF0157'
 CONST Name 'clean_other'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_46078CBF0157 clean_other

: ME_45EEB9590203
 CONST UID '45EEB9590203'
 CONST Name 'set_range_flag'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'взводит указанный флаг на промежутке' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_46078CBE033C // offset_from
 ME_46078CBE03B9 // offset_to
 ME_46078CBF004E // flag
 ME_46078CBF00DA // value
 ME_46078CBF0157 // clean_other
 )
 ; // Parameters

ref; // ME_45EEB9590203 set_range_flag

: ME_45FEB960033C
 CONST UID '45FEB960033C'
 CONST Name 'mask'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_45FEB960033C mask

: ME_45EEB9590209
 CONST UID '45EEB9590209'
 CONST Name 'delete_nodes'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'удаляет все ноды по заданному флагу. ВРЕМЕННО перенесен с каталога на ноду!!!' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_45FEB960033C // mask
 )
 ; // Parameters
 CONST "Must throw in error" false

ref; // ME_45EEB9590209 delete_nodes

: ME_45EEB959020B
 CONST UID '45EEB959020B'
 CONST Name 'delete_node'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'удаляет текущую ноду' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 CONST "Must throw in error" false

ref; // ME_45EEB959020B delete_node

: ME_45EEB959020D
 CONST UID '45EEB959020D'
 CONST Name 'mask'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_45EEB959020D mask

: ME_45EEB959020C
 CONST UID '45EEB959020C'
 CONST Name 'copy_nodes'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'копирует ноды по заданному флагу и возвращает их в виде контейнера для последующей вставки в любое другое дерево.ВРЕМЕННО перенесен с каталога на ноду!!!' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EECAA0007D // NodesClipboard
 ;
 : Parameters
   Seq: ( ME_45EEB959020D // mask
 )
 ; // Parameters

ref; // ME_45EEB959020C copy_nodes

: ME_46238EE601A5
 CONST UID '46238EE601A5'
 CONST Name 'nodes'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EECAA0007D // NodesClipboard
 ;

ref; // ME_46238EE601A5 nodes

: ME_45EEB959020F
 CONST UID '45EEB959020F'
 CONST Name 'add_last_childs'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'вставляет ноды из контейнера в конец списка детей - на самом деле если есть сортировка то позиции вставки могут стать другими, но ОБЯЗАТЕЛЬНО в указанном паранте' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_46238EE601A5 // nodes
 )
 ; // Parameters

ref; // ME_45EEB959020F add_last_childs

: ME_46238E060222
 CONST UID '46238E060222'
 CONST Name 'node'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_46238E060222 node

: ME_45EEB9590211
 CONST UID '45EEB9590211'
 CONST Name 'add_last_child'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'аналогично add_last_childs но для одной ноды (как-либо полученной например, через create_new_node или напрямую из дерева, если это нода из дерева то будет сделана копия)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_46238E060222 // node
 )
 ; // Parameters

ref; // ME_45EEB9590211 add_last_child

: ME_46239066031C
 CONST UID '46239066031C'
 CONST Name 'nodes'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EECAA0007D // NodesClipboard
 ;

ref; // ME_46239066031C nodes

: ME_45EEB9590213
 CONST UID '45EEB9590213'
 CONST Name 'add_prev_siblings'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'аналогично add_last_childs, но ноды вставляется перед указанной как соседи, соответственно КОНСТАНТНЫМ будет парент текущей ноды' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_46239066031C // nodes
 )
 ; // Parameters

ref; // ME_45EEB9590213 add_prev_siblings

: ME_4623906C03D8
 CONST UID '4623906C03D8'
 CONST Name 'node'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_4623906C03D8 node

: ME_45EEB9590215
 CONST UID '45EEB9590215'
 CONST Name 'add_prev_sibling'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'аналогично add_prev_siblings но для одной ноды' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB4540177' '456EA56002BF.pas.ms.script' // ConstantModify
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_4623906C03D8 // node
 )
 ; // Parameters

ref; // ME_45EEB9590215 add_prev_sibling

: ME_45EEB9590217
 CONST UID '45EEB9590217'
 CONST Name 'start_change_transaction'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'указывает на начало транзакции изменения данных ноды. Транзакции могут быть вложенными' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_45EEB9590217 start_change_transaction

: ME_45EEB9590218
 CONST UID '45EEB9590218'
 CONST Name 'rollback_change_transaction'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'сбрасывает текущщую транзакцию (вместе со всеми вложенными),  сбрасывает все изменения (перечитывает с сервера или внутреннего буффера)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_45EEB9590218 rollback_change_transaction

: ME_45EEB9590219
 CONST UID '45EEB9590219'
 CONST Name 'commit_change_transaction'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'закрывает транзакцию, и если это больше нет "верхних" открытых транзакций - сохраняет все изменения сделанные на ноде (отправляет данные на сервер)' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_45EEB9590219 commit_change_transaction

: ME_45EEB959021B
 CONST UID '45EEB959021B'
 CONST Name 'path'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC8680109 // NodeIndexPath
 ;

ref; // ME_45EEB959021B path

: ME_45EEB959021A
 CONST UID '45EEB959021A'
 CONST Name 'get_node_by_path'
 CONST Class class_Operation
 %SUMMARY 'Дублирует с CatalogBase' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 : CanRaise
   Seq: ( ME_45EECBE20290 // NotFound
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_45EEB959021B // path
 )
 ; // Parameters

ref; // ME_45EEB959021A get_node_by_path

: ME_45EEB959021D
 CONST UID '45EEB959021D'
 CONST Name 'filter'
 CONST Class class_Parameter
 : Stereotype st_in ;
 %SUMMARY 'Условие поиска.' ;
 : Target ME_45EEBD050271 // FilterList
 ;

ref; // ME_45EEB959021D filter

: ME_45EEB959021E
 CONST UID '45EEB959021E'
 CONST Name 'find_from'
 CONST Class class_Parameter
 : Stereotype st_in ;
 %SUMMARY 'Искать от позиции.' ;
 : Target ME_45EEC90D00FA // NodePosition
 ;

ref; // ME_45EEB959021E find_from

: ME_45EEB959021C
 CONST UID '45EEB959021C'
 CONST Name 'find'
 CONST Class class_Operation
 %SUMMARY 'Поиск в дереве по условию, заданному в фильтре. В случае успеха возвращает итератор первого вхождения, иначе пустой итератор (is_good!=true).' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC282029F // FindIterator
 ;
 : Parameters
   Seq: ( ME_45EEB959021D // filter
 ME_45EEB959021E // find_from
 )
 ; // Parameters

ref; // ME_45EEB959021C find

: ME_45EEB959021F
 CONST UID '45EEB959021F'
 CONST Name 'is_relevance_search_supported'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEB959021F is_relevance_search_supported

: ME_45EEB9590221
 CONST UID '45EEB9590221'
 CONST Name 'expand'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_45EEB9590221 expand

: ME_45EEB9590220
 CONST UID '45EEB9590220'
 CONST Name 'expand_all'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 %SUMMARY 'устанавливает и снимает флаг раскрытия всех нод в дереве' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_45EEB9590221 // expand
 )
 ; // Parameters

ref; // ME_45EEB9590220 expand_all

: ME_45F6694A01B5
 CONST UID '45F6694A01B5'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_multi_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : CanRaise
   Seq: ( WL 'ME_456EB454018E' '456EA56002BF.pas.ms.script' // CanNotFindData
 )
 ; // CanRaise
 CONST "const_type" 'read-write'
 CONST "transparent multy" false

ref; // ME_45F6694A01B5 make

: ME_4610B61800BB
 CONST UID '4610B61800BB'
 CONST Name 'owner_tree'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_475424C500AA // FakeFacetForFactory
 ;

ref; // ME_4610B61800BB owner_tree

: ME_4610B6180232
 CONST UID '4610B6180232'
 CONST Name 'snode'
 CONST Class class_Parameter
 : Stereotype st_in ;

ref; // ME_4610B6180232 snode

: ME_45FFF849002E
 CONST UID '45FFF849002E'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_multi_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_4610B61800BB // owner_tree
 ME_4610B6180232 // snode
 )
 ; // Parameters
 CONST "const_type" 'read-write'
 CONST "dll export" false
 CONST "transparent multy" false

ref; // ME_45FFF849002E make

: ME_473D89900129
 CONST UID '473D89900129'
 CONST Name 'with_flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_473D89900129 with_flag

: ME_473D89660266
 CONST UID '473D89660266'
 CONST Name 'iterate_all_nodes'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Target ME_45EEC8A6033C // NodeIterator
 ;
 : Parameters
   Seq: ( ME_473D89900129 // with_flag
 )
 ; // Parameters

ref; // ME_473D89660266 iterate_all_nodes

: ME_51EFC42A01C1
 CONST UID '51EFC42A01C1'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_51EFC42A01C1 flag

: ME_51EFC42A024C
 CONST UID '51EFC42A024C'
 CONST Name 'value'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_51EFC42A024C value

: ME_51EFC4100162
 CONST UID '51EFC4100162'
 CONST Name 'set_all_flag_except_first_children_of_root_children'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_51EFC42A01C1 // flag
 ME_51EFC42A024C // value
 )
 ; // Parameters

ref; // ME_51EFC4100162 set_all_flag_except_first_children_of_root_children

: ME_51EFD281039D
 CONST UID '51EFD281039D'
 CONST Name 'offset_from'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_51EFD281039D offset_from

: ME_51EFD28103D0
 CONST UID '51EFD28103D0'
 CONST Name 'offset_to'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC48C01EC // VisibleIndex
 ;

ref; // ME_51EFD28103D0 offset_to

: ME_51EFD282001A
 CONST UID '51EFD282001A'
 CONST Name 'flag'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_45F80B600000' '45F66E6A02BF.pas.ms.script' // FlagMask
 ;

ref; // ME_51EFD282001A flag

: ME_51EFD282004C
 CONST UID '51EFD282004C'
 CONST Name 'value'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_51EFD282004C value

: ME_51EFD282007F
 CONST UID '51EFD282007F'
 CONST Name 'clean_other'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFE100240' '3DBFDB23006E.pas.ms.script' // boolean
 ;

ref; // ME_51EFD282007F clean_other

: ME_51EFD26E03DF
 CONST UID '51EFD26E03DF'
 CONST Name 'set_range_flag_except_first_children_of_root_children'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEB95901C5 // NodeBase
 ;
 : Parameters
   Seq: ( ME_51EFD281039D // offset_from
 ME_51EFD28103D0 // offset_to
 ME_51EFD282001A // flag
 ME_51EFD282004C // value
 ME_51EFD282007F // clean_other
 )
 ; // Parameters

ref; // ME_51EFD26E03DF set_range_flag_except_first_children_of_root_children

: ME_45EECD5D02EF_ME_45EEB95901C5
 CONST UID '45EECD5D02EF'
 CONST Name 'save_in_setting'
 : Original ME_45EECD5D02EF // save_in_setting
 ;
 : Implementor ME_45EEB95901C5 // NodeBase
 ;
 CONST OpKind opkind_Implemented
ref; // ME_45EECD5D02EF_ME_45EEB95901C5 save_in_setting

: ME_45EECD5D02F1_ME_45EEB95901C5
 CONST UID '45EECD5D02F1'
 CONST Name 'load_from_setting'
 : Original ME_45EECD5D02F1 // load_from_setting
 ;
 : Implementor ME_45EEB95901C5 // NodeBase
 ;
 CONST OpKind opkind_Implemented
ref; // ME_45EECD5D02F1_ME_45EEB95901C5 load_from_setting

: ME_45EEB95901C5
 CONST UID '45EEB95901C5'
 CONST GUID '954590CB-D1B3-44B3-8492-650D28A0CD8F'
 CONST Name 'NodeBase'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Базовый интерфейс ноды "новых" деревьев' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EECD5D02EE // SettingEntity
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_45EEB9590222 // caption
 ME_45EEB9590223 // level
 ME_45EEB9590224 // type
 ME_45EEB9590227 // child_count
 ME_45EEB9590228 // is_expanded
 ME_45F65BEA00DA // entity
 ME_45FE5E3000DA // first_child
 ME_45FE5E5902FD // prev
 ME_45FE5E9C0109 // next
 ME_45FE5ECB0261 // parent
 ME_47B953DD00BE // 
 )
 ; // Attributes
 : Operations
   Seq: ( ME_45EEB95901C7 // add_notifier
 ME_45EEB95901C9 // create_view_ex
 ME_45EEB95901D2 // find_node
 ME_45EEB95901D4 // find_node_path
 ME_45EEB95901D6 // get_by_sibbling_index
 ME_45EEB95901D8 // get_by_visible_index
 ME_45EEB95901DA // get_first_fit
 ME_45EEB95901DC // get_flag_count
 ME_4677A5180213 // get_first_level_children_flag_count
 ME_45EEB95901DE // get_node_id
 ME_45EEB95901DF // set_node_id
 ME_46236D06007D // get_available_layers
 ME_45EEB95901E1 // get_visible_delta
 ME_45EEB95901E3 // get_visible_delta_by_entity
 ME_45EEB95901E5 // get_index_from_parent
 ME_45EEB95901E6 // get_abs_index
 ME_45EEB95901E7 // get_child_path_by_abs_index
 ME_4624DEED008C // get_frozen_node
 ME_4625D15D0138 // get_unfiltered_node
 ME_45EEB95901EA // has_children
 ME_45EEB95901EB // has_children_flag
 ME_45EEB95901ED // has_filtered_children
 ME_45EEB95901EE // has_flag
 ME_45EEB95901F0 // has_parent_flag
 ME_45EEB95901F2 // is_first
 ME_45EEB95901F3 // is_it_higher
 ME_45EEB95901F5 // is_last
 ME_45EEB95901F6 // is_same_node
 ME_45EEB95901F8 // iterate_nodes
 ME_45EEB95901FA // make_visible
 ME_45EEB95901FB // remove_notifier
 ME_45EEB95901FD // set_all_flag
 ME_45EEB9590200 // set_flag
 ME_45EEB9590203 // set_range_flag
 ME_45EEB9590209 // delete_nodes
 ME_45EEB959020B // delete_node
 ME_45EEB959020C // copy_nodes
 ME_45EEB959020F // add_last_childs
 ME_45EEB9590211 // add_last_child
 ME_45EEB9590213 // add_prev_siblings
 ME_45EEB9590215 // add_prev_sibling
 ME_45EEB9590217 // start_change_transaction
 ME_45EEB9590218 // rollback_change_transaction
 ME_45EEB9590219 // commit_change_transaction
 ME_45EEB959021A // get_node_by_path
 ME_45EEB959021C // find
 ME_45EEB959021F // is_relevance_search_supported
 ME_45EEB9590220 // expand_all
 ME_45F6694A01B5 // make
 ME_45FFF849002E // make
 ME_473D89660266 // iterate_all_nodes
 ME_51EFC4100162 // set_all_flag_except_first_children_of_root_children
 ME_51EFD26E03DF // set_range_flag_except_first_children_of_root_children
 )
 ; // Operations
 : Implemented
   Seq: ( ME_45EECD5D02EF_ME_45EEB95901C5 // save_in_setting
 ME_45EECD5D02F1_ME_45EEB95901C5 // load_from_setting
 )
 ; // Implemented
 : Forwarded
   Seq: ( ME_45EEC8A6033C // NodeIterator
 ME_45EEC90D00FA // NodePosition
 )
 ; // Forwarded
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'INodeBase'
 CONST extprop:rc:SelfName 'NodeBase'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEB95901C5 NodeBase

: ME_45FFB3E000FA
 CONST UID '45FFB3E000FA'
 CONST Name 'next'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEC8A6033C // NodeIterator
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 CONST "pm" false

ref; // ME_45FFB3E000FA next

: ME_473DCB1102C4
 CONST UID '473DCB1102C4'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEC8A6033C // NodeIterator
 ;
 CONST "const_type" 'read-write'

ref; // ME_473DCB1102C4 make

: ME_45EEC8A6033C
 CONST UID '45EEC8A6033C'
 CONST GUID '1F4887B9-4FA9-4B90-BB5C-0D3EAB6D0792'
 CONST Name 'NodeIterator'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Интерфейс для получения линейного списка элементов дерева.'#13#10'Должен поддерживаться пользователем для реализации операций с произвольным набором элементов дерева (например, со списком выделенных элементов).' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45FFB3E000FA // next
 )
 ; // Attributes
 : Operations
   Seq: ( ME_473DCB1102C4 // make
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'INodeIterator'
 CONST extprop:rc:SelfName 'NodeIterator'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEC8A6033C NodeIterator

: ME_45EEC90D00FB
 CONST UID '45EEC90D00FB'
 CONST Name 'pos'
 CONST Class class_Attribute
 %SUMMARY 'Позиция внутри ноды node.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_45EEC90D00FA // NodePosition
 ;
 : Target WL 'ME_3DBFFD7002C2' '3DBFDB23006E.pas.ms.script' // long
 ;

ref; // ME_45EEC90D00FB pos

: ME_461CFA960148
 CONST UID '461CFA960148'
 CONST Name 'node'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_ref
 : Parent ME_45EEC90D00FA // NodePosition
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_461CFA960148 node

: ME_45EEC90D00FA
 CONST UID '45EEC90D00FA'
 CONST Name 'NodePosition'
 CONST Class class_Class
 : Stereotype st_Struct ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Позиция ноды в дереве и внутри этой ноды.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEC90D00FB // pos
 ME_461CFA960148 // node
 )
 ; // Attributes
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'TNodePosition'

ref; // ME_45EEC90D00FA NodePosition

FORWARD ME_45EEBA2C02BF

: ME_45EEBA2C02CD
 CONST UID '45EEBA2C02CD'
 CONST Name 'name'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEBA2C02BF // CatalogBase
 ;
 : Target WL 'ME_431841610361' '4423F94903C8.pas.ms.script' // String
 ;
 CONST "pm" false

ref; // ME_45EEBA2C02CD name

: ME_45F6906C03C8
 CONST UID '45F6906C03C8'
 CONST Name 'root'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_45EEBA2C02BF // CatalogBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 CONST TargetStereotype 'const'
 CONST "pm" false

ref; // ME_45F6906C03C8 root

: ME_45EEBA2C02C0
 CONST UID '45EEBA2C02C0'
 CONST Name 'clone'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBA2C02BF // CatalogBase
 ;
 : Target ME_45EEBA2C02BF // CatalogBase
 ;

ref; // ME_45EEBA2C02C0 clone

: ME_45EEBA2C02C2
 CONST UID '45EEBA2C02C2'
 CONST Name 'path'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEC8680109 // NodeIndexPath
 ;

ref; // ME_45EEBA2C02C2 path

: ME_45EEBA2C02C1
 CONST UID '45EEBA2C02C1'
 CONST Name 'get_node_by_path'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBA2C02BF // CatalogBase
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 : CanRaise
   Seq: ( ME_45EECBE20290 // NotFound
 )
 ; // CanRaise
 : Parameters
   Seq: ( ME_45EEBA2C02C2 // path
 )
 ; // Parameters

ref; // ME_45EEBA2C02C1 get_node_by_path

: ME_462F0E5B009C
 CONST UID '462F0E5B009C'
 CONST Name 'tree'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEBA2C02BF // CatalogBase
 ;

ref; // ME_462F0E5B009C tree

: ME_45EEBA2C02C5
 CONST UID '45EEBA2C02C5'
 CONST Name 'intersect_tree'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBA2C02BF // CatalogBase
 ;
 : Parameters
   Seq: ( ME_462F0E5B009C // tree
 )
 ; // Parameters

ref; // ME_45EEBA2C02C5 intersect_tree

: ME_462F0E600000
 CONST UID '462F0E600000'
 CONST Name 'tree'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEBA2C02BF // CatalogBase
 ;

ref; // ME_462F0E600000 tree

: ME_45EEBA2C02C7
 CONST UID '45EEBA2C02C7'
 CONST Name 'merge_tree'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBA2C02BF // CatalogBase
 ;
 : Parameters
   Seq: ( ME_462F0E600000 // tree
 )
 ; // Parameters

ref; // ME_45EEBA2C02C7 merge_tree

: ME_462F0E66003E
 CONST UID '462F0E66003E'
 CONST Name 'tree'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEBA2C02BF // CatalogBase
 ;

ref; // ME_462F0E66003E tree

: ME_45EEBA2C02C9
 CONST UID '45EEBA2C02C9'
 CONST Name 'minus_tree'
 CONST Class class_Operation
 : Stereotype st_chg::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBA2C02BF // CatalogBase
 ;
 : Parameters
   Seq: ( ME_462F0E66003E // tree
 )
 ; // Parameters

ref; // ME_45EEBA2C02C9 minus_tree

: ME_462F089A0213
 CONST UID '462F089A0213'
 CONST Name 'nodes'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_45EECAA0007D // NodesClipboard
 ;

ref; // ME_462F089A0213 nodes

: ME_45EEBA2C02CB
 CONST UID '45EEBA2C02CB'
 CONST Name 'create'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBA2C02BF // CatalogBase
 ;
 : Target ME_45EEBA2C02BF // CatalogBase
 ;
 : Parameters
   Seq: ( ME_462F089A0213 // nodes
 )
 ; // Parameters

ref; // ME_45EEBA2C02CB create

: ME_45EEBA2C02BF
 CONST UID '45EEBA2C02BF'
 CONST GUID '59A590F8-FB2D-49E6-A954-1B0CC9CCAD04'
 CONST Name 'CatalogBase'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Менеджер деревьев постренных на основе NodeBase и поддерживающие хранение сущностей (EntityBase). Заменяет устаревший BaseTreeSupport::BaseCatalog' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_45EEBA2C02CD // name
 ME_45F6906C03C8 // root
 )
 ; // Attributes
 : Operations
   Seq: ( ME_45EEBA2C02C0 // clone
 ME_45EEBA2C02C1 // get_node_by_path
 ME_45EEBA2C02C5 // intersect_tree
 ME_45EEBA2C02C7 // merge_tree
 ME_45EEBA2C02C9 // minus_tree
 ME_45EEBA2C02CB // create
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ICatalogBase'
 CONST extprop:rc:SelfName 'CatalogBase'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEBA2C02BF CatalogBase

: ME_47A1A4FB0255
 CONST UID '47A1A4FB0255'
 CONST GUID '7AC01117-FE4F-4D1C-AA39-44B55E57D5F7'
 CONST Name 'TrimLeafFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ITrimLeafFilter'
 CONST extprop:rc:SelfName 'TrimLeafFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_47A1A4FB0255 TrimLeafFilter

FORWARD ME_47B953FF01A0

: ME_47B954230250
 CONST UID '47B954230250'
 CONST Name 'AT_ANNO_INTEREST'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_ANNO_INTEREST'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_ANNO_INTEREST'

ref; // ME_47B954230250 AT_ANNO_INTEREST

: ME_47B95438007A
 CONST UID '47B95438007A'
 CONST Name 'AT_ANNO_KIND'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_ANNO_KIND'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_ANNO_KIND'

ref; // ME_47B95438007A AT_ANNO_KIND

: ME_47B95447019A
 CONST UID '47B95447019A'
 CONST Name 'AT_ANNO_ORG'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_ANNO_ORG'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_ANNO_ORG'

ref; // ME_47B95447019A AT_ANNO_ORG

: ME_47B9545403E6
 CONST UID '47B9545403E6'
 CONST Name 'AT_ANNO_TAX'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_ANNO_TAX'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_ANNO_TAX'

ref; // ME_47B9545403E6 AT_ANNO_TAX

: ME_47B954620362
 CONST UID '47B954620362'
 CONST Name 'AT_ANNO_USER'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_ANNO_USER'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_ANNO_USER'

ref; // ME_47B954620362 AT_ANNO_USER

: ME_47B9547801A4
 CONST UID '47B9547801A4'
 CONST Name 'AT_BASES'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_BASES'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_BASES'

ref; // ME_47B9547801A4 AT_BASES

: ME_47B954860121
 CONST UID '47B954860121'
 CONST Name 'AT_CLASS'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_CLASS'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_CLASS'

ref; // ME_47B954860121 AT_CLASS

: ME_47B954950212
 CONST UID '47B954950212'
 CONST Name 'AT_EDITION'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_EDITION'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_EDITION'

ref; // ME_47B954950212 AT_EDITION

: ME_47B954B0039B
 CONST UID '47B954B0039B'
 CONST Name 'AT_KW'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_KW'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_KW'

ref; // ME_47B954B0039B AT_KW

: ME_47B954C00391
 CONST UID '47B954C00391'
 CONST Name 'AT_NORM'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_NORM'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_NORM'

ref; // ME_47B954C00391 AT_NORM

: ME_47B954CF004E
 CONST UID '47B954CF004E'
 CONST Name 'AT_PREFIX'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PREFIX'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PREFIX'

ref; // ME_47B954CF004E AT_PREFIX

: ME_47B955220278
 CONST UID '47B955220278'
 CONST Name 'AT_PUBLISH_SOURCE'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PUBLISH_SOURCE'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PUBLISH_SOURCE'

ref; // ME_47B955220278 AT_PUBLISH_SOURCE

: ME_47B955300242
 CONST UID '47B955300242'
 CONST Name 'AT_REG_IN_MU_NUM'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_REG_IN_MU_NUM'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_REG_IN_MU_NUM'

ref; // ME_47B955300242 AT_REG_IN_MU_NUM

: ME_47B9553F0249
 CONST UID '47B9553F0249'
 CONST Name 'AT_REG_IN_MU'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_REG_IN_MU'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_REG_IN_MU'

ref; // ME_47B9553F0249 AT_REG_IN_MU

: ME_47B9554C0254
 CONST UID '47B9554C0254'
 CONST Name 'AT_REG_NUM'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_REG_NUM'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_REG_NUM'

ref; // ME_47B9554C0254 AT_REG_NUM

: ME_47B9556803AD
 CONST UID '47B9556803AD'
 CONST Name 'AT_SOURCE'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_SOURCE'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_SOURCE'

ref; // ME_47B9556803AD AT_SOURCE

: ME_47B955740040
 CONST UID '47B955740040'
 CONST Name 'AT_STATUS'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_STATUS'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_STATUS'

ref; // ME_47B955740040 AT_STATUS

: ME_47B955810395
 CONST UID '47B955810395'
 CONST Name 'AT_TERRITORY'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_TERRITORY'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_TERRITORY'

ref; // ME_47B955810395 AT_TERRITORY

: ME_47B955B2029B
 CONST UID '47B955B2029B'
 CONST Name 'AT_TYPE'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_TYPE'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_TYPE'

ref; // ME_47B955B2029B AT_TYPE

: ME_47B955C1011C
 CONST UID '47B955C1011C'
 CONST Name 'AT_UC'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_UC'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_UC'

ref; // ME_47B955C1011C AT_UC

: ME_47D6800E02DD
 CONST UID '47D6800E02DD'
 CONST Name 'AT_PHARM_INTERNATIONAL_NAME'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_INTERNATIONAL_NAME'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_INTERNATIONAL_NAME'

ref; // ME_47D6800E02DD AT_PHARM_INTERNATIONAL_NAME

: ME_47D680270312
 CONST UID '47D680270312'
 CONST Name 'AT_PHARM_TRADE_NAME'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_TRADE_NAME'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_TRADE_NAME'

ref; // ME_47D680270312 AT_PHARM_TRADE_NAME

: ME_47D680310218
 CONST UID '47D680310218'
 CONST Name 'AT_PHARM_CHAPTER'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_CHAPTER'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_CHAPTER'

ref; // ME_47D680310218 AT_PHARM_CHAPTER

: ME_47D680430150
 CONST UID '47D680430150'
 CONST Name 'AT_PHARM_COUNTRY'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_COUNTRY'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_COUNTRY'

ref; // ME_47D680430150 AT_PHARM_COUNTRY

: ME_47D68051030E
 CONST UID '47D68051030E'
 CONST Name 'AT_PHARM_FIRM'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_FIRM'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_FIRM'

ref; // ME_47D68051030E AT_PHARM_FIRM

: ME_47D6805D03E4
 CONST UID '47D6805D03E4'
 CONST Name 'AT_PHARM_REG_STATUS'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_REG_STATUS'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_REG_STATUS'

ref; // ME_47D6805D03E4 AT_PHARM_REG_STATUS

: ME_47D6806C00E0
 CONST UID '47D6806C00E0'
 CONST Name 'AT_PHARM_MEDICINAL_FORM'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_MEDICINAL_FORM'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_MEDICINAL_FORM'

ref; // ME_47D6806C00E0 AT_PHARM_MEDICINAL_FORM

: ME_47D680770292
 CONST UID '47D680770292'
 CONST Name 'AT_PHARM_ATC'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_ATC'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_ATC'

ref; // ME_47D680770292 AT_PHARM_ATC

: ME_47D68081033E
 CONST UID '47D68081033E'
 CONST Name 'AT_PHARM_MKB'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_MKB'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_MKB'

ref; // ME_47D68081033E AT_PHARM_MKB

: ME_47D6808B035C
 CONST UID '47D6808B035C'
 CONST Name 'AT_PHARM_GROUP'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_GROUP'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_GROUP'

ref; // ME_47D6808B035C AT_PHARM_GROUP

: ME_47D6809600FA
 CONST UID '47D6809600FA'
 CONST Name 'AT_PHARM_EFFECT'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_EFFECT'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_EFFECT'

ref; // ME_47D6809600FA AT_PHARM_EFFECT

: ME_47E3C73000D6
 CONST UID '47E3C73000D6'
 CONST Name 'AT_PHARM_NARCOTIC'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_NARCOTIC'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_NARCOTIC'

ref; // ME_47E3C73000D6 AT_PHARM_NARCOTIC

: ME_47E3C7460055
 CONST UID '47E3C7460055'
 CONST Name 'AT_PHARM_UNRECIPE'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_UNRECIPE'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_UNRECIPE'

ref; // ME_47E3C7460055 AT_PHARM_UNRECIPE

: ME_47E3C75A03BE
 CONST UID '47E3C75A03BE'
 CONST Name 'AT_PHARM_IMPORTANT'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_IMPORTANT'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_IMPORTANT'

ref; // ME_47E3C75A03BE AT_PHARM_IMPORTANT

: ME_47F5F8AC035F
 CONST UID '47F5F8AC035F'
 CONST Name 'AT_PHARM_COUNTRY_FOR_FILTER'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PHARM_COUNTRY_FOR_FILTER'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PHARM_COUNTRY_FOR_FILTER'

ref; // ME_47F5F8AC035F AT_PHARM_COUNTRY_FOR_FILTER

: ME_48352DA10007
 CONST UID '48352DA10007'
 CONST Name 'AT_VARIANTS'
 CONST Class class_Attribute
 %SUMMARY 'дерево подсказок для базового поиска' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_VARIANTS'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_VARIANTS'

ref; // ME_48352DA10007 AT_VARIANTS

: ME_4DA44E8E009F
 CONST UID '4DA44E8E009F'
 CONST Name 'AT_PREFIX_REVIEW'
 CONST Class class_Attribute
 %SUMMARY 'Дерево Видов правовой информации в КЗ ОИЗ' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PREFIX_REVIEW'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PREFIX_REVIEW'

ref; // ME_4DA44E8E009F AT_PREFIX_REVIEW

: ME_4DA82EE1006E
 CONST UID '4DA82EE1006E'
 CONST Name 'AT_PUBLISH_SOURCE_FINANCE'
 CONST Class class_Attribute
 %SUMMARY 'Ветка дерева Источник опубликования для СМИ по налогам и бухучету' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PUBLISH_SOURCE_FINANCE'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PUBLISH_SOURCE_FINANCE'

ref; // ME_4DA82EE1006E AT_PUBLISH_SOURCE_FINANCE

: ME_4DA82F57031F
 CONST UID '4DA82F57031F'
 CONST Name 'AT_PUBLISH_SOURCE_LEGAL'
 CONST Class class_Attribute
 %SUMMARY 'Ветка дерева Источник опубликования для СМИ для юриста' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PUBLISH_SOURCE_LEGAL'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PUBLISH_SOURCE_LEGAL'

ref; // ME_4DA82F57031F AT_PUBLISH_SOURCE_LEGAL

: ME_4DA82FA400F8
 CONST UID '4DA82FA400F8'
 CONST Name 'AT_PUBLISH_SOURCE_HR'
 CONST Class class_Attribute
 %SUMMARY 'Ветка дерева Источник опубликования для СМИ для кадровика' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PUBLISH_SOURCE_HR'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PUBLISH_SOURCE_HR'

ref; // ME_4DA82FA400F8 AT_PUBLISH_SOURCE_HR

: ME_4DA82FD10337
 CONST UID '4DA82FD10337'
 CONST Name 'AT_PUBLISH_SOURCE_BUDGET_ORGS'
 CONST Class class_Attribute
 %SUMMARY 'Ветка дерева Источник опубликования для СМИ для бюджетных организаций' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PUBLISH_SOURCE_BUDGET_ORGS'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PUBLISH_SOURCE_BUDGET_ORGS'

ref; // ME_4DA82FD10337 AT_PUBLISH_SOURCE_BUDGET_ORGS

: ME_4DDB5BF5038F
 CONST UID '4DDB5BF5038F'
 CONST Name 'AT_BASE_SEARCH_PANES'
 CONST Class class_Attribute
 %SUMMARY 'Вкладки Базового поиска' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_BASE_SEARCH_PANES'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_BASE_SEARCH_PANES'

ref; // ME_4DDB5BF5038F AT_BASE_SEARCH_PANES

: ME_4F17EA430011
 CONST UID '4F17EA430011'
 CONST Name 'AT_CLASS_REVIEW'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_CLASS_REVIEW'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_CLASS_REVIEW'

ref; // ME_4F17EA430011 AT_CLASS_REVIEW

: ME_4F17EA5A039A
 CONST UID '4F17EA5A039A'
 CONST Name 'AT_SOURCE_REVIEW'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_SOURCE_REVIEW'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_SOURCE_REVIEW'

ref; // ME_4F17EA5A039A AT_SOURCE_REVIEW

: ME_53A1812F01A9
 CONST UID '53A1812F01A9'
 CONST Name 'AT_PUBLISH_SOURCE_PHARM'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_PUBLISH_SOURCE_PHARM'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_PUBLISH_SOURCE_PHARM'

ref; // ME_53A1812F01A9 AT_PUBLISH_SOURCE_PHARM

: ME_55B8D2580200
 CONST UID '55B8D2580200'
 CONST Name 'AT_IMPORTANT_DOCUMENTS'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_47B953FF01A0 // TreeTags
 ;
 : Target WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST Value 'AT_IMPORTANT_DOCUMENTS'
 : ValueType WL 'ME_3DBFFE240068' '3DBFDB23006E.pas.ms.script' // string
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 'AT_IMPORTANT_DOCUMENTS'

ref; // ME_55B8D2580200 AT_IMPORTANT_DOCUMENTS

: ME_47B953FF01A0
 CONST UID '47B953FF01A0'
 CONST Name 'TreeTags'
 CONST Class class_Class
 : Stereotype st_Constants ;
 CONST Kind kind_NormalClass
 %SUMMARY 'идентификаторы деревьев' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_47B954230250 // AT_ANNO_INTEREST
 ME_47B95438007A // AT_ANNO_KIND
 ME_47B95447019A // AT_ANNO_ORG
 ME_47B9545403E6 // AT_ANNO_TAX
 ME_47B954620362 // AT_ANNO_USER
 ME_47B9547801A4 // AT_BASES
 ME_47B954860121 // AT_CLASS
 ME_47B954950212 // AT_EDITION
 ME_47B954B0039B // AT_KW
 ME_47B954C00391 // AT_NORM
 ME_47B954CF004E // AT_PREFIX
 ME_47B955220278 // AT_PUBLISH_SOURCE
 ME_47B955300242 // AT_REG_IN_MU_NUM
 ME_47B9553F0249 // AT_REG_IN_MU
 ME_47B9554C0254 // AT_REG_NUM
 ME_47B9556803AD // AT_SOURCE
 ME_47B955740040 // AT_STATUS
 ME_47B955810395 // AT_TERRITORY
 ME_47B955B2029B // AT_TYPE
 ME_47B955C1011C // AT_UC
 ME_47D6800E02DD // AT_PHARM_INTERNATIONAL_NAME
 ME_47D680270312 // AT_PHARM_TRADE_NAME
 ME_47D680310218 // AT_PHARM_CHAPTER
 ME_47D680430150 // AT_PHARM_COUNTRY
 ME_47D68051030E // AT_PHARM_FIRM
 ME_47D6805D03E4 // AT_PHARM_REG_STATUS
 ME_47D6806C00E0 // AT_PHARM_MEDICINAL_FORM
 ME_47D680770292 // AT_PHARM_ATC
 ME_47D68081033E // AT_PHARM_MKB
 ME_47D6808B035C // AT_PHARM_GROUP
 ME_47D6809600FA // AT_PHARM_EFFECT
 ME_47E3C73000D6 // AT_PHARM_NARCOTIC
 ME_47E3C7460055 // AT_PHARM_UNRECIPE
 ME_47E3C75A03BE // AT_PHARM_IMPORTANT
 ME_47F5F8AC035F // AT_PHARM_COUNTRY_FOR_FILTER
 ME_48352DA10007 // AT_VARIANTS
 ME_4DA44E8E009F // AT_PREFIX_REVIEW
 ME_4DA82EE1006E // AT_PUBLISH_SOURCE_FINANCE
 ME_4DA82F57031F // AT_PUBLISH_SOURCE_LEGAL
 ME_4DA82FA400F8 // AT_PUBLISH_SOURCE_HR
 ME_4DA82FD10337 // AT_PUBLISH_SOURCE_BUDGET_ORGS
 ME_4DDB5BF5038F // AT_BASE_SEARCH_PANES
 ME_4F17EA430011 // AT_CLASS_REVIEW
 ME_4F17EA5A039A // AT_SOURCE_REVIEW
 ME_53A1812F01A9 // AT_PUBLISH_SOURCE_PHARM
 ME_55B8D2580200 // AT_IMPORTANT_DOCUMENTS
 )
 ; // Attributes
 CONST "spell names" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'

ref; // ME_47B953FF01A0 TreeTags

FORWARD ME_47F7244B0303

: ME_47F724570292
 CONST UID '47F724570292'
 CONST Name 'country'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_47F7244B0303 // CountryFilter
 ;
 : Target ME_45EEB95901C5 // NodeBase
 ;
 CONST "pm" false

ref; // ME_47F724570292 country

: ME_47F726810399
 CONST UID '47F726810399'
 CONST Name 'country'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_45EEB95901C5 // NodeBase
 ;

ref; // ME_47F726810399 country

: ME_47F7267701D5
 CONST UID '47F7267701D5'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_47F7244B0303 // CountryFilter
 ;
 : Parameters
   Seq: ( ME_47F726810399 // country
 )
 ; // Parameters
 CONST "const_type" 'read-write'

ref; // ME_47F7267701D5 make

: ME_47F7244B0303
 CONST UID '47F7244B0303'
 CONST GUID '88574AB6-4C05-455B-8E61-ACC170D68E31'
 CONST Name 'CountryFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_47F724570292 // country
 )
 ; // Attributes
 : Operations
   Seq: ( ME_47F7267701D5 // make
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ICountryFilter'
 CONST extprop:rc:SelfName 'CountryFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_47F7244B0303 CountryFilter

FORWARD ME_483547CA00B2

: ME_483553A10236
 CONST UID '483553A10236'
 CONST Name 'leaf_count'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 %SUMMARY 'получить число листьев для фильтра' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_483547CA00B2 // CutToLeafCountFilter
 ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;
 CONST "pm" false

ref; // ME_483553A10236 leaf_count

: ME_4835491801C7
 CONST UID '4835491801C7'
 CONST Name 'leaf_count'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;

ref; // ME_4835491801C7 leaf_count

: ME_483548E800F4
 CONST UID '483548E800F4'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 %SUMMARY 'создает фильтр, оставляющий в дереве не более leaf_count листьев' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_483547CA00B2 // CutToLeafCountFilter
 ;
 : Parameters
   Seq: ( ME_4835491801C7 // leaf_count
 )
 ; // Parameters
 CONST "const_type" 'read-write'

ref; // ME_483548E800F4 make

: ME_483547CA00B2
 CONST UID '483547CA00B2'
 CONST GUID '080EAE7F-D346-4600-AA65-6CD21B8C7370'
 CONST Name 'CutToLeafCountFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'оставляет в дереве количество детей, не большее заданного' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_483553A10236 // leaf_count
 )
 ; // Attributes
 : Operations
   Seq: ( ME_483548E800F4 // make
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'ICutToLeafCountFilter'
 CONST extprop:rc:SelfName 'CutToLeafCountFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_483547CA00B2 CutToLeafCountFilter

FORWARD ME_483EC24E0308

: ME_483EC46C0208
 CONST UID '483EC46C0208'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_483EC24E0308 // NodeIdList
 ;
 : Target ME_45EEC48C01E4 // NodeId
 ;

ref; // ME_483EC46C0208 

: ME_483EC24E0308
 CONST UID '483EC24E0308'
 CONST Name 'NodeIdList'
 CONST Class class_Class
 : Stereotype st_Vector ;
 CONST Kind kind_NormalClass
 %SUMMARY 'список идентификаторов нод' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_483EC46C0208 // 
 )
 ; // Attributes
 CONST "array type" 'dynamic'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'INodeIdList'

ref; // ME_483EC24E0308 NodeIdList

: ME_487C670700D5
 CONST UID '487C670700D5'
 CONST GUID '30D760A8-3BA6-47C7-A2A7-08F504585CB8'
 CONST Name 'BlocksFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Фильтр оставляет только те блоки, которые доступны конкретному пользователю' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IBlocksFilter'
 CONST extprop:rc:SelfName 'BlocksFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_487C670700D5 BlocksFilter

: ME_4A8BACAC0281
 CONST UID '4A8BACAC0281'
 CONST GUID '9F35901C-BCED-426C-9B29-45F0EFCA688C'
 CONST Name 'InpharmFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'не показывать в дереве блоков блоки для инфарм' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IInpharmFilter'
 CONST extprop:rc:SelfName 'InpharmFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_4A8BACAC0281 InpharmFilter

FORWARD ME_4AA0FE420344

: ME_4AA103F302DE
 CONST UID '4AA103F302DE'
 CONST Name 'doc_id'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'идентификатор документа' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_lnk
 : Parent ME_4AA0FE420344 // VariantsForDocFilter
 ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;
 CONST "dll export" false
 CONST "pm" false

ref; // ME_4AA103F302DE doc_id

: ME_4AA0FEE503D0
 CONST UID '4AA0FEE503D0'
 CONST Name 'doc_id'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;

ref; // ME_4AA0FEE503D0 doc_id

: ME_4AA0FEB300BC
 CONST UID '4AA0FEB300BC'
 CONST Name 'make'
 CONST Class class_Operation
 : Stereotype st_factory::Operation ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_4AA0FE420344 // VariantsForDocFilter
 ;
 : Parameters
   Seq: ( ME_4AA0FEE503D0 // doc_id
 )
 ; // Parameters
 CONST "const_type" 'read-write'

ref; // ME_4AA0FEB300BC make

: ME_4AA0FE420344
 CONST UID '4AA0FE420344'
 CONST GUID '7E6C4CC8-5E83-4074-BC63-93286053A532'
 CONST Name 'VariantsForDocFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'получить подсказки для заданного документа' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_4AA103F302DE // doc_id
 )
 ; // Attributes
 : Operations
   Seq: ( ME_4AA0FEB300BC // make
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IVariantsForDocFilter'
 CONST extprop:rc:SelfName 'VariantsForDocFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_4AA0FE420344 VariantsForDocFilter

FORWARD ME_4D3D28610043

: ME_4D3D28840324
 CONST UID '4D3D28840324'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_4D3D28610043 // Filtered
 ;
 : Target WL 'ME_3DBFFDE101CA' '3DBFDB23006E.pas.ms.script' // unsigned long
 ;

ref; // ME_4D3D28840324 

: ME_4D3D28610043
 CONST UID '4D3D28610043'
 CONST Name 'Filtered'
 CONST Class class_Class
 : Stereotype st_Vector ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Attributes
   Seq: ( ME_4D3D28840324 // 
 )
 ; // Attributes
 CONST "array type" 'dynamic'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IFiltered'

ref; // ME_4D3D28610043 Filtered

FORWARD ME_45EEBB5002CE

: ME_45F6A08A0000
 CONST UID '45F6A08A0000'
 CONST Name 'place'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEBB5002CE // ContextFilter
 ;
 : Target ME_45EEBBE501D4 // ContextPlace
 ;
 CONST "pm" false

ref; // ME_45F6A08A0000 place

: ME_45F6A0FB00EA
 CONST UID '45F6A0FB00EA'
 CONST Name 'order'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEBB5002CE // ContextFilter
 ;
 : Target ME_45EEC3260222 // FindOrder
 ;
 CONST "pm" false

ref; // ME_45F6A0FB00EA order

: ME_45F6A12200FA
 CONST UID '45F6A12200FA'
 CONST Name 'area'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEBB5002CE // ContextFilter
 ;
 : Target ME_45EECCFE0251 // SearchArea
 ;
 CONST "pm" false

ref; // ME_45F6A12200FA area

: ME_45F6A1BE034B
 CONST UID '45F6A1BE034B'
 CONST Name 'context'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 CONST LinkType lt_agr
 : Parent ME_45EEBB5002CE // ContextFilter
 ;
 : Target WL 'ME_431841610361' '4423F94903C8.pas.ms.script' // String
 ;
 CONST "pm" false

ref; // ME_45F6A1BE034B context

: ME_46E662C8033B
 CONST UID '46E662C8033B'
 CONST Name 'clone'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBB5002CE // ContextFilter
 ;
 : Target ME_45EEBB5002CE // ContextFilter
 ;

ref; // ME_46E662C8033B clone

: ME_4D3E9E95037B
 CONST UID '4D3E9E95037B'
 CONST Name 'list'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_4D399FCD0271 // ListForFiltering
 ;

ref; // ME_4D3E9E95037B list

: ME_4D3E9E7E01ED
 CONST UID '4D3E9E7E01ED'
 CONST Name 'filtrate'
 CONST Class class_Operation
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_45EEBB5002CE // ContextFilter
 ;
 : Target ME_4D3D28610043 // Filtered
 ;
 : Parameters
   Seq: ( ME_4D3E9E95037B // list
 )
 ; // Parameters

ref; // ME_4D3E9E7E01ED filtrate

: ME_45EEBB5002CE
 CONST UID '45EEBB5002CE'
 CONST GUID 'FCB4593F-FD35-46E5-87BB-7112D61FEC5A'
 CONST Name 'ContextFilter'
 CONST Class class_Class
 : Stereotype st_Interface ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Класс контекстных фильтров' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_457450470167 // DynamicTree
 ;
 : Inherits
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 )
 ; // Inherits
 : Attributes
   Seq: ( ME_45F6A08A0000 // place
 ME_45F6A0FB00EA // order
 ME_45F6A12200FA // area
 ME_45F6A1BE034B // context
 )
 ; // Attributes
 : Operations
   Seq: ( ME_46E662C8033B // clone
 ME_4D3E9E7E01ED // filtrate
 )
 ; // Operations
 CONST "single impl" false
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:TypeName 'IContextFilter'
 CONST extprop:rc:SelfName 'ContextFilter'
 CONST extprop:rc:isAcceptableForScripts true

ref; // ME_45EEBB5002CE ContextFilter

: ME_457450470167
 CONST UID '457450470167'
 CONST Name 'DynamicTree'
 CONST Class class_Category
 : Stereotype st_Interfaces ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent WL 'ME_456EA3D2031C' '456EA3D2031C.pas.ms.script' // GblAdapterLib
 ;
 : Children
   Seq: ( ME_45EEBB9B01F4 // FilterForTree
 ME_45EEBD050271 // FilterList
 ME_45EEBBE501D4 // ContextPlace
 ME_45EEC48C01F0 // IndexInParent
 ME_45EEC3260222 // FindOrder
 ME_45EEC8680109 // NodeIndexPath
 ME_45EEC2A902BF // FindPosition
 ME_45EEC375006D // NodeType
 ME_45EEC48C01E4 // NodeId
 ME_45EECCFE0251 // SearchArea
 ME_45EEC2C0005D // FindPositionList
 ME_45EEC48C01EC // VisibleIndex
 ME_45EEC7EA01C5 // LayerId
 ME_45EEC80F0128 // LayerIdList
 ME_45EEC54700C1 // SortFilter
 ME_45EEC54700CE // TrimFilter
 ME_45EEC54700D2 // LayerFilter
 ME_45EEC282029F // FindIterator
 ME_475E4ACC0117 // NotifierID
 ME_466530AD038A // EVDGeneratorStyle
 ME_45EECBE20280 // NoEntity
 ME_45EECBE20290 // NotFound
 ME_45EECC11034B // PropertyID
 ME_45EECD5D02EE // SettingEntity
 ME_45EECAA0007D // NodesClipboard
 ME_475424C500AA // FakeFacetForFactory
 ME_45EEC8E102FD // NodeNotifier
 ME_4D399FCD0271 // ListForFiltering
 ME_45EEB95901C5 // NodeBase
 ME_45EEC8A6033C // NodeIterator
 ME_45EEC90D00FA // NodePosition
 ME_45EEBA2C02BF // CatalogBase
 ME_47A1A4FB0255 // TrimLeafFilter
 ME_47F7244B0303 // CountryFilter
 ME_483547CA00B2 // CutToLeafCountFilter
 ME_483EC24E0308 // NodeIdList
 ME_487C670700D5 // BlocksFilter
 ME_4A8BACAC0281 // InpharmFilter
 ME_4AA0FE420344 // VariantsForDocFilter
 ME_4D3D28610043 // Filtered
 ME_45EEBB5002CE // ContextFilter
 )
 ; // Children
 : Constants
   Seq: ( ME_45EEC3DE0232 // FlagsConst
 ME_45EECADF0232 // NodeTypeConst
 ME_47B953FF01A0 // TreeTags
 )
 ; // Constants
 : Depends
   Seq: ( WL 'ME_4423F94903C8' '4423F94903C8.pas.ms.script' // IO
 WL 'ME_456EA56002BF' '456EA56002BF.pas.ms.script' // BaseTypes
 WL 'ME_45F66C67007D' '45F66C67007D.pas.ms.script' // SearchDefines
 WL 'ME_45F66E6A02BF' '45F66E6A02BF.pas.ms.script' // DynamicTreeDefines
 )
 ; // Depends
 CONST "no hands" false
 CONST cpp:Path 'garant6x\implementation\Garant\GblAdapterLib\DynamicTree\DynamicTree.cpp'
 CONST cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dfm:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST dll.cpp:Path 'garant6x\implementation\Garant\GblAdapterLib\DynamicTree\DynamicTree_tie.cpp'
 CONST dll.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST dll.h:Path 'garant6x\implementation\Garant\GblAdapterLib\DynamicTree\DynamicTree_tie.h'
 CONST dll.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.cpp:Path 'garant6x\implementation\Garant\GblAdapterLib\DynamicTree\DynamicTreeFactories.cpp'
 CONST fctr.cpp:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST fctr.h:Path 'garant6x\implementation\Garant\GblAdapterLib\DynamicTree\DynamicTreeFactories.h'
 CONST fctr.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST h:Path 'garant6x\implementation\Garant\GblAdapterLib\DynamicTree\DynamicTree.h'
 CONST h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST i.h:PathOnly '\garant6x\implementation\Garant\GblAdapterLib\DynamicTree'
 CONST intf.pas:Path 'garant6x\implementation\Garant\tie\Garant\GblAdapterLib\DynamicTreeUnit.pas'
 CONST intf.pas:PathOnly '\garant6x\implementation\Garant\tie\Garant\GblAdapterLib'
 CONST mpc:PathOnly '\garant6x\implementation\Garant\project'
 CONST mpc2:PathOnly '\garant6x\implementation\Garant\project'
 CONST pas:Path 'garant6x\implementation\Garant\GblAdapterLib\DynamicTreeUnit.pas'
 CONST pas:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST pas.script:Path 'shared\models\NewSchool\Scripts\457450470167.pas.ms.script'
 CONST pas.script:PathOnly '\shared\models\NewSchool\Scripts'
 CONST pas.script.runner:Path 'shared\models\NewSchool\Scripts\457450470167.pas.ms.script.runner'
 CONST pas.script.runner:PathOnly '\shared\models\NewSchool\Scripts'
 CONST rc:PathOnly '\garant6x\implementation\Garant\GblAdapterLib'
 CONST s.ini:PathOnly '\garant6x\implementation\Garant\project'
 CONST s.reg:PathOnly '\garant6x\implementation\Garant\project'
 CONST vi.rc:PathOnly '\garant6x\implementation\Garant'
 CONST vi.rch:PathOnly '\garant6x\implementation\Garant'
 CONST extprop:pas:UnitName 'DynamicTreeUnit'

ref; // ME_457450470167 DynamicTree
