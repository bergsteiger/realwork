// Const 476C0699010D Interfaces Category

INCLUDE 'ElementsRTTI.ms.dict'

FORWARD ME_476C0699010D

FORWARD ME_476C06F90095

: ME_476C0708001F
 CONST UID '476C0708001F'
 CONST Name 'Child'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C0708001F Child

: ME_476C070E01BA
 CONST UID '476C070E01BA'
 CONST Name 'Atom'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C070E01BA Atom

: ME_476C07130344
 CONST UID '476C07130344'
 CONST Name 'Long'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C07130344 Long

: ME_476C071803B6
 CONST UID '476C071803B6'
 CONST Name 'String32'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C071803B6 String32

: ME_476C071E0130
 CONST UID '476C071E0130'
 CONST Name 'Component'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C071E0130 Component

: ME_476C072301B8
 CONST UID '476C072301B8'
 CONST Name 'SInt8'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C072301B8 SInt8

: ME_476C072801DD
 CONST UID '476C072801DD'
 CONST Name 'UInt8'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C072801DD UInt8

: ME_476C072D018B
 CONST UID '476C072D018B'
 CONST Name 'SInt16'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C072D018B SInt16

: ME_476C0733030E
 CONST UID '476C0733030E'
 CONST Name 'UInt16'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C0733030E UInt16

: ME_476C07390273
 CONST UID '476C07390273'
 CONST Name 'SInt32'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C07390273 SInt32

: ME_476C073E0246
 CONST UID '476C073E0246'
 CONST Name 'UInt32'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C073E0246 UInt32

: ME_476C074300C9
 CONST UID '476C074300C9'
 CONST Name 'SInt64'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C074300C9 SInt64

: ME_476C074803A5
 CONST UID '476C074803A5'
 CONST Name 'UInt64'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C074803A5 UInt64

: ME_476C074D03D5
 CONST UID '476C074D03D5'
 CONST Name 'String8'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C074D03D5 String8

: ME_476C075300F8
 CONST UID '476C075300F8'
 CONST Name 'String16'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C075300F8 String16

: ME_476C075902CA
 CONST UID '476C075902CA'
 CONST Name 'Stream'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C075902CA Stream

: ME_476C075E0059
 CONST UID '476C075E0059'
 CONST Name 'Transparent'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C075E0059 Transparent

: ME_476C0764010E
 CONST UID '476C0764010E'
 CONST Name 'CodePage'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C0764010E CodePage

: ME_476C076A0095
 CONST UID '476C076A0095'
 CONST Name 'FontName'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C076A0095 FontName

: ME_476C076E03DB
 CONST UID '476C076E03DB'
 CONST Name 'FontID'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C076E03DB FontID

: ME_476C077701EE
 CONST UID '476C077701EE'
 CONST Name 'ShortCodePage'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C06F90095 // TevTypeID
 ;

ref; // ME_476C077701EE ShortCodePage

: ME_476C06F90095
 CONST UID '476C06F90095'
 CONST Name 'TevTypeID'
 CONST Class class_Class
 : Stereotype st_Enum ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Тип данных тега.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent HWL ME_476C0699010D // Const
 ;
 : Attributes
   Seq: ( HWL ME_476C0708001F // Child
 HWL ME_476C070E01BA // Atom
 HWL ME_476C07130344 // Long
 HWL ME_476C071803B6 // String32
 HWL ME_476C071E0130 // Component
 HWL ME_476C072301B8 // SInt8
 HWL ME_476C072801DD // UInt8
 HWL ME_476C072D018B // SInt16
 HWL ME_476C0733030E // UInt16
 HWL ME_476C07390273 // SInt32
 HWL ME_476C073E0246 // UInt32
 HWL ME_476C074300C9 // SInt64
 HWL ME_476C074803A5 // UInt64
 HWL ME_476C074D03D5 // String8
 HWL ME_476C075300F8 // String16
 HWL ME_476C075902CA // Stream
 HWL ME_476C075E0059 // Transparent
 HWL ME_476C0764010E // CodePage
 HWL ME_476C076A0095 // FontName
 HWL ME_476C076E03DB // FontID
 HWL ME_476C077701EE // ShortCodePage
 )
 ; // Attributes
 CONST "children prefix" 'id'
 CONST "elements prefix" 'ev'
 CONST extprop:rc:isAcceptableForScripts true
 CONST extprop:pas:ElementPrefixBase 'ev'
 CONST extprop:pas:ElementPrefix 'ev_id'

ref; // ME_476C06F90095 TevTypeID

FORWARD ME_476C0A0C02AE

: ME_476C0A1E0090
 CONST UID '476C0A1E0090'
 CONST Name 'Fill'
 CONST Class class_Attribute
 %SUMMARY 'заполнитель выравнивания.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value 0
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 0

ref; // ME_476C0A1E0090 Fill

: ME_476C0A2E039A
 CONST UID '476C0A2E039A'
 CONST Name 'Finish'
 CONST Class class_Attribute
 %SUMMARY 'закрывающая скобка тега.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value 65535
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 65535

ref; // ME_476C0A2E039A Finish

: ME_476C0A3E022A
 CONST UID '476C0A3E022A'
 CONST Name 'Key1'
 CONST Class class_Attribute
 %SUMMARY 'признак завершения бинарных данных.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value '0x6525'
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value '$6525'

ref; // ME_476C0A3E022A Key1

: ME_476C0A4D0049
 CONST UID '476C0A4D0049'
 CONST Name 'Key2'
 CONST Class class_Attribute
 %SUMMARY 'признак завершения бинарных данных.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value '0x4525'
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value '$4525'

ref; // ME_476C0A4D0049 Key2

: ME_476C0A5A02BB
 CONST UID '476C0A5A02BB'
 CONST Name 'Key3'
 CONST Class class_Attribute
 %SUMMARY 'признак начала бинарных данных.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value '0x6225'
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value '$6225'

ref; // ME_476C0A5A02BB Key3

: ME_476C0A680136
 CONST UID '476C0A680136'
 CONST Name 'Key4'
 CONST Class class_Attribute
 %SUMMARY 'признак начала бинарных данных.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value '0x4225'
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value '$4225'

ref; // ME_476C0A680136 Key4

: ME_476C0A770251
 CONST UID '476C0A770251'
 CONST Name 'Mask'
 CONST Class class_Attribute
 %SUMMARY 'маска распределения памяти.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 2'
 CONST extprop:pas:Value 'unpack_idFinish - 2'

ref; // ME_476C0A770251 Mask

: ME_476C0A8400C9
 CONST UID '476C0A8400C9'
 CONST Name 'Children'
 CONST Class class_Attribute
 %SUMMARY 'признак начала списка дочерних тегов.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 3'
 CONST extprop:pas:Value 'unpack_idFinish - 3'

ref; // ME_476C0A8400C9 Children

: ME_476C0A900103
 CONST UID '476C0A900103'
 CONST Name 'Rollback'
 CONST Class class_Attribute
 %SUMMARY 'признак отката тега.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 4'
 CONST extprop:pas:Value 'unpack_idFinish - 4'

ref; // ME_476C0A900103 Rollback

: ME_476C0A9D02A9
 CONST UID '476C0A9D02A9'
 CONST Name 'MaskEx'
 CONST Class class_Attribute
 %SUMMARY 'расширенная маска распределения памяти.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 5'
 CONST extprop:pas:Value 'unpack_idFinish - 5'

ref; // ME_476C0A9D02A9 MaskEx

: ME_476C0AAD039C
 CONST UID '476C0AAD039C'
 CONST Name 'Link'
 CONST Class class_Attribute
 %SUMMARY 'ссылка на объект в другом IStorage.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 6'
 CONST extprop:pas:Value 'unpack_idFinish - 6'

ref; // ME_476C0AAD039C Link

: ME_476C0ABC0018
 CONST UID '476C0ABC0018'
 CONST Name 'DefaultChild'
 CONST Class class_Attribute
 %SUMMARY 'дочерний тег с типом по умолчанию.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0A0C02AE // UnpackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 7'
 CONST extprop:pas:Value 'unpack_idFinish - 7'

ref; // ME_476C0ABC0018 DefaultChild

: ME_476C0A0C02AE
 CONST UID '476C0A0C02AE'
 CONST Name 'UnpackedEVD'
 CONST Class class_Class
 : Stereotype st_Constants ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent HWL ME_476C0699010D // Const
 ;
 : Attributes
   Seq: ( HWL ME_476C0A1E0090 // Fill
 HWL ME_476C0A2E039A // Finish
 HWL ME_476C0A3E022A // Key1
 HWL ME_476C0A4D0049 // Key2
 HWL ME_476C0A5A02BB // Key3
 HWL ME_476C0A680136 // Key4
 HWL ME_476C0A770251 // Mask
 HWL ME_476C0A8400C9 // Children
 HWL ME_476C0A900103 // Rollback
 HWL ME_476C0A9D02A9 // MaskEx
 HWL ME_476C0AAD039C // Link
 HWL ME_476C0ABC0018 // DefaultChild
 )
 ; // Attributes
 CONST "children prefix" 'unpack_id'
 CONST "spell names" false
 CONST extprop:pas:ElementPrefix 'unpack_id'

ref; // ME_476C0A0C02AE UnpackedEVD

FORWARD ME_476C0ACE0067

: ME_476C0AD903E3
 CONST UID '476C0AD903E3'
 CONST Name 'Fill'
 CONST Class class_Attribute
 %SUMMARY 'заполнитель выравнивания.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 0
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 0

ref; // ME_476C0AD903E3 Fill

: ME_476C0AE70279
 CONST UID '476C0AE70279'
 CONST Name 'Finish'
 CONST Class class_Attribute
 %SUMMARY 'закрывающая скобка тега.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 255
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 255

ref; // ME_476C0AE70279 Finish

: ME_476C0AF40037
 CONST UID '476C0AF40037'
 CONST Name 'Percent'
 CONST Class class_Attribute
 %SUMMARY 'символ %' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 37
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 37

ref; // ME_476C0AF40037 Percent

: ME_476C0AFD0207
 CONST UID '476C0AFD0207'
 CONST Name 'SmallE'
 CONST Class class_Attribute
 %SUMMARY 'символ e' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 101
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 101

ref; // ME_476C0AFD0207 SmallE

: ME_476C0B0601E4
 CONST UID '476C0B0601E4'
 CONST Name 'CapitalE'
 CONST Class class_Attribute
 %SUMMARY 'символ E' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 69
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 69

ref; // ME_476C0B0601E4 CapitalE

: ME_476C0B0D02C3
 CONST UID '476C0B0D02C3'
 CONST Name 'SmallB'
 CONST Class class_Attribute
 %SUMMARY 'символ b' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 98
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 98

ref; // ME_476C0B0D02C3 SmallB

: ME_476C0B150188
 CONST UID '476C0B150188'
 CONST Name 'CapitalB'
 CONST Class class_Attribute
 %SUMMARY 'символ B' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 66
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 66

ref; // ME_476C0B150188 CapitalB

: ME_476C0B1C0336
 CONST UID '476C0B1C0336'
 CONST Name 'SmallP'
 CONST Class class_Attribute
 %SUMMARY 'символ p' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 112
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 112

ref; // ME_476C0B1C0336 SmallP

: ME_476C0B2301A9
 CONST UID '476C0B2301A9'
 CONST Name 'CapitalP'
 CONST Class class_Attribute
 %SUMMARY 'символ P' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 80
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST extprop:pas:Value 80

ref; // ME_476C0B2301A9 CapitalP

: ME_476C0B2C021A
 CONST UID '476C0B2C021A'
 CONST Name 'Children'
 CONST Class class_Attribute
 %SUMMARY 'признак начала списка дочерних тегов.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 1'
 CONST extprop:pas:Value 'evd_pack_idFinish - 1'

ref; // ME_476C0B2C021A Children

: ME_476C0B3B00FE
 CONST UID '476C0B3B00FE'
 CONST Name 'Rollback'
 CONST Class class_Attribute
 %SUMMARY 'признак отката тега.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 2'
 CONST extprop:pas:Value 'evd_pack_idFinish - 2'

ref; // ME_476C0B3B00FE Rollback

: ME_476C0B48015C
 CONST UID '476C0B48015C'
 CONST Name 'Link'
 CONST Class class_Attribute
 %SUMMARY 'ссылка на объект в другом IStorage.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 3'
 CONST extprop:pas:Value 'evd_pack_idFinish - 3'

ref; // ME_476C0B48015C Link

: ME_476C0B540239
 CONST UID '476C0B540239'
 CONST Name 'DefaultChild'
 CONST Class class_Attribute
 %SUMMARY 'дочерний тег с типом по умолчанию.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST Value 'Finish'
 : ValueType HWL ME_476C0ACE0067 // PackedEVD
 ;
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false
 CONST "suffix expr" '- 4'
 CONST extprop:pas:Value 'evd_pack_idFinish - 4'

ref; // ME_476C0B540239 DefaultChild

: ME_476C0ACE0067
 CONST UID '476C0ACE0067'
 CONST Name 'PackedEVD'
 CONST Class class_Class
 : Stereotype st_Constants ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent HWL ME_476C0699010D // Const
 ;
 : Attributes
   Seq: ( HWL ME_476C0AD903E3 // Fill
 HWL ME_476C0AE70279 // Finish
 HWL ME_476C0AF40037 // Percent
 HWL ME_476C0AFD0207 // SmallE
 HWL ME_476C0B0601E4 // CapitalE
 HWL ME_476C0B0D02C3 // SmallB
 HWL ME_476C0B150188 // CapitalB
 HWL ME_476C0B1C0336 // SmallP
 HWL ME_476C0B2301A9 // CapitalP
 HWL ME_476C0B2C021A // Children
 HWL ME_476C0B3B00FE // Rollback
 HWL ME_476C0B48015C // Link
 HWL ME_476C0B540239 // DefaultChild
 )
 ; // Attributes
 CONST "children prefix" 'pack_id'
 CONST "elements prefix" 'evd'
 CONST "spell names" false
 CONST extprop:pas:ElementPrefixBase 'evd'
 CONST extprop:pas:ElementPrefix 'evd_pack_id'

ref; // ME_476C0ACE0067 PackedEVD

: ME_476C0699010D
 CONST UID '476C0699010D'
 CONST Name 'Const'
 CONST Class class_Category
 : Stereotype st_Interfaces ;
 %SUMMARY 'Константы физического представления формата evd.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent WL 'ME_467A8734039C' '467A8734039C.pas.ms.script' // EVD
 ;
 : Children
   Seq: ( HWL ME_476C06F90095 // TevTypeID
 )
 ; // Children
 : Constants
   Seq: ( HWL ME_476C0A0C02AE // UnpackedEVD
 HWL ME_476C0ACE0067 // PackedEVD
 )
 ; // Constants
 : Depends
   Seq: ( WL 'ME_3DBFDB23006E' '3DBFDB23006E.pas.ms.script' // Primitives
 )
 ; // Depends
 CONST "UseNewGen" true
 CONST "author" 'Люлин А.В.'
 CONST "elements prefix" '<none>'
 CONST "no hands" true
 CONST "started" '09.11.1999 15:57'
 CONST cpp:PathOnly '\common\components\rtl\Garant\EVD\Const'
 CONST h:Path 'common\components\rtl\Garant\EVD\Const\Const.h'
 CONST h:PathOnly '\common\components\rtl\Garant\EVD\Const'
 CONST intf.pas:Path 'common\components\rtl\Garant\EVD\evdConst.pas'
 CONST extprop:pas:UnitName 'evdConst'

ref; // ME_476C0699010D Const
