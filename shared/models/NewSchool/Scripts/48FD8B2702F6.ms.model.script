// Tree 48FD8B2702F6 Unit Category

INCLUDE 'ElementsRTTI.ms.dict'

%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6
%%Inner ME_48FD8B2702F6

ME ME_48FD8B2702F6
 MEPROP UID '48FD8B2702F6'
 MEPROP Name 'Tree'
 MEPROP IsSubRoot true
 MEPROP Class class_Category
 MELINK Stereotype st_Unit ;
 %SUMMARY 'Различные реализации деревьев' ;
 MEPROP Visibility PublicAccess
 MEPROP Abstraction at_regular
 MELINK Parent WL? 'ME_4677FF4B0036' // Data
 ;
 MELIST Children
   Seq: ( WL? 'ME_48FD8B76020F' // nsNodeNotifierPrim
 WL? 'ME_48FD8F78038B' // nsNodeNotifierBase
 WL? 'ME_48FDA9D500E4' // nsNodeNotifierImplementation
 WL? 'ME_48FDB24300E8' // nsNodeNotifier
 WL? 'ME_48FDB9BD0325' // nsRootManagerPrim
 WL? 'ME_48FDC52D0006' // nsRootManager
 WL? 'ME_46835AE40039' // TnsRootManager
 WL? 'ME_4682732A02F9' // TnsINodeWrapBase
 WL? 'ME_46835B4001A4' // TnsTreeStruct
 WL? 'ME_48FF5126011C' // TnsAdapterFilters
 WL? 'ME_48FF52A1036E' // nsContextFilterParamsConst
 WL? 'ME_46835BD201D6' // TnsFilterableTreeStruct
 WL? 'ME_4909AEB00352' // TnsINodeWrap
 WL? 'ME_468361010204' // TnsDataResetTreeStruct
 WL? 'ME_49089895038A' // TIl3ContextFilterParamsNotifierPtrList
 WL? 'ME_4908930C0268' // TnsContextFilterParams
 WL? 'ME_468275200341' // TnsINodeRootWrap
 WL? 'ME_468275C903C6' // TnsINodeOneLevelRootWrap
 WL? 'ME_468275E600B1' // TnsINodeOneLevelWrap
 WL? 'ME_4683692B0105' // TnsOneLevelTreeStruct
 WL? 'ME_4912DBE30091' // nsTreeUtils
 WL? 'ME_493D4C8D0388' // bsFrozenNode
 )
 ; // Children
 MELIST Depends
   Seq: ( WL? 'ME_3DBFDB23006E' // Primitives
 WL? 'ME_4423F94903C8' // IO
 WL? 'ME_456EA56002BF' // BaseTypes
 WL? 'ME_456F02A50196' // BaseTreeSupport
 WL? 'ME_457450470167' // DynamicTree
 WL? 'ME_45EEA48F011F' // Filters
 WL? 'ME_45EEAA800226' // UnderControl
 WL? 'ME_45EEAA96039C' // Security
 WL? 'ME_4677FBA70343' // l3Interfaces
 WL? 'ME_4678193C009C' // l3Types
 WL? 'ME_467823B7002C' // afwInterfaces
 WL? 'ME_467C0CAA02AB' // l3InternalInterfaces
 WL? 'ME_4682595B0268' // l3TreeInterfaces
 WL? 'ME_476BE98C01B8' // l3Chars
 WL? 'ME_476BF10A0280' // l3Tree_TLB
 WL? 'ME_47750CE700D0' // afwFacade
 WL? 'ME_47913B47006E' // l3CoreObjects
 WL? 'ME_47BB24D30205' // Стандартные примеси
 WL? 'ME_47D0290B016D' // l3Utils
 WL? 'ME_47D0E1500033' // Implementation
 WL? 'ME_47E246C90144' // l3Trees
 WL? 'ME_47EA0C8D0351' // afwConsts
 WL? 'ME_47EA4BB502F9' // afwMixIns
 WL? 'ME_47ECAAF901F8' // bsInterfaces
 WL? 'ME_47F2170002B2' // nsTypes
 WL? 'ME_48F747EC0073' // Common
 WL? 'ME_4912DD020283' // eeInterfaces
 WL? 'ME_4912E16B01B4' // Engine Core
 WL? 'ME_4AB0C3C60310' // Sys
 WL? 'ME_54B90AC6014B' // StringUtils
 )
 ; // Depends
 MESTRINGLIST DiagramsNames
   Seq: ( 'Main' 'Uses' )
 ; // DiagramsNames
 UP "path prefix" '/Tree'
 UP intf.pas:PathOnly '\garant6x\implementation\Garant\GbaNemesis\Data\Tree'

ENDME // ME_48FD8B2702F6 Tree
