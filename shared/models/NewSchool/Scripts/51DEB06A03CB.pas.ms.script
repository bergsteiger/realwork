// STLLike 51DEB06A03CB Unit Category

INCLUDE 'ElementsRTTI.ms.dict'

FORWARD ME_51DEB06A03CB

: ME_51DEB1B30171
 CONST UID '51DEB1B30171'
 CONST Name 'ItemType'
 CONST Class class_Class
 : Stereotype st_ImpurityParamType ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_abstract
 : Parent ME_51DEB06A03CB // STLLike
 ;
 CONST extprop:pas:TypeName '_ItemType_'

ref; // ME_51DEB1B30171 ItemType

FORWARD ME_51DEB07E03E4

: ME_51DEB77702EC
 CONST UID '51DEB77702EC'
 CONST Name 'PItemType'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB07E03E4 // List
 ;
 : Inherits
   @ ( ME_51DEB1B30171 // ItemType
 ) .SequenceCode.It
 ; // Inherits
 CONST "isPointer" true

ref; // ME_51DEB77702EC PItemType

FORWARD ME_51DEB7990159

: ME_51DEB7B40343
 CONST UID '51DEB7B40343'
 CONST Name 'cItemSize'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_51DEB7990159 // Sizes
 ;
 CONST Value 'SizeOf(_ItemType_)'
 CONST "AutoInc" false
 CONST "forced type" 'none'
 CONST "is define" false

ref; // ME_51DEB7B40343 cItemSize

: ME_51DEB7990159
 CONST UID '51DEB7990159'
 CONST Name 'Sizes'
 CONST Class class_Class
 : Stereotype st_Constants ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB07E03E4 // List
 ;
 : Attributes
   @ ( ME_51DEB7B40343 // cItemSize
 ) .SequenceCode.It
 ; // Attributes
 CONST "spell names" false

ref; // ME_51DEB7990159 Sizes

: ME_51DEB8CB0127
 CONST UID '51DEB8CB0127'
 CONST Name 'IndexType'
 CONST Class class_Class
 : Stereotype st_Typedef ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB07E03E4 // List
 ;
 : Inherits
   @ ( WL 'ME_46A606AC03B2' '4AB0C3C60310.pas.ms.script' // Integer
 ) .SequenceCode.It
 ; // Inherits

ref; // ME_51DEB8CB0127 IndexType

: ME_51DEB0F20281
 CONST UID '51DEB0F20281'
 CONST Name 'f_Data'
 CONST Class class_Attribute
 %SUMMARY 'Собственно место хранения данных' ;
 CONST Visibility PrivateAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target WL 'ME_51DD567A01B5' '51DAD7EA02D0.pas.ms.script' // Tl3PtrLoc
 ;

ref; // ME_51DEB0F20281 f_Data

: ME_51DEB1BB0350
 CONST UID '51DEB1BB0350'
 CONST Name 'ItemType'
 CONST Class class_Attribute
 : Stereotype st_impurity_param::Attribute ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51DEB1BB0350 ItemType

: ME_51DEB1ED0017
 CONST UID '51DEB1ED0017'
 CONST Name 'Count'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 %SUMMARY 'Количество элементов списка' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 CONST LinkType lt_agr
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target ME_51DEB8CB0127 // IndexType
 ;
 CONST "pm" true
 CONST "reads field" true

ref; // ME_51DEB1ED0017 Count

: ME_51DEB20E0130
 CONST UID '51DEB20E0130'
 CONST Name 'Capacity'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 %SUMMARY 'Мощность списка' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 CONST LinkType lt_agr
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target ME_51DEB8CB0127 // IndexType
 ;
 CONST "pm" true

ref; // ME_51DEB20E0130 Capacity

FORWARD ME_51DECA1202C5

: ME_51DECA350154
 CONST UID '51DECA350154'
 CONST Name 'anIndex'
 CONST Class class_Attribute
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 CONST LinkType lt_agr
 : Parent ME_51DECA1202C5 // Items
 ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51DECA350154 anIndex

: ME_51DECA1202C5
 CONST UID '51DECA1202C5'
 CONST Name 'Items'
 CONST Class class_Attribute
 : Stereotype st_property::Attribute ;
 %SUMMARY 'Элементы списка.' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 CONST LinkType lt_agr
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target ME_51DEB1B30171 // ItemType
 ;
 : Attributes
   @ ( ME_51DECA350154 // anIndex
 ) .SequenceCode.It
 ; // Attributes
 CONST "is default" true
 CONST "pm" true

ref; // ME_51DECA1202C5 Items

: ME_51E7FDAC023D
 CONST UID '51E7FDAC023D'
 CONST Name 'Empty'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Список пустой' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 CONST LinkType lt_agr
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target WL 'ME_46A603BB0391' '4AB0C3C60310.pas.ms.script' // Boolean
 ;
 CONST "pm" true

ref; // ME_51E7FDAC023D Empty

: ME_51E8070603AC
 CONST UID '51E8070603AC'
 CONST Name 'First'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Первый элемент списка' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 CONST LinkType lt_agr
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target ME_51DEB1B30171 // ItemType
 ;
 CONST "pm" true

ref; // ME_51E8070603AC First

: ME_51E8074101B5
 CONST UID '51E8074101B5'
 CONST Name 'Last'
 CONST Class class_Attribute
 : Stereotype st_readonly::Attribute ;
 %SUMMARY 'Последний элемент списка' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 CONST LinkType lt_agr
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target ME_51DEB1B30171 // ItemType
 ;
 CONST "pm" true

ref; // ME_51E8074101B5 Last

: ME_E5C8F5D2D7BC
 CONST UID 'E5C8F5D2D7BC'
 CONST Name 'f_Count'
 CONST Class class_Attribute
 %SUMMARY 'Поле для свойства Count' ;
 CONST Visibility PrivateAccess
 CONST Abstraction at_regular
 CONST LinkType lt_ref
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_E5C8F5D2D7BC f_Count

FORWARD ME_51DEB8770017

: ME_51DEB8930015
 CONST UID '51DEB8930015'
 CONST Name 'aNewCapacity'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51DEB8930015 aNewCapacity

: ME_51DEB88500A7
 CONST UID '51DEB88500A7'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB8770017 // ReAllocList
 ;
 : Parameters
   @ ( ME_51DEB8930015 // aNewCapacity
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51DEB88500A7 DoIt

: ME_51DEB8770017
 CONST UID '51DEB8770017'
 CONST Name 'ReAllocList'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51DEB88500A7 // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51DEB8770017 ReAllocList

FORWARD ME_51DEB95E00BD

: ME_51DEB999034B
 CONST UID '51DEB999034B'
 CONST Name 'anIndex'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51DEB999034B anIndex

: ME_51DEB97B0238
 CONST UID '51DEB97B0238'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB95E00BD // CheckIndex
 ;
 : Parameters
   @ ( ME_51DEB999034B // anIndex
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51DEB97B0238 DoIt

: ME_51DEB95E00BD
 CONST UID '51DEB95E00BD'
 CONST Name 'CheckIndex'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'проверяет валидность индекса и поднимает исключение, если он неправильный' ;
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51DEB97B0238 // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51DEB95E00BD CheckIndex

FORWARD ME_51DEBE2D008A

: ME_51DEBE4F0272
 CONST UID '51DEBE4F0272'
 CONST Name 'anIndex'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51DEBE4F0272 anIndex

: ME_51DEBE3C008D
 CONST UID '51DEBE3C008D'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEBE2D008A // ItemSlot
 ;
 : Target ME_51DEB77702EC // PItemType
 ;
 : Parameters
   @ ( ME_51DEBE4F0272 // anIndex
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51DEBE3C008D DoIt

: ME_51DEBE2D008A
 CONST UID '51DEBE2D008A'
 CONST Name 'ItemSlot'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51DEBE3C008D // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51DEBE2D008A ItemSlot

FORWARD ME_51DEC11F0058

: ME_51DEC18501A0
 CONST UID '51DEC18501A0'
 CONST Name 'aTargetSize'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51DEC18501A0 aTargetSize

: ME_51DEC16501B0
 CONST UID '51DEC16501B0'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEC11F0058 // ExpandSize
 ;
 : Target WL 'ME_46A618AF0053' '4AB0C3C60310.pas.ms.script' // Cardinal
 ;
 : Parameters
   @ ( ME_51DEC18501A0 // aTargetSize
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51DEC16501B0 DoIt

: ME_51DEC11F0058
 CONST UID '51DEC11F0058'
 CONST Name 'ExpandSize'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51DEC16501B0 // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51DEC11F0058 ExpandSize

FORWARD ME_51DECAA8035E

: ME_51DECAD90253
 CONST UID '51DECAD90253'
 CONST Name 'anIndex'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51DECAD90253 anIndex

: ME_51DECAD7026F
 CONST UID '51DECAD7026F'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DECAA8035E // CheckSetItem
 ;
 : Parameters
   @ ( ME_51DECAD90253 // anIndex
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51DECAD7026F DoIt

: ME_51DECAA8035E
 CONST UID '51DECAA8035E'
 CONST Name 'CheckSetItem'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Проверяет валидность индекса при вставке' ;
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51DECAD7026F // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51DECAA8035E CheckSetItem

FORWARD ME_51E6A2660270

: ME_51E6A28B03C0
 CONST UID '51E6A28B03C0'
 CONST Name 'anIndex'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51E6A28B03C0 anIndex

: ME_51E6A280028E
 CONST UID '51E6A280028E'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51E6A2660270 // Delete
 ;
 : Parameters
   @ ( ME_51E6A28B03C0 // anIndex
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51E6A280028E DoIt

: ME_51E6A2660270
 CONST UID '51E6A2660270'
 CONST Name 'Delete'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'удалить элемент с индексом anIndex' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51E6A280028E // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51E6A2660270 Delete

FORWARD ME_51E6A2AA02E4

: ME_51E6A300039F
 CONST UID '51E6A300039F'
 CONST Name 'anIndex'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51E6A300039F anIndex

: ME_51E6A30003BF
 CONST UID '51E6A30003BF'
 CONST Name 'anItem'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51E6A30003BF anItem

: ME_51E6A2CA0230
 CONST UID '51E6A2CA0230'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51E6A2AA02E4 // DirectInsert
 ;
 : Parameters
   @ ( ME_51E6A300039F // anIndex
 ME_51E6A30003BF // anItem
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51E6A2CA0230 DoIt

: ME_51E6A2AA02E4
 CONST UID '51E6A2AA02E4'
 CONST Name 'DirectInsert'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Непосредственная вставка элемента. Без проверки валидности индекса' ;
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51E6A2CA0230 // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51E6A2AA02E4 DirectInsert

FORWARD ME_51E6A3140016

: ME_51E6A329013F
 CONST UID '51E6A329013F'
 CONST Name 'anIndex'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51E6A329013F anIndex

: ME_51E6A329015A
 CONST UID '51E6A329015A'
 CONST Name 'anItem'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51E6A329015A anItem

: ME_51E6A31F0310
 CONST UID '51E6A31F0310'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51E6A3140016 // Insert
 ;
 : Parameters
   @ ( ME_51E6A329013F // anIndex
 ME_51E6A329015A // anItem
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51E6A31F0310 DoIt

: ME_51E6A3140016
 CONST UID '51E6A3140016'
 CONST Name 'Insert'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Вставка элемента' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51E6A31F0310 // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51E6A3140016 Insert

FORWARD ME_51E6A8190252

: ME_51E6A83D0117
 CONST UID '51E6A83D0117'
 CONST Name 'aDst'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51E6A83D0117 aDst

: ME_51E6A83D013C
 CONST UID '51E6A83D013C'
 CONST Name 'aSrc'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB8CB0127 // IndexType
 ;

ref; // ME_51E6A83D013C aSrc

: ME_51E6A83D0158
 CONST UID '51E6A83D0158'
 CONST Name 'aSize'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target WL 'ME_46A618AF0053' '4AB0C3C60310.pas.ms.script' // Cardinal
 ;

ref; // ME_51E6A83D0158 aSize

: ME_51E6A821031E
 CONST UID '51E6A821031E'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51E6A8190252 // MoveItems
 ;
 : Parameters
   @ ( ME_51E6A83D0117 // aDst
 ME_51E6A83D013C // aSrc
 ME_51E6A83D0158 // aSize
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51E6A821031E DoIt

: ME_51E6A8190252
 CONST UID '51E6A8190252'
 CONST Name 'MoveItems'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51E6A821031E // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51E6A8190252 MoveItems

FORWARD ME_51E80192036C

: ME_51E801B2036E
 CONST UID '51E801B2036E'
 CONST Name 'anItem'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51E801B2036E anItem

: ME_51E801A800E9
 CONST UID '51E801A800E9'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51E80192036C // Add
 ;
 : Parameters
   @ ( ME_51E801B2036E // anItem
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51E801A800E9 DoIt

: ME_51E80192036C
 CONST UID '51E80192036C'
 CONST Name 'Add'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Добавляет элемент списка' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51E801A800E9 // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51E80192036C Add

FORWARD ME_51E801D503C5

: ME_51E8020603A5
 CONST UID '51E8020603A5'
 CONST Name 'anItem'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51E8020603A5 anItem

: ME_51E801F402F6
 CONST UID '51E801F402F6'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51E801D503C5 // IndexOf
 ;
 : Target ME_51DEB8CB0127 // IndexType
 ;
 : Parameters
   @ ( ME_51E8020603A5 // anItem
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51E801F402F6 DoIt

: ME_51E801D503C5
 CONST UID '51E801D503C5'
 CONST Name 'IndexOf'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Возвращает индекс элемента списка или -1, если элемента в списке нет' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51E801F402F6 // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51E801D503C5 IndexOf

FORWARD ME_51E802290167

: ME_51E8024B01FD
 CONST UID '51E8024B01FD'
 CONST Name 'anIndex'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51E8024B01FD anIndex

: ME_51E80242014A
 CONST UID '51E80242014A'
 CONST Name 'DoIt'
 CONST Class class_Operation
 CONST Visibility PrivateAccess
 CONST Abstraction at_final
 : Parent ME_51E802290167 // Remove
 ;
 : Parameters
   @ ( ME_51E8024B01FD // anIndex
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51E80242014A DoIt

: ME_51E802290167
 CONST UID '51E802290167'
 CONST Name 'Remove'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Удаляет элемент из списка' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_51E80242014A // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51E802290167 Remove

FORWARD ME_51E8026302B4

: ME_143FADC47A8C
 CONST UID '143FADC47A8C'
 CONST Name 'DoIt'
 CONST Class class_Operation
 %SUMMARY 'Сигнатура метода Clear' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51E8026302B4 // Clear
 ;

ref; // ME_143FADC47A8C DoIt

: ME_51E8026302B4
 CONST UID '51E8026302B4'
 CONST Name 'Clear'
 CONST Class class_Class
 : Stereotype st_method ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Очищает список' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51DEB07E03E4 // List
 ;
 : Operations
   @ ( ME_143FADC47A8C // DoIt
 ) .SequenceCode.It
 ; // Operations

ref; // ME_51E8026302B4 Clear

: ME_51DECB6B02C4
 CONST UID '51DECB6B02C4'
 CONST Name 'thePlace'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51DECB6B02C4 thePlace

: ME_51DEC20B01D7
 CONST UID '51DEC20B01D7'
 CONST Name 'FreeItem'
 CONST Class class_Operation
 : Stereotype st_inline::Operation ;
 CONST Visibility ProtectedAccess
 CONST Abstraction at_abstract
 : Parent ME_51DEB07E03E4 // List
 ;
 : Parameters
   @ ( ME_51DECB6B02C4 // thePlace
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51DEC20B01D7 FreeItem

: ME_51DECB6500DA
 CONST UID '51DECB6500DA'
 CONST Name 'thePlace'
 CONST Class class_Parameter
 : Stereotype st_inout ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51DECB6500DA thePlace

: ME_51DECB65011A
 CONST UID '51DECB65011A'
 CONST Name 'aFrom'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51DECB65011A aFrom

: ME_51DECB440087
 CONST UID '51DECB440087'
 CONST Name 'FillItem'
 CONST Class class_Operation
 : Stereotype st_inline::Operation ;
 CONST Visibility ProtectedAccess
 CONST Abstraction at_abstract
 : Parent ME_51DEB07E03E4 // List
 ;
 : Parameters
   @ ( ME_51DECB6500DA // thePlace
 ME_51DECB65011A // aFrom
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51DECB440087 FillItem

: ME_51DECB9C0161
 CONST UID '51DECB9C0161'
 CONST Name 'A'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51DECB9C0161 A

: ME_51DECB9C01A7
 CONST UID '51DECB9C01A7'
 CONST Name 'B'
 CONST Class class_Parameter
 : Stereotype st_in ;
 : Target ME_51DEB1B30171 // ItemType
 ;

ref; // ME_51DECB9C01A7 B

: ME_51DECB820261
 CONST UID '51DECB820261'
 CONST Name 'IsSame'
 CONST Class class_Operation
 : Stereotype st_inline::Operation ;
 CONST Visibility ProtectedAccess
 CONST Abstraction at_abstract
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target WL 'ME_46A603BB0391' '4AB0C3C60310.pas.ms.script' // Boolean
 ;
 : Parameters
   @ ( ME_51DECB9C0161 // A
 ME_51DECB9C01A7 // B
 ) .SequenceCode.It
 ; // Parameters

ref; // ME_51DECB820261 IsSame

: ME_51DEB8280035
 CONST UID '51DEB8280035'
 CONST Class class_Dependency
 : Stereotype st_uses::Dependency ;
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target WL 'ME_479F1E0803A0' '479F1DEA0057.pas.ms.script' // Errors
 ;

ref; // ME_51DEB8280035 

: ME_51DEC5570076
 CONST UID '51DEC5570076'
 CONST Class class_Dependency
 : Stereotype st_uses::Dependency ;
 : Parent ME_51DEB07E03E4 // List
 ;
 : Target WL 'ME_51DAD88F0359' '51DAD7EA02D0.pas.ms.script' // PMem
 ;

ref; // ME_51DEC5570076 

: ME_479731C50290_ME_51DEB07E03E4
 CONST UID '479731C50290'
 CONST Name 'Cleanup'
 : Original WL 'ME_479731C50290' '51612EBB02F5.pas.ms.script' // Cleanup
 ;
 : Implementor ME_51DEB07E03E4 // List
 ;
ref; // ME_479731C50290_ME_51DEB07E03E4 Cleanup

: ME_51DEB07E03E4
 CONST UID '51DEB07E03E4'
 CONST Name 'List'
 CONST Class class_Class
 : Stereotype st_Impurity ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Абстрактный список значений' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB06A03CB // STLLike
 ;
 : Implements
   @ ( WL 'ME_51DEB13301ED' '51612EBB02F5.pas.ms.script' // MRefCounted
 ) .SequenceCode.It
 ; // Implements
 : Attributes
   @ ( ME_51DEB0F20281 // f_Data
 ME_51DEB1BB0350 // ItemType
 ME_51DEB1ED0017 // Count
 ME_51DEB20E0130 // Capacity
 ME_51DECA1202C5 // Items
 ME_51E7FDAC023D // Empty
 ME_51E8070603AC // First
 ME_51E8074101B5 // Last
 ME_E5C8F5D2D7BC // f_Count
 ) .SequenceCode.It
 ; // Attributes
 : Operations
   @ ( ME_51DEB8770017 // ReAllocList
 ME_51DEB95E00BD // CheckIndex
 ME_51DEBE2D008A // ItemSlot
 ME_51DEC11F0058 // ExpandSize
 ME_51DECAA8035E // CheckSetItem
 ME_51E6A2660270 // Delete
 ME_51E6A2AA02E4 // DirectInsert
 ME_51E6A3140016 // Insert
 ME_51E6A8190252 // MoveItems
 ME_51E80192036C // Add
 ME_51E801D503C5 // IndexOf
 ME_51E802290167 // Remove
 ME_51E8026302B4 // Clear
 ME_51DEC20B01D7 // FreeItem
 ME_51DECB440087 // FillItem
 ME_51DECB820261 // IsSame
 ) .SequenceCode.It
 ; // Operations
 : Overridden
   @ ( ME_479731C50290_ME_51DEB07E03E4 // Cleanup
 ) .SequenceCode.It
 ; // Overridden
 : Children
   @ ( ME_51DEB77702EC // PItemType
 ME_51DEB8CB0127 // IndexType
 ) .SequenceCode.It
 ; // Children
 : Constants
   @ ( ME_51DEB7990159 // Sizes
 ) .SequenceCode.It
 ; // Constants
 : Dependencies
   @ ( ME_51DEB8280035 // 
 ME_51DEC5570076 // 
 ) .SequenceCode.It
 ; // Dependencies
 CONST "needs InstanceR" false
 CONST "needs script" 'undefined'
 CONST "no hands" false
 CONST "register in scripts" 'undefined'
 : Generators
 @ (
 gen_intf.pas
 ) .SequenceCode.It
 ; // Generators
 CONST intf.pas:Path 'common\components\SandBox\List.imp.pas'
 CONST extprop:pas:TypeName '_List_'

ref; // ME_51DEB07E03E4 List

FORWARD ME_51DED02E0163

: ME_51DED062003D
 CONST UID '51DED062003D'
 CONST Name 'l3Items_IsUnrefcounted'
 CONST Class class_Class
 : Stereotype st_Define ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51DED02E0163 // UnrefcountedListPrim
 ;

ref; // ME_51DED062003D l3Items_IsUnrefcounted

: ME_51DECB820261_ME_51DED02E0163
 CONST UID '51DECB820261'
 CONST Name 'IsSame'
 : Original ME_51DECB820261 // IsSame
 ;
 : Implementor ME_51DED02E0163 // UnrefcountedListPrim
 ;
ref; // ME_51DECB820261_ME_51DED02E0163 IsSame

: ME_51DED02E0163
 CONST UID '51DED02E0163'
 CONST Name 'UnrefcountedListPrim'
 CONST Class class_Class
 : Stereotype st_Impurity ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Список значений без какого то бы ни было подсчёта ссылок' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB06A03CB // STLLike
 ;
 : Inherits
   @ ( ME_51DEB07E03E4 // List
 ) .SequenceCode.It
 ; // Inherits
 : Implemented
   @ ( ME_51DECB820261_ME_51DED02E0163 // IsSame
 ) .SequenceCode.It
 ; // Implemented
 : Children
   @ ( ME_51DED062003D // l3Items_IsUnrefcounted
 ) .SequenceCode.It
 ; // Children
 CONST "needs InstanceR" 'undefined'
 CONST "needs script" 'undefined'
 CONST "no hands" false
 CONST "register in scripts" 'undefined'
 : Generators
 @ (
 gen_intf.pas
 ) .SequenceCode.It
 ; // Generators
 CONST intf.pas:Path 'common\components\SandBox\UnrefcountedListPrim.imp.pas'
 CONST extprop:pas:TypeName '_UnrefcountedListPrim_'

ref; // ME_51DED02E0163 UnrefcountedListPrim

FORWARD ME_51DED48301D9

: ME_51DED49F0220
 CONST UID '51DED49F0220'
 CONST Name 'l3Items_IsAtomic'
 CONST Class class_Class
 : Stereotype st_Define ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_final
 : Parent ME_51DED48301D9 // AtomicList
 ;

ref; // ME_51DED49F0220 l3Items_IsAtomic

: ME_51DEC20B01D7_ME_51DED48301D9
 CONST UID '51DEC20B01D7'
 CONST Name 'FreeItem'
 : Original ME_51DEC20B01D7 // FreeItem
 ;
 : Implementor ME_51DED48301D9 // AtomicList
 ;
ref; // ME_51DEC20B01D7_ME_51DED48301D9 FreeItem

: ME_51DECB440087_ME_51DED48301D9
 CONST UID '51DECB440087'
 CONST Name 'FillItem'
 : Original ME_51DECB440087 // FillItem
 ;
 : Implementor ME_51DED48301D9 // AtomicList
 ;
ref; // ME_51DECB440087_ME_51DED48301D9 FillItem

: ME_51DED48301D9
 CONST UID '51DED48301D9'
 CONST Name 'AtomicList'
 CONST Class class_Class
 : Stereotype st_Impurity ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Список атомарных значений' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB06A03CB // STLLike
 ;
 : Inherits
   @ ( ME_51DED02E0163 // UnrefcountedListPrim
 ) .SequenceCode.It
 ; // Inherits
 : Implemented
   @ ( ME_51DEC20B01D7_ME_51DED48301D9 // FreeItem
 ME_51DECB440087_ME_51DED48301D9 // FillItem
 ) .SequenceCode.It
 ; // Implemented
 : Children
   @ ( ME_51DED49F0220 // l3Items_IsAtomic
 ) .SequenceCode.It
 ; // Children
 CONST "needs InstanceR" 'undefined'
 CONST "needs script" 'undefined'
 CONST "no hands" false
 CONST "register in scripts" 'undefined'
 : Generators
 @ (
 gen_intf.pas
 ) .SequenceCode.It
 ; // Generators
 CONST intf.pas:Path 'common\components\SandBox\AtomicList.imp.pas'
 CONST extprop:pas:TypeName '_AtomicList_'

ref; // ME_51DED48301D9 AtomicList

FORWARD ME_51E81D74001D

: ME_51DECB820261_ME_51E81D74001D
 CONST UID '51DECB820261'
 CONST Name 'IsSame'
 : Original ME_51DECB820261 // IsSame
 ;
 : Implementor ME_51E81D74001D // InterfaceList
 ;
ref; // ME_51DECB820261_ME_51E81D74001D IsSame

: ME_51E81D74001D
 CONST UID '51E81D74001D'
 CONST Name 'InterfaceList'
 CONST Class class_Class
 : Stereotype st_Impurity ;
 CONST Kind kind_NormalClass
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB06A03CB // STLLike
 ;
 : Inherits
   @ ( ME_51DEB07E03E4 // List
 ) .SequenceCode.It
 ; // Inherits
 : Implemented
   @ ( ME_51DECB820261_ME_51E81D74001D // IsSame
 ) .SequenceCode.It
 ; // Implemented
 CONST "needs InstanceR" 'undefined'
 CONST "needs script" 'undefined'
 CONST "no hands" false
 CONST "register in scripts" 'undefined'
 : Generators
 @ (
 gen_intf.pas
 ) .SequenceCode.It
 ; // Generators
 CONST intf.pas:Path 'common\components\SandBox\InterfaceList.imp.pas'
 CONST extprop:pas:TypeName '_InterfaceList_'

ref; // ME_51E81D74001D InterfaceList

FORWARD ME_51E809AD001D

: ME_51DEC20B01D7_ME_51E809AD001D
 CONST UID '51DEC20B01D7'
 CONST Name 'FreeItem'
 : Original ME_51DEC20B01D7 // FreeItem
 ;
 : Implementor ME_51E809AD001D // InterfaceRefList
 ;
ref; // ME_51DEC20B01D7_ME_51E809AD001D FreeItem

: ME_51DECB440087_ME_51E809AD001D
 CONST UID '51DECB440087'
 CONST Name 'FillItem'
 : Original ME_51DECB440087 // FillItem
 ;
 : Implementor ME_51E809AD001D // InterfaceRefList
 ;
ref; // ME_51DECB440087_ME_51E809AD001D FillItem

: ME_51E809AD001D
 CONST UID '51E809AD001D'
 CONST Name 'InterfaceRefList'
 CONST Class class_Class
 : Stereotype st_Impurity ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Список Ссылок на интерфейсы. Владеет своими элементами' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB06A03CB // STLLike
 ;
 : Inherits
   @ ( ME_51E81D74001D // InterfaceList
 ) .SequenceCode.It
 ; // Inherits
 : Implemented
   @ ( ME_51DEC20B01D7_ME_51E809AD001D // FreeItem
 ME_51DECB440087_ME_51E809AD001D // FillItem
 ) .SequenceCode.It
 ; // Implemented
 CONST "needs InstanceR" 'undefined'
 CONST "needs script" 'undefined'
 CONST "no hands" false
 CONST "register in scripts" 'undefined'
 : Generators
 @ (
 gen_intf.pas
 ) .SequenceCode.It
 ; // Generators
 CONST intf.pas:Path 'common\components\SandBox\InterfaceRefList.imp.pas'
 CONST extprop:pas:TypeName '_InterfaceRefList_'

ref; // ME_51E809AD001D InterfaceRefList

FORWARD ME_51E8098001DC

: ME_51DEC20B01D7_ME_51E8098001DC
 CONST UID '51DEC20B01D7'
 CONST Name 'FreeItem'
 : Original ME_51DEC20B01D7 // FreeItem
 ;
 : Implementor ME_51E8098001DC // InterfacePtrList
 ;
ref; // ME_51DEC20B01D7_ME_51E8098001DC FreeItem

: ME_51DECB440087_ME_51E8098001DC
 CONST UID '51DECB440087'
 CONST Name 'FillItem'
 : Original ME_51DECB440087 // FillItem
 ;
 : Implementor ME_51E8098001DC // InterfacePtrList
 ;
ref; // ME_51DECB440087_ME_51E8098001DC FillItem

: ME_51E8098001DC
 CONST UID '51E8098001DC'
 CONST Name 'InterfacePtrList'
 CONST Class class_Class
 : Stereotype st_Impurity ;
 CONST Kind kind_NormalClass
 %SUMMARY 'Список УКАЗАТЕЛЕЙ на интерфейсы. Не владеет своими элементами' ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent ME_51DEB06A03CB // STLLike
 ;
 : Inherits
   @ ( ME_51E81D74001D // InterfaceList
 ) .SequenceCode.It
 ; // Inherits
 : Implemented
   @ ( ME_51DEC20B01D7_ME_51E8098001DC // FreeItem
 ME_51DECB440087_ME_51E8098001DC // FillItem
 ) .SequenceCode.It
 ; // Implemented
 CONST "needs InstanceR" 'undefined'
 CONST "needs script" 'undefined'
 CONST "no hands" false
 CONST "register in scripts" 'undefined'
 : Generators
 @ (
 gen_intf.pas
 ) .SequenceCode.It
 ; // Generators
 CONST intf.pas:Path 'common\components\SandBox\InterfacePtrList.imp.pas'
 CONST extprop:pas:TypeName '_InterfacePtrList_'

ref; // ME_51E8098001DC InterfacePtrList

: ME_51DEB06A03CB
 CONST UID '51DEB06A03CB'
 CONST Name 'STLLike'
 CONST Class class_Category
 : Stereotype st_Unit ;
 CONST Visibility PublicAccess
 CONST Abstraction at_regular
 : Parent WL 'ME_4861FFCA02CE' '4861FFCA02CE.pas.ms.script' // SandBox
 ;
 : Children
   @ ( ME_51DEB1B30171 // ItemType
 ME_51DEB07E03E4 // List
 ME_51DED02E0163 // UnrefcountedListPrim
 ME_51DED48301D9 // AtomicList
 ME_51E81D74001D // InterfaceList
 ME_51E809AD001D // InterfaceRefList
 ME_51E8098001DC // InterfacePtrList
 ) .SequenceCode.It
 ; // Children
 : Depends
   @ ( WL 'ME_479F1DEA0057' '479F1DEA0057.pas.ms.script' // RTLConsts
 WL 'ME_4AB0997B00A2' '4AB0997B00A2.pas.ms.script' // Common
 WL 'ME_4AB0C3C60310' '4AB0C3C60310.pas.ms.script' // Sys
 WL 'ME_51612EBB02F5' '51612EBB02F5.pas.ms.script' // Ref Counting
 WL 'ME_51DAD7EA02D0' '51DAD7EA02D0.pas.ms.script' // MemoryUtils
 ) .SequenceCode.It
 ; // Depends
 : Generators
 @ (
 gen_pas.script
 gen_pas.script.runner
 ) .SequenceCode.It
 ; // Generators
 CONST pas.script:Path 'shared\models\NewSchool\Scripts\51DEB06A03CB.pas.ms.script'
 CONST pas.script.runner:Path 'shared\models\NewSchool\Scripts\51DEB06A03CB.pas.ms.script.runner'

ref; // ME_51DEB06A03CB STLLike
