UNIT CollectControls.ms.dict

USES
 string.ms.dict
;

USES
 arrays.ms.dict
;

USES
 CollectElements.ms.dict
;

USES
 SaveVarAndDo.ms.dict
;

USES
 ElementsRTTI.ms.dict
;

USES
 Chars.ms.dict
;

USES
 Out.ms.dict
;

USES
 Log.ms.dict
;

PROCEDURE CollectControls
 
 CONST cControls 'none|TeeButton|TeeCheckBox|TeeEditor|TeeEditorWithoutOperations|TeeMemoWithEditOperations|TeeRadioButton|TeeTreeView|TElPopupButton|TevMemo|TevQueryCardEditor|TnscComboBox|TnscComboBoxWithPwdChar|TnscComboBoxWithReadOnly|TnscComboLabel|TnscContextFilter|TnscEdit|TnscEditor|TnscHideField|TnscLister|TnscSimpleEditor|TnscTreeComboWithHistoryAndOperations|TnscTreeView|TnscTreeViewHotTruck|TnscTreeViewWithAdapterDragDrop|TvtButton|TvtCheckBox|TvtColorBox|TvtComboBox|TvtComboBoxQS|TvtDblClickDateEdit|TvtFocusLabel|TvtGradientWaitbar|TvtGroupBox|TvtImageLabel|TvtLabel|TvtLister|TvtPanel|TvtProportionalPanel|TvtRadioButton|TvtScrollBar|TvtSizeablePanel|TvtSplitter|TvtStyledLabel|TvtStyledFocusLabel|TBevel|TBitBtn|TComboBox|TImage|TImageEnView|TPaintBox|TRadioButton|TScrollBox|TProgressBar|TnscNavigator'
 CONST cComponents 'none|TevTextSource|TImageEnIO|TImageEnProc|TnscTextSource|TTimer'
 
 VAR l_Names
 [ cControls '|' string:Split:for> NOP ]
 .join> [ cComponents '|' string:Split:for> NOP ]
 >>> l_Names
 
 BOOLEAN FUNCTION NameInFile
   STRING IN aDict
  false >>> Result
  l_Names .for> (
    IN aName
   if ( [ 'MEPROP Name ' cQuote aName cQuote ] strings:Cat aDict FindInFile ) then
   begin
    true >>> Result
    BREAK-ITERATOR
   end // ( aName aDict FindInFile )
  ) // l_Names .for>
 ; // NameInFile
 
 'Controls.ms.dict' .ProcessTmpOut: (
  [ 'INCLUDE ' cQuote 'ElementsRTTI.ms.dict' cQuote ] .Out
  OutLn
  'AllModelControls' .OutWord: (
   OutSeq: (
    ProcessAllDictionaries: (
      STRING IN aDict
     if (
         'MEPROP Class class_Class' aDict FindInFile
         AND (
          ( 'MELINK Stereotype st_SimpleClass ;' aDict FindInFile )
          OR ( 'MELINK Stereotype st_GuiControl ;' aDict FindInFile )
         ) // AND
         AND ( aDict NameInFile )
        ) then 
     begin
      Log: ( [ 'Collect Controls: ' aDict ] strings:Cat )
      aDict .ProcessDictionary: (
        IN aWord
        IN aDictFileName
       if ( aWord .IsStereotype st_SimpleClass ) then
       begin
        if ( aWord .Name .InArray: l_Names ) then
        begin
         aWord aDictFileName .OutWordLink
        end // ( aWord .Name .InArray: l_Names )
       end // ( aWord .IsStereotype st_SimpleClass )
      ) // aDict .ProcessDictionary:
     end
    ) // ProcessAllDictionaries:
   ) // OutSeq:
  ) // 'AllModelControls' .OutWord:
 ) // 'Controls.ms.dict' .ProcessTmpOut:
 
; // CollectControls