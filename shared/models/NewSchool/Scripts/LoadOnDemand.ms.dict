UNIT LoadOnDemand.ms.dict

USES
 Log.ms.dict
;

: UIDS_LIST
;
// - список загруженных элементов

initialization (
 @ UIDS_LIST DisableForHelp
)

USES
 Chars.ms.dict
;

TtfwWord FUNCTION LoadWord
  STRING IN aWordName
  STRING IN aDictName
  
 VAR l_VAR 
 
 @ UIDS_LIST %% aWordName >>> l_VAR
 if ( l_VAR IsNil ! ) then
 begin
  l_VAR DO >>> Result
 end // l_VAR IsNil !
 else
 begin
  aWordName false @ UIDS_LIST pop:NewWordDefinitor:CheckVar >>> l_VAR
  
  STRING VAR l_Code 
  BOOLEAN VAR l_WasException
  false >>> l_WasException
  
  aDictName Ctx:ResolveIncludedFilePath >>> aDictName
  if ( aDictName sysutils:FileExists ) then
  begin
   [ 'INCLUDE ' cQuote aDictName cQuote ' @ ' aWordName ] strings:Cat >>> l_Code 
   TRY
    l_Code script:CompileStringAndProcess DO
   EXCEPT
    current:exception:Message .
    [ 'Возможно элемент ' aWordName ' : ' aDictName ' удалён' ] strings:Cat .
    true >>> l_WasException
    nil >>> Result
   END
  end // ( aDictName sysutils:FileExists )
  else
  begin
   nil >>> Result
  end // ( aDictName sysutils:FileExists )
  
  if ( l_WasException ! ) then
  begin
   TRY
    >>> Result
    Result pop:Word:Name aWordName == ?ASSURE [ 'Вернулось неверное слово ' Result pop:Word:Name ' вместо ' aWordName ]
   EXCEPT
    current:exception:Message .
    [ 'Возможно элемент ' aWordName ' : ' aDictName ' удалён' ] strings:Cat .
    nil >>> Result
   END 
  end // l_WasException !
  l_VAR ^:= Result
 end // l_VAR IsNil !
; // LoadWord 

WordAlias LW LoadWord

USES
 CompileTimeVar.ms.dict
;

CompileTime-VAR g_TransformWord nil

PROCEDURE TransformWord
  TtfwWord IN aWord
 if ( g_TransformWord IsNil ! ) then
 begin
  aWord g_TransformWord DO
 end // ( g_TransformWord IsNil ! )
; // TransformWord

TtfwWord FUNCTION WordLink
  Literal IN aWordName
  Literal IN aDictName
 aWordName |N aDictName |N LoadWord 
 >>> Result
 Result TransformWord
; // WordLink

TtfwWord FUNCTION HardWordLink
  ^ IN aWord
 //aWord DO
 //aWord |^@
 aWord |^
 >>> Result
 Result TransformWord
; // HardWordLink

WordAlias WL WordLink

WordAlias HWL HardWordLink