UNIT arrays.ms.dict

USES
 to.ms.dict
 filter.ms.dict
 map.ms.dict
 reverted.ms.dict
;

EXPORTS
 * 

USES
 macro.ms.dict
;

WordAlias array:AddTo >>>[]
WordAlias .AddToArray: >>>[]

PROCEDURE array:?AddTo
  IN aValue
  ^ IN anArray

 ARRAY VAR l_Array
 anArray DO >>> l_Array

 aValue l_Array array:Has ! ? (
  aValue array:AddTo l_Array
 ) // aValue l_Array array:Has ! ?
; // array:?AddTo

FUNCTION .AddToArray?:
  IN aValue
  ^ IN anArray

 false >>> Result
 ARRAY VAR l_Array
 anArray DO >>> l_Array

 aValue l_Array array:Has ! ? (
  aValue array:AddTo l_Array
  true >>> Result
 ) // aValue l_Array array:Has ! ?
; // .AddToArray?:

USES
 axiom_push.ms.dict
;

MACRO .InArray:
  ^ IN anArray
 anArray CompileValue
 axiom:PushSymbol array:Has
; // .InArray:

MACRO .NotInArray:
  ^ IN anArray
 anArray CompileValue
 axiom:PushSymbol array:Has
 axiom:PushSymbol !
; // .NotInArray:

MACRO .StringInArray:
  ^ IN anArray
 anArray CompileValue
 axiom:PushSymbol SWAP
 axiom:PushSymbol array:HasString
; // .StringInArray:

MACRO .StringNotInArray:
  ^ IN anArray
 anArray CompileValue
 axiom:PushSymbol SWAP
 axiom:PushSymbol array:HasString
 axiom:PushSymbol !
; // .StringNotInArray:

MACRO .TextInArray:
  ^ IN anArray
 anArray CompileValue
 axiom:PushSymbol SWAP
 axiom:PushSymbol array:HasText
; // .TextInArray:

MACRO .TextNotInArray:
  ^ IN anArray
 anArray CompileValue
 axiom:PushSymbol SWAP
 axiom:PushSymbol array:HasText
 axiom:PushSymbol !
; // .TextNotInArray:
