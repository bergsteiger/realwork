USES
 'W:\shared\models\NewSchool\Templates\TemplatesCore.tpl.script'
;

STRING CALLER operator %SU
 Result := ( Caller ->0 |U )
;

OBJECT CALLER operator %S%P
 Result := ( Caller ->0 %P )
;

OBJECT CALLER operator %S%P%P
 Result := ( Caller ->0 %P %P )
;

OBJECT CALLER operator %S%P%P%P
 Result := ( Caller ->0 %P %P %P )
;

OBJECT CALLER operator %S%P%P%P%P
 Result := ( Caller ->0 %P %P %P %P )
;

OBJECT CALLER operator %S%P%P%P%P%P
 Result := ( Caller ->0 %P %P %P %P %P )
;

OBJECT FUNCTION DoMember OBJECT IN anUIDVar
 VAR l_Element
 anUIDVar DO =: l_Element
 // - берём ссылку на элемент модели
 if ( l_Element IsVoid ) then
 // - пропускаем невалидные ссылки
 (
  Result := nil
 )
 else
 (
  Result := l_Element
 ) 
; // DoMember

BOOLEAN FUNCTION FilterMember OBJECT IN aMember
 Result := ( aMember NotValid ! )
; // FilterMember
 
ARRAY FUNCTION ELEMLIST STRING IN aListName IN %S
 if ( %S NotValid ) then
  ( Result := [ ] )
 else
  (
   VAR l_List
   l_List := ( %S %% aListName )
   
   if ( l_List NotValid ) then
    ( Result := [ ] )
   else 
//    ( Result := ( [ l_List DO ] ) )
    ( Result := ( @ FilterMember ( @ DoMember ( l_List CodeIterator ) MAP ) FILTER ) ) 
  )
; // ELEMLIST

ARRAY FUNCTION %R IN %S
 Result := ( '%R' %S ELEMLIST )
;

ARRAY FUNCTION %G IN %S
 Result := ( '%G' %S ELEMLIST )
;

ARRAY FUNCTION %C IN %S
 Result := ( %S %% '%C' NativeMembersIterator )
;

ARRAY CALLER operator %S%C
 Result := ( Caller ->0 %C )
;

ARRAY FUNCTION %Ops IN %S
 Result := ( %S %% '%Ops' NativeMembersIterator )
;

ARRAY CALLER operator %S%Ops
 Result := ( Caller ->0 %Ops )
;

ARRAY FUNCTION %Attrs IN %S
 Result := ( %S %% '%Attrs' NativeMembersIterator )
;

ARRAY CALLER operator %S%Attrs
 Result := ( Caller ->0 %Attrs )
;

ARRAY FUNCTION %Lnks IN %S
 Result := ( %S %% '%Lnks' NativeMembersIterator )
;

ARRAY CALLER operator %S%Lnks
 Result := ( Caller ->0 %Lnks )
;

ARRAY CALLER operator %S%G
 Result := ( Caller ->0 %G )
;

ARRAY CALLER operator %S%R
 Result := ( Caller ->0 %R )
;

OBJECT CALLER operator %S%T
 Result := ( Caller ->0 %T )
;

ARRAY FUNCTION %A
 Result := ( @ FilterMember ( @ DoMember ( @ UIDS_LIST NativeMembersIterator ) MAP ) FILTER )
; // %A

EXPORTS Templates\TemplatesCore.tpl.script