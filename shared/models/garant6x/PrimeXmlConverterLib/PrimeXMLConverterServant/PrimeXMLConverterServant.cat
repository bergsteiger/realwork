
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.061205"
    charSet    	204)

(object Class_Category "PrimeXMLConverterServant"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (h)"
	    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeConverter_i.h::46C04A850128")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (fctr.h)"
	    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeConverter_i_factory.h::46C04A850128")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (fctr.cpp)"
	    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeConverter_i_factory.cpp::46C04A850128")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (cpp)"
	    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeConverter_i.cpp::46C04A850128")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (h)"
	    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeXMLConverterServant.h")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"WikiPageID (wiki)"
	    value      	(value Text 
|Nemesis,key:NMS,guid:442BEDF00290/Home/ÃÓ‰ÂÎ¸ ÔÓÂÍÚ‡ "garant6x"/PrimeXmlConverterLib/PrimeXMLConverterServant|46C04A3A037A
	    )))
    quid       	"46C04A3A037A"
    documentation 	"Ô‡ÍÂÚ Â‡ÎËÁ‡ˆËË"
    stereotype 	"Impl"
    visible_categories 	(list visibility_relationship_list
	(object Visibility_Relationship
	    quid       	"46C04A6801A5"
	    supplier   	"Logical View::garant6x::PrimeXmlConverterLib::PrimeXMLConverterIface"
	    quidu      	"46C046E00271")
	(object Visibility_Relationship
	    quid       	"46C08496036B"
	    supplier   	"Logical View::shared::GCL::os"
	    quidu      	"4503DD5F01B5")
	(object Visibility_Relationship
	    quid       	"46C1971203A9"
	    supplier   	"Logical View::external::xerces::XERCES_CPP_NAMESPACE"
	    quidu      	"44EC26450186"))
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "PrimeConverter_i"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeConverter_i.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (fctr.h)"
		    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeConverter_i_factory.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (fctr.cpp)"
		    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeConverter_i_factory.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/garant6x/implementation/Garant/PrimeXmlConverterLib/impl/PrimeXMLConverterServant/PrimeConverter_i.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C04A850128_DESTR_BODY*"
		    value      	(value Text 
|//#UC START# *46C04A850128_DESTR_BODY*§	//for (size_t i = 0; i < m_root_list.size (); ++i) {§	//	LOG_D (("%s", m_root_list[i].c_str ()));§	//}§	//LOG_D (("Last name: %s", m_last_name.c_str ()));§	//LOG_D (("Root name: %s", m_new_root_xml.c_str ()));§	//#UC END# *46C04A850128_DESTR_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Factory auto reg"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Factory default impl"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Need unsorted less"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"Servant Pool"
		    value      	"none")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local supervisor"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"singleton"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C04A850128_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *46C04A850128_CUSTOM_INCLUDES*§#include "ace/Dirent.h"§#include "ace/Dirent_Selector.h"§//#UC END# *46C04A850128_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C04A850128*"
		    value      	(value Text 
|//#UC START# *46C04A850128*§const std::string XML_FILE_MASK ("??????????????.xml");§§static int root_xml_file_selector (const dirent* d) {§	static std::string mask (XML_FILE_MASK);§	static const size_t EXT_SIZE = 4;§	std::string name (d->d_name);§	§	if (name.size () != mask.size ()) {§		return false;§	}§§	for (size_t i = 0; i < name.size (); ++i) {§		name [i] = tolower (name [i]);§	}§§	// we don't need files beginning from ffff§	if (name.substr (0, 4) == "ffff") {§		return false;§	}§	§	// check file extension:§	return name.substr (name.size () - EXT_SIZE, EXT_SIZE) != mask.substr (mask.size () - EXT_SIZE, EXT_SIZE)§		? false§		: true§	;§}§//#UC END# *46C04A850128*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*46C04A850128_CUSTOM_INCLUDES*"
		    value      	"//#UC START# *46C04A850128_CUSTOM_INCLUDES*§//#UC END# *46C04A850128_CUSTOM_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*46C04A850128*"
		    value      	"//#UC START# *46C04A850128*§//#UC END# *46C04A850128*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C047020261_46C04B6501C5_46C04A850128_BASE_INIT*"
		    value      	"//#UC START# *46C047020261_46C04B6501C5_46C04A850128_BASE_INIT*§: m_path_to_xml (path) §//#UC END# *46C047020261_46C04B6501C5_46C04A850128_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C047020261_46C04B6501C5_46C04A850128_BODY*"
		    value      	(value Text 
|//#UC START# *46C047020261_46C04B6501C5_46C04A850128_BODY*§	ACE_Dirent_Selector xml_ds;§	std::string directory = platform_independent_path (path);§§	int status = xml_ds.open (directory.c_str(), root_xml_file_selector);§	if (status == -1) {§		throw PrimeXMLConverterIface::BadPathToXML ();§	}§	for (int i = 0; i < xml_ds.length (); ++i) {§		std::string full_path = m_path_to_xml + ACE_DIRECTORY_SEPARATOR_CHAR + xml_ds[i]->d_name;§		if (this->is_prime_xml (full_path.c_str ())) {§			m_root_list.push_back (xml_ds[i]->d_name);§			if (m_last_name.empty () || (ACE_OS::strcmp (m_last_name.c_str (), xml_ds[i]->d_name) < 0)) {§				m_last_name = xml_ds[i]->d_name;§			}§		}§	}§	status = xml_ds.close ();§	GDS_ASSERT (status != -1);§§	this->make_root_name ();§	//#UC END# *46C047020261_46C04B6501C5_46C04A850128_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C1A44500AB*"
		    value      	(value Text 
|//#UC START# *46C1A44500AB*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStrUnicode name_tag_string (parser, "full_name");§	XERCES_CPP_NAMESPACE::DOMNodeList* name_list = §		src->getElementsByTagName (name_tag_string.data ());§	if (name_list->getLength () > 1) {§		LOG_W (("%s: more then one text attribute, first used", GDS_CURRENT_FUNCTION));§	}§	if (!name_list->getLength ()) {§		LOG_W (("%s: can't find full_name attribute, skipped", GDS_CURRENT_FUNCTION));§		return 0;§	}§§	Adapters::DOMNodeEx name_element (parser, name_list->item (0));§	Adapters::XMLStr name_value (parser, name_element.get_text ());§	XERCES_CPP_NAMESPACE::DOMElement* dst = parser->create_element (doc, "item");§	parser->set_attribute (dst, "logic_operation", "LO_OR");§	parser->add_text_node (doc, dst, name_value.data ());§	return dst;§	//#UC END# *46C1A44500AB*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C199E6033C*"
		    value      	(value Text 
|//#UC START# *46C199E6033C*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStr type_string (parser, parser->get_attribute (src, "type"));§	switch (ACE_OS::strtol (type_string.data (), 0, 10)) {§		case 2:§			return this->create_search_attribute (src, doc);§			break;§		case 3: §			return this->create_text_attribute (src, doc);§			break;§		default:§			LOG_W (("%s: unknown type attribute for index_data tag: %s", GDS_CURRENT_FUNCTION, type_string.data ()));§			return 0;§	}§§	GDS_ASSERT (false && "not reached");§	return 0;§	//#UC END# *46C199E6033C*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C1967F02FD*"
		    value      	(value Text 
|//#UC START# *46C1967F02FD*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStr type_string (parser, parser->get_attribute (src, "type"));§	Adapters::XMLStr id_string (parser, parser->get_attribute (src, "content_id"));§	if (ACE_OS::strcmp (type_string.data (), "QT_MAIL_LIST")) {§		return 0;§	}§	if (!ACE_OS::strlen (id_string.data ())) {§		LOG_W (("%s: can't find content_id attribute for query", GDS_CURRENT_FUNCTION));§	}§	Adapters::XMLStr comment_string (parser, parser->get_attribute (src, "comment"));§	Adapters::XMLStr name_string (parser, parser->get_attribute (src, "name"));§	XERCES_CPP_NAMESPACE::DOMElement* dst = parser->create_element (doc, "query");§	parser->set_attribute (dst, "comment", comment_string.data ());§	parser->set_attribute (dst, "content_id", id_string.data ());§	parser->set_attribute (dst, "date", static_cast<long> (::time (0)));§	parser->set_attribute (dst, "filter_type", "NO_FILTER");§	parser->set_attribute (dst, "name", name_string.data ());§	parser->set_attribute (dst, "type", type_string.data ());§§	return dst;§	//#UC END# *46C1967F02FD*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C19CE5035B*"
		    value      	(value Text 
|//#UC START# *46C19CE5035B*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStrUnicode dict_tag_string (parser, "search_dict_rec");§	XERCES_CPP_NAMESPACE::DOMNodeList* dict_elem_list = §		src->getElementsByTagName (dict_tag_string.data ());§	if (!dict_elem_list->getLength ()) {§		LOG_W (("%s: can't find search_dict_rec attribute, skipped", GDS_CURRENT_FUNCTION));§		return 0;§	}§	Adapters::XMLStr tag_string (parser, parser->get_attribute (src, "tag"));§	XERCES_CPP_NAMESPACE::DOMElement* dst = parser->create_element (doc, "attribute");§	for (size_t i = 0; i < dict_elem_list->getLength (); ++i) {§		XERCES_CPP_NAMESPACE::DOMElement* dict_element = §			dynamic_cast<XERCES_CPP_NAMESPACE::DOMElement*> (dict_elem_list->item (i));§		XERCES_CPP_NAMESPACE::DOMElement* item_element = this->create_item_attribute (dict_element, doc);§		if (!item_element) {§			continue;§		}§		dst->appendChild (item_element);§	}§	parser->set_attribute (dst, "tag", tag_string.data ());§§	return dst;§	//#UC END# *46C19CE5035B*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C19CD802FD*"
		    value      	(value Text 
|//#UC START# *46C19CD802FD*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStrUnicode full_name_tag_string (parser, "full_name");§	XERCES_CPP_NAMESPACE::DOMNodeList* src_text_list = §		src->getElementsByTagName (full_name_tag_string.data ());§	if (src_text_list->getLength () > 1) {§		LOG_W (("%s: more then one text attribute, first used", GDS_CURRENT_FUNCTION));§	}§	if (!src_text_list->getLength ()) {§		LOG_W (("%s: can't find full_name attribute, skipped", GDS_CURRENT_FUNCTION));§		return 0;§	}§	Adapters::DOMNodeEx src_text_element (parser, src_text_list->item (0));§	Adapters::XMLStr tag_string (parser, parser->get_attribute (src, "tag"));§	Adapters::XMLStr text_value (parser, src_text_element.get_text ());§	XERCES_CPP_NAMESPACE::DOMElement* dst = parser->create_element (doc, "attribute");§	parser->set_attribute (dst, "tag", tag_string.data ());§	XERCES_CPP_NAMESPACE::DOMElement* text = parser->create_element (doc, "text");§	parser->add_text_node (doc, text, text_value.data ());§	dst->appendChild (text);§	return dst;§	//#UC END# *46C19CD802FD*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C06E9A002E*"
		    value      	(value Text 
|//#UC START# *46C06E9A002E*§	static Adapters::XercesAdapterLoader xerces_adapter_loader;§§	if (m_xerces_adapter.is_nil ()) {§		m_xerces_adapter = xerces_adapter_loader.get_xerces_adapter ();§		if (m_xerces_adapter.is_nil ()) {§			throw PrimeXMLConverterIface::CantFindXerces ();§		}§	}§	return m_xerces_adapter.ptr ();§	//#UC END# *46C06E9A002E*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C06425035B*"
		    value      	(value Text 
|//#UC START# *46C06425035B*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§	Adapters::DocumentManager doc_manager (parser);§§	XERCES_CPP_NAMESPACE::DOMDocument* doc (doc_manager.get_doc (path));§	GDS_ASSERT (doc);§	§	XERCES_CPP_NAMESPACE::DOMElement* root = parser->get_root (doc);§	Adapters::XMLStr version (parser, parser->get_attribute (root, "xml_version"));§	if (ACE_OS::strtol (version.data (), 0, 10) != 4) {§		// ˝ÚÓ ÌÂ 6.4§		return false;§	}§	Adapters::XMLStr type (parser, parser->get_attribute (root, "type"));§	if (ACE_OS::strtol (type.data (), 0, 10) != 3) {§		// ˝ÚÓ ÌÂ ‡ÒÒ˚ÎÍ‡§		return false;§	}§§	return true;§	//#UC END# *46C06425035B*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C089440222*"
		    value      	(value Text 
|//#UC START# *46C089440222*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	std::string dst_file = §		m_path_to_xml §		+ ACE_DIRECTORY_SEPARATOR_CHAR	§		+ m_new_root_xml §		+ ACE_DIRECTORY_SEPARATOR_CHAR§		+ "prime.xml";§	Adapters::DocumentManager dst_manager (parser, "prime");	§	XERCES_CPP_NAMESPACE::DOMDocument* dst = dst_manager.get_doc (); GDS_ASSERT (dst);§	XERCES_CPP_NAMESPACE::DOMElement* dst_root_tag = parser->get_root (dst); GDS_ASSERT (dst_root_tag);§§	std::string src_file = §		m_path_to_xml §		+ ACE_DIRECTORY_SEPARATOR_CHAR	§		+ m_last_name.substr (0, m_last_name.size () - 4 /* sizeof (".xml") */)§		+ ACE_DIRECTORY_SEPARATOR_CHAR§		+ "_predefined_data"§		+ ACE_DIRECTORY_SEPARATOR_CHAR§		+ "folders.xml";§	Adapters::DocumentManager src_manager (parser);	§	XERCES_CPP_NAMESPACE::DOMDocument* src (src_manager.get_doc (src_file.c_str ())); GDS_ASSERT (src);	§	XERCES_CPP_NAMESPACE::DOMElement* src_root_tag = parser->get_root (src); GDS_ASSERT (src_root_tag);§	if (!(dst && dst_root_tag && src && src_root_tag)) {§		LOG_E (("%s: error while creating xml objects", GDS_CURRENT_FUNCTION));§		return false;§	}§§	parser->set_attribute (dst_root_tag, "xml_version", "5");§§	Adapters::XMLStrUnicode query_tag_string (parser, "query");§	XERCES_CPP_NAMESPACE::DOMNodeList* src_queries_list = src_root_tag->getElementsByTagName (query_tag_string.data ());§	if (!src_queries_list->getLength ()) {§		LOG_E (("%s: bad prime xml in %s (no query tag)", GDS_CURRENT_FUNCTION, src_file.c_str ()));§		return false;§	}§	bool prime_found = false;§	for (size_t i = 0; i < src_queries_list->getLength (); ++i) {§		XERCES_CPP_NAMESPACE::DOMElement* src_query_element = §			dynamic_cast<XERCES_CPP_NAMESPACE::DOMElement*> (src_queries_list->item (i));§		GDS_ASSERT (src_query_element);§		XERCES_CPP_NAMESPACE::DOMElement* dst_query_element = this->create_query_element (src_query_element, dst);§		if (!dst_query_element) {§			continue;§		}§		dst_root_tag->appendChild (dst_query_element);§		prime_found = true;§§		Adapters::XMLStrUnicode index_data_tag_string (parser, "index_data");§		XERCES_CPP_NAMESPACE::DOMNodeList* src_attributes_list = §			src_query_element->getElementsByTagName (index_data_tag_string.data ());§		for (size_t j = 0; j < src_attributes_list->getLength (); ++j) {§			XERCES_CPP_NAMESPACE::DOMElement* src_attribute_element = §				dynamic_cast<XERCES_CPP_NAMESPACE::DOMElement*> (src_attributes_list->item (j));§			XERCES_CPP_NAMESPACE::DOMElement* dst_attribute_element = §				this->create_query_attribute (src_attribute_element, dst);§			if (!dst_attribute_element) {§				LOG_W (("%s: can't add attribute", GDS_CURRENT_FUNCTION));§				continue;§			}§			dst_query_element->appendChild (dst_attribute_element);§		}§	}§	if (!prime_found) {§		LOG_E (("%s: bad prime xml in %s (no query tag for prime)", GDS_CURRENT_FUNCTION, src_file.c_str ()));§		return false;§	}§§	std::string dir_name = m_path_to_xml + ACE_DIRECTORY_SEPARATOR_CHAR	+ m_new_root_xml;§	if (!GCL::create_tree_dirs (dir_name.c_str (), false)) {§		LOG_E ((§			"%s: can't create catalog %s"§			, GDS_CURRENT_FUNCTION§			, dir_name.c_str ()§		));§		return false;§	}§	dst_manager.write (dst_file.c_str (), false);§	return true;§	//#UC END# *46C089440222*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C07C160167*"
		    value      	(value Text 
|//#UC START# *46C07C160167*§	time_t long_time;§	ACE_OS::time (&long_time);                 §	struct tm* current_time = ACE_OS::localtime (&long_time);§§	char buf [16] = {'\0'};§§	ACE_OS::snprintf (§		buf§		, 16§		, "%04d%02d%02d%02d%02d%02d"§		, current_time->tm_year + 1900§		, current_time->tm_mon + 1§		, current_time->tm_mday§		, current_time->tm_hour§		, current_time->tm_min§		, current_time->tm_sec§	);§	m_new_root_xml = buf;	§	//#UC END# *46C07C160167*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C07FD201C5*"
		    value      	(value Text 
|//#UC START# *46C07FD201C5*§	std::string xml_file = m_path_to_xml + ACE_DIRECTORY_SEPARATOR_CHAR	+ m_new_root_xml + ".xml";§§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§	Adapters::DocumentManager doc_manager (parser, "root");	§§	XERCES_CPP_NAMESPACE::DOMDocument* doc = doc_manager.get_doc (); GDS_ASSERT (doc);§	XERCES_CPP_NAMESPACE::DOMElement* root_tag = parser->get_root (doc); GDS_ASSERT (root_tag);§§	parser->set_attribute (root_tag, "xml_version", "5");§	parser->set_attribute (root_tag, "remove_after_load", "0");	§	parser->set_attribute (root_tag, "cleanup_user_before_load", "1");	§	parser->set_attribute (root_tag, "type", "XT_PRIME");	§§	doc_manager.write (xml_file.c_str (), false);§§	LOG_I (("%s: created xml's %s from %s", GDS_CURRENT_FUNCTION, xml_file.c_str (), m_last_name.c_str ()));§	return true;§	//#UC END# *46C07FD201C5*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C07B5F03C8_46C04A850128*"
		    value      	(value Text 
|//#UC START# *46C07B5F03C8_46C04A850128*§	if (m_last_name.empty ()) {§		return false; // ÌÂÚ Ô‡ÈÏ‡ ‰Îˇ ÔÂÂÏ˚‚ÍË§	}§	if (!this->make_prime_file ()) {§		LOG_E (("%s: can't create prime file", GDS_CURRENT_FUNCTION));§		return false;§	}§	if (!this->make_root_xml ()) {§		LOG_E (("%s: can't create root file for prime", GDS_CURRENT_FUNCTION));§		return false;§	}§§	return true;§	//#UC END# *46C07B5F03C8_46C04A850128*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C04907029F_46C04A850128*"
		    value      	(value Text 
|//#UC START# *46C04907029F_46C04A850128*§	return m_last_name;§	//#UC END# *46C04907029F_46C04A850128*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*46C05B4D0177_46C04A850128*"
		    value      	(value Text 
|//#UC START# *46C05B4D0177_46C04A850128*§	for (size_t i = 0; i < m_root_list.size (); ++i) {§		std::string path_to_root_file = m_path_to_xml + ACE_DIRECTORY_SEPARATOR_CHAR + m_root_list[i];§		std::string path_to_root_directory = path_to_root_file.substr (0, path_to_root_file.size () - 4 /* sizeof (".xml") */);§		std::string path_to_predefined_data = path_to_root_directory + ACE_DIRECTORY_SEPARATOR_CHAR	+ "_predefined_data";§		std::string path_to_folders_xml = path_to_predefined_data + ACE_DIRECTORY_SEPARATOR_CHAR + "folders.xml";§		LOG_I (("%s: removing xml's for %s", GDS_CURRENT_FUNCTION,  m_root_list[i].c_str ()));§		ACE_OS::unlink (path_to_folders_xml.c_str ());§		ACE_OS::rmdir (path_to_predefined_data.c_str ());§		ACE_OS::rmdir (path_to_root_directory.c_str ());§		ACE_OS::unlink (path_to_root_file.c_str ());§	}§	//#UC END# *46C05B4D0177_46C04A850128*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Nemesis,key:NMS,guid:442BEDF00290/Home/ÃÓ‰ÂÎ¸ ÔÓÂÍÚ‡ "garant6x"/PrimeXmlConverterLib/PrimeXMLConverterServant/PrimeConverter_i|46C04A850128
		    )))
	    quid       	"46C04A850128"
	    documentation 	"Â‡ÎËÁ‡ˆËˇ"
	    stereotype 	"Servant"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"46C0846C033C"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::GCL::os::dir_op"
		    quidu      	"4503DD86037A"))
	    realized_interfaces 	(list realize_rel_list
		(object Realize_Relationship
		    quid       	"46C04AB200BB"
		    supplier   	"Logical View::garant6x::PrimeXmlConverterLib::PrimeXMLConverterIface::PrimeConverter"
		    quidu      	"46C047020261"))
	    operations 	(list Operations
		(object Operation "is_prime_xml"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C06425035B*"
			    value      	(value Text 
|//#UC START# *46C06425035B*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§	Adapters::DocumentManager doc_manager (parser);§§	XERCES_CPP_NAMESPACE::DOMDocument* doc (doc_manager.get_doc (path));§	GDS_ASSERT (doc);§	§	XERCES_CPP_NAMESPACE::DOMElement* root = parser->get_root (doc);§	Adapters::XMLStr version (parser, parser->get_attribute (root, "xml_version"));§	if (ACE_OS::strtol (version.data (), 0, 10) != 4) {§		// ˝ÚÓ ÌÂ 6.4§		return false;§	}§	Adapters::XMLStr type (parser, parser->get_attribute (root, "type"));§	if (ACE_OS::strtol (type.data (), 0, 10) != 3) {§		// ˝ÚÓ ÌÂ ‡ÒÒ˚ÎÍ‡§		return false;§	}§§	return true;§	//#UC END# *46C06425035B*
			    )))
		    quid       	"46C06425035B"
		    documentation 	"¬ÓÁ‚‡˘‡ÂÚ true, ÂÒÎË ˝ÚÓ ÛÚÓ‚˚È xml ‰Îˇ ÒÚ‡Ó„Ó Ô‡ÈÏ‡"
		    parameters 	(list Parameters
			(object Parameter "path"
			    quid       	"46C0773203D8"
			    type       	"string"
			    quidu      	"3DBFFE240068"))
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"3DBFFE100240")
		(object Operation "make_root_name"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C07C160167*"
			    value      	(value Text 
|//#UC START# *46C07C160167*§	time_t long_time;§	ACE_OS::time (&long_time);                 §	struct tm* current_time = ACE_OS::localtime (&long_time);§§	char buf [16] = {'\0'};§§	ACE_OS::snprintf (§		buf§		, 16§		, "%04d%02d%02d%02d%02d%02d"§		, current_time->tm_year + 1900§		, current_time->tm_mon + 1§		, current_time->tm_mday§		, current_time->tm_hour§		, current_time->tm_min§		, current_time->tm_sec§	);§	m_new_root_xml = buf;	§	//#UC END# *46C07C160167*
			    )))
		    quid       	"46C07C160167"
		    documentation 	"ÒÓÁ‰‡Ú¸ ËÏˇ ‰Îˇ ÌÓ‚Ó„Ó Ù‡ÈÎ‡ ‡ÒÒ˚ÎÍË"
		    stereotype 	"chg"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0)
		(object Operation "make_root_xml"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C07FD201C5*"
			    value      	(value Text 
|//#UC START# *46C07FD201C5*§	std::string xml_file = m_path_to_xml + ACE_DIRECTORY_SEPARATOR_CHAR	+ m_new_root_xml + ".xml";§§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§	Adapters::DocumentManager doc_manager (parser, "root");	§§	XERCES_CPP_NAMESPACE::DOMDocument* doc = doc_manager.get_doc (); GDS_ASSERT (doc);§	XERCES_CPP_NAMESPACE::DOMElement* root_tag = parser->get_root (doc); GDS_ASSERT (root_tag);§§	parser->set_attribute (root_tag, "xml_version", "5");§	parser->set_attribute (root_tag, "remove_after_load", "0");	§	parser->set_attribute (root_tag, "cleanup_user_before_load", "1");	§	parser->set_attribute (root_tag, "type", "XT_PRIME");	§§	doc_manager.write (xml_file.c_str (), false);§§	LOG_I (("%s: created xml's %s from %s", GDS_CURRENT_FUNCTION, xml_file.c_str (), m_last_name.c_str ()));§	return true;§	//#UC END# *46C07FD201C5*
			    )))
		    quid       	"46C07FD201C5"
		    documentation 	"ÒÓÁ‰‡Ú¸ ÛÚÓ‚˚È xml"
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"3DBFFE100240")
		(object Operation "make_prime_file"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C089440222*"
			    value      	(value Text 
|//#UC START# *46C089440222*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	std::string dst_file = §		m_path_to_xml §		+ ACE_DIRECTORY_SEPARATOR_CHAR	§		+ m_new_root_xml §		+ ACE_DIRECTORY_SEPARATOR_CHAR§		+ "prime.xml";§	Adapters::DocumentManager dst_manager (parser, "prime");	§	XERCES_CPP_NAMESPACE::DOMDocument* dst = dst_manager.get_doc (); GDS_ASSERT (dst);§	XERCES_CPP_NAMESPACE::DOMElement* dst_root_tag = parser->get_root (dst); GDS_ASSERT (dst_root_tag);§§	std::string src_file = §		m_path_to_xml §		+ ACE_DIRECTORY_SEPARATOR_CHAR	§		+ m_last_name.substr (0, m_last_name.size () - 4 /* sizeof (".xml") */)§		+ ACE_DIRECTORY_SEPARATOR_CHAR§		+ "_predefined_data"§		+ ACE_DIRECTORY_SEPARATOR_CHAR§		+ "folders.xml";§	Adapters::DocumentManager src_manager (parser);	§	XERCES_CPP_NAMESPACE::DOMDocument* src (src_manager.get_doc (src_file.c_str ())); GDS_ASSERT (src);	§	XERCES_CPP_NAMESPACE::DOMElement* src_root_tag = parser->get_root (src); GDS_ASSERT (src_root_tag);§	if (!(dst && dst_root_tag && src && src_root_tag)) {§		LOG_E (("%s: error while creating xml objects", GDS_CURRENT_FUNCTION));§		return false;§	}§§	parser->set_attribute (dst_root_tag, "xml_version", "5");§§	Adapters::XMLStrUnicode query_tag_string (parser, "query");§	XERCES_CPP_NAMESPACE::DOMNodeList* src_queries_list = src_root_tag->getElementsByTagName (query_tag_string.data ());§	if (!src_queries_list->getLength ()) {§		LOG_E (("%s: bad prime xml in %s (no query tag)", GDS_CURRENT_FUNCTION, src_file.c_str ()));§		return false;§	}§	bool prime_found = false;§	for (size_t i = 0; i < src_queries_list->getLength (); ++i) {§		XERCES_CPP_NAMESPACE::DOMElement* src_query_element = §			dynamic_cast<XERCES_CPP_NAMESPACE::DOMElement*> (src_queries_list->item (i));§		GDS_ASSERT (src_query_element);§		XERCES_CPP_NAMESPACE::DOMElement* dst_query_element = this->create_query_element (src_query_element, dst);§		if (!dst_query_element) {§			continue;§		}§		dst_root_tag->appendChild (dst_query_element);§		prime_found = true;§§		Adapters::XMLStrUnicode index_data_tag_string (parser, "index_data");§		XERCES_CPP_NAMESPACE::DOMNodeList* src_attributes_list = §			src_query_element->getElementsByTagName (index_data_tag_string.data ());§		for (size_t j = 0; j < src_attributes_list->getLength (); ++j) {§			XERCES_CPP_NAMESPACE::DOMElement* src_attribute_element = §				dynamic_cast<XERCES_CPP_NAMESPACE::DOMElement*> (src_attributes_list->item (j));§			XERCES_CPP_NAMESPACE::DOMElement* dst_attribute_element = §				this->create_query_attribute (src_attribute_element, dst);§			if (!dst_attribute_element) {§				LOG_W (("%s: can't add attribute", GDS_CURRENT_FUNCTION));§				continue;§			}§			dst_query_element->appendChild (dst_attribute_element);§		}§	}§	if (!prime_found) {§		LOG_E (("%s: bad prime xml in %s (no query tag for prime)", GDS_CURRENT_FUNCTION, src_file.c_str ()));§		return false;§	}§§	std::string dir_name = m_path_to_xml + ACE_DIRECTORY_SEPARATOR_CHAR	+ m_new_root_xml;§	if (!GCL::create_tree_dirs (dir_name.c_str (), false)) {§		LOG_E ((§			"%s: can't create catalog %s"§			, GDS_CURRENT_FUNCTION§			, dir_name.c_str ()§		));§		return false;§	}§	dst_manager.write (dst_file.c_str (), false);§	return true;§	//#UC END# *46C089440222*
			    )))
		    quid       	"46C089440222"
		    documentation 	"ÒÓÁ‰‡Ú¸ Ù‡ÈÎ Ò ÒÓ‰ÂÊËÏ˚Ï ‡ÒÒ˚ÎÍË ‚ ÌÓ‚ÓÏ ÙÓÏ‡ÚÂ"
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"3DBFFE100240")
		(object Operation "create_query_element"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C1967F02FD*"
			    value      	(value Text 
|//#UC START# *46C1967F02FD*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStr type_string (parser, parser->get_attribute (src, "type"));§	Adapters::XMLStr id_string (parser, parser->get_attribute (src, "content_id"));§	if (ACE_OS::strcmp (type_string.data (), "QT_MAIL_LIST")) {§		return 0;§	}§	if (!ACE_OS::strlen (id_string.data ())) {§		LOG_W (("%s: can't find content_id attribute for query", GDS_CURRENT_FUNCTION));§	}§	Adapters::XMLStr comment_string (parser, parser->get_attribute (src, "comment"));§	Adapters::XMLStr name_string (parser, parser->get_attribute (src, "name"));§	XERCES_CPP_NAMESPACE::DOMElement* dst = parser->create_element (doc, "query");§	parser->set_attribute (dst, "comment", comment_string.data ());§	parser->set_attribute (dst, "content_id", id_string.data ());§	parser->set_attribute (dst, "date", static_cast<long> (::time (0)));§	parser->set_attribute (dst, "filter_type", "NO_FILTER");§	parser->set_attribute (dst, "name", name_string.data ());§	parser->set_attribute (dst, "type", type_string.data ());§§	return dst;§	//#UC END# *46C1967F02FD*
			    )))
		    quid       	"46C1967F02FD"
		    documentation 	"ÒÓÁ‰‡Ú¸ ÌÓ‚˚È ÛÚÓ‚˚È ˝ÎÂÏÂÌÚ ‡ÒÒ˚ÎÍË, ÒÓÓÚ‚ÂÚÒÚ‚Û˛˘ËÈ ‚˚˜ËÚ‡ÌÌÓÏÛ"
		    parameters 	(list Parameters
			(object Parameter "inout src"
			    quid       	"46C198940399"
			    type       	"DOMElement"
			    quidu      	"44EC268502DE")
			(object Parameter "inout doc"
			    quid       	"46C198F2000F"
			    type       	"DOMDocument"
			    quidu      	"44EC26740222"))
		    result     	"DOMElement"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"44EC268502DE")
		(object Operation "create_query_attribute"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C199E6033C*"
			    value      	(value Text 
|//#UC START# *46C199E6033C*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStr type_string (parser, parser->get_attribute (src, "type"));§	switch (ACE_OS::strtol (type_string.data (), 0, 10)) {§		case 2:§			return this->create_search_attribute (src, doc);§			break;§		case 3: §			return this->create_text_attribute (src, doc);§			break;§		default:§			LOG_W (("%s: unknown type attribute for index_data tag: %s", GDS_CURRENT_FUNCTION, type_string.data ()));§			return 0;§	}§§	GDS_ASSERT (false && "not reached");§	return 0;§	//#UC END# *46C199E6033C*
			    )))
		    quid       	"46C199E6033C"
		    documentation 	"ÒÓÁ‰‡Ú¸ ‡ÚË·ÛÚ ‡ÒÒ˚ÎÍË"
		    parameters 	(list Parameters
			(object Parameter "inout src"
			    quid       	"46C19A2502EE"
			    type       	"DOMElement"
			    quidu      	"44EC268502DE")
			(object Parameter "inout doc"
			    quid       	"46C19A25034B"
			    type       	"DOMDocument"
			    quidu      	"44EC26740222"))
		    result     	"DOMElement"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"44EC268502DE")
		(object Operation "create_text_attribute"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C19CD802FD*"
			    value      	(value Text 
|//#UC START# *46C19CD802FD*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStrUnicode full_name_tag_string (parser, "full_name");§	XERCES_CPP_NAMESPACE::DOMNodeList* src_text_list = §		src->getElementsByTagName (full_name_tag_string.data ());§	if (src_text_list->getLength () > 1) {§		LOG_W (("%s: more then one text attribute, first used", GDS_CURRENT_FUNCTION));§	}§	if (!src_text_list->getLength ()) {§		LOG_W (("%s: can't find full_name attribute, skipped", GDS_CURRENT_FUNCTION));§		return 0;§	}§	Adapters::DOMNodeEx src_text_element (parser, src_text_list->item (0));§	Adapters::XMLStr tag_string (parser, parser->get_attribute (src, "tag"));§	Adapters::XMLStr text_value (parser, src_text_element.get_text ());§	XERCES_CPP_NAMESPACE::DOMElement* dst = parser->create_element (doc, "attribute");§	parser->set_attribute (dst, "tag", tag_string.data ());§	XERCES_CPP_NAMESPACE::DOMElement* text = parser->create_element (doc, "text");§	parser->add_text_node (doc, text, text_value.data ());§	dst->appendChild (text);§	return dst;§	//#UC END# *46C19CD802FD*
			    )))
		    quid       	"46C19CD802FD"
		    documentation 	"ÒÓÁ‰‡Ú¸ ÚÂÍÒÚÓ‚˚È ‡ÚË·ÛÚ ‡ÒÒ˚ÎÍË"
		    parameters 	(list Parameters
			(object Parameter "inout src"
			    quid       	"46C19CE5038A"
			    type       	"DOMElement"
			    quidu      	"44EC268502DE")
			(object Parameter "inout doc"
			    quid       	"46C19CE503D8"
			    type       	"DOMDocument"
			    quidu      	"44EC26740222"))
		    result     	"DOMElement"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"44EC268502DE")
		(object Operation "create_search_attribute"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C19CE5035B*"
			    value      	(value Text 
|//#UC START# *46C19CE5035B*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStrUnicode dict_tag_string (parser, "search_dict_rec");§	XERCES_CPP_NAMESPACE::DOMNodeList* dict_elem_list = §		src->getElementsByTagName (dict_tag_string.data ());§	if (!dict_elem_list->getLength ()) {§		LOG_W (("%s: can't find search_dict_rec attribute, skipped", GDS_CURRENT_FUNCTION));§		return 0;§	}§	Adapters::XMLStr tag_string (parser, parser->get_attribute (src, "tag"));§	XERCES_CPP_NAMESPACE::DOMElement* dst = parser->create_element (doc, "attribute");§	for (size_t i = 0; i < dict_elem_list->getLength (); ++i) {§		XERCES_CPP_NAMESPACE::DOMElement* dict_element = §			dynamic_cast<XERCES_CPP_NAMESPACE::DOMElement*> (dict_elem_list->item (i));§		XERCES_CPP_NAMESPACE::DOMElement* item_element = this->create_item_attribute (dict_element, doc);§		if (!item_element) {§			continue;§		}§		dst->appendChild (item_element);§	}§	parser->set_attribute (dst, "tag", tag_string.data ());§§	return dst;§	//#UC END# *46C19CE5035B*
			    )))
		    quid       	"46C19CE5035B"
		    documentation 	"ÒÓÁ‰‡Ú¸ ÔÓËÒÍÓ‚˚È ‡ÚË·ÛÚ ‡ÒÒ˚ÎÍË"
		    parameters 	(list Parameters
			(object Parameter "inout src"
			    quid       	"46C19CEE0280"
			    type       	"DOMElement"
			    quidu      	"44EC268502DE")
			(object Parameter "inout doc"
			    quid       	"46C19CEE02CE"
			    type       	"DOMDocument"
			    quidu      	"44EC26740222"))
		    result     	"DOMElement"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"44EC268502DE")
		(object Operation "create_item_attribute"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*46C1A44500AB*"
			    value      	(value Text 
|//#UC START# *46C1A44500AB*§	Adapters::IXercesAdapter* parser = this->get_xerces_adapter ();§§	Adapters::XMLStrUnicode name_tag_string (parser, "full_name");§	XERCES_CPP_NAMESPACE::DOMNodeList* name_list = §		src->getElementsByTagName (name_tag_string.data ());§	if (name_list->getLength () > 1) {§		LOG_W (("%s: more then one text attribute, first used", GDS_CURRENT_FUNCTION));§	}§	if (!name_list->getLength ()) {§		LOG_W (("%s: can't find full_name attribute, skipped", GDS_CURRENT_FUNCTION));§		return 0;§	}§§	Adapters::DOMNodeEx name_element (parser, name_list->item (0));§	Adapters::XMLStr name_value (parser, name_element.get_text ());§	XERCES_CPP_NAMESPACE::DOMElement* dst = parser->create_element (doc, "item");§	parser->set_attribute (dst, "logic_operation", "LO_OR");§	parser->add_text_node (doc, dst, name_value.data ());§	return dst;§	//#UC END# *46C1A44500AB*
			    )))
		    quid       	"46C1A44500AB"
		    documentation 	"ÒÓÁ‰‡Ú¸ ˝ÎÂÏÂÌÚ ÔÓËÒÍÓ‚Ó„Ó ‡ÚË·ÛÚ‡ ‡ÒÒ˚ÎÍË"
		    parameters 	(list Parameters
			(object Parameter "inout src"
			    quid       	"46C1A4530203"
			    type       	"DOMElement"
			    quidu      	"44EC268502DE")
			(object Parameter "inout doc"
			    quid       	"46C1A4530251"
			    type       	"DOMDocument"
			    quidu      	"44EC26740222"))
		    result     	"DOMElement"
		    concurrency 	"Sequential"
		    opExportControl 	"Private"
		    uid        	0
		    quidu      	"44EC268502DE"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "last_name"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"46C04ABC030D"
		    documentation 	"ÔÓÒÎÂ‰ÌËÈ ‚˚ÎËÚ˚È xml"
		    type       	"a-string"
		    quidu      	"452257A0036F"
		    Containment 	"By Value")
		(object ClassAttribute "path_to_xml"
		    quid       	"46C0747303D8"
		    type       	"a-string"
		    quidu      	"452257A0036F")
		(object ClassAttribute "new_root_xml"
		    quid       	"46C07C9D033C"
		    type       	"a-string"
		    quidu      	"452257A0036F")
		(object ClassAttribute "root_list"
		    quid       	"46C04B2502FD"
		    type       	"XMLRootList"
		    quidu      	"46C04AEE0128"))
	    language   	"MDA Generator")
	(object Class "XMLRootList"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"46C04AEE0128"
	    documentation 	"ÒÔËÒÓÍ ÛÚÓ‚˚ı xml-ÂÍ"
	    stereotype 	"Vector"
	    language   	"MDA Generator")
	(object Association "$UNNAMED$0"
	    quid       	"46C04B1103C8"
	    roles      	(list role_list
		(object Role "$UNNAMED$1"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"46C04B120196"
		    supplier   	"Logical View::Primitives::a-string"
		    quidu      	"452257A0036F"
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$2"
		    quid       	"46C04B1201B5"
		    supplier   	"Logical View::garant6x::PrimeXmlConverterLib::PrimeXMLConverterServant::XMLRootList"
		    quidu      	"46C04AEE0128"
		    is_aggregate 	TRUE))))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "main"
	    quid       	"46C04A550177"
	    title      	"main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::garant6x::PrimeXmlConverterLib::PrimeXMLConverterServant::PrimeConverter_i" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(979, 1187)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(114, 778)
			fill_color 	13434879
			nlines     	1
			max_width  	1730
			justify    	0
			label      	"ï PrimeConverter_i")
		    stereotype 	(object ItemLabel
			Parent_View 	@1
			location   	(114, 728)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1730
			justify    	0
			label      	"<<Servant>>")
		    icon_style 	"Label"
		    fill_color 	12842435
		    quidu      	"46C04A850128"
		    compartment 	(object Compartment
			Parent_View 	@1
			location   	(114, 839)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	14
			max_width  	2
			justify    	1)
		    width      	1748
		    height     	942
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::garant6x::PrimeXmlConverterLib::PrimeXMLConverterIface::PrimeConverter" @2
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(978, 447)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	16714250
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(745, 419)
			nlines     	1
			max_width  	466
			justify    	0
			label      	"ï PrimeConverter")
		    stereotype 	(object ItemLabel
			Parent_View 	@2
			location   	(745, 369)
			anchor     	10
			nlines     	1
			max_width  	466
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    line_color 	16714250
		    fill_color 	16777215
		    quidu      	"46C047020261"
		    width      	484
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object RealizeView "" @3
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"46C04AB200BB"
		    client     	@1
		    supplier   	@2
		    vertices   	(list Points
			(978, 715)
			(978, 537))
		    line_style 	0)
		(object ClassView "Class" "Logical View::Primitives::a-string" @4
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1369, 1937)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	TRUE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(1262, 1891)
			fill_color 	13434879
			nlines     	1
			max_width  	214
			justify    	0
			label      	"a-string")
		    icon_style 	"None"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"452257A0036F"
		    width      	232
		    height     	117
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::garant6x::PrimeXmlConverterLib::PrimeXMLConverterServant::XMLRootList" @5
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(853, 1937)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@5
			location   	(724, 1910)
			fill_color 	13434879
			nlines     	1
			max_width  	258
			justify    	0
			label      	"XMLRootList")
		    stereotype 	(object ItemLabel
			Parent_View 	@5
			location   	(724, 1860)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	258
			justify    	0
			label      	"<<Vector>>")
		    icon_style 	"Label"
		    fill_color 	15787730
		    quidu      	"46C04AEE0128"
		    width      	276
		    height     	178
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$0" @6
		    location   	(1121, 1937)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"46C04B1103C8"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$1" @7
			    Parent_View 	@6
			    location   	(284, 224)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"46C04B120196"
			    client     	@6
			    supplier   	@4
			    vertices   	(list Points
				(1121, 1937)
				(1252, 1937))
			    line_style 	0)
			(object RoleView "$UNNAMED$2" @8
			    Parent_View 	@6
			    location   	(284, 224)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"46C04B1201B5"
			    client     	@6
			    supplier   	@5
			    vertices   	(list Points
				(1121, 1937)
				(991, 1937))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::shared::GCL::os::dir_op" @9
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1475, 503)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@9
			location   	(1325, 475)
			nlines     	1
			max_width  	300
			justify    	0
			label      	"dir_op")
		    stereotype 	(object ItemLabel
			Parent_View 	@9
			location   	(1325, 425)
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"4503DD86037A"
		    width      	318
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @10
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @11
			Parent_View 	@10
			location   	(1449, 673)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.730360
			height     	79
			orientation 	1)
		    line_color 	3947680
		    quidu      	"46C0846C033C"
		    client     	@1
		    supplier   	@9
		    vertices   	(list Points
			(1320, 715)
			(1409, 593))
		    line_style 	0)))))
