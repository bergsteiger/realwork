
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.061205"
    charSet    	204)

(object Class_Category "fix"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (h)"
	    value      	"w:/shared/Core/fix/PragmaWarningDisable.h::45011FA90157,w:/shared/Core/fix/Win32Exception.h::45011F6B0000,w:/shared/Core/fix/mpcxc.h::45011F4F00FA,w:/shared/Core/fix/win_afx.h::45740CEE0280,w:/shared/Core/fix/wine.h::45E40FD200AB")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (cpp)"
	    value      	"w:/shared/Core/fix/Win32Exception.cpp::45011F6B0000,w:/shared/Core/fix/mpcxc.cpp::45011F4F00FA")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ApplyedGens"
	    value      	"C++ èíòåğôåéñû è ğåàëèçàöèÿ|Äîêóìåíòàöèÿ")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED WikiPageID (wiki)"
	    value      	(value Text 
|Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/PragmaWarningDisable|45011FA90157::45011FA90157;Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/Win32Exception|45011F6B0000::45011F6B0000;Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/mpcxc|45011F4F00FA::45011F4F00FA;Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/win_afx|45740CEE0280::45740CEE0280;Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/wine|45E40FD200AB::45E40FD200AB;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/PragmaWarningDisable|45011FA90157::45011FA90157;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/Win32Exception|45011F6B0000::45011F6B0000;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/mpcxc|45011F4F00FA::45011F4F00FA;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/win_afx|45740CEE0280::45740CEE0280;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/wine|45E40FD200AB::45E40FD200AB
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"WikiPageID (wiki)"
	    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix|45000B1A01F4
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (wiki)"
	    value      	"wiki")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ElementCreationOrder"
	    value      	"16662177319"))
    quid       	"45000B1A01F4"
    documentation 	"èñõîäíèêè òàê èëè èíà÷å êîğğåêòèğóşùèå ñèñòåìíûå èëè òğåòüè áèáëèîòåêè, êîìïèëÿòîğû è ò.ä. (ïîèäåèè äàííûé êàòàëîã äîëæåí ñòğåìèòüñÿ ê íóëş)"
    stereotype 	"Unit"
    visible_categories 	(list visibility_relationship_list
	(object Visibility_Relationship
	    quid       	"450121CC02CE"
	    supplier   	"Logical View::shared::Core::os"
	    quidu      	"4500347B000F")
	(object Visibility_Relationship
	    quid       	"450EA60602BF"
	    supplier   	"Logical View::shared::Core::sys"
	    quidu      	"4500359F003E"))
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "mpcxc"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*45011F4F00FA_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *45011F4F00FA_CUSTOM_INCLUDES*¤#include <string>¤#include <cstring>¤#include <cmath>¤#include <iostream>¤#include <locale>¤¤#if defined(_MSC_VER) || defined(WIN32)¤#include <io.h> // for windows proprietary call _chmod(), ask Yaroslav why¤#include <windows.h>¤#endif¤¤#include "ace/Singleton.h"¤#include "ace/Null_Mutex.h"¤#include "ace/OS.h" // must be last include to avoid incorrect redefining of O_RDONLY-like macros¤#include "ace/Configuration.h"¤#include "ace/Configuration_Import_Export.h"¤¤namespace { // local¤¤char chrdig(int ost) {¤  if (ost < 10) return static_cast<char>('0' + ost - 0);¤  else return static_cast<char>('A' + ost - 10);¤}¤¤class Encoding {¤	friend class ACE_Singleton<Encoding, ACE_Recursive_Thread_Mutex>;¤	private:¤		std::string m_encoding;¤	public:¤		Encoding() {¤			char* env = ACE_OS::getenv("MPCXC_LOG_ENCODING");¤			if (env) {¤				if (!ACE_OS::strcasecmp(env, "koi")) m_encoding = "koi"; else¤				if (!ACE_OS::strcasecmp(env, "win")) m_encoding = "win"; else¤				if (!ACE_OS::strcasecmp(env, "dos")) m_encoding = "dos"; else¤				if (!ACE_OS::strcasecmp(env, "mac")) m_encoding = "mac";¤			} else {¤#if defined(WIN32) // GARANT_TO_IMPROVE_CODING¤				m_encoding = "dos";¤#else¤				m_encoding = "koi";¤#endif¤			}¤		}¤		const char* get_encoding() const { return m_encoding.c_str(); }¤};¤¤typedef ACE_Singleton<Encoding, ACE_Recursive_Thread_Mutex> EncodingSingleton;¤¤} // namespace local¤¤std::string platform_independent_path(const std::string& path) /*throw (std::logic_error)*/ {¤#if defined(PLATFORM_INDEPENDENT_PATH)¤  if (path.find(":") == 1) {¤    throw std::logic_error("platform_independent_path: couldn't process drive letter: use Core::splitpath first");¤  }¤  std::string ret = path;¤  std::string::size_type siz = ret.size();¤  for(std::string::size_type i=0; i<siz; i++) {¤    if (ret[i]=='\\') {¤    	ret[i]='/';¤    }¤  }¤  return ret;¤#else¤  return path;  ¤#endif¤}¤¤char* mpcxc_ulltoa_cpp(ACE_UINT64 value, char* strout, int radix) {¤  std::string s_res;¤  do {¤    s_res = chrdig(int(value % radix)) + s_res; // GARANT_PLAN¤    value = value / radix;¤  } while(value!=0);¤  strcpy(strout, s_res.c_str());¤  return strout;¤}¤¤¤#if defined(ACE_HAS_WINNT4) && (ACE_HAS_WINNT4 != 0)¤void mpcxc_set_se_handler () {¤	Core::Win32Exception::install_handler ();¤}¤#else¤void mpcxc_set_se_handler () {¤}¤#endif¤¤¤#include <map>¤typedef std::map <int, ACE_HANDLE> FileHandlesTableUpperCRTL;¤static FileHandlesTableUpperCRTL NdtCloneTableUpperCRTL;¤static ACE_Recursive_Thread_Mutex mutexNdtCloneTableUpperCRTL;¤static int nextHandle_NdtCloneTableUpperCRTL= 0;¤static FileHandlesTableUpperCRTL NdtCloneTableUpperCRTL_Cleared;¤¤¤extern "C" {¤¤#if !(defined(_MSC_VER) || defined(WIN32))¤int getch(void) { // GARANT_GCC_WIN_LIN¤std::cerr<<"call getch(): press key to read, then press ENTER: "<<std::flush;¤char c;¤std::cin>>c;¤std::cerr<<std::endl;¤return int(c);¤}¤#endif¤¤const size_t MPCXC_STACK_SIZE = 128*1024*1024;¤¤namespace {¤struct MainParams {¤	MainFunctionPtr m_fptr;¤	int m_argc;¤	char **m_argv;¤};¤ACE_THR_FUNC_RETURN run_main (void *p) {¤	MainParams* m_p_ptr = (MainParams*) p;¤	int res = (*m_p_ptr->m_fptr) (m_p_ptr->m_argc, m_p_ptr->m_argv);¤	return (ACE_THR_FUNC_RETURN) res;¤} ¤}¤¤int mpcxc_run_main_stack_size (MainFunctionPtr main_ptr, int argc, char *argv[], size_t stack_size) {¤	//char* stack_ptr = new char [stack_size];¤	ACE_thread_t working_thread_id = 0;¤	ACE_hthread_t working_thread_handle = 0;¤	MainParams run_main_params_ptr [1];¤	run_main_params_ptr [0].m_fptr = main_ptr;¤	run_main_params_ptr [0].m_argc = argc;¤	run_main_params_ptr [0].m_argv = argv;¤	int res = ACE_OS::thr_create (¤		run_main¤		, run_main_params_ptr¤		, THR_NEW_LWP | THR_JOINABLE¤		, &working_thread_id¤		, &working_thread_handle¤		, ACE_DEFAULT_THREAD_PRIORITY¤		, 0 //stack_ptr¤		, stack_size¤	);¤	if (res < 0) {¤		std::cerr<<"can't spawn thread for main"<<std::endl;¤		abort();¤	}¤	ACE_THR_FUNC_RETURN status = 0;¤	res = ACE_OS::thr_join (working_thread_handle, &status);¤	//delete [] stack_ptr;¤#if defined (_LP64)  ¤	return 0;¤#else¤	return (int)status;¤#endif	¤}¤¤long mpcxc_timezone(void) {¤	return ACE_OS::timezone();¤}¤¤// slash replacemant¤FILE* mpcxc_fopen(const char* fname, const char* mode) {¤//MyMutexAutoLocker mmal;¤  std::string pip_fname = platform_independent_path(fname);¤  FILE* ret = ::fopen(pip_fname.c_str(), mode);¤//std::cerr<<"thr_self:"<<ACE_OS::thr_self()<<"|"<<"MPCXC::fopen(pip_fname="<<pip_fname<<",mode="<<mode<<")="<<ret<<std::endl;¤  return ret;¤}¤¤long mpcxc_fseek(FILE* fd, long pos, int origin) {¤	int res = ::fseek(fd, pos, origin);¤	if (res != 0) return -1;¤	return ::ftell(fd);¤}¤¤void mpcxc_fgetpos(FILE* fp, long* posp) {¤	*posp = ::ftell(fp);¤}¤¤void mpcxc_fsetpos(FILE* fp, const long* posp) {¤	::fseek (fp, *posp, ACE_OS_SEEK_SET);¤}¤¤const char* mpcxc_encoding() {¤	return EncodingSingleton::instance() -> get_encoding();¤}¤¤code_t mpcxc_cd_cursys() {¤	const char* env = mpcxc_encoding();¤	if (!ACE_OS::strcasecmp(env, "koi")) return (cd_koi); else¤	if (!ACE_OS::strcasecmp(env, "win")) return (cd_win); else¤	if (!ACE_OS::strcasecmp(env, "dos")) return (cd_dos); else¤	if (!ACE_OS::strcasecmp(env, "mac")) return (cd_mac); else¤#if defined(WIN32) // GARANT_TO_IMPROVE_CODING¤		return (cd_dos);¤#else¤		return (cd_koi);¤#endif¤}¤¤char* mpcxc_strtolower(char* ptr, unsigned int len) {¤	for(unsigned int i=0; i<len; i++) {¤		ptr[i] = std::tolower(ptr[i], std::locale::classic());¤	}¤	return ptr;¤}¤¤char* mpcxc_strtoupper(char* ptr, unsigned int len) {¤	for(unsigned int i=0; i<len; i++) {¤		ptr[i] = std::toupper(ptr[i], std::locale::classic());¤	}¤	return ptr;¤}¤¤const int MPCXC_FILE_ATTR_RW = 0;¤const int MPCXC_FILE_ATTR_RO = 1;¤¤bool mpcxc_chmod(const char *fname, int mpcxc_mode) {¤#if !(defined(_MSC_VER) || defined(WIN32))¤	return true;¤#else¤	int wmod = (mpcxc_mode == MPCXC_FILE_ATTR_RO) ? _S_IREAD : _S_IREAD | _S_IWRITE;¤	int wres = _chmod(fname, wmod);¤	return (wres == 0) ? true : false;¤#endif¤}¤¤char* mpcxc_ltoa(long value_in, char* strout, int radix) {¤  long value = abs(value_in);¤  std::string s_res;¤  do {¤    s_res = chrdig(value % radix) + s_res; // GARANT_PLAN¤    value = value / radix;¤  } while(value!=0);¤  if (value_in < 0) {¤    s_res = '-' + s_res;¤  }¤  strcpy(strout, s_res.c_str());¤  return strout;¤}¤¤char* mpcxc_ultoa(unsigned long value, char* strout, int radix) {¤  std::string s_res;¤  do {¤    s_res = chrdig(value % radix) + s_res; // GARANT_PLAN¤    value = value / radix;¤  } while(value!=0);¤  strcpy(strout, s_res.c_str());¤  return strout;¤}¤¤char* mpcxc_ulltoa(double value_in, char* strout, int radix) {¤  ACE_UINT64 value = static_cast<ACE_UINT64>(value_in);¤  std::string s_res;¤  do {¤    s_res = chrdig(int(value % radix)) + s_res; // GARANT_PLAN¤    value = value / radix;¤  } while(value!=0);¤  strcpy(strout, s_res.c_str());¤  return strout;¤}¤¤¤void mpcxc_makepath(char *path, const char *drive, const char *dir, const char *fname, const char *ext) {¤  std::string s_drive = (drive != 0) ? drive : "";¤  std::string s_dir = (dir != 0) ? dir : "";¤  std::string s_fname = (fname != 0) ? fname : "";¤  std::string s_ext = (ext != 0) ? ext : "";¤  if ((s_drive.size() > 0) && (s_drive.find(":") == std::string::npos)) {¤		s_drive += ":";¤  }¤  if ((s_ext.size() > 0) && (s_ext.find(".") == std::string::npos)) {¤		s_ext = "." + s_ext;¤  }¤  if (s_dir.size () && s_dir[s_dir.size ()-1] != '\\' && s_dir[s_dir.size ()-1] != '/') {¤		s_dir += '\\';¤  }¤  std::string s_res = s_drive + s_dir + s_fname + s_ext;¤  strcpy(path, s_res.c_str());¤}¤¤ssize_t enum_sections (ACE_Configuration_Heap& cfg, char* lpReturnedString, const int nSize) {¤	const ACE_Configuration_Section_Key& root_section = cfg.root_section ();¤	ACE_TString name;¤	ssize_t read_bytes = 0;¤	for (int i = 0; nSize > read_bytes; ++i) {¤		int res = cfg.enumerate_sections (root_section, i, name);¤		if (res == 1) {¤			break;¤		} else if (res == -1) {¤			return ACE_OS::last_error();¤		}¤		const size_t len = std::min <size_t> (nSize, name.length () + 1);¤		ACE_OS::strncpy (lpReturnedString, name.c_str (), len);¤		lpReturnedString += len;¤		read_bytes += len;¤	}¤	*lpReturnedString = '\0';¤	return read_bytes;¤}¤¤ssize_t enum_values (¤	ACE_Configuration_Heap& cfg¤	, const ACE_Configuration_Section_Key& section¤	, char* lpReturnedString¤	, const int nSize¤) {¤	ACE_Configuration::VALUETYPE type;¤	ACE_TString name;¤	ssize_t read_bytes = 0;¤	for (int i = 0; nSize > read_bytes; ++i) {¤        int res = cfg.enumerate_values (section, i, name, type);¤		if (res == 1) {¤			break;¤		} else if (res == -1) {¤			return ACE_OS::last_error();¤		}¤		const size_t len = std::min <size_t> (nSize, name.length () + 1);¤		ACE_OS::strncpy (lpReturnedString, name.c_str (), len);¤		lpReturnedString += len;¤		read_bytes += len;¤	}¤	*lpReturnedString = '\0';¤	return read_bytes;¤}¤¤size_t MPCXC_GetPrivateProfileString(¤  const char* lpAppName¤  , const char* lpKeyName¤  , const char* lpDefault¤  , char* lpReturnedString¤  , unsigned int nSize¤  , const char* lpFileName¤  ) {¤	const unsigned len = (unsigned) ACE_OS::strnlen (lpDefault, nSize) + 1;¤	ACE_OS::strncpy (lpReturnedString, lpDefault, std::min (nSize, len));¤¤	ACE_Configuration_Heap cfg;¤	cfg.open ();¤	ACE_Ini_ImpExp import (cfg);¤	if (import.import_config (lpFileName)) {¤		LOG_E (("MPCXC_GetPrivateProfileString: ACE_Ini_ImpExp::import_config for '%s' is FAIL.", lpFileName));¤		return 0;¤	}¤	if (!lpAppName) {¤		return enum_sections (cfg, lpReturnedString, nSize);¤	}¤	ACE_Configuration_Section_Key section;¤	if (cfg.open_section (cfg.root_section (), lpAppName, 1, section)) {¤		LOG_E ((¤			"MPCXC_GetPrivateProfileString: open_section '[%s]' for '%s' is error %d."¤			, lpAppName, lpFileName, ACE_OS::last_error()¤		));¤		return 0;¤	}¤	if (!lpKeyName) {¤		return enum_values (cfg, section, lpReturnedString, nSize);¤	}¤	ACE_TString value;¤	if (cfg.get_string_value (section, lpKeyName, value)) {¤		LOG_E ((¤			"MPCXC_GetPrivateProfileString: get_string_value '%s' of '[%s]' for '%s' is error %d."¤			, lpKeyName, lpAppName, lpFileName, ACE_OS::last_error()¤		));¤		return 0;¤	}¤	size_t res = std::min <size_t> (nSize - 1, value.length ());¤	ACE_OS::strncpy (lpReturnedString, value.c_str (), res);¤	lpReturnedString [res] = '\0';¤	return res;¤  }¤            ¤bool MPCXC_WritePrivateProfileString(¤  const char* lpAppName¤  , const char* lpKeyName¤  , const char* lpString¤  , const char* lpFileName¤  ) {¤	ACE_Configuration_Heap cfg;¤	cfg.open ();¤	ACE_Ini_ImpExp import (cfg);¤	if (import.import_config (lpFileName) && ACE_OS::last_error () != ENOENT) {¤		LOG_E (("MPCXC_WritePrivateProfileString: ACE_Ini_ImpExp::import_config for '%s' is FAIL.", lpFileName));¤		return false;¤	}¤	if (!lpKeyName) {¤		if (cfg.remove_section (cfg.root_section (), lpAppName, 1)) {¤			LOG_E ((¤				"MPCXC_WritePrivateProfileString: remove_section '%s' for '%s' is error %d."¤				, lpAppName, lpFileName, ACE_OS::last_error ()¤			));¤			return false;¤		}¤		if (import.export_config (lpFileName)) {¤			LOG_E (("MPCXC_WritePrivateProfileString: ACE_Ini_ImpExp::export_config for '%s' is FAIL.", lpFileName));¤			return false;¤		}¤		return true;¤	}¤	ACE_Configuration_Section_Key section;¤	if (cfg.open_section (cfg.root_section (), lpAppName, 1, section)) {¤		LOG_E ((¤			"MPCXC_GetPrivateProfileString: open_section '[%s]' for '%s' is error %d."¤			, lpAppName, lpFileName, ACE_OS::last_error ()¤		));¤		return false;¤	}	¤	if (!lpString) {¤		if (cfg.remove_value (section, lpKeyName)) {¤			LOG_E ((¤				"MPCXC_WritePrivateProfileString: remove_value '%s' of '[%s]' for '%s' is error %d."¤				, lpKeyName, lpAppName, lpFileName, ACE_OS::last_error ()¤			));¤			return false;¤		}¤		if (import.export_config (lpFileName)) {¤			LOG_E (("MPCXC_WritePrivateProfileString: ACE_Ini_ImpExp::export_config for '%s' is FAIL.", lpFileName));¤			return false;¤		}¤		return true;¤	}¤	ACE_TString value (lpString);¤	if (cfg.set_string_value (section, lpKeyName, value)) {¤		LOG_E ((¤			"MPCXC_WritePrivateProfileString: set_string_value '%s' of '[%s]' for '%s' is error %d."¤			, lpKeyName, lpAppName, lpFileName, ACE_OS::last_error ()¤		));¤		return false;¤	}¤	if (import.export_config (lpFileName)) {¤		LOG_E (("MPCXC_WritePrivateProfileString: ACE_Ini_ImpExp::export_config for '%s' is FAIL.", lpFileName));¤		return false;¤	}¤	return true;¤  }¤¤bool MPCXC_CharToOem(const char* from, char* to) {¤  strcpy(to, from);¤  return true;¤}¤¤char* mpcxc_strrev(char *pOut) {¤	unsigned len = (unsigned) strlen(pOut);¤	char *pLast= pOut + len, *pFirst= pOut, *pTmp= pLast;¤	while((len-=2) > -1) {¤		pLast--;¤		*pTmp= *pLast;¤		*pLast= *pFirst;¤		*pFirst= *pTmp;¤		pFirst++;¤	}¤	*pTmp= '\0';¤	return pOut;¤}¤#include <fcntl.h>¤¤const int ACE_OS_O_RDONLY = O_RDONLY;¤const int ACE_OS_O_WRONLY = O_WRONLY;¤const int ACE_OS_O_RDWR = O_RDWR;¤const int ACE_OS_O_CREAT = O_CREAT;¤const int ACE_OS_O_TRUNC = O_TRUNC;¤const int ACE_OS_O_BINARY = O_BINARY;¤const int ACE_OS_O_TEXT = O_TEXT;¤const int ACE_OS_O_EXCL = O_EXCL;¤¤const int ACE_OS_SEEK_SET = SEEK_SET;¤const int ACE_OS_SEEK_CUR = SEEK_CUR;¤const int ACE_OS_SEEK_END = SEEK_END;¤¤#ifdef WIN32¤  // ôóíêöèÿ ïğåäîñòàâëÿşùàÿ ÂÑÅ ğåæèìû îòêğûòèÿ ôàéëîâ â Windows x32/x64		//¤  // äëÿ C-API Low-level input and output calls do not buffer or format data	//¤  extern errno_t __cdecl _sopen_helper (	const _TSCHAR *path,¤										int oflag,¤										int shflag,¤										int pmode,¤										int * pfh,¤										int bSecure	);¤#endif¤¤int c_io_open(const char* fname, int flags)¤{¤#ifdef WIN32¤	int retH= -1;¤	ACE_HANDLE tstH= ACE_INVALID_HANDLE;¤	if(*fname == '*')¤		return -1;¤	else{¤		if((flags & ACE_OS_O_EXCL) && ((flags & ACE_OS_O_WRONLY)||(flags & ACE_OS_O_RDWR))){¤		  int repeat= 5;¤		  char msgWW[]= "Open file in monopoly mode";¤		  while(repeat--){¤			int fh;¤			errno_t e;¤			if(flags & ACE_OS_O_CREAT){¤				e= _sopen_helper((const _TSCHAR *)fname, flags & (~ACE_OS_O_CREAT), 0x10, 0, &fh, 0);¤				if( e )¤					e= _sopen_helper((const _TSCHAR *)fname, flags, 0x10, _S_IWRITE, &fh, 0);¤			}else¤				e= _sopen_helper((const _TSCHAR *)fname, flags, 0x10, 0, &fh, 0);¤¤			retH= e ? -1 : fh;¤¤			if(retH == -1){¤				if(repeat == 4){¤					if((tstH= ::ACE_OS::open(	fname¤												, flags & (~(ACE_OS_O_WRONLY|ACE_OS_O_RDWR|ACE_OS_O_EXCL|ACE_OS_O_CREAT))¤												, ACE_DEFAULT_OPEN_PERMS)¤							) != ACE_INVALID_HANDLE)¤					{¤						::ACE_OS::close(tstH);¤						tstH= ACE_INVALID_HANDLE;¤						LOG_W(("Not first %s(%s)", msgWW, fname));¤					}else¤						return -1;¤				}¤				ace_os_sleep	(	200¤#ifdef _DEBUG¤									* 10¤#endif¤								);¤			}else{ ¤				if(repeat < 4)¤					LOG_W(("%s(%s)", msgWW, fname));¤				repeat= 0;¤			}¤		  }¤		  if(retH == -1){¤			  if(flags & ACE_OS_O_CREAT)¤				;¤			  else{¤				char msgWW[]= "Not monopoly C-RTL %s Open exist file(%s)";¤				retH= ::_open(fname, flags & (~ACE_OS_O_EXCL), _S_IREAD|_S_IWRITE);¤				if(retH != -1)¤					LOG_W((msgWW, "ReadWrite", fname));¤				else if((flags & ACE_OS_O_WRONLY)||(flags & ACE_OS_O_RDWR)){¤					retH= ::_open(fname, flags & (~(ACE_OS_O_EXCL|ACE_OS_O_WRONLY|ACE_OS_O_RDWR)), _S_IREAD|_S_IWRITE);¤					if(retH != -1)¤						LOG_W((msgWW, "ReadOnly", fname));¤				}¤			  }¤		  }¤		}else¤			retH= ::_open(fname, flags, _S_IREAD|_S_IWRITE);¤¤		if(retH == -1 && (tstH= ::ACE_OS::open(	fname¤												, flags & (~(ACE_OS_O_WRONLY|ACE_OS_O_RDWR|ACE_OS_O_EXCL|ACE_OS_O_CREAT))¤												, ACE_DEFAULT_OPEN_PERMS)¤							) != ACE_INVALID_HANDLE)¤		{¤			LOG_W(("Not find C-RTL Handle for exist file(%s)", fname));¤			// çàêîí÷èëèñü ôàéëîâûå õåíäëû C-RTL //¤			if((flags & ACE_OS_O_WRONLY)||(flags & ACE_OS_O_RDWR)){¤				ACE_HANDLE tstWH= ::ACE_OS::open(fname, (flags & (~(ACE_OS_O_CREAT|ACE_OS_O_EXCL))), ACE_DEFAULT_OPEN_PERMS);¤				if(tstWH != ACE_INVALID_HANDLE){¤					::ACE_OS::close(tstH);¤					tstH= tstWH;¤				}¤			}¤			{¤				ACE_Guard<ACE_Recursive_Thread_Mutex> lock(mutexNdtCloneTableUpperCRTL);¤				if(nextHandle_NdtCloneTableUpperCRTL > -1)¤					nextHandle_NdtCloneTableUpperCRTL= -100;¤				else¤					nextHandle_NdtCloneTableUpperCRTL--;¤¤				std::map <int, ACE_HANDLE>::const_iterator map_it = NdtCloneTableUpperCRTL_Cleared.begin();¤				if(map_it != NdtCloneTableUpperCRTL_Cleared.end()){¤					int fndF= map_it->first;¤					NdtCloneTableUpperCRTL.insert(std::map <int, ACE_HANDLE>::value_type (fndF, tstH));¤					NdtCloneTableUpperCRTL_Cleared.erase(fndF);¤				}else{¤					if(nextHandle_NdtCloneTableUpperCRTL > -1)¤						return -1;¤					NdtCloneTableUpperCRTL.insert(std::map <int, ACE_HANDLE>::value_type (nextHandle_NdtCloneTableUpperCRTL, tstH));¤				}¤			}¤			return nextHandle_NdtCloneTableUpperCRTL;¤¤		}else if(retH == -1 && tstH == ACE_INVALID_HANDLE){¤			if(flags & ACE_OS_O_CREAT){¤				LOG_E(("Not Create file in monopoly mode (%s)", fname));¤			}else¤				return -1;¤		}¤	}¤	return retH;¤#else¤	return ace_os_open(fname, flags);¤#endif¤}¤¤int c_io_read(int fd, void* buf, int len)¤{¤#ifdef WIN32¤	if(fd < -99){¤		ACE_HANDLE tstH;¤		{¤			ACE_Guard<ACE_Recursive_Thread_Mutex> lock(mutexNdtCloneTableUpperCRTL);¤			tstH= NdtCloneTableUpperCRTL.find(fd)->second;¤		}¤		ssize_t rres= ::ACE_OS::read(tstH, buf, len);¤		return (int)(rres & 0x7fffffff);¤	}¤	return ::_read(fd,buf,len);¤#else¤	return ace_os_read(fd,buf,len);¤#endif¤}¤int c_io_write(int fd, const void* buf, int len)¤{¤#ifdef WIN32¤	if(fd < -99){¤		ACE_HANDLE tstH;¤		{¤			ACE_Guard<ACE_Recursive_Thread_Mutex> lock(mutexNdtCloneTableUpperCRTL);¤			tstH= NdtCloneTableUpperCRTL.find(fd)->second;¤		}¤		ssize_t rres= ::ACE_OS::write(tstH, buf, len);¤		return (int)(rres & 0x7fffffff);¤	}¤	return ::_write(fd,buf,len);¤#else¤	return ace_os_write(fd,buf,len);¤#endif¤}¤int c_io_lseek(int fd, int offset, int whence)¤{¤#ifdef WIN32¤	if(fd < -99){¤		ACE_HANDLE tstH;¤		{¤			ACE_Guard<ACE_Recursive_Thread_Mutex> lock(mutexNdtCloneTableUpperCRTL);¤			tstH= NdtCloneTableUpperCRTL.find(fd)->second;¤		}¤		ssize_t rres= ::ACE_OS::lseek(tstH, offset, whence);¤		return (int)(rres & 0x7fffffff);¤	}¤	return ::_lseek(fd, offset, whence);¤#else¤	return ace_os_lseek(fd, offset, whence);¤#endif¤}¤int c_io_tell(int fd)¤{¤#ifdef WIN32¤	return c_io_lseek(fd, 0, ACE_OS_SEEK_CUR);¤#else¤	return ace_os_tell(fd);¤#endif¤}¤int c_io_filesize(int fd)¤{¤#ifdef WIN32¤	return ::_lseek(fd, 0, SEEK_END);¤#else¤	return ace_os_filesize(fd);¤#endif¤}¤int c_io_file_flush(int fd)¤{¤#ifdef WIN32¤	/*¤	if(fd < -99){¤		ACE_HANDLE tstH;¤		{¤			ACE_Guard<ACE_Recursive_Thread_Mutex> lock(mutexNdtCloneTableUpperCRTL);¤			tstH= NdtCloneTableUpperCRTL.find(fd)->second;¤			//NdtCloneTableUpperCRTL_Cleared.insert(std::map <int, ACE_HANDLE>::value_type (fd, tstH));¤			NdtCloneTableUpperCRTL.erase(fd);¤		}¤		return 0;//::ACE_OS::_commit(tstH);¤	}¤	return ::_commit(fd);¤	*/¤	return 0;¤#else¤	return ace_os_close(fd);¤#endif¤}¤int c_io_close(int fd)¤{¤#ifdef WIN32¤	if(fd < -99){¤		ACE_HANDLE tstH;¤		{¤			ACE_Guard<ACE_Recursive_Thread_Mutex> lock(mutexNdtCloneTableUpperCRTL);¤			tstH= NdtCloneTableUpperCRTL.find(fd)->second;¤			//NdtCloneTableUpperCRTL_Cleared.insert(std::map <int, ACE_HANDLE>::value_type (fd, tstH));¤			NdtCloneTableUpperCRTL.erase(fd);¤		}¤		return ::ACE_OS::close(tstH);¤	}¤	return ::_close(fd);¤#else¤	return ace_os_close(fd);¤#endif¤}¤¤int ace_os_open(const char* fname, int flags) {¤	std::string pip_fname = platform_independent_path(fname);¤//MyMutexAutoLocker mmal;¤	int prot = 0666;¤  #if defined(WIN32) || defined(_MSC_VER)¤	prot = ACE_DEFAULT_OPEN_PERMS;¤  #endif  	¤	ACE_HANDLE handle = ::ACE_OS::open(pip_fname.c_str(), flags, prot);¤//	std::string dbgstrfl;¤//	dbgstrfl += (flags & O_CREAT) ? "c" : "-";¤//	dbgstrfl += (flags & O_TRUNC) ? "t" : "-";¤//	dbgstrfl += (flags & O_EXCL) ? "e" : "-";¤//	dbgstrfl += (flags & O_RDONLY) ? "r" : "-";¤//	dbgstrfl += (flags & O_WRONLY) ? "w" : "-";¤//	dbgstrfl += (flags & O_RDWR) ? "f" : "-";¤//	dbgstrfl += (flags & O_BINARY) ? "b" : "-";¤//	dbgstrfl += (flags & O_TEXT) ? "x" : "-";¤//std::cerr<<"thr_self:"<<ACE_OS::thr_self()<<"|"<<"ace_os_open(pip_fname="<<pip_fname<<",flags="<<dbgstrfl<<")="<<handle<<std::endl;¤	return (handle != ACE_INVALID_HANDLE) ? (int)(handle) : -1;¤}¤/*¤int ace_os_open3(const char* fname, int flags, int prot) {¤	ACE_HANDLE handle = ::ACE_OS::open(fname, flags, prot);¤	return (handle != ACE_INVALID_HANDLE) ? (int)(handle) : -1;¤}¤*/¤int ace_os_read(int fd, void* buf, size_t len) {¤//MyMutexAutoLocker mmal;¤	ACE_HANDLE handle = (ACE_HANDLE)(fd);¤	ssize_t rres = ::ACE_OS::read(handle, buf, len);¤//std::cerr<<"thr_self:"<<ACE_OS::thr_self()<<"|"<<"ace_os_read(handle="<<handle<<",buf="<<buf<<",len="<<len<<")="<<rres<<"|crc32="<<ACE::crc32(reinterpret_cast<const char*>(buf), len)<<std::endl;¤	return (int) rres;¤}¤¤int ace_os_write(int fd, const void* buf, size_t len) {¤//MyMutexAutoLocker mmal;¤	ACE_HANDLE handle = (ACE_HANDLE)(fd);¤	ssize_t wres = ::ACE_OS::write(handle, buf, len);¤//std::cerr<<"thr_self:"<<ACE_OS::thr_self()<<"|"<<"ace_os_write(handle="<<handle<<",buf="<<buf<<",len="<<len<<")="<<wres<<"|crc32="<<ACE::crc32(reinterpret_cast<const char*>(buf), len)<<std::endl;¤	return (int) wres;¤}¤¤long ace_os_lseek(int fd, long offset, int whence) {¤//MyMutexAutoLocker mmal;¤	ACE_HANDLE handle = (ACE_HANDLE)(fd);¤	off_t lres = ::ACE_OS::lseek(handle, offset, whence);¤//std::cerr<<"thr_self:"<<ACE_OS::thr_self()<<"|"<<"ace_os_lseek(handle="<<handle<<",offset="<<offset<<",whence="<<whence<<")="<<lres<<std::endl;¤	return lres;¤}¤¤long ace_os_tell(int fd) {¤	ACE_HANDLE handle = (ACE_HANDLE)(fd);¤	off_t lres = ::ACE_OS::lseek(handle, 0, SEEK_CUR);¤	return lres;¤}¤¤long ace_os_filesize(int fd) {¤	ACE_HANDLE handle = (ACE_HANDLE)(fd);¤	off_t lres = ::ACE_OS::filesize(handle);¤	return lres;¤}¤¤#ifdef ftruncate¤#undef ftruncate¤#endif¤int ace_os_ltrunc(int fd, long loffset) {¤	if (::ACE_OS::ftruncate((ACE_HANDLE)(fd), loffset) == -1) {¤		//std::cerr<<"ace_os_ftruncate: -1ftrunc: "<<handle<<": "<<loffset<<std::endl;¤		return -1;¤	}¤	return 0;¤}¤¤int ace_os_ftruncate(int fd, long loffset) {¤//MyMutexAutoLocker mmal;¤	ACE_HANDLE handle = (ACE_HANDLE)(fd);¤	¤//std::cerr<<"thr_self:"<<ACE_OS::thr_self()<<"|"<<"ace_os_ftruncate(h="<<handle<<",loffset="<<loffset<<")"<<std::endl;¤	¤	off_t lpos = ::ACE_OS::lseek(handle, 0, SEEK_CUR); // gets current file position¤	if (lpos == -1) {¤		//std::cerr<<"ace_os_ftruncate: -1getpos: "<<handle<<std::endl;¤		return -1;¤	}¤	if (::ACE_OS::ftruncate(handle, loffset) == -1) {¤		//std::cerr<<"ace_os_ftruncate: -1ftrunc: "<<handle<<": "<<loffset<<std::endl;¤		return -1;¤	}¤	// restore file position or set to the end ¤	off_t lres = ::ACE_OS::lseek(handle, lpos, SEEK_SET);¤	//off_t lres = ACE_OS::lseek(handle, ( (lpos < loffset) ? lpos : loffset ), SEEK_SET);¤	if (lres == -1) {¤		//std::cerr<<"ace_os_ftruncate: -1setpos: "<<handle<<": "<<lpos<<std::endl;¤		return -1;¤	}¤	¤//std::cerr<<"thr_self:"<<ACE_OS::thr_self()<<"|"<<"ace_os_ftruncate()=SUCCESS"<<std::endl;¤		¤	return 0;¤}¤¤int ace_os_close(int fd) {¤	ACE_HANDLE handle = (ACE_HANDLE)(fd);¤	int res = ::ACE_OS::close(handle);¤/*	¤	if (res == -1) {¤		std::cerr<<"ace_os_close: -1: "<<handle<<std::endl;¤	}¤*/	¤	return res;¤}¤¤extern int ace_os_file_flush(int fd)¤{¤#ifdef WIN32¤	return ::_commit(fd);¤#else¤	return -1;¤#endif¤}¤¤int ace_os_unlink(const char* fname) {¤	int res = ::ACE_OS::unlink(platform_independent_path(fname).c_str());¤/*	¤	if (res == -1) {¤		std::cerr<<"ace_os_unlink: -1: "<<fname<<std::endl;¤	}¤*/	¤	return res;¤}¤¤int ace_os_rename(const char* fname1, const char* fname2) {¤	int res = ::ACE_OS::rename(platform_independent_path(fname1).c_str(), platform_independent_path(fname2).c_str());¤/*	¤	if (res == -1) {¤		std::cerr<<"ace_os_rename: -1: "<<fname1<<": "<<fname2<<std::endl;¤	}¤*/	¤	return res;¤}¤¤int ace_os_copyfile(const char* fname1, const char* fname2) {¤#ifdef WIN32¤	CopyFile(platform_independent_path(fname1).c_str(), platform_independent_path(fname2).c_str(),1);¤	return 0;¤#else¤	return -1;¤#endif¤}¤¤void ace_os_date_win32(long *dosdateptr) {¤	struct DosDateValue {¤		unsigned short ddv_day: 5;¤		unsigned short ddv_month: 4;¤		unsigned short ddv_year: 7; // since 1980¤	};¤	union DosDate {¤		DosDateValue dd_val;¤		ACE_UINT16 ui_val;¤	};¤	struct DosTimeValue {¤		unsigned short dtv_sec: 5; // div by 2¤		unsigned short dtv_min: 6; // 0-59¤		unsigned short dtv_hour: 5; // 0-23¤	};¤	union DosTime {¤		DosTimeValue dt_val;¤		ACE_UINT16 ui_val;¤	};¤	time_t tv;¤	time(&tv);¤	tm* mygmt = ::ACE_OS::gmtime(&tv); // return is rewritable static from an std. lib¤	DosDate dd;¤	dd.dd_val.ddv_day = mygmt->tm_mday;¤	dd.dd_val.ddv_month = mygmt->tm_mon+1;¤	dd.dd_val.ddv_year = mygmt->tm_year - (1980 - 1900);¤	*(reinterpret_cast<unsigned short *>(dosdateptr)) = dd.ui_val;¤	DosTime dt;¤	dt.dt_val.dtv_sec = mygmt->tm_sec/2+1;¤	dt.dt_val.dtv_min = mygmt->tm_min;¤	dt.dt_val.dtv_hour = mygmt->tm_hour;¤	*(reinterpret_cast<unsigned short *>(dosdateptr)+1) = dt.ui_val;¤}¤¤void ace_os_sleep(unsigned long milliseconds) {¤	ACE_Time_Value tv;¤	tv.msec(static_cast<long>(milliseconds));¤	::ACE_OS::sleep(tv);¤}¤¤int ace_os_mkdir(const char* dirname) {¤	int prot = 0755;¤#if defined(WIN32) || defined(_MSC_VER)¤	prot = ACE_DEFAULT_DIR_PERMS;¤#endif  ¤	int res = ::ACE_OS::mkdir(platform_independent_path(dirname).c_str(), mode_t(prot));¤	return res;¤}¤¤extern int ace_os_dup(int fd) {¤	ACE_HANDLE handle = ACE_OS::dup((ACE_HANDLE)(fd));¤	return (handle != ACE_INVALID_HANDLE) ? (int)(handle) : -1;¤}¤¤extern FILE* ace_os_fdopen(int fd, const char* mode) {¤	FILE* res = ACE_OS::fdopen((ACE_HANDLE)(fd), mode);¤	return res;¤}¤¤} // extern "C"¤//#UC END# *45011F4F00FA_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*45011F4F00FA*"
		    value      	"//#UC START# *45011F4F00FA*¤//#UC END# *45011F4F00FA*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45011F4F00FA_USER_INCLUDES*"
		    value      	(value Text 
|//#UC START# *45011F4F00FA_USER_INCLUDES*¤#if defined(WIN32) || defined(_MSC_VER)¤#define BUILTIN_CDECLSTDCALL¤#else¤#define IGNORE_CDECLSTDCALL¤#endif¤¤#if !defined(WIN32) && !defined(_MSC_VER)¤	#define PLATFORM_INDEPENDENT_PATH¤#endif¤¤#if !defined(BUILTIN_CDECLSTDCALL) && defined(IGNORE_CDECLSTDCALL)¤#define __cdecl¤#define __stdcall¤#define __declspec(x)¤#elif !defined(BUILTIN_CDECLSTDCALL) && !defined(IGNORE_CDECLSTDCALL)¤#error Attributes __cdecl/__stdcall have no sence.¤#else // defined(BUILTIN_CDECLSTDCALL) && takes no care about IGNORE_CDECLSTDCALL¤// __cdecl/__stdcall are keywords of a compiler¤#endif¤¤#define MPCXC_MAX_PATH 256 // remember to eliminate <cstring> code from Garant at all in the future¤#define MPCXC_PATHBRK '\\' // these ancient macros should be replaced by constants¤¤#if !defined(__cplusplus)¤typedef int bool;¤#endif¤¤// ACE is first include in C++ mode to avoid /MD linkage in *_Static conf. under Windows¤#if defined(__cplusplus)¤#include "ace/ACE.h"¤#include <iostream>¤#include <cstdio>¤#else¤#include <stdio.h>¤#endif¤¤#if defined(__cplusplus)¤¤#include "ace/Basic_Types.h"¤¤// GARANT_MPCXC: Multi-Platform Common eXtra Code with C++ linkage¤¤#include <string>¤#include <stdexcept>¤std::string platform_independent_path(const std::string& path) /*throw (std::logic_error)*/;¤extern void mpcxc_set_se_handler ();¤extern char* mpcxc_ulltoa_cpp(ACE_UINT64, char*, int);¤¤extern "C" {¤#endif¤¤#if !defined(WIN32) && !defined(_MSC_VER)¤extern void* __cdecl alloca(size_t); // native on all platforms supported¤#else¤#include <malloc.h>¤#endif¤¤// GARANT_MPCXC: Multi-Platform Common eXtra Code with C linkage¤¤extern const size_t MPCXC_STACK_SIZE;¤¤typedef int (*MainFunctionPtr)(int, char *[]);¤extern int mpcxc_run_main_stack_size (MainFunctionPtr, int, char *[], size_t);¤¤extern long mpcxc_timezone(void);¤¤// slashes replacement¤extern FILE* mpcxc_fopen(const char* fname, const char* mode);¤¤extern long mpcxc_fseek(FILE*, long, int);¤¤extern void mpcxc_fgetpos(FILE*, long*);¤extern void mpcxc_fsetpos(FILE*, const long*);¤¤enum code_t ¤{¤	cd_koi = 0,¤	cd_dos = 1,¤	cd_win = 2,¤	cd_mac = 3¤};¤¤extern enum code_t mpcxc_cd_cursys(void); // GARANT_CROSSP: codepage of target OS¤extern const char* mpcxc_encoding(void); // GARANT_CROSSP: return "win", "koi", "dos", "mac"¤¤extern char* mpcxc_strtolower(char*, unsigned int);¤extern char* mpcxc_strtoupper(char*, unsigned int);¤¤extern const int MPCXC_FILE_ATTR_RW;¤extern const int MPCXC_FILE_ATTR_RO;¤extern bool mpcxc_chmod(const char *fname, int mpcxc_mode);¤¤extern void mpcxc_makepath(char *path, const char *drive, const char *dir, const char *fname, const char *ext); // tmp¤¤extern char* mpcxc_ltoa(long, char*, int);¤extern char* mpcxc_ultoa(unsigned long, char*, int);¤extern char* mpcxc_ulltoa(double, char*, int);¤¤extern size_t MPCXC_GetPrivateProfileString(¤  const char* lpAppName¤  , const char* lpKeyName¤  , const char* lpDefault¤  , char* lpReturnedString¤  , unsigned int nSize¤  , const char* lpFileName¤  );            ¤extern bool MPCXC_WritePrivateProfileString(¤  const char* lpAppName¤  , const char* lpKeyName¤  , const char* lpString¤  , const char* lpFileName¤  );¤        ¤extern bool MPCXC_CharToOem(const char* from, char* to);¤¤extern int __cdecl getch(void); // native under windows¤¤extern char* mpcxc_strrev(char *);¤¤extern const int ACE_OS_O_RDONLY;¤extern const int ACE_OS_O_WRONLY;¤extern const int ACE_OS_O_RDWR;¤extern const int ACE_OS_O_CREAT;¤extern const int ACE_OS_O_TRUNC;¤extern const int ACE_OS_O_BINARY;¤extern const int ACE_OS_O_TEXT;¤extern const int ACE_OS_O_EXCL;¤¤extern const int ACE_OS_SEEK_SET;¤extern const int ACE_OS_SEEK_CUR;¤extern const int ACE_OS_SEEK_END;¤¤extern int c_io_open(const char* fname, int flags);¤extern int c_io_read(int fd, void* buf, int len);¤extern int c_io_write(int fd, const void* buf, int len);¤extern int c_io_lseek(int fd, int offset, int whence);¤extern int c_io_tell(int fd);¤extern int c_io_filesize(int fd);¤extern int c_io_close(int fd);¤extern int c_io_file_flush(int fd);¤¤extern int ace_os_open(const char* fname, int flags);¤extern int ace_os_open3(const char* fname, int flags, int prot);¤extern int ace_os_read(int fd, void* buf, size_t len);¤extern int ace_os_write(int fd, const void* buf, size_t len);¤extern long ace_os_lseek(int fd, long offset, int whence);¤extern long ace_os_tell(int fd);¤extern long ace_os_filesize(int fd);¤extern int ace_os_ftruncate(int fd, long offset);¤extern int ace_os_close(int fd);¤extern int ace_os_unlink(const char* fname);¤extern int ace_os_rename(const char* fname1, const char* fname2);¤extern int ace_os_copyfile(const char* fname1, const char* fname2);¤extern void ace_os_date_win32(long *dosdateptr);¤extern void ace_os_sleep(unsigned long milliseconds);¤extern int ace_os_mkdir(const char* dirname);¤extern int ace_os_dup(int);¤extern FILE* ace_os_fdopen(int, const char*);¤extern int ace_os_file_flush(int fd);¤¤#ifdef __cplusplus¤} // extern "C"¤#endif¤//#UC END# *45011F4F00FA_USER_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45011F4F00FA_USER_DEFINITION*"
		    value      	"//#UC START# *45011F4F00FA_USER_DEFINITION*¤//#UC END# *45011F4F00FA_USER_DEFINITION*")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/shared/Core/fix/mpcxc.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/Core/fix/mpcxc.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/mpcxc|45011F4F00FA
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16662205021"))
	    quid       	"45011F4F00FA"
	    documentation 	
|ìíîæåñòâåííûå èñïğàâëåíèÿ ACE, è äğ...
|Îò ıòîãî ÍÓÆÍÎ èçáàâèòüñÿ!!!
	    
	    stereotype 	"UtilityPack"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"16657314488"))
		    quid       	"450121E0035B"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::Core::os::IniFile"
		    quidu      	"450034D40290")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"16657314873"))
		    quid       	"450121EC00CB"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::Core::fix::Win32Exception"
		    quidu      	"45011F6B0000")
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"16657315272"))
		    quid       	"450EA61A008C"
		    stereotype 	"uses"
		    supplier   	"Logical View::shared::Core::sys::Logs"
		    quidu      	"450E97E40167"))
	    language   	"MDA Generator")
	(object Class "Win32Exception"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*45011F6B0000_CUSTOM_INCLUDES*"
		    value      	(value Text 
|//#UC START# *45011F6B0000_CUSTOM_INCLUDES*¤#if defined(ACE_HAS_WINNT4) && (ACE_HAS_WINNT4 != 0)¤#include "eh.h"¤#include "shared/Core/sys/Logs.h"¤#endif¤//#UC END# *45011F6B0000_CUSTOM_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*45011F6B0000*"
		    value      	(value Text 
|//#UC START# *45011F6B0000*¤#if defined(ACE_HAS_WINNT4) && (ACE_HAS_WINNT4 != 0)¤void Win32Exception::install_handler() {¤	_set_se_translator(Win32Exception::translate);¤}¤¤void Win32Exception::translate (unsigned code, EXCEPTION_POINTERS* info) {¤	// Windows guarantees that *(info->ExceptionRecord) is valid¤	switch (code) {¤		case EXCEPTION_ACCESS_VIOLATION: throw AccessViolation (*(info->ExceptionRecord));¤		default:                         throw Win32Exception (*(info->ExceptionRecord));¤	}¤}¤¤Win32Exception::Win32Exception (const EXCEPTION_RECORD& info)¤	: m_what ("Win32 exception"), m_where (info.ExceptionAddress), m_code (info.ExceptionCode) {¤	switch (info.ExceptionCode) {¤		case EXCEPTION_ACCESS_VIOLATION         : m_what = "EXCEPTION_ACCESS_VIOLATION";         break;¤		case EXCEPTION_ARRAY_BOUNDS_EXCEEDED    : m_what = "EXCEPTION_ARRAY_BOUNDS_EXCEEDED";    break;¤		case EXCEPTION_BREAKPOINT               : m_what = "EXCEPTION_BREAKPOINT";               break;¤		case EXCEPTION_DATATYPE_MISALIGNMENT    : m_what = "EXCEPTION_DATATYPE_MISALIGNMENT";    break;¤		case EXCEPTION_FLT_DENORMAL_OPERAND     : m_what = "EXCEPTION_FLT_DENORMAL_OPERAND";     break;¤		case EXCEPTION_FLT_DIVIDE_BY_ZERO       : m_what = "EXCEPTION_FLT_DIVIDE_BY_ZERO";       break;¤		case EXCEPTION_FLT_INEXACT_RESULT       : m_what = "EXCEPTION_FLT_INEXACT_RESULT";       break;¤		case EXCEPTION_FLT_INVALID_OPERATION    : m_what = "EXCEPTION_FLT_INVALID_OPERATION";    break;¤		case EXCEPTION_FLT_OVERFLOW             : m_what = "EXCEPTION_FLT_OVERFLOW";             break;¤		case EXCEPTION_FLT_STACK_CHECK          : m_what = "EXCEPTION_FLT_STACK_CHECK";          break;¤		case EXCEPTION_FLT_UNDERFLOW            : m_what = "EXCEPTION_FLT_UNDERFLOW";            break;¤		case EXCEPTION_ILLEGAL_INSTRUCTION      : m_what = "EXCEPTION_ILLEGAL_INSTRUCTION";      break;¤		case EXCEPTION_IN_PAGE_ERROR            : m_what = "EXCEPTION_IN_PAGE_ERROR";            break;¤		case EXCEPTION_INT_DIVIDE_BY_ZERO       : m_what = "EXCEPTION_INT_DIVIDE_BY_ZERO";       break;¤		case EXCEPTION_INT_OVERFLOW             : m_what = "EXCEPTION_INT_OVERFLOW";             break;¤		case EXCEPTION_INVALID_DISPOSITION      : m_what = "EXCEPTION_INVALID_DISPOSITION";      break;¤		case EXCEPTION_NONCONTINUABLE_EXCEPTION : m_what = "EXCEPTION_NONCONTINUABLE_EXCEPTION"; break;¤		case EXCEPTION_PRIV_INSTRUCTION         : m_what = "EXCEPTION_PRIV_INSTRUCTION";         break;¤		case EXCEPTION_SINGLE_STEP              : m_what = "EXCEPTION_SINGLE_STEP";              break;¤		case EXCEPTION_STACK_OVERFLOW           : m_what = "EXCEPTION_STACK_OVERFLOW";           break;¤	}¤	LOG_A (("Win32 exception [%s] translated to Core::Win32Exception", m_what));¤}¤¤AccessViolation::AccessViolation (const EXCEPTION_RECORD& info)¤	: Win32Exception(info), m_is_write (false), m_bad_address (0) {¤	m_is_write = info.ExceptionInformation[0] == 1;¤	m_bad_address = reinterpret_cast<Win32Exception::Address> (info.ExceptionInformation[1]);¤}¤#endif¤//#UC END# *45011F6B0000*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45011F6B0000_USER_INCLUDES*"
		    value      	(value Text 
|//#UC START# *45011F6B0000_USER_INCLUDES*¤#if defined(ACE_HAS_WINNT4) && (ACE_HAS_WINNT4 != 0)¤#include "windows.h"¤#include <exception>¤#else¤#endif¤¤¤// adopted from: http://www.thunderguy.com/semicolon/2002/08/15/visual-c-exception-handling/3/¤//¤// Note: ¤//   Therefore, if a Visual C++ program contains catch(...), ¤//   then it should be compiled with asynchronous exception¤//   handling enabled (/EHa). Otherwise, if the catch(...)¤//   catches a Win32 exception, some of the unwindable objects¤//   in the function where the exception occurs may not get unwound¤//   (Visual C++ Programmers Guide), which could lead to resource¤//   leaks or worse.¤//¤//¤// Usage:¤//     #include "Win32Exception.h"                                                                           ¤//     #include <iostream>                                                                                   ¤//                                                                                                           ¤//     int main() {                                                                                          ¤//     	Core::Win32Exception::install_handler();                                                             ¤//     	try {                                                                                               ¤//     		DoComplexAndErrorProneThings();                                                                   ¤//     	} catch (const AccessViolation& e) {                                                                ¤//     		std::cerr << e.what() << " at " << std::hex << e.where() << ": bad "                              ¤//     							<< (e.is_write() ? "write" : "read") << " on " << e.bad_address () << std::endl;        ¤//     	} catch (const Win32Exception& e) {                                                                 ¤//     		std::cerr << e.what() << " (code " << std::hex << e.code() << ") at " << e.where() << std::endl;  ¤//     	}                                                                                                   ¤//     }                                                                                                     ¤¤//#UC END# *45011F6B0000_USER_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45011F6B0000_USER_DEFINITION*"
		    value      	(value Text 
|//#UC START# *45011F6B0000_USER_DEFINITION*¤#if defined(ACE_HAS_WINNT4) && (ACE_HAS_WINNT4 != 0)¤class Win32Exception : public Core::Exception {¤public:¤	typedef const void* Address; // OK on Win32 platform¤¤	static void install_handler ();¤¤	virtual const char* what() const {¤		return m_what;¤	};¤¤	virtual const char* uid () const /*throw ()*/ {¤		return "Core::Win32Exception";¤	}¤¤	Address where() const {¤	 	return m_where;¤	};¤¤	unsigned code() const {¤	 	return m_code;¤	};¤¤protected:¤	Win32Exception(const EXCEPTION_RECORD& info);¤	static void translate(unsigned int code, EXCEPTION_POINTERS* info);¤¤private:¤	const char* m_what;¤	Address m_where;¤	unsigned int m_code;¤};¤¤class AccessViolation : public Win32Exception {¤public:¤	bool is_write() const {¤		return m_is_write;¤	};¤	¤	Address bad_address() const {¤		return m_bad_address;¤	};¤¤	virtual const char* uid () const /*throw ()*/ {¤		return "Core::AccessViolation";¤	}¤¤private:¤	bool m_is_write;¤	Address m_bad_address;¤	AccessViolation(const EXCEPTION_RECORD& info);¤	friend static void Win32Exception::translate(unsigned code, EXCEPTION_POINTERS* info);¤};¤#endif¤//#UC END# *45011F6B0000_USER_DEFINITION*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/shared/Core/fix/Win32Exception.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/Core/fix/Win32Exception.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/Win32Exception|45011F6B0000
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16661989592"))
	    quid       	"45011F6B0000"
	    documentation 	"õàê äëÿ ïğàâèëüíîé ğàáîòû ñ win32 èñêëş÷åíèÿìè"
	    stereotype 	"UtilityPack"
	    used_nodes 	(list uses_relationship_list
		(object Uses_Relationship
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ElementCreationOrder"
			    value      	"16657316208"))
		    quid       	"4517CB0F0213"
		    supplier   	"Logical View::shared::Core::sys::Exception"
		    quidu      	"450035A90222"))
	    language   	"MDA Generator")
	(object Class "PragmaWarningDisable"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45011FA90157_USER_INCLUDES*"
		    value      	"//#UC START# *45011FA90157_USER_INCLUDES*¤//#UC END# *45011FA90157_USER_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45011FA90157_USER_DEFINITION*"
		    value      	"//#UC START# *45011FA90157_USER_DEFINITION*¤#pragma warning (disable: 4290) //  c++ exception specification ignored¤#pragma warning (disable: 4503) // 'identifier': decorated name length exceeded, name was truncated¤#pragma warning (disable: 4786) // 'identifier': identifier was truncated to 'number' characters in the debug information¤#pragma warning (disable: 4284) // return type for 'identifier::operator >' is not a UDT or reference to a UDT. Will produce errors if applied using infix notation¤//#UC END# *45011FA90157_USER_DEFINITION*")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/Core/fix/PragmaWarningDisable.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/PragmaWarningDisable|45011FA90157
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16662053178"))
	    quid       	"45011FA90157"
	    documentation 	"õàê äëÿ ïîäàâëåíèÿ íàçîéëèâûõ STL âàğíèíãîâ"
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator")
	(object Class "win_afx"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local helper"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45740CEE0280_USER_INCLUDES*"
		    value      	(value Text 
|//#UC START# *45740CEE0280_USER_INCLUDES*¤#include "shared/Core/sys/std_inc.h"¤¤#define _ATL_FREE_THREADED¤#define _ATL_NO_AUTOMATIC_NAMESPACE¤#define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS	// some CString constructors will be explicit¤#define _ATL_ALL_WARNINGS // turns off ATL's hiding of some common and often safely ignored warning messages¤¤#if defined (_NATIVE_WCHAR_T_DEFINED)¤#if defined (_DEBUG)¤#pragma comment (lib, "comsuppwd.lib")¤#else // defined (_DEBUG)¤#pragma comment (lib, "comsuppw.lib")¤#endif // defined (_DEBUG)¤#else // defined (_NATIVE_WCHAR_T_DEFINED)¤#if defined (_DEBUG)¤#pragma comment (lib, "comsuppd.lib")¤#else // defined (_DEBUG)¤#pragma comment (lib, "comsupp.lib")¤#endif // defined (_DEBUG)¤#endif // defined (_NATIVE_WCHAR_T_DEFINED)¤// } GARANT¤¤#include <afxwin.h>         // MFC core and standard components¤#include <afxext.h>         // MFC extensions¤#include <afxole.h>         // MFC OLE classes¤#include <afxodlgs.h>       // MFC OLE dialog classes¤#include <afxdisp.h>        // MFC Automation classes¤#include <afxdtctl.h>		// MFC support for Internet Explorer 4 Common Controls¤#include <afxcmn.h>			// MFC support for Windows Common Controls¤#include <afxtempl.h>¤#include <atlbase.h>¤#include <atlcom.h>¤//#UC END# *45740CEE0280_USER_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45740CEE0280_USER_DEFINITION*"
		    value      	"//#UC START# *45740CEE0280_USER_DEFINITION*¤//#UC END# *45740CEE0280_USER_DEFINITION*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/Core/fix/win_afx.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/win_afx|45740CEE0280
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16657317434"))
	    quid       	"45740CEE0280"
	    documentation 	"Ğàçëè÷íûå çàïëàäêè è èíêëşäû äëÿ MFC-ïğèëîæåíèé (äîëæíî âêëş÷àòüñÿ âìåñòî StdAfx)"
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator")
	(object Class "wine"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"local helper"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/Core/fix/wine.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45E40FD200AB_USER_INCLUDES*"
		    value      	(value Text 
|//#UC START# *45E40FD200AB_USER_INCLUDES*¤#if (defined (WIN32) && !defined (WIN64))¤	#define  WINE_USE_ACE 1¤	#include "wine/wine.h"¤#endif   // defined (WIN32)¤//#UC END# *45E40FD200AB_USER_INCLUDES*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*45E40FD200AB_USER_DEFINITION*"
		    value      	"//#UC START# *45E40FD200AB_USER_DEFINITION*¤//#UC END# *45E40FD200AB_USER_DEFINITION*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Ìîäåëü ïğîåêòà "shared"/Core/fix/wine|45E40FD200AB
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16657317900"))
	    quid       	"45E40FD200AB"
	    documentation 	
|ïîäêëş÷åíèå external-áèáëèîòåêè WINE (ıìóëÿöèÿ íåêîòîğûõ ôóíêöèé Windows API, êîòîğûå îòñóòñâóşò â win95/98/NT, íî ıòè ôóíêöèè èñïîëüçóşòñÿ MSVC 2005 run-time)
|
	    
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator"))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ColorizeFor"
		    value      	"44FEAD4A0272")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"45000B22036B"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::shared::Core::fix::mpcxc" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"741")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1182")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"342")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(741, 1182)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(579, 1154)
			fill_color 	13434879
			nlines     	1
			max_width  	324
			justify    	0
			label      	" mpcxc")
		    stereotype 	(object ItemLabel
			Parent_View 	@1
			location   	(579, 1104)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	321
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"45011F4F00FA"
		    width      	342
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::Core::fix::Win32Exception" @2
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1164")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"762")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"346")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(1164, 762)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(1000, 734)
			fill_color 	13434879
			nlines     	1
			max_width  	328
			justify    	0
			label      	" Win32Exception")
		    stereotype 	(object ItemLabel
			Parent_View 	@2
			location   	(1000, 684)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	325
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"45011F6B0000"
		    width      	346
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::Core::fix::PragmaWarningDisable" @3
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1191")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1542")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"476")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(342, 393)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@3
			location   	(113, 365)
			fill_color 	13434879
			nlines     	1
			max_width  	458
			justify    	0
			label      	" PragmaWarningDisable")
		    stereotype 	(object ItemLabel
			Parent_View 	@3
			location   	(113, 315)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	458
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"45011FA90157"
		    width      	476
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::Core::os::IniFile" @4
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"744")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"744")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"334")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(744, 744)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(594, 716)
			nlines     	1
			max_width  	300
			justify    	0
			label      	" IniFile")
		    stereotype 	(object ItemLabel
			Parent_View 	@4
			location   	(594, 666)
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"450034D40290"
		    width      	318
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @5
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"741,1091;743,834"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @6
			Parent_View 	@5
			location   	(701, 953)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.540351
			height     	42
			orientation 	0)
		    line_color 	3947680
		    quidu      	"450121E0035B"
		    client     	@1
		    supplier   	@4
		    vertices   	(list Points
			(741, 1091)
			(743, 834))
		    line_style 	0)
		(object UsesView "" @7
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"830,1091;1071,852"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @8
			Parent_View 	@7
			location   	(935, 953)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.506033
			height     	25
			orientation 	0)
		    line_color 	3947680
		    quidu      	"450121EC00CB"
		    client     	@1
		    supplier   	@2
		    vertices   	(list Points
			(830, 1091)
			(1071, 852))
		    line_style 	0)
		(object ClassView "Class" "Logical View::shared::Core::sys::Logs" @9
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"341")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"713")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"346")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(342, 714)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@9
			location   	(192, 686)
			nlines     	1
			max_width  	300
			justify    	0
			label      	" Logs")
		    stereotype 	(object ItemLabel
			Parent_View 	@9
			location   	(192, 636)
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"450E97E40167"
		    width      	318
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @10
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"664,1091;419,803"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	(object SegLabel @11
			Parent_View 	@10
			location   	(440, 910)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			anchor     	10
			anchor_loc 	1
			nlines     	1
			max_width  	450
			justify    	0
			label      	"<<uses>>"
			pctDist    	0.752168
			height     	54
			orientation 	0)
		    line_color 	3947680
		    quidu      	"450EA61A008C"
		    client     	@1
		    supplier   	@9
		    vertices   	(list Points
			(663, 1091)
			(419, 804))
		    line_style 	0)
		(object ClassView "Class" "Logical View::shared::Core::sys::Exception" @12
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1147")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"372")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"346")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(1146, 372)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@12
			location   	(996, 344)
			nlines     	1
			max_width  	300
			justify    	0
			label      	" Exception")
		    stereotype 	(object ItemLabel
			Parent_View 	@12
			location   	(996, 294)
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"450035A90222"
		    width      	318
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object UsesView "" @13
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"1159,671;1150,462"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4517CB0F0213"
		    client     	@2
		    supplier   	@12
		    vertices   	(list Points
			(1159, 671)
			(1149, 462))
		    line_style 	0)
		(object ClassView "Class" "Logical View::shared::Core::fix::win_afx" @14
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"270")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"120")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"346")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(270, 120)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@14
			location   	(106, 92)
			fill_color 	13434879
			nlines     	1
			max_width  	328
			justify    	0
			label      	" win_afx")
		    stereotype 	(object ItemLabel
			Parent_View 	@14
			location   	(106, 42)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	325
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"45740CEE0280"
		    width      	346
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::Core::fix::wine" @15
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1767")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1271")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"184"))
		    location   	(714, 144)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@15
			location   	(564, 114)
			fill_color 	13434879
			nlines     	1
			max_width  	300
			justify    	0
			label      	" wine")
		    stereotype 	(object ItemLabel
			Parent_View 	@15
			location   	(564, 64)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"45E40FD200AB"
		    width      	318
		    height     	184
		    annotation 	8
		    autoResize 	TRUE)))))
