
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.061205"
    charSet    	204)

(object Class_Category "alg"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (i.h)"
	    value      	"w:/shared/GCL/alg/container_op.i.h::450130B00213,w:/shared/GCL/alg/sorting.i.h::450133F10000")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (h)"
	    value      	"w:/shared/GCL/alg/CycleChecker.h::4501338B00FA;w:/shared/GCL/alg/container_op.h::450130B00213;w:/shared/GCL/alg/cryptography.h::450133450138;w:/shared/GCL/alg/loki_extension.h::450133A803C8;w:/shared/GCL/alg/sorting.h::450133F10000")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (cpp)"
	    value      	"w:/shared/GCL/alg/cryptography.cpp::450133450138")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED WikiPageID (wiki)"
	    value      	(value Text 
|Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/CycleChecker|4501338B00FA::4501338B00FA;Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/container_op|450130B00213::450130B00213;Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/cryptography|450133450138::450133450138;Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/loki_extension|450133A803C8::450133A803C8;Shared (c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/sorting|450133F10000::450133F10000;Shared (c++),key:SHR,guid:45ED9AFC026A/Home/Модель проекта "shared"/GCL/alg/CycleChecker|4501338B00FA::4501338B00FA;Shared (c++),key:SHR,guid:45ED9AFC026A/Home/Модель проекта "shared"/GCL/alg/container_op|450130B00213::450130B00213;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/CycleChecker|4501338B00FA::4501338B00FA;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/container_op|450130B00213::450130B00213;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/cryptography|450133450138::450133450138;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/loki_extension|450133A803C8::450133A803C8;Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/sorting|450133F10000::450133F10000;Shared (java/c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/CycleChecker|4501338B00FA::4501338B00FA;Shared (java/c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/container_op|450130B00213::450130B00213;Shared (java/c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/cryptography|450133450138::450133450138;Shared (java/c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/loki_extension|450133A803C8::450133A803C8;Shared (java/c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/sorting|450133F10000::450133F10000
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"WikiPageID (wiki)"
	    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg|44FEE24001F5
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ApplyedGens"
	    value      	"C++ интерфейсы и реализация|Документация")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (wiki)"
	    value      	"wiki")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ElementCreationOrder"
	    value      	"16657716791"))
    quid       	"44FEE24001F5"
    documentation 	"различные общие алгоритмы"
    stereotype 	"Unit"
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "container_op"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*450130B00213_USER_INCLUDES*"
		    value      	"//#UC START# *450130B00213_USER_INCLUDES*¤#include <set>¤#include <vector>¤//#UC END# *450130B00213_USER_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*450130B00213_USER_DEFINITION*"
		    value      	(value Text 
|//#UC START# *450130B00213_USER_DEFINITION*¤template<class Container>¤void reverse (Container& container) {¤	std::reverse (container.begin (), container.end ());¤}¤¤template<class Container, class Pred>¤bool any_of (Container& container, Pred& predicate) {¤	return std::any_of (container.begin (), container.end (), predicate);¤}¤¤// template classes for octet sequence comparision operators¤// for use in STL containers such as std::map¤// using ACE_OS_String::memcmp¤// example:¤// 	typedef GCL::OctetSeqLess<GslTree::TreeID_var> TreeIDCompare;¤// 	typedef std::map<GslTree::TreeID_var, Tree_impl*> TreeMap;¤template<class T> ¤struct OctetSeqLess : public std::binary_function<T, T, bool> {¤	bool operator() (T a, T b) const;¤};¤¤template<class T> ¤struct OctetSeqGreater : public std::binary_function<T, T, bool> {¤	bool operator() (T a, T b) const;¤};			¤¤// нормализует массив target относительно массива base¤// Пример 1:¤//	base = {1:2:3:4}¤//  target = {1:2:3a:4}¤//  normalize (base, target, true) = {3a:4}¤// Пример 2:¤//	base = {1:2:3:4}¤//  target = {1:2:3}¤//  normalize (base, target, true) = {3}¤// Пример 3:¤//	base = {1:2:3}¤//  target = {1:2:3}¤//  normalize (base, target, true) = {3}¤// Пример 4:¤//	base = {1:2:3}¤//  target = {1:2:3}¤//  normalize (base, target, false) = {}¤template <class _C>¤_C& normalize (const _C& base, _C& target, bool with_back = true);¤¤/////////////////////////////////////////////////////////////////////////////////////////////////////////////¤// merge, intersect, difference for std::set¤¤template <class _Key, class _Compare, class _Allocator>¤std::set<_Key, _Compare, _Allocator>& merge (¤	std::set<_Key, _Compare, _Allocator>& cont¤	, const std::set<_Key, _Compare, _Allocator>& operand¤);¤¤//#UC END# *450130B00213_USER_DEFINITION*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"i.h:*450130B00213_CUSTOM_INCLUDES*"
		    value      	"//#UC START# *450130B00213_CUSTOM_INCLUDES*¤#include <functional>¤#include <ace/OS_String.h>¤//#UC END# *450130B00213_CUSTOM_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"i.h:*450130B00213*"
		    value      	(value Text 
|//#UC START# *450130B00213*¤// template classes for octet sequence comparision operators¤// for use in STL containers such as std::map¤template<class T> ¤bool OctetSeqLess<T>::operator() (T a, T b) const {¤	if(a->length() < b->length()) {¤		return true;¤	}¤	else if(a->length() > b->length()) {¤		return false;¤	}¤	return (ACE_OS_String::memcmp(a->get_buffer(), b->get_buffer(),	a->length()) < 0);¤}¤¤template<class T> ¤bool OctetSeqGreater<T>::operator() (T a, T b) const {¤	if(a->length() < b->length()) {¤		return false;¤	}¤	else if(a->length() > b->length()) {¤		return true;¤	}¤	return (ACE_OS_String::memcmp(a->get_buffer(), b->get_buffer(),	a->length()) > 0);¤}¤¤// нормализует массив target относительно массива base¤template <class _C>¤_C& normalize (const _C& base, _C& target, bool with_back) {¤	if (target.size() && base.size()) {¤		_C::const_iterator it = base.begin();¤		for (; it != base.end(); it++) {¤			if (target.size() && (*it) == (*target.begin())) {¤				target.erase (target.begin());¤			} else {¤				break;¤			}¤		}¤¤		if ( target.size() == 1 && base.back() == target.back() ) {¤			it--;¤			target.insert (target.begin(), *it );¤		}¤		if ( target.size() == 0 && with_back) {¤			target.push_back ( base.back() );¤		}¤	}¤¤	return target;¤};¤¤/////////////////////////////////////////////////////////////////////////////////////////////////////////////¤// for std::set¤¤template <class _Key, class _Compare, class _Allocator>¤std::set<_Key, _Compare, _Allocator>& merge (¤	std::set<_Key, _Compare, _Allocator>& cont¤	, const std::set<_Key, _Compare, _Allocator>& operand¤) {¤	for (std::set<_Key, _Compare, _Allocator>::iterator it = operand.begin(); it != operand.end(); it++) {¤		if (cont.find(*it) == cont.end()) {¤			cont.insert(*it);¤		}¤	}¤	return cont;¤}¤//#UC END# *450130B00213*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/GCL/alg/container_op.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (i.h)"
		    value      	"w:/shared/GCL/alg/container_op.i.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/container_op|450130B00213
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (i.h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16657728948"))
	    quid       	"450130B00213"
	    documentation 	"расширение стандартных алгоритмов над контейнерами: normolize; merge, difference, intersect на самом контейнере (пока тока для std::set) "
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator")
	(object Class "cryptography"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*450133450138_CUSTOM_INCLUDES*"
		    value      	"//#UC START# *450133450138_CUSTOM_INCLUDES*¤//#UC END# *450133450138_CUSTOM_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*450133450138*"
		    value      	(value Text 
|//#UC START# *450133450138*¤const unsigned int crypto_sold_length = sizeof (short);¤const unsigned int crypto_sold_size = crypto_sold_length;¤¤SimpleCrypto::SimpleCrypto() {¤	srand ((unsigned)time( 0 ));¤}¤¤SimpleCrypto::~SimpleCrypto () {¤}¤¤void SimpleCrypto::encrypt(const Buffer& buf_in, Buffer& buf_out) {¤/*¤	if (buf_in.m_len>=crypto_tail_length) {¤		return;¤	}¤*/¤	unsigned short crypto_sold = (unsigned short) rand ();¤	buf_out.m_len = buf_in.m_len+crypto_sold_size;¤	buf_out.m_buf = new char [buf_out.m_len];¤	memcpy ((unsigned char*)buf_out.m_buf+crypto_sold_size, buf_in.m_buf, buf_in.m_len);¤	*(unsigned short*)buf_out.m_buf = crypto_sold;¤	for (unsigned i = crypto_sold_size; static_cast<int>(i)<buf_out.m_len;i++) {¤		*((unsigned char*)buf_out.m_buf+i)= *((unsigned char*)buf_out.m_buf+i) ^ make_crypt_mask (i-crypto_sold_size+1,crypto_sold);¤	}¤}¤¤void SimpleCrypto::decrypt(const Buffer& buf_in, Buffer& buf_out) {¤	unsigned short crypto_sold;¤	std::string result;¤	crypto_sold = *(unsigned short*)(buf_in.m_buf);¤	unsigned char* buffer = new unsigned char[buf_in.m_len];¤	unsigned buf_len=0;¤	for (unsigned i=crypto_sold_size; static_cast<int>(i)<buf_in.m_len;i++) {¤		unsigned char crypto_tail;¤		crypto_tail = *((unsigned char*)buf_in.m_buf+i);¤		unsigned char ch = static_cast<unsigned char>( crypto_tail ^ make_crypt_mask (i-crypto_sold_size+1,crypto_sold)); ¤		buffer[buf_len] = ch;¤		buf_len++;¤	}¤	buf_out.m_buf = new char [buf_len];¤	buf_out.m_len = buf_len;¤	memcpy (buf_out.m_buf, buffer, buf_len);¤	delete []buffer;¤}¤¤unsigned char SimpleCrypto::make_crypt_mask (int index, unsigned short crypt_sold) {¤	unsigned char mask = (unsigned char)((crypt_sold >> (8*(index%2))) & 0xFF);¤	return ~((unsigned char)(index & 0xFF)) ^ mask;¤}¤//#UC END# *450133450138*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*450133450138_USER_INCLUDES*"
		    value      	"//#UC START# *450133450138_USER_INCLUDES*¤#include <string.h>¤//#UC END# *450133450138_USER_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*450133450138_USER_DEFINITION*"
		    value      	(value Text 
|//#UC START# *450133450138_USER_DEFINITION*¤class SimpleCrypto {¤public:¤	struct Buffer {¤		void* m_buf;¤		int m_len;¤		¤		Buffer () : m_buf (0), m_len (0) {¤		}¤¤		Buffer (void* buf, int len) : m_buf (0), m_len (0) {¤			if(buf != 0 && len > 0) {¤				m_len = len;¤				m_buf = new char[m_len];¤				::memcpy(m_buf, buf, m_len);¤			}¤		}¤¤		~Buffer() {¤			if(m_buf != 0) {¤				delete[] reinterpret_cast<char*>(m_buf);¤			}¤		}¤		¤		Buffer& operator= (const Buffer& other) {¤			if (m_buf) {¤				delete[] reinterpret_cast<char*>(m_buf);¤				m_buf = 0;¤				m_len = 0;¤			}¤			if (other.m_buf != 0 && other.m_len > 0) {¤				m_len = other.m_len;¤				m_buf = new char[m_len];¤				::memcpy(m_buf, other.m_buf, m_len);¤			}¤			return *this;¤		}¤		¤		bool operator! () {¤			return (m_buf == 0 || m_len == 0) ? true : false;¤		}¤	};¤¤	SimpleCrypto ();¤	~SimpleCrypto ();¤	¤	class KeyLenError : public Core::Exception {¤		const char* uid () const /*throw ()*/ {¤			return "GCL::SimpleCrypto::KeyLenError";¤		}¤	};¤¤	void encrypt (const Buffer& buf_in, Buffer& buf_out);¤	void decrypt (const Buffer& buf_in, Buffer& buf_out);¤	¤private:¤	unsigned char make_crypt_mask (int index, unsigned short crypt_sold);¤};¤//#UC END# *450133450138_USER_DEFINITION*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (cpp)"
		    value      	"w:/shared/GCL/alg/cryptography.cpp")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/GCL/alg/cryptography.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/cryptography|450133450138
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (cpp)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16657729507"))
	    quid       	"450133450138"
	    documentation 	"несколько классов реализующих методы криптографии"
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator")
	(object Class "CycleChecker"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4501338B00FA_USER_INCLUDES*"
		    value      	"//#UC START# *4501338B00FA_USER_INCLUDES*¤#include <algorithm>¤#include <vector>¤//#UC END# *4501338B00FA_USER_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*4501338B00FA_USER_DEFINITION*"
		    value      	(value Text 
|//#UC START# *4501338B00FA_USER_DEFINITION*¤template <class _IterationId>¤class CycleChecker {¤public:¤	class InvalidIterationSequence : public Core::Exception {¤		virtual const char* what () const throw () {¤			return "InvalidIterationSequence (pop stack sequens is differ then push stack sequence)";¤		}¤¤		virtual const char* uid () const /*throw ()*/ {¤			return "GCL::CycleChecker::InvalidIterationSequence";¤		}¤	};¤¤	class Iteration {¤	public:¤		Iteration (CycleChecker& cc, _IterationId id) : m_cc (cc), m_id(id) {¤			m_is_cycled = !m_cc.start_iteration(m_id);¤		}¤¤		~Iteration () {¤			if (!m_is_cycled) {¤				m_cc.end_iteration(m_id);¤			}¤		}¤¤		bool is_cycled () {¤			return m_is_cycled;¤		}¤¤	private:¤		CycleChecker& m_cc;¤		_IterationId m_id;¤		bool m_is_cycled;¤	};¤¤protected:¤	friend Iteration;¤	bool start_iteration (_IterationId id) {¤		if (std::find(m_iterations.begin(), m_iterations.end(), id) != m_iterations.end()) {¤		//if (m_iterations.find(id) != m_iteration.end()) {¤			return false;¤		} else {¤			m_iterations.push_back(id);¤			return true;¤		}¤	}¤¤	void end_iteration (_IterationId id) /*throw (InvalidIterationSequence)*/ {¤		if (id != m_iterations.back()) {¤		//if (m_iterations.find(id) != m_iterations.back()) {¤			throw InvalidIterationSequence();¤		}¤		m_iterations.pop_back();¤	}¤¤private:¤	std::vector<_IterationId> m_iterations;¤};¤//#UC END# *4501338B00FA_USER_DEFINITION*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/GCL/alg/CycleChecker.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/CycleChecker|4501338B00FA
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16657729977"))
	    quid       	"4501338B00FA"
	    documentation 	"позволяет выявлять рекурсивные вызовы - может быть полезен для различного рода расчетов путей и т.д."
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator")
	(object Class "loki_extension"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*450133A803C8_USER_INCLUDES*"
		    value      	(value Text "//#UC START# *450133A803C8_USER_INCLUDES*¤//#UC END# *450133A803C8_USER_INCLUDES*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*450133A803C8_USER_DEFINITION*"
		    value      	(value Text 
|//#UC START# *450133A803C8_USER_DEFINITION*¤//input: TList, int head¤//output: TList tail (TList without head elements)¤template <class TList, int head> struct TLTail;¤¤template<int head>¤struct TLTail< ::Loki::NullType, head> {¤	typedef ::Loki::NullType Result;     ¤};¤¤template<class Head, class TList>¤struct TLTail< ::Loki::Typelist <Head, TList>, 0> {¤	typedef typename ::Loki::Typelist <Head, TList> Result;¤};¤¤template<class Head, class TList, int head>¤struct TLTail< ::Loki::Typelist <Head, TList>, head> {¤	typedef typename TLTail<TList, head-1>::Result Result;¤};¤¤¤//input: TList,  T, int number¤//output: index of T or -1 if absent¤template <class TList, class T, int num=0> struct IndexOfNum;¤¤template<class T, int num>¤struct IndexOfNum< ::Loki::NullType, T, num> {¤	enum {value = -1};¤};¤¤template<class Head, class Tail, class T>¤struct IndexOfNum< ::Loki::Typelist<Head, Tail>, T, 0> {¤	typedef typename ::Loki::Typelist<Head, Tail> List;¤	enum {value = ::Loki::TL::IndexOf<List, T>::value};¤};¤¤template<class Head, class Tail, class T, int num>¤struct IndexOfNum< ::Loki::Typelist<Head, Tail>, T, num> {¤	typedef typename ::Loki::Typelist<Head, Tail> List;¤¤private:¤	enum {temp = ::Loki::TL::IndexOf<List, T>::value+1};¤	typedef typename ::TLTail<List, temp>::Result Result;¤¤public:¤	enum {value = ::IndexOfNum<Result, T, num-1>::value == -1 ? -1 : temp + ::IndexOfNum<Result, T, num-1>::value};¤};¤//#UC END# *450133A803C8_USER_DEFINITION*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/GCL/alg/loki_extension.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/loki_extension|450133A803C8
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16657730455"))
	    quid       	"450133A803C8"
	    documentation 	"расширение Локи, позволяющее получить номер типа из списка типов, при условии что данный тип в списке встречается несколько раз"
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator")
	(object Class "sorting"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"final")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need impl-file"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need inline-file"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*450133F10000_USER_INCLUDES*"
		    value      	"//#UC START# *450133F10000_USER_INCLUDES*¤//#UC END# *450133F10000_USER_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"h:*450133F10000_USER_DEFINITION*"
		    value      	(value Text 
|//#UC START# *450133F10000_USER_DEFINITION*¤// uqsort¤// метод сортировки простым переборам БЕЗ учета равенства пар¤// уникальный алгоритм для сортировки массивов для элементов которых может¤// выполнятся условие:¤//	 1. arr[i] == arr[k]¤//	 2. arr[k] == arr[j]¤//	 3. arr[i] != arr[j]¤inline void uqsort( void *base, size_t num, size_t width, int (__cdecl *compare )(const void *elem1, const void *elem2 ) );¤//#UC END# *450133F10000_USER_DEFINITION*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"i.h:*450133F10000_CUSTOM_INCLUDES*"
		    value      	"//#UC START# *450133F10000_CUSTOM_INCLUDES*¤//#UC END# *450133F10000_CUSTOM_INCLUDES*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"i.h:*450133F10000*"
		    value      	(value Text 
|//#UC START# *450133F10000*¤// uqsort¤inline void uqsort( void *base, size_t num, size_t width, int (__cdecl *compare )(const void *elem1, const void *elem2 ) ) {¤	void* swap_buf = malloc (width);¤	bool flag = true;¤	while (flag) {¤		flag = false;¤		for (unsigned i =0; i < num; i++ ) {¤			for (unsigned k = i+1; k < num; k++ ) {¤				int res = compare( (char*)base + i*width, (char*)base + k*width);¤				if ( res == 1 ) {¤					memmove(swap_buf, (char*)base + i*width, width );¤					memmove((char*)base + i*width, (char*)base + k*width, width );¤					memmove((char*)base + k*width, swap_buf, width );¤¤					flag = true;¤					k = num;¤				}¤				if ( res == -1 )		¤					k = num; // end¤			}¤		}¤	}¤	free (swap_buf);¤}¤//#UC END# *450133F10000*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"ifdef"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"need UC"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (h)"
		    value      	"w:/shared/GCL/alg/sorting.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SELF GENERATED FILE (i.h)"
		    value      	"w:/shared/GCL/alg/sorting.i.h")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|Shared (java and c++),key:SHR,guid:44FEAD4A0272/Home/Модель проекта "shared"/GCL/alg/sorting|450133F10000
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (i.h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (h)"
		    value      	"file")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ElementCreationOrder"
		    value      	"16657730937"))
	    quid       	"450133F10000"
	    documentation 	"алгоритмы сортировки"
	    stereotype 	"UtilityPack"
	    language   	"MDA Generator"))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ColorizeFor"
		    value      	"44FEAD4A0272"))
	    quid       	"44FEE247006E"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::shared::GCL::alg::container_op" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"270")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"120")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"184"))
		    location   	(270, 120)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(99, 90)
			fill_color 	13434879
			nlines     	1
			max_width  	342
			justify    	0
			label      	"• container_op")
		    stereotype 	(object ItemLabel
			Parent_View 	@1
			location   	(99, 40)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	342
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"450130B00213"
		    width      	360
		    height     	184
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::GCL::alg::cryptography" @2
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"282")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"858")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"184"))
		    location   	(282, 858)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(114, 828)
			fill_color 	13434879
			nlines     	1
			max_width  	336
			justify    	0
			label      	"• cryptography")
		    stereotype 	(object ItemLabel
			Parent_View 	@2
			location   	(114, 778)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	336
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"450133450138"
		    width      	354
		    height     	184
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::GCL::alg::CycleChecker" @3
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1347")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"147")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"184"))
		    location   	(1347, 147)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@3
			location   	(1177, 117)
			fill_color 	13434879
			nlines     	1
			max_width  	340
			justify    	0
			label      	"• CycleChecker")
		    stereotype 	(object ItemLabel
			Parent_View 	@3
			location   	(1177, 67)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	340
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"4501338B00FA"
		    width      	358
		    height     	184
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::GCL::alg::loki_extension" @4
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1350")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"441")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"184"))
		    location   	(1350, 441)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(1166, 411)
			fill_color 	13434879
			nlines     	1
			max_width  	368
			justify    	0
			label      	"• loki_extension")
		    stereotype 	(object ItemLabel
			Parent_View 	@4
			location   	(1166, 361)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	368
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"450133A803C8"
		    width      	386
		    height     	184
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::shared::GCL::alg::sorting" @5
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"267")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"468")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"318")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"184"))
		    location   	(267, 468)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@5
			location   	(117, 438)
			fill_color 	13434879
			nlines     	1
			max_width  	300
			justify    	0
			label      	"• sorting")
		    stereotype 	(object ItemLabel
			Parent_View 	@5
			location   	(117, 388)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	297
			justify    	0
			label      	"<<UtilityPack>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"450133F10000"
		    width      	318
		    height     	184
		    annotation 	8
		    autoResize 	TRUE)))))
