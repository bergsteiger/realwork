
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.060314"
    charSet    	204)

(object Class_Category "GCL"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_data_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_data_Manual_Headers*¤		//#UC END# *44FEB5D501E5_data_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_Rest_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Rest_Manual_Headers*¤		//#UC END# *44FEB5D501E5_Rest_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_data_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_data_Manual_Sources*¤		//#UC END# *44FEB5D501E5_data_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_Rest_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Rest_Manual_Sources*¤		//#UC END# *44FEB5D501E5_Rest_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_RESOURCE_FILES*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_RESOURCE_FILES*¤	//#UC END# *44FEB5D501E5_RESOURCE_FILES*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_data_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_data_Manual_Headers*¤		//#UC END# *44FEB5D501E5_data_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_Rest_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Rest_Manual_Headers*¤		//#UC END# *44FEB5D501E5_Rest_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_data_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_data_Manual_Sources*¤		//#UC END# *44FEB5D501E5_data_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_Rest_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Rest_Manual_Sources*¤		//#UC END# *44FEB5D501E5_Rest_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_RESOURCE_FILES*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_RESOURCE_FILES*¤	//#UC END# *44FEB5D501E5_RESOURCE_FILES*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_data_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_data_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_data_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_data_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_data_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_data_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_alg_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_alg_Manual_Headers*¤		//#UC END# *44FEB5D501E5_alg_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_alg_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_alg_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_alg_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_alg_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_alg_Manual_Sources*¤		//#UC END# *44FEB5D501E5_alg_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_alg_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_alg_Manual_Headers*¤		//#UC END# *44FEB5D501E5_alg_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_alg_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_alg_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_alg_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_alg_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_alg_Manual_Sources*¤		//#UC END# *44FEB5D501E5_alg_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_math_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_math_Manual_Headers*¤		//#UC END# *44FEB5D501E5_math_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_math_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_math_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_math_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_math_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_math_Manual_Sources*¤		//#UC END# *44FEB5D501E5_math_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_math_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_math_Manual_Headers*¤		//#UC END# *44FEB5D501E5_math_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_math_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_math_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_math_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_math_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_math_Manual_Sources*¤		//#UC END# *44FEB5D501E5_math_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_mt_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_mt_Manual_Headers*¤		//#UC END# *44FEB5D501E5_mt_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_mt_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_mt_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_mt_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_mt_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_mt_Manual_Sources*¤		//#UC END# *44FEB5D501E5_mt_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_mt_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_mt_Manual_Headers*¤		//#UC END# *44FEB5D501E5_mt_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_mt_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_mt_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_mt_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_mt_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_mt_Manual_Sources*¤		//#UC END# *44FEB5D501E5_mt_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_network_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_network_Manual_Headers*¤		//#UC END# *44FEB5D501E5_network_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_os_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_os_Manual_Headers*¤		//#UC END# *44FEB5D501E5_os_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_str_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_str_Manual_Headers*¤		//#UC END# *44FEB5D501E5_str_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_network_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_network_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_network_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_os_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_os_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_os_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_str_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_str_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_str_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_network_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_network_Manual_Sources*¤		//#UC END# *44FEB5D501E5_network_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_os_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_os_Manual_Sources*¤		//#UC END# *44FEB5D501E5_os_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_str_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_str_Manual_Sources*¤		//#UC END# *44FEB5D501E5_str_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_network_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_network_Manual_Headers*¤		//#UC END# *44FEB5D501E5_network_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_os_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_os_Manual_Headers*¤		//#UC END# *44FEB5D501E5_os_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_str_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_str_Manual_Headers*¤		//#UC END# *44FEB5D501E5_str_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_network_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_network_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_network_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_os_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_os_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_os_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_str_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_str_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_str_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_network_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_network_Manual_Sources*¤		//#UC END# *44FEB5D501E5_network_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_os_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_os_Manual_Sources*¤		//#UC END# *44FEB5D501E5_os_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_str_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_str_Manual_Sources*¤		//#UC END# *44FEB5D501E5_str_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"ApplyedGens"
	    value      	"C++ èíòåðôåéñû è ðåàëèçàöèÿ")
	(object Attribute
	    tool       	"MDA Generator User Properties"
	    name       	"is namespace"
	    value      	"true")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_alg_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_alg_Manual_Headers*¤		//#UC END# *44FEB5D501E5_alg_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_data_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_data_Manual_Headers*¤		//#UC END# *44FEB5D501E5_data_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_math_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_math_Manual_Headers*¤		//#UC END# *44FEB5D501E5_math_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_mt_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_mt_Manual_Headers*¤		//#UC END# *44FEB5D501E5_mt_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_network_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_network_Manual_Headers*¤		//#UC END# *44FEB5D501E5_network_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_os_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_os_Manual_Headers*¤		//#UC END# *44FEB5D501E5_os_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_str_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_str_Manual_Headers*¤		//#UC END# *44FEB5D501E5_str_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_Rest_Manual_Headers*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Rest_Manual_Headers*¤		//#UC END# *44FEB5D501E5_Rest_Manual_Headers*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_Manual_Inlines*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Manual_Inlines*¤		//#UC END# *44FEB5D501E5_Manual_Inlines*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_alg_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_alg_Manual_Sources*¤		//#UC END# *44FEB5D501E5_alg_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_data_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_data_Manual_Sources*¤		//#UC END# *44FEB5D501E5_data_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_math_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_math_Manual_Sources*¤		//#UC END# *44FEB5D501E5_math_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_mt_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_mt_Manual_Sources*¤		//#UC END# *44FEB5D501E5_mt_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_network_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_network_Manual_Sources*¤		//#UC END# *44FEB5D501E5_network_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_os_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_os_Manual_Sources*¤		//#UC END# *44FEB5D501E5_os_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_str_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_str_Manual_Sources*¤		//#UC END# *44FEB5D501E5_str_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_Rest_Manual_Sources*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_Rest_Manual_Sources*¤		//#UC END# *44FEB5D501E5_Rest_Manual_Sources*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc.dll:*44FEB5D501E5_RESOURCE_FILES*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_RESOURCE_FILES*¤	//#UC END# *44FEB5D501E5_RESOURCE_FILES*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc2:*44FEB5D501E5_CUSTOM_DEPENDENCES*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_CUSTOM_DEPENDENCES*¤	//#UC END# *44FEB5D501E5_CUSTOM_DEPENDENCES*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"mpc:*44FEB5D501E5_CUSTOM_DEPENDENCES*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_CUSTOM_DEPENDENCES*¤	//#UC END# *44FEB5D501E5_CUSTOM_DEPENDENCES*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (mpc)"
	    value      	"w:/shared/project/GCL.mpc")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (mpc2)"
	    value      	"")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (h)"
	    value      	"w:/shared/GCL/alg/CycleChecker.h::44FEE24001F5,w:/shared/GCL/alg/container_op.h::44FEE24001F5,w:/shared/GCL/alg/cryptography.h::44FEE24001F5,w:/shared/GCL/alg/loki_extension.h::44FEE24001F5,w:/shared/GCL/alg/sorting.h::44FEE24001F5,w:/shared/GCL/data/Buffer.h::44FEB6B3010B,w:/shared/GCL/data/DirectMap.h::44FEB6B3010B,w:/shared/GCL/data/OnDemandFile.h::44FEB6B3010B,w:/shared/GCL/data/OrphanStr.h::44FEB6B3010B,w:/shared/GCL/data/PackedStrStream.h::44FEB6B3010B,w:/shared/GCL/data/StaticNode.h::44FEB6B3010B,w:/shared/GCL/data/StaticNodeMng.h::44FEB6B3010B,w:/shared/GCL/data/StaticNodeStub.h::44FEB6B3010B,w:/shared/GCL/data/StaticNodeStubBase.h::44FEB6B3010B,w:/shared/GCL/data/Tree.h::44FEB6B3010B,w:/shared/GCL/data/std_defs.h::44FEB6B3010B,w:/shared/GCL/math/long_rand.h::45018D5E036B,w:/shared/GCL/math/statistics.h::45018D5E036B,w:/shared/GCL/math/unbounded_ops.h::45018D5E036B,w:/shared/GCL/mt/ContextThreadPriority.h::4501A1FD0177,w:/shared/GCL/mt/ResourcePool.h::4501A1FD0177,w:/shared/GCL/network/common_network_operations.h::4503D56703A9,w:/shared/GCL/network/smtp_service.h::4503D56703A9,w:/shared/GCL/os/DllLoader.h::4503DD5F01B5,w:/shared/GCL/os/FileOp.h::4503DD5F01B5,w:/shared/GCL/os/dir_op.h::4503DD5F01B5,w:/shared/GCL/os/disk_op.h::4503DD5F01B5,w:/shared/GCL/str/str_conv.h::4503DF990167,w:/shared/GCL/str/str_op.h::4503DF990167")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (cpp)"
	    value      	"w:/shared/GCL/alg/cryptography.cpp::44FEE24001F5,w:/shared/GCL/data/StaticNode.cpp::44FEB6B3010B,w:/shared/GCL/data/StaticNodeStubBase.cpp::44FEB6B3010B,w:/shared/GCL/math/long_rand.cpp::45018D5E036B,w:/shared/GCL/math/statistics.cpp::45018D5E036B,w:/shared/GCL/mt/ContextThreadPriority.cpp::4501A1FD0177,w:/shared/GCL/network/common_network_operations.cpp::4503D56703A9,w:/shared/GCL/network/smtp_service.cpp::4503D56703A9,w:/shared/GCL/os/FileOp.cpp::4503DD5F01B5,w:/shared/GCL/os/dir_op.cpp::4503DD5F01B5,w:/shared/GCL/os/disk_op.cpp::4503DD5F01B5,w:/shared/GCL/str/str_conv.cpp::4503DF990167")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED FILES (i.h)"
	    value      	"w:/shared/GCL/alg/container_op.i.h::44FEE24001F5,w:/shared/GCL/alg/sorting.i.h::44FEE24001F5,w:/shared/GCL/data/DirectMap.i.h::44FEB6B3010B,w:/shared/GCL/data/StaticNodeStub.i.h::44FEB6B3010B,w:/shared/GCL/data/Tree.i.h::44FEB6B3010B,w:/shared/GCL/math/unbounded_ops.i.h::45018D5E036B,w:/shared/GCL/mt/ResourcePool.i.h::4501A1FD0177,w:/shared/GCL/str/str_conv.i.h::4503DF990167,w:/shared/GCL/str/str_op.i.h::4503DF990167")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"h:*44FEB5D501E5_ENVIRONMENTS_CONFIG*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_ENVIRONMENTS_CONFIG*¤		//#UC END# *44FEB5D501E5_ENVIRONMENTS_CONFIG*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"h:*44FEB5D501E5_CUSTOM_REGISTRATE*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_CUSTOM_REGISTRATE*¤		//#UC END# *44FEB5D501E5_CUSTOM_REGISTRATE*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (cpp)"
	    value      	"w:/shared/GCL/LibHome.cpp")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (h)"
	    value      	"w:/shared/GCL/LibHome.h")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"cpp:*44FEB5D501E5_ENVIRONMENTS_CONFIG*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_ENVIRONMENTS_CONFIG*¤	//#UC END# *44FEB5D501E5_ENVIRONMENTS_CONFIG*
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"cpp:*44FEB5D501E5_CUSTOM_REGISTRATE*"
	    value      	(value Text 
|//#UC START# *44FEB5D501E5_CUSTOM_REGISTRATE*¤	//#UC END# *44FEB5D501E5_CUSTOM_REGISTRATE*
	    )))
    quid       	"44FEB5D501E5"
    documentation 	"Garant Common Library - ðóòîâûé êàòàëîã îáùèõ áèáëèîòå÷íûõ ôóíêöèé"
    stereotype 	"Library"
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class_Category "data"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is namespace"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/shared/GCL/data/Buffer.h::450135270167,w:/shared/GCL/data/DirectMap.h::44FEC13E0149,w:/shared/GCL/data/OnDemandFile.h::450135840290,w:/shared/GCL/data/OrphanStr.h::450135E90109,w:/shared/GCL/data/PackedStrStream.h::4501364F0290,w:/shared/GCL/data/StaticNode.h::4501367B01C5,w:/shared/GCL/data/StaticNodeMng.h::450137530213,w:/shared/GCL/data/StaticNodeStub.h::450136CE01F4,w:/shared/GCL/data/StaticNodeStubBase.h::450136B500FA,w:/shared/GCL/data/Tree.h::450138270399,w:/shared/GCL/data/std_defs.h::44FEBDF3039B")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/shared/GCL/data/StaticNode.cpp::4501367B01C5,w:/shared/GCL/data/StaticNodeStubBase.cpp::450136B500FA")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (i.h)"
		    value      	"w:/shared/GCL/data/DirectMap.i.h::44FEC13E0149,w:/shared/GCL/data/StaticNodeStub.i.h::450136CE01F4,w:/shared/GCL/data/Tree.i.h::450138270399"))
	    quid       	"44FEB6B3010B"
	    documentation 	"ìåíåäæåðû äàííûõ, òèïû äàííûõ âñå ÷òî ñâÿçàííî ñ ïðåäñòàâëåíèåì èëè ðàñøèðåíèåì èíôîðìàöèè"
	    stereotype 	"Unit"
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "std_defs"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*44FEBDF3039B_USER_INCLUDES*"
			    value      	"//#UC START# *44FEBDF3039B_USER_INCLUDES*¤//#UC END# *44FEBDF3039B_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*44FEBDF3039B_USER_DEFINITION*"
			    value      	"//#UC START# *44FEBDF3039B_USER_DEFINITION*¤¤typedef Core::Aptr<FILE, File_boxDeallocator> File_aptr;¤¤//#UC END# *44FEBDF3039B_USER_DEFINITION*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FEBDF3039B_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *44FEBDF3039B_CUSTOM_INCLUDES*¤//#UC END# *44FEBDF3039B_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FEBDF3039B*"
			    value      	"//#UC START# *44FEBDF3039B*¤//#UC END# *44FEBDF3039B*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*44FEBDF3039B_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *44FEBDF3039B_CUSTOM_INCLUDES*¤//#UC END# *44FEBDF3039B_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*44FEBDF3039B*"
			    value      	"//#UC START# *44FEBDF3039B*¤//#UC END# *44FEBDF3039B*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/std_defs.h"))
		    quid       	"44FEBDF3039B"
		    documentation 	"íåñêîëüêî ìàêðîñîâ äëÿ ÷àñòî óïîòðåáèòåëüíûõ ñòàíäàðòíûõ òèïîâ: íåêîòîðûå stl-êîíòåéíåðû; àâòî-ìåíåäæåð óêàçàòåëÿ íà ôàéë (ïðè ðàçðóøåíèè çàêðûâàåò ôàéë êîòîðûì âëàäååò)"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "StrSet"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"force usage"
				    value      	"true"))
			    quid       	"44FEBE140197"
			    documentation 	"set-êîíòåéíåð àòîìàðíûõ ñòðîê"
			    stereotype 	"Set")
			(object Class "StrVector"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"force usage"
				    value      	"true"))
			    quid       	"44FEBE2F034D"
			    documentation 	"vector-êîíòåéíåð àòîìàðíûõ ñòðîê"
			    stereotype 	"Vector")
			(object Class "File_box"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"Need deallocator"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"h:*44FEBE6E005F*"
				    value      	(value Text 
|//#UC START# *44FEBE6E005F*¤		fclose(content);¤	//#UC END# *44FEBE6E005F*
				    ))
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"force usage"
				    value      	"true"))
			    quid       	"44FEBE6E005F"
			    documentation 	"Áîêñ äëÿ ôàéëîâîãî õåíäëà - â äåñòðóêòîðå çàêðûâàåò ôàéë"
			    stereotype 	"Box"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"44FED78F02EF"
				    supplier   	"Logical View::shared::GCL::data::std_defs::FILE"
				    quidu      	"44FEBEBC0030")))
			(object Class "FILE"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"true"))
			    quid       	"44FEBEBC0030"
			    documentation 	"íóæíî ïåðåíåñòè âî âíåøíþþ ëèáó"
			    stereotype 	"Typedef")))
		(object Parameterized_Class "DirectMap"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*44FEC13E0149_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *44FEC13E0149_CUSTOM_INCLUDES*¤#include <vector>¤//#UC END# *44FEC13E0149_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*44FEC13E0149*"
			    value      	(value Text 
|//#UC START# *44FEC13E0149*¤public:¤	class InvalidKey : public std::exception {¤	};¤	class UnsortedKey : public std::exception {¤	};¤¤protected:¤	struct Node {¤		_Key key;¤		_Data data;¤	};¤¤	typedef std::vector<Node> NodeBuff;¤¤	class NodeCache {¤		struct Item {¤			Item(const Node* n = 0) : node (n), access_value(2) {¤			}¤¤			const Node* node;¤			mutable unsigned short access_value;¤		};¤		typedef std::vector<Item> CacheBuf;¤¤	public:¤		NodeCache (size_t size) : m_last (size), m_size(size) {¤			m_last_node = 0;¤		}¤		¤		void clear () {¤			m_last_node = 0;¤			m_last = m_size;¤			m_remove_ind = 0;¤			m_cache_buf.clear();¤		}¤¤		inline const Node* find (const _Key& key) const {¤			if (m_last_node && m_last_node->key == key) {¤				return m_last_node;¤			} else {¤				return 0;¤			}¤¤			if (m_last < m_cache_buf.size() && m_cache_buf[m_last].node->key == key) {¤				return m_cache_buf[m_last].node;¤			} ¤			¤			m_remove_ind = 0;¤			const Node* ret = 0;¤¤			for (size_t i = 0; i < m_cache_buf.size(); i++) {¤				if (m_cache_buf[i].node->key == key) {¤					ret = m_cache_buf[i].node;¤					m_last = i;¤					m_cache_buf[i].access_value += 2;¤					break;¤				} else {¤					if (m_cache_buf[i].access_value > m_size) {¤						m_cache_buf[i].access_value -= 2;¤					} else if (m_cache_buf[i].access_value) {¤						--m_cache_buf[i].access_value;¤					}¤¤					if (m_cache_buf[m_remove_ind].access_value > m_cache_buf[i].access_value) {¤						m_remove_ind = i;¤					}¤				}¤			}¤¤			return ret;¤		}¤		inline void add (const Node* node) {¤			m_last_node = node;¤			return;¤¤			if (m_cache_buf.size() < m_size) {¤				m_cache_buf.push_back (Item(node));¤				m_last = m_cache_buf.size() - 1;¤			} else {¤				m_cache_buf[m_remove_ind].node = node;¤				m_cache_buf[m_remove_ind].access_value = 2;¤				m_last = m_remove_ind;¤			}¤		}¤	private:¤		mutable const Node* m_last_node;¤¤		mutable unsigned long m_last;¤		mutable unsigned long m_remove_ind;¤		unsigned long m_size;¤		CacheBuf m_cache_buf;¤	};¤public:¤	DirectMap (size_t resize_step = 1, size_t init_size = 0/*, bool use_cache = 0*/) ¤		: m_cache(10)¤		, m_resize_step(resize_step)¤		, m_count(0)¤//		, m_use_cache(use_cache)¤	{¤		m_last = 0;¤		this->resize_buff (init_size);¤		//m_ps_count = 0;¤		//m_bs_count = 0;¤	}¤¤	unsigned long size () const {¤		return m_count;¤	}¤¤	void clear () {¤		m_last = 0;¤		//m_ps_count = 0;¤		//m_bs_count = 0;¤		m_count = 0;¤		m_buff.clear();¤		m_cache.clear();¤	}¤¤	void reserve (unsigned long size) {¤		this->resize_buff (size);¤	}¤¤	inline void add (const _Key& key, const _Data& data) {¤		if (m_count && m_buff[m_count-1].key > key) {¤			throw UnsortedKey();¤		}¤		if (m_count >= m_buff.size()) {¤			this->resize_buff (m_buff.size() + m_resize_step);			¤		}¤¤		m_buff[m_count].key = key;¤		m_buff[m_count].data = data;¤		m_count++;¤	}¤	const _Data& operator [] (const _Key& key) const {¤		//const Node* ret = m_use_cache ? this->p_search(key) : this->bin_search(key);¤		const Node* ret = this->bin_search(key);¤		if (!ret) {¤			throw InvalidKey();¤		}¤		return ret->data;¤	}¤	_Data& operator [] (const _Key& key) {¤		//const Node* ret = m_use_cache ? this->p_search(key) : this->bin_search(key);¤		const Node* ret = this->bin_search(key);¤		if (!ret) {¤			throw InvalidKey();¤		}¤		return const_cast<_Data&>(ret->data);¤	}¤	bool find (const _Key& key) const {¤		//return (m_use_cache ? this->p_search(key) : this->bin_search(key)) != 0;¤		return this->bin_search(key) != 0;¤	}¤	unsigned long index (const _Key& key) const¤	throw (InvalidKey) ¤	{¤		const Node* f = this->bin_search(key);¤		if (!f) {¤			throw InvalidKey ();¤		}¤		return f - &m_buff.front();¤	}¤	const _Key key (unsigned long ind) const {¤		return m_buff[ind].key;¤	}¤¤	const _Data& data (unsigned long ind) const {¤		return m_buff[ind].data;¤	}¤¤	void save_to_disk () {¤		FILE* out = mpcxc_fopen ("t:\\etalon.lst", "wb"); // GARANT_XXX¤¤		fwrite (&m_count, 1, sizeof(unsigned long), out);¤		fwrite (&m_buff[0], m_count, sizeof(Node), out);¤		¤		fclose (out);¤	}¤¤	void load_from_disk () {¤		FILE* in = mpcxc_fopen ("t:\\etalon.lst", "rb");¤		fread (&m_count, 1, sizeof(unsigned long), in);¤¤		this->resize_buff (m_count);¤¤		if (fread (&m_buff[0], sizeof(Node), m_count, in) != m_count) {¤			assert (0);¤		}¤		fclose (in);¤	}¤¤protected:¤	const Node* bin_search (const _Key& key) const {¤		const Node* ret = m_cache.find(key);				¤		if (ret) {¤			return ret;¤		}¤¤		register const Node* lo = &m_buff[0];¤		register const Node* hi = lo + (m_count-1);¤		register const Node* mid;		¤		¤		unsigned int half;¤		unsigned int num = m_count;¤		while (lo <= hi) {¤			//m_bs_count++;¤			if (half = num / 2) {¤				mid = lo + (num & 1 ? half : (half - 1));¤¤				if (key < mid->key) {¤					hi = mid - 1;¤					num = num & 1 ? half : half-1;¤				} else if (mid->key < key) {¤					lo = mid + 1;¤					num = half;¤				} else {¤					ret = mid;¤					break;¤				}						¤			} else if (num) {¤				ret = (key < lo->key || lo->key < key) ? 0 : lo;¤				break;¤			} else {¤				ret = 0;¤				break;¤			}¤		}¤		¤		if (ret) {¤			m_cache.add (ret);¤		}¤¤		return ret;¤	}¤¤	/*const Node* p_search (const _Key& key) const {¤		const Node* ret = m_cache.find(key);¤		if (ret) {¤			return ret;¤		}¤¤		register const Node* lo = &m_buff[0];¤		register const Node* hi = lo + (m_count-1);¤		register const Node* mid;¤¤		unsigned int half;¤		unsigned int key_len;¤		unsigned long p = (hi->key - lo->key) / (hi - lo);¤¤		if (!(key_len = key - lo->key)) {¤			ret = lo;			¤		} else {¤			m_ps_count++;¤			half = key_len  / p;¤			if (half>m_count) {¤				half = m_count;¤			}¤			mid = lo + (half ? half : 1);¤¤			while (lo < hi) {			¤				if (key < mid->key) {¤					hi = mid - 1;¤														¤					if (!(key_len = hi->key - key)) {¤						ret = hi;¤						break;¤					}¤¤					half = (key_len * (hi - lo)) / (hi->key - lo->key);¤					¤					mid = hi - (half ? half : 1);¤				} else if (mid->key < key) {¤					lo = mid + 1;					¤¤					if (!(key_len = key - lo->key)) {¤						ret = lo;¤						break;¤					}¤¤					half = (key_len * (hi - lo)) / (hi->key - lo->key);¤¤					mid = lo + (half ? half : 1);¤				} else {¤					ret = mid;¤					break;¤				}			 ¤			}¤		}¤¤		if (ret) {¤			m_cache.add (ret);¤		}¤¤		return ret;¤	}*/¤¤protected:¤	void resize_buff (size_t count) {¤		m_buff.resize(count);	¤		start = &(*m_buff.begin ()); // GARANT_IT¤	}¤¤public:¤	Node* start;¤	¤protected:¤	unsigned long m_count;¤	size_t m_resize_step;¤	NodeBuff m_buff;¤	mutable NodeCache m_cache;¤	//bool m_use_cache;¤¤	mutable const Node* m_last;¤	//mutable unsigned long m_bs_count;¤	//mutable unsigned long m_ps_count;¤//#UC END# *44FEC13E0149*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FEC13E0149_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *44FEC13E0149_CUSTOM_INCLUDES*¤//#UC END# *44FEC13E0149_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FEC13E0149*"
			    value      	"//#UC START# *44FEC13E0149*¤//#UC END# *44FEC13E0149*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FEC13E0149_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *44FEC13E0149_DESTR_BODY*¤	//#UC END# *44FEC13E0149_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*44FEC13E0149_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *44FEC13E0149_CUSTOM_INCLUDES*¤//#UC END# *44FEC13E0149_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*44FEC13E0149*"
			    value      	"//#UC START# *44FEC13E0149*¤//#UC END# *44FEC13E0149*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*44FEC13E0149_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *44FEC13E0149_DESTR_BODY*¤	//#UC END# *44FEC13E0149_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/DirectMap.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/data/DirectMap.i.h"))
		    quid       	"44FEC13E0149"
		    documentation 	"áûñòðàÿ ìàïà äëÿ ñîðòèðîâàííûõ ïîñëåäîâàòåëüíîñòåé áîëüøèõ îáúåìîâ"
		    stereotype 	"SimpleClass"
		    language   	"MDA Generator"
		    parameters 	(list Parameters
			(object Parameter "class _Key"
			    quid       	"44FEC5CE02A1")
			(object Parameter "class _Data"
			    quid       	"44FEC5CE0291")))
		(object Class "Buffer"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450135270167_USER_INCLUDES*"
			    value      	(value Text 
|//#UC START# *450135270167_USER_INCLUDES*¤#include <map>¤#include "loki/TypeManip.h"¤//#UC END# *450135270167_USER_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450135270167_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *450135270167_USER_DEFINITION*¤#define GCL_BUFFER_PAGE_SIZE (65536)¤¤class NullGuard {¤public:¤	NullGuard (Core::NullMutex& nm) {¤	}¤};¤¤template <bool use_guard>¤class BufferBase {¤public:¤	typedef typename Loki::Select<use_guard, Core::RWMutex, Core::NullMutex>::Result BufferMutex;¤	typedef typename Loki::Select<use_guard, Core::ReadGuard, NullGuard>::Result BufferReadGuard;¤	typedef typename Loki::Select<use_guard, Core::WriteGuard, NullGuard>::Result BufferWriteGuard;¤¤public:¤	BufferBase() {¤	}¤¤	~BufferBase() {¤		this->clean();¤	}¤¤	void clean () {¤		BufferWriteGuard _local_bg (m_mutex);¤		for ( typename PageMap::iterator it = m_pages.begin(); it != m_pages.end(); it++ ) { // GARANT_TYPENAME¤			//delete (*it).second;¤			delete (*it);¤		}¤		m_pages.clear();¤	}¤¤	int read (void* buf, unsigned from, unsigned count) {		¤		BufferReadGuard _local_bg (m_mutex);¤		unsigned len = length_i();		¤		¤		long page_count = m_pages.size();		¤		if ( from > len ) return 0;¤		if ( from + count > len ) count = len-from;¤		unsigned first_page = from / GCL_BUFFER_PAGE_SIZE;¤		unsigned last_page = (from+count) / GCL_BUFFER_PAGE_SIZE;¤		unsigned first_offset = from % GCL_BUFFER_PAGE_SIZE;¤		unsigned last_offset = (from+count) % GCL_BUFFER_PAGE_SIZE;¤¤		if ( first_page == last_page ) {¤			memcpy ( (char*)buf, m_pages[first_page]->buf+first_offset, last_offset - first_offset);¤		} else {¤			unsigned buf_offset = 0;¤			unsigned page = first_page;¤¤			// first page¤			memcpy ( (char*)buf+buf_offset, m_pages[page++]->buf+first_offset, GCL_BUFFER_PAGE_SIZE - first_offset);¤			buf_offset += GCL_BUFFER_PAGE_SIZE - first_offset;¤¤			// all middle pages¤			for ( ; page < last_page; page++ ) {¤				memcpy ( (char*)buf+buf_offset, m_pages[page]->buf, GCL_BUFFER_PAGE_SIZE );¤				buf_offset += GCL_BUFFER_PAGE_SIZE;¤			};¤¤			// last page¤			if (last_offset) {¤				memcpy ( (char*)buf+buf_offset, m_pages[last_page]->buf, last_offset );¤			}¤		}¤¤		return count;¤	}¤¤	void append (const void* buf, unsigned count) {¤		BufferWriteGuard _local_bg (m_mutex);¤		if (0 == m_pages.size ()) {¤			this->add_page ();¤		}¤		unsigned page = m_pages.size () - 1;¤		¤		unsigned buf_offset = 0;¤		¤		while (count) {¤			unsigned move_count = GCL_BUFFER_PAGE_SIZE - m_pages[page]->len < count ¤				? GCL_BUFFER_PAGE_SIZE - m_pages[page]->len : count;¤			¤			try {¤				memcpy ( m_pages[page]->buf+m_pages[page]->len, (char*)buf + buf_offset, move_count);¤			} catch (...) {¤				//LOG_UEX (( "GCL::Buffer::append (%M)" ));¤			}¤¤			m_pages[page]->len += move_count;¤			buf_offset += move_count;¤			count -= move_count;¤¤			if (count) {¤				this->add_page ();¤			}¤			page++;¤		}¤	}¤¤	unsigned length () {¤		BufferReadGuard _local_bg (m_mutex);¤		return length_i ();¤	}¤¤protected:¤	void add_page () {¤		try {¤			MemPage* page = new MemPage;¤			m_pages.push_back (page);¤		}¤		catch (...) {¤			throw;¤		}¤	}¤¤private:¤	unsigned length_i () {¤		unsigned len = 0;¤		try {¤			unsigned page_count;¤			page_count = m_pages.size ();¤			¤			if (!page_count) {¤				return 0;¤			}			¤¤			len = ((page_count-1)*GCL_BUFFER_PAGE_SIZE) + m_pages[page_count-1]->len;		¤		} catch (...) {¤			throw;¤		}¤		return len;¤	}¤¤protected:¤	struct MemPage {¤		unsigned char* buf;¤		unsigned len;¤		MemPage () {¤			buf = new unsigned char [GCL_BUFFER_PAGE_SIZE];¤			len = 0;¤		}¤		~MemPage () {¤			delete buf;¤		}¤	};¤¤	typedef std::vector <MemPage*> PageMap;¤	PageMap m_pages;¤	MemPage* m_current_page;¤	¤	BufferMutex m_mutex;¤¤};¤¤typedef BufferBase<true> Buffer;¤¤template<bool is_guard>¤class BufferExBase {¤public:¤	BufferExBase () : m_position (0) {¤	}¤	¤	void clean () {¤		m_buffer.clean ();¤	}¤¤	int read (void* buf, unsigned count) {¤		assert (m_position < this->length ());¤		assert (m_position + count <= this->length ());¤¤		int readed = m_buffer.read (buf, m_position, count);¤		m_position += readed;¤		assert (readed == count);¤		return readed;¤	}¤¤	void append(const void* buf, unsigned count) {¤		m_buffer.append (buf, count);¤	}¤¤	unsigned length () {¤		return m_buffer.length ();¤	}¤	¤	void seek (unsigned position) {¤		assert (position < this->length ());¤		m_position = position;¤	}¤¤	bool is_end_position () {¤		return (m_position < this->length ()) ? false: true;¤	}¤	¤private:¤	BufferBase<is_guard> m_buffer;¤	unsigned m_position;¤};¤¤typedef BufferExBase<false> BufferEx;¤¤//#UC END# *450135270167_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/Buffer.h"))
		    quid       	"450135270167"
		    documentation 	"êëàññ äëÿ ðàáîòû ñ ëèíåéíûì áóôåðîì äàííûõ, íåîãðàíè÷åííîé äëèííû, âíóòðè îðãàíèçîâàí êàê ñòðàíè÷íûé âåêòîð"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "OnDemandFile"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450135840290_USER_INCLUDES*"
			    value      	"//#UC START# *450135840290_USER_INCLUDES*¤#include <fstream>¤#include <string>¤//#UC END# *450135840290_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450135840290_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *450135840290_USER_DEFINITION*¤class OnDemandFile : public std::ofstream {¤	int m_mode;¤	std::string m_file_name;¤	bool m_is_file_open;	¤¤public:¤	class FileOpenError : public std::exception {¤	};¤¤	OnDemandFile (std::string file_name, int mode) ¤		: m_file_name (file_name)¤		, m_mode (mode)¤		, m_is_file_open (false)¤	{¤	};¤¤	void check_open () {¤		if (!m_is_file_open) {¤			open (m_file_name.data(), m_mode);¤			if (!is_open()) throw FileOpenError();¤			else m_is_file_open = true;¤		}¤	}¤};¤¤}; //GCL¤¤// INSERTERS¤inline GCL::OnDemandFile& __cdecl operator<< (GCL::OnDemandFile& _O, std::string _S) {¤	_O.check_open ();¤	std::ofstream* stdf = &_O;¤	(*stdf) << _S.data();¤	return (_O); ¤};¤¤template<class _E> ¤inline GCL::OnDemandFile& __cdecl operator<< (GCL::OnDemandFile& _O, _E _C) {¤	_O.check_open ();¤	std::ofstream* stdf = &_O;¤	(*stdf) << _C;¤	return (_O); ¤};¤¤namespace GCL {¤//#UC END# *450135840290_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/OnDemandFile.h"))
		    quid       	"450135840290"
		    documentation 	"îáâÿçêà íàä std::ofstream, ñîçäàþùàÿ âûõîäíîé ôàéë, òîëüêî ïðè ïåðâîì ê íåìó îáðàùåíèè"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "OrphanStr"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450135E90109_USER_INCLUDES*"
			    value      	"//#UC START# *450135E90109_USER_INCLUDES*¤//#UC END# *450135E90109_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450135E90109_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *450135E90109_USER_DEFINITION*¤struct OrphanStr {¤	typedef unsigned OrphanType;¤	const char* str;¤	OrphanStr (char* s, OrphanType orphan) : str (s), m_orphan (orphan) {}¤	OrphanStr (const char* s) : str (s), m_orphan (false) {}¤	~OrphanStr () {¤		if (m_orphan) {¤			delete str;¤		}¤	}¤	// There are not a real copy. It is to return OrphanStr from functions ONLY¤	OrphanStr (const OrphanStr& os) {¤		str = os.str;¤		m_orphan = os.m_orphan;¤		const_cast <OrphanStr&> (os).m_orphan = false;¤	}¤	OrphanStr& operator= (const OrphanStr& os); /* { GARANT_ISOCPP: is NOT used by linker¤		if (m_orphan) {¤			delete str;¤		}¤		str = os.str;¤		m_orphan = os.m_orphan;¤		const_cast <OrphanStr&> (os).m_orphan = false;¤	} */¤	// It is DANGEROUSLY to use because of temporary objects.¤	/*inline operator const char* () const;*/¤	inline char* get (OrphanType orphan) {¤		m_orphan = orphan;¤		return const_cast <char*> (str);¤	}¤	inline bool is_orphan () const {¤		return m_orphan != 0;¤	}¤private:¤	OrphanType m_orphan;¤};¤//#UC END# *450135E90109_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/OrphanStr.h"))
		    quid       	"450135E90109"
		    documentation 	"ìåíåäæåð ñòðîêè ïîçâîëÿþùèå ïðè âîçâðàòå ðåçóëüòàòà óêàçûâàòü íóæíî ëè îñâîáîæäàòü áóôåð èëè íåò, çà ñ÷åò ÷åãî ìîæíî ýêîíîìèò êîë-âî ðåàëëîêàöèé ïàìÿòè"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "PackedStrStream"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501364F0290_USER_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4501364F0290_USER_INCLUDES*¤#include <vector>¤¤/*¤usage:¤	GCL::PackedStrStream pss;¤	¤	const char* in1 = "abcd";¤	long in2 = 100;¤	long in3 = 101;¤¤	pss << in1;¤	pss << in2;¤	pss << in3;¤¤	LOG_D (("pss is \"%s\" (%d, %d)", pss.str(), pss.length(), pss.item_count()));¤¤	Core::Aptr<char> out;¤	pss >> out.out();¤	LOG_D (("out1 is \"%s\"", out.ptr()));¤	¤	long l_out;¤	pss >> l_out;¤	LOG_D (("out2 is %d", l_out));¤	pss >> l_out;¤	LOG_D (("out2 is %d", l_out));¤¤output:¤	pss is "Äabcdôõ" (7, 3)¤	out1 is "abcd"¤	out2 is 100¤	out2 is 101¤¤implementation buffer format:¤		  byte 1    byte 2     byte 3     byte 4    byte 5¤		1VVVVVVV      -          -          -          -¤		01VVVVVV   VVVVVVVV      -          -          -¤		001VVVVV   VVVVVVVV   VVVVVVVV      -          -¤		0001VVVV   VVVVVVVV   VVVVVVVV   VVVVVVVV      -¤		0000MMMM      D         D(?)       D(?)       D(?)¤¤  V..V - value (non zerro)¤  M..M - byte mask¤  D    - data (non zerro)¤*/¤¤//#UC END# *4501364F0290_USER_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501364F0290_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4501364F0290_USER_DEFINITION*¤class PackedStrStream {¤public:¤	PackedStrStream (unsigned size = 0) {¤		m_buf.resize(size);¤		m_item_count = 0;		¤	}¤	¤	PackedStrStream (const char* str) : m_buf (str) {¤		m_item_count = 0;		¤	}¤¤	virtual ~PackedStrStream () {¤	}¤¤	bool operator < (const PackedStrStream& c) const {¤		return m_buf < c.m_buf;¤	}¤¤	void operator << (const char* str) {¤		size_t len = strlen(str);¤		(*this) << (unsigned long)len;¤¤		for (unsigned int l=0; l < len; l++) {¤			m_buf << str[l];¤		}¤	}¤¤	void operator >> (char*& str) {¤		unsigned long len;¤		(*this) >> len;¤¤		str = new char[len+1];¤		str[len] = 0;¤¤		for (unsigned long l=0; l < len; l++) {¤			m_buf >> str[l];¤		}¤	}¤¤	void operator << (long l) {¤		this->operator << ((unsigned long)l);¤	}¤¤	void operator << (unsigned long l) {¤		// this code may be not optimized¤		m_item_count++;¤¤		register char first_byte = 0;¤		register const char* p = (const char*) &l;¤		¤		if (p[3]&0xF0) {¤			first_byte |= 0x08;¤		}				¤	¤		if (p[2]) {¤			if (first_byte || p[2]&0xE0) {¤				first_byte |= 0x04;¤				if (p[3]) {¤					first_byte |= 0x08;¤				}¤			} ¤		} else if (p[3]) {¤			first_byte |= 0x08;¤		}¤¤		if (p[1]) {¤			if (first_byte || p[1]&0xC0) {¤				first_byte |= 0x02;¤				if (p[2]) {¤					first_byte |= 0x04;¤				}¤				if (p[3]) {¤					first_byte |= 0x08;¤				}¤			}¤		} else {¤			if (p[2]) {¤				first_byte |= 0x04;¤			}¤			if (p[3]) {¤				first_byte |= 0x08;¤			}¤		}¤¤		if (p[0]) {¤			if (first_byte || p[0]&0x80) {¤				first_byte |= 0x01;¤				if (p[1]) {¤					first_byte |= 0x02;¤				}¤				if (p[2]) {¤					first_byte |= 0x04;¤				}¤				if (p[3]) {¤					first_byte |= 0x08;¤				}¤			}¤		} else {¤			if (p[1]) {¤				first_byte |= 0x02;¤			}¤			if (p[2]) {¤				first_byte |= 0x04;¤			}¤			if (p[3]) {¤				first_byte |= 0x08;¤			}¤		}¤¤		if (first_byte) {¤			m_buf << first_byte;¤			if (p[3]) {¤				m_buf << p[3];¤			}¤			if (p[2]) {¤				m_buf << p[2];¤			}¤			if (p[1]) {¤				m_buf << p[1];¤			}¤			if (p[0]) {¤				m_buf << p[0];¤			}			¤		} else {¤			if (p[3]) {¤				first_byte = p[3];¤				first_byte |= 0x10;¤				m_buf << first_byte;¤				m_buf << p[2];¤				m_buf << p[1];¤				m_buf << p[0];¤			} else if (p[2]) {¤				first_byte = p[2];¤				first_byte |= 0x20;¤				m_buf << first_byte;¤				m_buf << p[1];¤				m_buf << p[0];¤			} else if (p[1]) {¤				first_byte = p[1];¤				first_byte |= 0x40;¤				m_buf << first_byte;¤				m_buf << p[0];¤			} else {¤				first_byte = p[0];¤				first_byte |= 0x80;¤				m_buf << first_byte;¤			}¤		}¤	}¤¤	void operator >> (long& l) {¤		unsigned long wrap;¤		this->operator >> (wrap);¤		l = (long)wrap;¤	}¤¤	void operator >> (unsigned long& l) {¤		l = 0;¤		register char* p = (char*) &l;¤		register char first_byte;¤		m_buf >> first_byte;¤¤		if ((first_byte & 0xF0) == 0x10) {¤			p[3] = first_byte & 0x0F;¤			m_buf >> p[2];¤			m_buf >> p[1];¤			m_buf >> p[0];¤		} else if ((first_byte & 0xE0) == 0x20) {¤			p[2] = first_byte & 0x1F;¤			m_buf >> p[1];¤			m_buf >> p[0];¤		} else if ((first_byte & 0xC0) == 0x40) {¤			p[1] = first_byte & 0x3F;¤			m_buf >> p[0];¤		} else if (first_byte & 0x80) {¤			p[0] = first_byte & 0x7F;¤		} else {¤			if (first_byte & 0x08) {¤				m_buf >> p[3];¤			}¤			if (first_byte & 0x04) {¤				m_buf >> p[2];¤			}¤			if (first_byte & 0x02) {¤				m_buf >> p[1];¤			}¤			if (first_byte & 0x01) {¤				m_buf >> p[0];¤			}¤		}¤	}¤¤	const char* str () const {¤		m_buf << 0;¤		return m_buf.begin();		¤	}¤	unsigned length () {¤		return m_buf.size();¤	}¤	unsigned item_count () {¤		return m_item_count;¤	}¤¤private:¤	// std::vector is not good solution for dynamic binary stream¤	class IOStream: public std::vector<char> {¤	public:¤		IOStream () {¤			m_it = 0;¤		}¤¤		IOStream (const char* str) : std::vector<char>(str, str + strlen(str)) {¤			m_it = 0;¤		}¤¤		inline void operator << (char c) {¤			this->push_back(c);¤		}¤¤		inline void operator >> (char& c) {¤			c = *(this->begin() + m_it);¤			m_it++;¤		}¤¤	protected:¤		unsigned m_it;¤	};¤¤private:¤	mutable IOStream m_buf;¤	unsigned m_item_count;¤};¤//#UC END# *4501364F0290_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/PackedStrStream.h"))
		    quid       	"4501364F0290"
		    documentation 	"îáúåäèíÿåò ëþáîå êîë-âî âõîäíûõ äàííûõ (öåëûõ ÷èñåë, ñòðîê (áåç îãðàíè÷åíèÿ ôîðìàòà)) â îäèí íåïðåðûâíûé ñòðîêîâûé ASCII áóôåð, ñ âîçìîæíîñòüþ ïîñëåäóþùåãî èçâëå÷åíèÿ âñåõ ââåäåííûõ äàííûõ (ïî ïðèíöèïó ñòåêà). èìååò ëó÷øèå ïîêàçàòåëè ðàçìåðà îáúåäèíåííîãî áóôåðà, çà ñ÷åò ñòðîêîâîé óïàêîâêè ÷èñåë. "
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "StaticNode"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4501367B01C5_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4501367B01C5_CUSTOM_INCLUDES*¤//#UC END# *4501367B01C5_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4501367B01C5*"
			    value      	(value Text 
|//#UC START# *4501367B01C5*¤#ifdef _DEBUG¤bool StaticNode::s_need_print = 1;¤//long StaticNode::s_id = 0;¤#endif¤¤StaticNode::StaticNode () : m_parent (0), m_last_child (0), m_prev (0) {¤	//LOG_D (("StaticNode[%d]::StaticNode", this));¤	//ADD_OBJECT_WATCHER¤	//m_id__ = ++s_id;¤}¤¤unsigned StaticNode::get_parents_count () const {¤	unsigned n = 1;¤	const StaticNode* p = this;¤	while (p = p->m_parent) {¤		++n;¤	}¤	return n;¤}¤¤void StaticNode::insert_next (StaticNode* node) {  // ñïðàâî îò ñåáÿ (next)¤	node->m_prev = this;¤	node->m_next = m_next;¤	node->m_parent = m_parent; ¤	¤	// fix next¤	if (m_next.ptr()) {¤		m_next->m_prev = node;¤	} ¤¤	// fix self¤	m_next = node;	¤¤	// fix parent¤	if (m_parent) {¤		if (this == m_parent->m_last_child) {¤			m_parent->m_last_child = node;¤		}¤		m_parent->invalidate_children_count();¤	}	¤}¤¤void StaticNode::insert_prev (StaticNode* node) {  // ñëåâà îò ñåáÿ (prev)¤	StaticNode* prev_prev = m_prev;¤¤	node->m_next = StaticNode::_duplicate (this);¤	node->m_prev = prev_prev;¤	node->m_parent = m_parent;¤	¤	// fix self¤	m_prev = node;¤¤	// fix prev¤	if (prev_prev) {¤		prev_prev->m_next = node;¤	} ¤¤	// fix parent	¤	if (m_parent) {¤		if (this == m_parent->m_first_child.ptr()) {¤			m_parent->m_first_child = node;¤		}¤		m_parent->invalidate_children_count();¤	}	¤}¤¤// èçìåíåíèå (óäàëåíèå/ïåðåìåùåíèå)¤void StaticNode::remove_from_tree () {	¤	//fix next¤	if (m_next.ptr()) {¤		m_next->m_prev = m_prev;¤	}¤¤	StaticNode_var tmp_next = m_next._retn();¤¤	//fix parent¤	if (m_parent) {¤		m_parent->invalidate_children_count();¤		if (this == m_parent->m_last_child) {¤			m_parent->m_last_child = m_prev;¤		}¤¤		if (this == m_parent->m_first_child.ptr()) {¤			StaticNode* tmp_parent = m_parent;¤			m_parent = 0;¤			tmp_parent->m_first_child = tmp_next; // may be this is last referens for me			¤			return; // m_prev is 0 - no need to fix¤		} else {¤			m_parent = 0;¤		}¤	}¤	¤	// fix prev¤	if (m_prev) {¤		StaticNode* tmp_prev = m_prev;¤		m_prev = 0;¤		tmp_prev->m_next = tmp_next; // may be this is last referens for me¤		return;¤	}	¤}¤¤¤void StaticNode::move_to_destination (StaticNode* dest_node) {¤	StaticNode::_duplicate (this);¤	this->remove_from_tree();¤	dest_node->insert_back_child(this);¤}¤¤void StaticNode::copy_to_destination (StaticNode* dest_node) const {	¤	dest_node->insert_back_child(this->copy());¤}¤¤StaticNode* StaticNode::copy () const {¤	StaticNode_var copy = this->create_data_copy();¤¤	for (const StaticNode* n = m_first_child.ptr(); n; n = n->m_next.ptr()) {¤		copy->insert_back_child(n->copy());¤	}¤	return copy._retn();¤}¤¤// î÷èñòèòü âñå äî÷åðíèå óçëû¤void StaticNode::clear_children () {¤	m_first_child = 0;¤	m_last_child = 0;¤}¤¤// äîñòóï ê àòðèáóòàì óçëà¤unsigned long StaticNode::level () const { //ïîëó÷èòü óðîâåíü íîäû ¤	unsigned long ret = 0;¤	¤	if (!m_parent) {¤		return ret;¤	} else {¤		ret = 1;¤	}¤	¤	StaticNode* parent = m_parent;¤	while (parent = parent->m_parent) {¤		ret++;¤	}¤¤	return ret;¤}¤¤unsigned long StaticNode::_load_children_count () const { //êîëè÷åñòâî íåïîñðåäñòâåííûõ äåòåé ¤	unsigned long ret = 0;¤¤	//for (const StaticNode* cp = m_first_child.ptr ()/*m_last_child*/; cp; cp = cp->m_next.ptr ()/*m_prev*/) {¤	for (const StaticNode* cp = m_last_child; cp; cp = cp->m_prev) {¤		const StaticNodeStubBase* snsb = dynamic_cast<const StaticNodeStubBase*>(cp);¤		if (snsb) {¤			long stub_count = snsb->stub_count();¤			ret += abs(stub_count);¤			if (stub_count != 1 && snsb->has_pair()) {¤				ret++;¤				cp = cp->m_prev;¤			}¤		} else {¤			ret++;¤		}¤	}¤¤	return ret;¤}¤¤const StaticNode* StaticNode::child_by_index (unsigned long index) const {¤	for (const StaticNode* cp = m_first_child.ptr(); cp; cp = cp->m_next.ptr()) {¤		if (!index) {¤			return StaticNode::_duplicate (cp);¤		}¤¤		const StaticNodeStubBase* snsb = dynamic_cast<const StaticNodeStubBase*>(cp);¤		if (snsb) {¤			long stub_count = snsb->stub_count();¤			GDS_ASSERT (stub_count >= -1); //ses: incredible!!! algorithm error¤¤			unsigned long ind = abs(stub_count);¤¤			if (index < ind) {¤				if (!index) {¤					return StaticNode::_duplicate (cp);¤				}¤				return snsb->get_at (index);¤			} else {¤				index -= ind;¤				if (!index) {¤					return cp->m_next._sretn ();¤				}¤			}¤¤			if (ind != 1 && snsb->has_pair()) {¤				index--;¤				cp = cp->m_next.in ();¤			}¤		} else {¤			index--;¤		}¤	}¤	¤	return 0;¤}¤¤void StaticNode::invalidate_children_count () const {¤	ChildrenMapSingleton::instance ()->invalidate (this);¤}¤¤unsigned long StaticNode::parent_level (const StaticNode* node) const {¤	unsigned long ret = 0;¤	const StaticNode* parent = this;¤¤	while (parent = parent->m_parent) {¤		ret++;¤		if (parent == node) {¤			return ret;¤		}¤	}¤	return 0;¤}¤¤long StaticNode::get_index_from_parent () const {¤	long count = 1;¤	StaticNode* p = this->m_prev;¤¤	long i;¤	bool negative_stub = false;¤	for (; p; p = p->m_prev) {¤		i = p->get_nodes_count_for_me ();¤		if (negative_stub) {¤			if (i > 1) {¤				i = 1;¤			}¤			negative_stub = false;¤		}¤		if (i < 0) {¤			negative_stub = true;¤			i = -i;¤		}¤		count += i;¤	}¤¤	return count;¤}¤¤/*unsigned long NodeBase::index () const {¤	unsigned long ret = 0;¤	const StaticNode* node = this;¤		¤	for (const StaticNode* cp = m_prev; cp; cp = cp->m_prev) {		¤			¤		StaticNodeStubBase* snsb = dynamic_cast<StaticNodeStubBase*>(cp);¤¤		if (snsb) {¤			long sc = snsb->stub_count();¤			if (sc < 0) {¤				ret += -sc;¤			} else {¤				ret++;¤			}¤		} else {¤			ret++;			¤		}¤	}¤¤	return ret;¤}*/¤¤//#UC END# *4501367B01C5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4501367B01C5_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4501367B01C5_DESTR_BODY*¤	//LOG_D (("StaticNode[%d]::~StaticNode", this));¤	StaticNode* n = m_first_child.ptr();¤	if (n) {¤		while (n && n->ref_count() == 1) {¤			n = n->m_next.ptr();¤		}¤		if (!n) {¤			n = m_last_child;¤		}¤¤		for (; n; n = n->m_prev) {¤			n->m_next = 0;¤		}¤¤		// reqursive occures!  why???¤	}¤¤	ChildrenMapSingleton::instance ()->invalidate(this);¤	//REMOVE_OBJECT_WATCHER¤	//#UC END# *4501367B01C5_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501367B01C5_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4501367B01C5_CUSTOM_INCLUDES*¤#include "shared/Core/mng/CacheMap.h"¤//#UC END# *4501367B01C5_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501367B01C5*"
			    value      	(value Text 
|//#UC START# *4501367B01C5*¤	// exceptions¤	class ConcreteClassMustImplement {¤	};¤¤public:¤	static const StaticNode* shift_prev (const StaticNode*& node) {¤		return node = node->m_prev;¤	}¤¤	static StaticNode* shift_prev (StaticNode*& node) {¤		return node = node->m_prev;¤	}¤¤	static const StaticNode* shift_next (const StaticNode*& node) {¤		return node = node->m_next.ptr();¤	}¤¤	static StaticNode* shift_next (StaticNode*& node) {¤		return node = node->m_next.ptr();¤	}¤¤	static const StaticNode* shift_up (const StaticNode*& node) {¤		return node = node->m_parent;¤	}¤¤	static StaticNode* shift_up (StaticNode*& node) {¤		return node = node->m_parent;¤	}¤¤	struct VoidCloneFilter {¤		static bool is_meet (const StaticNode*) {¤			return true;¤		}¤	};¤¤	template <class _StaticNodeType, class _StaticNodeFactory, class _CloneFilter>¤	static _StaticNodeType* clone_tree (const _StaticNodeType* source, _StaticNodeFactory* factory, const _CloneFilter& filter) {¤		Core::Var<_StaticNodeType> new_node = factory->make_copy(source);¤		¤		_StaticNodeType* source_ch = dynamic_cast<_StaticNodeType*>(source->m_last_child);¤		while (source_ch) {¤			if (filter.is_meet (source_ch)) {¤				new_node->insert_front_child (clone_tree (source_ch, factory, filter));¤			}¤			source_ch = dynamic_cast<_StaticNodeType*>(source_ch->m_prev);¤		}¤¤		return new_node._retn();¤	}¤¤	template <class _EachFunc, class _EachArgs>¤	void for_each (_EachFunc& func, _EachArgs& res) {¤		func.each_func (this, res);¤		¤		StaticNode* ch = m_last_child;¤		while (ch) {¤			ch->for_each (func, res);¤			ch = ch->m_prev;¤		}¤	}¤¤	template <class _EachFunc, class _EachArgs>¤	void for_each (_EachFunc& func, _EachArgs& res) const {¤		func.each_func (this, res);¤		¤		StaticNode* ch = m_last_child;¤		while (ch) {¤			ch->for_each (func, res);¤			ch = ch->m_prev;¤		}¤	}¤¤protected:¤	unsigned get_parents_count () const;¤¤public:¤	virtual const StaticNode* child_by_index (unsigned long index) const; // NOT CONSTRUCTOR!!!!¤	virtual StaticNode* child_by_index (unsigned long index) { // NOT CONSTRUCTOR!!!!¤		return const_cast<StaticNode*>(((const StaticNode*const)this)->child_by_index (index));¤	}¤¤	virtual StaticNode* create_data_copy () const {¤		throw ConcreteClassMustImplement ();¤	}¤¤	virtual StaticNode* remove_me_and_siblings (unsigned long& count) {¤		StaticNode_var ret = StaticNode::_duplicate(m_next.ptr());¤		this->remove_from_tree ();¤		count--;¤		return ret._retn();¤	}¤¤	virtual long get_nodes_count_for_me () {¤		return 1;¤	}¤¤	virtual long get_index_from_parent () const;¤¤        virtual bool is_real_node () const {¤                return false;¤        }¤¤public:¤	StaticNode ();¤¤#ifdef _DEBUG¤	static bool s_need_print;¤¤	void print_tree() const {¤		if (s_need_print) {¤			StaticNode* root = const_cast<StaticNode*>(this);¤			while (root->m_parent) {¤				root = root->m_parent;¤			}¤¤			root->draw_node(0, 0);¤			root->print_childs(0);¤		}¤	}¤¤	virtual void draw_node (unsigned level, unsigned index) const {¤		// empty¤	};¤¤	void print_childs (unsigned level) const {¤		level++;¤		unsigned index = 0;¤		for (const StaticNode* n = m_first_child.ptr(); n; n = n->m_next.in ()) {¤			n->draw_node(level, index++);¤			n->print_childs(level);¤		}¤	}¤#endif¤¤	bool is_it_higher (const StaticNode* it) const {¤		if (it == this || !it) {¤			return false;¤		}¤		¤		// balance levels¤		unsigned my_level = this->level();¤		unsigned it_level = it->level();¤¤		const StaticNode* my_branch = this;¤		const StaticNode* it_branch = it;¤¤		long delta = my_level - it_level;¤		if (delta > 0) {¤			for (; delta; delta--) {¤				StaticNode::shift_up (my_branch);¤			}¤		} else if (delta < 0) {¤			for (; delta; delta++) {¤				StaticNode::shift_up (it_branch);¤			}¤		}¤¤		if (my_branch == it_branch) {¤			return my_level - it_level > 0;¤		}¤¤		//find common parent¤		while (it_branch->m_parent != my_branch->m_parent) {¤			StaticNode::shift_up (my_branch);¤			StaticNode::shift_up (it_branch);¤		}¤¤		//gos up from smaler adress¤		if (my_branch > it_branch) {¤			const StaticNode* tmp_my_branch = my_branch;¤			while (tmp_my_branch) {¤				StaticNode::shift_prev (tmp_my_branch);¤				if (tmp_my_branch = it_branch) {¤					return false;¤				}¤			}¤			return true;¤		} else {¤			const StaticNode* tmp_it_branch = it_branch;¤			while (tmp_it_branch) {¤				StaticNode::shift_prev (tmp_it_branch);¤				if (tmp_it_branch = my_branch) {¤					return true;¤				}¤			}¤			return false;¤		}		¤	}¤¤	bool is_my_child (const StaticNode* child) {¤		for (const StaticNode* c = m_last_child; c; c = c->m_prev) {¤			if (c == child) {¤				return true;¤			}¤		}¤		return false;¤	}¤¤	/* [Tree DEBUG Start]¤	bool is_my_child_ex (const StaticNode* child, std::vector<const StaticNode*>& vec) {¤		for (const StaticNode* y = m_last_child; y; y = y->m_prev) {¤			int x = 0;¤		}¤¤		for (const StaticNode* c = m_last_child; c; c = c->m_prev) {¤			vec.push_back (c);¤			if (c == child) {¤				return true;¤			}¤		}¤		return false;¤	}¤	*/ ¤	// [Tree DEBUG End]¤¤	virtual bool is_equal (const StaticNode* e) const {¤		return e == this;¤	}¤	¤	// äîñòóï ê ñòðóêòóðå¤	const StaticNode* root () const {¤		const StaticNode* node = this;¤		while (node->m_parent) {¤			node = node->m_parent;¤		}¤		return StaticNode::_duplicate(node);¤	}¤	¤	StaticNode* root () {¤		StaticNode* node = this;¤		while (node->m_parent) {¤			node = node->m_parent;¤		}¤		return StaticNode::_duplicate(node);¤	}¤¤	const StaticNode* parent () const {¤		return StaticNode::_duplicate (m_parent);¤	}¤¤	StaticNode* parent () {¤		return StaticNode::_duplicate (m_parent);¤	}¤¤	virtual const StaticNode* next () const {¤		return m_next._sretn();¤	}¤¤	virtual StaticNode* next () {¤		return m_next._sretn();¤	}¤¤	virtual StaticNode* prev () {¤		return StaticNode::_duplicate (m_prev);¤	}¤¤	virtual const StaticNode* prev () const {¤		return StaticNode::_duplicate (m_prev);¤	}¤¤	bool is_prev (const StaticNode* prev) const {¤		return prev ? m_prev == prev : false;¤	}¤¤	const StaticNode* first_child () const {¤		return m_first_child._sretn();¤	}¤¤	StaticNode* first_child () {¤		return m_first_child._sretn();¤	}¤¤	StaticNode* last_child () {¤		return StaticNode::_duplicate (m_last_child);¤	}¤¤	const StaticNode* last_child () const {¤		return StaticNode::_duplicate (m_last_child);¤	}¤¤	bool is_last () const {¤		return m_next.ptr() == 0;¤	}¤¤	// Ïåðâûé ýëåìåíò.¤	bool is_first () const {¤		return m_prev == 0;¤	}¤¤	// Åñòü ëè äî÷åðíèå ýëåìåíòû.¤	bool has_children () const {¤		return m_last_child != 0;¤	}¤¤	/*bool has_sub_child () const {¤		for (StaticNode* cp = m_last_child; cp; cp = cp->_prev()) {¤			if (cp->m_last_child) {¤				return true;¤			}¤		}¤		return false;¤	}*/¤¤	bool is_root() const {¤		return m_parent == 0;¤	}¤¤	// ñîçäàíèå ñòðóêòóðû¤	void insert_back_child (StaticNode* node) {  // â êîíåö ñïèñêà äåòåé¤		if (this->m_last_child != 0) {¤			m_last_child->insert_next(node);¤		} else {¤			this->insert_front_child(node);¤		}¤	}¤¤	void insert_front_child (StaticNode* node) {  // â íà÷àëî ñïèñêà äåòåé¤		if (m_first_child.ptr()) {¤			m_first_child->insert_prev(node);¤		} else {¤			m_first_child = node;¤			m_last_child = node;			¤			node->m_parent = this;¤			this->invalidate_children_count();¤		}¤	}¤	void insert_next (StaticNode* node);  // ñïðàâî îò ñåáÿ¤	void insert_prev (StaticNode* node);  // ñëåâî îò ñåáÿ¤¤	// èçìåíåíèå (óäàëåíèå/ïåðåìåùåíèå)¤	void remove_from_tree ();¤	void move_to_destination (StaticNode* dest_node); // work inside one tree¤	void copy_to_destination (StaticNode* dest_node) const; // recursive, work inside one tree¤¤	// make node copy¤	StaticNode* copy () const;¤	// î÷èñòèòü âñå äî÷åðíèå óçëû¤	void clear_children ();¤¤	// äîñòóï ê àòðèáóòàì óçëà¤	virtual unsigned long level () const; //ïîëó÷èòü óðîâåíü íîäû ¤	¤	unsigned long children_count () const { //êîëè÷åñòâî íåïîñðåäñòâåííûõ äåòåé ¤		return m_last_child ? ChildrenMapSingleton::instance ()->get_value (this) : 0;¤	}¤¤	unsigned long parent_level (const StaticNode* node) const; // óðîâåíü âëîæåííîñòè â node, 0 åñëè node íå ÿâëÿåòñÿ ïðåäêîì¤		¤	virtual bool operator == (const StaticNode& c) const {¤		return this == &c;¤	}¤	virtual bool operator != (const StaticNode& c) const {¤		return this != &c;¤	}¤	virtual bool operator < (const StaticNode& c) const {¤		return this < &c;¤	}¤¤	virtual void invalidate_children_count () const;¤¤protected:¤	virtual unsigned long _load_children_count() const;¤¤protected:¤	friend class StaticNodeStubBase; // GARANT_FRIEND¤¤	struct ChildrenCountLoader {¤		static unsigned long load_value (const StaticNode* node) {¤			return node->_load_children_count();¤		}¤	};¤¤public:¤	typedef Core::CacheMap<const StaticNode*, unsigned long, ChildrenCountLoader> ChildrenMap;¤	typedef ACE_Singleton <StaticNode::ChildrenMap, ACE_SYNCH_RECURSIVE_MUTEX> ChildrenMapSingleton;¤	¤protected:¤	StaticNode* m_parent;¤	StaticNode_var m_next;¤	StaticNode* m_prev;¤	StaticNode_var m_first_child;¤	StaticNode* m_last_child;¤¤#ifdef _DEBUG¤	//static long s_id;¤	//long m_id__;¤public:¤	//void _dump (FILE* to_dump) const {¤	//	fprintf (to_dump, "StaticNode [%d] id:[%d]", this, m_id__);¤	//}¤#endif	¤//#UC END# *4501367B01C5*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/data/StaticNode.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/StaticNode.h")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need dctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need objcounter"
			    value      	"true"))
		    quid       	"4501367B01C5"
		    documentation 	"ðåàëèçàöèÿ íîäû äåðåâà (äâóõ-íàïðàâëåííûå ñâÿçè ðîäèòåëü->ðåáåíîê; ëåâî->ïðàâî)"
		    stereotype 	"SimpleClass"
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45018B6503D8"
			    stereotype 	"uses"
			    supplier   	"Logical View::shared::GCL::data::StaticNodeStubBase"
			    quidu      	"450136B500FA"))
		    language   	"MDA Generator")
		(object Class "StaticNodeStubBase"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450136B500FA_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450136B500FA_CUSTOM_INCLUDES*¤//#UC END# *450136B500FA_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450136B500FA*"
			    value      	"//#UC START# *450136B500FA*¤//#UC END# *450136B500FA*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450136B500FA_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *450136B500FA_DESTR_BODY*¤	//#UC END# *450136B500FA_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450136B500FA_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450136B500FA_CUSTOM_INCLUDES*¤//#UC END# *450136B500FA_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450136B500FA*"
			    value      	(value Text 
|//#UC START# *450136B500FA*¤	virtual long stub_count () const = 0;¤	virtual long stub_ind () const = 0;¤	virtual bool has_pair () const = 0;¤	virtual StaticNodeStubBase* const get_at (long ind) const = 0;¤¤	virtual StaticNode* transform_to_real_node () = 0;¤	void transform_to_real_node (¤		StaticNode* real_node¤		, StaticNodeStubBase* prev_sibbling_stub¤		, StaticNodeStubBase* next_sibbling_stub¤	) {¤		if (!real_node) {¤			GDS_ASSERT (real_node);¤			return;¤		}¤		GDS_ASSERT (!m_real_node);¤		/*LOG_D ((¤			"transform_to_real_node (%d,%d) prev(%d,%d) next (%d,%d)"¤			, this->stub_count()¤			, this->stub_ind()¤			, prev_sibbling_stub ? prev_sibbling_stub->stub_count() : 0¤			, prev_sibbling_stub ? prev_sibbling_stub->stub_ind() : 0¤			, next_sibbling_stub ? next_sibbling_stub->stub_count() : 0¤			, next_sibbling_stub ? next_sibbling_stub->stub_ind() : 0¤		));¤¤		bool need_print = true;*/¤		/*if (next_sibbling_stub && next_sibbling_stub->stub_count() > 0 && next_sibbling_stub->stub_ind() == 1) {¤			this->print_tree();¤			need_print = true;¤		}*/¤									¤		m_real_node = StaticNode::_duplicate(real_node);¤		this->correct_tree (prev_sibbling_stub, next_sibbling_stub);¤¤		/*if (need_print) {¤			LOG_D (("TREE SNAP after transform_to_real_node (...)"));¤			m_real_node->print_tree();¤		}*/¤	}¤¤protected:¤	StaticNodeStubBase() : m_real_node(0) {¤	}¤¤	const StaticNode* child_by_index (unsigned long index) const {¤		if (!m_real_node) {¤			m_real_node = const_cast<StaticNodeStubBase*>(this)->transform_to_real_node ();¤		}¤		return m_real_node->child_by_index (index);¤	}¤¤	inline GCL::StaticNode* real_node_prev () const {¤		return m_real_node->m_prev;¤	}¤¤	inline GCL::StaticNode_var& real_node_next () const {¤		return m_real_node->m_next;¤	}¤¤	virtual void correct_tree (StaticNodeStubBase* prev_sibbling_stub, StaticNodeStubBase* next_sibbling_stub) = 0;¤¤protected:¤	mutable StaticNode* m_real_node;¤¤//#UC END# *450136B500FA*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/data/StaticNodeStubBase.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/StaticNodeStubBase.h"))
		    quid       	"450136B500FA"
		    documentation 	"áàçîâûé êëàññ äëÿ StaticNodeStub"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"450136BC008C"
			    supplier   	"Logical View::shared::GCL::data::StaticNode"
			    quidu      	"4501367B01C5"))
		    language   	"MDA Generator")
		(object Parameterized_Class "StaticNodeStub"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450136CE01F4_CUSTOM_INCLUDES*"
			    value      	
|//#UC START# *450136CE01F4_CUSTOM_INCLUDES*¤#include "shared/Core/mng/PoolObjectManager.h"¤#include "shared/GCL/data/StaticNodeMng.h"¤//#UC END# *450136CE01F4_CUSTOM_INCLUDES*
			    )
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450136CE01F4*"
			    value      	(value Text 
|//#UC START# *450136CE01F4*¤	template <typename StubPostProcess>¤	static void make_as_back_child (GCL::StaticNode* parent, unsigned long count, StaticNodeMng* mng, StubPostProcess post_process) {¤		GDS_ASSERT (count); ¤¤		_StubImpl* st1 = NodeStubPool::instance()->new_obj();//new _StubImpl ();¤		_StubImpl* st2 = 0;¤¤		if (count>1) {¤			st2 = NodeStubPool::instance()->new_obj();//new _StubImpl ();¤			count--;¤		}¤¤		SharedData_box d = new SharedData(count, st1, st2, mng);¤		st1->init (d, 0, 0);¤		parent->insert_back_child(st1);¤		¤		if (st2) {¤			d = new SharedData(-static_cast<long>(count), st2, st1, mng);¤			st2->init(d, 0, 0);¤			parent->insert_back_child(st2);¤		}¤		¤		post_process (st1, st2); // may be we need to add similar 'processer' to other 'make_as_x_child'¤	}¤¤	static void make_as_front_child (GCL::StaticNode* parent, unsigned long count, StaticNodeMng* mng) {¤		GDS_ASSERT (count); ¤¤		_StubImpl* st1 = NodeStubPool::instance()->new_obj();//new _StubImpl ();¤		_StubImpl* st2 = 0;¤¤		if (count>1) {¤			st2 = NodeStubPool::instance()->new_obj();//new _StubImpl ();¤			count--;¤		}¤¤		SharedData_box d = new SharedData(count, st1, st2, mng);¤		st1->init (d, 0, 0);¤		parent->insert_front_child(st1);¤		¤		if (st2) {¤			d = new SharedData(-static_cast<long>(count), st2, st1, mng);¤			st2->init(d, 0, 0);¤			st1->insert_next(st2);¤		}¤	}¤¤¤	static void make_as_next_sibling (GCL::StaticNode* left_sibling, unsigned long count, StaticNodeMng* mng) {¤		GDS_ASSERT (count); ¤¤		StaticNodeStub* sns = dynamic_cast<StaticNodeStub*> (left_sibling);¤		if (sns) {¤			sns->resize_stub (count);¤		} else {¤			_StubImpl* st1 = NodeStubPool::instance()->new_obj();//new _StubImpl ();¤			_StubImpl* st2 = 0;¤¤			if (count>1) {¤				st2 = NodeStubPool::instance()->new_obj();//new _StubImpl ();¤				count--;¤			}¤¤			SharedData_box d = new SharedData(count, st1, st2, mng);¤			st1->init (d, 0, 0);¤			left_sibling->insert_next(st1);¤			¤			if (st2) {¤				d = new SharedData(-static_cast<long>(count), st2, st1, mng);¤				st2->init(d, 0, 0);¤				st1->insert_next(st2);¤			}¤		}¤	}¤¤	static void make_as_prev_sibling (GCL::StaticNode* sibling, unsigned long count, StaticNodeMng* mng) {¤		GDS_ASSERT (count); ¤¤		StaticNodeStub* sns = dynamic_cast<StaticNodeStub*> (sibling);¤		if (sns) {¤			GDS_ASSERT (false); // need to check this code¤			sns->resize_stub (count);¤		} else {¤			_StubImpl* st1 = NodeStubPool::instance()->new_obj();//new _StubImpl ();¤			_StubImpl* st2 = 0;¤¤			if (count>1) {¤				st2 = NodeStubPool::instance()->new_obj();//new _StubImpl ();¤				count--;¤			}¤¤			SharedData_box d = new SharedData(count, st1, st2, mng);¤			st1->init (d, 0, 0);¤					¤			if (st2) {¤				d = new SharedData(-static_cast<long>(count), st2, st1, mng);¤				st2->init(d, 0, 0);¤				sibling->insert_prev(st2);¤				st2->insert_prev(st1);¤			} else {¤				sibling->insert_prev(st1);¤			}¤		}¤	}¤¤public:	¤	bool has_pair () const {¤		return m_data->negative_pair != 0;¤	}¤¤	long stub_count () const {¤		return m_data->stub_count;¤	}¤¤	long stub_ind () const {¤		return m_ind;¤	}¤¤	typedef Core::Var<StaticNodeStub> StaticNodeStub_var;¤¤	StaticNodeStubBase* const get_at (long ind) const {¤		GDS_ASSERT (m_data->stub_count > 0 ? ind < m_data->stub_count && ind >= 0 : ind > m_data->stub_count && ind <= 0);¤		GDS_ASSERT (ind != m_ind);¤		¤		return this->make(ind);		¤	}¤¤	virtual StaticNode* transform_to_real_node () {¤		/*LOG_D ((¤			"TRANSFORM_TO_REAL_NODE (%d,%d)"¤			, this->stub_count()¤			, this->stub_ind()¤		));*/¤		StaticNode* ret_val = m_real_node;¤¤		if (!m_real_node) {¤			bool am_i_positive = m_data->stub_count > 0;¤			long offset = am_i_positive ? m_ind + 1 : m_ind - 1;¤			const GCL::StaticNode* point;¤			¤			if (am_i_positive) {¤				point = m_data->owner->m_prev;¤				if (!point) {¤					offset--;¤				}¤			} else {¤				if (m_data->negative_pair) {¤					point = m_data->negative_pair->m_prev;¤					offset = m_ind - m_data->stub_count + 1;¤				} else {¤					point = m_data->owner->m_prev;¤					offset = m_ind - m_data->stub_count;¤				}				¤			}¤¤¤			// ïðè âõîäå â make_real_node point äîëæåí óêàçûâàòü íà ðåàëüíóþ íîäó¤			// (ò.å. äîëæåí ïðèâîäèòñÿ ê NodeBase: dynamic_cast<Nodebase*> (point) != 0)¤			// äëÿ ýòîãî íåîáîõîäèì ðåêóðñèâíûé ïðîõîä ïî ïðåäûäóøèì íîäàì ñ êîððåêöèåé offset.¤¤			while (point && point->is_real_node ()) {¤				// òóò ìû íàõîäèìñÿ ëèáî íà íèæåé ïàðå ñòàáà ëèáî íà single-ñòàáå¤¤				if (!StaticNode::shift_prev (point)) {     // äîñòèãëè parent'à:¤					offset = 0;                              // ò.å. âñÿ âåòêà ñâåðõó - îäíè çàãëóøêè¤					break;¤				}¤			¤				if (!dynamic_cast<const StaticNodeStub*> (point)) { // äî ñäâèãà ìû áûëè íà single-ñòàáå,¤					--offset;                                         // ñåé÷àñ íà ðåàëüíîé íîäå - âûõîäèì¤					break;¤				}¤			¤				// òóò ìû íà âåðõíåé ïàðå çàãëóøêè¤				const StaticNodeStub* stub = dynamic_cast<const StaticNodeStub*> (point);¤				GDS_ASSERT (stub);¤				offset -= stub->stub_count () + 1;¤				StaticNode::shift_prev (point);¤			}¤			¤			GDS_ASSERT (offset >= 0);¤			¤			m_real_node = m_data->mng->make_real_node(¤				m_data->owner->m_parent¤				, point¤				, offset¤				, this¤			);¤			ret_val = m_real_node;¤¤			GDS_ASSERT (m_real_node);¤¤			this->correct_tree (0, 0);			¤		}¤		¤		//LOG_D (("TREE SNAP after transform_to_real_node ()"));¤		//m_real_node->print_tree ();¤¤		return ret_val;¤	}¤	¤	virtual StaticNode* remove_me_and_siblings (unsigned long& count) {¤		GDS_ASSERT (count);¤		GDS_ASSERT (m_ind >= 0); // îáðàáîòêà âèðòóàëüíûõ îòðèöàòåëüíûõ íîä íå ðåàëèçîâàíà.¤		// Âåðíåå ñåé÷àñ óäàëåíèå âèðòóàëüíîé îòðèöàòåëüíîé íîäû ¤		// âîçìîæíî, òîëüêî åñëè îíà ïîñëåäíÿÿ. Ýòî ìîæåò áûòü, åñëè¤		// â äåðåâå 61 íîäà (ïî óìîë÷àíèþ çàãðóæàåòñÿ 30 íîä ñâåðõó è 30 ñíèçó)¤		// Ñì. îøèáêó 22750. ×òîáû óäàëèòü ýòó íîäó âñòàâèëè ïðîâåðêó íà¤		// this->stub_count () == -1 äëÿ ñëó÷àÿ ñ åäèíñòâåííîé íîäîé çàãëóøêîé¤		¤		// single stub node ¤		if ((this->stub_count () == 1 || this->stub_count () == -1)  && !this->has_pair ()) {¤			StaticNode_var ret = StaticNode::_duplicate (m_next.ptr ());¤			this->remove_from_tree ();¤			count--;¤			return ret._retn();¤		} ¤¤		// we have to do with stub pair further¤		GDS_ASSERT (this->has_pair ()); ¤		¤		// ïîïàëè íà íèæíþþ (îòðèöàòåëüíóþ) çàãëóøêó¤		if (m_ind == 0 &&  this->stub_count () < 0) {¤			count--;¤			StaticNode_var ret = StaticNode::_duplicate (m_next.ptr ());¤			long new_stub_count = this->stub_count () + 1; // óâåëè÷èâàåì îòðèöàòåëüíîå çíà÷åíèå (ïî ìîäóëþ - óìåíüøàåì)¤¤			if (new_stub_count == 0) { // óäàëÿåì íèæíþþ çàãëóøêó¤				m_data->negative_pair->m_data->negative_pair = 0;¤				this->remove_from_tree ();¤			} else {¤				m_data->stub_count = new_stub_count;¤				m_data->negative_pair->m_data->stub_count = -new_stub_count;¤			}¤			¤			return ret._retn();¤		}¤		¤		¤		¤		// remove pair at all¤		if (m_ind == 0 && static_cast<long> (count) > this->stub_count ()) { ¤			count -= this->stub_count () + 1;¤			StaticNode_var ret = StaticNode::_duplicate (m_data->negative_pair->m_next.ptr ());¤			GDS_ASSERT (m_data->owner == this);¤			m_data->negative_pair->remove_from_tree ();¤			this->remove_from_tree ();¤			return ret._retn();¤		}¤		¤		// modify stub pair¤		long stub_count = this->stub_count ();¤		long count_to_delete = count;¤		¤		// íîâûé stub_count = èíäåêñ + ïîëîæèòåëüíàÿ ðàçíèöà ìåæäó âåëè÷èíîé õâîñòà è êîë-âîì óäàëÿåìûõ¤		long new_stub_count = m_ind + (((stub_count - m_ind) - count_to_delete) > 0 ? (stub_count - m_ind) - count_to_delete : 0);¤		// ìîäèôèöèðîâàííûé count = ïîëîæèòåëüíîé ðàçíèöå ìåæäó êîë-âîì óäàëÿåìûõ è âåëè÷èíîé õâîñòà¤		long new_count_to_delete = (count_to_delete - (stub_count - m_ind)) > 0 ? count_to_delete - (stub_count - m_ind) : 0;¤		¤		StaticNode_var ret = StaticNode::_duplicate (m_data->negative_pair->m_next.ptr ());¤¤		// åñëè óäàëÿåì îò âåðõíåé çàãëóøêè êîë-âî ýë-òîâ ðàâíîå stub_count => îñòàåòñÿ åäèíñòâåííàÿ (íèæíÿÿ) çàãëóøêà¤		if (m_ind == 0 && static_cast<long> (count) == this->stub_count ()) {¤			new_stub_count += 1; // òðåáóåòñÿ êîððåêöèÿ stub_count, âûñ÷èòàííîãî ïî ôîðìóëå âûøå (ñêàçûâàåòñÿ íåÿâíîå ó÷àñòèå âòîðîé çàãëóøêè)¤			m_data->negative_pair->remove_from_tree ();¤			m_data->negative_pair = 0;¤			GDS_ASSERT (new_stub_count == 1);¤			GDS_ASSERT (new_count_to_delete == 0);¤		}¤		¤		// åñëè óäàëÿåì ñ ïåðâîãî ýë-òà ïî íèæíþþ çàãëóøêó âêëþ÷èòåëüíî => îñòàåòñÿ åäèíñòâåííàÿ (âåðõíÿÿ) çàãëóøêà¤		if (m_ind == 1 && static_cast<long> (count) >= this->stub_count ()) {¤			new_count_to_delete -= 1; // òðåáóåòñÿ êîððåêöèÿ new_count_to_delete, âûñ÷èòàííîãî ïî ôîðìóëå âûøå (íåÿâíîå ó÷àñòèå âòîðîé çàãëóøêè)¤			m_data->negative_pair->remove_from_tree ();¤			m_data->negative_pair = 0;¤			GDS_ASSERT (new_stub_count == 1);¤		}¤		¤		// îñíîâíàÿ êîððåêöèÿ äàííûõ¤		m_data->stub_count = new_stub_count;¤		count = new_count_to_delete;¤		¤		if (m_data->negative_pair) {¤			m_data->negative_pair->m_data->stub_count = -new_stub_count;¤		}¤		¤		// åñëè ïîñëåäíèé óäàëÿåìûé âíóòðè èíòåðâàëà, âîçâðàùàåì óêàçàòàëü íà ýë-ò âíóòðè èíòåâàëà¤		if (static_cast<long> (count) < this->stub_count () - m_ind) { ¤			if (m_ind) {¤				ret = m_data->owner->get_at (m_ind);¤			} else {¤				ret = GCL::StaticNode::_duplicate(this);¤			}¤		}¤		¤		GDS_ASSERT (this->stub_count () > 0);¤		GDS_ASSERT (count >= 0);¤	¤		return ret._retn();¤	}¤¤	void correct_tree (StaticNodeStubBase* prev_sibbling_stub, StaticNodeStubBase* next_sibbling_stub) {¤		bool am_i_positive = m_data->stub_count > 0;			¤		long offset = am_i_positive ? m_ind + 1 : m_ind - 1;¤¤		long remain_count = m_data->stub_count - offset;¤		¤		if (remain_count) {			¤			StaticNodeStub* l;¤			if (am_i_positive ? next_sibbling_stub : prev_sibbling_stub) {¤				l = dynamic_cast<StaticNodeStub*>(am_i_positive ? next_sibbling_stub : prev_sibbling_stub);¤				GDS_ASSERT (l);¤				StaticNode::_duplicate (l);¤			} else {¤				l = NodeStubPool::instance()->new_obj();¤			}¤¤			{¤				SharedData_box data (new SharedData(remain_count, l, m_data->negative_pair, m_data->mng));¤				l->init (data, 0, this);¤				if (m_data->negative_pair) {¤					m_data->negative_pair->reset_pair(data.in());¤				}¤			}				¤			¤			if (am_i_positive) {¤				m_data->owner->insert_next (l);¤			} else {¤				m_data->owner->insert_prev (l);¤			}¤		} else {¤			if (m_data->negative_pair) {¤				m_data->negative_pair->reset_pair(0);¤			}¤		}¤¤		if (am_i_positive) {¤			m_data->owner->insert_next (m_real_node);¤		} else {¤			m_data->owner->insert_prev (m_real_node);¤		}¤¤		if (m_ind) { // i am slave¤			m_data->stub_count = am_i_positive ? m_ind - 1 : m_ind + 1;¤			¤			if (m_data->stub_count) {¤				StaticNodeStub* l;¤				if (am_i_positive ? prev_sibbling_stub : next_sibbling_stub) {¤					l = dynamic_cast<StaticNodeStub*>(am_i_positive ? prev_sibbling_stub : next_sibbling_stub);¤					GDS_ASSERT (l);¤				} else {¤					l = NodeStubPool::instance()->new_obj();¤				}¤¤				{¤					SharedData_box data (new SharedData(-m_data->stub_count, l, m_data->owner, m_data->mng));¤					l->init (data, 0, this);¤					m_data->owner->reset_pair(data.in());¤				}¤¤				if (am_i_positive) {¤					m_data->owner->insert_next (l);¤				} else {¤					m_data->owner->insert_prev (l);¤				}¤			} else {¤				m_data->stub_count = am_i_positive ? 1 : -1;¤				m_data->owner->reset_pair (0);¤			}¤		}¤¤		const_cast<StaticNodeStub*>(this)->remove_from_tree();		¤¤	}¤¤	virtual GCL::StaticNode* next () {¤		return const_cast<GCL::StaticNode*>(((const StaticNodeStub*const)this)->next());¤	}¤	virtual const GCL::StaticNode* next () const {¤		if (m_real_node) {¤			return m_real_node->next();			¤		}  ¤¤		if (m_data->stub_count > 0) {¤			if (m_data->owner == this) {¤				if (m_data->stub_count > 1) {¤					return this->make(1);¤				} else {¤					return m_next._sretn();¤				}¤			} else {¤				if (m_ind < m_data->stub_count - 1) {¤					return this->make (m_ind + 1);¤				} else {¤					return m_data->owner->m_next._sretn();¤				}¤			}¤		} else {¤			if (m_data->owner == this) {¤				return m_next._sretn();¤			} else {¤				return this->make (m_ind + 1);¤			}¤		}¤	}¤¤	virtual GCL::StaticNode* prev () {¤		return const_cast<GCL::StaticNode*>(((const StaticNodeStub*const)this)->prev());¤	}¤	virtual const GCL::StaticNode* prev () const {¤		if (m_real_node) {¤			return m_real_node->prev();¤		}¤¤		if (m_data->stub_count > 0) {¤			if (m_data->owner == this) {¤				return Core::IObject::_duplicate(m_prev);¤			} else {¤				return this->make (m_ind - 1);¤			}¤		} else {¤			if (m_data->owner == this) {¤				if (m_data->stub_count < -1) {¤					return this->make (m_ind - 1);¤				} else {¤					return Core::IObject::_duplicate(m_prev);¤				}¤			} else {¤				if (m_ind > m_data->stub_count + 1) {¤					return this->make (m_ind - 1);¤				} else {¤					return Core::IObject::_duplicate(m_data->owner->m_prev);¤				}¤			}¤		}¤	}¤¤	virtual bool is_equal (const StaticNode* e) const {		¤		return (e == this) || (m_real_node && m_real_node == e);¤	}¤¤	bool is_last () {¤		if (m_real_node) {¤			return m_real_node->is_last();¤		}¤		¤		if (m_data->stub_count > 0) {¤			if (m_data->owner == this) {¤				if (m_data->stub_count > 1) {¤					return false;¤				} else {¤					return m_next.ptr() == 0;¤				}¤			} else {¤				if (m_ind < m_data->stub_count - 1) {¤					return false;¤				} else {¤					return m_data->owner->m_next.ptr() == 0;¤				}¤			}¤		} else {¤			if (m_data->owner == this) {¤				return m_next.ptr() == 0;¤			} else {¤				return false;¤			}¤		}¤	}¤¤	// Ïåðâûé ýëåìåíò.¤	bool is_first () {¤		if (m_real_node) {¤			return m_real_node->is_first();¤		}¤		¤		if (m_data->stub_count > 0) {¤			if (m_data->owner == this) {¤				return m_prev == 0;¤			} else {¤				return false;¤			}¤		} else {¤			if (m_data->owner == this) {¤				if (m_data->stub_count < -1) {¤					return false;¤				} else {¤					return m_prev == 0;¤				}¤			} else {¤				if (m_ind > m_data->stub_count + 1) {¤					return false;¤				} else {¤					return m_data->owner->m_prev == 0;¤				}¤			}¤		}¤	}¤¤protected:¤	typedef typename Core::PoolObjectManager<_StubImpl>::PoolObjectManagerSingleton NodeStubPool;¤	typedef Core::PoolObjectManager<_StubImpl> Pool;¤	friend Pool;¤¤private:¤	struct SharedData {¤		long stub_count; // êîë-âî âèðòóàëüíûõ íîäó âíóòðè çàãëóøêè¤		StaticNodeStub* owner; // "îñíîâíàÿ" çàãëóøêà¤		StaticNodeStub* negative_pair; // ññûëêà íà ïàðíóþ "îòðèöàòåëüíóþ" çàãëóøêó¤		StaticNodeMng* mng; // ññûëêà íà ìåíåäæåðà íîä¤¤		SharedData (¤			long sc¤			, StaticNodeStub* owner¤			, StaticNodeStub* np¤			, StaticNodeMng* m¤		) ¤			: stub_count(sc)¤			, owner(owner)¤			, negative_pair(np)¤			, mng(m) ¤		{¤			GDS_ASSERT (stub_count && owner);			¤		}¤	};¤¤	//typedef Core::Box<SharedData> SharedData_box;¤¤protected:	¤	typedef Core::Box<SharedData> SharedData_box; // GARANT_PRIVATE¤¤	StaticNodeStub () {¤		m_data = 0;¤		m_ind = 0;¤		m_real_node = 0;¤		m_parent = 0;¤	}¤¤	void resize_stub (long delta) {¤		if (m_data->stub_count > 0) {¤			GDS_ASSERT (m_data->stub_count + delta > 1);¤¤			if (m_data->negative_pair) {¤				m_data->stub_count += +delta;¤				m_data->negative_pair->m_data->stub_count += -delta;¤			} else {¤				m_data->stub_count += +delta-1;¤¤				_StubImpl* stub = NodeStubPool::instance ()->new_obj ();¤				SharedData_box shared_data = new SharedData (-delta, stub, m_data->owner, m_data->mng);¤¤				stub->init (shared_data, 0, 0);¤				m_data->negative_pair = stub;¤¤				this->insert_next (stub);¤			}¤		} else {¤			GDS_ASSERT (-m_data->stub_count + delta > 1);¤¤			if (m_data->negative_pair) {¤				m_data->stub_count += -delta;¤				m_data->negative_pair->m_data->stub_count += +delta;¤			} else {¤				m_data->stub_count += -delta+1;¤¤				_StubImpl* stub = NodeStubPool::instance ()->new_obj ();¤				SharedData_box shared_data = new SharedData (+delta, stub, m_data->owner, m_data->mng);¤¤				stub->init (shared_data, 0, 0);¤				m_data->negative_pair = stub;¤¤				this->insert_prev (stub);¤			}¤		}¤	}¤¤¤	virtual long get_nodes_count_for_me () {¤		return this->stub_count ();¤	}¤¤	virtual void init (const SharedData_box& data, long ind, const GCL::StaticNode* master) {¤		m_data = data;¤		m_ind = ind;¤		m_parent = m_data->owner->m_parent;¤		m_real_node = 0;¤		m_next = 0;¤		m_prev = 0;¤		m_first_child = 0;¤		m_last_child = 0;¤		// m_id__ = ++s_id; // debug helper¤	}¤	¤	inline StaticNodeStubBase* make (long ind) const {¤		if (ind) {¤			register StaticNodeStub* ret = NodeStubPool::instance()->new_obj();¤			ret->init(m_data, ind, this);¤			return ret;¤		} else {¤			return Core::IObject::_duplicate(m_data->owner); // !!¤		}¤	}¤¤	void reset_pair (const SharedData* sd) {¤		if (sd) {¤			m_data->negative_pair = sd->owner;¤			m_data->stub_count = - sd->stub_count;¤		} else {¤			m_data->negative_pair = 0;¤			m_data->stub_count = m_data->stub_count > 0 ? 1 : -1;¤		}¤	}¤¤#ifdef _DEBUG¤	virtual void draw_node (unsigned level, unsigned index) const {¤		char buf [1024];¤		¤		unsigned i=0;¤		for(; i < level; i++) {¤			sprintf (buf+i, "\t");¤		}¤		sprintf (buf+i, "%d: Stub[%d] - (%d, %d)", index, (GCL::StaticNode*)this, m_data->stub_count, m_ind);¤		LOG_D ((buf));	¤	}¤¤public:	¤	//void _dump (FILE* to_dump) const {¤	//	fprintf (to_dump, "StaticNodeStub [%d] id:[%d]", this, m_id__);¤	//}¤#endif¤¤protected:¤	virtual void delete_obj () {¤		NodeStubPool::instance()->release_obj(dynamic_cast<_StubImpl*>(this));¤	}¤¤protected:¤	mutable SharedData_box m_data;¤	mutable long m_ind;¤//#UC END# *450136CE01F4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450136CE01F4_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450136CE01F4_CUSTOM_INCLUDES*¤//#UC END# *450136CE01F4_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450136CE01F4*"
			    value      	"//#UC START# *450136CE01F4*¤//#UC END# *450136CE01F4*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450136CE01F4_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *450136CE01F4_DESTR_BODY*¤	//#UC END# *450136CE01F4_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450136CE01F4_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *450136CE01F4_DESTR_BODY*¤	//#UC END# *450136CE01F4_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/StaticNodeStub.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/data/StaticNodeStub.i.h"))
		    quid       	"450136CE01F4"
		    documentation 	"ðåàëèçàöèÿ íîäû-çàãëóøêè, êîòîðàÿ ìîæåò áûòü âñòàâëåíà â äåðåâî StaticNode è ýìóëèðîâàòü çàäàííîå êîë-âî ýëåìåíòîâ îäíîãî óðîâíÿ"
		    stereotype 	"SimpleClass"
		    superclasses 	(list inheritance_relationship_list
			(object Inheritance_Relationship
			    quid       	"450136E30290"
			    supplier   	"Logical View::shared::GCL::data::StaticNodeStubBase"
			    quidu      	"450136B500FA"))
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4501376001B5"
			    stereotype 	"uses"
			    supplier   	"Logical View::shared::GCL::data::StaticNodeMng"
			    quidu      	"450137530213"))
		    language   	"MDA Generator"
		    parameters 	(list Parameters
			(object Parameter "class _StubImpl"
			    quid       	"450137D30186")))
		(object Class "StaticNodeMng"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450137530213_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450137530213_CUSTOM_INCLUDES*¤//#UC END# *450137530213_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450137530213*"
			    value      	"//#UC START# *450137530213*¤//#UC END# *450137530213*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450137530213_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450137530213_CUSTOM_INCLUDES*¤//#UC END# *450137530213_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450137530213*"
			    value      	"//#UC START# *450137530213*¤//#UC END# *450137530213*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450137530213_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *450137530213_DESTR_BODY*¤	//#UC END# *450137530213_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/StaticNodeMng.h")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need dctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need objcounter"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"non virtual base"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false"))
		    quid       	"450137530213"
		    documentation 	
|"èíòåðôåéñ" ìåíåäæåðà íîä, óìåþùèé ñîçäàâàòü ðåàëüíûå íîäû
		    
		    stereotype 	"SimpleClass"
		    operations 	(list Operations
			(object Operation "make_real_node"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4614ACDC008C"
			    documentation 	"ñîçäàòü íîäó"
			    stereotype 	"chg"
			    parameters 	(list Parameters
				(object Parameter "parent"
				    quid       	"4614ADA80242"
				    type       	"StaticNode"
				    quidu      	"4501367B01C5")
				(object Parameter "prev"
				    quid       	"4614ADA80271"
				    type       	"StaticNode"
				    quidu      	"4501367B01C5")
				(object Parameter "offset"
				    quid       	"4614ADA802AF"
				    type       	"long"
				    quidu      	"3DBFFD7002C2")
				(object Parameter "inout current_stub"
				    quid       	"4614ADA802EE"
				    type       	"StaticNodeStubBase"
				    quidu      	"450136B500FA"))
			    result     	"StaticNode"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"4501367B01C5")
			(object Operation "pre_remove"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4614AD470109"
			    documentation 	"ôóíêöèÿ âûçûâàåòñÿ ïåðåä óäàëåíèåì?"
			    stereotype 	"chg"
			    parameters 	(list Parameters
				(object Parameter "node"
				    quid       	"4614ADBF0177"
				    type       	"StaticNode"
				    quidu      	"4501367B01C5")
				(object Parameter "count"
				    quid       	"4614ADBF01A5"
				    type       	"unsigned integer"
				    quidu      	"450A6117003E"
				    initv      	"0"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0))
		    language   	"MDA Generator"
		    abstract   	TRUE)
		(object Parameterized_Class "Tree"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450138270399_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *450138270399_CUSTOM_INCLUDES*¤#include <vector>¤#include <functional>¤#include <map>¤#include <set>¤#include "loki/TypeManip.h"¤//#UC END# *450138270399_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450138270399*"
			    value      	(value Text 
|//#UC START# *450138270399*¤public:¤	typedef T* Item_ptr;¤	typedef std::vector<Item_ptr> Items;¤¤	class UnknownElement : public Core::Exception {¤		const char* what () const throw () {¤			return "UnknownElement (èñêëþ÷åíèå ïðè îáðàùåíèè ê ýëåìåíòó íå ïðåíàäëåæàùåìó äåðåâó)";¤		}¤¤		const char* uid () const /*throw ()*/ {¤			return "GCL::Tree::UnknownElement";¤		}¤	};¤	¤	class AlreadyInTree : public Core::Exception {¤		const char* what () const throw () {¤			return "AlreadyInTree (èñêëþ÷åíèå ïðè ïîïûòêè âñòàâèòü ýëåìåíò óæå íàõîäÿùèéñÿ â äåðåâå)";¤		}¤¤		const char* uid () const /*throw ()*/ {¤			return "GCL::Tree::AlreadyInTree";¤		}		¤	};¤¤protected:¤	struct Node;¤¤	struct NodeSort : public std::binary_function<const Node*, const Node*, bool> {¤		bool operator()(const Node* const x, const Node* const y) const {¤			return *x->item < *y->item;¤		}¤    };¤	¤	typedef std::vector<Node*> VectorCont;¤	typedef std::set<Node*,NodeSort> SetCont;¤	typedef typename Loki::Select<is_sort, SetCont, VectorCont>::Result NodeChilds;¤¤	struct Node {¤		Node* parent;¤		Item_ptr item;¤		NodeChilds childs;¤		Node () : parent (0), item (0) {¤		}		¤	};¤	typedef std::map<T, Node, Pred> NodeTree;¤¤public:¤	// ïðîñòîé èòåðàòîð àíàëîãè÷íûé stl-åâñêîìó¤	// îáåðòêà íàä èòåðàòîðîì îò map-øàáëîíà, âîçâðÿùàåò òîëüêî êëþ÷ àíàëîãè÷íî èòåðàòîðó îò set-øàáëîíà¤	class iterator {¤		typename NodeTree::iterator m_it;¤	public:¤		iterator ( typename NodeTree::iterator it ) : m_it (it) {¤		}¤		void operator ++ (int) {¤			m_it++;¤		}¤		Item_ptr operator *() {¤			const T& item = (*m_it).first;¤			return (Item_ptr)&item;¤		}¤		bool operator == (iterator it) {¤			return it.m_it == m_it;¤		}¤		bool operator != (iterator it) {¤			return it.m_it != m_it;¤		}¤	};¤¤public:¤	// ñîçäàåò äåðåâî íà÷èíàÿ ñ ïåðåäàííîãî ýëåìåíòà¤	Tree(const T& root);¤	// äîáàâëÿåò "ñîñåäà"¤	void add_sibling (const T& to, const T& subling);¤	// äîáàâëÿåò "ðåáåíêà"¤	void add_child (const T& to, const T& child);¤	// âîçâðàùàåò ðîäèòåëÿ¤	Item_ptr parent (const T& to) const;¤¤	bool is_child_of_parent ( const T& child, const T& parent ) const;¤¤	// âîçâðàùàåò äåòåé¤	Items childs (const T& to) const;¤	// âîçâðàùàåò âñåõ äåòåé (ðåêóðñèâíî)¤	Items all_childs (const T& to) const;¤	// âîçâðàùàåò âñåõ "áðàòüåâ"¤	Items sublings (const T& to) const;¤	¤	Item_ptr find (const T& key) {¤		NodeTree::iterator it =  m_tree.find ( key );¤		if ( it != m_tree.end() ) return (*it).second.item;¤		return 0;¤	}¤¤	// ìåòîäû äëÿ óäàëåíèÿ èëè ïåðåìåùåíèÿ ýëåìåíòîâ ïîêà îòñóòñòâþò¤	¤	unsigned long get_level (const T& to) const;	¤	unsigned long get_child_count(const T& to) const;¤	unsigned long get_all_child_count (const T& to) const;¤	unsigned long get_index (const T& to) const;¤	unsigned long get_through_index (const T& to) const;¤¤	// âîçâðàùàåò èòåðàòîð íà ïåðâûé ýëåìåíò ðàçâåðíóòîãî äåðåâà ¤	// îòñîðòèðîâàííîãî ïî âîçðàñòàíèþ ýëåìåíòîâ¤	iterator begin () {¤		iterator it (m_tree.begin());¤		return it;¤	}¤	¤	// âîçâðàùàåò êîíåö ðàçâåðíóòîãî äåðåâà ¤	iterator end () {¤		iterator it (m_tree.end());¤		return it;¤	}¤¤protected:¤	const Node& find_node (const T& key) const;¤	Node& create_node (const T& key);¤	void collect_childs (const T& to, Items& items) const;¤	void collect_childs_count (const Node* to, unsigned long& count) const;¤¤	void insert_child (Node* to, Node* node, Loki::Int2Type<true>) {¤		to->childs.insert(node);¤	}¤	void insert_child (Node* to, Node* node, Loki::Int2Type<false>) {¤		to->childs.push_back(node);¤	}¤¤private:¤	NodeTree m_tree;¤//#UC END# *450138270399*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450138270399_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450138270399_CUSTOM_INCLUDES*¤//#UC END# *450138270399_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450138270399*"
			    value      	(value Text 
|//#UC START# *450138270399*¤template <class T, bool is_sort, class Pred>¤Tree<T,is_sort,Pred>::Tree( const T& root) {¤	create_node (root);¤}¤¤template <class T, bool is_sort, class Pred>¤void Tree<T,is_sort,Pred>::add_sibling ( const T& to, const T& subling ) {¤	if ( !to ) return add_child (to, subling);¤	else return add_child (parent(to), subling);		¤}¤¤template <class T, bool is_sort, class Pred>¤void Tree<T,is_sort,Pred>::add_child ( const T& to, const T& child ) {¤	const Node& parent_node = find_node (to);¤	//hask const¤	Node* no_const_parent_node = const_cast<Node*>(&parent_node);¤	Node& node = create_node (child);¤	node.parent = no_const_parent_node;¤	insert_child (no_const_parent_node, &node, Loki::Int2Type<is_sort>());¤}¤¤template <class T, bool is_sort, class Pred>¤typename Tree<T,is_sort,Pred>::Item_ptr Tree<T,is_sort,Pred>::parent ( const T& to ) const {¤	const Node& node = find_node(to);¤	if (!node.parent) return 0;¤	else return node.parent->item;¤}¤¤template <class T, bool is_sort, class Pred>¤bool Tree<T,is_sort,Pred>::is_child_of_parent ( const T& child, const T& parent ) const {¤	const Node* node = &find_node(child);¤	¤	if (!node) {¤		return false;¤	}¤¤	while (node->parent) {¤		if (*(node->parent->item) == parent) {¤			return true;¤		}¤		node = node->parent;¤	}¤	return false;¤}¤¤template <class T, bool is_sort, class Pred>¤typename Tree<T,is_sort,Pred>::Items Tree<T,is_sort,Pred>::childs ( const T& to ) const {¤	const Node& node = find_node(to);¤	Items ch;¤	for (NodeChilds::const_iterator it = node.childs.begin(); it != node.childs.end(); it++) {¤		ch.push_back ((*it)->item);¤	}¤	return ch;¤}¤¤template <class T, bool is_sort, class Pred>¤typename Tree<T,is_sort,Pred>::Items Tree<T,is_sort,Pred>::all_childs ( const T& to ) const {¤	Items ch;¤	this->collect_childs (to, ch);	¤	return ch;¤}¤¤template <class T, bool is_sort, class Pred>¤void Tree<T,is_sort,Pred>::collect_childs ( const T& to, Items& items ) const {¤	const Node& node = find_node(to);¤	for (NodeChilds::const_iterator it = node.childs.begin(); it != node.childs.end(); it++) {¤		items.push_back ((*it)->item);¤		this->collect_childs (*(*it)->item, items);¤	}¤}¤¤template <class T, bool is_sort, class Pred>¤typename Tree<T,is_sort,Pred>::Items Tree<T,is_sort,Pred>::sublings ( const T& to ) const {¤	Item_ptr p = parent(to);¤	if (p) {¤		const Node& node = find_node(*p);¤		Items ch;¤		for (NodeChilds::const_iterator it = node.childs.begin(); it != node.childs.end(); it++) {¤			if ( (*(*it)->item) != to ) ch.push_back ((*it)->item);¤		}¤		return ch;¤	} else return Items();¤};¤¤¤template <class T, bool is_sort, class Pred>¤const typename Tree<T,is_sort,Pred>::Node& Tree<T,is_sort,Pred>::find_node ( const T& key ) const {¤	NodeTree::const_iterator it =  m_tree.find ( key );¤	if ( it != m_tree.end() ) return (*it).second;¤	else throw UnknownElement ();¤}¤¤template <class T, bool is_sort, class Pred>¤typename Tree<T,is_sort,Pred>::Node& Tree<T,is_sort,Pred>::create_node ( const T& key ) {¤	NodeTree::iterator it =  m_tree.find ( key );¤	if ( it != m_tree.end() ) {¤		throw AlreadyInTree();¤	}¤	¤	it = m_tree.insert (NodeTree::value_type (key, Node())).first;¤¤	it->second.item = (Item_ptr)&it->first;¤	return it->second;¤¤	/*Node& node = m_tree[key];¤	¤	it =  m_tree.find ( key );¤	const T& item = (*it).first;¤	node.item = (Item_ptr)&item;¤	return node;*/¤}¤¤template <class T, bool is_sort, class Pred>¤unsigned long Tree<T,is_sort,Pred>::get_level(const T& to) const {¤	unsigned long ret = 0;¤¤	const Node& node = find_node(to);¤	const Node* parent = &node;¤¤	while (parent = parent->parent) {¤		ret++;¤	}¤¤	return ret;¤}¤¤template <class T, bool is_sort, class Pred>¤unsigned long Tree<T,is_sort,Pred>::get_child_count(const T& to) const {¤	const Node& node = find_node(to);¤	return node.childs.size();¤}¤¤template <class T, bool is_sort, class Pred>¤void Tree<T,is_sort,Pred>::collect_childs_count (const Node* to, unsigned long& count) const {¤	count++;¤	for (NodeChilds::const_iterator it = to->childs.begin(); it != to->childs.end(); it++) {¤		this->collect_childs_count(*it, count);¤	}¤}¤¤template <class T, bool is_sort, class Pred>¤unsigned long Tree<T,is_sort,Pred>::get_all_child_count(const T& to) const {¤	unsigned long ret = 0;¤	const Node& node = find_node(to);¤	this->collect_childs_count(&node, ret);¤	ret--;¤	¤	return ret;¤}¤¤template <class T, bool is_sort, class Pred>¤unsigned long Tree<T,is_sort,Pred>::get_index(const T& to) const {¤	unsigned long ret = 0;¤	const Node& node = find_node(to);¤	¤	if (!node.parent) return 0;¤	for (¤		NodeChilds::iterator it = node.parent->childs.begin()¤		; it != node.parent->childs.end() && *it != &node¤		; it++¤	) {	¤		ret++;¤	}¤	¤	return ret;¤}¤¤template <class T, bool is_sort, class Pred>¤unsigned long Tree<T,is_sort,Pred>::get_through_index(const T& to) const {¤	unsigned long ret = 0;¤	const Node& node = find_node(to);¤¤	if (!node.parent) return 0;¤	¤	for (¤		NodeChilds::iterator it = node.parent->childs.begin()¤		; it != node.parent->childs.end() && *it != &node¤		; it++¤	) {	¤		this->collect_childs_count(*it, ret);¤	}¤	¤	return ret;¤}¤//#UC END# *450138270399*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450138270399_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *450138270399_DESTR_BODY*¤	//#UC END# *450138270399_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450138270399_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *450138270399_DESTR_BODY*¤	//#UC END# *450138270399_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/data/Tree.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/data/Tree.i.h"))
		    quid       	"450138270399"
		    documentation 	"Øàáëîííûé êëàññ, ïîçâîëÿåò ñîçäàâàòü äðåâîâèäíûå ñòðóêòóðû èç ëþáûõ îáúåêòîâ è òèïîâ (âêëþ÷àÿ ïðèìèòèâíûå)"
		    stereotype 	"SimpleClass"
		    language   	"MDA Generator"
		    parameters 	(list Parameters
			(object Parameter "class T"
			    quid       	"4501385A01D4")
			(object Parameter "bool is_sort "
			    quid       	"4501385A01B5"
			    initv      	" true")
			(object Parameter "class Pred "
			    quid       	"4501385A0196"
			    initv      	" std::less<T>")))
		(object Association "$UNNAMED$0"
		    quid       	"44FEBE230262"
		    roles      	(list role_list
			(object Role "$UNNAMED$1"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"44FEBE23039B"
			    supplier   	"Logical View::Primitives::a-string"
			    quidu      	"452257A0036F"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$2"
			    quid       	"44FEBE23039D"
			    supplier   	"Logical View::shared::GCL::data::std_defs::StrSet"
			    quidu      	"44FEBE140197"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$3"
		    quid       	"44FEBE380020"
		    roles      	(list role_list
			(object Role "$UNNAMED$4"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"44FEBE380214"
			    supplier   	"Logical View::Primitives::a-string"
			    quidu      	"452257A0036F"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$5"
			    quid       	"44FEBE380224"
			    supplier   	"Logical View::shared::GCL::data::std_defs::StrVector"
			    quidu      	"44FEBE2F034D"
			    is_aggregate 	TRUE))))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"44FEAD4A0272"))
		    quid       	"44FEBDAB03BA"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	0
		    origin_y   	1466
		    items      	(list diagram_item_list
			(object ClassView "Class" "Logical View::shared::GCL::data::std_defs" @1
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1643, 372)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@1
				location   	(1493, 342)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"std_defs")
			    stereotype 	(object ItemLabel
				Parent_View 	@1
				location   	(1493, 292)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"44FEBDF3039B"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::data::std_defs::StrSet" @2
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(720, 138)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@2
				location   	(612, 110)
				fill_color 	13434879
				nlines     	1
				max_width  	216
				justify    	0
				label      	"StrSet")
			    stereotype 	(object ItemLabel
				Parent_View 	@2
				location   	(612, 60)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	216
				justify    	0
				label      	"<<Set>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"44FEBE140197"
			    width      	234
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::Primitives::a-string" @3
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1240, 248)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	TRUE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	658120
				default_color 	FALSE)
			    label      	(object ItemLabel
				Parent_View 	@3
				location   	(1152, 209)
				fill_color 	13434879
				nlines     	1
				max_width  	176
				justify    	0
				label      	"a-string")
			    icon_style 	"None"
			    line_color 	14803425
			    fill_color 	14803425
			    quidu      	"452257A0036F"
			    width      	194
			    height     	103
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$0" @4
			    location   	(989, 194)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"44FEBE230262"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$1" @5
				    Parent_View 	@4
				    location   	(269, 56)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"44FEBE23039B"
				    client     	@4
				    supplier   	@3
				    vertices   	(list Points
					(989, 194)
					(1142, 226))
				    line_style 	0)
				(object RoleView "$UNNAMED$2" @6
				    Parent_View 	@4
				    location   	(269, 56)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"44FEBE23039D"
				    client     	@4
				    supplier   	@2
				    vertices   	(list Points
					(989, 194)
					(837, 162))
				    line_style 	0)))
			(object ClassView "Class" "Logical View::shared::GCL::data::std_defs::StrVector" @7
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(729, 381)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@7
				location   	(618, 353)
				fill_color 	13434879
				nlines     	1
				max_width  	222
				justify    	0
				label      	"StrVector")
			    stereotype 	(object ItemLabel
				Parent_View 	@7
				location   	(618, 303)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	219
				justify    	0
				label      	"<<Vector>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"44FEBE2F034D"
			    width      	240
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$3" @8
			    location   	(995, 310)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"44FEBE380020"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$4" @9
				    Parent_View 	@8
				    location   	(275, -170)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"44FEBE380214"
				    client     	@8
				    supplier   	@3
				    vertices   	(list Points
					(995, 310)
					(1142, 272))
				    line_style 	0)
				(object RoleView "$UNNAMED$5" @10
				    Parent_View 	@8
				    location   	(275, -170)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"44FEBE380224"
				    client     	@8
				    supplier   	@7
				    vertices   	(list Points
					(995, 310)
					(849, 348))
				    line_style 	0)))
			(object NoteView @11
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"44FEBEBC0030"))
			    location   	(1527, 633)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@11
				location   	(1389, 573)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"NATIVE")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object ClassView "ParameterizedClass" "Logical View::shared::GCL::data::DirectMap" @12
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(303, 1227)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@12
				location   	(137, 1219)
				fill_color 	13434879
				nlines     	1
				max_width  	332
				justify    	0
				label      	"DirectMap")
			    stereotype 	(object ItemLabel
				Parent_View 	@12
				location   	(137, 1169)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	332
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"44FEC13E0149"
			    width      	350
			    height     	216
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::data::std_defs::FILE" @13
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1161, 624)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@13
				location   	(1039, 596)
				fill_color 	13434879
				nlines     	1
				max_width  	244
				justify    	0
				label      	"FILE")
			    stereotype 	(object ItemLabel
				Parent_View 	@13
				location   	(1039, 546)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	241
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    fill_color 	15792890
			    quidu      	"44FEBEBC0030"
			    width      	262
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object AttachView "" @14
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@11
			    supplier   	@13
			    vertices   	(list Points
				(1376, 628)
				(1292, 626))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::data::std_defs::File_box" @15
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(708, 618)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@15
				location   	(600, 590)
				fill_color 	13434879
				nlines     	1
				max_width  	216
				justify    	0
				label      	"File_box")
			    stereotype 	(object ItemLabel
				Parent_View 	@15
				location   	(600, 540)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	216
				justify    	0
				label      	"<<Box>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"44FEBE6E005F"
			    width      	234
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @16
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"44FED78F02EF"
			    client     	@15
			    supplier   	@13
			    vertices   	(list Points
				(825, 619)
				(1029, 621))
			    line_style 	0)
			(object NoteView @17
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"44FEBE6E005F"))
			    location   	(248, 620)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@17
				location   	(51, 558)
				fill_color 	13434879
				nlines     	3
				max_width  	359
				justify    	1
				label      	
|{Need deallocator:=true}
|{force usage:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	419
			    height     	137)
			(object AttachView "" @18
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@17
			    supplier   	@15
			    vertices   	(list Points
				(457, 619)
				(590, 618))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::data::Buffer" @19
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(900, 930)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@19
				location   	(750, 900)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"Buffer")
			    stereotype 	(object ItemLabel
				Parent_View 	@19
				location   	(750, 850)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"450135270167"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::data::OnDemandFile" @20
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(900, 1290)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@20
				location   	(749, 1260)
				fill_color 	13434879
				nlines     	1
				max_width  	302
				justify    	0
				label      	"OnDemandFile")
			    stereotype 	(object ItemLabel
				Parent_View 	@20
				location   	(749, 1210)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	302
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"450135840290"
			    width      	320
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::data::OrphanStr" @21
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1620, 120)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@21
				location   	(1470, 90)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"OrphanStr")
			    stereotype 	(object ItemLabel
				Parent_View 	@21
				location   	(1470, 40)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"450135E90109"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::data::PackedStrStream" @22
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1788, 930)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@22
				location   	(1605, 900)
				fill_color 	13434879
				nlines     	1
				max_width  	366
				justify    	0
				label      	"PackedStrStream")
			    stereotype 	(object ItemLabel
				Parent_View 	@22
				location   	(1605, 850)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	366
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4501364F0290"
			    width      	384
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::data::StaticNode" @23
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(270, 1560)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@23
				location   	(104, 1530)
				fill_color 	13434879
				nlines     	1
				max_width  	332
				justify    	0
				label      	"StaticNode")
			    stereotype 	(object ItemLabel
				Parent_View 	@23
				location   	(104, 1480)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	332
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4501367B01C5"
			    width      	350
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @24
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4501367B01C5"))
			    location   	(909, 1560)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@24
				location   	(706, 1500)
				fill_color 	13434879
				nlines     	3
				max_width  	371
				justify    	1
				label      	
|{Need ref count:=true}
|{need UC:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	431
			    height     	132)
			(object AttachView "" @25
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@24
			    supplier   	@23
			    vertices   	(list Points
				(693, 1560)
				(445, 1560))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::data::StaticNodeStubBase" @26
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(288, 1902)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@26
				location   	(80, 1872)
				fill_color 	13434879
				nlines     	1
				max_width  	416
				justify    	0
				label      	"StaticNodeStubBase")
			    stereotype 	(object ItemLabel
				Parent_View 	@26
				location   	(80, 1822)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	416
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"450136B500FA"
			    width      	434
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @27
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"450136BC008C"
			    client     	@26
			    supplier   	@23
			    vertices   	(list Points
				(282, 1809)
				(274, 1652))
			    line_style 	0)
			(object ClassView "ParameterizedClass" "Logical View::shared::GCL::data::StaticNodeStub" @28
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(285, 2283)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@28
				location   	(119, 2275)
				fill_color 	13434879
				nlines     	1
				max_width  	332
				justify    	0
				label      	"StaticNodeStub")
			    stereotype 	(object ItemLabel
				Parent_View 	@28
				location   	(119, 2225)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	332
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"450136CE01F4"
			    width      	350
			    height     	216
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @29
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"450136E30290"
			    client     	@28
			    supplier   	@26
			    vertices   	(list Points
				(285, 2174)
				(287, 1994))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::data::StaticNodeMng" @30
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1426, 2759)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	TRUE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@30
				location   	(189, 2675)
				fill_color 	13434879
				nlines     	1
				max_width  	2474
				justify    	0
				label      	"StaticNodeMng")
			    stereotype 	(object ItemLabel
				Parent_View 	@30
				location   	(189, 2625)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	2474
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"450137530213"
			    width      	2492
			    height     	292
			    annotation 	8
			    autoResize 	TRUE)
			(object UsesView "" @31
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @32
				Parent_View 	@31
				location   	(746, 2523)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.490636
				height     	45
				orientation 	1)
			    line_color 	3947680
			    quidu      	"4501376001B5"
			    client     	@28
			    supplier   	@30
			    vertices   	(list Points
				(460, 2356)
				(1076, 2612))
			    line_style 	0)
			(object ClassView "ParameterizedClass" "Logical View::shared::GCL::data::Tree" @33
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1653, 1284)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@33
				location   	(1487, 1276)
				fill_color 	13434879
				nlines     	1
				max_width  	332
				justify    	0
				label      	"Tree")
			    stereotype 	(object ItemLabel
				Parent_View 	@33
				location   	(1487, 1226)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	332
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"450138270399"
			    width      	350
			    height     	216
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @34
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450138270399"))
			    location   	(2082, 1371)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@34
				location   	(1941, 1312)
				fill_color 	13434879
				nlines     	2
				max_width  	246
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	306
			    height     	131)
			(object AttachView "" @35
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@34
			    supplier   	@33
			    vertices   	(list Points
				(1928, 1339)
				(1828, 1318))
			    line_style 	0)
			(object NoteView @36
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450136B500FA"))
			    location   	(927, 1995)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@36
				location   	(767, 1936)
				fill_color 	13434879
				nlines     	2
				max_width  	284
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	344
			    height     	131)
			(object AttachView "" @37
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@36
			    supplier   	@26
			    vertices   	(list Points
				(754, 1968)
				(505, 1932))
			    line_style 	0)
			(object NoteView @38
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450136CE01F4"))
			    location   	(868, 2294)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@38
				location   	(730, 2234)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @39
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@38
			    supplier   	@28
			    vertices   	(list Points
				(717, 2290)
				(460, 2285))
			    line_style 	0)
			(object NoteView @40
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"44FEC13E0149"))
			    location   	(249, 849)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@40
				location   	(111, 789)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @41
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@40
			    supplier   	@12
			    vertices   	(list Points
				(257, 915)
				(286, 1118))
			    line_style 	0)
			(object NoteView @42
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450135270167"))
			    location   	(1278, 930)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@42
				location   	(1140, 870)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @43
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@42
			    supplier   	@19
			    vertices   	(list Points
				(1127, 930)
				(1059, 930))
			    line_style 	0)
			(object NoteView @44
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450135840290"))
			    location   	(1281, 1290)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@44
				location   	(1143, 1230)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @45
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@44
			    supplier   	@20
			    vertices   	(list Points
				(1130, 1290)
				(1060, 1290))
			    line_style 	0)
			(object NoteView @46
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450135E90109"))
			    location   	(1998, 120)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@46
				location   	(1860, 60)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @47
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@46
			    supplier   	@21
			    vertices   	(list Points
				(1847, 120)
				(1779, 120))
			    line_style 	0)
			(object NoteView @48
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4501364F0290"))
			    location   	(2199, 930)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@48
				location   	(2061, 870)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @49
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@48
			    supplier   	@22
			    vertices   	(list Points
				(2048, 930)
				(1980, 930))
			    line_style 	0)
			(object NoteView @50
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"44FEBE140197"))
			    location   	(279, 124)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@50
				location   	(101, 65)
				fill_color 	13434879
				nlines     	2
				max_width  	321
				justify    	1
				label      	"{force usage:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	381
			    height     	131)
			(object AttachView "" @51
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@50
			    supplier   	@2
			    vertices   	(list Points
				(469, 129)
				(602, 133))
			    line_style 	0)
			(object NoteView @52
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"44FEBE2F034D"))
			    location   	(279, 372)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@52
				location   	(141, 312)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{force usage:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @53
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@52
			    supplier   	@7
			    vertices   	(list Points
				(429, 374)
				(608, 377))
			    line_style 	0)
			(object UsesView "" @54
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @55
				Parent_View 	@54
				location   	(486, 1730)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.500000
				height     	120
				orientation 	0)
			    line_color 	3947680
			    quidu      	"45018B6503D8"
			    client     	@23
			    supplier   	@26
			    vertices   	(list Points
				(366, 1651)
				(366, 1809))
			    line_style 	3
			    origin_attachment 	(366, 1651)
			    terminal_attachment 	(366, 1809))
			(object NoteView @56
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450137530213"))
			    location   	(3131, 2387)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@56
				location   	(2768, 2243)
				fill_color 	13434879
				nlines     	7
				max_width  	690
				justify    	1
				label      	
|FOR OPER. "make_real_node"
|Abstraction type: abstract
|
|FOR OPER. "pre_remove"
|Abstraction type: abstract
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	750
			    height     	300)
			(object AttachView "" @57
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@56
			    supplier   	@30
			    vertices   	(list Points
				(2755, 2468)
				(2092, 2612))
			    line_style 	0)))))
	(object Class_Category "alg"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (i.h)"
		    value      	"w:/shared/GCL/alg/container_op.i.h::450130B00213,w:/shared/GCL/alg/sorting.i.h::450133F10000")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/shared/GCL/alg/CycleChecker.h::4501338B00FA,w:/shared/GCL/alg/container_op.h::450130B00213,w:/shared/GCL/alg/cryptography.h::450133450138,w:/shared/GCL/alg/loki_extension.h::450133A803C8,w:/shared/GCL/alg/sorting.h::450133F10000")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/shared/GCL/alg/cryptography.cpp::450133450138"))
	    quid       	"44FEE24001F5"
	    documentation 	"ðàçëè÷íûå îáùèå àëãîðèòìû"
	    stereotype 	"Unit"
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "container_op"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450130B00213_USER_INCLUDES*"
			    value      	"//#UC START# *450130B00213_USER_INCLUDES*¤#include <set>¤#include <vector>¤//#UC END# *450130B00213_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450130B00213_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *450130B00213_USER_DEFINITION*¤// template classes for octet sequence comparision operators¤// for use in STL containers such as std::map¤// using ACE_OS_String::memcmp¤// example:¤// 	typedef GCL::OctetSeqLess<GslTree::TreeID_var> TreeIDCompare;¤// 	typedef std::map<GslTree::TreeID_var, Tree_impl*> TreeMap;¤template<class T> ¤struct OctetSeqLess : public std::binary_function<T, T, bool> {¤	bool operator() (T a, T b) const;¤};¤¤template<class T> ¤struct OctetSeqGreater : public std::binary_function<T, T, bool> {¤	bool operator() (T a, T b) const;¤};			¤¤// êîíâåðòèðóåò vector ïðîèçâîëüíîãî òèïà â set òîãî æå òèïà¤template <class _Type> ¤std::set<_Type> vector_to_set (std::vector<_Type>& in);¤¤// êîíâåðòèðóåò set ïðîèçâîëüíîãî òèïà â vector òîãî æå òèïà¤template <class _Type> ¤std::vector<_Type> set_to_vector (std::set<_Type>& in);¤	¤// íîðìàëèçóåò ìàññèâ target îòíîñèòåëüíî ìàññèâà base¤// Ïðèìåð 1:¤//	base = {1:2:3:4}¤//  target = {1:2:3a:4}¤//  normalize (base, target, true) = {3a:4}¤// Ïðèìåð 2:¤//	base = {1:2:3:4}¤//  target = {1:2:3}¤//  normalize (base, target, true) = {3}¤// Ïðèìåð 3:¤//	base = {1:2:3}¤//  target = {1:2:3}¤//  normalize (base, target, true) = {3}¤// Ïðèìåð 4:¤//	base = {1:2:3}¤//  target = {1:2:3}¤//  normalize (base, target, false) = {}¤template <class _C>¤_C& normalize (const _C& base, _C& target, bool with_back = true);¤¤/////////////////////////////////////////////////////////////////////////////////////////////////////////////¤// merge, intersect, difference for std::set¤¤template <class _Key, class _Compare, class _Allocator>¤std::set<_Key, _Compare, _Allocator>& merge (¤	std::set<_Key, _Compare, _Allocator>& cont¤	, const std::set<_Key, _Compare, _Allocator>& operand¤);¤¤template <class _Key, class _Compare, class _Allocator>¤std::set<_Key, _Compare, _Allocator>& intersect (¤	std::set<_Key, _Compare, _Allocator>& cont¤	, const std::set<_Key, _Compare, _Allocator>& operand¤);¤¤template <class _Key, class _Compare, class _Allocator>¤std::set<_Key, _Compare, _Allocator>& difference (¤	std::set<_Key, _Compare, _Allocator>& cont¤	, const std::set<_Key, _Compare, _Allocator>& operand¤);¤¤/////////////////////////////////////////////////////////////////////////////////////////////////////////////¤// merge, intersect, difference for std::map¤¤¤/////////////////////////////////////////////////////////////////////////////////////////////////////////////¤// merge, intersect, difference for std::vector¤//#UC END# *450130B00213_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450130B00213_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450130B00213_CUSTOM_INCLUDES*¤#include <functional>¤#include <ace/OS_String.h>¤//#UC END# *450130B00213_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450130B00213*"
			    value      	(value Text 
|//#UC START# *450130B00213*¤// template classes for octet sequence comparision operators¤// for use in STL containers such as std::map¤template<class T> ¤bool OctetSeqLess<T>::operator() (T a, T b) const {¤	if(a->length() < b->length()) {¤		return true;¤	}¤	else if(a->length() > b->length()) {¤		return false;¤	}¤	return (ACE_OS_String::memcmp(a->get_buffer(), b->get_buffer(),	a->length()) < 0);¤}¤¤template<class T> ¤bool OctetSeqGreater<T>::operator() (T a, T b) const {¤	if(a->length() < b->length()) {¤		return false;¤	}¤	else if(a->length() > b->length()) {¤		return true;¤	}¤	return (ACE_OS_String::memcmp(a->get_buffer(), b->get_buffer(),	a->length()) > 0);¤}¤¤// êîíâåðòèðóåò vector ïðîèçâîëüíîãî òèïà â set òîãî æå òèïà¤template <class _Type> ¤std::set<_Type> vector_to_set (std::vector<_Type>& in) {¤	std::set<_Type> out;¤	for (¤		std::vector<_Type>::iterator it = in.begin()¤		; it != in.end();¤		it++¤	) {¤		out.insert(*it);¤	}¤	return out;¤}¤¤// êîíâåðòèðóåò set ïðîèçâîëüíîãî òèïà â vector òîãî æå òèïà¤template <class _Type> ¤std::vector<_Type> set_to_vector (std::set<_Type>& in) {¤	std::vector<_Type> out;¤	for (¤		std::set<_Type>::iterator it = in.begin()¤		; it != in.end();¤		it++¤	) {¤		out.push_back(*it);¤	}¤	return out;¤}¤	¤// íîðìàëèçóåò ìàññèâ target îòíîñèòåëüíî ìàññèâà base¤template <class _C>¤_C& normalize (const _C& base, _C& target, bool with_back) {¤	if (target.size() && base.size()) {¤		_C::const_iterator it = base.begin();¤		for (; it != base.end(); it++) {¤			if (target.size() && (*it) == (*target.begin())) {¤				target.erase (target.begin());¤			} else {¤				break;¤			}¤		}¤¤		if ( target.size() == 1 && base.back() == target.back() ) {¤			it--;¤			target.insert (target.begin(), *it );¤		}¤		if ( target.size() == 0 && with_back) {¤			target.push_back ( base.back() );¤		}¤	}¤¤	return target;¤};¤¤/////////////////////////////////////////////////////////////////////////////////////////////////////////////¤// for std::set¤¤template <class _Key, class _Compare, class _Allocator>¤std::set<_Key, _Compare, _Allocator>& merge (¤	std::set<_Key, _Compare, _Allocator>& cont¤	, const std::set<_Key, _Compare, _Allocator>& operand¤) {¤	for (std::set<_Key, _Compare, _Allocator>::iterator it = operand.begin(); it != operand.end(); it++) {¤		if (cont.find(*it) == cont.end()) {¤			cont.insert(*it);¤		}¤	}¤	return cont;¤}¤¤template <class _Key, class _Compare, class _Allocator>¤std::set<_Key, _Compare, _Allocator>& intersect (std::set<_Key, _Compare, _Allocator>& cont, const std::set<_Key, _Compare, _Allocator>& operand) {¤	for (std::set<_Key, _Compare, _Allocator>::iterator it = cont.begin(); it != cont.end(); it++) {¤		if (operand.find(*it) == operand.end()) {¤			cont.erase(it);¤		}¤	}¤	return cont;¤}¤¤template <class _Key, class _Compare, class _Allocator>¤std::set<_Key, _Compare, _Allocator>& difference (¤	std::set<_Key, _Compare, _Allocator>& cont¤	, const std::set<_Key, _Compare, _Allocator>& operand¤) {¤	for (std::set<_Key, _Compare, _Allocator>::iterator it = operand.begin(); it != operand.end(); it++) {¤		if (cont.find(*it) != cont.end()) {¤			cont.erase(*it);¤		}¤	}¤	return cont;¤}¤//#UC END# *450130B00213*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/alg/container_op.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/alg/container_op.i.h"))
		    quid       	"450130B00213"
		    documentation 	"ðàñøèðåíèå ñòàíäàðòíûõ àëãîðèòìîâ íàä êîíòåéíåðàìè: normolize; merge, difference, intersect íà ñàìîì êîíòåéíåðå (ïîêà òîêà äëÿ std::set) "
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "cryptography"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450133450138_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450133450138_CUSTOM_INCLUDES*¤//#UC END# *450133450138_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450133450138*"
			    value      	(value Text 
|//#UC START# *450133450138*¤const unsigned int crypto_sold_length = sizeof (short);¤const unsigned int crypto_sold_size = crypto_sold_length;¤¤SimpleCrypto::SimpleCrypto() {¤	srand ((unsigned)time( 0 ));¤}¤¤SimpleCrypto::~SimpleCrypto () {¤}¤¤void SimpleCrypto::encrypt(const Buffer& buf_in, Buffer& buf_out) {¤/*¤	if (buf_in.m_len>=crypto_tail_length) {¤		return;¤	}¤*/¤	unsigned short crypto_sold = (unsigned short) rand ();¤	buf_out.m_len = buf_in.m_len+crypto_sold_size;¤	buf_out.m_buf = new char [buf_out.m_len];¤	memcpy ((unsigned char*)buf_out.m_buf+crypto_sold_size, buf_in.m_buf, buf_in.m_len);¤	*(unsigned short*)buf_out.m_buf = crypto_sold;¤	for (unsigned i = crypto_sold_size; static_cast<int>(i)<buf_out.m_len;i++) {¤		*((unsigned char*)buf_out.m_buf+i)= *((unsigned char*)buf_out.m_buf+i) ^ make_crypt_mask (i-crypto_sold_size+1,crypto_sold);¤	}¤}¤¤void SimpleCrypto::decrypt(const Buffer& buf_in, Buffer& buf_out) {¤	unsigned short crypto_sold;¤	std::string result;¤	crypto_sold = *(unsigned short*)(buf_in.m_buf);¤	unsigned char* buffer = new unsigned char[buf_in.m_len];¤	unsigned buf_len=0;¤	for (unsigned i=crypto_sold_size; static_cast<int>(i)<buf_in.m_len;i++) {¤		unsigned char crypto_tail;¤		crypto_tail = *((unsigned char*)buf_in.m_buf+i);¤		unsigned char ch = static_cast<unsigned char>( crypto_tail ^ make_crypt_mask (i-crypto_sold_size+1,crypto_sold)); ¤		buffer[buf_len] = ch;¤		buf_len++;¤	}¤	buf_out.m_buf = new char [buf_len];¤	buf_out.m_len = buf_len;¤	memcpy (buf_out.m_buf, buffer, buf_len);¤	delete []buffer;¤}¤¤unsigned char SimpleCrypto::make_crypt_mask (int index, unsigned short crypt_sold) {¤	unsigned char mask = (unsigned char)((crypt_sold >> (8*(index%2))) & 0xFF);¤	return ~((unsigned char)(index & 0xFF)) ^ mask;¤}¤//#UC END# *450133450138*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450133450138_USER_INCLUDES*"
			    value      	"//#UC START# *450133450138_USER_INCLUDES*¤#include <string.h>¤//#UC END# *450133450138_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450133450138_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *450133450138_USER_DEFINITION*¤class SimpleCrypto {¤	public:¤		struct Buffer {¤			void* m_buf;¤			int m_len;¤			Buffer() : m_buf(0), m_len(0) {}¤			Buffer(void* buf, int len) : m_buf(0), m_len(0) {¤				if(buf != 0 && len > 0) {¤					m_len = len;¤					m_buf = new char[m_len];¤					::memcpy(m_buf, buf, m_len);¤				}¤			}¤			~Buffer() {¤				if(m_buf != 0) {¤					delete[] reinterpret_cast<char*>(m_buf); // GARANT_GCCWARN¤				}¤			}¤			Buffer& operator=(const Buffer& other) {¤				if(m_buf) {¤					delete[] reinterpret_cast<char*>(m_buf); // GARANT_GCCWARN¤					m_buf = 0;¤					m_len = 0;¤				}¤				if(other.m_buf != 0 && other.m_len > 0) {¤					m_len = other.m_len;¤					m_buf = new char[m_len];¤					::memcpy(m_buf, other.m_buf, m_len);¤				}¤				return *this;¤			}¤			bool operator!() {¤				return (m_buf == 0 || m_len == 0) ? true : false;¤			}¤		};¤¤		SimpleCrypto ();¤		¤		~SimpleCrypto ();¤		¤		class KeyLenError : public Core::Exception {¤			const char* uid () const /*throw ()*/ {¤				return "GCL::SimpleCrypto::KeyLenError";¤			}¤		};¤¤		void encrypt (const Buffer& buf_in, Buffer& buf_out);¤		¤		void decrypt (const Buffer& buf_in, Buffer& buf_out);¤	¤	private:¤		unsigned char make_crypt_mask (int index, unsigned short crypt_sold);¤	};¤//#UC END# *450133450138_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/alg/cryptography.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/alg/cryptography.h"))
		    quid       	"450133450138"
		    documentation 	"íåñêîëüêî êëàññîâ ðåàëèçóþùèõ ìåòîäû êðèïòîãðàôèè"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "CycleChecker"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501338B00FA_USER_INCLUDES*"
			    value      	"//#UC START# *4501338B00FA_USER_INCLUDES*¤#include <algorithm>¤#include <vector>¤//#UC END# *4501338B00FA_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501338B00FA_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4501338B00FA_USER_DEFINITION*¤template <class _IterationId>¤class CycleChecker {¤public:¤	class InvalidIterationSequence : public Core::Exception {¤		virtual const char* what () const throw () {¤			return "InvalidIterationSequence (pop stack sequens is differ then push stack sequence)";¤		}¤¤		virtual const char* uid () const /*throw ()*/ {¤			return "GCL::CycleChecker::InvalidIterationSequence";¤		}¤	};¤¤	class Iteration {¤	public:¤		Iteration (CycleChecker& cc, _IterationId id) : m_cc (cc), m_id(id) {¤			m_is_cycled = !m_cc.start_iteration(m_id);¤		}¤¤		~Iteration () {¤			if (!m_is_cycled) {¤				m_cc.end_iteration(m_id);¤			}¤		}¤¤		bool is_cycled () {¤			return m_is_cycled;¤		}¤¤	private:¤		CycleChecker& m_cc;¤		_IterationId m_id;¤		bool m_is_cycled;¤	};¤¤protected:¤	friend Iteration;¤	bool start_iteration (_IterationId id) {¤		if (std::find(m_iterations.begin(), m_iterations.end(), id) != m_iterations.end()) {¤		//if (m_iterations.find(id) != m_iteration.end()) {¤			return false;¤		} else {¤			m_iterations.push_back(id);¤			return true;¤		}¤	}¤¤	void end_iteration (_IterationId id) /*throw (InvalidIterationSequence)*/ {¤		if (id != m_iterations.back()) {¤		//if (m_iterations.find(id) != m_iterations.back()) {¤			throw InvalidIterationSequence();¤		}¤		m_iterations.pop_back();¤	}¤¤private:¤	std::vector<_IterationId> m_iterations;¤};¤//#UC END# *4501338B00FA_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/alg/CycleChecker.h"))
		    quid       	"4501338B00FA"
		    documentation 	"ïîçâîëÿåò âûÿâëÿòü ðåêóðñèâíûå âûçîâû - ìîæåò áûòü ïîëåçåí äëÿ ðàçëè÷íîãî ðîäà ðàñ÷åòîâ ïóòåé è ò.ä."
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "loki_extension"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450133A803C8_USER_INCLUDES*"
			    value      	(value Text 
|//#UC START# *450133A803C8_USER_INCLUDES*¤#include "loki/NullType.h"¤#include "loki/Typelist.h"¤//#UC END# *450133A803C8_USER_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450133A803C8_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *450133A803C8_USER_DEFINITION*¤//input: TList, int head¤//output: TList tail (TList without head elements)¤template <class TList, int head> struct TLTail;¤¤template<int head>¤struct TLTail< ::Loki::NullType, head> {¤	typedef ::Loki::NullType Result;     ¤};¤¤template<class Head, class TList>¤struct TLTail< ::Loki::Typelist <Head, TList>, 0> {¤	typedef typename ::Loki::Typelist <Head, TList> Result;¤};¤¤template<class Head, class TList, int head>¤struct TLTail< ::Loki::Typelist <Head, TList>, head> {¤	typedef typename TLTail<TList, head-1>::Result Result;¤};¤¤¤//input: TList,  T, int number¤//output: index of T or -1 if absent¤template <class TList, class T, int num=0> struct IndexOfNum;¤¤template<class T, int num>¤struct IndexOfNum< ::Loki::NullType, T, num> {¤	enum {value = -1};¤};¤¤template<class Head, class Tail, class T>¤struct IndexOfNum< ::Loki::Typelist<Head, Tail>, T, 0> {¤	typedef typename ::Loki::Typelist<Head, Tail> List;¤	enum {value = ::Loki::TL::IndexOf<List, T>::value};¤};¤¤template<class Head, class Tail, class T, int num>¤struct IndexOfNum< ::Loki::Typelist<Head, Tail>, T, num> {¤	typedef typename ::Loki::Typelist<Head, Tail> List;¤¤private:¤	enum {temp = ::Loki::TL::IndexOf<List, T>::value+1};¤	typedef typename ::TLTail<List, temp>::Result Result;¤¤public:¤	enum {value = ::IndexOfNum<Result, T, num-1>::value == -1 ? -1 : temp + ::IndexOfNum<Result, T, num-1>::value};¤};¤//#UC END# *450133A803C8_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/alg/loki_extension.h"))
		    quid       	"450133A803C8"
		    documentation 	"ðàñøèðåíèå Ëîêè, ïîçâîëÿþùåå ïîëó÷èòü íîìåð òèïà èç ñïèñêà òèïîâ, ïðè óñëîâèè ÷òî äàííûé òèï â ñïèñêå âñòðå÷àåòñÿ íåñêîëüêî ðàç"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "sorting"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450133F10000_USER_INCLUDES*"
			    value      	"//#UC START# *450133F10000_USER_INCLUDES*¤//#UC END# *450133F10000_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*450133F10000_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *450133F10000_USER_DEFINITION*¤// uqsort¤// ìåòîä ñîðòèðîâêè ïðîñòûì ïåðåáîðàì ÁÅÇ ó÷åòà ðàâåíñòâà ïàð¤// óíèêàëüíûé àëãîðèòì äëÿ ñîðòèðîâêè ìàññèâîâ äëÿ ýëåìåíòîâ êîòîðûõ ìîæåò¤// âûïîëíÿòñÿ óñëîâèå:¤//	 1. arr[i] == arr[k]¤//	 2. arr[k] == arr[j]¤//	 3. arr[i] != arr[j]¤inline void uqsort( void *base, size_t num, size_t width, int (__cdecl *compare )(const void *elem1, const void *elem2 ) );¤//#UC END# *450133F10000_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450133F10000_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *450133F10000_CUSTOM_INCLUDES*¤//#UC END# *450133F10000_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*450133F10000*"
			    value      	(value Text 
|//#UC START# *450133F10000*¤// uqsort¤inline void uqsort( void *base, size_t num, size_t width, int (__cdecl *compare )(const void *elem1, const void *elem2 ) ) {¤	void* swap_buf = malloc (width);¤	bool flag = true;¤	while (flag) {¤		flag = false;¤		for (unsigned i =0; i < num; i++ ) {¤			for (unsigned k = i+1; k < num; k++ ) {¤				int res = compare( (char*)base + i*width, (char*)base + k*width);¤				if ( res == 1 ) {¤					memmove(swap_buf, (char*)base + i*width, width );¤					memmove((char*)base + i*width, (char*)base + k*width, width );¤					memmove((char*)base + k*width, swap_buf, width );¤¤					flag = true;¤					k = num;¤				}¤				if ( res == -1 )		¤					k = num; // end¤			}¤		}¤	}¤	free (swap_buf);¤}¤//#UC END# *450133F10000*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/alg/sorting.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/alg/sorting.i.h"))
		    quid       	"450133F10000"
		    documentation 	"àëãîðèòìû ñîðòèðîâêè"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator"))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"44FEAD4A0272"))
		    quid       	"44FEE247006E"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	0
		    origin_y   	0
		    items      	(list diagram_item_list
			(object ClassView "Class" "Logical View::shared::GCL::alg::container_op" @58
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(270, 120)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@58
				location   	(120, 90)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"container_op")
			    stereotype 	(object ItemLabel
				Parent_View 	@58
				location   	(120, 40)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"450130B00213"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @59
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450130B00213"))
			    location   	(711, 108)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@59
				location   	(511, 55)
				fill_color 	13434879
				nlines     	2
				max_width  	365
				justify    	1
				label      	
|{need UC:=true}
|{need inline-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	425
			    height     	119)
			(object AttachView "" @60
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@59
			    supplier   	@58
			    vertices   	(list Points
				(498, 113)
				(429, 115))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::alg::cryptography" @61
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(282, 858)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@61
				location   	(132, 828)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"cryptography")
			    stereotype 	(object ItemLabel
				Parent_View 	@61
				location   	(132, 778)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"450133450138"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @62
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450133450138"))
			    location   	(711, 858)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@62
				location   	(520, 799)
				fill_color 	13434879
				nlines     	2
				max_width  	346
				justify    	1
				label      	
|{need UC:=true}
|{need impl-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	406
			    height     	131)
			(object AttachView "" @63
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@62
			    supplier   	@61
			    vertices   	(list Points
				(507, 858)
				(441, 858))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::alg::CycleChecker" @64
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1347, 147)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@64
				location   	(1197, 117)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"CycleChecker")
			    stereotype 	(object ItemLabel
				Parent_View 	@64
				location   	(1197, 67)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4501338B00FA"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::alg::loki_extension" @65
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1350, 441)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@65
				location   	(1200, 411)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"loki_extension")
			    stereotype 	(object ItemLabel
				Parent_View 	@65
				location   	(1200, 361)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"450133A803C8"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::alg::sorting" @66
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(267, 468)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@66
				location   	(117, 438)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"sorting")
			    stereotype 	(object ItemLabel
				Parent_View 	@66
				location   	(117, 388)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"450133F10000"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @67
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450133F10000"))
			    location   	(705, 468)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@67
				location   	(505, 409)
				fill_color 	13434879
				nlines     	2
				max_width  	365
				justify    	1
				label      	
|{need UC:=true}
|{need inline-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	425
			    height     	131)
			(object AttachView "" @68
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@67
			    supplier   	@66
			    vertices   	(list Points
				(492, 468)
				(426, 468))
			    line_style 	0)
			(object NoteView @69
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4501338B00FA"))
			    location   	(1725, 147)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@69
				location   	(1587, 87)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @70
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@69
			    supplier   	@64
			    vertices   	(list Points
				(1574, 147)
				(1506, 147))
			    line_style 	0)
			(object NoteView @71
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"450133A803C8"))
			    location   	(1728, 441)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@71
				location   	(1590, 381)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @72
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@71
			    supplier   	@65
			    vertices   	(list Points
				(1577, 441)
				(1509, 441))
			    line_style 	0)))))
	(object Class_Category "math"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (i.h)"
		    value      	"w:/shared/GCL/math/unbounded_ops.i.h::4501954D0280")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/shared/GCL/math/long_rand.h::45018DA0002E,w:/shared/GCL/math/statistics.h::45018DFD030D,w:/shared/GCL/math/unbounded_ops.h::4501954D0280")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/shared/GCL/math/long_rand.cpp::45018DA0002E,w:/shared/GCL/math/statistics.cpp::45018DFD030D"))
	    quid       	"45018D5E036B"
	    documentation 	"ðàçëè÷íûå ìàòåìàòè÷åñêèå ôóíêöèè"
	    stereotype 	"Unit"
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "long_rand"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*45018DA0002E_USER_INCLUDES*"
			    value      	"//#UC START# *45018DA0002E_USER_INCLUDES*¤//#UC END# *45018DA0002E_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*45018DA0002E_USER_DEFINITION*"
			    value      	"//#UC START# *45018DA0002E_USER_DEFINITION*¤//#UC END# *45018DA0002E_USER_DEFINITION*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*45018DA0002E_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *45018DA0002E_CUSTOM_INCLUDES*¤//#UC END# *45018DA0002E_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*45018DA0002E*"
			    value      	"//#UC START# *45018DA0002E*¤#include <stdlib.h>¤#include <time.h>¤//#UC END# *45018DA0002E*")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/math/long_rand.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/math/long_rand.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*45018DA0002E_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *45018DA0002E_CUSTOM_INCLUDES*¤//#UC END# *45018DA0002E_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*45018DA0002E*"
			    value      	"//#UC START# *45018DA0002E*¤//#UC END# *45018DA0002E*"))
		    quid       	"45018DA0002E"
		    documentation 	"ôóíêöèÿ ñëó÷àéíîãî ÷èñëà â óêàçàííîì äèàïàçîíå"
		    stereotype 	"UtilityPack"
		    operations 	(list Operations
			(object Operation "long_rand"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"i.h:*45018DB90167*"
				    value      	(value Text 
|//#UC START# *45018DB90167*¤	unsigned long r = rand ();¤	¤	r <<= 15;¤	r |= rand ();¤	r <<= 2;¤	r |= rand () / (RAND_MAX/4);¤¤	double r_long = double ((unsigned long) (-1)) / max;¤	return (unsigned long) (r / r_long);¤	//#UC END# *45018DB90167*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45018DB90167*"
				    value      	(value Text 
|//#UC START# *45018DB90167*¤	unsigned long r = rand ();¤	¤	r <<= 15;¤	r |= rand ();¤	r <<= 2;¤	r |= rand () / (RAND_MAX/4);¤¤	double r_long = double ((unsigned long) (-1)) / max;¤	return (unsigned long) (r / r_long);¤	//#UC END# *45018DB90167*
				    )))
			    quid       	"45018DB90167"
			    documentation 	
|need to be initialized: srand( (unsigned)time( 0 ) );
|
			    
			    parameters 	(list Parameters
				(object Parameter "max"
				    quid       	"45ED7DB60290"
				    type       	"unsigned long"
				    quidu      	"3DBFFDE101CA"))
			    result     	"unsigned long"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFDE101CA"))
		    language   	"MDA Generator")
		(object Class "statistics"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*45018DFD030D_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *45018DFD030D_CUSTOM_INCLUDES*¤#include <map>¤#include <cmath>¤#include <cstdlib>¤#include <algorithm>¤#include <ace/Singleton.h>¤#include <ace/Recursive_Thread_Mutex.h>¤#include <boost/random/mersenne_twister.hpp>¤#include <boost/random/uniform_real.hpp>¤#include <boost/random/variate_generator.hpp>¤//#UC END# *45018DFD030D_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*45018DFD030D*"
			    value      	(value Text 
|//#UC START# *45018DFD030D*¤typedef boost::mt19937 base_generator_type;¤typedef boost::uniform_real<> base_distribution_type; // uni_dist(0,1);¤typedef boost::variate_generator<base_generator_type&, base_distribution_type> variate_generator_type; //uni(generator, uni_dist);¤class Generator_i {¤private:¤	base_generator_type* m_gen;¤	base_distribution_type* m_dist;¤	variate_generator_type* m_var;¤	Core::Mutex m_mtx;¤public:¤	void set_seed () {¤		GUARD (m_mtx);¤		m_gen->seed (57u);¤	}¤	double get_number () {¤		GUARD (m_mtx);¤		double ret = m_var->operator () ();¤		return ret;¤	}¤	Generator_i () {¤		m_gen = new base_generator_type (57u);¤		m_dist = new base_distribution_type (0.0, 1.0);¤		m_var = new variate_generator_type (*m_gen, *m_dist);¤	}¤	virtual ~Generator_i () {¤		delete m_var;¤		delete m_dist;¤		delete m_gen;¤	}¤};¤typedef ACE_Singleton <Generator_i, ACE_Recursive_Thread_Mutex> GeneratorSingleton;¤//#UC END# *45018DFD030D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*45018DFD030D_USER_INCLUDES*"
			    value      	"//#UC START# *45018DFD030D_USER_INCLUDES*¤//#UC END# *45018DFD030D_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*45018DFD030D_USER_DEFINITION*"
			    value      	"//#UC START# *45018DFD030D_USER_DEFINITION*¤//#UC END# *45018DFD030D_USER_DEFINITION*")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/math/statistics.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/math/statistics.h"))
		    quid       	"45018DFD030D"
		    documentation 	"ñòàòèñòè÷åñêèå ôóíêöèè (Ãðèøà, íàïèøè ïîäðîáíåå ÷òî îíè äåëàþò)"
		    stereotype 	"UtilityPack"
		    operations 	(list Operations
			(object Operation "get_average"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*450193A901B5*"
				    value      	(value Text 
|//#UC START# *450193A901B5*¤	unsigned int n = observed_data.size ();¤	double ret = 0;¤	for (unsigned int i = 0; i < n; ++i) {¤		ret += observed_data [i];¤	}¤	ret /= n;¤	return ret;¤	//#UC END# *450193A901B5*
				    )))
			    quid       	"450193A901B5"
			    documentation 	"descriptive statistics"
			    parameters 	(list Parameters
				(object Parameter "observed_data"
				    quid       	"450193A901B6"
				    type       	"DoubleVector"
				    quidu      	"45018E4801D4"))
			    result     	"double"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFD9B0197")
			(object Operation "get_stddev"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45018E1D02FD*"
				    value      	(value Text 
|//#UC START# *45018E1D02FD*¤	unsigned int n = observed_data.size ();¤	if (n <= 1) {¤		return 0;¤	}¤	double ret = 0;¤	for (unsigned int i = 0; i < n; ++i) {¤		ret += my_sqr (observed_data [i] - average);¤	}¤	ret /= (n - 1);¤	return sqrt (ret);¤	//#UC END# *45018E1D02FD*
				    )))
			    quid       	"45018E1D02FD"
			    documentation 	"descriptive statistics"
			    parameters 	(list Parameters
				(object Parameter "observed_data"
				    quid       	"450193E5004E"
				    type       	"DoubleVector"
				    quidu      	"45018E4801D4")
				(object Parameter "average"
				    quid       	"450193E5007D"
				    type       	"double"
				    quidu      	"3DBFFD9B0197"))
			    result     	"double"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFD9B0197")
			(object Operation "distribution_restart"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4501940802BF*"
				    value      	(value Text 
|//#UC START# *4501940802BF*¤	::GCL::GeneratorSingleton::instance ()->set_seed ();¤	//#UC END# *4501940802BF*
				    )))
			    quid       	"4501940802BF"
			    documentation 	"random_distributions - restart pseudorandom sequence"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "uniform_distribution"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4501942E03D8*"
				    value      	(value Text 
|//#UC START# *4501942E03D8*¤	return s + (e - s)* uniform_distribution_0_1 ();¤	//#UC END# *4501942E03D8*
				    )))
			    quid       	"4501942E03D8"
			    documentation 	"random_distributions - start, end"
			    parameters 	(list Parameters
				(object Parameter "s"
				    quid       	"4501949003B9"
				    type       	"double"
				    quidu      	"3DBFFD9B0197")
				(object Parameter "e"
				    quid       	"45019491000F"
				    type       	"double"
				    quidu      	"3DBFFD9B0197"))
			    result     	"double"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFD9B0197")
			(object Operation "normal_distribution"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*450194390177*"
				    value      	(value Text 
|//#UC START# *450194390177*¤	/* mean m, standard deviation s */¤	double x1 = 0, x2 = 0, w = 0, y1 = 0;¤	static double y2 = 0;¤	static int use_last = 0;¤¤	if (use_last)		        /* use value from previous call */¤	{¤		y1 = y2;¤		use_last = 0;¤	}¤	else¤	{¤		do {¤			x1 = 2.0 * uniform_distribution_0_1 () - 1.0;¤			x2 = 2.0 * uniform_distribution_0_1 () - 1.0;¤			w = x1 * x1 + x2 * x2;¤		} while ( w >= 1.0 );¤¤		w = sqrt( (-2.0 * log( w ) ) / w );¤		y1 = x1 * w;¤		y2 = x2 * w;¤		use_last = 1;¤	}¤¤	return( m + y1 * s );¤	//#UC END# *450194390177*
				    )))
			    quid       	"450194390177"
			    documentation 	"random_distributions - average, deviation"
			    parameters 	(list Parameters
				(object Parameter "m"
				    quid       	"450194A90290"
				    type       	"double"
				    quidu      	"3DBFFD9B0197")
				(object Parameter "s"
				    quid       	"450194A902BF"
				    type       	"double"
				    quidu      	"3DBFFD9B0197"))
			    result     	"double"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFD9B0197")
			(object Operation "unit_test_pseudorandom_period"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*450194BC0280*"
				    value      	(value Text 
|//#UC START# *450194BC0280*¤	distribution_restart ();¤	NumbersVec random_vec;¤	for (long i = 0; i < 100000; ++i) {¤		NumbersVec three_vec;¤		long num0 = long (GCL::uniform_distribution (0.1, 9999.9));¤		three_vec.push_back (num0);¤		NumbersVec::const_iterator it_f0 = std::find (random_vec.begin (), random_vec.end (), num0);¤		if (it_f0 != random_vec.end ()) {¤			long num1 = long (GCL::uniform_distribution (0.1, 9999.9));¤			three_vec.push_back (num1);¤			NumbersVec::const_iterator it_f1 = std::find (random_vec.begin (), random_vec.end (), num1);¤			if (it_f1 != random_vec.end ()) {¤				--it_f1;¤				if (it_f1 == it_f0) {¤					long num2 = long (GCL::uniform_distribution (0.1, 9999.9));¤					three_vec.push_back (num2);¤					NumbersVec::const_iterator it_f2 = std::find (random_vec.begin (), random_vec.end (), num2);¤					if (it_f2 != random_vec.end ()) {¤						--it_f2;¤						--it_f2;¤						if (it_f2 == it_f0) {¤							random_vec.push_back (num0);¤							NumbersVec::const_iterator it_n = random_vec.end ();¤							--it_n;¤							return std::distance (it_f0, it_n);¤						}¤					}¤				}¤			}¤		}¤		for (NumbersVec::const_iterator it = three_vec.begin (); it != three_vec.end (); ++it) {¤			random_vec.push_back (*it);¤		}¤	}¤	distribution_restart ();¤	return 0;¤	//#UC END# *450194BC0280*
				    )))
			    quid       	"450194BC0280"
			    documentation 	"returns pseudorandom period or 0 if not found"
			    result     	"unsigned long"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFDE101CA")
			(object Operation "unit_test_normal_distribution_ok"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*450194D40138*"
				    value      	(value Text 
|//#UC START# *450194D40138*¤	distribution_restart ();¤	bool ok_100_10 = _normal_distribution_ok (100, 10);¤	bool ok_10000_1000 = _normal_distribution_ok (10000, 1000);¤	distribution_restart ();¤	return ok_100_10 && ok_10000_1000;¤	//#UC END# *450194D40138*
				    )))
			    quid       	"450194D40138"
			    documentation 	"returns check status of normal distribution generator"
			    result     	"boolean"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFE100240")
			(object Operation "unit_test_uniform_distribution_ok"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*450194F303A9*"
				    value      	(value Text 
|//#UC START# *450194F303A9*¤	std::vector <double> count_vec;¤	for (int i = 0; i < 10; ++i) {¤		count_vec.push_back (0);¤	}¤	for (int i = 0; i < 10000; ++i) {¤		long num = long (GCL::uniform_distribution (0.1, 999.9));¤		long interval = num / 100;¤		++count_vec [interval];¤	}¤	double mx = GCL::get_average (count_vec);¤	double dx = GCL::get_stddev (count_vec, mx);¤	double d_dxmx = fabs (dx / mx);¤	return d_dxmx < 0.05;¤	//#UC END# *450194F303A9*
				    )))
			    quid       	"450194F303A9"
			    documentation 	"returns check status of uniform distribution generato"
			    result     	"boolean"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFE100240")
			(object Operation "my_sqr"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4501951F02DE*"
				    value      	(value Text 
|//#UC START# *4501951F02DE*¤	return x*x;¤	//#UC END# *4501951F02DE*
				    )))
			    quid       	"4501951F02DE"
			    parameters 	(list Parameters
				(object Parameter "x"
				    quid       	"4501953B0119"
				    type       	"double"
				    quidu      	"3DBFFD9B0197"))
			    result     	"double"
			    concurrency 	"Sequential"
			    opExportControl 	"Private"
			    uid        	0
			    quidu      	"3DBFFD9B0197")
			(object Operation "uniform_distribution_0_1"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45019E4902DE*"
				    value      	(value Text 
|//#UC START# *45019E4902DE*¤	double x = ::GCL::GeneratorSingleton::instance ()->get_number ();¤	return x;¤	//#UC END# *45019E4902DE*
				    )))
			    quid       	"45019E4902DE"
			    result     	"double"
			    concurrency 	"Sequential"
			    opExportControl 	"Private"
			    uid        	0
			    quidu      	"3DBFFD9B0197")
			(object Operation "_normal_distribution_ok"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*45019E86006D*"
				    value      	(value Text 
|//#UC START# *45019E86006D*¤	std::vector <double> d;¤	for (int i = 0; i < 10000; ++i) {¤		d.push_back (GCL::normal_distribution (average, stddev));¤	}¤	double mx = GCL::get_average (d);¤	double dx = GCL::get_stddev (d, mx);¤	double d_mx = fabs ((mx - average) / average);¤	double d_dx = fabs ((dx - stddev) / stddev);¤	return (d_mx < 0.002) && (d_dx < 0.015);¤	//#UC END# *45019E86006D*
				    )))
			    quid       	"45019E86006D"
			    parameters 	(list Parameters
				(object Parameter "average"
				    quid       	"45019EA201A5"
				    type       	"double"
				    quidu      	"3DBFFD9B0197")
				(object Parameter "stddev"
				    quid       	"45019EA201F4"
				    type       	"double"
				    quidu      	"3DBFFD9B0197"))
			    result     	"boolean"
			    concurrency 	"Sequential"
			    opExportControl 	"Private"
			    uid        	0
			    quidu      	"3DBFFE100240"))
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "x"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45019CC3005D"
			    type       	"double"
			    quidu      	"3DBFFD9B0197"
			    initv      	"0"
			    Containment 	"By Value"))
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "DoubleVector"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45018E4801D4"
			    documentation 	"êîíòåéíåð äëÿ äàííûõ"
			    stereotype 	"Vector")
			(object Class "NumbersVec"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator User Properties"
				    name       	"force usage"
				    value      	"true"))
			    quid       	"45019EB7006D"
			    stereotype 	"Vector"
			    exportControl 	"Private")))
		(object Class "unbounded_ops"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501954D0280_USER_INCLUDES*"
			    value      	"//#UC START# *4501954D0280_USER_INCLUDES*¤//#UC END# *4501954D0280_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501954D0280_USER_DEFINITION*"
			    value      	"//#UC START# *4501954D0280_USER_DEFINITION*¤#define GCL_MAX GCL::gcl_operation<GCL::Max>¤#define GCL_MIN GCL::gcl_operation<GCL::Min>¤#define GCL_SUM GCL::gcl_operation<GCL::Sum>¤//#UC END# *4501954D0280_USER_DEFINITION*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4501954D0280_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4501954D0280_CUSTOM_INCLUDES*¤//#UC END# *4501954D0280_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4501954D0280*"
			    value      	(value Text 
|//#UC START# *4501954D0280*¤template <typename T>¤struct Max {¤	static T exec (const T& p1, const T& p2) {¤		return (p1 > p2) ? p1 : p2;¤	}¤};¤¤template <typename T>¤struct Min {¤	static T exec (const T& p1, const T& p2) {¤		return (p1 < p2) ? p1 : p2;¤	}¤};¤¤template <typename T>¤struct Sum {¤	static T exec (const T& p1, const T& p2) {¤		return p1 + p2;¤	}¤};¤template<template <typename T> class Operation, typename T>	¤T gcl_operation (const T& a1) {				¤	return a1;¤}¤¤template<template <typename T> class Operation, typename T>	¤T gcl_operation (const T& a1, const T& a2) {				¤	return Operation<T>::exec (a1, a2);¤}	¤¤template<template <typename T> class Operation, typename T>¤T gcl_operation (const T& a1, const T& a2, const T& a3) {				¤	return Operation<T>::exec (a1, gcl_operation<Operation> (a2, a3));¤}	¤template<template <typename T> class Operation, typename T>¤T gcl_operation (const T& a1, const T& a2, const T& a3, const T& a4) {		¤	return Operation<T>::exec (a1, gcl_operation<Operation> (a2, a3, a4));¤}	¤template<template <typename T> class Operation, typename T>¤T gcl_operation (const T& a1, const T& a2, const T& a3, const T& a4, const T& a5) {		¤	return Operation<T>::exec (a1, gcl_operation<Operation> (a2, a3, a4, a5));¤}	¤template<template <typename T> class Operation, typename T>¤T gcl_operation (const T& a1, const T& a2, const T& a3, const T& a4, const T& a5, const T& a6) {		¤	return Operation<T>::exec (a1, gcl_operation<Operation> (a2, a3, a4, a5, a6));¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤) {				¤	return Operation<T>::exec (a1, gcl_operation<Operation> (a2, a3, a4, a5, a6, a7));¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤	, const T& a8¤) {		¤	return Operation<T>::exec (a1, gcl_operation<Operation> (a2, a3, a4, a5, a6, a7, a8));¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤	, const T& a8¤	, const T& a9¤) {		¤	return Operation<T>::exec (¤		a1¤		, gcl_operation<Operation> (¤			a2¤			, a3¤			, a4¤			, a5¤			, a6¤			, a7¤			, a8¤			, a9¤		)¤	);¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤	, const T& a8¤	, const T& a9¤	, const T& a10¤) {		¤	return Operation<T>::exec (¤		a1¤		, gcl_operation<Operation> (¤			a2¤			, a3¤			, a4¤			, a5¤			, a6¤			, a7¤			, a8¤			, a9¤			, a10¤		)¤	);¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤	, const T& a8¤	, const T& a9¤	, const T& a10¤	, const T& a11¤) {				¤	return Operation<T>::exec (¤		a1¤		, gcl_operation<Operation> (¤			a2¤			, a3¤			, a4¤			, a5¤			, a6¤			, a7¤			, a8¤			, a9¤			, a10¤			, a11¤		)¤	);¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤	, const T& a8¤	, const T& a9¤	, const T& a10¤	, const T& a11¤	, const T& a12¤) {				¤	return Operation<T>::exec (¤		a1¤		, gcl_operation<Operation> (¤			a2¤			, a3¤			, a4¤			, a5¤			, a6¤			, a7¤			, a8¤			, a9¤			, a10¤			, a11¤			, a12¤		)¤	);¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤	, const T& a8¤	, const T& a9¤	, const T& a10¤	, const T& a11¤	, const T& a12¤	, const T& a13¤) {				¤	return Operation<T>::exec (¤		a1¤		, gcl_operation<Operation> (¤			a2¤			, a3¤			, a4¤			, a5¤			, a6¤			, a7¤			, a8¤			, a9¤			, a10¤			, a11¤			, a12¤			, a13¤		)¤	);¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤	, const T& a8¤	, const T& a9¤	, const T& a10¤	, const T& a11¤	, const T& a12¤	, const T& a13¤	, const T& a14¤) {				¤	return Operation<T>::exec (¤		a1¤		, gcl_operation<Operation> (¤			a2¤			, a3¤			, a4¤			, a5¤			, a6¤			, a7¤			, a8¤			, a9¤			, a10¤			, a11¤			, a12¤			, a13¤			, a14¤		)¤	);¤}¤template<template <typename T> class Operation, typename T>¤T gcl_operation (¤	const T& a1¤	, const T& a2¤	, const T& a3¤	, const T& a4¤	, const T& a5¤	, const T& a6¤	, const T& a7¤	, const T& a8¤	, const T& a9¤	, const T& a10¤	, const T& a11¤	, const T& a12¤	, const T& a13¤	, const T& a14¤	, const T& a15¤) {				¤	return Operation<T>::exec (¤		a1¤		, gcl_operation<Operation> (¤			a2¤			, a3¤			, a4¤			, a5¤			, a6¤			, a7¤			, a8¤			, a9¤			, a10¤			, a11¤			, a12¤			, a13¤			, a14¤			, a15¤		)¤	);¤}¤¤//#UC END# *4501954D0280*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/math/unbounded_ops.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/math/unbounded_ops.i.h"))
		    quid       	"4501954D0280"
		    documentation 	"Íàáîð ôóíêöèé è ìàêðîñîâ äëÿ ðàáîòû ñ ìàññèâàìè ïðîèçâîëüíîé äëèííû"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Association "$UNNAMED$6"
		    quid       	"45018E6501A5"
		    roles      	(list role_list
			(object Role "$UNNAMED$7"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45018E65031C"
			    supplier   	"Logical View::Primitives::double"
			    quidu      	"3DBFFD9B0197"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$8"
			    quid       	"45018E65031E"
			    supplier   	"Logical View::shared::GCL::math::statistics::DoubleVector"
			    quidu      	"45018E4801D4"
			    is_aggregate 	TRUE)))
		(object Association "$UNNAMED$9"
		    quid       	"45019ED80399"
		    roles      	(list role_list
			(object Role "$UNNAMED$10"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"45019ED900BB"
			    supplier   	"Logical View::Primitives::long"
			    quidu      	"3DBFFD7002C2"
			    Containment 	"By Value"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$11"
			    quid       	"45019ED900BD"
			    supplier   	"Logical View::shared::GCL::math::statistics::NumbersVec"
			    quidu      	"45019EB7006D"
			    is_aggregate 	TRUE))))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"44FEAD4A0272"))
		    quid       	"45018D9D0213"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	0
		    origin_y   	0
		    items      	(list diagram_item_list
			(object NoteView @73
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45018DA0002E"))
			    location   	(1458, 513)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@73
				location   	(1183, 419)
				fill_color 	13434879
				nlines     	4
				max_width  	515
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	575
			    height     	200)
			(object ClassView "Class" "Logical View::Primitives::double" @74
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(775, 1891)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	TRUE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	658120
				default_color 	FALSE)
			    label      	(object ItemLabel
				Parent_View 	@74
				location   	(692, 1845)
				fill_color 	13434879
				nlines     	1
				max_width  	166
				justify    	0
				label      	"double")
			    icon_style 	"None"
			    line_color 	14803425
			    fill_color 	14803425
			    quidu      	"3DBFFD9B0197"
			    width      	184
			    height     	117
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::math::statistics::DoubleVector" @75
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(306, 1911)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@75
				location   	(165, 1883)
				fill_color 	13434879
				nlines     	1
				max_width  	282
				justify    	0
				label      	"DoubleVector")
			    stereotype 	(object ItemLabel
				Parent_View 	@75
				location   	(165, 1833)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	282
				justify    	0
				label      	"<<Vector>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"45018E4801D4"
			    width      	300
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$6" @76
			    location   	(569, 1898)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45018E6501A5"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$7" @77
				    Parent_View 	@76
				    location   	(-421, 1328)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45018E65031C"
				    client     	@76
				    supplier   	@74
				    vertices   	(list Points
					(569, 1898)
					(682, 1893))
				    line_style 	0)
				(object RoleView "$UNNAMED$8" @78
				    Parent_View 	@76
				    location   	(-421, 1328)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45018E65031E"
				    client     	@76
				    supplier   	@75
				    vertices   	(list Points
					(569, 1898)
					(456, 1902))
				    line_style 	0)))
			(object ClassView "Class" "Logical View::shared::GCL::math::statistics" @79
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(750, 1083)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@79
				location   	(106, 749)
				fill_color 	13434879
				nlines     	1
				max_width  	1288
				justify    	0
				label      	"statistics")
			    stereotype 	(object ItemLabel
				Parent_View 	@79
				location   	(106, 699)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1288
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"45018DFD030D"
			    width      	1306
			    height     	792
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::math::long_rand" @80
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(589, 465)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@80
				location   	(136, 406)
				fill_color 	13434879
				nlines     	1
				max_width  	906
				justify    	0
				label      	"long_rand")
			    stereotype 	(object ItemLabel
				Parent_View 	@80
				location   	(136, 356)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	906
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"45018DA0002E"
			    width      	924
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object AttachView "" @81
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@73
			    supplier   	@80
			    vertices   	(list Points
				(1170, 496)
				(1051, 490))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::math::unbounded_ops" @82
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(273, 189)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@82
				location   	(116, 159)
				fill_color 	13434879
				nlines     	1
				max_width  	314
				justify    	0
				label      	"unbounded_ops")
			    stereotype 	(object ItemLabel
				Parent_View 	@82
				location   	(116, 109)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	314
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4501954D0280"
			    width      	332
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @83
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4501954D0280"))
			    location   	(717, 186)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@83
				location   	(520, 127)
				fill_color 	13434879
				nlines     	2
				max_width  	359
				justify    	1
				label      	
|{need UC:=true}
|{need inline-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	419
			    height     	131)
			(object AttachView "" @84
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@83
			    supplier   	@82
			    vertices   	(list Points
				(507, 186)
				(439, 187))
			    line_style 	0)
			(object ClassView "Class" "Logical View::Primitives::long" @85
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(775, 1674)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	TRUE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	658120
				default_color 	FALSE)
			    label      	(object ItemLabel
				Parent_View 	@85
				location   	(694, 1628)
				fill_color 	13434879
				nlines     	1
				max_width  	162
				justify    	0
				label      	"long")
			    icon_style 	"None"
			    line_color 	14803425
			    fill_color 	14803425
			    quidu      	"3DBFFD7002C2"
			    height     	117
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::math::statistics::NumbersVec" @86
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(318, 1656)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@86
				location   	(184, 1628)
				fill_color 	13434879
				nlines     	1
				max_width  	268
				justify    	0
				label      	"NumbersVec")
			    stereotype 	(object ItemLabel
				Parent_View 	@86
				location   	(184, 1578)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	268
				justify    	0
				label      	"<<Vector>>")
			    icon_style 	"Label"
			    fill_color 	16107765
			    quidu      	"45019EB7006D"
			    width      	286
			    height     	180
			    annotation 	8
			    autoResize 	TRUE)
			(object AssociationViewNew "$UNNAMED$9" @87
			    location   	(572, 1665)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"45019ED80399"
			    roleview_list 	(list RoleViews
				(object RoleView "$UNNAMED$10" @88
				    Parent_View 	@87
				    location   	(-1138, 825)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45019ED900BB"
				    client     	@87
				    supplier   	@85
				    vertices   	(list Points
					(572, 1665)
					(684, 1669))
				    line_style 	0)
				(object RoleView "$UNNAMED$11" @89
				    Parent_View 	@87
				    location   	(-1138, 825)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"45019ED900BD"
				    client     	@87
				    supplier   	@86
				    vertices   	(list Points
					(572, 1665)
					(461, 1660))
				    line_style 	0)))
			(object NoteView @90
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45018DFD030D"))
			    location   	(1623, 1083)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@90
				location   	(1485, 1023)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @91
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@90
			    supplier   	@79
			    vertices   	(list Points
				(1472, 1083)
				(1403, 1083))
			    line_style 	0)
			(object Label @92
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45019EB7006D"))
			    location   	(186, 1705)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	255
				default_color 	FALSE)
			    nlines     	1
			    max_width  	12
			    justify    	1
			    label      	"private")
			(object NoteView @93
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45019EB7006D"))
			    location   	(682, 1643)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@93
				location   	(544, 1583)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{force usage:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @94
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@93
			    supplier   	@86
			    vertices   	(list Points
				(531, 1647)
				(461, 1649))
			    line_style 	0)))))
	(object Class_Category "mt"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/shared/GCL/mt/ContextThreadPriority.h::4501A229004E,w:/shared/GCL/mt/ResourcePool.h::45028FEA035B")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (i.h)"
		    value      	"w:/shared/GCL/mt/ResourcePool.i.h::45028FEA035B")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/shared/GCL/mt/ContextThreadPriority.cpp::4501A229004E"))
	    quid       	"4501A1FD0177"
	    documentation 	"ðàáîòà ñ ìíîãîïîòî÷íîñòüþ"
	    stereotype 	"Unit"
	    visible_categories 	(list visibility_relationship_list
		(object Visibility_Relationship
		    quid       	"450294EE006D"
		    supplier   	"Logical View::external::ace::Task"
		    quidu      	"450293FE0261"))
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "ContextThreadPriority"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need ref count"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need unsorted less"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"local supervisor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"no base class"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"singleton"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501A229004E_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4501A229004E_CUSTOM_INCLUDES*¤#include "ace/Thread_Manager.h"¤¤class ContextThreadPriority;¤typedef Core::Box<ContextThreadPriority> AutoContextThreadPriority;¤//#UC END# *4501A229004E_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4501A229004E*"
			    value      	(value Text 
|//#UC START# *4501A229004E*¤#define AUTO_CONTEXT_THREAD_PRIORITY_ABS(PRIO,ABS)	GCL::ContextThreadPriority _actp(PRIO,ABS);¤#define AUTO_CONTEXT_THREAD_PRIORITY(PRIO)	GCL::ContextThreadPriority _actp(PRIO);¤//#UC END# *4501A229004E*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4501A229004E_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4501A229004E_CUSTOM_INCLUDES*¤//#UC END# *4501A229004E_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4501A229004E*"
			    value      	"//#UC START# *4501A229004E*¤//#UC END# *4501A229004E*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4501A229004E_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4501A229004E_DESTR_BODY*¤	ACE_Thread::setprio (m_self_th, m_seved_prio);¤	//#UC END# *4501A229004E_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4501A229004E_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4501A229004E_CUSTOM_INCLUDES*¤//#UC END# *4501A229004E_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4501A229004E*"
			    value      	"//#UC START# *4501A229004E*¤//#UC END# *4501A229004E*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4501A229004E_DESTR_BODY*"
			    value      	(value Text 
|//#UC START# *4501A229004E_DESTR_BODY*¤	ACE_Thread::setprio (m_self_th, m_seved_prio);¤	//#UC END# *4501A229004E_DESTR_BODY*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need assign op"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Need copy ctor"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/mt/ContextThreadPriority.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/mt/ContextThreadPriority.cpp"))
		    quid       	"4501A229004E"
		    documentation 	"Êëàññ ïîçâîëÿþùèé èçìåíÿòü ïðèîðèòåò òåêóùåãî ïîòîêà è àâòîìàòè÷åêè (â äåñòðóêòîðå) âîçâðàùàòü åãî ñòàðîå çíà÷åíèå"
		    stereotype 	"SimpleClass"
		    operations 	(list Operations
			(object Operation "ContextThreadPriority"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4501A2400232_BASE_INIT*"
				    value      	"//#UC START# *4501A2400232_BASE_INIT*¤//#UC END# *4501A2400232_BASE_INIT*")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4501A2400232_BODY*"
				    value      	(value Text 
|//#UC START# *4501A2400232_BODY*¤	ACE_Thread::self(m_self_th);¤	ACE_Thread::getprio (m_self_th, m_seved_prio);¤	ACE_Thread::setprio (m_self_th, absolute ? priority : ACE_DEFAULT_THREAD_PRIORITY + priority);¤	//#UC END# *4501A2400232_BODY*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"i.h:*4501A2400232_BASE_INIT*"
				    value      	"//#UC START# *4501A2400232_BASE_INIT*¤//#UC END# *4501A2400232_BASE_INIT*")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"i.h:*4501A2400232_BODY*"
				    value      	(value Text 
|//#UC START# *4501A2400232_BODY*¤	ACE_Thread::self(m_self_th);¤	ACE_Thread::getprio (m_self_th, m_seved_prio);¤	ACE_Thread::setprio (m_self_th, absolute ? priority : ACE_DEFAULT_THREAD_PRIORITY + priority);¤	//#UC END# *4501A2400232_BODY*
				    )))
			    quid       	"4501A2400232"
			    documentation 	"óñòàíàâëèâàåò íîâûé ïðèîðèòåò ïîòîêà (àáñîëþòíûé èëè îòíîñèòåëüíûé)"
			    stereotype 	"ctor"
			    parameters 	(list Parameters
				(object Parameter "priority"
				    quid       	"4501A26200CB"
				    type       	"integer"
				    quidu      	"450A61050251")
				(object Parameter "absolute"
				    quid       	"4501A2620109"
				    type       	"boolean"
				    quidu      	"3DBFFE100240"
				    initv      	"false"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0))
		    class_attributes 	(list class_attribute_list
			(object ClassAttribute "seved_prio"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4501A27601B5"
			    type       	"integer"
			    quidu      	"450A61050251"
			    Containment 	"By Value"))
		    language   	"MDA Generator")
		(object Class "ResourcePool"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*45028FEA035B_USER_INCLUDES*"
			    value      	(value Text 
|//#UC START# *45028FEA035B_USER_INCLUDES*¤#include "ace/Atomic_Op.h"¤#include <map>¤//#UC END# *45028FEA035B_USER_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*45028FEA035B_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *45028FEA035B_USER_DEFINITION*¤namespace ResourcePoolPolicy {¤	enum Select {¤		sp_inert,¤		sp_routine¤	};¤¤	enum Acquire {¤		ap_occupy,¤		//ap_addition, // need to correct RWMutex release¤		ap_waiting¤	};¤} // namespace ResourcePoolPolicy¤¤template <class _Resource, class _Selector, class _Allocator>¤class ResourcePool {¤public:¤	ResourcePool ( ¤		_Allocator& allocator¤		, ResourcePoolPolicy::Acquire acquire_policy = ResourcePoolPolicy::ap_occupy¤		, ResourcePoolPolicy::Select select_policy = ResourcePoolPolicy::sp_inert¤	);¤¤	~ResourcePool ();¤¤	// áëîêèðóåò è âîçâðàùàåò ðåñóðñ¤	inline _Resource acquire (_Selector selector);¤¤	// îñâîáîæäàåò ðåñóðñ (ñíèìàåò ëîê)¤	inline void release (_Resource resource);¤¤	// ïîëó÷àåò ÷åðåç àëëîêàòîð íîâûé ðåñóðñ è äîáàâëÿåò åãî â ïóë ïðèñâàèâàÿ¤	// óêàçàííûé ñåëåêòîð¤	void add_resources (_Selector selector, unsigned long count = 1);¤¤	// âûçûâàåò äëÿ êàæäîãî ðåñóðñà äåñòðóêòîð â àëëîêàòîðå è î÷èùàåò ïóë¤	void clear ();¤	inline unsigned length () const;¤protected:¤	struct ResourceInfo {¤		//ñåëåêòîð¤		_Selector selector;¤¤		//èíäåêñ àêòèâíîñè¤		unsigned long activity;¤¤		// ìþòåêñ¤		Core::Mutex lock;¤¤		// äëèííà î÷åðåäè çà ðåñóðñîì¤		ACE_Atomic_Op <ACE_SYNCH_MUTEX, long> query_length;¤¤		/* ðåñóðñ */¤		_Resource resource;¤¤		ResourceInfo () :¤			activity (0)¤			, query_length (0)¤			, resource (0) {¤		}¤¤		ResourceInfo (const ResourceInfo  &resource_info) :¤			selector (resource_info.selector)¤			, activity (resource_info.activity)¤			, query_length (resource_info.query_length)¤			, resource (resource_info.resource) {¤		}¤	};¤¤	typedef std::map <_Resource, ResourceInfo> ResourceInfoMap;¤¤	ResourceInfoMap m_resource_info_map;¤¤	_Allocator& m_allocator;¤¤	ResourcePoolPolicy::Acquire m_acquire_policy;¤	ResourcePoolPolicy::Select m_select_policy;¤protected:¤	Core::RWMutex m_update_mutex;¤¤	// âûáèðàåò èç ñïèñêà ñâîáîäíûé ðåñóðñ ñ óêàçàííûì ñåëåêòîðîì è¤	// óâåëè÷èâàåò åãî èíäåêñ àêòèâíîñòè,  èëè âîçâðàùàåò óêàçàòåëü íà êîíåö¤	inline typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator select_available (_Selector selector); // GARANT_TYPENAME¤¤	// èñ÷åò â öèêëå âñå ñâîáîäíûå (íå çàëî÷åííûå) áàçû, è âûáèðàåò èç íèõ¤	// áàçó ñ íàèìåíüøèì èíäåêñîì àêòèâíîñòè¤	typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator acquire_available (_Selector selector); // GARANT_TYPENAME¤};¤//#UC END# *45028FEA035B_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*45028FEA035B_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *45028FEA035B_CUSTOM_INCLUDES*¤//#UC END# *45028FEA035B_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*45028FEA035B*"
			    value      	(value Text 
|//#UC START# *45028FEA035B*¤template <class _Resource, class _Selector, class _Allocator>¤ResourcePool <_Resource,_Selector,_Allocator>::ResourcePool (¤	_Allocator& allocator¤	, ResourcePoolPolicy::Acquire acquire_policy¤	, ResourcePoolPolicy::Select select_policy¤) : m_allocator (allocator), m_acquire_policy (acquire_policy), m_select_policy (select_policy) {¤	if (m_update_mutex.acquire_write () == -1) {¤		throw;¤	}¤}¤¤template <class _Resource, class _Selector, class _Allocator>¤ResourcePool <_Resource,_Selector,_Allocator>::~ResourcePool () {¤	try {¤		this->clear ();¤		m_update_mutex.release ();¤	} catch (...) {¤	}¤}¤¤template <class _Resource, class _Selector, class _Allocator>¤inline ¤unsigned ResourcePool <_Resource,_Selector,_Allocator>::length () const {¤	return m_resource_info_map.size ();¤}¤¤template <class _Resource, class _Selector, class _Allocator>¤inline ¤_Resource ResourcePool <_Resource,_Selector,_Allocator>::acquire (_Selector selector) {¤	//LOG_D (("ResourcePool::acquire->acquire_read"));¤	if (m_update_mutex.acquire_read () == -1) {¤		return 0;¤	}¤¤	// find available resource¤	typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator it = select_available (selector); // GARANT_TYPENAME¤	if (it == m_resource_info_map.end ()) {¤		it = acquire_available (selector);¤	}¤	return (*it).first;¤}¤¤template <class _Resource, class _Selector, class _Allocator>¤inline ¤void ResourcePool <_Resource,_Selector,_Allocator>::release(_Resource resource) {¤	typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator it = m_resource_info_map.find (resource); // GARANT_TYPENAME¤	assert (it != m_resource_info_map.end ());¤	¤	(*it).second.lock.release ();¤	m_update_mutex.release ();¤}¤¤template <class _Resource, class _Selector, class _Allocator>¤void ResourcePool <_Resource,_Selector,_Allocator>::add_resources (_Selector selector, unsigned long count) {¤	for (unsigned long i = 0; i < count; ++i) {¤		ResourceInfo info;¤		info.selector = selector;¤		info.resource = m_allocator.new_resource ();¤¤		if (!info.resource) {¤			ACE_DEBUG ((LM_ERROR, "Failed to get new resource\n"));			¤			return;¤		}¤¤		typedef typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::value_type ThisInfoMapvalue_type;¤		m_resource_info_map.insert (ThisInfoMapvalue_type (info.resource, info)); // GARANT_TYPENAME¤	}¤¤	m_update_mutex.release ();¤}¤¤template <class _Resource, class _Selector, class _Allocator>¤void ResourcePool <_Resource,_Selector,_Allocator>::clear () {¤	if (m_resource_info_map.empty ()) {¤		return;¤	}¤¤	if (m_update_mutex.acquire_write () == -1) {¤		throw;¤	}¤¤	for (typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator it = m_resource_info_map.begin (); it != m_resource_info_map.end (); ++it) { // GARANT_TYPENAME¤		m_allocator.free_resource ((*it).second.resource);¤	}¤¤	m_resource_info_map.clear ();¤}¤¤template <class _Resource, class _Selector, class _Allocator>¤inline ¤typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator // GARANT_TYPENAME¤ResourcePool <_Resource,_Selector,_Allocator>::select_available (_Selector selector) {¤	for (typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator it = m_resource_info_map.begin (); it != m_resource_info_map.end (); ++it) { // GARANT_TYPENAME¤		if ((*it).second.selector == selector ) {¤			if ((*it).second.lock.tryacquire () != -1) {¤				++(*it).second.activity;¤				return it;¤			}¤		}¤	}¤¤	return m_resource_info_map.end ();¤}¤¤template <class _Resource, class _Selector, class _Allocator>¤typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator // GARANT_TYPENAME¤ResourcePool <_Resource,_Selector,_Allocator>::acquire_available (_Selector selector) {	¤	typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator it;¤	typename ResourcePool <_Resource,_Selector,_Allocator>::ResourceInfoMap::iterator minit = m_resource_info_map.end ();¤¤	while (!m_resource_info_map.size ()) {¤		ACE_OS::sleep (ACE_Time_Value (0, 2500)); // 0.0025 second¤		continue;  //wait for adding base¤	}¤¤	while (true) {¤		for (it = m_resource_info_map.begin (); it != m_resource_info_map.end (); ++it) {¤			if ((*it).second.lock.tryacquire () != -1) {¤				if (minit != m_resource_info_map.end ()) { // has previose min value¤					if ((*minit).second.activity > (*it).second.activity) { // we find less active!¤						(*minit).second.lock.release ();¤						minit = it;¤					} else {¤						(*it).second.lock.release ();¤					}¤				} else { //first available¤					minit = it;			¤					if (m_select_policy != ResourcePoolPolicy::sp_inert) break;¤				}¤			} ¤		}¤¤		if (minit != m_resource_info_map.end ()) { // one cycle processed and find available - exit¤			if ((*minit).second.selector != selector) {¤				(*minit).second.selector = selector;¤				(*minit).second.activity = 1;¤			}¤			return minit;¤		} ¤¤		if (m_acquire_policy == ResourcePoolPolicy::ap_waiting) {¤			ACE_OS::sleep (ACE_Time_Value (0, 2500)); // 0.0025 second¤			continue;¤		}¤¤		//if (m_acquire_policy == ap_addition) {¤		//	add (selector); // need to correct RWMutex release¤		//	continue;¤		//}¤¤		for (it = m_resource_info_map.begin (); it != m_resource_info_map.end (); ++it) {¤			if (minit != m_resource_info_map.end ()) { // has previose min value¤				if (m_select_policy != ResourcePoolPolicy::sp_inert) {¤					if ((*minit).second.query_length.value () > (*it).second.query_length.value ()) {¤						minit = it;¤					}¤				} else {¤					if (¤						((*minit).second.query_length.value () > (*it).second.query_length.value ())¤						|| (¤							((*minit).second.query_length.value () == (*it).second.query_length.value ())¤							&& ((*minit).second.activity > (*it).second.activity)¤						)¤					) { ¤						// we find less active!¤						minit = it;¤					} ¤				}¤			} else {¤				//first locked¤				minit = it;					¤			}¤		}		¤		¤		++(*minit).second.query_length;¤		(*minit).second.lock.acquire ();¤		--(*minit).second.query_length;¤		¤		if ((*minit).second.selector != selector) {¤			(*minit).second.selector = selector;¤			(*minit).second.activity = 1;¤		}¤¤		return minit; // GARANT_ISOSTL¤	}¤}¤¤//#UC END# *45028FEA035B*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/mt/ResourcePool.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/mt/ResourcePool.i.h"))
		    quid       	"45028FEA035B"
		    documentation 	"óïðàâëÿåò êîíêóðåíòíûì äîñòóïîì ê îãðàíè÷åííîìó íàáîðó ðåñóðñîâ ïðîèçâîëüíîãî òèïà"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Association "$UNNAMED$12"
		    quid       	"4501A2F601A5"
		    roles      	(list role_list
			(object Role "self_th"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4501A2F6034B"
			    label      	"self_th"
			    supplier   	"Logical View::external::ace::Task::ace types::ACE_hthread_t"
			    quidu      	"4501A2ED0119"
			    Containment 	"By Value"
			    exportControl 	"Private"
			    is_navigable 	TRUE)
			(object Role "$UNNAMED$13"
			    quid       	"4501A2F6034D"
			    supplier   	"Logical View::shared::GCL::mt::ContextThreadPriority"
			    quidu      	"4501A229004E"
			    is_aggregate 	TRUE))))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"44FEAD4A0272"))
		    quid       	"4501A22602FD"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	0
		    origin_y   	0
		    items      	(list diagram_item_list
			(object NoteView @95
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4501A229004E"))
			    location   	(1866, 180)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@95
				location   	(1625, 105)
				fill_color 	13434879
				nlines     	3
				max_width  	446
				justify    	1
				label      	
|{need UC:=true}
|{no base class:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	506
			    height     	162)
			(object ClassView "Class" "Logical View::external::ace::Task::ace types::ACE_hthread_t" @96
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1707, 540)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	658120
				default_color 	FALSE)
			    label      	(object ItemLabel
				Parent_View 	@96
				location   	(1554, 513)
				fill_color 	13434879
				nlines     	1
				max_width  	306
				justify    	0
				label      	"ACE_hthread_t")
			    stereotype 	(object ItemLabel
				Parent_View 	@96
				location   	(1554, 463)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	306
				justify    	0
				label      	"<<Typedef>>")
			    icon_style 	"Label"
			    line_color 	14803425
			    fill_color 	14803425
			    quidu      	"4501A2ED0119"
			    width      	324
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::mt::ContextThreadPriority" @97
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(744, 225)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@97
				location   	(33, 141)
				fill_color 	13434879
				nlines     	1
				max_width  	1422
				justify    	0
				label      	"ContextThreadPriority")
			    stereotype 	(object ItemLabel
				Parent_View 	@97
				location   	(33, 91)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1422
				justify    	0
				label      	"<<SimpleClass>>")
			    icon_style 	"Label"
			    fill_color 	12842465
			    quidu      	"4501A229004E"
			    width      	1440
			    height     	292
			    annotation 	8
			    autoResize 	TRUE)
			(object AttachView "" @98
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@95
			    supplier   	@97
			    vertices   	(list Points
				(1612, 189)
				(1464, 194))
			    line_style 	0)
			(object AssociationViewNew "$UNNAMED$12" @99
			    location   	(1368, 428)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4501A2F601A5"
			    roleview_list 	(list RoleViews
				(object RoleView "self_th" @100
				    Parent_View 	@99
				    location   	(624, 203)
				    font       	(object Font
					size       	10
					face       	"Arial"
					charSet    	204
					bold       	FALSE
					italics    	FALSE
					underline  	FALSE
					strike     	FALSE
					color      	0
					default_color 	TRUE)
				    label      	(object SegLabel @101
					Parent_View 	@100
					location   	(1490, 421)
					font       	(object Font
					    size       	10
					    face       	"Arial"
					    charSet    	204
					    bold       	FALSE
					    italics    	FALSE
					    underline  	FALSE
					    strike     	FALSE
					    color      	0
					    default_color 	TRUE)
					anchor     	1
					anchor_loc 	1
					nlines     	1
					max_width  	144
					justify    	0
					label      	"-self_th"
					pctDist    	0.621767
					height     	46
					orientation 	0)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"4501A2F6034B"
				    client     	@99
				    supplier   	@96
				    vertices   	(list Points
					(1368, 428)
					(1544, 486))
				    line_style 	0)
				(object RoleView "$UNNAMED$13" @102
				    Parent_View 	@99
				    location   	(624, 203)
				    stereotype 	TRUE
				    line_color 	3342489
				    quidu      	"4501A2F6034D"
				    client     	@99
				    supplier   	@97
				    vertices   	(list Points
					(1368, 428)
					(1197, 371))
				    line_style 	0)))
			(object ClassView "Class" "Logical View::shared::GCL::mt::ResourcePool" @103
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(237, 615)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@103
				location   	(87, 585)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"ResourcePool")
			    stereotype 	(object ItemLabel
				Parent_View 	@103
				location   	(87, 535)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"45028FEA035B"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @104
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45028FEA035B"))
			    location   	(690, 615)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@104
				location   	(477, 556)
				fill_color 	13434879
				nlines     	2
				max_width  	390
				justify    	1
				label      	
|{need UC:=true}
|{need inline-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	450
			    height     	131)
			(object AttachView "" @105
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@104
			    supplier   	@103
			    vertices   	(list Points
				(464, 615)
				(396, 615))
			    line_style 	0)))))
	(object Class_Category "network"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/shared/GCL/network/common_network_operations.cpp::45753171035B,w:/shared/GCL/network/smtp_service.cpp::4503D994032C")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/shared/GCL/network/common_network_operations.h::45753171035B,w:/shared/GCL/network/smtp_service.h::4503D994032C"))
	    quid       	"4503D56703A9"
	    documentation 	"ðàçëè÷íûå ñåòåâûå ôóíêöèè (âêëþ÷àÿ äëÿ ðàáîòû ñ CORBA)"
	    stereotype 	"Unit"
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "smtp_service"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503D994032C_USER_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4503D994032C_USER_INCLUDES*¤#include <string>¤#include "ace/INET_Addr.h"¤#include "ace/SOCK_Connector.h"¤#include "ace/SOCK_Stream.h"¤¤//#UC END# *4503D994032C_USER_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503D994032C_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4503D994032C_USER_DEFINITION*¤// Exceptions¤class SMTPServerNotFound : public Core::Exception {¤	virtual const char* uid () const /*throw ()*/ {¤		return "GCL::SMTPServerNotFound";¤	}¤};¤¤class BadSMTPReply : public Core::Exception {¤	virtual const char* uid () const /*throw ()*/ {¤		return "GCL::BadSMTPReply";¤	}¤};¤¤class SMTPMessage {¤public:¤	// Encoding to quoted-printable according RFC2047¤	static std::string SMTPMessage::recode (const std::string& to_recode);¤¤public:¤	SMTPMessage (const std::string& from, const std::string& to, const std::string& data = "");¤	¤	~SMTPMessage () {¤	}¤¤	const std::string& from () const {¤		return m_from;¤	}¤	¤	void from (const std::string& from) {¤		m_from = from;¤	}¤	¤	const std::string& to () const {¤		return m_to;¤	}¤	¤	void to (const std::string& to) {¤		m_to = to;¤	}¤	¤	const std::string& data () const {¤		return m_data;¤	}¤	¤	void data (const std::string& data) {¤		m_data = data;¤	}¤	¤	void add_to_data (const std::string& data_chunk, bool to_end = true);¤¤	void data_from (const std::string& from) {¤		m_data_from = from;¤	}¤	¤	const std::string& data_from () const {¤		return m_data_from;¤	}¤	¤	void data_to (const std::string& to) {¤		m_data_to = to;¤	}¤	¤	const std::string& data_to () const {¤		return m_data_to;¤	}¤	¤	void subject (const std::string& subject) {¤		m_subject = subject;¤	}¤	¤	const std::string& subject () const {¤		return m_subject;¤	}¤	¤	void encoding (const std::string& encoding) {¤		m_encoding = encoding;¤	}¤	¤	const std::string& encoding () const {¤		return m_encoding;¤	}¤¤private:¤	std::string m_from;¤	std::string m_to;¤	std::string m_data;¤	std::string m_data_from;¤	std::string m_data_to;¤	std::string m_subject;¤	std::string m_encoding;¤};¤¤class SMTPServer {¤public:¤	SMTPServer (¤		const std::string& server¤		, unsigned short port = 25¤		, unsigned short timeout = 5¤	);¤	¤	~SMTPServer () {}¤¤	void connect () /*throw (SMTPServerNotFound)*/;¤	¤	void disconnect ();¤¤	unsigned short timeout () {¤		return static_cast<unsigned short>(m_timeout.sec ());¤	}¤	¤	void timeout (unsigned short timeout) {¤		m_timeout = timeout;¤	}¤¤	void send_message (const SMTPMessage& message) /*throw (SMTPServerNotFound, BadSMTPReply)*/;¤¤private:¤	void send_command (const std::string& command, bool need_recv) const;¤¤	void recv () const;¤¤private:¤	std::string m_server;¤	unsigned short m_port;¤	ACE_SOCK_Stream m_mailStream;¤	ACE_Time_Value m_timeout;¤	bool m_is_connected;¤};¤//#UC END# *4503D994032C_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4503D994032C_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4503D994032C_CUSTOM_INCLUDES*¤#include <sstream>¤#include "shared/GCL/str/str_op.h"¤//#UC END# *4503D994032C_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4503D994032C*"
			    value      	(value Text 
|//#UC START# *4503D994032C*¤SMTPServer::SMTPServer (¤	const std::string& server, unsigned short port, unsigned short timeout¤) :	m_server(server), m_port(port),	m_timeout (timeout), m_is_connected (false)¤{¤}¤¤void SMTPServer::connect () /*throw (SMTPServerNotFound)*/ {¤	if (m_is_connected) {¤		return;¤	}¤	ACE_SOCK_Connector connector;¤	ACE_INET_Addr smtp_addr;¤	if (smtp_addr.set (m_port, m_server.c_str ()) == -1) {¤		throw SMTPServerNotFound ();¤	}¤	// Êîííåêòèìñÿ ê ñåðâåðó¤	if (connector.connect (m_mailStream, smtp_addr, &m_timeout) == -1) {¤		LOG_E (("Can't connect to %s:%d", m_server.c_str (), m_port));¤		throw SMTPServerNotFound ();¤		return;¤	}¤¤	m_is_connected = true;¤}¤¤void SMTPServer::disconnect () {¤	if (!m_is_connected) {¤		return;¤	}¤	m_mailStream.close ();¤¤	m_is_connected = false;¤}¤¤// Example:¤// S: From: John Q. Public <JQP@MIT-AI.ARPA>¤// S: Subject:  The Next Meeting of the Board¤// S: To: Jones@BBN-Vax.ARPA¤// S: Content-Type: text/plain;charset=\"windows-1251\";¤// One encoding used in header and in body.¤// Header encoding is compy with RFC 2047.¤¤void SMTPServer::send_message (const SMTPMessage& message)  /*throw (SMTPServerNotFound, BadSMTPReply)*/ {¤	const static std::string helo("HELO ");¤	const static std::string from("MAIL FROM:");¤	const static std::string to("RCPT TO:");¤	const static std::string data("DATA");¤	const static std::string data_from("From: ");¤	const static std::string subject("Subject:  ");¤	const static std::string data_to("To:  ");¤	const static std::string data_mime("MIME-Version: 1.0");¤	const static std::string data_content("Content-Type: text/plain; charset=");¤	const static std::string quit("QUIT");¤	const static std::string endline("\r\n");¤¤	this->connect ();	¤	send_command (helo + m_server + endline, true);¤	send_command (from + "<" + message.from () + ">" + endline, true);¤	GCL::StrVector mail_to_vec = GCL::split_string_by (message.to ().c_str (), ';');¤	for (¤			GCL::StrVector::iterator it = mail_to_vec.begin ()¤			; it != mail_to_vec.end ()¤			; ++it¤	) {¤		send_command (to + "<" + *it + ">" + endline, true);¤	}¤	send_command (data + endline, false);¤	std::string header_encoding ("=?");¤	if (message.encoding ().size ()) {¤		header_encoding += message.encoding () + "?Q?";¤	} else {¤		header_encoding += "US-ASCII?Q?";¤	}¤	const static std::string header_encoding_end ("?=");¤	if (message.data_from ().size ()) {		¤		send_command (¤			data_from¤			+ header_encoding¤			+ SMTPMessage::recode (message.data_from ()) ¤			+ header_encoding_end¤			+ "<"¤			+ message.from ()¤			+ ">"¤			+ endline¤			, false¤		);¤	} else {¤		send_command (data_from + message.from () + endline, false);¤	}¤	if (message.data_to ().size ()) {	¤		GCL::StrVector mail_data_to_vec = GCL::split_string_by (message.data_to ().c_str (), ';');¤		for (¤				GCL::StrVector::iterator it = mail_data_to_vec.begin ()¤				; it != mail_data_to_vec.end ()¤				; ++it¤		) {			¤			send_command (¤				data_to¤				+ header_encoding¤				+ SMTPMessage::recode (*it)¤				+ header_encoding_end¤				+ "<"¤				+ *it¤				+ ">"¤				+ endline¤				, false¤			);¤		}		¤	} else {¤		GCL::StrVector mail_data_to_vec = GCL::split_string_by (message.data_to ().c_str (), ';');¤		for (¤				GCL::StrVector::iterator it = mail_data_to_vec.begin ()¤				; it != mail_data_to_vec.end ()¤				; ++it¤		) {¤			send_command (data_to + *it + endline, false);¤		}¤	}¤	if (message.subject ().size ()) {¤		send_command (subject + header_encoding + SMTPMessage::recode (message.subject ()) + header_encoding_end + endline, false);¤	}¤	send_command (data_mime + endline, false);¤	if (message.encoding ().size ()) {¤		send_command (¤			data_content + "\"" + message.encoding () + "\"" + endline, false¤		);¤	}¤	send_command (endline, false);¤¤	m_mailStream.send (message.data ().c_str (), message.data ().size (), &m_timeout);¤¤	send_command (endline + "." + endline, true);¤	send_command (quit + endline, true);¤¤	this->disconnect ();¤}¤¤void SMTPServer::send_command (const std::string& command, bool need_recv) const {¤//	LOG_D (("Send:%s", command.c_str ()));¤	m_mailStream.send (command.c_str (), command.size (), &m_timeout);¤	if (need_recv) {¤		recv ();¤	}¤}¤¤void SMTPServer::recv () const {¤	const static int recv_bufsize = 1024;¤¤	static char recv_buf [recv_bufsize];¤	while (1) {¤		memset (&recv_buf, 0, sizeof recv_buf);¤		ssize_t recv_bytes = m_mailStream.recv (&recv_buf, sizeof (recv_buf) - 1, &m_timeout);¤//		LOG_D (("Recv:%s", recv_buf));¤		if (recv_bytes == -1) {¤			break;¤		}¤		if (recv_bytes == static_cast<ssize_t> (::strlen (recv_buf))) {¤			if (recv_buf[0] == '5') {¤				throw BadSMTPReply();¤			}¤			break;¤		}¤	}¤}¤¤const static char* default_encoding = "windows-1251";¤¤SMTPMessage::SMTPMessage (¤	const std::string& from¤	, const std::string& to¤	, const std::string& data¤) :	m_from(from), m_to(to), m_data(data)¤	, m_data_from(""), m_data_to(""), m_subject("")¤	, m_encoding(default_encoding)¤{¤}¤¤void SMTPMessage::add_to_data (const std::string& data_chunk, bool to_end) {¤	if (to_end) {¤		m_data += data_chunk;¤	} else {¤		m_data = data_chunk + m_data;¤	}¤}¤¤std::string SMTPMessage::recode (const std::string& to_recode) {¤	std::ostringstream ret;¤	for (size_t i = 0; i < to_recode.length (); i++) {¤		unsigned int character = static_cast<unsigned char> (to_recode[i]);¤		ret << "=" << std::hex << character;¤	}¤	return ret.str ();¤}¤¤/*¤int main (int argc, char *argv[]) {¤	ACE::init ();¤¤	SMTPServer s ("smtp.garant.ru");¤	SMTPMessage m ("dolgop@garant.ru", "evg_dolgop@mail.ru");¤	m.data_from ("Evgeny <dolgop@mccinet.ru>");¤	m.data_to ("Dolgopyat <evg_dolgop@mail.ru>");¤	m.subject ("Test - ïèñüìî");¤	m.data ("FirstString");¤	m.add_to_data ("\n");¤	m.add_to_data ("Âòîðàÿ ñòðîêà");¤	s.send_message (m);¤¤	ACE::fini ();¤¤	return 0;¤}¤*/¤//#UC END# *4503D994032C*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/network/smtp_service.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/network/smtp_service.h"))
		    quid       	"4503D994032C"
		    documentation 	"ïðåäîñòàâëÿåò ïðîñòîé èíòåðôåéñ äëÿ îòïðàâêè ïî÷òû ñ ïîìîùüþ SMTP ïðîòîêîëà"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "common_network_operations"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*45753171035B_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *45753171035B_CUSTOM_INCLUDES*¤#include "ace/INET_Addr.h"¤//#UC END# *45753171035B_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*45753171035B*"
			    value      	"//#UC START# *45753171035B*¤//#UC END# *45753171035B*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*45753171035B_USER_INCLUDES*"
			    value      	"//#UC START# *45753171035B_USER_INCLUDES*¤//#UC END# *45753171035B_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*45753171035B_USER_DEFINITION*"
			    value      	"//#UC START# *45753171035B_USER_DEFINITION*¤//#UC END# *45753171035B_USER_DEFINITION*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/network/common_network_operations.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/network/common_network_operations.h"))
		    quid       	"45753171035B"
		    documentation 	"Îáùèå ôóíêöèè äëÿ ðàáîòû ñ ñåòüþ"
		    stereotype 	"UtilityPack"
		    operations 	(list Operations
			(object Operation "is_ip_adresses_configured"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*457531C60280*"
				    value      	(value Text 
|//#UC START# *457531C60280*¤	Core::Aptr<ACE_INET_Addr, Core::ArrayDeleteDestructor<ACE_INET_Addr> > addrs (0);¤	size_t count = 0;¤	if (ACE::get_ip_interfaces (count, addrs.out ()) < 0) {¤		LOG_E (("%s: auto_test failed, bad list of ip interfaces", GDS_CURRENT_FUNCTION));¤		throw CantGetIpList ();¤	} else {¤		for (size_t i = 0; i < count; ++i) {¤			if (!addrs.ptr ()[i].is_loopback ()) {¤				return true;¤			}¤		}¤	}¤¤	return false;¤	//#UC END# *457531C60280*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"GetRaises"
				    value      	"457536350128"))
			    quid       	"457531C60280"
			    documentation 	"Âîçâðàùàåò true, åñëè íà ìàøèíå íàñòðîåíû ip-àäðåñà, îòëè÷íûå îò loopback èíòåðôåéñà"
			    result     	"boolean"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFE100240"))
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "CantGetIpList"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"OS_GUID"
				    value      	"5BD9D9D8-387F-4853-88C0-7A4CB1D5AFCD"))
			    quid       	"457536350128"
			    documentation 	"Íå ñìîãëè ïîëó÷èòü ñïèñîê àéïèøíèêîâ"
			    stereotype 	"Exception"))))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"44FEAD4A0272"))
		    quid       	"4503D57700AB"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	0
		    origin_y   	0
		    items      	(list diagram_item_list
			(object ClassView "Class" "Logical View::shared::GCL::network::smtp_service" @106
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(396, 213)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@106
				location   	(246, 183)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"smtp_service")
			    stereotype 	(object ItemLabel
				Parent_View 	@106
				location   	(246, 133)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4503D994032C"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @107
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4503D994032C"))
			    location   	(879, 213)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@107
				location   	(688, 154)
				fill_color 	13434879
				nlines     	2
				max_width  	346
				justify    	1
				label      	
|{need UC:=true}
|{need impl-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	406
			    height     	131)
			(object AttachView "" @108
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@107
			    supplier   	@106
			    vertices   	(list Points
				(675, 213)
				(555, 213))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::network::common_network_operations" @109
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(597, 576)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@109
				location   	(230, 517)
				fill_color 	13434879
				nlines     	1
				max_width  	734
				justify    	0
				label      	"common_network_operations")
			    stereotype 	(object ItemLabel
				Parent_View 	@109
				location   	(230, 467)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	734
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"45753171035B"
			    width      	752
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @110
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"45753171035B"))
			    location   	(1473, 570)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@110
				location   	(1335, 510)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	
|{need UC:=true}
|{need impl-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @111
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@110
			    supplier   	@109
			    vertices   	(list Points
				(1322, 570)
				(973, 573))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::network::common_network_operations::CantGetIpList" @112
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(516, 1002)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@112
				location   	(254, 949)
				fill_color 	13434879
				nlines     	1
				max_width  	524
				justify    	0
				label      	"CantGetIpList")
			    stereotype 	(object ItemLabel
				Parent_View 	@112
				location   	(254, 899)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	524
				justify    	0
				label      	"<<Exception>>")
			    icon_style 	"Label"
			    fill_color 	9869055
			    quidu      	"457536350128"
			    width      	542
			    height     	230
			    annotation 	8
			    autoResize 	TRUE)))))
	(object Class_Category "os"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/shared/GCL/os/DllLoader.h::4503DE990138,w:/shared/GCL/os/FileOp.h::4503DEC603C8,w:/shared/GCL/os/dir_op.h::4503DD86037A,w:/shared/GCL/os/disk_op.h::4503DE0B02EE")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (i.h)"
		    value      	"")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/shared/GCL/os/FileOp.cpp::4503DEC603C8,w:/shared/GCL/os/dir_op.cpp::4503DD86037A,w:/shared/GCL/os/disk_op.cpp::4503DE0B02EE"))
	    quid       	"4503DD5F01B5"
	    documentation 	"ôóíêöèè ÎÑ èëè ìåòîäû äîñòóïà ê íèì"
	    stereotype 	"Unit"
	    visible_categories 	(list visibility_relationship_list
		(object Visibility_Relationship
		    quid       	"450420D70251"
		    supplier   	"Logical View::shared::GCL::data"
		    quidu      	"44FEB6B3010B")
		(object Visibility_Relationship
		    quid       	"450422ED00DA"
		    supplier   	"Logical View::shared::GCL::str"
		    quidu      	"4503DF990167"))
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "dir_op"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DD86037A_USER_INCLUDES*"
			    value      	"//#UC START# *4503DD86037A_USER_INCLUDES*¤//#UC END# *4503DD86037A_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DD86037A_USER_DEFINITION*"
			    value      	"//#UC START# *4503DD86037A_USER_DEFINITION*¤//#UC END# *4503DD86037A_USER_DEFINITION*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4503DD86037A_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4503DD86037A_CUSTOM_INCLUDES*¤//#UC END# *4503DD86037A_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4503DD86037A*"
			    value      	"//#UC START# *4503DD86037A*¤//#UC END# *4503DD86037A*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/os/dir_op.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/os/dir_op.cpp"))
		    quid       	"4503DD86037A"
		    documentation 	"ðàñøèðåííûå îïåðàöèè íàä êàòàëîãàìè (ñîçäàíèå äåðåâà, ...)"
		    stereotype 	"UtilityPack"
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"450420F40167"
			    stereotype 	"uses"
			    supplier   	"Logical View::shared::GCL::data::std_defs"
			    quidu      	"44FEBDF3039B")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4504229D00FA"
			    stereotype 	"uses"
			    supplier   	"Logical View::shared::GCL::str::str_op"
			    quidu      	"4503E01500CB"))
		    operations 	(list Operations
			(object Operation "create_tree_dirs"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"i.h:*4503DD9C02EE*"
				    value      	(value Text 
|//#UC START# *4503DD9C02EE*¤	static const char* path_breaks = "\\/";¤¤	GCL::StrVector folders;¤	folders = GCL::split_string_by_chars(full_path, path_breaks, false );¤	// Óäàëÿåì èìÿ ôàéëà - òîëüêî åñëè ïåðåäàâàëè ïîëíûé ïóòü, âêëþ÷àÿ èìÿ ôàéëà¤	if (!folders.empty () && is_path_with_filename) folders.pop_back ();¤	// Òåïåðü ñîçäàåì êàòàëîãè¤	std::string path = "";¤	for (GCL::StrVector::iterator it = folders.begin (); it != folders.end (); ++it) {¤		path += (*it);¤		path += "/";¤		if (ACE_OS::mkdir (path.c_str()) == -1) {¤			if (errno == ENOENT) {¤				return false;¤			}¤		}¤	}¤	return true;¤	//#UC END# *4503DD9C02EE*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4503DD9C02EE*"
				    value      	(value Text 
|//#UC START# *4503DD9C02EE*¤	static const char* path_breaks = "\\/";¤¤	GCL::StrVector folders;¤	folders = GCL::split_string_by_chars(full_path, path_breaks, false );¤	// Óäàëÿåì èìÿ ôàéëà - òîëüêî åñëè ïåðåäàâàëè ïîëíûé ïóòü, âêëþ÷àÿ èìÿ ôàéëà¤	if (!folders.empty () && is_path_with_filename) folders.pop_back ();¤	// Òåïåðü ñîçäàåì êàòàëîãè¤	std::string path = "";¤	for (GCL::StrVector::iterator it = folders.begin (); it != folders.end (); ++it) {¤		path += (*it);¤		path += "/";¤		if (ACE_OS::mkdir (path.c_str()) == -1) {¤			if (errno == ENOENT) {¤				return false;¤			}¤		}¤	}¤	return true;¤	//#UC END# *4503DD9C02EE*
				    )))
			    quid       	"4503DD9C02EE"
			    documentation 	
|Ñîçäàåò äåðåâî êàòàëîãîâ ïî çàäàííîìó ïîëíîìó ïóòè full_path. Ïóòü ìîæíî çàäàâàòü âìåñòå ñ èìåíåì ôàéëà, òîãäà ïàðàìåòð is_path_with_filename  íóæíî óñòàíîâèòü â true.
|Âîçâðàùàåò true, åñëè äåðåâî êàòàëîãîâ óñïåøíî ñîçäàíî, èëè óæå ñóùåñòâóåò
			    
			    parameters 	(list Parameters
				(object Parameter "full_path"
				    quid       	"45ED7DBF01A5"
				    type       	"string"
				    quidu      	"3DBFFE240068")
				(object Parameter "is_path_with_filename"
				    quid       	"45ED7DBF01D4"
				    type       	"boolean"
				    quidu      	"3DBFFE100240"))
			    result     	"boolean"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFE100240"))
		    language   	"MDA Generator")
		(object Class "disk_op"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4503DE0B02EE_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4503DE0B02EE_CUSTOM_INCLUDES*¤#include <string>¤#include <iostream>¤¤//#UC END# *4503DE0B02EE_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4503DE0B02EE*"
			    value      	(value Text 
|//#UC START# *4503DE0B02EE*¤namespace { // local namespace¤¤std::string get_root_dir (const char* path) {¤	std::string s = path;¤	std::string::size_type pos = s.find_first_of ("\\/");¤	if (pos == std::string::npos) {¤		s += '\\';¤	} else if (pos < s.length ()) {¤		s.erase (pos + 1);¤	}¤	return s;¤}¤¤} // local namespace¤¤//#UC END# *4503DE0B02EE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DE0B02EE_USER_INCLUDES*"
			    value      	"//#UC START# *4503DE0B02EE_USER_INCLUDES*¤//#UC END# *4503DE0B02EE_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DE0B02EE_USER_DEFINITION*"
			    value      	"//#UC START# *4503DE0B02EE_USER_DEFINITION*¤//#UC END# *4503DE0B02EE_USER_DEFINITION*")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/os/disk_op.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/os/disk_op.h"))
		    quid       	"4503DE0B02EE"
		    documentation 	"ðàñøèðåííûå îïåðàöèè íàä äèñêîì (ïîëó÷åíèå ñâîáîäíîãî ìåñòà, ...)"
		    stereotype 	"UtilityPack"
		    operations 	(list Operations
			(object Operation "get_free_space"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4503DE2F038A*"
				    value      	(value Text 
|//#UC START# *4503DE2F038A*¤	std::string s = get_root_dir (path);¤¤#ifdef WIN32¤	// implementation for WinNT 4.0 and Win95 OSR2 and later¤	typedef BOOL (WINAPI *fTGetDiskFreeSpaceEx) (LPCTSTR, PULARGE_INTEGER, PULARGE_INTEGER, PULARGE_INTEGER);¤	FARPROC fpointer = GetProcAddress (GetModuleHandle ("kernel32.dll") , "GetDiskFreeSpaceExA");¤	fTGetDiskFreeSpaceEx pGetDiskFreeSpaceEx = reinterpret_cast <fTGetDiskFreeSpaceEx> (fpointer);¤	if (pGetDiskFreeSpaceEx) {¤		__int64 i64FreeBytesToCaller = 0;¤		__int64 i64TotalBytes = 0;¤		__int64 i64FreeBytes = 0;¤		BOOL fResult = pGetDiskFreeSpaceEx (s.c_str ()¤										   , (PULARGE_INTEGER)&i64FreeBytesToCaller¤										   , (PULARGE_INTEGER)&i64TotalBytes¤										   , (PULARGE_INTEGER)&i64FreeBytes);¤		if (fResult) {¤			unsigned long free_kb = static_cast <unsigned long> (i64FreeBytesToCaller / 1024);¤			free_space = free_kb;¤			return true;¤		}¤	}¤	// implementation for WinNT 3.5 and Win95 and early¤	DWORD dwSectPerClust = 0;¤	DWORD dwBytesPerSect = 0;¤	DWORD dwFreeClusters = 0;¤	DWORD dwTotalClusters = 0;¤	BOOL fResult = GetDiskFreeSpace (s.c_str ()¤									, &dwSectPerClust¤									, &dwBytesPerSect¤									, &dwFreeClusters¤									, &dwTotalClusters);¤	if (fResult) {¤		__int64 free_bytes = dwFreeClusters * dwSectPerClust * dwBytesPerSect;¤		unsigned long free_kb = static_cast <unsigned long> (free_bytes / 1024);¤		free_space = free_kb;¤		return true;¤	}¤#else¤//	#error "get_free_space" have been implemented for NOT WIN32 OS only for a while¤std::cerr<<"get_free_space() call requested"<<std::endl;¤#endif¤¤	return false;¤	//#UC END# *4503DE2F038A*
				    )))
			    quid       	"4503DE2F038A"
			    documentation 	
|Get free disk space for the path, in kb
|If the function succeeds, the return value is nonzero
			    
			    parameters 	(list Parameters
				(object Parameter "path"
				    quid       	"4503E782031C"
				    type       	"string"
				    quidu      	"3DBFFE240068")
				(object Parameter "out free_space"
				    quid       	"4503E782034B"
				    type       	"unsigned long"
				    quidu      	"3DBFFDE101CA"))
			    result     	"boolean"
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0
			    quidu      	"3DBFFE100240"))
		    language   	"MDA Generator")
		(object Class "DllLoader"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DE990138_USER_INCLUDES*"
			    value      	"//#UC START# *4503DE990138_USER_INCLUDES*¤#include <string>¤//#UC END# *4503DE990138_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DE990138_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4503DE990138_USER_DEFINITION*¤	class DllLoader {¤	private:¤#if defined (WIN32)¤		class ErrorModeController {¤		public:¤			ErrorModeController () {¤				m_previous_error_mode = ::SetErrorMode (SEM_FAILCRITICALERRORS);¤			}¤			virtual ~ErrorModeController () {¤				try {¤					::SetErrorMode (m_previous_error_mode);¤				} catch (...) {¤				}¤			}¤		private:¤			::UINT m_previous_error_mode;¤		};¤#else  // defined (WIN32)¤		class ErrorModeController {¤		public:¤			ErrorModeController () {¤				// do nothing¤			}¤			virtual ~ErrorModeController () {¤				// do nothing¤			}¤		};¤#endif // defined (WIN32)¤¤		class CurrentDirController {¤		public:¤			CurrentDirController () {¤				if (ACE_OS::getcwd (m_current_dir, MAXPATHLEN + 1) == 0) {¤					m_current_dir [0] = ACE_TEXT ('\0');¤				}¤			}¤			virtual ~CurrentDirController () {¤				try {¤					if (ACE_OS::strlen (m_current_dir) != 0) {¤						ACE_OS::chdir (m_current_dir);¤					}¤				} catch (...) {¤				}¤			}¤		private:¤			ACE_TCHAR m_current_dir [MAXPATHLEN + 1];¤		}; // class CurrentDirController¤¤	public:¤		DllLoader (const char* dll_name) : m_handle (ACE_SHLIB_INVALID_HANDLE) {¤			if (dll_name) {¤				ErrorModeController error_mode_controller;¤¤#if defined (ACE_WIN32)¤				m_shared_name = std::string (ACE_DLL_PREFIX) + std::string (dll_name) + std::string (ACE_DLL_SUFFIX);¤¤				ACE_TCHAR os_dependent_dir [MAXPATHLEN + 6 + 1]; { // `+6` for `\win??` patern; `+1` for `\0` char¤					os_dependent_dir [::GetModuleFileName ((HMODULE)0, os_dependent_dir, MAXPATHLEN)] = ACE_TEXT ('\0');¤				}¤¤				if (ACE_OS::strlen (os_dependent_dir) != 0) {¤					ACE_TCHAR* last_dir_separator = ACE_OS_String::strrchr (os_dependent_dir, ACE_DIRECTORY_SEPARATOR_CHAR);¤¤					if (last_dir_separator != 0) {¤						*last_dir_separator = ACE_TEXT ('\0');¤					}¤¤					ACE_OS::strcat (os_dependent_dir, ACE_DIRECTORY_SEPARATOR_STR);¤¤					if ((long)::GetVersion () < 0) {¤						ACE_OS::strcat (os_dependent_dir, ACE_TEXT ("win9X"));¤					} else {¤						ACE_OS::strcat (os_dependent_dir, ACE_TEXT ("winNT"));¤					}¤¤					{¤						CurrentDirController current_dir_controller;¤¤						if (ACE_OS::chdir (os_dependent_dir) != -1) {¤							m_handle = ACE_OS::dlopen (m_shared_name.c_str ());¤						}¤					}¤				}¤¤				if (m_handle == ACE_SHLIB_INVALID_HANDLE) {¤					std::string full_name = std::string (os_dependent_dir) + std::string (ACE_DIRECTORY_SEPARATOR_STR) + m_shared_name;¤					m_handle = ACE_OS::dlopen (full_name.c_str ());¤				}¤#else  // defined (ACE_WIN32)¤				ACE_TCHAR tmp_name [MAXPATHLEN + 1]; {¤					if (ACE::ldfind (ACE_TEXT (dll_name), tmp_name, MAXPATHLEN) == -1) {¤						tmp_name [0] = ACE_TEXT ('\0');¤					}¤					m_shared_name = tmp_name;¤				}¤#endif // defined (ACE_WIN32)¤¤				if (m_handle == ACE_SHLIB_INVALID_HANDLE && m_shared_name.size ()) {¤					m_handle = ACE_OS::dlopen (m_shared_name.c_str ());¤				}¤			} else {¤				LOG_W (("%s: invalid dll name", GDS_CURRENT_FUNCTION));¤			}¤		}¤¤		virtual ~DllLoader () {¤			this->close ();¤		}¤¤		inline bool is_loaded () const { ¤			return (m_handle != ACE_SHLIB_INVALID_HANDLE); ¤		}¤¤		inline const ACE_SHLIB_HANDLE get_handle () const { ¤			return m_handle; ¤		}¤¤		inline const char* get_shared_name () const { ¤			return m_shared_name.c_str (); ¤		}¤¤	protected:¤		void close () {¤			try {¤				if (m_handle != ACE_SHLIB_INVALID_HANDLE) {¤					ACE_OS::dlclose (m_handle);¤				}¤			} catch (...) {¤			}¤		}¤¤		template <typename T>¤		T get_func_ptr (const char* name) {¤			T ret = static_cast <T> (ACE_OS::dlsym (this->get_handle (), ACE_TEXT (name)));¤			if (!ret) {¤				LOG_W ((¤					"%s: symbol '%s' not found in dynamic library %s"¤					, GDS_CURRENT_FUNCTION¤					, name¤					, m_shared_name.c_str ())¤				);¤				throw std::exception ();¤			}¤			return ret;¤		}¤¤	private:¤		ACE_SHLIB_HANDLE m_handle;¤¤		std::string m_shared_name;¤	};¤¤	typedef Core::Aptr <DllLoader> DllLoader_aptr;¤//#UC END# *4503DE990138_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/os/DllLoader.h"))
		    quid       	"4503DE990138"
		    documentation 	"êëàññ ðåàëèçóþùèé çàãðóçêó DLL"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "FileOp"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4503DEC603C8_CUSTOM_INCLUDES*"
			    value      	(value Text 
|//#UC START# *4503DEC603C8_CUSTOM_INCLUDES*¤#include "ace/OS.h"¤#include <cstring>¤#if defined(_MSC_VER)¤#include <direct.h> // for _getdrive() especially¤#endif¤//#UC END# *4503DEC603C8_CUSTOM_INCLUDES*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4503DEC603C8*"
			    value      	(value Text 
|//#UC START# *4503DEC603C8*¤void throw_last_error (int er) throw (FOException) {¤	switch (er) {¤	case 0:¤		return;¤	case ENOENT:¤		throw InvalidPath();¤	case EACCES:¤		throw AccessDenied();¤	case ENOMEM:¤	case ENOSPC:¤		throw NotEnoughRoom();¤	case EEXIST:		¤		throw FileExists();¤	default:¤		throw UnknownError();¤	}¤}¤¤namespace { // local¤const int MY_BUFSIZ = 256*1024; // for copy_file¤}¤¤namespace { // local¤	std::string replsym(const std::string& par, char cfrom, char cto) {¤		std::string ret=par;¤		std::string::size_type siz = par.size();¤		for(std::string::size_type pos=0; pos<siz; pos++) {¤			ret[pos] = (par[pos] == cfrom) ? cto : par[pos];¤		}¤		return ret;¤	}¤	std::string drv2str(int d) {¤		std::string ret(1, char('a' + (d-1)));¤		ret += ':';¤		return ret;¤	}¤	std::string getdrv() {¤		std::string ret;¤#if defined (WIN32) || defined (_MSC_VER)¤		ret = drv2str(_getdrive());¤#else¤		ret = ""; // mount ideology upon right OS¤#endif¤		return ret;¤	}¤	std::string getcwd() {¤¤		std::string ret;¤		char dir_buf[32*1024];¤¤#if defined (WIN32) || defined (_MSC_VER)¤		_getcwd(dir_buf, 32*1024);¤		ret = dir_buf;¤¤		std::string::size_type colon_pos = ret.find(':'); // due to ACE adds 'DRV': to cwd under Win32¤		if (colon_pos != std::string::npos) {¤			ret = ret.substr(colon_pos+1);¤		}¤		if (ret.size()>0) {¤			if (ret[ret.size()-1] != '/') {¤				ret += '\\';¤			}¤		}¤		return ret;¤#else¤		ACE_OS::getcwd(dir_buf, 32*1024);¤		ret = dir_buf;¤¤		std::string::size_type colon_pos = ret.find(':'); // due to ACE adds 'DRV': to cwd under Win32¤		if (colon_pos != std::string::npos) {¤			ret = ret.substr(colon_pos+1);¤		}¤¤		ret = replsym(ret, '\\', '/');¤		if (ret.size()>0) {¤			if (ret[ret.size()-1] != '/') {¤				ret += '/';¤			}¤		}¤		return ret;¤#endif¤	}¤¤} // namespace local¤¤void splitpath (¤	const std::string& path_in¤	, std::string& drive¤	, std::string& dir¤	, std::string& fname¤	, std::string& ext¤	, bool dflt) {¤#if defined (WIN32) || defined (_MSC_VER)¤	if (path_in.size () > _MAX_DRIVE + _MAX_DIR + _MAX_FNAME + _MAX_EXT - 4) {¤		std::cerr<<"splitpath (): to big path = "<<path_in<<std::endl;¤	}¤¤	char drive_c [_MAX_DRIVE];¤	char dir_c [_MAX_DIR];¤	char fname_c [_MAX_FNAME];¤	char ext_c [_MAX_EXT];¤¤	_splitpath (path_in.c_str (), drive_c, dir_c, fname_c, ext_c);¤	drive = dflt ? getdrv () : drive_c;¤	dir = dflt ? getcwd () : dir_c;¤	fname = fname_c;¤	ext = ext_c;¤#else¤	std::string path = path_in; // path will shrink during split¤	std::string::size_type colon_pos = path.find(':');¤¤	if (colon_pos != std::string::npos) { // ":" not found, gets default drive¤		drive = path.substr(0, colon_pos+1); // with ':'¤		path = path.substr(colon_pos+1); // rest path without drive¤	}¤	else {¤		drive = dflt ? getdrv() : "";¤	}¤¤	path=replsym(path, '\\', '/');¤¤	std::string::size_type slash_pos = path.rfind('/'); // gets dir boundary¤	if (slash_pos != std::string::npos) {¤		dir = path.substr(0, slash_pos+1); // dir with trailing '/'¤		path = path.substr(slash_pos+1); // rest path without dir¤	}¤	else { // gets current directory¤		dir = dflt ? getcwd() : "";¤	}¤¤	std::string::size_type dot_pos = path.find('.');¤	if (dot_pos != std::string::npos) {¤		fname = path.substr(0, dot_pos); // fname without '.'¤		ext = path.substr(dot_pos); // ext with '.'¤	}¤	else {¤		fname = path;¤		ext = "";¤	} ¤#endif¤}¤//#UC END# *4503DEC603C8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DEC603C8_USER_INCLUDES*"
			    value      	"//#UC START# *4503DEC603C8_USER_INCLUDES*¤#include <string>¤//#UC END# *4503DEC603C8_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DEC603C8_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4503DEC603C8_USER_DEFINITION*¤void splitpath(¤	const std::string& path¤	, std::string& drive¤	, std::string& dir¤	, std::string& fname¤	, std::string& ext¤	, bool dflt=false // if (dflt), splitpath gets current drive & dir¤); ¤//#UC END# *4503DEC603C8_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/os/FileOp.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/os/FileOp.h"))
		    quid       	"4503DEC603C8"
		    documentation 	"ðàñøèðåííûå îïåðàöèè íàä ôàéëîì (êîïèðîâàíèå, ïåðåíîñ, óäàëåíèå)"
		    stereotype 	"UtilityPack"
		    operations 	(list Operations
			(object Operation "copy_file"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4503DF4D0000*"
				    value      	(value Text 
|//#UC START# *4503DF4D0000*¤		if (strcmp(from, to) == 0) {¤		return; // nothing to do¤	}¤	if (!overwrite) {¤		if (ACE_OS::access(to, F_OK) != -1) { // but file exists¤			throw_last_error(EEXIST);¤			return;¤		}¤	}¤	ACE_HANDLE hfrom = ACE_OS::open(from, O_RDONLY | O_BINARY);¤	if (hfrom == ACE_INVALID_HANDLE) {¤		throw_last_error(ACE_OS::last_error());¤		return;¤	}¤	ACE_HANDLE hto = ACE_OS::open(to, O_WRONLY | O_BINARY | O_CREAT | O_TRUNC);¤	if (hto == ACE_INVALID_HANDLE) {¤		ACE_OS::close(hfrom);¤		throw_last_error(ACE_OS::last_error());¤		return;¤	}¤	char buf[MY_BUFSIZ]; // on stack, due to reentrant reason¤	int r = 0;¤	while ( (r=ACE_OS::read(hfrom, buf, MY_BUFSIZ)) > 0) {¤		if (ACE_OS::write(hto, buf, r) < r) {¤			ACE_OS::close(hfrom);¤			ACE_OS::close(hto);¤			throw_last_error(ACE_OS::last_error());¤			return;¤		}¤	}¤	if (r == -1) {¤		ACE_OS::close(hfrom);¤		ACE_OS::close(hto);¤		throw_last_error(ACE_OS::last_error());¤		return;¤	}¤	ACE_OS::close(hfrom);¤	ACE_OS::close(hto);¤	//#UC END# *4503DF4D0000*
				    ))
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"GetRaises"
				    value      	"4503DEE100AB"))
			    quid       	"4503DF4D0000"
			    documentation 	"êîïèðóåò ôàéë ñ âîçìîæíîñòüþ ïåðåçàïèñè"
			    parameters 	(list Parameters
				(object Parameter "from"
				    quid       	"4503E75A034B"
				    type       	"string"
				    quidu      	"3DBFFE240068")
				(object Parameter "to"
				    quid       	"4503E75A037A"
				    type       	"string"
				    quidu      	"3DBFFE240068")
				(object Parameter "overwrite"
				    quid       	"4503E75A03A9"
				    type       	"boolean"
				    quidu      	"3DBFFE100240"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "move_file"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"GetRaises"
				    value      	"4503DEE100AB")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4507E9600177*"
				    value      	(value Text 
|//#UC START# *4507E9600177*¤	if (!overwrite) {¤		if (ACE_OS::access(to, F_OK) != -1) { // but file exists¤			throw_last_error(EEXIST);¤			return;¤		}¤	}¤	int res = ACE_OS::rename(from, to); // ACE takes care to copy if needed¤	if (res == -1) {¤		throw_last_error(ACE_OS::last_error()); ¤		return;¤	}¤	//#UC END# *4507E9600177*
				    )))
			    quid       	"4507E9600177"
			    documentation 	"ïåðåíîñèò ôàéë ñ âîçìîæíîñòüþ ïåðåçàïèñè"
			    parameters 	(list Parameters
				(object Parameter "from"
				    quid       	"4507E9FD01A5"
				    type       	"string"
				    quidu      	"3DBFFE240068")
				(object Parameter "to"
				    quid       	"4507E9FD01C5"
				    type       	"string"
				    quidu      	"3DBFFE240068")
				(object Parameter "overwrite"
				    quid       	"4507E9FD0203"
				    type       	"boolean"
				    quidu      	"3DBFFE100240"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0)
			(object Operation "remove_file"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"GetRaises"
				    value      	"4503DEE100AB")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"cpp:*4507E98D02EE*"
				    value      	(value Text 
|//#UC START# *4507E98D02EE*¤	int res = ACE_OS::unlink(from);¤	if (res == -1) {¤		throw_last_error(ACE_OS::last_error()); ¤		return;¤	}¤	//#UC END# *4507E98D02EE*
				    )))
			    quid       	"4507E98D02EE"
			    documentation 	"óäàëÿåò ôàéë"
			    parameters 	(list Parameters
				(object Parameter "from"
				    quid       	"4507EA030109"
				    type       	"string"
				    quidu      	"3DBFFE240068"))
			    concurrency 	"Sequential"
			    opExportControl 	"Public"
			    uid        	0))
		    language   	"MDA Generator"
		    nestedClasses 	(list nestedClasses
			(object Class "FOException"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"abstract")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"OS_GUID"
				    value      	"490817E6-1EF5-4444-B06F-2137448BB032"))
			    quid       	"4503DEE100AB"
			    documentation 	"Ãðóïïà èñêëþ÷åíèé äëÿ ôàéëîâûõ îïåðàöèé"
			    stereotype 	"Exception"
			    abstract   	TRUE)
			(object Class "UnknownError"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"OS_GUID"
				    value      	"29CACE5E-C2AB-4403-B47B-38E4F4C04187"))
			    quid       	"4503DF17037A"
			    documentation 	"Unknown File operation exception"
			    stereotype 	"Exception"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"4503DF2A03C8"
				    supplier   	"Logical View::shared::GCL::os::FileOp::FOException"
				    quidu      	"4503DEE100AB")))
			(object Class "FileExists"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"OS_GUID"
				    value      	"4D004300-71CE-400B-9BA9-0E77B56E676F"))
			    quid       	"4507E9BE005D"
			    documentation 	"cant complete move operation becouse destination file exists"
			    stereotype 	"Exception"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"4507E9EC034B"
				    supplier   	"Logical View::shared::GCL::os::FileOp::FOException"
				    quidu      	"4503DEE100AB")))
			(object Class "AccessDenied"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"OS_GUID"
				    value      	"9C2019B6-02BE-45E7-9EA8-3EA654819814"))
			    quid       	"4507E9D200DA"
			    documentation 	"acess denied to make file operation"
			    stereotype 	"Exception"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"4507E9EF0109"
				    supplier   	"Logical View::shared::GCL::os::FileOp::FOException"
				    quidu      	"4503DEE100AB")))
			(object Class "InvalidPath"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"OS_GUID"
				    value      	"24959E2D-22F0-4937-9414-A9F3EAA391FB"))
			    quid       	"4507E9E003A9"
			    documentation 	"invalid path specified for file opertion"
			    stereotype 	"Exception"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"4507E9F10399"
				    supplier   	"Logical View::shared::GCL::os::FileOp::FOException"
				    quidu      	"4503DEE100AB")))
			(object Class "NotEnoughRoom"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"OS_GUID"
				    value      	"04AB1705-7FED-4FA7-B9EC-024F62E65967"))
			    quid       	"4507EE51032C"
			    documentation 	"not enough room to complete file opertion"
			    stereotype 	"Exception"
			    superclasses 	(list inheritance_relationship_list
				(object Inheritance_Relationship
				    quid       	"4507EE5A000F"
				    supplier   	"Logical View::shared::GCL::os::FileOp::FOException"
				    quidu      	"4503DEE100AB"))))))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"44FEAD4A0272"))
		    quid       	"4503DD7A0213"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	0
		    origin_y   	910
		    items      	(list diagram_item_list
			(object ClassView "Class" "Logical View::shared::GCL::os::dir_op" @113
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(961, 496)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@113
				location   	(244, 437)
				fill_color 	13434879
				nlines     	1
				max_width  	1434
				justify    	0
				label      	"dir_op")
			    stereotype 	(object ItemLabel
				Parent_View 	@113
				location   	(244, 387)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1434
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4503DD86037A"
			    width      	1452
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::os::disk_op" @114
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(861, 840)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@114
				location   	(199, 781)
				fill_color 	13434879
				nlines     	1
				max_width  	1324
				justify    	0
				label      	"disk_op")
			    stereotype 	(object ItemLabel
				Parent_View 	@114
				location   	(199, 731)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1324
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4503DE0B02EE"
			    width      	1342
			    height     	242
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::os::DllLoader" @115
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2031, 528)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@115
				location   	(1881, 498)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"DllLoader")
			    stereotype 	(object ItemLabel
				Parent_View 	@115
				location   	(1881, 448)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4503DE990138"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::os::FileOp" @116
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(744, 1209)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@116
				location   	(236, 1100)
				fill_color 	13434879
				nlines     	1
				max_width  	1016
				justify    	0
				label      	"FileOp")
			    stereotype 	(object ItemLabel
				Parent_View 	@116
				location   	(236, 1050)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	1016
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4503DEC603C8"
			    width      	1034
			    height     	342
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::os::FileOp::FOException" @117
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1284, 1599)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	TRUE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@117
				location   	(1142, 1546)
				fill_color 	13434879
				nlines     	1
				max_width  	284
				justify    	0
				label      	"FOException")
			    stereotype 	(object ItemLabel
				Parent_View 	@117
				location   	(1142, 1496)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	281
				justify    	0
				label      	"<<Exception>>")
			    icon_style 	"Label"
			    fill_color 	9869055
			    quidu      	"4503DEE100AB"
			    width      	302
			    height     	230
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::os::FileOp::UnknownError" @118
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(372, 2016)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@118
				location   	(214, 1960)
				fill_color 	13434879
				nlines     	1
				max_width  	316
				justify    	0
				label      	"UnknownError")
			    stereotype 	(object ItemLabel
				Parent_View 	@118
				location   	(214, 1910)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	313
				justify    	0
				label      	"<<Exception>>")
			    icon_style 	"Label"
			    fill_color 	9869055
			    quidu      	"4503DF17037A"
			    width      	334
			    height     	236
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @119
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4503DF2A03C8"
			    client     	@118
			    supplier   	@117
			    vertices   	(list Points
				(539, 1938)
				(1132, 1667))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::data::std_defs" @120
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(434, 155)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@120
				location   	(284, 128)
				nlines     	1
				max_width  	300
				justify    	0
				label      	"std_defs")
			    stereotype 	(object ItemLabel
				Parent_View 	@120
				location   	(284, 78)
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"44FEBDF3039B"
			    width      	318
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object UsesView "" @121
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @122
				Parent_View 	@121
				location   	(647, 311)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.594512
				height     	17
				orientation 	0)
			    line_color 	3947680
			    quidu      	"450420F40167"
			    client     	@113
			    supplier   	@120
			    vertices   	(list Points
				(776, 374)
				(572, 244))
			    line_style 	0)
			(object NoteView @123
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4503DEC603C8"))
			    location   	(1743, 1209)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@123
				location   	(1543, 1149)
				fill_color 	13434879
				nlines     	3
				max_width  	364
				justify    	1
				label      	
|{is namespace:=true}
|{need UC:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	424
			    height     	132)
			(object AttachView "" @124
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@123
			    supplier   	@116
			    vertices   	(list Points
				(1530, 1209)
				(1261, 1209))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::str::str_op" @125
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(899, 155)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@125
				location   	(749, 128)
				nlines     	1
				max_width  	300
				justify    	0
				label      	"str_op")
			    stereotype 	(object ItemLabel
				Parent_View 	@125
				location   	(749, 78)
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"4503E01500CB"
			    width      	318
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object UsesView "" @126
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	(object SegLabel @127
				Parent_View 	@126
				location   	(941, 321)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	10
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	"<<uses>>"
				pctDist    	0.412151
				height     	13
				orientation 	1)
			    line_color 	3947680
			    quidu      	"4504229D00FA"
			    client     	@113
			    supplier   	@125
			    vertices   	(list Points
				(938, 374)
				(914, 244))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::os::FileOp::FileExists" @128
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(840, 2040)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@128
				location   	(698, 1987)
				fill_color 	13434879
				nlines     	1
				max_width  	284
				justify    	0
				label      	"FileExists")
			    stereotype 	(object ItemLabel
				Parent_View 	@128
				location   	(698, 1937)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	281
				justify    	0
				label      	"<<Exception>>")
			    icon_style 	"Label"
			    fill_color 	9869055
			    quidu      	"4507E9BE005D"
			    width      	302
			    height     	230
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::os::FileOp::AccessDenied" @129
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1257, 2037)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@129
				location   	(1112, 1984)
				fill_color 	13434879
				nlines     	1
				max_width  	290
				justify    	0
				label      	"AccessDenied")
			    stereotype 	(object ItemLabel
				Parent_View 	@129
				location   	(1112, 1934)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	290
				justify    	0
				label      	"<<Exception>>")
			    icon_style 	"Label"
			    fill_color 	9869055
			    quidu      	"4507E9D200DA"
			    width      	308
			    height     	230
			    annotation 	8
			    autoResize 	TRUE)
			(object ClassView "Class" "Logical View::shared::GCL::os::FileOp::InvalidPath" @130
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(1650, 2049)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@130
				location   	(1508, 1996)
				fill_color 	13434879
				nlines     	1
				max_width  	284
				justify    	0
				label      	"InvalidPath")
			    stereotype 	(object ItemLabel
				Parent_View 	@130
				location   	(1508, 1946)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	281
				justify    	0
				label      	"<<Exception>>")
			    icon_style 	"Label"
			    fill_color 	9869055
			    quidu      	"4507E9E003A9"
			    width      	302
			    height     	230
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @131
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4507E9EC034B"
			    client     	@128
			    supplier   	@117
			    vertices   	(list Points
				(954, 1924)
				(1166, 1714))
			    line_style 	0)
			(object InheritView "" @132
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4507E9EF0109"
			    client     	@129
			    supplier   	@117
			    vertices   	(list Points
				(1263, 1921)
				(1276, 1714))
			    line_style 	0)
			(object InheritView "" @133
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4507E9F10399"
			    client     	@130
			    supplier   	@117
			    vertices   	(list Points
				(1555, 1933)
				(1377, 1714))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::os::FileOp::NotEnoughRoom" @134
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(2091, 2067)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@134
				location   	(1915, 2014)
				fill_color 	13434879
				nlines     	1
				max_width  	352
				justify    	0
				label      	"NotEnoughRoom")
			    stereotype 	(object ItemLabel
				Parent_View 	@134
				location   	(1915, 1964)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	352
				justify    	0
				label      	"<<Exception>>")
			    icon_style 	"Label"
			    fill_color 	9869055
			    quidu      	"4507EE51032C"
			    width      	370
			    height     	230
			    annotation 	8
			    autoResize 	TRUE)
			(object InheritView "" @135
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4507EE5A000F"
			    client     	@134
			    supplier   	@117
			    vertices   	(list Points
				(1905, 1959)
				(1435, 1686))
			    line_style 	0)
			(object NoteView @136
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4503DE990138"))
			    location   	(2409, 528)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@136
				location   	(2271, 468)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @137
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@136
			    supplier   	@115
			    vertices   	(list Points
				(2258, 528)
				(2190, 528))
			    line_style 	0)
			(object NoteView @138
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4503DE0B02EE"))
			    location   	(1752, 840)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@138
				location   	(1614, 780)
				fill_color 	13434879
				nlines     	3
				max_width  	240
				justify    	1
				label      	"{need UC:=true}")
			    line_color 	3342489
			    fill_color 	13434879
			    width      	300
			    height     	132)
			(object AttachView "" @139
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@138
			    supplier   	@114
			    vertices   	(list Points
				(1601, 840)
				(1532, 840))
			    line_style 	0)))))
	(object Class_Category "str"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (i.h)"
		    value      	"w:/shared/GCL/str/str_conv.i.h::4503DFAE006D,w:/shared/GCL/str/str_op.i.h::4503E01500CB")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (h)"
		    value      	"w:/shared/GCL/str/str_conv.h::4503DFAE006D,w:/shared/GCL/str/str_op.h::4503E01500CB")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"NESTED GENERATED FILES (cpp)"
		    value      	"w:/shared/GCL/str/str_conv.cpp::4503DFAE006D"))
	    quid       	"4503DF990167"
	    documentation 	"ìåòîäû ðàáîòû ñî ñòðîêàìè"
	    stereotype 	"Unit"
	    visible_categories 	(list visibility_relationship_list
		(object Visibility_Relationship
		    quid       	"450422870399"
		    supplier   	"Logical View::shared::GCL::data"
		    quidu      	"44FEB6B3010B"))
	    exportControl 	"Public"
	    logical_models 	(list unit_reference_list
		(object Class "str_conv"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4503DFAE006D_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4503DFAE006D_CUSTOM_INCLUDES*¤//#UC END# *4503DFAE006D_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4503DFAE006D*"
			    value      	(value Text 
|//#UC START# *4503DFAE006D*¤namespace {¤¤static unsigned char s_dos2koi [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0xE1, 0xE2, 0xF7, 0xE7, 0xE4, 0xE5, 0xF6, 0xFA, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0,¤	0xF2, 0xF3, 0xF4, 0xF5, 0xE6, 0xE8, 0xE3, 0xFE, 0xFB, 0xFD, 0xFF, 0xF9, 0xF8, 0xFC, 0xE0, 0xF1,¤	0xC1, 0xC2, 0xD7, 0xC7, 0xC4, 0xC5, 0xD6, 0xDA, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0,¤	0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,¤	0xC0, 0xC1, 0xC2, 0xC3, 0x2D, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,¤	0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,¤	0xD2, 0xD3, 0xD4, 0xD5, 0xC6, 0xC8, 0xC3, 0xDE, 0xDB, 0xDD, 0xDF, 0xD9, 0xD8, 0xDC, 0xC0, 0xD1,¤	0xB3, 0xA3, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF¤};¤¤static unsigned char s_dos2mac [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x20, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,¤	0xB0, 0xB1, 0xB2, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,¤	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,¤	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,¤	0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xDF,¤	0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF¤};¤¤static unsigned char s_dos2win [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0xA4,¤	0x10, 0x11, 0x12, 0x13, 0xB6, 0xA7, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,¤	0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,¤	0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,¤	0x87, 0x87, 0x87, 0x80, 0x81, 0x81, 0x81, 0x82, 0x82, 0x81, 0x80, 0x82, 0x8A, 0x8A, 0x8A, 0x82,¤	0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x86, 0x86, 0x83, 0x89, 0x84, 0x85, 0x86, 0x87, 0x88, 0x84,¤	0x84, 0x85, 0x85, 0x83, 0x83, 0x89, 0x89, 0x88, 0x88, 0x8A, 0x89, 0x87, 0x87, 0x80, 0x87, 0x87,¤	0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF,¤	0xA8, 0xB8, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0xB0, 0xB7, 0xB7, 0x5F, 0xB9, 0xB2, 0xA8, 0xA0¤};¤¤static unsigned char s_dos2win_pseudo [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0xA4,¤	0x10, 0x11, 0x12, 0x13, 0xB6, 0xA7, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,¤	0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,¤	0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,¤	0x87, 0x87, 0x87,  '|',  '|', 0x81, 0x81, 0x82, 0x82, 0x81, 0x80, 0x82, 0x8A, 0x8A, 0x8A, '\\',¤	'\\',  '-',  '-',  '|',  '-',  '+', 0x86, 0x86, 0x83, 0x89, 0x84, 0x85, 0x86, 0x87, 0x88, 0x84,¤	0x84, 0x85, 0x85, 0x83, 0x83, 0x89, 0x89, 0x88, 0x88,  '/',  '/', 0x87, 0x87, 0x80, 0x87, 0x87,¤	0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF,¤	0xA8, 0xB8, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0xB0, 0xB7, 0xB7, 0x5F, 0x6E, 0xB2, 0xA8, 0xA0¤};¤¤static unsigned char s_koi2dos [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0xA0, 0xA1, 0xA2, 0xF1, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,¤	0xB0, 0xB1, 0xB2, 0xF0, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,¤	0xEE, 0xA0, 0xA1, 0xE6, 0xA4, 0xA5, 0xE4, 0xA3, 0xE5, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE,¤	0xAF, 0xEF, 0xE0, 0xE1, 0xE2, 0xE3, 0xA6, 0xA2, 0xEC, 0xEB, 0xA7, 0xE8, 0xED, 0xE9, 0xE7, 0xEA,¤	0x9E, 0x80, 0x81, 0x96, 0x84, 0x85, 0x94, 0x83, 0x95, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E,¤	0x8F, 0x9F, 0x90, 0x91, 0x92, 0x93, 0x86, 0x82, 0x9C, 0x9B, 0x87, 0x98, 0x9D, 0x99, 0x97, 0x9A¤};¤¤static unsigned char s_koi2mac [256] ={¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x20,¤	0x21, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0xB0, 0xB1, 0xB2, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,¤	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xFF, 0x20, 0x20, 0x20, 0x20,¤	0x20, 0x20, 0x20, 0xF1, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,¤	0x20, 0xF3, 0xF2, 0xF0, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x20,¤	0xFE, 0xE0, 0xE1, 0xF6, 0xE4, 0xE5, 0xF4, 0xE3, 0xF5, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE,¤	0xEF, 0xDF, 0xF0, 0xF1, 0xF2, 0xF3, 0xE6, 0xE2, 0xFC, 0xFB, 0xE7, 0xF8, 0xFD, 0xF9, 0xF7, 0xFA,¤	0x9E, 0x80, 0x81, 0x96, 0x84, 0x85, 0x94, 0x83, 0x95, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E,¤	0x8F, 0x9F, 0x90, 0x91, 0x92, 0x93, 0x86, 0x82, 0x9C, 0x9B, 0x87, 0x98, 0x9D, 0x99, 0x97, 0x9A¤};¤¤static unsigned char s_koi2win [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0xA0, 0xA1, 0xA2, 0xB8, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,¤	0xB0, 0xB1, 0xB2, 0xA8, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,¤	0xFE, 0xE0, 0xE1, 0xF6, 0xE4, 0xE5, 0xF4, 0xE3, 0xF5, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE,¤	0xEF, 0xFF, 0xF0, 0xF1, 0xF2, 0xF3, 0xE6, 0xE2, 0xFC, 0xFB, 0xE7, 0xF8, 0xFD, 0xF9, 0xF7, 0xFA,¤	0xDE, 0xC0, 0xC1, 0xD6, 0xC4, 0xC5, 0xD4, 0xC3, 0xD5, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE,¤	0xCF, 0xDF, 0xD0, 0xD1, 0xD2, 0xD3, 0xC6, 0xC2, 0xDC, 0xDB, 0xC7, 0xD8, 0xDD, 0xD9, 0xD7, 0xDA ¤};¤¤static unsigned char s_mac2dos [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,¤	0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,¤	0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,¤	0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,¤	0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,¤	0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF¤};¤¤static unsigned char s_mac2koi [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0xE1, 0xE2, 0xF7, 0xE7, 0xE4, 0xE5, 0xF6, 0xFA, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0,¤	0xF2, 0xF3, 0xF4, 0xF5, 0xE6, 0xE8, 0xE3, 0xFE, 0xFB, 0xFD, 0xFF, 0xF9, 0xF8, 0xFC, 0xE0, 0xF1,¤	0xC1, 0xC2, 0xD7, 0xC7, 0xC4, 0xC5, 0xD6, 0xDA, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0xBF, 0x9C, 0x9D, 0x9E, 0x9F,¤	0xA0, 0xA1, 0xA2, 0xB0, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xD1,¤	0xC1, 0xC2, 0xD7, 0xC7, 0xC4, 0xC5, 0xD6, 0xDA, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0,¤	0xD2, 0xD3, 0xD4, 0xD5, 0xC6, 0xC8, 0xC3, 0xDE, 0xDB, 0xDD, 0xDF, 0xD9, 0xD8, 0xDC, 0xC0, 0x9B ¤};¤¤static unsigned char s_mac2win [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0xA4,¤	0x10, 0x11, 0x12, 0x13, 0xB6, 0xA7, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,¤	0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,¤	0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,¤	0x5F, 0x5F, 0x5F, 0xA6, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F,¤	0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F,¤	0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0xA6, 0x5F, 0xFF,¤	0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,¤	0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x5F ¤};¤¤static unsigned char s_win2dos [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0x20, 0xAD, 0x9B, 0x9C, 0x0F, 0x9D, 0xDD, 0x15, 0xF0, 0x63, 0xA6, 0xAE, 0xAA, 0x2D, 0x72, 0x5F,¤	0xF8, 0xF1, 0xFD, 0x33, 0x27, 0xE6, 0x14, 0xFA, 0x2C, 0xFC, 0xA7, 0xAF, 0xAC, 0xAB, 0x5F, 0xA8,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,¤	0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF¤};¤¤static unsigned char s_win2koi [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xB3, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,¤	0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xA3, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,¤	0xE1, 0xE2, 0xF7, 0xE7, 0xE4, 0xE5, 0xF6, 0xFA, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0,¤	0xF2, 0xF3, 0xF4, 0xF5, 0xE6, 0xE8, 0xE3, 0xFE, 0xFB, 0xFD, 0xFF, 0xF9, 0xF8, 0xFC, 0xE0, 0xF1,¤	0xC1, 0xC2, 0xD7, 0xC7, 0xC4, 0xC5, 0xD6, 0xDA, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0,¤	0xD2, 0xD3, 0xD4, 0xD5, 0xC6, 0xC8, 0xC3, 0xDE, 0xDB, 0xDD, 0xDF, 0xD9, 0xD8, 0xDC, 0xC0, 0xD1¤};¤¤static unsigned char s_win2mac [256] = {¤	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x20, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,¤	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,¤	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,¤	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,¤	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,¤	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,¤	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,¤	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0x20, 0xED, 0x9B, 0x9C, 0x0F, 0x9D, 0xDD, 0x15, 0x22, 0x63, 0xE6, 0xEE, 0xEA, 0x2D, 0x72, 0x5F,¤	0xF8, 0xF1, 0xFD, 0x33, 0x27, 0xF6, 0x14, 0xFA, 0x2C, 0x31, 0xE7, 0xEF, 0xEC, 0xEB, 0x5F, 0xE8,¤	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,¤	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,¤	0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,¤	0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xDF ¤};¤¤static unsigned char* s_code_tables [5] [5] = {¤	{ 0, s_win2dos, s_win2koi, s_win2mac, 0 },¤	{ s_dos2win, 0, s_dos2koi, s_dos2mac, s_dos2win_pseudo },¤	{ s_koi2win, s_koi2dos, 0, s_koi2mac, 0 },¤	{ s_mac2win, s_mac2dos, s_mac2koi, 0, 0 },¤	{ 0, 0, 0, 0, 0 }¤};¤¤} // namespace ""¤¤char* buffer_recoding (code_t code_in, code_t code_out, size_t len, char* dest, const char* src) {¤	if ((dest != 0) && (len != 0)) {¤		if (src == 0) {¤			src = dest;¤		}¤¤		unsigned char* current_code_table = s_code_tables [code_in] [code_out];¤		if (current_code_table != 0) {¤			for (size_t i = 0; i < len; ++i) {¤				dest [i] = current_code_table [(unsigned char)src [i]];¤			}¤		} else {¤			if (dest != src) {¤				memmove (dest, src, len);¤			}¤		}¤¤	}¤¤	return dest;¤}¤//#UC END# *4503DFAE006D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DFAE006D_USER_INCLUDES*"
			    value      	(value Text "//#UC START# *4503DFAE006D_USER_INCLUDES*¤#include <iterator>¤#include <ctype.h>¤//#UC END# *4503DFAE006D_USER_INCLUDES*"))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503DFAE006D_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4503DFAE006D_USER_DEFINITION*¤	enum code_t {¤		cd_win = 0¤		, cd_dos = 1¤		, cd_koi = 2¤		, cd_mac = 3¤		, cd_win_pseudo = 4¤	};¤	¤	// îïðåäåëåíèå ïî óìîë÷àíèþ ñèñòåìíîé êîäèðîâêè¤	#if defined (CODETYPE_DOS)¤		static const code_t cd_sys = cd_dos;¤	#elif defined (CODETYPE_WIN)¤		static const code_t cd_sys = cd_win;¤	#elif defined (CODETYPE_KOI)¤		static const code_t cd_sys = cd_koi;¤	#elif defined (_WIN32) && !defined (_CONSOLE)¤		static const code_t cd_sys = cd_win;¤	#elif defined (unix) && !defined (__GO32__) && !defined (__CYGWIN32__)¤		static const code_t cd_sys = cd_koi;¤	#elif defined (__GO32__) || defined (__CYGWIN32__) || (defined (_WIN32) && defined (_CONSOLE))¤		static const code_t cd_sys = cd_dos;¤	#else¤		static const code_t cd_sys = cd_mac;¤	#endif¤	¤	// êîíâåðòàöèÿ áóôåðà èç îäíîé êîäèðîâêè â äðóãóþ¤	char* buffer_recoding (code_t code_in, code_t code_out, size_t len, char* dest, const char* src = 0);¤	¤	// êîíâåðòàöèÿ ñòðîêè èç îäíîé êîäèðîâêè â äðóãóþ¤	inline char* string_recoding (code_t code_in, code_t code_out, char* dest, const char* src = 0);¤¤	// êîíâåðòèò îáû÷íóþ ñòðóêó â ñòðîêó wide-êîäîâ, ñ çàëäàííûì ïðåôèêñîì ¤	// è âîçìîæíîñòüþ ñîõðàíÿòü english-ñèâîëû¤	inline std::string multibyte_to_str (¤		const std::string& in¤		, char prefix = 0¤		, bool keep_eng = false¤		, char open_quot = 0¤		, char close_quot = 0¤	);¤¤	// ïðåîáðàçóåò ñòðîêó ñ èìåíåì ñîãëàñíî ñòèëþ OMG IDL¤	enum CodeItem {¤		 CI_FUNCTION¤		, CI_PARAMTER¤		, CI_CLASS_MEMBER¤		, CI_VARIBLE¤		, CI_CONST¤		, CI_ENUM¤		, CI_CLASS¤		, CI_TYPEDEF¤		, CI_STRUCT¤		, CI_EXCEPTION¤		, CI_ENUM_ITEM¤	};¤	¤	inline std::string convert_to_omg_style (const std::string& str, CodeItem ci);¤¤	// ïðåîáðàçóåò ñòðîêó ñ èìåíåì ñîãëàñíî ñòèëþ Borland VCL¤	inline std::string convert_to_borland_style (const std::string& str, CodeItem ci );¤	¤	inline void to_upper (std::string& str);¤¤	inline void to_lower (std::string& str);¤¤	// ïåðåñîáèðàåò ñòðîêó èç âõîäíîãî  ôîðìàòà â âûõîäíîé ¤	// (â êà÷åñòâå ñîñòàâíûõ ýëåìåíòîâ ïîääåðæèâàþòñÿ òîëüêî ïîäñòðîêè, îáùèì êîë-âîì íå áîëåå 32)¤	inline std::string string_converter (¤		const std::string& str¤		, const std::string& in_format¤		, const std::string& out_format¤		, unsigned out_size_multiplicator = 10¤	);¤	¤	inline void convert_to_scanf_format (std::string& str);¤¤	// êîíâåðòàöèÿ ñèìâîëà â íèæíèé ðåãèñòð (ìàëåíüêèå áóêâû)¤	inline char char_lower (const char chr, code_t code = cd_win);¤	¤	// êîíâåðòàöèÿ ñèìâîëà â âåðõíèé ðåãèñòð (áîëüøèå áóêâû)¤	inline char char_upper (const char chr, code_t code = cd_win);¤	¤	// êîíâåðòàöèÿ ñòðîêè â íèæíèé ðåãèñòð (ìàëåíüêèå áóêâû)¤	inline void string_lower (char* src, code_t code = cd_win);¤	¤	// êîíâåðòàöèÿ ñòðîêè â âåðõíèé ðåãèñòð (áîëüøèå áóêâû)¤	inline void string_upper (char* src, code_t code = cd_win);¤//#UC END# *4503DFAE006D_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4503DFAE006D_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4503DFAE006D_CUSTOM_INCLUDES*¤//#UC END# *4503DFAE006D_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4503DFAE006D*"
			    value      	(value Text 
|//#UC START# *4503DFAE006D*¤// êîíâåðòàöèÿ ñòðîêè èç îäíîé êîäèðîâêè â äðóãóþ¤inline char* string_recoding (code_t code_in, code_t code_out, char* dest, const char* src) {¤	return GCL::buffer_recoding (code_in, code_out, (dest != 0) ? (strlen (dest)) : (0), dest, src);¤}¤¤// êîíâåðòèò îáû÷íóþ ñòðóêó â ñòðîêó wide-êîäîâ, ñ çàëäàííûì ïðåôèêñîì ¤// è âîçìîæíîñòüþ ñîõðàíÿòü english-ñèâîëû¤¤inline std::string multibyte_to_str (¤	const std::string& in¤	, char prefix¤	, bool keep_eng¤	, char open_quot¤	, char close_quot¤) {¤	std::string ret;¤#ifdef WIN32¤	bool first_eng = true;¤	for (std::string::const_iterator it = in.begin(); it != in.end(); it++) {			¤		if (*it < 0 || !keep_eng) {¤			if (!first_eng && close_quot) {¤				ret += close_quot;¤				first_eng = true;¤			}¤			WCHAR wch[2];¤			MultiByteToWideChar(CP_ACP, 0, it, 1, wch, 1);¤			if (prefix) ret += prefix;¤			char buf[8];¤			itoa (wch[0], buf, 10);¤			ret += buf;¤		} else {¤			if (first_eng && open_quot) {¤				ret += open_quot;¤				first_eng = false;¤			}¤			ret += *it;¤		}¤	}¤	if (!first_eng && close_quot) {¤		ret += close_quot;¤		first_eng = true;¤	}¤#else¤	GDS_ASSERT_MSG (false, ("need to implement"));¤#endif¤	return ret;¤}¤¤// ïðåîáðàçóåò ñòðîêó ñ èìåíåì ñîãëàñíî ñòèëþ OMG IDL¤inline std::string convert_to_omg_style (const std::string& str, CodeItem ci) {¤	std::string ret;¤	// need setlocale;¤	for (std::string::const_iterator it = str.begin(); it != str.end(); it++) {¤		switch (ci) {¤			case CI_FUNCTION:¤			case CI_PARAMTER:¤			case CI_CLASS_MEMBER:¤			case CI_VARIBLE: {¤				if (isupper(*it)) {¤					if (it != str.begin()) {¤						ret += '_';¤					}¤					ret += tolower(*it);¤				} else {¤					ret += *it;¤				}¤				break;¤			} ¤			case CI_CLASS:¤			case CI_TYPEDEF:¤			case CI_STRUCT:¤			case CI_EXCEPTION: ¤			case CI_ENUM: {¤				ret += *it;¤				break;¤			}¤			case CI_CONST:¤			case CI_ENUM_ITEM: {¤				ret += *it;¤				break;¤			}¤		}¤	}¤	return ret;¤}¤¤// ïðåîáðàçóåò ñòðîêó ñ èìåíåì ñîãëàñíî ñòèëþ Borland VCL¤inline std::string convert_to_borland_style (const std::string& str, CodeItem ci ) {¤	std::string ret;¤	// need setlocale;¤¤	for (std::string::const_iterator it = str.begin(); it != str.end(); it++) {¤		switch (ci) {¤			case CI_FUNCTION:¤			case CI_CLASS:¤			case CI_TYPEDEF:¤			case CI_STRUCT:¤			case CI_EXCEPTION: ¤			case CI_ENUM: {¤				if (*it == '_') {¤					it++;¤					ret += toupper(*it);¤				} else if (it == str.begin()) {¤					ret += toupper(*it);¤				} else {¤					ret += *it;¤				}¤				break;¤			}	 			¤			case CI_PARAMTER:¤			case CI_CLASS_MEMBER:¤			case CI_VARIBLE: {¤				ret += *it;¤				break;¤			}¤			case CI_CONST: {¤				ret += *it;¤				break;¤			}¤			case CI_ENUM_ITEM: {¤				ret += *it;¤				break;¤			}¤		}¤	}¤	¤	return ret;¤}¤¤inline void to_upper (std::string& str) {¤	for (std::string::iterator it = str.begin(); it != str.end(); it++) {¤		*it = toupper(*it);¤	}¤}¤¤inline void to_lower (std::string& str) {¤	for (std::string::iterator it = str.begin(); it != str.end(); it++) {¤		*it = tolower(*it);¤	}¤}¤¤// ïåðåñîáèðàåò ñòðîêó èç âõîäíîãî  ôîðìàòà â âûõîäíîé ¤// (â êà÷åñòâå ñîñòàâíûõ ýëåìåíòîâ ïîääåðæèâàþòñÿ òîëüêî ïîäñòðîêè, îáùèì êîë-âîì íå áîëåå 32)¤inline std::string string_converter (¤	const std::string& str¤	, const std::string& in_format¤	, const std::string& out_format¤	, unsigned out_size_multiplicator¤) {¤	std::string ret;¤	ret.resize(str.size()*out_size_multiplicator);¤	char s1[1024]; ¤	char s2[1024]; ¤	char s3[1024]; ¤	char s4[64];¤	char s5[64];¤	char s6[64];¤	char s7[64];¤	char s8[64];¤	char s9[64];¤	char s10[64];¤	char s11[64];¤	char s12[64];¤	char s13[64];¤	char s14[64];¤	char s15[64];¤	char s16[64];¤	char s17[64];¤	char s18[64];¤	char s19[64];¤	char s20[64];¤	char s21[64];¤	char s22[64];¤	char s23[64];¤	char s24[64];¤	char s25[64];¤	char s26[64];¤	char s27[64];¤	char s28[64];¤	char s29[64];¤	char s30[64];¤	char s31[64];¤	char s32[64];¤	¤	s1[0] ¤		= s2[0] ¤		= s3[0] ¤		= s4[0] ¤		= s5[0] ¤		= s6[0] ¤		= s7[0] ¤		= s8[0] ¤		= s9[0] ¤		= s10[0] ¤		= s11[0] ¤		= s12[0]¤		= s13[0]¤		= s14[0]¤		= s15[0]¤		= s16[0] ¤		= s17[0] ¤		= s18[0]¤		= s19[0]¤		= s20[0]¤		= s21[0] ¤		= s22[0]¤		= s23[0]¤		= s24[0]¤		= s25[0]¤		= s26[0] ¤		= s27[0] ¤		= s28[0]¤		= s29[0]¤		= s30[0]¤		= s31[0]¤		= s32[0]¤		= 0;¤¤	sscanf (str.data()¤		, in_format.data()¤		, s1¤		, s2¤		, s3¤		, s4¤		, s5¤		, s6¤		, s7¤		, s8¤		, s9¤		, s10¤		, s11¤		, s12¤		, s13¤		, s14¤		, s15¤		, s16¤		, s17¤		, s18¤		, s19¤		, s20¤		, s21¤		, s22¤		, s23¤		, s24¤		, s25¤		, s26¤		, s27¤		, s28¤		, s29¤		, s30¤		, s31¤		, s32¤	);¤	sprintf (const_cast<char*>(ret.c_str())¤		, out_format.data()¤		, s1¤		, s2¤		, s3¤		, s4¤		, s5¤		, s6¤		, s7¤		, s8¤		, s9¤		, s10¤		, s11¤		, s12¤		, s13¤		, s14¤		, s15¤		, s16¤		, s17¤		, s18¤		, s19¤		, s20¤		, s21¤		, s22¤		, s23¤		, s24¤		, s25¤		, s26¤		, s27¤		, s28¤		, s29¤		, s30¤		, s31¤		, s32¤	);¤	ret.resize(strlen(ret.data()));¤	return ret;¤}¤¤inline void convert_to_scanf_format (std::string& str) {¤	std::string res;¤	for (std::string::iterator it = str.begin(); it != str.end(); it++) {¤		if (*it == '\\') {¤			it++;¤			switch (*it) {¤			case 'n':¤				res += '\n';¤				break;¤			case 't':¤				res += '\t';¤				break;¤			case '0':¤				res += '\0';¤				break;¤			case '\\':¤				res += '\\';¤				break;¤			default:¤				res += *it;¤			}¤		} else {¤			res += *it;¤		}¤	}¤	str = res;¤}¤¤// êîíâåðòàöèÿ ñèìâîëà â íèæíèé ðåãèñòð (ìàëåíüêèå áóêâû)¤inline char char_lower (const char chr, code_t code) {¤	char result;¤¤	switch (code) {¤		case cd_win_pseudo:¤		case cd_win: {¤			if (¤				((chr >= 'A') && (chr <= 'Z')) ¤				|| ((chr >= 'À') && (chr <= 'ß'))¤			) {¤				result = chr+0x20;¤			} else {¤				if (chr == '¨') {¤					result = '¸';¤				} else {¤					result = chr;¤				}¤			}¤			break;¤		}¤¤		default: {¤			GDS_ASSERT (false); // íåïîääåðæèâàÿìàÿ êîäèðîâêà¤			result = chr;¤		}¤	}¤¤	return result;¤}¤¤// êîíâåðòàöèÿ ñèìâîëà â âåðõíèé ðåãèñòð (áîëüøèå áóêâû)¤inline char char_upper (const char chr, code_t code) {¤	char result;¤¤	switch (code) {¤		case cd_win_pseudo:¤		case cd_win: {¤			if (¤				((chr >= 'a') && (chr <= 'z'))¤				|| ((chr >= 'à') && (chr <= 'ÿ'))¤			) {¤				result = chr-0x20;¤			} else {¤				if (chr == '¸') {¤					result = '¨';¤				} else {¤					result = chr;¤				}¤			}¤			break;¤		}¤¤		default: {¤			assert (false); // íåïîääåðæèâàÿìàÿ êîäèðîâêà¤			result = chr;¤		}¤	}¤¤	return result;¤}¤¤// êîíâåðòàöèÿ ñòðîêè â íèæíèé ðåãèñòð (ìàëåíüêèå áóêâû)¤inline void string_lower (char* src, code_t code) {¤	if (src != 0) {¤		for (; *src != '\0'; ++src) {¤			*src = char_lower (*src, code);¤		}¤	}¤}¤¤// êîíâåðòàöèÿ ñòðîêè â âåðõíèé ðåãèñòð (áîëüøèå áóêâû)¤inline void string_upper (char* src, code_t code) {¤	if (src != 0) {¤		for (; *src != '\0'; ++src) {¤			*src = char_upper (*src, code);¤		}¤	}¤}¤//#UC END# *4503DFAE006D*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (cpp)"
			    value      	"w:/shared/GCL/str/str_conv.cpp")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/str/str_conv.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/str/str_conv.i.h"))
		    quid       	"4503DFAE006D"
		    documentation 	"îïåðàöèè ðàçëè÷íîé êîíâåðòàöèè ñòðîê (êîäèðîâêà, êåéñ, ïðåäñòàâëåíèå è ò.ä.)"
		    stereotype 	"UtilityPack"
		    language   	"MDA Generator")
		(object Class "str_op"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need impl-file"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need inline-file"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503E01500CB_USER_INCLUDES*"
			    value      	"//#UC START# *4503E01500CB_USER_INCLUDES*¤#include <iterator>¤#include <stack>¤#include <ctype.h>¤#include <algorithm>¤#include <functional>¤#include <locale>¤#include <string.h>¤¤//#UC END# *4503E01500CB_USER_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"h:*4503E01500CB_USER_DEFINITION*"
			    value      	(value Text 
|//#UC START# *4503E01500CB_USER_DEFINITION*¤	inline void str_replace (std::string& in, const char* what, const char* to);¤	¤	// çàìåíÿåò â ïåðåäàííîé ñòðîêå (str) óêàçàííûé ñèìâîë (from) íà ïîäñòðîêó (to), íà ÂÑÅÉ äëèííå ñòðêè,¤	// ðåçóëüòàò ïèøåòüñÿ d lheue. cnhjre (result)¤	inline void replace_char (const std::string& str, std::string& result, char from, const std::string& to);¤¤	// çàìåíÿåò â ïåðåäàííîé ñòðîêå (str) óêàçàííûé ñèìâîë (from) íà ïîäñòðîêó (to), íà ÂÑÅÉ äëèííå ñòðêè¤	inline void replace_char (std::string& str, char from, const std::string& to);¤¤	// óäàëÿåò âñå îáðàìëÿþùèå ñòðîêó (in) âàéò-ñïåéñû¤	inline std::string trim_ws (const char* in);¤¤	// trimm one of input chars¤	inline std::string& trim_char (std::string& in, const char* trim_chars);¤¤	// ñìåùàåò óêàçàòåëü (in) íà ïåðâûé íå âàéò-ñïåéñ ñèìâîë¤	inline const char* skip_whitespaces (const char* in);¤¤	// îáíóëÿåò âñå ôèíàëüíûå ñèìâîëû (chsrs) èç ïåðåäàííîé ïîñëåäîâàòåëüíîñòè (str)¤	inline void kill_final_char (char* str, const char* chars);¤	¤	// îáíóëÿåò âñå ôèíàëüíûå ñèìâîëû (chars) èç ïåðåäàííîé ïîñëåäîâàòåëüíîñòè (str)¤	inline void kill_final_char (std::string& str, const char* chars);¤¤	// ðàçáèâàåò ñòðîêó (input) íà ôðàãìåíòû óêàçàííîé äëèííû (len), ñ ó÷åòîì \n è ðàçáèåíèÿ íà ñëîâà¤	inline GCL::StrVector split_string_format (const char* input, unsigned len);¤¤	// ðàçáèâàåò ñòðîêó (input)íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char)¤	inline GCL::StrVector split_string_by (const char* input, char split_char);¤¤	// ðàçáèâàåò ñòðîêó (input)íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char) - ïîíîñòüþ àíàëîãè÷íî âûøå îïèñàííîé âóøêöèè (òîëüêî ñèãíàòóðà äðóãàÿ)¤	inline void split_string_by (const char* input, char split_char, GCL::StrSet& strs);¤¤	// ðàçáèâàåò ñòðîêó ([it, it_end]) íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char),¤	// c ó÷åòîì âëîæåííûõ ôðàãìåíòîâ-èñêëþ÷åíèé ([open, close]), è ýñêåéï-ñèìâîëîâ (exclude_symb)¤	inline GCL::StrVector split_string_by (¤		std::string::const_iterator it¤		, const std::string::const_iterator& it_end¤		, char split_char¤		, char open = 0¤		, char exclude_symb = 0¤		, char close = 0¤	);¤¤	// ðàçáèâàåò ñòðîêó ([it, it_end]) íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char),¤	// c ó÷åòîì âëîæåííûõ ôðàãìåíòîâ-èñêëþ÷åíèé ([open, close]) åñëè ðàçäåëèòåëü âñòðå÷àåòñÿ âíóòðè¤	// òàêîãî áëîêà, òî îí ïðîïóñêàåòñÿ¤	// exclude_symb - ýñêåéï-ñèìâîë¤	// ïðèìåð:¤	// äëÿ ñòðîêè: fff,zzzz,x{xx,xx}x\,X¤	// split_string (..., ',',"{",'\',"}")¤	// äàñò¤	//   fff¤	//   zzzz¤	//   x{xx,xx}x,X ¤¤	inline GCL::StrVector split_string_by (¤		std::string::const_iterator it¤		, const std::string::const_iterator& it_end¤		, char split_char¤		, const std::string& open_chars¤		, char exclude_symb¤		, const std::string& close_chars¤	);¤¤	// ðàçáèâàåò ñòðîêó ([it, it_end]) íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char),¤	// c ó÷åòîì âëîæåííûõ ôðàãìåíòîâ-èñêëþ÷åíèé ([open, close]) åñëè ðàçäåëèòåëü âñòðå÷àåòñÿ âíóòðè¤	// òàêîãî áëîêà, òî îí ïðîïóñêàåòñÿ¤	// exclude_symb - ýñêåéï-ñèìâîë¤	// ïðèìåð:¤	// äëÿ ñòðîêè: fff,zzzz,x{xx,xx}x\,X¤	// split_string (..., ',',"{",'\',"}")¤	// äàñò¤	//   fff¤	//   zzzz¤	//   x{xx,xx}x,X ¤	//¤	// ôóíêöèÿ èìååò îãðàíè÷åíèå íà 64 âëîæåííûõ ôðàãìåíòà ([open, close])¤	inline void split_string_by (¤		std::string::const_iterator it¤		, const std::string::const_iterator& it_end¤		, char split_char¤		, const std::string& open_chars¤		, char exclude_symb¤		, const std::string& close_chars¤		, GCL::StrVector& result¤	);¤¤	// ðàçáèâàåò ñòðîêó (str) íà ôðàãìåíòû ïî çàäàííîé ïîäñòðîêå (split_str), ðàçäåëèòåëåì ÿâëÿåòñÿ öåëàÿ ñòðîêà¤	inline GCL::StrVector split_string_by_sub_string (const char* str, const char* split_str);¤¤	// ðàçáèâàåò ñòðîêó (str) íà ÓÍÈÊÀËÜÍÛÅ ôðàãìåíòû ïî çàäàííîé ïîäñòðîêå (split_str),¤	// ðàçäåëèòåëåì ÿâëÿåòñÿ öåëàÿ ñòðîêà¤	inline GCL::StrSet split_string_by_sub_string_uniq (const char* str, const char* split_str);¤¤	// îáúåäèíÿåò ôðàãìåíòû (strs) â åäèíóþ ñòðîêó, ðàçäåëÿÿ èõ óêàçàííîé ïîäñòðîêîé (merge_str)¤	inline std::string merge_string_and_sub_string (GCL::StrVector strs, const char* merge_str);¤	¤	// îáúåäèíÿåò óíèêàëüíûå ôðàãìåíòû (strs) â åäèíóþ ñòðîêó, ðàçäåëÿÿ èõ óêàçàííîé ïîäñòðîêîé (merge_str)¤	inline std::string merge_string_and_sub_string (GCL::StrSet strs, const char* merge_str);¤	¤	// ïðîâåðÿåò íàëè÷èå óêàçàííîãî ñèìâîëà (ch) â ñòðîêå (str)¤	inline bool contains (char ch, const char* str);¤¤	// ðàçáèâàåò ñòðîêó (input) íà ôðàãìåíòû ïî çàäàííîve ìàññèâó ñèìâîëîâ (split_chars),¤	// ðàçäåëèòåëåì ÿâëÿåòñÿ ëþáîé ñèìâîë, â çàâèñèìîñòè îò ôëàãà (remove_empty) ïóñòûå ôðàãìåíòû óäàëÿþòüñÿ èëè íåò¤	inline GCL::StrVector split_string_by_chars (const char* input, const char* split_chars, bool remove_empty = true);¤¤	// âîçâðàùàåò ôðàãìåíò ñòðîêè ([it, it_end]) îãðàíè÷åííûé çàäàííûìè ñèìâîëàìè (close), ¤	// ñ ó÷åòîì âëîæåííûõ ôðàãìåíòîâ ([open, close])  ñ âîçìîæíîñòüþ çàäàíèÿ ñèìâîëà-èñêëþ÷åíèÿ (exclude_symb)¤	// ïðèìåð:¤	//		std::string str "text1 text2 {sub fragment} text3 \} text4} text5";¤	//		cout << part (str.begin(), str.end(), '}', '\\', '{');¤	// out:¤	//		text1 text2 {sub fragment} text3 \} text4¤	inline std::string part (¤		std::string::const_iterator& it¤		, const std::string::const_iterator& it_end¤		, const char close¤		, const char exclude_symb = 0¤		, const char open = 0¤	);¤¤	// âîçâðàùàåò ôðàãìåíò ñòðîêè ([it, 0]) îãðàíè÷åííûé çàäàííûìè ñèìâîëàìè (close), ¤	// ñ ó÷åòîì âëîæåííûõ ôðàãìåíòîâ ([open, close])  ñ âîçìîæíîñòüþ çàäàíèÿ ñèìâîëà-èñêëþ÷åíèÿ (exclude_symb)¤	// ïðèìåð:¤	//		std::string str "text1 text2 {sub fragment} text3 \} text4} text5";¤	//		cout << part (str.begin(), str.end(), '}', '\\', '{');¤	// out:¤	//		text1 text2 {sub fragment} text3 \} text4¤	inline std::string part (¤		std::string::const_iterator& it¤		, const char close¤		, const char exclude_symb = 0¤		, const char open = 0¤	);¤¤	// ïîèñê êîíöà ôðàãìåíòà â ìàññèâå [start, end], àíàëîãè÷íî part(...)¤	inline char* find_part_end (¤		const char* start¤		, const char* end¤		, const char close¤		, const char exclude_symb = 0¤		, const char open = 0¤	);¤¤	// ðàçáèâàåò ñòðîêó (input) íà ôðàãìåíòû îãðàíè÷åííûå ïåðåäàííûìè ñèìâîëàìè (fragment_begin, fragment_end)¤	// ïðèìåð:¤	//		split_string_by_fragment ("{text1}, {text2}  {text3}{text4}", '{', '}')¤	// âåðíåò ìàññèâ:¤	//		text1¤	//		text2¤	//		text3¤	//		text4¤	inline GCL::StrVector split_string_by_fragment (const char* input, char fragment_begin, char fragment_end);¤¤	// ïîèñê êîíöà ñåãìåíòà, ÍÅ àíàëîãè÷íî part(...)¤	inline bool find_char_ex (¤		std::string::const_iterator& it¤		, const std::string::const_iterator& it_end¤		, const char symb¤		, const char open = 0¤		, const char close = 0¤		, const char exclude_symb = 0¤	);¤¤	// ðàçáèâàåò ñòðîêó ([it, it_end]) íà ôðàãìåíòû îãðàíè÷åííûå ñèìâîëàìè (open, close), c ó÷åòîì ýñêåéï-ñèìâîëà (exclude_symb)¤	inline GCL::StrVector extract_fragments (¤		std::string::const_iterator& it¤		, const std::string::const_iterator& it_end¤		, const char open¤		, const char close = 0¤		, const char exclude_symb = 0		¤	);¤¤	// âîçâðàùàåò ïîëíóþ ñòðîêó èç òåñòîâîãî ïîòîêà ([start, end]), ê êîòîðîé ïðåíàäëåæèò ïîçèöèÿ óêàçàòåëÿ (at)¤	inline std::string get_line (¤		const std::string::const_iterator& at¤		, const std::string::const_iterator& start¤		, const std::string::const_iterator& end¤	);¤¤¤	// str íà÷èíàåòñÿ ñ prefix¤	//  Åñëè prefix = 0 òî âîçâðàùàåò true¤	inline bool start_with (const char* str, const char* prefix);¤¤	// str íà÷èíàåòñÿ ñ prefix áåç ó÷åòà ðåãèñòðà¤	//   Åñëè prefix = 0 òî âîçâðàùàåò true¤	inline bool starti_with (const char* str, const char* prefix, const std::locale& loc);¤¤	// str çàêàí÷èâàåòñÿ ñ sufix¤	//   Åñëè sufix = 0 òî âîçâðàùàåò true¤	inline bool end_with (const char* str, const char* sufix);¤¤	// str çàêàí÷èâàåòñÿ ñ sufix þåç ó÷åòà ðåãèñòðà¤	//   Åñëè sufix = 0 òî âîçâðàùàåò true¤	inline bool endi_with (const char* str, const char* sufix, const std::locale& loc);¤¤	// str íà÷èíàåòñÿ è çàêàí÷èâàåòñÿ border¤	//   Åñëè border = 0 òî âîçâðàùàåò true¤	inline bool border_with (const char* str, const char* border);¤¤	// str íà÷èíàåòñÿ è çàêàí÷èâàåòñÿ border áåç ó÷åòà ðåãèñòðà¤	//   Åñëè border = 0 òî âîçâðàùàåò true¤	inline bool borderi_with (const char* str, const char* border, const std::locale& loc);¤¤	// str íà÷èíàåòñÿ ñ prefix_char¤	inline bool start_with (const char* str, const char prefix_char);¤¤	// str íà÷èíàåòñÿ ñ prefix_char áåç ó÷åòà ðåãèñòðà¤	inline bool starti_with (const char* str, const char prefix_char, const std::locale& loc);¤¤	// str çàêàí÷èâàåòñÿ ñ sufix_char¤	inline bool end_with (const char* str, const char sufix_char);¤	¤	// str çàêàí÷èâàåòñÿ ñ sufix_char áåç ó÷åòà ðåãèñòðà¤	inline bool endi_with (const char* str, const char sufix_char, const std::locale& loc);¤	¤	// str íà÷èíàåòñÿ è çàêàí÷èâàåòñÿ border_char¤	inline bool border_with (const char* str, const char border_char);¤¤	// str íà÷èíàåòñÿ è çàêàí÷èâàåòñÿ border_char áåç ó÷åòà ðåãèñòðà¤	inline bool borderi_with (const char* str, const char border_char, const std::locale& loc);¤¤	// ïîèñê ïîäñòðîêè ñ èñïîëüçîâàíèåì ÿçûêîâîé êîäèðîâêè, áåç ó÷åòà ðåãèñòðà c èñïîëüçîâàíèåì STL¤	// (ïîðääåðæèâàþòñÿ - s_ru_win, s_ru_dos, s_ru_koi, s_eng)¤	// âîçâðàùàåòñÿ óêàçàòåëü íàéäåííîé ïîäñòðîêè, â ïðîòèâíîì ñëó÷àå âîçâðàùàåòñÿ óêàçàòåëü íà êîíåö ñòðîêè¤	inline const char* strstr (const char* str1, const char* str2, const std::locale& loc);¤¤	inline int to_upper_win ( int ch );¤¤	inline int str_compare_strong ( const char * s1, const char * s2);¤¤	// ïðîâåðêà ñèìâîëà íà òî, ÷òî îí ÿâëÿåòñÿ áóêâîé¤	inline bool is_alpha (const char chr, code_t code = cd_win);¤	¤	// ïðîâåðêà ñèìâîëà íà òî, ÷òî îí ÿâëÿåòñÿ öèôðîé¤	inline bool is_digit (const char chr, code_t code = cd_win);¤	¤	// ïðîâåðêà ñèìâîëà íà òî, ÷òî îí ÿâëÿåòñÿ öèôðîé èëè áóêâîé¤	inline bool is_alnum (const char chr, code_t code = cd_win);¤	¤	// ïðîâåðêà ñèìâîëà íà òî, ÷òî îí ÿâëÿåòñÿ ñèìâîëîì ðàçäåëèòåëåì¤	inline bool is_delimiter (const char chr);¤	¤	// ïðîâåðêà ñèìâîëà íà íèæíèé ðåãèñòð (ìàëåíüêèå áóêâû)¤	inline bool is_lower (const char chr, code_t code = cd_win);¤	¤	// ïðîâåðêà ñèìâîëà íà âåðõíèé ðåãèñòð (áîëüøèå áóêâû)¤	inline bool is_upper (const char chr, code_t code = cd_win);¤	¤	// ïîèñê ïîäñòðîêè â ñòðîêå ñ ó÷åòîì ðåãèñòðà¤	// âîçâðàùàåòñÿ óêàçàòåëü íàéäåííîé ïîäñòðîêè, â ïðîòèâíîì ñëó÷àå âîçâðàùàåòñÿ 0¤	inline const char* find_sub_string (const char* string, const char* sub_string);¤¤	// ïîèñê ïîäñòðîêè â ñòðîêå áåç ó÷åòîì ðåãèñòðà¤	// âîçâðàùàåòñÿ óêàçàòåëü íàéäåííîé ïîäñòðîêè, â ïðîòèâíîì ñëó÷àå âîçâðàùàåòñÿ 0¤	inline const char* find_sub_string_nocase (const char* string, const char* sub_string, code_t code = cd_win);	¤¤//#UC END# *4503E01500CB_USER_DEFINITION*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4503E01500CB_CUSTOM_INCLUDES*"
			    value      	"//#UC START# *4503E01500CB_CUSTOM_INCLUDES*¤//#UC END# *4503E01500CB_CUSTOM_INCLUDES*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"i.h:*4503E01500CB*"
			    value      	(value Text 
|//#UC START# *4503E01500CB*¤// çàìåíÿåò â ïåðåäàííîé ñòðîêå (in) óêàçàííóþ ïîäñòðîêó (what) äðóãîé (to), íà ÂÑÅÉ äëèííå ñòðêè¤inline void str_replace (std::string& in, const char* what, const char* to) {¤	size_t what_size = strlen (what);¤	size_t to_size = strlen (to);¤	¤	size_t offset = 0;¤	size_t p;¤	while ((p = in.find(what, offset)) != std::string::npos) {¤		in.replace(p, what_size, to);¤		offset = p + to_size;¤	}	¤}¤¤// çàìåíÿåò â ïåðåäàííîé ñòðîêå (str) óêàçàííûé ñèìâîë (from) íà ïîäñòðîêó (to), íà ÂÑÅÉ äëèííå ñòðêè,¤// ðåçóëüòàò ïèøåòüñÿ â result¤inline void replace_char (const std::string& str, std::string& result, char from, const std::string& to) {¤	result.erase();¤	for (std::string::const_iterator it = str.begin(); it != str.end(); it++) {¤		if (*it == from) {¤			result += to;¤		} else {¤			result += *it;¤		}¤	}		¤}¤¤// çàìåíÿåò â ïåðåäàííîé ñòðîêå (str) óêàçàííûé ñèìâîë (from) íà ñèìâîë (to), íà ÂÑÅÉ äëèííå ñòðêè¤inline std::string& replace_char (std::string& str, char from, char to) {¤	for (std::string::iterator it = str.begin(); it != str.end(); it++) {¤		if (*it == from) {¤			*it = to;¤		}¤	}¤	return str;¤}¤¤¤// óäàëÿåò âñå îáðàìëÿþùèå ñòðîêó (in) âàéò-ñïåéñû¤inline std::string trim_ws (const char* in) {¤	while (*in && (*in > 0 && (isspace ((unsigned char)*in) || *in == 9))) {¤		in++;¤	}¤	std::string ret = in;¤¤	unsigned i = ret.size();¤	while (i && (ret [i-1] > 0 && (isspace (ret [i-1]) || ret [i-1] == 9))) {¤		i--;¤	}¤	ret.resize (i);¤	return ret;¤}¤¤// trimm one of input chars¤inline std::string& trim_char (std::string& in, const char* trim_chars) {¤	bool begin_trimed = false;¤	bool end_trimed = false;¤¤	while (*trim_chars) {¤		if (!begin_trimed && *in.begin() == *trim_chars) {¤			in.erase (in.begin());¤			begin_trimed = true;¤		}¤		if (!end_trimed && *(in.end()-1) == *trim_chars) {¤			in.erase (in.end()-1);¤			end_trimed = true;¤		}¤¤		trim_chars++;¤	}¤	return in;¤}¤¤// ñìåùàåò óêàçàòåëü (in) íà ïåðâûé íå âàéò-ñïåéñ ñèìâîë¤inline const char* skip_whitespaces (const char* in) {¤	while (*in && (isspace ((unsigned char)*in) || *in == 9)) {¤		in++;¤	}¤	return in;¤}¤¤// îáíóëÿåò âñå ôèíàëüíûå ñèìâîëû (chsrs) èç ïåðåäàííîé ïîñëåäîâàòåëüíîñòè (str)¤inline void kill_final_char (char* str, const char* chars) {¤	unsigned ch_len = strlen (chars);¤	for (unsigned i = strlen (str) - 1; i > 0; i--) {¤		bool find = false;¤		for (unsigned ii = 0; ii < ch_len && !find; ii++) {¤			find = (str[i] == chars[ii]);¤		}¤¤		if (find) {¤			str[i] = 0;¤		} else {¤			return;¤		}¤	}¤}¤¤// îáíóëÿåò âñå ôèíàëüíûå ñèìâîëû (chars) èç ïåðåäàííîé ïîñëåäîâàòåëüíîñòè (str)¤inline void kill_final_char (std::string& str, const char* chars) {¤	unsigned ch_len = strlen (chars);¤	for (unsigned i = str.size() - 1; i > 0; i--) {¤		bool find = false;¤		for (unsigned ii = 0; ii < ch_len && !find; ii++) {¤			find = (str[i] == chars[ii]);¤		}¤¤		if (find) {¤			str.erase (i);¤		} else {¤			return;¤		}¤	}¤}¤¤// ðàçáèâàåò ñòðîêó (input) íà ôðàãìåíòû óêàçàííîé äëèííû (len), ñ ó÷åòîì \n è ðàçáèåíèÿ íà ñëîâà¤inline GCL::StrVector split_string_format (const char* input, unsigned len) {¤	GCL::StrVector strs;¤	const char* str = input;¤	unsigned total_count = 0; ¤¤	unsigned str_len = strlen (input);¤	while (total_count < str_len) {¤		unsigned pos = 0;¤		// find end of word¤		while (¤			str[pos+1] ¤			&& str[pos] != '\n'¤			&& (pos <= len ¤				|| str[pos] != ' '¤				&& str[pos] != '-'¤			)¤		) pos++;¤¤		//if ( pos ) { ¤			std::string s (str, str[pos] == '\n' ? pos-1 : pos+1);¤			strs.push_back(s);¤			total_count += pos + 1;¤			str += pos + 1;¤		//} else {¤		if (!pos) {¤			break;¤		}¤	}¤	return strs;¤}¤¤// ðàçáèâàåò ñòðîêó (input)íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char)¤inline GCL::StrVector split_string_by (const char* input, char split_char) {¤	GCL::StrVector strs;¤	const char* str = input;¤	unsigned total_count = 0; ¤¤	// Ïðîïóñêàåì ñèìâîë-ðàçäåëèòåëü¤	while (*str && *str == split_char) {¤		total_count++;¤		str++;¤	}¤	while (total_count < strlen (input)) {¤		unsigned pos = 0;¤		// find split char¤		while ( str[pos+1] && str[pos] != split_char ) pos++;¤¤		if ( pos ) { ¤			std::string s (str, str[pos] == split_char ? pos : pos+1);¤			strs.push_back(s);¤		} else if ( str[0] ) {				¤			strs.push_back(str);¤		}¤		total_count += pos + 1;¤		str += pos + 1;¤		// ïðîïóñêàåì âñå ñèìâîëû-ðàçäåëèòåëè, åñëè èõ âäðóã íåñêîëüêî¤		while (*str && *str == split_char) {¤			str++;¤			total_count++;¤		}¤	}¤	return strs;¤}¤¤// ðàçáèâàåò ñòðîêó (input)íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char) - ïîíîñòüþ àíàëîãè÷íî âûøå îïèñàííîé âóøêöèè (òîëüêî ñèãíàòóðà äðóãàÿ)¤inline void split_string_by (const char* input, char split_char, GCL::StrSet& strs) {¤	const char* str = input;¤	unsigned total_count = 0; ¤¤	// Ïðîïóñêàåì ñèìâîë-ðàçäåëèòåëü¤	while (*str && *str == split_char) {¤		total_count++;¤		str++;¤	}¤	while (total_count < strlen (input)) {¤		unsigned pos = 0;¤		// find split char¤		while ( str[pos+1] && str[pos] != split_char ) pos++;¤¤		if ( pos ) { ¤			std::string s (str, str[pos] == split_char ? pos : pos+1);¤			strs.insert(s);¤		} else if ( str[0] ) {				¤			strs.insert(str);¤		}¤		total_count += pos + 1;¤		str += pos + 1;¤		// ïðîïóñêàåì âñå ñèìâîëû-ðàçäåëèòåëè, åñëè èõ âäðóã íåñêîëüêî¤		while (*str && *str == split_char) {¤			str++;¤			total_count++;¤		}¤	}¤}¤¤// ðàçáèâàåò ñòðîêó ([it, it_end]) íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char),¤// c ó÷åòîì âëîæåííûõ ôðàãìåíòîâ-èñêëþ÷åíèé ([open, close]), è ýñêåéï-ñèìâîëîâ (exclude_symb)¤inline GCL::StrVector split_string_by (¤	std::string::const_iterator it¤	, const std::string::const_iterator& it_end¤	, char split_char¤	, char open¤	, char exclude_symb¤	, char close¤) {¤	if (!close) {¤		close = open;¤	}¤	GCL::StrVector strs;¤	unsigned sub_part_count = 0;¤¤	while (it != it_end) {¤		std::string::const_iterator it_begin = it;¤		while (it != it_end) {				¤			if (*it == open && (open != close || !sub_part_count)) {¤				sub_part_count++;				¤			} else if (*it == close) {¤				sub_part_count--;				¤			} else if (*it == split_char && !sub_part_count) {¤				break;¤			}¤			if (*it == exclude_symb) {¤				it++;¤			} 				¤			it++;¤		}¤		¤		strs.push_back(std::string (it_begin, it));¤		if (it != it_end) it++;¤	}		¤	return strs;¤}¤¤// ðàçáèâàåò ñòðîêó ([it, it_end]) íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char),¤// c ó÷åòîì âëîæåííûõ ôðàãìåíòîâ-èñêëþ÷åíèé ([open, close]) åñëè ðàçäåëèòåëü âñòðå÷àåòñÿ âíóòðè¤// òàêîãî áëîêà, òî îí ïðîïóñêàåòñÿ¤// exclude_symb - ýñêåéï-ñèìâîë¤// ïðèìåð:¤// äëÿ ñòðîêè: fff,zzzz,x{xx,xx}x\,X¤// split_string (..., ',',"{",'\',"}")¤// äàñò¤//   fff¤//   zzzz¤//   x{xx,xx}x,X ¤//¤// ôóíêöèÿ èìååò îãðàíè÷åíèå íà 64 âëîæåííûõ ôðàãìåíòà ([open, close])¤¤inline void split_string_by (¤	std::string::const_iterator it¤	, const std::string::const_iterator& it_end¤	, char split_char¤	, const std::string& open_chars¤	, char exclude_symb¤	, const std::string& close_chars¤	, GCL::StrVector& result¤) {	¤	std::string temp (it, it_end);¤	if (GCL::contains (split_char, temp.c_str ())) {¤		char fragment_close_stack[64] = {};¤		long current_level = -1;¤		while (it != it_end) {¤			std::string::const_iterator it_begin = it;¤			while (it != it_end) {				¤				if (current_level >= 0 && *it == fragment_close_stack[current_level]) {					¤					// close opened fragment¤					--current_level;					¤				} else {¤					std::string::size_type open_fnd = open_chars.find (*it);¤					if (open_fnd != std::string::npos) {¤						// open new fragments¤						fragment_close_stack[++current_level] = close_chars[open_fnd];¤					} else if (*it == split_char && current_level < 0) {¤						break;						¤					}¤				}												¤				if (*it == exclude_symb) {¤					it++;¤				} 				¤				it++;¤			}¤			¤			result.push_back(std::string (it_begin, it));¤			if (it != it_end) it++;¤		}	¤	} else {¤		result.push_back (temp);¤	}¤}¤// ðàçáèâàåò ñòðîêó ([it, it_end]) íà ôðàãìåíòû ïî çàäàííîìó ñèìâîëó (split_char),¤// c ó÷åòîì âëîæåííûõ ôðàãìåíòîâ-èñêëþ÷åíèé ([open, close]) åñëè ðàçäåëèòåëü âñòðå÷àåòñÿ âíóòðè¤// òàêîãî áëîêà, òî îí ïðîïóñêàåòñÿ¤// exclude_symb - ýñêåéï-ñèìâîë¤// ïðèìåð:¤// äëÿ ñòðîêè: fff,zzzz,x{xx,xx}x\,X¤// split_string (..., ',',"{",'\',"}")¤// äàñò¤//   fff¤//   zzzz¤//   x{xx,xx}x,X ¤¤inline GCL::StrVector split_string_by (¤	std::string::const_iterator it¤	, const std::string::const_iterator& it_end¤	, char split_char¤	, const std::string& open_chars¤	, char exclude_symb¤	, const std::string& close_chars¤) {¤	GCL::StrVector strs;			¤	std::string temp (it, it_end);¤	if (GCL::contains (split_char, temp.c_str ())) {¤		std::stack<char> fragment_close_stack;¤		while (it != it_end) {¤			std::string::const_iterator it_begin = it;¤			while (it != it_end) {				¤				if (fragment_close_stack.size() && *it == fragment_close_stack.top()) {					¤					// close opened fragment¤					fragment_close_stack.pop();					¤				} else {¤					std::string::size_type open_fnd = open_chars.find (*it);¤					if (open_fnd != std::string::npos) {¤						// open new fragments¤						fragment_close_stack.push(close_chars[open_fnd]);¤					} else if (*it == split_char && !fragment_close_stack.size()) {¤						break;						¤					}¤				}												¤				if (*it == exclude_symb) {¤					it++;¤				} 				¤				it++;¤			}¤			¤			strs.push_back(std::string (it_begin, it));¤			if (it != it_end) it++;¤		}	¤	} else {¤		strs.push_back(temp);¤	}¤	return strs;¤}¤¤// ðàçáèâàåò ñòðîêó (str) íà ôðàãìåíòû ïî çàäàííîé ïîäñòðîêå (split_str), ðàçäåëèòåëåì ÿâëÿåòñÿ öåëàÿ ñòðîêà¤inline GCL::StrVector split_string_by_sub_string (const char* str, const char* split_str) {¤	GCL::StrVector strs;	¤	unsigned total_count = 0; ¤¤	while (str) {¤		unsigned pos = 0;¤		const char* pstr = ::strstr (str, split_str);¤¤		std::string s (str, pstr ? pstr-str : strlen(str));¤		if (s != "") {¤			strs.push_back(s);¤		}¤		¤		str = pstr ? pstr+strlen(split_str) : 0;¤	}¤	return strs;¤}¤¤// ðàçáèâàåò ñòðîêó (str) íà ÓÍÈÊÀËÜÍÛÅ ôðàãìåíòû ïî çàäàííîé ïîäñòðîêå (split_str),¤// ðàçäåëèòåëåì ÿâëÿåòñÿ öåëàÿ ñòðîêà¤inline GCL::StrSet split_string_by_sub_string_uniq (const char* str, const char* split_str) {¤	GCL::StrSet strs;	¤	unsigned total_count = 0; ¤¤	while (str) {¤		unsigned pos = 0;¤		const char* pstr = ::strstr (str, split_str);¤¤		std::string s (str, pstr ? pstr-str : strlen(str));¤		if (s != "") {¤			strs.insert(s);¤		}¤		¤		str = pstr ? pstr+strlen(split_str) : 0;¤	}¤	return strs;¤}¤¤// îáúåäèíÿåò ôðàãìåíòû (strs) â åäèíóþ ñòðîêó, ðàçäåëÿÿ èõ óêàçàííîé ïîäñòðîêîé (merge_str)¤inline std::string merge_string_and_sub_string (GCL::StrVector strs, const char* merge_str) {¤	std::string ret;¤	for (GCL::StrVector::iterator it = strs.begin(); it != strs.end(); it++) {¤		ret += *it;¤		if ( std::distance (it, strs.end() ) > 1 )ret += merge_str;¤	}¤	return ret;¤}¤¤// îáúåäèíÿåò óíèêàëüíûå ôðàãìåíòû (strs) â åäèíóþ ñòðîêó, ðàçäåëÿÿ èõ óêàçàííîé ïîäñòðîêîé (merge_str)¤inline std::string merge_string_and_sub_string (GCL::StrSet strs, const char* merge_str) {¤	std::string ret;¤	for (GCL::StrSet::iterator it = strs.begin(); it != strs.end(); it++) {¤		ret += *it;¤		if ( std::distance (it, strs.end() ) > 1 )ret += merge_str;¤	}¤	return ret;¤}¤¤// ïðîâåðÿåò íàëè÷èå óêàçàííîãî ñèìâîëà (ch) â ñòðîêå (str)¤inline bool contains (char ch, const char* str) {¤	while (*str) {¤		if (*str == ch) {¤			return true;¤		}¤		str++;¤	}¤	return false;¤}¤¤// ðàçáèâàåò ñòðîêó (input) íà ôðàãìåíòû ïî çàäàííîve ìàññèâó ñèìâîëîâ (split_chars),¤// ðàçäåëèòåëåì ÿâëÿåòñÿ ëþáîé ñèìâîë, â çàâèñèìîñòè îò ôëàãà (remove_empty) ïóñòûå ôðàãìåíòû óäàëÿþòüñÿ èëè íåò¤inline GCL::StrVector split_string_by_chars (const char* input, const char* split_chars, bool remove_empty) {¤	GCL::StrVector strs;¤	¤	const char* str = input;¤	while (*str) {¤		size_t f_pos = strcspn (str, split_chars);			¤¤		if (f_pos) {				¤			strs.push_back(std::string (str, str + f_pos));¤		} else {¤			if (!remove_empty) {¤				strs.push_back ("");¤			}¤		}¤		¤		str += f_pos;			¤		if (*str) {¤			str++;¤		}¤	}¤	return strs;¤}¤¤// âîçâðàùàåò ôðàãìåíò ñòðîêè ([it, it_end]) îãðàíè÷åííûé çàäàííûìè ñèìâîëàìè (close), ¤// ñ ó÷åòîì âëîæåííûõ ôðàãìåíòîâ ([open, close])  ñ âîçìîæíîñòüþ çàäàíèÿ ñèìâîëà-èñêëþ÷åíèÿ (exclude_symb)¤// ïðèìåð:¤//		std::string str "text1 text2 {sub fragment} text3 \} text4} text5";¤//		cout << part (str.begin(), str.end(), '}', '\\', '{');¤// out:¤//		text1 text2 {sub fragment} text3 \} text4¤inline std::string part (¤	std::string::const_iterator& it¤	, const std::string::const_iterator& it_end¤	, const char close¤	, const char exclude_symb¤	, const char open¤) {¤	std::string::const_iterator it_begin = it+1;¤	unsigned sub_part_count = 1;¤	¤	while (it != it_end && sub_part_count) {¤		it++;			¤		if (*it == open) sub_part_count++;¤		if (*it == close) sub_part_count--;¤		if (*it == exclude_symb) it++;¤	}¤	¤	std::string ret (it_begin, it);¤	return ret;¤}¤¤// âîçâðàùàåò ôðàãìåíò ñòðîêè ([it, 0]) îãðàíè÷åííûé çàäàííûìè ñèìâîëàìè (close), ¤// ñ ó÷åòîì âëîæåííûõ ôðàãìåíòîâ ([open, close])  ñ âîçìîæíîñòüþ çàäàíèÿ ñèìâîëà-èñêëþ÷åíèÿ (exclude_symb)¤// ïðèìåð:¤//		std::string str "text1 text2 {sub fragment} text3 \} text4} text5";¤//		cout << part (str.begin(), str.end(), '}', '\\', '{');¤// out:¤//		text1 text2 {sub fragment} text3 \} text4¤inline std::string part (¤	std::string::const_iterator& it¤	, const char close¤	, const char exclude_symb¤	, const char open¤) {¤	std::string::const_iterator it_begin = it+1;¤	unsigned sub_part_count = 1;¤	¤	while (sub_part_count) {¤		it++;¤		if (*it == 0) {¤			break;¤		}¤		if (*it == open) sub_part_count++;¤		if (*it == close) sub_part_count--;¤		if (*it == exclude_symb) it++;¤	}¤	¤	std::string ret (it_begin, it);¤	return ret;¤}¤¤¤// ïîèñê êîíöà ôðàãìåíòà â ìàññèâå [start, end], àíàëîãè÷íî part(...)¤inline char* find_part_end (¤	const char* start¤	, const char* end¤	, const char close¤	, const char exclude_symb¤	, const char open¤) {¤	unsigned sub_part_count = 1;¤	¤	while (start != end && sub_part_count) {¤		start++;¤		if (*start == open) sub_part_count++;¤		if (*start == close) sub_part_count--;¤		if (*start == exclude_symb) start++;¤	}¤	¤	return const_cast<char*>(start);¤}¤¤// ðàçáèâàåò ñòðîêó (input) íà ôðàãìåíòû îãðàíè÷åííûå ïåðåäàííûìè ñèìâîëàìè (fragment_begin, fragment_end)¤// ïðèìåð:¤//		split_string_by_fragment ("{text1}, {text2}  {text3}{text4}", '{', '}')¤// âåðíåò ìàññèâ:¤//		text1¤//		text2¤//		text3¤//		text4¤inline GCL::StrVector split_string_by_fragment (const char* input, char fragment_begin, char fragment_end) {¤	GCL::StrVector strs;¤¤	const char* str = input;¤	unsigned begin_pos = 0; ¤	unsigned end_pos = 0; ¤¤	do {			¤		// find begin char¤		while (str[begin_pos] && str[begin_pos] != fragment_begin) begin_pos++;¤		¤		if (str[begin_pos]) {¤			if (fragment_begin == fragment_end) {¤				begin_pos++;¤				end_pos = begin_pos;¤				while (str[end_pos] && str[end_pos] != fragment_end) end_pos++;¤			} else {¤				end_pos = find_part_end (str + begin_pos, 0, fragment_end, '\\', fragment_begin) - input;¤				begin_pos++;¤			}				¤			¤			if ( str[end_pos] ) { ¤				std::string s (str+begin_pos, end_pos - begin_pos);¤				strs.push_back(s);¤				end_pos++;¤				begin_pos = end_pos;¤			}¤		}¤	} while (str[begin_pos] && str[end_pos]);¤	¤	return strs;¤}¤¤¤// ïîèñê êîíöà ñåãìåíòà, ÍÅ àíàëîãè÷íî part(...)¤inline bool find_char_ex (¤	std::string::const_iterator& it¤	, const std::string::const_iterator& it_end¤	, const char symb¤	, const char open¤	, const char close¤	, const char exclude_symb¤) {¤	bool ret = false;¤	unsigned sub_part_count = 0;¤	bool is_open = false;¤¤	for ( ; it != it_end; it++) {			¤		if (*it == open) {¤			if (open == close) {¤				if (!is_open) {¤					is_open = true;¤					sub_part_count++;¤				} else {¤					is_open = false;¤					sub_part_count--;¤				}¤			} else {¤				sub_part_count++;¤			}¤		} else if (*it == close) {¤			sub_part_count--;¤		} else if (*it == exclude_symb) {¤			it++;¤		} else if (!sub_part_count && *it == symb) {¤			ret = true;¤			break;¤		}¤	}¤	¤	return ret;¤}¤¤// ðàçáèâàåò ñòðîêó ([it, it_end]) íà ôðàãìåíòû îãðàíè÷åííûå ñèìâîëàìè (open, close), c ó÷åòîì ýñêåéï-ñèìâîëà (exclude_symb)¤inline GCL::StrVector extract_fragments (¤	std::string::const_iterator& it¤	, const std::string::const_iterator& it_end¤	, const char open¤	, const char close¤	, const char exclude_symb¤) {¤	GCL::StrVector strs;¤	while ( it != it_end && *it == open) {¤		strs.push_back(part(it, it_end, close, exclude_symb, open));¤		it++;¤	}¤	return strs;¤}¤¤// âîçâðàùàåò ïîëíóþ ñòðîêó èç òåñòîâîãî ïîòîêà ([start, end]), ê êîòîðîé ïðåíàäëåæèò ïîçèöèÿ óêàçàòåëÿ (at)¤inline std::string get_line (¤	const std::string::const_iterator& at¤	, const std::string::const_iterator& start¤	, const std::string::const_iterator& end¤) {¤	std::string::const_iterator str_start = at;¤	std::string::const_iterator str_end = at;¤	for (; str_start != start; str_start--) {¤		if (*str_start == '\n') break;¤	}¤	for (; str_end != end; str_end++) {¤		if (*str_end == '\n') break;¤	}¤¤	return std::string (str_start, str_end);¤}¤¤// âñïîìàãàòåëüíûé êëàññ äëÿ ñðàâíåíèÿ ñèìâîëîâ áåç ó÷åòà ðåãèñòðà¤struct no_case : std::binary_function <char, char, bool> {¤	std::locale m_locale;¤¤	no_case (const std::locale loc = std::locale::classic ())¤		: m_locale (loc) {¤	};¤	¤	bool operator () (char c1, char c2) const {¤		return std::toupper (c1, m_locale) == std::toupper (c2, m_locale);¤	};¤};¤¤// str íà÷èíàåòñÿ ñ prefix¤//   Åñëè prefix = 0 òî âîçâðàùàåò true¤inline bool start_with (const char* str, const char* prefix) {¤	bool retv;¤¤	retv = false;¤¤	if (prefix == 0) {¤		retv = true;¤	} else if (str) {¤		long str_len = strlen (str);¤		long prefix_len = strlen (prefix);¤¤		if (str_len >= prefix_len) {¤			retv = memcmp (str, prefix, prefix_len) == 0;¤		}¤	}¤¤	return retv;¤}¤¤// str íà÷èíàåòñÿ ñ prefix áåç ó÷åòà ðåãèñòðà¤//   Åñëè prefix = 0 òî âîçâðàùàåò true¤inline bool starti_with (const char* str, const char* prefix, const std::locale& loc) {¤	bool retv;¤¤	retv = false;¤¤	if (prefix == 0) {¤		retv = true;¤	} else if (str) {¤		long str_len = strlen (str);¤		long prefix_len = strlen (prefix);¤¤		if (str_len >= prefix_len) {¤			retv = std::equal (str, str + prefix_len, prefix, no_case (loc));¤		}¤	}¤¤	return retv;¤}¤¤// str çàêàí÷èâàåòñÿ ñ sufix¤//   Åñëè sufix = 0 òî âîçâðàùàåò true¤inline bool end_with (const char* str, const char* sufix) {¤	bool retv;¤¤	retv = false;¤¤	if (sufix == 0) {¤		retv = true;¤	} else if (str) {¤		long str_len = strlen (str);¤		long sufix_len = strlen (sufix);¤¤		if (str_len >= sufix_len) {¤			retv = memcmp (str + (str_len - sufix_len), sufix, sufix_len) == 0;¤		}¤	}¤¤	return retv;¤}¤¤// str çàêàí÷èâàåòñÿ ñ sufix þåç ó÷åòà ðåãèñòðà¤//   Åñëè sufix = 0 òî âîçâðàùàåò true¤inline bool endi_with (const char* str, const char* sufix, const std::locale& loc) {¤	bool retv;¤¤	retv = false;¤¤	if (sufix == 0) {¤		retv = true;¤	} else if (str) {¤		long str_len = strlen (str);¤		long sufix_len = strlen (sufix);¤¤		if (str_len >= sufix_len) {¤			retv = std::equal (str + (str_len - sufix_len), str + str_len, sufix, no_case (loc));¤		}¤	}¤¤	return retv;¤}¤¤// str íà÷èíàåòñÿ è çàêàí÷èâàåòñÿ border¤//   Åñëè border = 0 òî âîçâðàùàåò true¤inline bool border_with (const char* str, const char* border) {¤	bool retv;¤¤	retv = false;¤¤	if (border == 0) {¤		retv = true;¤	} else if (str) {¤		long str_len = strlen (str);¤		long border_len = strlen (border);¤¤		if (str_len >= border_len) {¤			retv = (memcmp (str, border, border_len) == 0)¤					&& (memcmp (str + (str_len - border_len), border, border_len) == 0);¤		}¤	}¤¤	return retv;¤}¤¤// str íà÷èíàåòñÿ è çàêàí÷èâàåòñÿ border áåç ó÷åòà ðåãèñòðà¤//   Åñëè border = 0 òî âîçâðàùàåò true¤inline bool borderi_with (const char* str, const char* border, const std::locale& loc) {¤	bool retv;¤¤	retv = false;¤¤	if (border == 0) {¤		retv = true;¤	} else if (str) {¤		long str_len = strlen (str);¤		long border_len = strlen (border);¤¤		if (str_len >= border_len) {¤			retv = (std::equal (str, str + border_len, border, no_case (loc))¤					&& std::equal (str + (str_len - border_len), str + str_len, border, no_case (loc)));¤		}¤	}¤¤	return retv;¤}¤¤// str íà÷èíàåòñÿ ñ prefix_char¤inline bool start_with (const char* str, const char prefix_char) {¤	bool retv;¤¤	retv = false;¤¤	if (str) {¤		retv = str [0] == prefix_char;¤	}¤¤	return retv;¤}¤¤// str íà÷èíàåòñÿ ñ prefix_char áåç ó÷åòà ðåãèñòðà¤inline bool starti_with (const char* str, const char prefix_char, const std::locale& loc) {¤	bool retv;¤¤	retv = false;¤¤	if (str) {¤		retv = std::toupper (str [0], loc) == std::toupper (prefix_char, loc);¤	}¤¤	return retv;¤}¤¤// str çàêàí÷èâàåòñÿ ñ sufix_char¤inline bool end_with (const char* str, const char sufix_char) {¤	bool retv;¤¤	retv = false;¤¤	if (str) {¤		long str_len = strlen (str);¤¤		retv = str [str_len - 1] == sufix_char;¤	}¤¤	return retv;¤}¤¤// str çàêàí÷èâàåòñÿ ñ sufix_char áåç ó÷åòà ðåãèñòðà¤inline bool endi_with (const char* str, const char sufix_char, const std::locale& loc) {¤	bool retv;¤¤	retv = false;¤¤	if (str) {¤		long str_len = strlen (str);¤¤		retv = std::toupper (str [str_len - 1], loc) == std::toupper (sufix_char, loc);¤	}¤¤	return retv;¤}¤¤// str íà÷èíàåòñÿ è çàêàí÷èâàåòñÿ border_char¤inline bool border_with (const char* str, const char border_char) {¤	bool retv;¤¤	retv = false;¤¤	if (str) {¤		long str_len = strlen (str);¤¤		retv = (str [0] == border_char) && (str [str_len - 1] == border_char);¤	}¤¤	return retv;¤}¤¤// str íà÷èíàåòñÿ è çàêàí÷èâàåòñÿ border_char áåç ó÷åòà ðåãèñòðà¤inline bool borderi_with (const char* str, const char border_char, const std::locale& loc) {¤	bool retv;¤¤	retv = false;¤¤	if (str) {¤		long str_len = strlen (str);¤¤		retv = (std::toupper (str [0], loc) == std::toupper (border_char, loc))¤				&& (std::toupper (str [str_len - 1], loc) == std::toupper (border_char, loc));¤	}¤¤	return retv;¤}¤¤// ïîèñê ïîäñòðîêè ñ èñïîëüçîâàíèåì ÿçûêîâîé êîäèðîâêè, áåç ó÷åòà ðåãèñòðà¤//  c èñïîëüçîâàíèåì STL¤//  (ïîðääåðæèâàþòñÿ - s_ru_win, s_ru_dos, s_ru_koi, s_eng)¤//  âîçâðàùàåòñÿ óêàçàòåëü íàéäåííîé ïîäñòðîêè, â ïðîòèâíîì ñëó÷àå âîçâðàùàåòñÿ óêàçàòåëü¤//  íà êîíåö ñòðîêè¤inline const char* strstr (const char* str1, const char* str2, const std::locale& loc) {¤	if (str1 != 0 && str2 != 0) {¤		return std::search (str1, str1 + strlen (str1), str2, str2 + strlen (str2), no_case (loc));¤	} else {¤		return str1;¤	}¤};¤¤inline int to_upper_win ( int ch ) {¤	if ( ch >= 'a' && ch <= 'z' )¤		return ch + 'A' - 'a';¤	if ( ch >= 'à' && ch <= 'ÿ' )¤		return ch + 'À' - 'à';¤	else¤		return ch;¤}¤¤inline int str_compare_strong ( const char * s1, const char * s2) {¤	register unsigned char c1, c2;¤	//	int	c1, c2;¤¤	if (s1==0 || s2==0) {¤		return 0;¤	}¤	if ( * s1 == '\"' )¤		s1++;¤¤	if ( * s2 == '\"' )¤		s2++;¤¤	for (register int i = 0; (s1 [i] != 0) && (s2 [i] != 0); i++) {¤		c1 = to_upper_win(s1 [i]);¤		c2 = to_upper_win(s2 [i]);¤		// skip masked characters¤		if ( c1 == '?' || c2 == '?' )¤			continue;¤¤		if ( c1 != c2 )¤			return c1 - c2;			¤	}¤¤	if ( c1 == 0 || c2 == 0 )¤		return c1 - c2;¤¤	return 0;		// strings matches in first n positions¤}¤¤// ïðîâåðêà ñèìâîëà íà òî, ÷òî îí ÿâëÿåòñÿ áóêâîé¤inline bool is_alpha (const char chr, code_t code) {¤	bool result;¤¤	switch (code) {¤		case cd_win_pseudo:¤		case cd_win: {¤			if (¤				((chr >= 'A') && (chr <= 'Z'))¤				|| ((chr >= 'a') && (chr <= 'z'))¤				|| ((chr >= 'À') && (chr <= 'ß'))¤				|| ((chr >= 'à') && (chr <= 'ÿ'))¤				|| ((chr == '¨') || (chr == '¸'))¤			) {¤				result = true;¤			} else {¤				result = false;¤			}¤			break;¤		}¤¤		default: {¤			assert (false); // íåïîääåðæèâàÿìàÿ êîäèðîâêà¤			result = false;¤		}¤	}¤¤	return result;¤}¤¤// ïðîâåðêà ñèìâîëà íà òî, ÷òî îí ÿâëÿåòñÿ öèôðîé¤inline bool is_digit (const char chr, code_t code) {¤	bool result;¤¤	switch (code) {¤		case cd_win:¤		case cd_win_pseudo:¤		case cd_dos:¤		case cd_koi:¤		case cd_mac: {¤			if ((chr >= '0') && (chr <= '9')) {¤				result = true;¤			} else {¤				result = false;¤			}¤			break;¤		}¤¤		default: {¤			assert (false); // íåïîääåðæèâàÿìàÿ êîäèðîâêà¤			result = false;¤		}¤	}¤¤	return result;¤}¤¤// ïðîâåðêà ñèìâîëà íà òî, ÷òî îí ÿâëÿåòñÿ öèôðîé èëè áóêâîé¤inline bool is_alnum (const char chr, code_t code) {¤	bool result = false;¤	result = is_alpha (chr, code) || is_digit (chr, code);¤	return result;¤}¤¤static const char* WORDS_DELIMETERS = " ,.\"\'(){}=-\\|/:;[]\r\n\t";¤¤// ïðîâåðêà ñèìâîëà íà òî, ÷òî îí ÿâëÿåòñÿ ñèìâîëîì ðàçäåëèòåëåì¤inline bool is_delimiter (const char chr) {¤	return strchr (WORDS_DELIMETERS, chr) != 0;¤}¤¤// ïðîâåðêà ñèìâîëà íà íèæíèé ðåãèñòð (ìàëåíüêèå áóêâû)¤inline bool is_lower (const char chr, code_t code) {¤	bool result;¤¤	switch (code) {¤		case cd_win_pseudo:¤		case cd_win: {¤			if (¤				((chr >= 'a') && (chr <= 'z'))¤				|| ((chr >= 'à') && (chr <= 'ÿ'))¤				|| (chr == '¸')¤			) {¤				result = true;¤			} else {¤				result = false;¤			}¤			break;¤		}¤¤		default: {¤			assert (false); // íåïîääåðæèâàÿìàÿ êîäèðîâêà¤			result = false;¤		}¤	}¤¤	return result;¤}¤¤// ïðîâåðêà ñèìâîëà íà âåðõíèé ðåãèñòð (áîëüøèå áóêâû)¤inline bool is_upper (const char chr, code_t code) {¤	bool result;¤¤	switch (code) {¤		case cd_win_pseudo:¤		case cd_win: {¤			if (¤				((chr >= 'A') && (chr <= 'Z'))¤				|| ((chr >= 'À') && (chr <= 'ß'))¤				|| (chr == '¨')¤			) {¤				result = true;¤			} else {¤				result = false;¤			}¤			break;¤		}¤¤		default: {¤			assert (false); // íåïîääåðæèâàÿìàÿ êîäèðîâêà¤			result = false;¤		}¤	}¤¤	return result;¤}¤¤// ïîèñê ïîäñòðîêè â ñòðîêå ñ ó÷åòîì ðåãèñòðà¤// âîçâðàùàåòñÿ óêàçàòåëü íàéäåííîé ïîäñòðîêè, â ïðîòèâíîì ñëó÷àå âîçâðàùàåòñÿ 0¤inline const char* find_sub_string (const char* string, const char* sub_string) {¤	if ((string == 0) || (sub_string == 0) || (*sub_string == '\0')) {¤		return string;¤	}¤¤	char* string_head = (char*)string;¤	while (*string_head != '\0') {¤		char* s1 = string_head;¤		char* s2 = (char*)sub_string;¤¤		while ((*s1 != '\0') && (*s2 != '\0') && !(*s1-*s2)) {¤			++s1;¤			++s2;¤		}¤¤		if (*s2 == '\0') {¤			break;¤		}¤¤		++string_head;¤	}¤¤	return *string_head != 0 ? string_head : 0;¤}¤¤// ïîèñê ïîäñòðîêè â ñòðîêå áåç ó÷åòîì ðåãèñòðà¤// âîçâðàùàåòñÿ óêàçàòåëü íàéäåííîé ïîäñòðîêè, â ïðîòèâíîì ñëó÷àå âîçâðàùàåòñÿ 0¤inline const char* find_sub_string_nocase (const char* string, const char* sub_string, code_t code) {¤	if ((string == 0) || (sub_string == 0) || (*sub_string == '\0')) {¤		return string;¤	}¤¤	char* string_head = (char*)string;¤	while (*string_head != '\0') {¤		char* s1 = string_head;¤		char* s2 = (char*)sub_string;¤¤		while ((*s1 != '\0') && (*s2 != '\0') && !(char_upper (*s1, code)-char_upper (*s2, code))) {¤			++s1;¤			++s2;¤		}¤¤		if (*s2 == '\0') {¤			break;¤		}¤¤		++string_head;¤	}¤¤	return *string_head != 0 ? string_head : 0;¤}¤¤//#UC END# *4503E01500CB*
			    ))
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"ifdef"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"is namespace"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"need UC"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (h)"
			    value      	"w:/shared/GCL/str/str_op.h")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"SELF GENERATED FILE (i.h)"
			    value      	"w:/shared/GCL/str/str_op.i.h"))
		    quid       	"4503E01500CB"
		    documentation 	"ðàçëè÷íûå îïåðàöèè ïðåîáðàçîâàíèÿ ñòðîê, ïîèñêà â ñòðîêå, çàìåíû ïîäñòðîê ñëèÿíèå ôðàãìåíòîâ è ò.ä."
		    stereotype 	"UtilityPack"
		    used_nodes 	(list uses_relationship_list
			(object Uses_Relationship
			    quid       	"4504225A031C"
			    supplier   	"Logical View::shared::GCL::str::str_conv"
			    quidu      	"4503DFAE006D")
			(object Uses_Relationship
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"450422640109"
			    supplier   	"Logical View::shared::GCL::data::std_defs"
			    quidu      	"44FEBDF3039B"))
		    language   	"MDA Generator"))
	    logical_presentations 	(list unit_reference_list
		(object ClassDiagram "Main"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ColorizeFor"
			    value      	"44FEAD4A0272"))
		    quid       	"4503DFA903D8"
		    title      	"Main"
		    zoom       	100
		    max_height 	28350
		    max_width  	21600
		    origin_x   	0
		    origin_y   	0
		    items      	(list diagram_item_list
			(object ClassView "Class" "Logical View::shared::GCL::str::str_conv" @140
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(951, 201)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@140
				location   	(801, 171)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"str_conv")
			    stereotype 	(object ItemLabel
				Parent_View 	@140
				location   	(801, 121)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4503DFAE006D"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @141
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4503DFAE006D"))
			    location   	(1374, 207)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@141
				location   	(1189, 141)
				fill_color 	13434879
				nlines     	3
				max_width  	334
				justify    	1
				label      	
|{need UC:=true}
|{need impl-file:=true}
|{need inline-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	394
			    height     	144)
			(object AttachView "" @142
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@141
			    supplier   	@140
			    vertices   	(list Points
				(1176, 204)
				(1110, 203))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::str::str_op" @143
			    ShowCompartmentStereotypes 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(951, 561)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@143
				location   	(801, 531)
				fill_color 	13434879
				nlines     	1
				max_width  	300
				justify    	0
				label      	"str_op")
			    stereotype 	(object ItemLabel
				Parent_View 	@143
				location   	(801, 481)
				fill_color 	13434879
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	14145535
			    quidu      	"4503E01500CB"
			    width      	318
			    height     	184
			    annotation 	8
			    autoResize 	TRUE)
			(object NoteView @144
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"LinkedItemGuid"
				    value      	"4503E01500CB"))
			    location   	(1383, 561)
			    font       	(object Font
				size       	8
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@144
				location   	(1189, 499)
				fill_color 	13434879
				nlines     	3
				max_width  	352
				justify    	1
				label      	
|{need UC:=true}
|{need inline-file:=true}
				)
			    line_color 	3342489
			    fill_color 	13434879
			    width      	412
			    height     	137)
			(object AttachView "" @145
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    client     	@144
			    supplier   	@143
			    vertices   	(list Points
				(1176, 561)
				(1110, 561))
			    line_style 	0)
			(object UsesView "" @146
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"4504225A031C"
			    client     	@143
			    supplier   	@140
			    vertices   	(list Points
				(951, 468)
				(951, 293))
			    line_style 	0)
			(object ClassView "Class" "Logical View::shared::GCL::data::std_defs" @147
			    ShowCompartmentStereotypes 	TRUE
			    SuppressAttribute 	TRUE
			    SuppressOperation 	TRUE
			    IncludeAttribute 	TRUE
			    IncludeOperation 	TRUE
			    ShowOperationSignature 	TRUE
			    location   	(489, 207)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object ItemLabel
				Parent_View 	@147
				location   	(339, 180)
				nlines     	1
				max_width  	300
				justify    	0
				label      	"std_defs")
			    stereotype 	(object ItemLabel
				Parent_View 	@147
				location   	(339, 130)
				anchor     	10
				nlines     	1
				max_width  	297
				justify    	0
				label      	"<<UtilityPack>>")
			    icon_style 	"Label"
			    fill_color 	16777215
			    quidu      	"44FEBDF3039B"
			    width      	318
			    height     	178
			    annotation 	8
			    autoResize 	TRUE)
			(object UsesView "" @148
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3947680
			    quidu      	"450422640109"
			    client     	@143
			    supplier   	@147
			    vertices   	(list Points
				(830, 468)
				(605, 296))
			    line_style 	0))))))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ColorizeFor"
		    value      	"44FEAD4A0272"))
	    quid       	"44FEB6A90224"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object CategoryView "Logical View::shared::GCL::data" @149
		    location   	(363, 978)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@149
			location   	(219, 943)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"data")
		    stereotype 	(object ItemLabel
			Parent_View 	@149
			location   	(219, 893)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"44FEB6B3010B"
		    width      	300
		    height     	182)
		(object CategoryView "Logical View::shared::GCL::alg" @150
		    location   	(789, 987)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@150
			location   	(645, 952)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"alg")
		    stereotype 	(object ItemLabel
			Parent_View 	@150
			location   	(645, 902)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"44FEE24001F5"
		    width      	300
		    height     	182)
		(object CategoryView "Logical View::shared::GCL::math" @151
		    location   	(1191, 969)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@151
			location   	(1047, 934)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"math")
		    stereotype 	(object ItemLabel
			Parent_View 	@151
			location   	(1047, 884)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"45018D5E036B"
		    width      	300
		    height     	182)
		(object CategoryView "Logical View::shared::GCL::mt" @152
		    location   	(348, 573)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@152
			location   	(204, 538)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"mt")
		    stereotype 	(object ItemLabel
			Parent_View 	@152
			location   	(204, 488)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"4501A1FD0177"
		    width      	300
		    height     	182)
		(object CategoryView "Logical View::external::ace::Task" @153
		    location   	(345, 174)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@153
			location   	(201, 139)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"Task")
		    stereotype 	(object ItemLabel
			Parent_View 	@153
			location   	(201, 89)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"450293FE0261"
		    width      	300
		    height     	182)
		(object ImportView "" @154
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"450294EE006D"
		    client     	@152
		    supplier   	@153
		    vertices   	(list Points
			(346, 427)
			(345, 265))
		    line_style 	0)
		(object CategoryView "Logical View::shared::GCL::network" @155
		    location   	(942, 585)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@155
			location   	(798, 550)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"network")
		    stereotype 	(object ItemLabel
			Parent_View 	@155
			location   	(798, 500)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"4503D56703A9"
		    width      	300
		    height     	182)
		(object CategoryView "Logical View::shared::GCL::os" @156
		    location   	(354, 1725)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@156
			location   	(210, 1690)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"os")
		    stereotype 	(object ItemLabel
			Parent_View 	@156
			location   	(210, 1640)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"4503DD5F01B5"
		    width      	300
		    height     	182)
		(object CategoryView "Logical View::shared::GCL::str" @157
		    location   	(681, 1362)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@157
			location   	(537, 1327)
			fill_color 	13434879
			nlines     	2
			max_width  	288
			justify    	0
			label      	"str")
		    stereotype 	(object ItemLabel
			Parent_View 	@157
			location   	(537, 1277)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	288
			justify    	0
			label      	"<<Unit>>")
		    icon_style 	"Label"
		    fill_color 	14145535
		    quidu      	"4503DF990167"
		    width      	300
		    height     	182)
		(object ImportView "" @158
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"450420D70251"
		    client     	@156
		    supplier   	@149
		    vertices   	(list Points
			(355, 1579)
			(361, 1069))
		    line_style 	0)
		(object ImportView "" @159
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"450422870399"
		    client     	@157
		    supplier   	@149
		    vertices   	(list Points
			(559, 1216)
			(438, 1069))
		    line_style 	0)
		(object ImportView "" @160
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"450422ED00DA"
		    client     	@156
		    supplier   	@157
		    vertices   	(list Points
			(483, 1579)
			(597, 1453))
		    line_style 	0)))))
