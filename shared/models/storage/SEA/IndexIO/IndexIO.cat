
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.061205"
    charSet    	204)

(object Class_Category "IndexAPI"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"WikiPageID (wiki)"
	    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI|47164681030F
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"NESTED GENERATED WikiPageID (wiki)"
	    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/Data|4718A1B40079::4718A1B40079;New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/FixedIndex|471899FF00ED::471899FF00ED;New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/IndexAlreadyExists|471C5FE70393::471C5FE70393;New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/IndexConfig|471C5DE702C0::471C5DE702C0;New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/IndexDoesNotExists|471C806D013A::471C806D013A;New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/IndexDoesNotExist|471C806D013A::471C806D013A;New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/Index|471899FF00ED::471899FF00ED;New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/KeyExceedsBitBoundary|471CC27C0212::471CC27C0212;New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/Key|4718A24201E2::4718A24201E2
	    ))
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (fctr.h)"
	    value      	"w:/Storage/SEA/IndexAPI/IndexAPIFactories.h")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (fctr.cpp)"
	    value      	"w:/Storage/SEA/IndexAPI/IndexAPIFactories.cpp")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (cpp)"
	    value      	"w:/Storage/SEA/IndexAPI/IndexAPI.cpp")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (h)"
	    value      	"w:/Storage/SEA/IndexAPI/IndexAPI.h")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (cpp)"
	    value      	"file")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (wiki)"
	    value      	"wiki")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (h)"
	    value      	"file")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (fctr.h)"
	    value      	"file")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SourceType (fctr.cpp)"
	    value      	"file"))
    quid       	"47164681030F"
    documentation 	"Интерфейсы работы с индексами"
    stereotype 	"Interfaces"
    visible_categories 	(list visibility_relationship_list
	(object Visibility_Relationship
	    quid       	"471C960402C6"
	    supplier   	"Logical View::Storage::SEA::DatabaseAPI"
	    quidu      	"471899F00037"))
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "FixedIndex"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/FixedIndex|471899FF00ED
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4727210E0156_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4727210E0156_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_db (0)¤//#UC END# *471899FF00ED_471C7F68009B_4727210E0156_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4727210E0156_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4727210E0156_BODY*¤	LOG_I (("BERKELEY %s (Create) transoff DB_BTREE %s", GDS_CURRENT_FUNCTION, m_config.name));¤	mem_key.name_arg = m_config.name;¤	try {¤		m_db = new Db (&m_db_local->get_db_env (), 0);¤		m_db->set_bt_compare (my_bt_compare);¤		m_db->set_pagesize (64*1024);¤		m_db->open (0, m_config.name, 0, DB_BTREE, DB_CREATE, 0);¤		this->save_config ();¤	} catch (DbException& e) {¤		// If Db::open fails, the Db::close method must be called to discard the Db handle.¤		this->close ();¤		LOG_E (("BERKELEY %s (Create): e.what () = %s", GDS_CURRENT_FUNCTION,  e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *471899FF00ED_471C7F68009B_4727210E0156_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4727210E0156_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4727210E0156_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_db (0)¤//#UC END# *471899FF00ED_471C7F98035A_4727210E0156_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4727210E0156_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4727210E0156_BODY*¤	LOG_I (("BERKELEY %s (Open) transoff DB_BTREE %s", GDS_CURRENT_FUNCTION, m_config.name));¤	try {¤		m_db = new Db (&m_db_local->get_db_env (), 0);¤		m_db->set_bt_compare (my_bt_compare);¤		m_db->set_pagesize (64*1024);¤		m_db->open (0, m_config.name, 0, DB_BTREE, 0, 0);¤		this->load_config ();¤		assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤		assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	} catch (DbException& e) {¤		// If Db::open fails, the Db::close method must be called to discard the Db handle.¤		this->close ();¤		LOG_E (("BERKELEY %s (Open): e.what () = %s", GDS_CURRENT_FUNCTION, e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *471899FF00ED_471C7F98035A_4727210E0156_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4727210E0156_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4727210E0156_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_db (0)¤//#UC END# *471899FF00ED_471DD3880039_4727210E0156_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4727210E0156_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4727210E0156_BODY*¤	LOG_I (("BERKELEY %s (OpenRo) DB_BTREE %s", GDS_CURRENT_FUNCTION, m_config.name));¤	try {¤		m_db = new Db (&m_db_local->get_db_env (), 0);¤		m_db->set_bt_compare (my_bt_compare);¤		m_db->set_pagesize (64*1024);¤		m_db->open (0, m_config.name, 0, DB_BTREE, DB_RDONLY, 0);¤		this->load_config ();¤		assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤		assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	} catch (DbException& e) {¤		// If Db::open fails, the Db::close method must be called to discard the Db handle.¤		this->close ();¤		LOG_E (("BERKELEY %s (OpenRo): e.what () = %s", GDS_CURRENT_FUNCTION, e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *471899FF00ED_471DD3880039_4727210E0156_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_474812320256_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F68009B_474812320256_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_row_sql_statement (idx_cfg.name)¤, m_trans (0)¤, m_statistics_count (0)¤, m_max_statistics_count (DatabaseIO::FireBirdParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F68009B_474812320256_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_474812320256_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_474812320256_BODY*¤	LOG_I (("FIREBIRD FixedIndex_i::FixedIndex_i (Create) transoff %s", m_config.name));¤	mem_key.name_arg = m_config.name;¤	// create an SQL statement for table creation¤    char create_tbl_sql_statement_buf [1024];¤	sprintf (create_tbl_sql_statement_buf, "CREATE TABLE %s (id INTEGER NOT NULL, buf CHAR (%d))", m_config.name, 2*m_config.data_size); // use 0x encoding¤	LOG_I (("FIREBIRD FixedIndex_i::FixedIndex_i (Create): SQL = %s", create_tbl_sql_statement_buf));¤	long sqlcode = 0; // useful sql code to extract from status - error number¤    // Create a sample table ¤	isc_start_transaction (m_status, &m_trans, 1, m_db_local->get_db (), m_tpb.isc_tpb_len, m_tpb.isc_tpb);¤	if (isc_dsql_execute_immediate (m_status, m_db_local->get_db (), &m_trans, 0, create_tbl_sql_statement_buf, 1, 0)) {¤		isc_print_status (m_status);¤		sqlcode = isc_sqlcode(m_status);¤		LOG_E (("FIREBIRD FixedIndex_i::FixedIndex_i (Create): table error, sqlcode = %d", sqlcode));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤    isc_commit_transaction (m_status, &m_trans);¤	unsigned long param_create_index = DatabaseIO::FireBirdParams::get_create_index();¤	if (param_create_index != 0) {¤		char create_idx_sql_statement_buf [1024];¤		sprintf (create_idx_sql_statement_buf, "CREATE UNIQUE INDEX keyidx%s ON %s (id)", m_config.name, m_config.name);¤		LOG_I (("FIREBIRD FixedIndex_i::FixedIndex_i (Create): SQL = %s", create_idx_sql_statement_buf));¤		// Create index on table ¤		isc_start_transaction (m_status, &m_trans, 1, m_db_local->get_db (), m_tpb.isc_tpb_len, m_tpb.isc_tpb);¤		if (isc_dsql_execute_immediate (m_status, m_db_local->get_db (), &m_trans, 0, create_idx_sql_statement_buf, 1, 0)) {¤			isc_print_status (m_status);¤			sqlcode = isc_sqlcode(m_status);¤			LOG_E (("FIREBIRD FixedIndex_i::FixedIndex_i (Create): index error, sqlcode = %d", sqlcode));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		isc_commit_transaction (m_status, &m_trans);¤	}¤	this->dsql_compile_stmt ();¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤	char config_buf [2*sizeof (SEA::IndexAPI::IndexConfig)];¤	bin_to_Ox (&tmp_config, config_buf, sizeof (SEA::IndexAPI::IndexConfig));¤	SEA::IndexAPI::IndexConfig tmp_config2;¤	Ox_to_bin (config_buf, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	int r = ACE_OS::memcmp (&tmp_config, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	assert (r == 0);¤#endif¤	this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_474812320256_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_474812320256_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F98035A_474812320256_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_row_sql_statement (name)¤, m_trans (0)¤, m_statistics_count (0)¤, m_max_statistics_count (DatabaseIO::FireBirdParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F98035A_474812320256_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_474812320256_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_474812320256_BODY*¤	LOG_I (("FIREBIRD FixedIndex_i::FixedIndex_i (Open) transoff %s", m_config.name));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	this->dsql_compile_stmt ();¤	//#UC END# *471899FF00ED_471C7F98035A_474812320256_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_474812320256_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471DD3880039_474812320256_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_row_sql_statement (name)¤, m_trans (0)¤, m_tpb (true) // read-only¤, m_statistics_count (0)¤, m_max_statistics_count (DatabaseIO::FireBirdParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471DD3880039_474812320256_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_474812320256_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_474812320256_BODY*¤	LOG_I (("FIREBIRD FixedIndex_i::FixedIndex_i (OpenRo) %s", m_config.name));¤// begin extra_optimize¤unsigned long extra_optimize = DatabaseIO::FireBirdParams::get_extra_optimize();¤if (extra_optimize) {¤	LOG_I (("FIREBIRD FixedIndex_i::FixedIndex_i (OpenRo) -extra_optimize isc_tpb_read"));¤}¤// end extra_optimize¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	this->dsql_compile_stmt ();¤	//#UC END# *471899FF00ED_471DD3880039_474812320256_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4756E04101A4_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F68009B_4756E04101A4_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_field_info (0)¤, m_tag_info (0)¤, m_db_file (0)¤, m_statistics_count (0)¤, m_max_statistics_count (DatabaseIO::CodebaseParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F68009B_4756E04101A4_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4756E04101A4_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4756E04101A4_BODY*¤	LOG_I (("CODEBASE FixedIndex_i::FixedIndex_i (Create) %s", m_config.name));¤	mem_key.name_arg = m_config.name;¤	m_db_file_path = m_db_local->get_root_path () + "\\" + m_config.name + ".dbf";¤	m_field_info = new Field4info (*(m_db_local->get_db_env ()));¤	m_field_info->add ("KEY", r4num, m_config.key_size);¤	m_field_info->add ("DATA", r4str, m_config.data_size);¤	m_tag_info = new Tag4info (*(m_db_local->get_db_env ()));¤	m_tag_info->add ("TAG_KEY", "KEY");¤	m_db_file = new Data4 ();¤	int rc = m_db_file->create (*(m_db_local->get_db_env ()), m_db_file_path.c_str (), *m_field_info, *m_tag_info);¤	if (!m_db_file->isValid ()) {¤		if (rc == r4noCreate) {¤			LOG_E (("CODEBASE FixedIndex_i::FixedIndex_i (Create): error = %d, like DatabaseAlreadyExists", rc));¤			throw SEA::DatabaseAPI::DatabaseAlreadyExists ();¤		}¤		LOG_E (("CODEBASE FixedIndex_i::FixedIndex_i (Create): error = %d", rc));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	this->init_fields ("FixedIndex_i::FixedIndex_i (Create)");¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤#endif¤	this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_4756E04101A4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4756E04101A4_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F98035A_4756E04101A4_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_field_info (0)¤, m_tag_info (0)¤, m_db_file (0)¤, m_statistics_count (0)¤, m_max_statistics_count (CodebaseAdapter::DatabaseIO::CodebaseParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F98035A_4756E04101A4_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4756E04101A4_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4756E04101A4_BODY*¤	LOG_I (("CODEBASE FixedIndex_i::FixedIndex_i (Open) %s", m_config.name));¤	m_db_file_path = m_db_local->get_root_path () + "\\" + m_config.name + ".dbf";¤	m_db_file = new Data4 ();¤	int rc = m_db_file->open (*(m_db_local->get_db_env ()), m_db_file_path.c_str ());¤	if (!m_db_file->isValid ()) {¤		if (rc == r4noExist) {¤			LOG_E (("CODEBASE FixedIndex_i::FixedIndex_i (Open): error = %d, like DatabaseDoesNotExist", rc));¤			throw SEA::DatabaseAPI::DatabaseDoesNotExist ();¤		}¤		LOG_E (("CODEBASE FixedIndex_i::FixedIndex_i (Open): error = %d", rc));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	this->init_fields ("FixedIndex_i::FixedIndex_i (Open)");¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471C7F98035A_4756E04101A4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4756E04101A4_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471DD3880039_4756E04101A4_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_field_info (0)¤, m_tag_info (0)¤, m_db_file (0)¤, m_statistics_count (0)¤, m_max_statistics_count (DatabaseIO::CodebaseParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471DD3880039_4756E04101A4_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4756E04101A4_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4756E04101A4_BODY*¤	LOG_I (("CODEBASE FixedIndex_i::FixedIndex_i (OpenRo) %s", m_config.name));¤	m_db_file_path = m_db_local->get_root_path () + "\\" + m_config.name + ".dbf";¤	m_db_file = new Data4 ();¤	int rc = m_db_file->open (*(m_db_local->get_db_env ()), m_db_file_path.c_str ());¤	if (!m_db_file->isValid ()) {¤		if (rc == r4noExist) {¤			LOG_E (("CODEBASE FixedIndex_i::FixedIndex_i (OpenRo): error = %d, like DatabaseDoesNotExist", rc));¤			throw SEA::DatabaseAPI::DatabaseDoesNotExist ();¤		}¤		LOG_E (("CODEBASE FixedIndex_i::FixedIndex_i (OpenRo): error = %d", rc));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	this->init_fields ("FixedIndex_i::FixedIndex_i (OpenRo)");¤	m_db_local->get_db_env ()->optStart ();¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471DD3880039_4756E04101A4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_47664F7400C0_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_47664F7400C0_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_clone_index (0)¤//#UC END# *471899FF00ED_471C7F68009B_47664F7400C0_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_47664F7400C0_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_47664F7400C0_BODY*¤	LOG_I (("NDTCLONE %s (Create) transoff %s", GDS_CURRENT_FUNCTION, m_config.name));¤	mem_key.name_arg = m_config.name;¤	std::string root_path_slash = m_db_local->get_root_path () + "\\";¤	m_clone_index = new NdtClone::CloneIndex (root_path_slash.c_str (), m_config.name, false);¤	this->save_config ();¤	//#UC END# *471899FF00ED_471C7F68009B_47664F7400C0_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_47664F7400C0_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_47664F7400C0_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_clone_index (0)¤//#UC END# *471899FF00ED_471C7F98035A_47664F7400C0_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_47664F7400C0_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_47664F7400C0_BODY*¤	LOG_I (("NDTCLONE %s (Open) transoff %s", GDS_CURRENT_FUNCTION, m_config.name));¤	std::string root_path_slash = m_db_local->get_root_path () + "\\";¤	m_clone_index = new NdtClone::CloneIndex (root_path_slash.c_str (), m_config.name, false);¤	this->load_config ();¤	//#UC END# *471899FF00ED_471C7F98035A_47664F7400C0_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_47664F7400C0_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_47664F7400C0_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_clone_index (0)¤//#UC END# *471899FF00ED_471DD3880039_47664F7400C0_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_47664F7400C0_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_47664F7400C0_BODY*¤	LOG_I (("NDTCLONE %s (OpenRo) %s", GDS_CURRENT_FUNCTION, m_config.name));¤	std::string root_path_slash = m_db_local->get_root_path () + "\\";¤	m_clone_index = new NdtClone::CloneIndex (root_path_slash.c_str (), m_config.name, true);¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471DD3880039_47664F7400C0_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_476939D7005D_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_476939D7005D_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_tabdesc (0)¤, m_keydesc (0)¤, m_datadesc (0)¤, m_recdesc (0)¤//#UC END# *471899FF00ED_471C7F68009B_476939D7005D_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_476939D7005D_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_476939D7005D_BODY*¤	LOG_I (("EMPRESS FixedIndex_i::FixedIndex_i (Create) %s", m_config.name));¤	mem_key.name_arg = m_config.name;¤    char create_tbl_sql_statement_buf [1024];¤	sprintf (create_tbl_sql_statement_buf, "CREATE TABLE %s (id LONGINTEGER NOT NULL, buf CHAR (%d))", m_config.name, 2*m_config.data_size); // use 0x encoding¤	LOG_I (("EMPRESS FixedIndex_i::FixedIndex_i (Create): mscall SQL = %s", create_tbl_sql_statement_buf));¤	int result = mscall (const_cast <char *> (m_db_servant->m_db_name.c_str ()), create_tbl_sql_statement_buf);¤	if (result != 0) {¤		LOG_E (("EMPRESS FixedIndex_i::FixedIndex_i (Create): table error = %d", mroperr));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	char create_idx_sql_statement_buf [1024];¤	sprintf (create_idx_sql_statement_buf, "CREATE UNIQUE INDEX keyidx%s ON %s (id)", m_config.name, m_config.name);¤	LOG_I (("EMPRESS FixedIndex_i::FixedIndex_i (Create): mscall SQL = %s", create_idx_sql_statement_buf));¤	int result2 = mscall (const_cast <char *> (m_db_servant->m_db_name.c_str ()), create_idx_sql_statement_buf);¤	if (result2 != 0) {¤		LOG_E (("EMPRESS FixedIndex_i::FixedIndex_i (Create): table error = %d", mroperr));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	this->init_desc ("FixedIndex_i::FixedIndex_i (Create)", false);¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤	char config_buf [2*sizeof (SEA::IndexAPI::IndexConfig)];¤	bin_to_Ox (&tmp_config, config_buf, sizeof (SEA::IndexAPI::IndexConfig));¤	SEA::IndexAPI::IndexConfig tmp_config2;¤	Ox_to_bin (config_buf, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	int r = ACE_OS::memcmp (&tmp_config, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	assert (r == 0);¤#endif¤	this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_476939D7005D_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_476939D7005D_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_476939D7005D_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_tabdesc (0)¤, m_keydesc (0)¤, m_datadesc (0)¤, m_recdesc (0)¤//#UC END# *471899FF00ED_471C7F98035A_476939D7005D_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_476939D7005D_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_476939D7005D_BODY*¤	LOG_I (("EMPRESS FixedIndex_i::FixedIndex_i (Open) %s", m_config.name));¤	this->init_desc ("FixedIndex_i::FixedIndex_i (Open)", false);¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471C7F98035A_476939D7005D_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_476939D7005D_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_476939D7005D_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_tabdesc (0)¤, m_keydesc (0)¤, m_datadesc (0)¤, m_recdesc (0)¤//#UC END# *471899FF00ED_471DD3880039_476939D7005D_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_476939D7005D_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_476939D7005D_BODY*¤	LOG_I (("EMPRESS FixedIndex_i::FixedIndex_i (OpenRo) %s", m_config.name));¤	this->init_desc ("FixedIndex_i::FixedIndex_i (OpenRo)", true);¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471DD3880039_476939D7005D_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_476A3CDD0003_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F68009B_476A3CDD0003_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_table_handle (-1)¤, m_statistics_count (0)¤, m_max_statistics_count (HytechIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F68009B_476A3CDD0003_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_476A3CDD0003_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_476A3CDD0003_BODY*¤	LOG_I (("HYTECH FixedIndex_i::FixedIndex_i (Create) transoff (voba) %s", m_config.name));¤	mem_key.name_arg = m_config.name;¤	std::string root_path_slash = m_db_servant->m_root_path + "\\" + m_config.name;¤	m_table_handle = HytechDLL::CreateTable (const_cast <char*> (root_path_slash.c_str ()), m_config.data_size);¤	if (m_table_handle == -1) {¤		LOG_E (("HYTECH FixedIndex_i::FixedIndex_i (Create): error = m_table_handle = %d", m_table_handle));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤#endif¤	this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_476A3CDD0003_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_476A3CDD0003_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F98035A_476A3CDD0003_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_table_handle (-1)¤, m_statistics_count (0)¤, m_max_statistics_count (HytechIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F98035A_476A3CDD0003_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_476A3CDD0003_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_476A3CDD0003_BODY*¤	LOG_I (("HYTECH FixedIndex_i::FixedIndex_i (Open) transoff (voba) %s", m_config.name));¤	std::string root_path_slash = m_db_servant->m_root_path + "\\" + m_config.name;¤	m_table_handle = HytechDLL::OpenTable (const_cast <char*> (root_path_slash.c_str ()));¤	if (m_table_handle == -1) {¤		LOG_E (("HYTECH FixedIndex_i::FixedIndex_i (Open): error = m_table_handle = %d", m_table_handle));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471C7F98035A_476A3CDD0003_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_476A3CDD0003_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471DD3880039_476A3CDD0003_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_table_handle (-1)¤, m_statistics_count (0)¤, m_max_statistics_count (HytechIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471DD3880039_476A3CDD0003_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_476A3CDD0003_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_476A3CDD0003_BODY*¤	LOG_I (("HYTECH FixedIndex_i::FixedIndex_i (OpenRo) %s", m_config.name));¤	std::string root_path_slash = m_db_servant->m_root_path + "\\" + m_config.name;¤	m_table_handle = HytechDLL::OpenTable (const_cast <char*> (root_path_slash.c_str ()));¤	if (m_table_handle == -1) {¤		LOG_E (("HYTECH FixedIndex_i::FixedIndex_i (OpenRo): error = m_table_handle = %d", m_table_handle));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471DD3880039_476A3CDD0003_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_478B8CAA02CE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_478B8CAA02CE_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤//#UC END# *471899FF00ED_471C7F68009B_478B8CAA02CE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_478B8CAA02CE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_478B8CAA02CE_BODY*¤	LOG_I (("MONETDB FixedIndex_i::FixedIndex_i (Create) %s", m_config.name));¤	mem_key.name_arg = m_config.name;¤    char create_tbl_sql_statement_buf [1024];¤	sprintf (create_tbl_sql_statement_buf, "CREATE TABLE %s (id BIGINT NOT NULL, buf CHAR (%d))", m_config.name, 2*m_config.data_size); // use 0x encoding¤	LOG_I (("MONETDB FixedIndex_i::FixedIndex_i (Create): mapi_query SQL = %s", create_tbl_sql_statement_buf));¤	MapiHdl hdl = mapi_query (m_db_servant->s_dbh, create_tbl_sql_statement_buf);¤	MapiMsg msg = mapi_error (m_db_servant->s_dbh);¤	if ((hdl == 0) || (msg != 0)) {¤		LOG_E (("MONETDB FixedIndex_i::FixedIndex_i (Create): mapi_error = %d, mapi_result_error = %s", (int) msg, mapi_result_error (hdl)));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	char create_idx_sql_statement_buf [1024];¤	sprintf (create_idx_sql_statement_buf, "CREATE UNIQUE INDEX keyidx%s ON %s (id)", m_config.name, m_config.name);¤	LOG_I (("MONETDB FixedIndex_i::FixedIndex_i (Create): mapi_query SQL = %s", create_idx_sql_statement_buf));¤	MapiHdl hdl2 = mapi_query (m_db_servant->s_dbh, create_idx_sql_statement_buf);¤	MapiMsg msg2 = mapi_error (m_db_servant->s_dbh);¤	if ((hdl2 == 0) || (msg2 != 0)) {¤		LOG_E (("MONETDB FixedIndex_i::FixedIndex_i (Create): mapi_error = %d, mapi_result_error = %s", (int) msg2, mapi_result_error (hdl2)));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤	char config_buf [2*sizeof (SEA::IndexAPI::IndexConfig)];¤	bin_to_Ox (&tmp_config, config_buf, sizeof (SEA::IndexAPI::IndexConfig));¤	SEA::IndexAPI::IndexConfig tmp_config2;¤	Ox_to_bin (config_buf, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	int r = ACE_OS::memcmp (&tmp_config, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	assert (r == 0);¤#endif¤	this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_478B8CAA02CE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_478B8CAA02CE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_478B8CAA02CE_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤//#UC END# *471899FF00ED_471C7F98035A_478B8CAA02CE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_478B8CAA02CE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_478B8CAA02CE_BODY*¤	LOG_I (("MONETDB FixedIndex_i::FixedIndex_i (Load) %s", m_config.name));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471C7F98035A_478B8CAA02CE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_478B8CAA02CE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_478B8CAA02CE_BASE_INIT*¤: m_db_servant (dynamic_cast <DatabaseIO::Database_i*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤//#UC END# *471899FF00ED_471DD3880039_478B8CAA02CE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_478B8CAA02CE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_478B8CAA02CE_BODY*¤	LOG_I (("MONETDB FixedIndex_i::FixedIndex_i (LoadRo) %s", m_config.name));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471DD3880039_478B8CAA02CE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4795FB8F025B_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F68009B_4795FB8F025B_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_row_sql_statement (idx_cfg.name)¤, m_statistics_count (0)¤, m_max_statistics_count (MysqlIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F68009B_4795FB8F025B_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4795FB8F025B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4795FB8F025B_BODY*¤	LOG_I (("MYSQL FixedIndex_i::FixedIndex_i (Create) %s", m_config.name));¤	mem_key.name_arg = m_config.name;¤	// create an SQL statement for table creation¤    char create_tbl_sql_statement_buf [1024];¤	sprintf (create_tbl_sql_statement_buf, "CREATE TABLE %s (id BIGINT NOT NULL, buf CHAR (%d) NOT NULL) ROW_FORMAT=FIXED ENGINE=MYISAM", m_config.name, 2*m_config.data_size); // use 0x encoding¤	LOG_I (("MYSQL FixedIndex_i::FixedIndex_i (Create): SQL = %s", create_tbl_sql_statement_buf));¤	int res = mysql_query (m_db_local->get_mysqlh (), create_tbl_sql_statement_buf);¤	if (res != 0) {¤		LOG_E (("MYSQL FixedIndex_i::FixedIndex_i (Create): IOError, mysql_errno/mysql_error = %d/%s", mysql_errno (m_db_local->get_mysqlh ()), mysql_error (m_db_local->get_mysqlh ())));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	unsigned long param_create_index = MysqlIndexParams::get_create_index();¤	if (param_create_index != 0) {¤		char create_idx_sql_statement_buf [1024];¤		sprintf (create_idx_sql_statement_buf, "CREATE UNIQUE INDEX keyidx%s ON %s (id)", m_config.name, m_config.name);¤		LOG_I (("MYSQL FixedIndex_i::FixedIndex_i (Create): SQL = %s", create_idx_sql_statement_buf));¤		int resi = mysql_query (m_db_local->get_mysqlh (), create_idx_sql_statement_buf);¤		if (resi != 0) {¤			LOG_E (("MYSQL FixedIndex_i::FixedIndex_i (Create): IOError, mysql_errno/mysql_error = %d/%s", mysql_errno (m_db_local->get_mysqlh ()), mysql_error (m_db_local->get_mysqlh ())));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	}¤	this->dsql_compile_stmt ();¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤	char config_buf [2*sizeof (SEA::IndexAPI::IndexConfig)];¤	bin_to_Ox (&tmp_config, config_buf, sizeof (SEA::IndexAPI::IndexConfig));¤	SEA::IndexAPI::IndexConfig tmp_config2;¤	Ox_to_bin (config_buf, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	int r = ACE_OS::memcmp (&tmp_config, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	assert (r == 0);¤#endif¤	this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_4795FB8F025B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4795FB8F025B_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F98035A_4795FB8F025B_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_row_sql_statement (name)¤, m_statistics_count (0)¤, m_max_statistics_count (MysqlIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F98035A_4795FB8F025B_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4795FB8F025B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4795FB8F025B_BODY*¤	LOG_I (("MYSQL FixedIndex_i::FixedIndex_i (Open) %s", m_config.name));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	this->dsql_compile_stmt ();¤	//#UC END# *471899FF00ED_471C7F98035A_4795FB8F025B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4795FB8F025B_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471DD3880039_4795FB8F025B_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_row_sql_statement (name)¤, m_statistics_count (0)¤, m_max_statistics_count (MysqlIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471DD3880039_4795FB8F025B_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4795FB8F025B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4795FB8F025B_BODY*¤	LOG_I (("MYSQL FixedIndex_i::FixedIndex_i (OpenRo) %s", m_config.name));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	this->dsql_compile_stmt ();¤	//#UC END# *471899FF00ED_471DD3880039_4795FB8F025B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_47CD39C10050_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_47CD39C10050_BASE_INIT*¤: m_config (idx_cfg)¤, m_object_already_exists (DatabaseIO::DummyParams::get_object_already_exists ())¤//#UC END# *471899FF00ED_471C7F68009B_47CD39C10050_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_47CD39C10050_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_47CD39C10050_BODY*¤	LOG_I (("DUMMY FixedIndex_i::FixedIndex_i (Create) %s (%d)", m_config.name, (int) m_object_already_exists));¤	mem_key.name_arg = m_config.name;¤	this->init_config ();¤	//#UC END# *471899FF00ED_471C7F68009B_47CD39C10050_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_47CD39C10050_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_47CD39C10050_BASE_INIT*¤: m_config (name)¤, m_object_already_exists (DatabaseIO::DummyParams::get_object_already_exists ())¤//#UC END# *471899FF00ED_471C7F98035A_47CD39C10050_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_47CD39C10050_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_47CD39C10050_BODY*¤	LOG_I (("DUMMY FixedIndex_i::FixedIndex_i (Open) %s (%d)", m_config.name, (int) m_object_already_exists));¤	this->init_config ();¤	//#UC END# *471899FF00ED_471C7F98035A_47CD39C10050_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_47CD39C10050_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_47CD39C10050_BASE_INIT*¤: m_config (name)¤, m_object_already_exists (DatabaseIO::DummyParams::get_object_already_exists ())¤//#UC END# *471899FF00ED_471DD3880039_47CD39C10050_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_47CD39C10050_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_47CD39C10050_BODY*¤	LOG_I (("DUMMY FixedIndex_i::FixedIndex_i (OpenRo) %s (%d)", m_config.name, (int) m_object_already_exists));¤	this->init_config ();¤	//#UC END# *471899FF00ED_471DD3880039_47CD39C10050_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_47D7D8C4013F_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F68009B_47D7D8C4013F_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_statistics_count (0)¤, m_max_statistics_count (PostgresIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F68009B_47D7D8C4013F_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_47D7D8C4013F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_47D7D8C4013F_BODY*¤	LOG_I (("POSTGRES FixedIndex_i::FixedIndex_i (Create) %s", m_config.name));¤	mem_key.name_arg = m_config.name;¤	// create an SQL statement for table creation¤    char create_tbl_sql_statement_buf [1024];¤	sprintf (create_tbl_sql_statement_buf, "CREATE TABLE %s (id ltree PRIMARY KEY NOT NULL, buf CHAR (%d) NOT NULL, h hstore NULL)", m_config.name, 2*m_config.data_size); // use 0x encoding¤	LOG_I (("POSTGRES FixedIndex_i::FixedIndex_i (Create): SQL = %s", create_tbl_sql_statement_buf));¤	PGresult* res = PQexec (m_db_local->get_connection (), create_tbl_sql_statement_buf);¤	if (PQresultStatus (res) != PGRES_COMMAND_OK) {¤		LOG_E (("POSTGRES FixedIndex_i::FixedIndex_i (Create): SQL failed = %s (%s)", create_tbl_sql_statement_buf, PQerrorMessage (m_db_local->get_connection ())));¤		PQclear (res);¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	PQclear (res);¤	¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤	char config_buf [2*sizeof (SEA::IndexAPI::IndexConfig)];¤	bin_to_Ox (&tmp_config, config_buf, sizeof (SEA::IndexAPI::IndexConfig));¤	SEA::IndexAPI::IndexConfig tmp_config2;¤	Ox_to_bin (config_buf, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	int r = ACE_OS::memcmp (&tmp_config, &tmp_config2, sizeof (SEA::IndexAPI::IndexConfig));¤	assert (r == 0);¤#endif¤	this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_47D7D8C4013F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_47D7D8C4013F_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471C7F98035A_47D7D8C4013F_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_statistics_count (0)¤, m_max_statistics_count (PostgresIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471C7F98035A_47D7D8C4013F_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_47D7D8C4013F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_47D7D8C4013F_BODY*¤	LOG_I (("POSTGRES FixedIndex_i::FixedIndex_i (Open) %s", m_config.name));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471C7F98035A_47D7D8C4013F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_47D7D8C4013F_BASE_INIT*"
		    value      	(value Text "//#UC START# *471899FF00ED_471DD3880039_47D7D8C4013F_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_statistics_count (0)¤, m_max_statistics_count (PostgresIndexParams::get_max_statistics_count())¤//#UC END# *471899FF00ED_471DD3880039_47D7D8C4013F_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_47D7D8C4013F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_47D7D8C4013F_BODY*¤	LOG_I (("POSTGRES FixedIndex_i::FixedIndex_i (OpenRo) %s", m_config.name));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471DD3880039_47D7D8C4013F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_48C7B3BC0231_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_48C7B3BC0231_BASE_INIT*¤	: m_db_local (dynamic_cast <const DatabaseIO::LocalDatabase*> (db))¤	, m_config (idx_cfg)¤	, m_readonly (false)¤//#UC END# *471899FF00ED_471C7F68009B_48C7B3BC0231_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_48C7B3BC0231_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_48C7B3BC0231_BODY*¤	LOG_I (("MMAP FixedIndex_i::FixedIndex_i (Create) %s", m_config.name));¤	GDS_ASSERT (m_db_local)¤¤	mem_key.name_arg = m_config.name;¤	¤	std::string path_file_name ¤		= SEA::DatabaseAPI::DatabaseParams::get_db_root_dir () ¤		+ std::string ("\\") ¤		+ m_db_local->get_config ().name;¤	¤	ACE_OS::mkdir (path_file_name.c_str ());¤¤	path_file_name += std::string ("\\") + m_config.name;¤	long long real_file_size = MMAP_FILE_SIZE;¤	long long min_obj_sz = (long long) m_config.data_size;¤	m_memory_index.open ((path_file_name + std::string (".mem")).c_str (), real_file_size, min_obj_sz);¤	LOG_I (("MMAP_FILE_SIZE = %Q, real_file_size = %Q, min_obj_sz = %Q", MMAP_FILE_SIZE, real_file_size, min_obj_sz));¤¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤#endif¤¤	this->save_config ();¤¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤¤	//m_memory_index.flush ();¤	this->load_config ();¤¤	GDS_ASSERT (tmp_config.key_size == m_config.key_size);¤	GDS_ASSERT (tmp_config.data_size == m_config.data_size);¤	GDS_ASSERT (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_48C7B3BC0231_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_48C7B3BC0231_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_48C7B3BC0231_BASE_INIT*¤	: m_db_local (dynamic_cast <const DatabaseIO::LocalDatabase*> (db))¤	, m_config (name)¤	, m_readonly (false)¤//#UC END# *471899FF00ED_471C7F98035A_48C7B3BC0231_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_48C7B3BC0231_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_48C7B3BC0231_BODY*¤	LOG_I (("MMAP FixedIndex_i::FixedIndex_i (Open) %s", m_config.name));¤	GDS_ASSERT (m_db_local)¤¤	long long real_file_size = MMAP_FILE_SIZE;¤	long long min_obj_sz = 0;¤	std::string path_file_name ¤		= SEA::DatabaseAPI::DatabaseParams::get_db_root_dir ()¤		+ std::string ("\\") ¤		+ m_db_local->get_config ().name¤		+ std::string ("\\") ¤		+ m_config.name¤		+ ".mem";¤¤	m_memory_index.open (path_file_name.c_str(), real_file_size, min_obj_sz);¤	LOG_I (("MMAP_FILE_SIZE = %Q, real_file_size = %Q, min_obj_sz = %Q", MMAP_FILE_SIZE, real_file_size, min_obj_sz));¤¤	this->load_config ();¤	¤	GDS_ASSERT (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	GDS_ASSERT (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471C7F98035A_48C7B3BC0231_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_48C7B3BC0231_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_48C7B3BC0231_BASE_INIT*¤	: m_db_local (dynamic_cast <const DatabaseIO::LocalDatabase*> (db))¤	, m_config (name)¤	, m_readonly (true)¤//#UC END# *471899FF00ED_471DD3880039_48C7B3BC0231_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_48C7B3BC0231_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_48C7B3BC0231_BODY*¤	LOG_I (("MMAP FixedIndex_i::FixedIndex_i (OpenRo) %s", m_config.name));¤	GDS_ASSERT (m_db_local)¤	¤	long long real_file_size = MMAP_FILE_SIZE;¤	long long min_obj_sz = 0;¤	std::string path_file_name ¤		= SEA::DatabaseAPI::DatabaseParams::get_db_root_dir () ¤		+ std::string ("\\") ¤		+ m_db_local->get_config ().name¤		+ std::string ("\\")¤		+ m_config.name¤		+ ".mem";¤	¤	m_memory_index_ro.open (path_file_name.c_str (), real_file_size, min_obj_sz);¤	LOG_I (("MMAP_FILE_SIZE = %Q, real_file_size = %Q, min_obj_sz = %Q", MMAP_FILE_SIZE, real_file_size, min_obj_sz));¤	¤	this->load_config_ro ();¤	¤	GDS_ASSERT (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	GDS_ASSERT (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471DD3880039_48C7B3BC0231_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_492AB3A001BE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_492AB3A001BE_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_db (0)¤//#UC END# *471899FF00ED_471C7F68009B_492AB3A001BE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_492AB3A001BE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_492AB3A001BE_BODY*¤	LOG_I (("BDBQUEUE FixedIndex_i::FixedIndex_i (Create) transoff DB_QUEUE %s", m_config.name));¤	mem_key.name_arg = m_config.name;¤	try {¤¤		m_db = new Db (&m_db_local->get_db_env (), 0);¤		m_db->set_re_len (m_config.data_size);¤		m_db->set_re_pad (0);¤		m_db->set_pagesize (64*1024);¤		//m_db->set_q_extentsize (1000);¤		m_db->open (0, m_config.name, 0, DB_QUEUE, DB_CREATE, 0);¤¤#if defined (_DEBUG)¤		SEA::IndexAPI::IndexConfig tmp_config = m_config;¤#endif¤		this->save_config ();¤#if defined (_DEBUG)¤		ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤		m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤		this->load_config ();¤		assert (tmp_config.key_size == m_config.key_size);¤		assert (tmp_config.data_size == m_config.data_size);¤		assert (tmp_config.name == m_config.name);¤#endif¤	} catch (DbException& e) {¤		// If Db::open fails, the Db::close method must be called to discard the Db handle.¤		this->close ();¤		LOG_E (("BDBQUEUE FixedIndex_i::FixedIndex_i (Create): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *471899FF00ED_471C7F68009B_492AB3A001BE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_492AB3A001BE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_492AB3A001BE_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_db (0)¤//#UC END# *471899FF00ED_471C7F98035A_492AB3A001BE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_492AB3A001BE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_492AB3A001BE_BODY*¤	LOG_I (("BDBQUEUE FixedIndex_i::FixedIndex_i (Open) transoff DB_QUEUE %s", m_config.name));¤	try {¤¤		m_db = new Db (&m_db_local->get_db_env (), 0);¤		m_db->set_re_len (m_config.data_size);¤		m_db->set_re_pad (0);¤		m_db->set_pagesize (64*1024);¤		//m_db->set_q_extentsize (1000);¤		m_db->open (0, m_config.name, 0, DB_QUEUE, 0, 0);¤¤		this->load_config ();¤		assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤		assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	} catch (DbException& e) {¤		// If Db::open fails, the Db::close method must be called to discard the Db handle.¤		this->close ();¤		LOG_E (("BDBQUEUE FixedIndex_i::FixedIndex_i (Open): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *471899FF00ED_471C7F98035A_492AB3A001BE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_492AB3A001BE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_492AB3A001BE_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_db (0)¤//#UC END# *471899FF00ED_471DD3880039_492AB3A001BE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_492AB3A001BE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_492AB3A001BE_BODY*¤	LOG_I (("BDBQUEUE FixedIndex_i::FixedIndex_i (OpenRo) DB_QUEUE %s", m_config.name));¤	try {¤¤		m_db = new Db (&m_db_local->get_db_env (), 0);¤		m_db->set_re_len (m_config.data_size);¤		m_db->set_re_pad (0);¤		m_db->set_pagesize (64*1024);¤		//m_db->set_q_extentsize (1000);¤		m_db->open (0, m_config.name, 0, DB_QUEUE, DB_RDONLY, 0);¤¤		this->load_config ();¤		assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤		assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	} catch (DbException& e) {¤		// If Db::open fails, the Db::close method must be called to discard the Db handle.¤		this->close ();¤		LOG_E (("BDBQUEUE FixedIndex_i::FixedIndex_i (OpenRo): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *471899FF00ED_471DD3880039_492AB3A001BE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49738EF9014F_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_49738EF9014F_BASE_INIT*¤	, m_index_config(idx_cfg)¤//#UC END# *471899FF00ED_471C7F68009B_49738EF9014F_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49738EF9014F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_49738EF9014F_BODY*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *471899FF00ED_471C7F68009B_49738EF9014F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49738EF9014F_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_49738EF9014F_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_49738EF9014F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49738EF9014F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_49738EF9014F_BODY*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *471899FF00ED_471C7F98035A_49738EF9014F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49738EF9014F_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_49738EF9014F_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_49738EF9014F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49738EF9014F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_49738EF9014F_BODY*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *471899FF00ED_471DD3880039_49738EF9014F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_499EA6300016_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_499EA6300016_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_xxl_map (0)¤, m_io_vector (0)¤, m_io_file (0)¤//#UC END# *471899FF00ED_471C7F68009B_499EA6300016_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_499EA6300016_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_499EA6300016_BODY*¤	LOG_I (("STXXLMAP %s (Create): m_config.name = %s", GDS_CURRENT_FUNCTION, m_config.name));¤	LOG_I (("sizeof (key_type) = %u", sizeof (key_type)));¤	LOG_I (("sizeof (data_type) = %u", sizeof (data_type)));¤	LOG_I (("STXXLMAP BLOCK_SIZE (node & leaf) = %Q", BLOCK_SIZE));¤	LOG_I (("STXXLMAP NODE_CACHE_SIZE = %Q", NODE_CACHE_SIZE));¤	LOG_I (("STXXLMAP LEAF_CACHE_SIZE = %Q", LEAF_CACHE_SIZE));¤	mem_key.name_arg = m_config.name;¤	m_config.key_size = sizeof (key_type);¤	m_config.data_size = sizeof (data_type);¤	m_xxl_map = new map_type (NODE_CACHE_SIZE, LEAF_CACHE_SIZE);¤	m_xxl_map->enable_prefetching ();¤	std::string root_path_slash = m_db_local->get_root_path () + std::string ("\\") + std::string (m_config.name);¤	m_io_file = new stxxl::syscall_file (root_path_slash.c_str (), stxxl::file::RDWR | stxxl::file::CREAT);¤	m_io_vector = new vector_type (m_io_file);¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤#endif¤	//this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_499EA6300016_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_499EA6300016_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_499EA6300016_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_xxl_map (0)¤, m_io_vector (0)¤, m_io_file (0)¤//#UC END# *471899FF00ED_471C7F98035A_499EA6300016_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_499EA6300016_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_499EA6300016_BODY*¤	LOG_I (("STXXLMAP %s (Open): m_config.name = %s", GDS_CURRENT_FUNCTION, m_config.name));¤	m_xxl_map = new map_type (NODE_CACHE_SIZE, LEAF_CACHE_SIZE);¤	m_xxl_map->enable_prefetching ();¤	std::string root_path_slash = m_db_local->get_root_path () + std::string ("\\") + std::string (m_config.name);¤	m_io_file = new stxxl::syscall_file (root_path_slash.c_str (), stxxl::file::RDWR);¤	m_io_vector = new vector_type (m_io_file);¤	LOG_I (("m_io_vector->size () = %Q", (unsigned long long) m_io_vector->size ()));¤	for (vector_type::const_iterator it = m_io_vector->begin (); it != m_io_vector->end (); ++it) {¤		//LOG_I (("it->first = %Q", it->first));¤		(*m_xxl_map) [it->first] = it->second;¤	}¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471C7F98035A_499EA6300016_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_499EA6300016_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_499EA6300016_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_xxl_map (0)¤, m_io_vector (0)¤, m_io_file (0)¤//#UC END# *471899FF00ED_471DD3880039_499EA6300016_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_499EA6300016_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_499EA6300016_BODY*¤	LOG_I (("STXXLMAP %s (OpenRo): m_config.name = %s", GDS_CURRENT_FUNCTION, m_config.name));¤	m_xxl_map = new map_type (NODE_CACHE_SIZE, LEAF_CACHE_SIZE);¤	m_xxl_map->enable_prefetching ();¤	std::string root_path_slash = m_db_local->get_root_path () + std::string ("\\") + std::string (m_config.name);¤	m_io_file = new stxxl::syscall_file (root_path_slash.c_str (), stxxl::file::RDONLY);¤	m_io_vector = new vector_type (m_io_file);¤	LOG_I (("m_io_vector->size () = %Q", (unsigned long long) m_io_vector->size ()));¤	for (vector_type::const_iterator it = m_io_vector->begin (); it != m_io_vector->end (); ++it) {¤		//LOG_I (("it->first = %Q", it->first));¤		(*m_xxl_map) [it->first] = it->second;¤	}¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	delete m_io_vector;¤	m_io_vector = 0;¤	delete m_io_file;¤	m_io_file = 0;¤	//#UC END# *471899FF00ED_471DD3880039_499EA6300016_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49AD37370343_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_49AD37370343_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤//#UC END# *471899FF00ED_471C7F68009B_49AD37370343_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49AD37370343_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_49AD37370343_BODY*¤	LOG_I (("BLOOM %s (Create) %s", GDS_CURRENT_FUNCTION, m_config.name));¤	mem_key.name_arg = m_config.name;¤	//#UC END# *471899FF00ED_471C7F68009B_49AD37370343_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49AD37370343_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_49AD37370343_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤//#UC END# *471899FF00ED_471C7F98035A_49AD37370343_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49AD37370343_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_49AD37370343_BODY*¤	LOG_I (("BLOOM %s (Open) %s", GDS_CURRENT_FUNCTION, m_config.name));¤	//#UC END# *471899FF00ED_471C7F98035A_49AD37370343_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49AD37370343_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_49AD37370343_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤//#UC END# *471899FF00ED_471DD3880039_49AD37370343_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49AD37370343_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_49AD37370343_BODY*¤	LOG_I (("BLOOM %s (OpenRo) %s", GDS_CURRENT_FUNCTION, m_config.name));¤	//#UC END# *471899FF00ED_471DD3880039_49AD37370343_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49B6561C006B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_49B6561C006B_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_49B6561C006B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49B6561C006B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_49B6561C006B_BODY*¤	mem_key.name_arg = idx_cfg.name;¤	//#UC END# *471899FF00ED_471C7F68009B_49B6561C006B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49B6561C006B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_49B6561C006B_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_49B6561C006B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49B6561C006B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_49B6561C006B_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_49B6561C006B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49B6561C006B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_49B6561C006B_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_49B6561C006B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49B6561C006B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_49B6561C006B_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_49B6561C006B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49C8E09A02A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_49C8E09A02A8_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (idx_cfg)¤, m_io_vector (0)¤, m_io_file (0)¤//#UC END# *471899FF00ED_471C7F68009B_49C8E09A02A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49C8E09A02A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_49C8E09A02A8_BODY*¤	LOG_I (("STXXLVECTOR %s (Create): m_config.name = %s", GDS_CURRENT_FUNCTION, m_config.name));¤	mem_key.name_arg = m_config.name;¤	std::string root_path_slash = m_db_local->get_root_path () + std::string ("\\") + std::string (m_config.name);¤	m_io_file = new stxxl::syscall_file (root_path_slash.c_str (), stxxl::file::RDWR | stxxl::file::CREAT);¤	m_io_vector = new vector_type (m_io_file.in ());¤	static unsigned long stxxl_vector_size = StxxlvectorSettings::get_stxxl_vector_size ();¤	m_io_vector->reserve (stxxl_vector_size);¤#if defined (_DEBUG)¤	SEA::IndexAPI::IndexConfig tmp_config = m_config;¤#endif¤	this->save_config ();¤#if defined (_DEBUG)¤	ACE_OS::memset (&m_config, 0, sizeof (SEA::IndexAPI::IndexConfig));¤	m_config.name = tmp_config.name; // WARNING saving index name seems to be unnecessary¤	this->load_config ();¤	assert (tmp_config.key_size == m_config.key_size);¤	assert (tmp_config.data_size == m_config.data_size);¤	assert (tmp_config.name == m_config.name);¤#endif¤	//#UC END# *471899FF00ED_471C7F68009B_49C8E09A02A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49C8E09A02A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_49C8E09A02A8_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_io_vector (0)¤, m_io_file (0)¤//#UC END# *471899FF00ED_471C7F98035A_49C8E09A02A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49C8E09A02A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_49C8E09A02A8_BODY*¤	LOG_I (("STXXLVECTOR %s (Open): m_config.name = %s", GDS_CURRENT_FUNCTION, m_config.name));¤	std::string root_path_slash = m_db_local->get_root_path () + std::string ("\\") + std::string (m_config.name);¤	m_io_file = new stxxl::syscall_file (root_path_slash.c_str (), stxxl::file::RDWR);¤	m_io_vector = new vector_type (m_io_file.in ());¤	LOG_I (("m_io_vector->size () = %Q", (unsigned long long) m_io_vector->size ()));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471C7F98035A_49C8E09A02A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49C8E09A02A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_49C8E09A02A8_BASE_INIT*¤: m_db_local (dynamic_cast <DatabaseIO::LocalDatabase*> (const_cast <SEA::DatabaseAPI::Database*> (db)))¤, m_config (name)¤, m_io_vector (0)¤, m_io_file (0)¤//#UC END# *471899FF00ED_471DD3880039_49C8E09A02A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49C8E09A02A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_49C8E09A02A8_BODY*¤	LOG_I (("STXXLVECTOR %s (OpenRo): m_config.name = %s", GDS_CURRENT_FUNCTION, m_config.name));¤	std::string root_path_slash = m_db_local->get_root_path () + std::string ("\\") + std::string (m_config.name);¤	m_io_file = new stxxl::syscall_file (root_path_slash.c_str (), stxxl::file::RDONLY);¤	m_io_vector = new vector_type (m_io_file.in ());¤	LOG_I (("m_io_vector->size () = %Q", (unsigned long long) m_io_vector->size ()));¤	this->load_config ();¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	assert (m_config.data_size >= sizeof (SEA::IndexAPI::IndexConfig));¤	//#UC END# *471899FF00ED_471DD3880039_49C8E09A02A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49EDCBCF03A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_49EDCBCF03A8_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_49EDCBCF03A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_49EDCBCF03A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_49EDCBCF03A8_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_49EDCBCF03A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49EDCBCF03A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_49EDCBCF03A8_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_49EDCBCF03A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_49EDCBCF03A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_49EDCBCF03A8_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_49EDCBCF03A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49EDCBCF03A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_49EDCBCF03A8_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_49EDCBCF03A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_49EDCBCF03A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_49EDCBCF03A8_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_49EDCBCF03A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_474812320256_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_474812320256_BASE_INIT*¤: m_row_sql_statement (idx_cfg.name)¤//#UC END# *471899FF00ED_4A097B270017_474812320256_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_474812320256_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_474812320256_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_474812320256_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_474812320256_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_474812320256_BASE_INIT*¤: m_row_sql_statement (name)¤//#UC END# *471899FF00ED_4A097B8D01E8_474812320256_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_474812320256_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_474812320256_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_474812320256_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_474812320256_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_474812320256_BASE_INIT*¤: m_row_sql_statement (name)¤//#UC END# *471899FF00ED_4A097BD802A2_474812320256_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_474812320256_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_474812320256_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_474812320256_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4756E04101A4_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4756E04101A4_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_4756E04101A4_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4756E04101A4_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4756E04101A4_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_4756E04101A4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4756E04101A4_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4756E04101A4_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_4756E04101A4_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4756E04101A4_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4756E04101A4_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_4756E04101A4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4756E04101A4_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4756E04101A4_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_4756E04101A4_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4756E04101A4_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4756E04101A4_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_4756E04101A4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_47664F7400C0_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_47664F7400C0_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_47664F7400C0_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_47664F7400C0_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_47664F7400C0_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_47664F7400C0_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_47664F7400C0_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_47664F7400C0_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_47664F7400C0_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_47664F7400C0_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_47664F7400C0_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_47664F7400C0_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_47664F7400C0_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_47664F7400C0_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_47664F7400C0_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_47664F7400C0_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_47664F7400C0_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_47664F7400C0_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4795FB8F025B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4795FB8F025B_BASE_INIT*¤: m_row_sql_statement (idx_cfg.name)¤//#UC END# *471899FF00ED_4A097B270017_4795FB8F025B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4795FB8F025B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4795FB8F025B_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_4795FB8F025B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4795FB8F025B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4795FB8F025B_BASE_INIT*¤: m_row_sql_statement (name)¤//#UC END# *471899FF00ED_4A097B8D01E8_4795FB8F025B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4795FB8F025B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4795FB8F025B_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_4795FB8F025B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4795FB8F025B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4795FB8F025B_BASE_INIT*¤: m_row_sql_statement (name)¤//#UC END# *471899FF00ED_4A097BD802A2_4795FB8F025B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4795FB8F025B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4795FB8F025B_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_4795FB8F025B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_47CD39C10050_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_47CD39C10050_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_47CD39C10050_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_47CD39C10050_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_47CD39C10050_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_47CD39C10050_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_47CD39C10050_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_47CD39C10050_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_47CD39C10050_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_47CD39C10050_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_47CD39C10050_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_47CD39C10050_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_47CD39C10050_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_47CD39C10050_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_47CD39C10050_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_47CD39C10050_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_47CD39C10050_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_47CD39C10050_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_47D7D8C4013F_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_47D7D8C4013F_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_47D7D8C4013F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_47D7D8C4013F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_47D7D8C4013F_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_47D7D8C4013F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_47D7D8C4013F_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_47D7D8C4013F_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_47D7D8C4013F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_47D7D8C4013F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_47D7D8C4013F_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_47D7D8C4013F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_47D7D8C4013F_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_47D7D8C4013F_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_47D7D8C4013F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_47D7D8C4013F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_47D7D8C4013F_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_47D7D8C4013F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_48C7B3BC0231_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_48C7B3BC0231_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_48C7B3BC0231_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_48C7B3BC0231_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_48C7B3BC0231_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_48C7B3BC0231_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_48C7B3BC0231_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_48C7B3BC0231_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_48C7B3BC0231_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_48C7B3BC0231_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_48C7B3BC0231_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_48C7B3BC0231_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_48C7B3BC0231_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_48C7B3BC0231_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_48C7B3BC0231_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_48C7B3BC0231_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_48C7B3BC0231_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_48C7B3BC0231_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49738EF9014F_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_49738EF9014F_BASE_INIT*¤	, m_index_config(idx_cfg)¤	, m_last_key(0)¤//#UC END# *471899FF00ED_4A097B270017_49738EF9014F_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49738EF9014F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_49738EF9014F_BODY*¤	std::string	file_index_name = SEA::DatabaseAPI::DatabaseParams::get_db_root_dir(); ¤	file_index_name += "\\";¤	file_index_name += dynamic_cast<const LocalDatabase*> (db)->get_data_base_config().name;¤	file_index_name += idx_cfg.name;¤	file_index_name += ".dat";¤¤	m_objects_count = idx_cfg.buffer_size*8/(idx_cfg.data_size*8+1);¤	m_bitmap_size = (unsigned long)std::ceil((float)m_objects_count/8);¤¤	GCI::MMap::FileForMem_var file = GCI::MMap::FileForMemFactory::create(¤		file_index_name.c_str()¤		, idx_cfg.data_size¤		, FILE_ATTRIBUTE_NORMAL¤	);¤¤	size_t inside_ofset;¤	GCI::MMap::Memory_var memory = file->get_memory(0, sizeof(SEA::IndexAPI::IndexConfig), inside_ofset);¤	memcpy(¤		(unsigned char*)memory->get_base_addr() + inside_ofset¤		, &m_index_config¤		, sizeof(SEA::IndexAPI::IndexConfig)¤	);¤	//#UC END# *471899FF00ED_4A097B270017_49738EF9014F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49738EF9014F_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_49738EF9014F_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_49738EF9014F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49738EF9014F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_49738EF9014F_BODY*¤	std::string	file_index_name = SEA::DatabaseAPI::DatabaseParams::get_db_root_dir(); ¤	file_index_name += "\\";¤	file_index_name += dynamic_cast<const LocalDatabase*> (db)->get_data_base_config().name;¤	file_index_name += name;¤	file_index_name += ".dat";¤¤	unsigned long db_increase = MMapPoolParam::get_db_increase();¤	GCI::MMap::FileForMem_var file;¤	try {¤		file = GCI::MMap::FileForMemFactory::open(file_index_name.c_str(), FILE_ATTRIBUTE_NORMAL, db_increase);¤	} catch(GCI::MMap::SysError& e) {¤		if(e.get_code() == ERROR_FILE_NOT_FOUND) {¤			throw SEA::IndexAPI::IndexDoesNotExist();¤		}¤	}¤	¤	size_t inside_ofset;¤	GCI::MMap::Memory_cvar memory = file->get_memory(0, sizeof(SEA::IndexAPI::IndexConfig), inside_ofset);¤	memcpy(¤		&m_index_config¤		, (unsigned char*)memory->get_base_addr() + inside_ofset¤		, sizeof(SEA::IndexAPI::IndexConfig)¤	);¤¤	GDS_ASSERT_MSG (m_index_config.key_size != 0, ("Index key size must be !=0"));¤	GDS_ASSERT_MSG (m_index_config.data_size != 0, ("Index data size must be !=0"));¤	GDS_ASSERT_MSG (m_index_config.buffer_size != 0, ("Index pool buffer size must be != 0"));¤¤	m_objects_count = m_index_config.buffer_size*8/(m_index_config.data_size*8+1);¤	m_bitmap_size = (unsigned long)std::ceil((float)m_objects_count/8);¤¤	GCI::MMap::MemoryPool& memory_pool = GCI::MMap::MemoryPoolFactory::get();¤	file->set_memory_offset(sizeof(SEA::IndexAPI::IndexConfig));¤	m_large_memory = memory_pool.get_large_memory(file.in(), m_index_config.buffer_size, true);¤	load_last_key();¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_49738EF9014F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49738EF9014F_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_49738EF9014F_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_49738EF9014F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49738EF9014F_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_49738EF9014F_BODY*¤	std::string	file_index_name = SEA::DatabaseAPI::DatabaseParams::get_db_root_dir(); ¤	file_index_name += "\\";¤	file_index_name += db->get_database_config().name;¤	file_index_name += name;¤	file_index_name += ".dat";¤¤	unsigned long db_increase = MMapPoolParam::get_db_increase();¤	GCI::MMap::FileForMem_cvar file;¤	try {¤		file = GCI::MMap::FileForMemFactory::open_ro(file_index_name.c_str(), FILE_ATTRIBUTE_NORMAL, db_increase);¤	} catch(GCI::MMap::SysError& e) {¤		if(e.get_code() == ERROR_FILE_NOT_FOUND) {¤			throw SEA::IndexAPI::IndexDoesNotExist();¤		}¤	}¤	¤	size_t inside_ofset;¤	GCI::MMap::Memory_cvar memory = file->get_memory(0, sizeof(SEA::IndexAPI::IndexConfig), inside_ofset);¤	memcpy(&m_index_config¤		, (unsigned char*)memory->get_base_addr() + inside_ofset¤		, sizeof(SEA::IndexAPI::IndexConfig)¤	);¤¤	GDS_ASSERT_MSG (m_index_config.key_size != 0, ("Index key size must be !=0"));¤	GDS_ASSERT_MSG (m_index_config.data_size != 0, ("Index data size must be !=0"));¤	GDS_ASSERT_MSG (m_index_config.buffer_size != 0, ("Index pool buffer size must be != 0"));¤¤	m_objects_count = m_index_config.buffer_size*8/(m_index_config.data_size*8+1);¤	m_bitmap_size = (unsigned long)std::ceil((float)m_objects_count/8);¤¤	GCI::MMap::MemoryPool& memory_pool = GCI::MMap::MemoryPoolFactory::get();¤	const_cast<GCI::MMap::FileForMem*>(file.ptr())->upgrade_rw();¤	const_cast<GCI::MMap::FileForMem*>(file.ptr())->set_memory_offset(sizeof(SEA::IndexAPI::IndexConfig));¤	m_large_memory = const_cast<GCI::MMap::LargeMemory*>(¤		memory_pool.get_large_memory(¤			file.in()¤			, m_index_config.buffer_size¤			, true¤		)¤	);¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097BD802A2_49738EF9014F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_492AB3A001BE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_492AB3A001BE_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_492AB3A001BE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_492AB3A001BE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_492AB3A001BE_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_492AB3A001BE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_492AB3A001BE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_492AB3A001BE_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_492AB3A001BE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_492AB3A001BE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_492AB3A001BE_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_492AB3A001BE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_492AB3A001BE_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_492AB3A001BE_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_492AB3A001BE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_492AB3A001BE_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_492AB3A001BE_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_492AB3A001BE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_499EA6300016_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_499EA6300016_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_499EA6300016_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_499EA6300016_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_499EA6300016_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_499EA6300016_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_499EA6300016_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_499EA6300016_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_499EA6300016_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_499EA6300016_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_499EA6300016_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_499EA6300016_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_499EA6300016_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_499EA6300016_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_499EA6300016_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_499EA6300016_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_499EA6300016_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_499EA6300016_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49AD37370343_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_49AD37370343_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_49AD37370343_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49AD37370343_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_49AD37370343_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_49AD37370343_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49AD37370343_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_49AD37370343_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_49AD37370343_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49AD37370343_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_49AD37370343_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_49AD37370343_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49AD37370343_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_49AD37370343_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_49AD37370343_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49AD37370343_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_49AD37370343_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_49AD37370343_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49B6561C006B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_49B6561C006B_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_49B6561C006B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49B6561C006B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_49B6561C006B_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_49B6561C006B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49B6561C006B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_49B6561C006B_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_49B6561C006B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49B6561C006B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_49B6561C006B_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_49B6561C006B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49B6561C006B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_49B6561C006B_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_49B6561C006B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49B6561C006B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_49B6561C006B_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_49B6561C006B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49C8E09A02A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_49C8E09A02A8_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_49C8E09A02A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49C8E09A02A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_49C8E09A02A8_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_49C8E09A02A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49C8E09A02A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_49C8E09A02A8_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_49C8E09A02A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49C8E09A02A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_49C8E09A02A8_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_49C8E09A02A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49C8E09A02A8_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_49C8E09A02A8_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_49C8E09A02A8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49C8E09A02A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_49C8E09A02A8_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_49C8E09A02A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49EDCBCF03A8_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_49EDCBCF03A8_BASE_INIT*¤	, m_index_config(idx_cfg)¤	, m_mphf_hash(NULL)¤//#UC END# *471899FF00ED_4A097B270017_49EDCBCF03A8_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_49EDCBCF03A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_49EDCBCF03A8_BODY*¤	PersistentMPHFAdapter::DatabaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentMPHFAdapter::DatabaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤¤	ACE_OS::mkdir (file_index_name.c_str ());¤¤	file_index_name += "\\";¤	file_index_name += (const char*)idx_cfg.index_name.data();¤	file_index_name += ".dat";¤¤	m_objects_count = idx_cfg.buffer_size/(idx_cfg.data_size + idx_cfg.user_id_len);¤¤	GCI::MMap::FileForMem_var file = GCI::MMap::FileForMemFactory::create(¤		file_index_name.c_str()¤		, idx_cfg.data_size¤		, FILE_ATTRIBUTE_NORMAL¤	);¤¤	size_t inside_ofset;¤	GCI::MMap::Memory_var memory = file->get_memory(0, sizeof(SEA::IndexAPI::IndexConfig), inside_ofset);¤	memcpy(¤		(unsigned char*)memory->get_base_addr() + inside_ofset¤		, &m_index_config¤		, sizeof(SEA::IndexAPI::IndexConfig)¤	);¤¤	unsigned long object_count = MPHFParams::get_generate_count();¤	if (object_count > 0) {¤		std::string data_file_name = MPHFParams::get_mphf_file_name();¤		if(data_file_name == "") {¤			data_file_name = local_db->get_path(); ¤			data_file_name += "\\";¤			data_file_name += local_db->get_name();¤			data_file_name += "\\";¤			data_file_name += (const char*)idx_cfg.index_name.data();¤			data_file_name += "_mphf";¤			data_file_name += ".dat";¤		}¤		generate_mphf(object_count, data_file_name);¤	}¤	//#UC END# *471899FF00ED_4A097B270017_49EDCBCF03A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49EDCBCF03A8_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_49EDCBCF03A8_BASE_INIT*¤	, m_mphf_hash(NULL)¤//#UC END# *471899FF00ED_4A097B8D01E8_49EDCBCF03A8_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_49EDCBCF03A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_49EDCBCF03A8_BODY*¤	PersistentMPHFAdapter::DatabaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentMPHFAdapter::DatabaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤	file_index_name += "\\";¤	file_index_name += name;¤	file_index_name += ".dat";¤	¤	unsigned long db_increase = MPHFParams::get_db_increase();¤	GCI::MMap::FileForMem_var file;¤	try {¤		file = GCI::MMap::FileForMemFactory::open(file_index_name.c_str(), FILE_ATTRIBUTE_NORMAL, db_increase);¤	} catch(GCI::MMap::SysError& e) {¤		if(e.get_code() == ERROR_FILE_NOT_FOUND) {¤			throw SEA::IndexAPI::IndexDoesNotExist();¤		} else {¤			throw SEA::DatabaseAPI::IOError();¤		}¤	}¤	¤	size_t inside_ofset;¤	GCI::MMap::Memory_cvar memory = file->get_memory(0, sizeof(SEA::IndexAPI::IndexConfig), inside_ofset);¤	memcpy(¤		&m_index_config¤		, (unsigned char*)memory->get_base_addr() + inside_ofset¤		, sizeof(SEA::IndexAPI::IndexConfig)¤	);¤¤	GDS_ASSERT_MSG (m_index_config.key_size != 0, ("Index key size must be !=0"));¤	GDS_ASSERT_MSG (m_index_config.data_size != 0, ("Index data size must be !=0"));¤	GDS_ASSERT_MSG (m_index_config.buffer_size != 0, ("Index pool buffer size must be != 0"));¤¤	m_objects_count = m_index_config.buffer_size/(m_index_config.data_size + m_index_config.user_id_len);¤¤	GCI::MMap::MemoryPool& memory_pool = GCI::MMap::MemoryPoolFactory::get();¤	file->set_memory_offset(sizeof(SEA::IndexAPI::IndexConfig));¤	m_large_memory = memory_pool.get_large_memory(file.in(), m_index_config.buffer_size, true);¤¤	std::string data_file_name = MPHFParams::get_mphf_file_name();¤	if(data_file_name == "") {¤		data_file_name = local_db->get_path(); ¤		data_file_name += "\\";¤		data_file_name += local_db->get_name();¤		data_file_name += "\\";¤		data_file_name += name;¤		data_file_name += "_mphf";¤		data_file_name += ".dat";¤	}¤¤	FILE* mphf_fd = fopen(data_file_name.c_str(), "rb");¤¤	if(!mphf_fd) {¤		LOG_E(("Couldn't open file with mphf:<%s>", data_file_name.c_str()));¤		throw Core::Root::InvalidParams();¤	}¤¤	m_mphf_hash = cmph_load(mphf_fd);¤¤	if(!m_mphf_hash) {¤		LOG_E(("Couldn't load mphf from file: <%s>", data_file_name.c_str()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	fclose(mphf_fd);¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_49EDCBCF03A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49EDCBCF03A8_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_49EDCBCF03A8_BASE_INIT*¤	, m_mphf_hash(NULL)¤//#UC END# *471899FF00ED_4A097BD802A2_49EDCBCF03A8_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_49EDCBCF03A8_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_49EDCBCF03A8_BODY*¤	PersistentMPHFAdapter::DatabaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentMPHFAdapter::DatabaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤	file_index_name += "\\";¤	file_index_name += name;¤	file_index_name += ".dat";¤¤	unsigned long db_increase = MPHFParams::get_db_increase();¤	GCI::MMap::FileForMem_cvar file;¤	try {¤		file = GCI::MMap::FileForMemFactory::open_ro(file_index_name.c_str(), FILE_ATTRIBUTE_NORMAL, db_increase);¤	} catch(GCI::MMap::SysError& e) {¤		if(e.get_code() == ERROR_FILE_NOT_FOUND) {¤			throw SEA::IndexAPI::IndexDoesNotExist();¤		} else {¤			throw SEA::DatabaseAPI::IOError();¤		}¤	}¤	¤	size_t inside_ofset;¤	GCI::MMap::Memory_cvar memory = file->get_memory(0, sizeof(SEA::IndexAPI::IndexConfig), inside_ofset);¤	memcpy(&m_index_config¤		, (unsigned char*)memory->get_base_addr() + inside_ofset¤		, sizeof(SEA::IndexAPI::IndexConfig)¤	);¤¤	GDS_ASSERT_MSG (m_index_config.key_size != 0, ("Index key size must be !=0"));¤	GDS_ASSERT_MSG (m_index_config.data_size != 0, ("Index data size must be !=0"));¤	GDS_ASSERT_MSG (m_index_config.buffer_size != 0, ("Index pool buffer size must be != 0"));¤¤	m_objects_count = m_index_config.buffer_size/(m_index_config.data_size + m_index_config.user_id_len);¤¤	GCI::MMap::MemoryPool& memory_pool = GCI::MMap::MemoryPoolFactory::get();¤	const_cast<GCI::MMap::FileForMem*>(file.ptr())->upgrade_rw();¤	const_cast<GCI::MMap::FileForMem*>(file.ptr())->set_memory_offset(sizeof(SEA::IndexAPI::IndexConfig));¤	m_large_memory = const_cast<GCI::MMap::LargeMemory*>(¤		memory_pool.get_large_memory(¤			file.in()¤			, m_index_config.buffer_size¤			, true¤		)¤	);¤¤	std::string data_file_name = MPHFParams::get_mphf_file_name();¤	if(data_file_name == "") {¤		data_file_name = local_db->get_path(); ¤		data_file_name += "\\";¤		data_file_name += local_db->get_name();¤		data_file_name += "\\";¤		data_file_name += name;¤		data_file_name += "_mphf";¤		data_file_name += ".dat";¤	}¤¤	FILE* mphf_fd = fopen(data_file_name.c_str(), "rb");¤	¤	if(!mphf_fd) {¤		LOG_E(("Couldn't open file with mphf:<%s>", data_file_name.c_str()));¤		throw Core::Root::InvalidParams();¤	}¤¤	m_mphf_hash = cmph_load(mphf_fd);¤¤	if(!m_mphf_hash) {¤		LOG_E(("Couldn't load mphf from file: <%s>", data_file_name.c_str()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	fclose(mphf_fd);¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097BD802A2_49EDCBCF03A8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4727210E0156_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4727210E0156_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_4727210E0156_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4727210E0156_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4727210E0156_BODY*¤	//#UC END# *471899FF00ED_4A097B270017_4727210E0156_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4727210E0156_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4727210E0156_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_4727210E0156_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4727210E0156_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4727210E0156_BODY*¤	//#UC END# *471899FF00ED_4A097B8D01E8_4727210E0156_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4727210E0156_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4727210E0156_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_4727210E0156_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4727210E0156_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4727210E0156_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_4727210E0156_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4A44B098031B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4A44B098031B_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_4A44B098031B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4A44B098031B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4A44B098031B_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_4A44B098031B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4A44B098031B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4A44B098031B_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_4A44B098031B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4A44B098031B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4A44B098031B_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_4A44B098031B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4A44B098031B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4A44B098031B_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_4A44B098031B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4A44B098031B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4A44B098031B_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_4A44B098031B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4A44B098031B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4A44B098031B_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_4A44B098031B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4A44B098031B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4A44B098031B_BODY*¤	PersistentBDBAdapter::dataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentBDBAdapter::dataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤¤	ACE_OS::mkdir (file_index_name.c_str ());¤¤	file_index_name += "\\";¤	file_index_name += (const char*)idx_cfg.index_name.data();¤	file_index_name += ".dat";¤¤	unsigned int page_size = PersistentBDBAdapter::IndexIO::IndexParams::get_page_size();¤	m_db = new Db (&local_db->get_db_env(), 0);¤¤	try {¤		m_db->set_bt_compare (my_bt_compare);¤		LOG_I (("%s (): m_db->set_pagesize (%u)", GDS_CURRENT_FUNCTION, page_size));¤		m_db->set_pagesize (page_size);¤		m_db->open (0, file_index_name.c_str(), 0, DB_BTREE, DB_CREATE, 0);¤¤		std::vector<unsigned char> byte_data(idx_cfg.key_size, 0);¤		Dbt key(&byte_data[0], idx_cfg.key_size);¤		key.set_flags(DB_DBT_USERMEM);¤		key.set_ulen(idx_cfg.key_size);¤		Dbt data((void*)&idx_cfg, sizeof(idx_cfg));¤		data.set_flags(DB_DBT_USERMEM);¤		data.set_ulen(sizeof(idx_cfg));¤¤		int ret = 0;¤		ret = m_db->put(0, &key, &data, 0);¤		if(ret) {¤			LOG_E (("BERKELEY %s : Can't save index config - error code <%d>", GDS_CURRENT_FUNCTION, ret));¤			throw SEA::DatabaseAPI::IOError();¤		}¤	} catch (DbException& e) {¤		LOG_E (("BERKELEY FixedIndex_i::FixedIndex_i (Open): e.what () = %s", e.what ()));¤		throw;¤	}¤	//#UC END# *471899FF00ED_4A097B270017_4A44B098031B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4A44B098031B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4A44B098031B_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_4A44B098031B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4A44B098031B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4A44B098031B_BODY*¤	PersistentBDBAdapter::dataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentBDBAdapter::dataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	unsigned int page_size = PersistentBDBAdapter::IndexIO::IndexParams::get_page_size();¤	m_db = new Db (&local_db->get_db_env(), 0);¤¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤	file_index_name += "\\";¤	file_index_name += name;¤	file_index_name += ".dat";¤¤	try {¤		m_db->set_bt_compare (my_bt_compare);¤		m_db->set_pagesize (page_size);¤		m_db->open (0, file_index_name.c_str(), 0, DB_BTREE, 0, 0);¤¤		std::vector<unsigned char> key_data(sizeof(SEA::IndexAPI::Key), 0);¤		Dbt key(&key_data[0], sizeof(SEA::IndexAPI::Key));¤		key.set_flags(DB_DBT_USERMEM);¤		key.set_ulen(sizeof(SEA::IndexAPI::Key));¤		std::vector<unsigned char> index_data(sizeof(SEA::IndexAPI::IndexConfig), 0);¤		Dbt data((void*)&index_data[0], sizeof(SEA::IndexAPI::IndexConfig));¤		data.set_flags(DB_DBT_USERMEM);¤		data.set_ulen(sizeof(SEA::IndexAPI::IndexConfig));¤¤		int ret = 0;¤		ret = m_db->get(0, &key, &data, 0);¤		if(ret) {¤			LOG_E (("BERKELEY %s : Can't get index config - error code <%d>", GDS_CURRENT_FUNCTION, ret));¤			throw SEA::DatabaseAPI::IOError();¤		}¤¤		if(sizeof(SEA::IndexAPI::IndexConfig) == data.get_size()) {¤			memcpy(&m_config, data.get_data(), sizeof(SEA::IndexAPI::IndexConfig));¤		} else {¤			throw SEA::DatabaseAPI::IOError();¤			LOG_E (("BERKELEY %s : Index config size missmatch!", GDS_CURRENT_FUNCTION));¤		}¤¤		if(m_config.key_size != sizeof(SEA::IndexAPI::Key)) {¤			throw SEA::DatabaseAPI::IOError();¤			LOG_E (("BERKELEY %s : Key size missmatch!", GDS_CURRENT_FUNCTION));¤		}¤¤		load_last_key();¤	} catch (DbException& e) {¤		LOG_E (("BERKELEY FixedIndex_i::FixedIndex_i (Open): e.what () = %s", e.what ()));¤		m_db->close (0);¤		if(e.get_errno() == ERROR_FILE_NOT_FOUND) {¤			throw SEA::IndexAPI::IndexDoesNotExist();¤		} else {¤			throw;¤		}¤	}¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_4A44B098031B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4A44B098031B_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4A44B098031B_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_4A44B098031B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4A44B098031B_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4A44B098031B_BODY*¤	PersistentBDBAdapter::dataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentBDBAdapter::dataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	unsigned int page_size = PersistentBDBAdapter::IndexIO::IndexParams::get_page_size();¤	m_db = new Db (&local_db->get_db_env(), 0);¤¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤	file_index_name += "\\";¤	file_index_name += name;¤	file_index_name += ".dat";¤¤	try {¤		m_db->set_bt_compare (my_bt_compare);¤		m_db->set_pagesize (page_size);¤		m_db->open (0, file_index_name.c_str(), 0, DB_BTREE, DB_RDONLY, 0);¤¤		std::vector<unsigned char> key_data(sizeof(SEA::IndexAPI::Key), 0);¤		Dbt key(&key_data[0], sizeof(SEA::IndexAPI::Key));¤		key.set_flags(DB_DBT_USERMEM);¤		key.set_ulen(sizeof(SEA::IndexAPI::Key));¤		std::vector<unsigned char> index_data(sizeof(SEA::IndexAPI::IndexConfig), 0);¤		Dbt data((void*)&index_data[0], sizeof(SEA::IndexAPI::IndexConfig));¤		data.set_flags(DB_DBT_USERMEM);¤		data.set_ulen(sizeof(SEA::IndexAPI::IndexConfig));¤¤		int ret = 0;¤		ret = m_db->get(0, &key, &data, 0);¤		if(ret) {¤			LOG_E (("BERKELEY %s : Can't get index config - error code <%d>", GDS_CURRENT_FUNCTION, ret));¤			throw SEA::DatabaseAPI::IOError();¤		}¤¤		if(sizeof(SEA::IndexAPI::IndexConfig) == data.get_size()) {¤			memcpy(&m_config, data.get_data(), sizeof(SEA::IndexAPI::IndexConfig));¤		} else {¤			LOG_E (("BERKELEY %s : Index config size missmatch!", GDS_CURRENT_FUNCTION));¤			throw SEA::IndexAPI::IndexDoesNotExist();¤		}¤¤		if(m_config.key_size != sizeof(SEA::IndexAPI::Key)) {¤			LOG_E (("BERKELEY %s : Key size missmatch!", GDS_CURRENT_FUNCTION));¤			throw SEA::DatabaseAPI::IOError();¤		}¤	} catch (DbException& e) {¤		LOG_E (("BERKELEY FixedIndex_i::FixedIndex_i (Open): e.what () = %s", e.what ()));¤		m_db->close (0);¤		if(e.get_errno() == ERROR_FILE_NOT_FOUND) {¤			throw SEA::IndexAPI::IndexDoesNotExist();¤		} else {¤			throw;¤		}¤	}¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097BD802A2_4A44B098031B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4A646E6E0321_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4A646E6E0321_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_4A646E6E0321_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4A646E6E0321_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4A646E6E0321_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_4A646E6E0321_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4A646E6E0321_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4A646E6E0321_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_4A646E6E0321_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4A646E6E0321_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4A646E6E0321_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_4A646E6E0321_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4A646E6E0321_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4A646E6E0321_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_4A646E6E0321_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4A646E6E0321_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4A646E6E0321_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_4A646E6E0321_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4A646E6E0321_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4A646E6E0321_BASE_INIT*¤, m_last_key(0)¤//#UC END# *471899FF00ED_4A097B270017_4A646E6E0321_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4A646E6E0321_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4A646E6E0321_BODY*¤	LOG_I (("NDTCLONE %s (Create) Index name %s", GDS_CURRENT_FUNCTION, idx_cfg.name));¤	PersistentNtdcloneAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentNtdcloneAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤¤	ACE_OS::mkdir (index_root.c_str ());¤	index_root += "\\";¤¤	m_clone_index = new NdtClone::CloneIndex (index_root.c_str (), idx_cfg.name, false);¤	if(m_clone_index.ptr()) {¤		std::vector<unsigned char>	system_data(¤			sizeof(SEA::IndexAPI::IndexConfig)¤			, 0¤		);¤		memcpy(&system_data[0], (void*)&idx_cfg, sizeof(SEA::IndexAPI::IndexConfig));¤		memcpy(&m_config, (void*)&idx_cfg, sizeof(SEA::IndexAPI::IndexConfig)); ¤		bool res = m_clone_index->update_local(0, (void*)&system_data[0], system_data.size());¤		if(!res) {¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	} else {¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	m_clone_index.release();¤	//#UC END# *471899FF00ED_4A097B270017_4A646E6E0321_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4A646E6E0321_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4A646E6E0321_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_4A646E6E0321_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4A646E6E0321_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4A646E6E0321_BODY*¤	PersistentNtdcloneAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentNtdcloneAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤	index_root += "\\";¤¤	std::string file_name = index_root; ¤	file_name += name;¤	file_name += ".key";¤¤	if (ACE_OS::access(file_name.c_str(), F_OK) == -1) { ¤		throw SEA::IndexAPI::IndexDoesNotExist();¤	}¤¤	m_clone_index = new NdtClone::CloneIndex (index_root.c_str (), name, false);¤	if(m_clone_index.ptr()) {¤		std::vector<unsigned char>	system_data(¤			sizeof(SEA::IndexAPI::IndexConfig)¤			, 0¤		);¤¤		bool res = m_clone_index->read_local(0, (void*)&system_data[0], system_data.size());¤		if(!res) {¤			LOG_E (("NDTCLONE %s (Open) couldn't read IndexConfig info.", GDS_CURRENT_FUNCTION));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		memcpy(&m_config, &system_data[0], sizeof(SEA::IndexAPI::IndexConfig));¤		if((m_config.key_size != sizeof(SEA::IndexAPI::Key)) ¤			|| (memcmp(name, &m_config.index_name, strlen(name)) != 0)) {¤			LOG_E (("NDTCLONE %s (Open) IndexConfig info not correct.", GDS_CURRENT_FUNCTION));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		m_last_key = m_clone_index->get_last_id();¤		if(m_last_key < 0) {¤			LOG_E (("NDTCLONE %s (Open): m_last_key < 0!.", GDS_CURRENT_FUNCTION));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	} else {¤		LOG_E (("NDTCLONE %s (Open) couldn't create CloneIndex.", GDS_CURRENT_FUNCTION));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_4A646E6E0321_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4A646E6E0321_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4A646E6E0321_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_4A646E6E0321_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4A646E6E0321_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4A646E6E0321_BODY*¤	PersistentNtdcloneAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentNtdcloneAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤	index_root += "\\";¤¤	m_clone_index = new NdtClone::CloneIndex (index_root.c_str (), name, true);¤	if(m_clone_index.ptr()) {¤		std::vector<unsigned char>	system_data(¤			sizeof(SEA::IndexAPI::IndexConfig) + sizeof(SEA::IndexAPI::Key)¤			, 0¤		);¤¤		bool res = m_clone_index->read_local(0, (void*)&system_data[0], system_data.size());¤		if(!res) {¤			LOG_E (("NDTCLONE %s (Open) couldn't read IndexConfig info.", GDS_CURRENT_FUNCTION));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		memcpy(&m_config, &system_data[0], sizeof(SEA::IndexAPI::IndexConfig));¤		if((m_config.key_size != sizeof(SEA::IndexAPI::Key)) ¤			|| (memcmp(name, &m_config.index_name, strlen(name)) != 0)) {¤			LOG_E (("NDTCLONE %s (Open) IndexConfig info not correct.", GDS_CURRENT_FUNCTION));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		m_last_key = m_clone_index->get_last_id();¤		if(m_last_key < 0) {¤			LOG_E (("NDTCLONE %s (Open): m_last_key < 0!.", GDS_CURRENT_FUNCTION));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	} else {¤		LOG_E (("NDTCLONE %s (Open) couldn't create CloneIndex.", GDS_CURRENT_FUNCTION));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097BD802A2_4A646E6E0321_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4A703F490366_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4A703F490366_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_4A703F490366_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4A703F490366_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4A703F490366_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_4A703F490366_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4A703F490366_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4A703F490366_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_4A703F490366_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4A703F490366_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4A703F490366_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_4A703F490366_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4A703F490366_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4A703F490366_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_4A703F490366_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4A703F490366_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4A703F490366_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_4A703F490366_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4A703F490366_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4A703F490366_BASE_INIT*¤, m_last_key(0)¤//#UC END# *471899FF00ED_4A097B270017_4A703F490366_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4A703F490366_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4A703F490366_BODY*¤		LOG_I (("Myisam %s (Create) Index name %s", GDS_CURRENT_FUNCTION, idx_cfg.name));¤		PersistentMySql::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentMySql::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤¤	ACE_OS::mkdir (index_root.c_str ());¤	index_root += "\\";¤	index_root += idx_cfg.name;¤¤	m_myisam = new MyisamWrapper(index_root.c_str(), idx_cfg.data_size);¤	bool res = m_myisam->is_valid();¤¤	if(res) {¤		int error_code = m_myisam->set_data(0, (unsigned char*)&idx_cfg, sizeof(SEA::IndexAPI::IndexConfig));¤		if(error_code) {¤			LOG_E ((¤				"Myisam %s couldn't write index config, error code <%d>."¤				, GDS_CURRENT_FUNCTION¤				, error_code¤			));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	} else {¤		LOG_E (("Myisam %s (Create) couldn't open MyisamIndex.", GDS_CURRENT_FUNCTION));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤¤	m_myisam.release();¤	//#UC END# *471899FF00ED_4A097B270017_4A703F490366_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4A703F490366_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4A703F490366_BASE_INIT*¤, m_last_key(0)¤//#UC END# *471899FF00ED_4A097B8D01E8_4A703F490366_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4A703F490366_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4A703F490366_BODY*¤	PersistentMySql::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentMySql::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤	index_root += "\\";¤¤	std::string file_name = index_root; ¤	file_name += name;¤	file_name += ".myi";¤¤	if (ACE_OS::access(file_name.c_str(), F_OK) == -1) { ¤		throw SEA::IndexAPI::IndexDoesNotExist();¤	}¤¤	index_root += name;¤	m_myisam = new MyisamWrapper();¤	bool res = m_myisam->open_index(index_root);¤¤	if(res) {¤		int error_code = m_myisam->get_data(0, (unsigned char*)&m_config, sizeof(SEA::IndexAPI::IndexConfig));¤		if(error_code) {¤			LOG_E (("Myisam %s couldn't read index config, error <%d>.", GDS_CURRENT_FUNCTION, error_code));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	} else {¤		LOG_E (("Myisam %s (Open) couldn't open MyisamIndex.", GDS_CURRENT_FUNCTION));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_4A703F490366_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4A703F490366_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4A703F490366_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_4A703F490366_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4A703F490366_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4A703F490366_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_4A703F490366_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4A8A76E9034C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4A8A76E9034C_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_4A8A76E9034C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4A8A76E9034C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4A8A76E9034C_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_4A8A76E9034C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4A8A76E9034C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4A8A76E9034C_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_4A8A76E9034C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4A8A76E9034C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4A8A76E9034C_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_4A8A76E9034C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4A8A76E9034C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4A8A76E9034C_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_4A8A76E9034C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4A8A76E9034C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4A8A76E9034C_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_4A8A76E9034C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4A8A76E9034C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4A8A76E9034C_BASE_INIT*¤: m_current_cach_size(0)¤//#UC END# *471899FF00ED_4A097B270017_4A8A76E9034C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4A8A76E9034C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4A8A76E9034C_BODY*¤	m_enable = SortedCachSettings::get_enable();¤	m_max_cach_size = SortedCachSettings::get_max_cach_size();¤	m_sorted_cach.resize(m_max_cach_size);¤	m_data_buffer.resize(m_max_cach_size * (idx_cfg.data_size + idx_cfg.user_id_len));¤	LOG_I (("%s (): m_enable = %d, m_max_cach_size = %u", GDS_CURRENT_FUNCTION, (int) m_enable, (int) m_max_cach_size));¤	//#UC END# *471899FF00ED_4A097B270017_4A8A76E9034C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4A8A76E9034C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4A8A76E9034C_BASE_INIT*¤: m_current_cach_size(0)¤//#UC END# *471899FF00ED_4A097B8D01E8_4A8A76E9034C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4A8A76E9034C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4A8A76E9034C_BODY*¤	m_enable = SortedCachSettings::get_enable();¤	m_max_cach_size = SortedCachSettings::get_max_cach_size();¤	m_sorted_cach.resize(m_max_cach_size);¤	LOG_I (("%s (): m_enable = %d, m_max_cach_size = %u", GDS_CURRENT_FUNCTION, (int) m_enable, (int) m_max_cach_size));¤	//#UC END# *471899FF00ED_4A097B8D01E8_4A8A76E9034C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4A8A76E9034C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4A8A76E9034C_BASE_INIT*¤: m_current_cach_size(0)¤//#UC END# *471899FF00ED_4A097BD802A2_4A8A76E9034C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4A8A76E9034C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4A8A76E9034C_BODY*¤	m_enable = SortedCachSettings::get_enable();¤	m_max_cach_size = SortedCachSettings::get_max_cach_size();¤	m_sorted_cach.resize(m_max_cach_size);¤	LOG_I (("%s (): m_enable = %d, m_max_cach_size = %u", GDS_CURRENT_FUNCTION, (int) m_enable, (int) m_max_cach_size));¤	//#UC END# *471899FF00ED_4A097BD802A2_4A8A76E9034C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4AA4FF19006C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4AA4FF19006C_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_4AA4FF19006C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4AA4FF19006C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4AA4FF19006C_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_4AA4FF19006C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4AA4FF19006C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4AA4FF19006C_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_4AA4FF19006C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4AA4FF19006C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4AA4FF19006C_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_4AA4FF19006C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4AA4FF19006C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4AA4FF19006C_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_4AA4FF19006C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4AA4FF19006C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4AA4FF19006C_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_4AA4FF19006C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4AA4FF19006C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4AA4FF19006C_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_4AA4FF19006C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4AA4FF19006C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4AA4FF19006C_BODY*¤	if(strcmp((const char*)&idx_cfg.index_name, "PersistentA") == 0) {¤		DummyParams::set_persistenta_size(idx_cfg.data_size);¤	} ¤	DummyParams::set_user_id_len(idx_cfg.user_id_len);¤	//#UC END# *471899FF00ED_4A097B270017_4AA4FF19006C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4AA4FF19006C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4AA4FF19006C_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_4AA4FF19006C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4AA4FF19006C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4AA4FF19006C_BODY*¤	if(strcmp(name, "PersistentA") == 0) {¤		m_config.data_size = DummyParams::get_persistenta_size();¤	} ¤	m_config.user_id_len = DummyParams::get_user_id_len();¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_4AA4FF19006C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4AA4FF19006C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4AA4FF19006C_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_4AA4FF19006C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4AA4FF19006C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4AA4FF19006C_BODY*¤	if(strcmp(name, "PersistentA") == 0) {¤		m_config.data_size = DummyParams::get_persistenta_size();¤	} ¤	m_config.user_id_len = DummyParams::get_user_id_len();¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097BD802A2_4AA4FF19006C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4AE6E951021C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4AE6E951021C_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_4AE6E951021C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4AE6E951021C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4AE6E951021C_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_4AE6E951021C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4AE6E951021C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4AE6E951021C_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_4AE6E951021C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4AE6E951021C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4AE6E951021C_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_4AE6E951021C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4AE6E951021C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4AE6E951021C_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_4AE6E951021C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4AE6E951021C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4AE6E951021C_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_4AE6E951021C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4AE6E951021C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4AE6E951021C_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B270017_4AE6E951021C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4AE6E951021C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4AE6E951021C_BODY*¤	m_page_size = MPHFParams::get_page_size();¤	m_page.resize(m_page_size);¤	m_write_buffer.resize(idx_cfg.data_size + idx_cfg.user_id_len);¤	m_write_access = true; ¤¤	PersistentMphfFileAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentMphfFileAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤¤	ACE_OS::mkdir (file_index_name.c_str ());¤¤	file_index_name += "\\";¤	file_index_name += (const char*)idx_cfg.index_name.data();¤	file_index_name += ".dat";¤¤	m_file = CreateFileA (¤		file_index_name.c_str()¤		, GENERIC_READ | GENERIC_WRITE¤		, FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE¤		, NULL¤		, OPEN_ALWAYS¤		, FILE_ATTRIBUTE_NORMAL¤		, NULL¤	);¤¤	if (m_file == INVALID_HANDLE_VALUE) {¤		LOG_I (("Couldn't create index file, error code <%d>", GetLastError()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	m_system_memory_size = sizeof(SEA::IndexAPI::IndexConfig);¤¤	LARGE_INTEGER pointer_offset;¤	pointer_offset.QuadPart = 0;¤¤	if(!SetFilePointerEx(m_file, pointer_offset, NULL, FILE_BEGIN)) {¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	DWORD dwWrittenBytes=0;¤	if(!WriteFile(m_file, &idx_cfg, sizeof(SEA::IndexAPI::IndexConfig), &dwWrittenBytes, NULL)) {¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	if(dwWrittenBytes != sizeof(SEA::IndexAPI::IndexConfig)) {¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	if(m_file != INVALID_HANDLE_VALUE) {¤		CloseHandle(m_file);¤		m_file = NULL;¤	}¤	//#UC END# *471899FF00ED_4A097B270017_4AE6E951021C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4AE6E951021C_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4AE6E951021C_BASE_INIT*¤	, m_mphf_hash(NULL)¤//#UC END# *471899FF00ED_4A097B8D01E8_4AE6E951021C_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4AE6E951021C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4AE6E951021C_BODY*¤	m_page_size = MPHFParams::get_page_size();¤	m_page.resize(m_page_size);¤	m_write_access = true; ¤¤	PersistentMphfFileAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentMphfFileAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤	file_index_name += "\\";¤	file_index_name += name;¤	file_index_name += ".dat";¤¤	m_file = CreateFileA (¤		file_index_name.c_str()¤		, GENERIC_READ | GENERIC_WRITE¤		, FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE¤		, NULL¤		, OPEN_EXISTING¤		, FILE_ATTRIBUTE_NORMAL¤		, NULL¤	);¤	¤	if (m_file == INVALID_HANDLE_VALUE) {¤		throw SEA::IndexAPI::IndexDoesNotExist();¤	}¤¤	load_index_config ();¤	m_write_buffer.resize(m_index_config.data_size + m_index_config.user_id_len);¤¤	std::string data_file_name = MPHFParams::get_mphf_file_name();¤	if(data_file_name == "") {¤		data_file_name = local_db->get_path(); ¤		data_file_name += "\\";¤		data_file_name += local_db->get_name();¤		data_file_name += "\\";¤		data_file_name += name;¤		data_file_name += "_mphf";¤		data_file_name += ".dat";¤	}¤¤	FILE* mphf_fd = fopen(data_file_name.c_str(), "rb");¤¤	if(!mphf_fd) {¤		LOG_E(("Couldn't open file with mphf:<%s>", data_file_name.c_str()));¤		throw Core::Root::InvalidParams();¤	}¤¤	m_mphf_hash = cmph_load(mphf_fd);¤¤	if(!m_mphf_hash) {¤		LOG_E(("Couldn't load mphf from file: <%s>", data_file_name.c_str()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	fclose(mphf_fd);¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_4AE6E951021C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4AE6E951021C_BASE_INIT*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4AE6E951021C_BASE_INIT*¤	, m_mphf_hash(NULL)¤//#UC END# *471899FF00ED_4A097BD802A2_4AE6E951021C_BASE_INIT*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4AE6E951021C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4AE6E951021C_BODY*¤	m_page_size = MPHFParams::get_page_size();¤	m_page.resize(m_page_size);¤	m_write_access = false; ¤¤	PersistentMphfFileAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentMphfFileAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	file_index_name = local_db->get_path(); ¤	file_index_name += "\\";¤	file_index_name += local_db->get_name();¤	file_index_name += "\\";¤	file_index_name += name;¤	file_index_name += ".dat";¤¤		m_file = CreateFileA (¤		file_index_name.c_str()¤		, GENERIC_READ¤		, FILE_SHARE_READ ¤		, NULL¤		, OPEN_EXISTING¤		, FILE_ATTRIBUTE_NORMAL¤		, NULL¤	);¤	¤	if (m_file == INVALID_HANDLE_VALUE) {¤		throw SEA::IndexAPI::IndexDoesNotExist();¤	}¤¤	load_index_config ();¤	m_write_buffer.resize(m_index_config.user_id_len + m_index_config.user_id_len);¤¤	std::string data_file_name = MPHFParams::get_mphf_file_name();¤	if(data_file_name == "") {¤		data_file_name = local_db->get_path(); ¤		data_file_name += "\\";¤		data_file_name += local_db->get_name();¤		data_file_name += "\\";¤		data_file_name += name;¤		data_file_name += "_mphf";¤		data_file_name += ".dat";¤	}¤¤	FILE* mphf_fd = fopen(data_file_name.c_str(), "rb");¤¤	if(!mphf_fd) {¤		LOG_E(("Couldn't open file with mphf:<%s>", data_file_name.c_str()));¤		throw Core::Root::InvalidParams();¤	}¤¤	m_mphf_hash = cmph_load(mphf_fd);¤¤	if(!m_mphf_hash) {¤		LOG_E(("Couldn't load mphf from file: <%s>", data_file_name.c_str()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	fclose(mphf_fd);¤¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097BD802A2_4AE6E951021C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4B6194C9030C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4B6194C9030C_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_4B6194C9030C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4B6194C9030C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4B6194C9030C_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_4B6194C9030C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4B6194C9030C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4B6194C9030C_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_4B6194C9030C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4B6194C9030C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4B6194C9030C_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_4B6194C9030C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4B6194C9030C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4B6194C9030C_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_4B6194C9030C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4B6194C9030C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4B6194C9030C_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_4B6194C9030C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4B6194C9030C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4B6194C9030C_BASE_INIT*¤, m_last_key (0)¤, m_bdb (0)¤//#UC END# *471899FF00ED_4A097B270017_4B6194C9030C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4B6194C9030C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4B6194C9030C_BODY*¤	LOG_I (("Tokyo cabinet BDB %s (Create) Index name %s", GDS_CURRENT_FUNCTION, idx_cfg.name));¤	LOG_I (("%s (): idx_cfg.key_size = %d, idx_cfg.data_size = %d", GDS_CURRENT_FUNCTION, (int) idx_cfg.key_size, (int) idx_cfg.data_size));¤	PersistentTokyoAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentTokyoAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤¤	ACE_OS::mkdir (index_root.c_str ());¤	index_root += "\\";¤	index_root += idx_cfg.name;¤¤	m_bdb = tcbdbnew ();¤	LOG_I (("tcbdbtune (m_bdb, 1500, 1500, 10000000, 0, 8, 0 /*| BDBTBZIP*/)"));¤	if (!tcbdbtune (m_bdb, 1500, 1500, 10000000, 0, 8, 0 /*| BDBTBZIP*/)) {¤		LOG_E (("error tcbdbtune (m_bdb, 1500, 1500, 10000000, 0, 8, 0 /*| BDBTBZIP*/)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤	if (!tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)) {¤		LOG_E (("error tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetcache (m_bdb, 9, 9)"));¤	if (!tcbdbsetcache (m_bdb, 9, 9)) {¤		LOG_E (("error tcbdbsetcache (m_bdb, 9, 9)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbopen (BDBOWRITER | BDBOCREAT | BDBOTRUNC) index_root.c_str() = %s", index_root.c_str()));¤	if (!tcbdbopen (m_bdb, index_root.c_str(), BDBOWRITER | BDBOCREAT | BDBOTRUNC)) {¤		LOG_E (("error tcbdbopen (BDBOWRITER | BDBOCREAT | BDBOTRUNC)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	long long id0 = 0;¤	if (!tcbdbput (m_bdb, &id0, sizeof (long long), (unsigned char*)&idx_cfg, sizeof(SEA::IndexAPI::IndexConfig))) {¤		LOG_E (("error tcbdbput id0"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	tcbdbdel (m_bdb);¤	m_bdb = NULL;¤	//#UC END# *471899FF00ED_4A097B270017_4B6194C9030C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4B6194C9030C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4B6194C9030C_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_4B6194C9030C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4B6194C9030C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4B6194C9030C_BODY*¤	PersistentTokyoAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentTokyoAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤	index_root += "\\";¤¤	std::string file_name = index_root; ¤	file_name += name;¤¤	if (ACE_OS::access(file_name.c_str(), F_OK) == -1) { ¤		throw SEA::IndexAPI::IndexDoesNotExist();¤	}¤¤	index_root += name;¤¤	m_bdb = tcbdbnew ();¤	LOG_I (("tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤	if (!tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)) {¤		LOG_E (("error tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetcache (m_bdb, 9, 9)"));¤	if (!tcbdbsetcache (m_bdb, 9, 9)) {¤		LOG_E (("error tcbdbsetcache (m_bdb, 9, 9)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbopen (BDBOWRITER | BDBOREADER) index_root.c_str() = %s", index_root.c_str()));¤	if (!tcbdbopen (m_bdb, index_root.c_str(), BDBOWRITER | BDBOREADER)) {¤		LOG_E (("error tcbdbopen (BDBOWRITER | BDBOREADER)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	long long id0 = 0;¤	const void* vbuf2 = NULL;¤	int valszp [1];¤	if ((vbuf2 = tcbdbget3 (m_bdb, &id0, sizeof (long long), valszp)) == NULL) {¤		LOG_E (("error tcbdbget3 id0"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	GDS_ASSERT (valszp [0] == sizeof(SEA::IndexAPI::IndexConfig));¤	memcpy (&m_config, vbuf2, valszp [0]);¤	LOG_I (("%s (): m_config.key_size = %d, m_config.data_size = %d", GDS_CURRENT_FUNCTION, (int) m_config.key_size, (int) m_config.data_size));¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_4B6194C9030C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4B6194C9030C_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4B6194C9030C_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_4B6194C9030C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4B6194C9030C_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4B6194C9030C_BODY*¤	PersistentTokyoAdapter::DataBaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentTokyoAdapter::DataBaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤	index_root += "\\";¤¤	std::string file_name = index_root; ¤	file_name += name;¤¤	if (ACE_OS::access(file_name.c_str(), F_OK) == -1) { ¤		throw SEA::IndexAPI::IndexDoesNotExist();¤	}¤¤	index_root += name;¤¤	m_bdb = tcbdbnew ();¤	LOG_I (("tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤	if (!tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)) {¤		LOG_E (("error tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetcache (m_bdb, 9, 9)"));¤	if (!tcbdbsetcache (m_bdb, 9, 9)) {¤		LOG_E (("error tcbdbsetcache (m_bdb, 9, 9)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbopen (BDBOREADER) index_root.c_str() = %s", index_root.c_str()));¤	if (!tcbdbopen (m_bdb, index_root.c_str(), BDBOREADER)) {¤		LOG_E (("error tcbdbopen (BDBOREADER)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	long long id0 = 0;¤	const void* vbuf2 = NULL;¤	int valszp [1];¤	if ((vbuf2 = tcbdbget3 (m_bdb, &id0, sizeof (long long), valszp)) == NULL) {¤		LOG_E (("error tcbdbget3 id0"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	GDS_ASSERT (valszp [0] == sizeof(SEA::IndexAPI::IndexConfig));¤	memcpy (&m_config, vbuf2, valszp [0]);¤	LOG_I (("%s (): m_config.key_size = %d, m_config.data_size = %d", GDS_CURRENT_FUNCTION, (int) m_config.key_size, (int) m_config.data_size));¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097BD802A2_4B6194C9030C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4B9A42C10257_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F68009B_4B9A42C10257_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F68009B_4B9A42C10257_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F68009B_4B9A42C10257_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F68009B_4B9A42C10257_BODY*¤	//#UC END# *471899FF00ED_471C7F68009B_4B9A42C10257_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4B9A42C10257_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471C7F98035A_4B9A42C10257_BASE_INIT*¤//#UC END# *471899FF00ED_471C7F98035A_4B9A42C10257_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471C7F98035A_4B9A42C10257_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471C7F98035A_4B9A42C10257_BODY*¤	//#UC END# *471899FF00ED_471C7F98035A_4B9A42C10257_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4B9A42C10257_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_471DD3880039_4B9A42C10257_BASE_INIT*¤//#UC END# *471899FF00ED_471DD3880039_4B9A42C10257_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_471DD3880039_4B9A42C10257_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_471DD3880039_4B9A42C10257_BODY*¤	//#UC END# *471899FF00ED_471DD3880039_4B9A42C10257_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4B9A42C10257_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B270017_4B9A42C10257_BASE_INIT*¤, m_last_key (0)¤, m_bdb (0)¤, m_fdb (-1)¤//#UC END# *471899FF00ED_4A097B270017_4B9A42C10257_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B270017_4B9A42C10257_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B270017_4B9A42C10257_BODY*¤	LOG_I (("Tokyo cabinet 2 %s (Create 3x4) Index name %s", GDS_CURRENT_FUNCTION, idx_cfg.name));¤	LOG_I (("%s (): idx_cfg.key_size = %d, idx_cfg.data_size = %d", GDS_CURRENT_FUNCTION, (int) idx_cfg.key_size, (int) idx_cfg.data_size));¤	PersistentTokyoAdapter2::DatabaseIO::LocalDB* tmp = 0;¤	PersistentTokyoAdapter2::DatabaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentTokyoAdapter2::DatabaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤	¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤¤	ACE_OS::mkdir (index_root.c_str ());¤	index_root += "\\";¤	index_root += idx_cfg.name;¤¤	// create bdb ¤	m_bdb = tcbdbnew ();¤	LOG_I (("tcbdbtune (m_bdb, 4300, 4300, 8388608, 0, 8, 0 /*| BDBTBZIP*/)"));¤	if (!tcbdbtune (m_bdb, 4300, 4300, 8388608, 0, 8, 0 /*| BDBTBZIP*/)) {¤		LOG_E (("error tcbdbtune (m_bdb, 4300, 4300, 8388608, 0, 8, 0 /*| BDBTBZIP*/)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤	if (!tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)) {¤		LOG_E (("error tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetcache (m_bdb, 5900, 3)"));¤	if (!tcbdbsetcache (m_bdb, 5900, 3)) {¤		LOG_E (("error tcbdbsetcache (m_bdb, 5900, 3)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetxmsiz (m_bdb, 0)"));¤	if (!tcbdbsetxmsiz (m_bdb, 0)) {¤		LOG_E (("error tcbdbsetxmsiz (m_bdb, 0)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetdfunit (m_bdb, 2)"));¤	if (!tcbdbsetdfunit (m_bdb, 2)) {¤		LOG_E (("error tcbdbsetdfunit (m_bdb, 2)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbopen (BDBOWRITER | BDBOCREAT | BDBOTRUNC) index_root.c_str() = %s", index_root.c_str()));¤	if (!tcbdbopen (m_bdb, index_root.c_str(), BDBOWRITER | BDBOCREAT | BDBOTRUNC)) {¤		LOG_E (("error tcbdbopen (BDBOWRITER | BDBOCREAT | BDBOTRUNC)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	long long id0 = 0;¤	if (!tcbdbput (m_bdb, &id0, sizeof (long long), (unsigned char*)&idx_cfg, sizeof(SEA::IndexAPI::IndexConfig))) {¤		LOG_E (("error tcbdbput id0"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤¤	std::string	data_root = index_root;¤	data_root += ".dat";¤¤	// create fdb¤	LOG_I (("_open (_O_CREAT | _O_TRUNC | _O_BINARY | _O_RDWR, _S_IREAD | _S_IWRITE) data_root.c_str = %s", data_root.c_str ()));¤	m_fdb = _open (data_root.c_str (), _O_CREAT | _O_TRUNC | _O_BINARY | _O_RDWR, _S_IREAD | _S_IWRITE);¤	if (m_fdb == -1) {¤		LOG_I (("error _open (%s)", data_root.c_str ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	GDS_ASSERT (idx_cfg.data_size == 32);¤	long long id0f [4];¤	id0f [0] = 1;¤	if (pwrite (m_fdb, &id0f [0], idx_cfg.data_size, id0f [0]*idx_cfg.data_size) != idx_cfg.data_size) {¤		LOG_E (("error pwrite id0f"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤¤	_close (m_fdb);¤	m_fdb = -1;¤¤	tcbdbdel (m_bdb);¤	m_bdb = NULL;¤	//#UC END# *471899FF00ED_4A097B270017_4B9A42C10257_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4B9A42C10257_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097B8D01E8_4B9A42C10257_BASE_INIT*¤//#UC END# *471899FF00ED_4A097B8D01E8_4B9A42C10257_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097B8D01E8_4B9A42C10257_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097B8D01E8_4B9A42C10257_BODY*¤	LOG_I (("Tokyo cabinet 2 %s (Open2 3x4) Index name %s", GDS_CURRENT_FUNCTION, m_config.name));¤	PersistentTokyoAdapter2::DatabaseIO::LocalDB* local_db = dynamic_cast<¤		PersistentTokyoAdapter2::DatabaseIO::LocalDB*¤	>(¤		const_cast<SEA::DatabaseAPI::Database*>(db)¤	);¤¤	std::string	index_root = local_db->get_path(); ¤	index_root += "\\";¤	index_root += local_db->get_name();¤	index_root += "\\";¤¤	std::string file_name = index_root; ¤	file_name += name;¤¤	if (ACE_OS::access(file_name.c_str(), F_OK) == -1) { ¤		throw SEA::IndexAPI::IndexDoesNotExist();¤	}¤¤	index_root += name;¤¤	// open bdb¤	m_bdb = tcbdbnew ();¤	LOG_I (("tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤	if (!tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)) {¤		LOG_E (("error tcbdbsetcmpfunc (m_bdb, tctccmpint64, NULL)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetcache (m_bdb, 5900, 3)"));¤	if (!tcbdbsetcache (m_bdb, 5900, 3)) {¤		LOG_E (("error tcbdbsetcache (m_bdb, 5900, 3)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetxmsiz (m_bdb, 0)"));¤	if (!tcbdbsetxmsiz (m_bdb, 0)) {¤		LOG_E (("error tcbdbsetxmsiz (m_bdb, 0)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbsetdfunit (m_bdb, 2)"));¤	if (!tcbdbsetdfunit (m_bdb, 2)) {¤		LOG_E (("error tcbdbsetdfunit (m_bdb, 2)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	LOG_I (("tcbdbopen (BDBOWRITER | BDBOREADER) index_root.c_str() = %s", index_root.c_str()));¤	if (!tcbdbopen (m_bdb, index_root.c_str(), BDBOWRITER | BDBOREADER)) {¤		LOG_E (("error tcbdbopen (BDBOWRITER | BDBOREADER)"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	long long id0 = 0;¤	const void* vbuf2 = NULL;¤	int valszp [1];¤	if ((vbuf2 = tcbdbget3 (m_bdb, &id0, sizeof (long long), valszp)) == NULL) {¤		LOG_E (("error tcbdbget3 id0"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	GDS_ASSERT (valszp [0] == sizeof(SEA::IndexAPI::IndexConfig));¤	memcpy (&m_config, vbuf2, valszp [0]);¤¤	std::string	data_root = index_root;¤	data_root += ".dat";¤¤	// open fdb¤	LOG_I (("_open (_O_BINARY | _O_RDWR | _O_SEQUENTIAL) data_root.c_str() = %s", data_root.c_str()));¤	m_fdb = _open (data_root.c_str(), _O_BINARY | _O_RDWR | _O_SEQUENTIAL);¤	if (m_fdb == -1) {¤		LOG_E (("error _open (_O_BINARY | _O_RDWR | _O_SEQUENTIAL), GetLastError () = %u", GetLastError ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	long long id0f = 1;¤	GDS_ASSERT (m_config.data_size == 32);¤	long long vbuf2f [4];¤	vbuf2f [0] = -1; // not 1, for the following check¤	int valszpf [1];¤	if ((valszpf [0] = pread (m_fdb, &vbuf2f [0], m_config.data_size, id0f*m_config.data_size)) != m_config.data_size) {¤		LOG_E (("error pread id0f"));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	GDS_ASSERT (valszpf [0] == m_config.data_size);¤	GDS_ASSERT (vbuf2f [0] == 1); // read from db, must be 0¤	char tbuf [64];¤	_read (m_fdb, tbuf, 64);¤	LOG_I (("_tell (m_fdb) = %Q", (long long) _tell (m_fdb)));¤	LOG_I (("Tokyo cabinet 2 %s (Open2): m_config.key_size = %d, m_config.data_size = %d", GDS_CURRENT_FUNCTION, (int) m_config.key_size, (int) m_config.data_size));¤	FixedIndexBase::init_data();¤	//#UC END# *471899FF00ED_4A097B8D01E8_4B9A42C10257_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4B9A42C10257_BASE_INIT*"
		    value      	"//#UC START# *471899FF00ED_4A097BD802A2_4B9A42C10257_BASE_INIT*¤//#UC END# *471899FF00ED_4A097BD802A2_4B9A42C10257_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471899FF00ED_4A097BD802A2_4B9A42C10257_BODY*"
		    value      	(value Text 
|//#UC START# *471899FF00ED_4A097BD802A2_4B9A42C10257_BODY*¤	//#UC END# *471899FF00ED_4A097BD802A2_4B9A42C10257_BODY*
		    )))
	    quid       	"471899FF00ED"
	    documentation 	"Индекс, хранящий пары ключ-данные фиксированной длины"
	    stereotype 	"Interface"
	    operations 	(list Operations
		(object Operation "get_data"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"471CC3C90071")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_4727210E0156*¤	int ret = 0;¤	{¤	Dbt dbt_key ((void *) &key, (size_t) m_config.key_size);¤	dbt_key.set_ulen ((size_t) m_config.key_size);¤	dbt_key.set_flags (DB_DBT_USERMEM);¤	Dbt dbt_data ((void *) data, (size_t) m_config.data_size);¤	dbt_data.set_ulen ((size_t) m_config.data_size);¤	dbt_data.set_flags (DB_DBT_USERMEM);¤	try {¤		ret = m_db->get (0, &dbt_key, &dbt_data, 0);¤	} catch (DbException& e) {¤		LOG_E (("BERKELEY FixedIndex_i::get_data (): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	} catch (...) {¤		LOG_E (("BERKELEY FixedIndex_i::get_data (): ..."));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	}¤	if (ret == DB_NOTFOUND) {¤		//LOG_I (("DB_NOTFOUND: key = %Q", key));¤		return false;¤	}¤	return true;¤	//#UC END# *4718A27F0272_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_474812320256*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_474812320256*¤	bool result = false;¤¤	long sqlcode = 0;¤¤	char data_buf [2*(65536/2)];¤¤	if (isc_start_transaction (m_status, &m_trans, 1, m_db_local->get_db (), m_tpb.isc_tpb_len, m_tpb.isc_tpb)) {¤		isc_print_status (m_status);¤	}¤	if (m_row_sql_statement.dsql_execute_stmt_select (result, m_status, *(m_db_local->get_db ()), m_trans, &key, data_buf)) {¤		sqlcode = isc_sqlcode (m_status);¤		isc_print_status (m_status);¤		LOG_E (("FIREBIRD FixedIndex_i::get_data (): IOError, sqlcode = %d", sqlcode));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	isc_commit_transaction (m_status, &m_trans);¤¤	if (result) {¤		Ox_to_bin (data_buf, data, m_config.data_size);¤	}¤¤	return result;¤	//#UC END# *4718A27F0272_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_4756E04101A4*¤	int rc = m_db_file->seek ((double) key);¤	if (rc == r4success) {¤		size_t len = m_field_data->len1 ();¤		assert (len == m_config.data_size);¤		ACE_OS::memcpy (data, m_field_data->ptr1 (), len);¤		return true;¤	}¤	if (rc == r4eof) {¤		return false;¤	}¤	LOG_E (("CODEBASE FixedIndex_i::get_data (): error = rc bad: %d", rc));¤	throw SEA::DatabaseAPI::IOError ();¤	//#UC END# *4718A27F0272_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_47664F7400C0*¤	return m_clone_index->read_local (key, data, m_config.data_size);¤	//#UC END# *4718A27F0272_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_476939D7005D*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_476939D7005D*¤	addr recdesc = 0;¤	addr retdesc = 0;¤	bool flag = this->get_recdesc ((long) key, recdesc, retdesc);¤	bool fo = mrgetend (retdesc);¤	if (!flag) {¤		return false;¤	}¤	char* data_buf = mrspv (m_datadesc);¤	if (data_buf == 0) {¤		LOG_E (("EMPRESS FixedIndex_i::get_data (): mrspv error = %d", mroperr));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	bool flag2 = mrcopyv (recdesc, m_datadesc, data_buf);¤	bool foo = mrfrrec (recdesc);¤	if (flag2) {¤		Ox_to_bin (data_buf, data, m_config.data_size);¤	}¤	mrfree (data_buf);¤	return flag2;¤	//#UC END# *4718A27F0272_476939D7005D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_476A3CDD0003*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_476A3CDD0003*¤	HytechDLL::lData hytech_data;¤	hytech_data.rKey = (int) key;¤	//hytech_data.rKey2 = (int) (( (ACE_UINT64) key >> 32) & (SEA::IndexAPI::Key) 0xFFFFFFFFul);¤	bool res = HytechDLL::GetData (m_table_handle, &hytech_data);¤	ACE_OS::memcpy (data, hytech_data.aData, m_config.data_size);¤	return res;¤	//#UC END# *4718A27F0272_476A3CDD0003*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_478B8CAA02CE*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_478B8CAA02CE*¤	MapiHdl hdl = 0;¤	bool res = this->get_mapihdl ((long) key, hdl);¤	if (res)  {¤		char* data_buf = mapi_fetch_field (hdl, 0);¤		Ox_to_bin (data_buf, data, m_config.data_size);¤	}¤	mapi_close_handle (hdl);¤	return res;¤	//#UC END# *4718A27F0272_478B8CAA02CE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_4795FB8F025B*¤	MYSQL_RES* dbresx = 0;¤	MYSQL_ROW dbrowx = 0;¤	bool found = this->get_mysqlrow ((long) key, dbresx, dbrowx);¤	if (found) {¤		char* data_buf = dbrowx [0];¤		Ox_to_bin (data_buf, data, m_config.data_size);¤	}¤	mysql_free_result (dbresx);¤	return found;¤/*¤	bool found = false;¤	char data_buf [2*(65536/2)];¤	int exe = m_row_sql_statement.dsql_execute_stmt_select (found, m_db_local->get_mysqlh (), &key, data_buf);¤	if (exe != 0) {¤		LOG_E (("MYSQL FixedIndex_i::get_data (): IOError, mysql_errno/mysql_error = %d/%s", mysql_errno (m_db_local->get_mysqlh ()), mysql_error (m_db_local->get_mysqlh ())));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	if (found) {¤		Ox_to_bin (data_buf, data, m_config.data_size);¤	}¤	return found;¤*/¤	//#UC END# *4718A27F0272_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_47CD39C10050*¤	return m_object_already_exists;¤	//#UC END# *4718A27F0272_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_47D7D8C4013F*¤	bool found = false;¤¤	char ltreekey [256];¤	ltree4int ((int) key, ltreekey);¤¤    char select_row_sql_statement_buf [1024];¤	sprintf (select_row_sql_statement_buf, "SELECT buf FROM %s WHERE id = '%s'", m_config.name, ltreekey);¤	PGresult* res = PQexec (m_db_local->get_connection (), select_row_sql_statement_buf);¤	if (PQresultStatus (res) != PGRES_TUPLES_OK) {¤		LOG_E (("POSTGRES FixedIndex_i::get_data (): SQL failed = %s (%s)", select_row_sql_statement_buf, PQerrorMessage (m_db_local->get_connection ())));¤		PQclear (res);¤		throw SEA::DatabaseAPI::IOError ();¤	}¤¤	int ntuples = PQntuples (res);¤	if (ntuples >= 1) {¤		assert (ntuples == 1);¤		assert (PQnfields (res) == 1);¤		int isnull = PQgetisnull (res, 0, 0);¤		if (isnull == 0) { // really found in hstore¤			char* data_buf = PQgetvalue (res, 0, 0);¤			assert (data_buf != 0);¤			Ox_to_bin (data_buf, data, m_config.data_size);¤			found = true;¤		} else {¤			found = false;¤		}¤	}¤	PQclear (res); // frees data_buf according Postgres docs¤	return found;¤	//#UC END# *4718A27F0272_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_48C7B3BC0231*¤	bool w = false;¤	¤	if (m_readonly) {¤		// неверный const_cast !!!!!¤		const_cast <Mmap32Index3ro*> (&m_memory_index_ro)->get_data ((long long) key, (void*) data, (long long) m_config.data_size, w);¤	} else {¤		bool r = false;¤		// неверный const_cast !!!!!¤		const_cast <Mmap32Index3*> (&m_memory_index)->get_data ((long long) key, (void*) data, (long long) m_config.data_size, w, r);¤	}¤¤	return w;¤	//#UC END# *4718A27F0272_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_492AB3A001BE*¤	key += 1;¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	int ret = 0;¤	{¤	Dbt dbt_key ((void *) &key, (size_t) m_config.key_size);¤	dbt_key.set_ulen ((size_t) m_config.key_size);¤	dbt_key.set_flags (DB_DBT_USERMEM);¤	Dbt dbt_data ((void *) data, (size_t) m_config.data_size);¤	dbt_data.set_ulen ((size_t) m_config.data_size);¤	dbt_data.set_flags (DB_DBT_USERMEM);¤	try {¤		ret = m_db->get (0, &dbt_key, &dbt_data, 0);¤	} catch (DbException& e) {¤		LOG_E (("BDBQUEUE FixedIndex_i::get_data (): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	} catch (...) {¤		LOG_E (("BDBQUEUE FixedIndex_i::get_data (): ..."));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	}¤	if ((ret == DB_NOTFOUND) || (ret == DB_KEYEMPTY)) {¤		return false;¤	}¤	return true;¤	//#UC END# *4718A27F0272_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_49738EF9014F*¤	GCI::MMap::LongSize file_ofset = key;¤	size_t inside_offset;¤	GCI::MMap::Memory_cvar memory = m_large_memory->get_memory(file_ofset, inside_offset);¤	¤	memcpy(data, (unsigned char*)memory->get_base_addr() + inside_offset, m_index_config.data_size);¤¤	return true;¤	//#UC END# *4718A27F0272_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_499EA6300016*¤	map_type::const_iterator it = m_xxl_map->find (key);¤	if (it != m_xxl_map->end ()) {¤		memcpy (data, it->second.buf, m_config.data_size);¤		return true;¤	} else {¤		return false;¤	}¤	//#UC END# *4718A27F0272_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_49AD37370343*¤	static unsigned long test_create = Core::ParamManagerFactory::get ().get_ulong ("-random_create", 0);¤¤	unsigned short crc16 = CRC16 (key);¤	data_type* nbatches_vec = (data_type*) m_db_local->get_bloom_filter_manager ().get_primary_crc_table ();¤	unsigned long nkeys = 0;¤	unsigned long bpk = 0;¤	for (data_type batch_number = 0; batch_number < nbatches_vec [crc16]; ++batch_number) {¤		DatabaseIO::Offset64 bloom_filter_offset = m_db_local->get_bloom_filter_manager ().bloom_filter_offset (batch_number, crc16);¤		DatabaseIO::BloomFilter_var bloom_filter = m_db_local->get_bloom_filter_manager ().open (bloom_filter_offset, nkeys, bpk);¤		assert (nkeys == DatabaseIO::N128);¤		assert (bpk == DatabaseIO::B2);¤		if (bloom_filter->exists (key)) {¤			// data found, stop emulation¤			//return true;¤			if (test_create) {¤				return false; // to do emulation on false positive rate != 0¤			} else {¤				return true;¤			}¤		}¤	}¤	return false;¤	//#UC END# *4718A27F0272_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_49B6561C006B*¤	return true;¤	//#UC END# *4718A27F0272_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_49C8E09A02A8*¤	if ((vector_type::size_type) key < m_io_vector->size ()) {¤		data_type d = (*m_io_vector) [(vector_type::size_type) key];¤		if (d.buf [data_type::BUF_SIZE-1] & 1) {¤			memcpy (data, d.buf, m_config.data_size);¤			return true;¤		} else {¤			return false;¤		}¤	} else {¤		return false;¤	}¤	//#UC END# *4718A27F0272_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_49EDCBCF03A8*¤	DatabaseIO::IdOffsetPair* pair_ptr = 0;¤	m_db_local->id_to_offset_mmap_ptr (key, pair_ptr);¤	if (pair_ptr->offset != 0) {¤		size_t iofs = 0;¤		GCI::MMap::Memory_cvar mem = m_mmap_object_data->get_memory (pair_ptr->offset, iofs);¤		GDS_ASSERT (iofs + m_config.data_size <= m_mmap_object_data->get_page_size ());¤		memcpy (data, (char*) mem->get_base_addr () + iofs, m_config.data_size);¤		return true;¤	} else {¤		return false;¤	}¤	//#UC END# *4718A27F0272_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_4A44B098031B*¤	Dbt user_key((void*)&key, sizeof(SEA::IndexAPI::Key));¤	user_key.set_flags(DB_DBT_USERMEM);¤	user_key.set_ulen(sizeof(SEA::IndexAPI::Key));¤¤	Dbt user_data(data, m_config.data_size);¤	user_data.set_flags(DB_DBT_USERMEM);¤	user_data.set_ulen(m_config.data_size);¤¤	try {¤		int ret = const_cast<Db*>(m_db.ptr())->get(0, &user_key, &user_data, 0);¤		if(ret) {¤			LOG_E ((¤				"BERKELEY %s : Can't get data by key <%d> - error code <%d>"¤				, GDS_CURRENT_FUNCTION¤				, key¤				, ret¤			));¤			throw SEA::DatabaseAPI::IOError();¤		}¤	} catch (DbException& e) {¤		LOG_E (("FixedIndex_i::get_data: e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤	return true;¤	//#UC END# *4718A27F0272_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_4A646E6E0321*¤	bool res = const_cast<NdtClone::CloneIndex*>(m_clone_index.ptr())->read_local (key, data, m_config.data_size);¤	if(!res) {¤		LOG_E (("NDTCLONE %s couldn't get data by key <%Q>, read_local error!", GDS_CURRENT_FUNCTION, key));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	return res;¤	//#UC END# *4718A27F0272_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_4A703F490366*¤	bool res = const_cast<MyisamWrapper*>(m_myisam.ptr())->get_data(¤		key¤		, (unsigned char*)data¤		, m_config.data_size¤	);¤	if(!res) {¤		LOG_E (("Myisam %s couldn't read data from MyisamIndex at index %Q.", GDS_CURRENT_FUNCTION, key));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	return true;¤	//#UC END# *4718A27F0272_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A27F0272_4A8A76E9034C*"
			    value      	(value Text 
|//#UC START# *4718A27F0272_4A8A76E9034C*¤	return get_data_direct(key, data);¤	//#UC END# *4718A27F0272_4A8A76E9034C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE100240"))
		    quid       	"4718A27F0272"
		    documentation 	"Получает данные по ключу из индекса. Всегда index_config.data_size байт. Заботу за выделение памяти под буфер данных берет на себя пользователь"
		    parameters 	(list Parameters
			(object Parameter "key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4718A24201E2"))
			    quid       	"471C942B0235"
			    type       	"Key"
			    quidu      	"4718A24201E2")
			(object Parameter "inout data"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4718A1B40079"))
			    quid       	"4718BA5B01C0"
			    type       	"Data"
			    quidu      	"4718A1B40079"))
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE100240")
		(object Operation "set_data"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"471CC3C90071")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_4727210E0156*¤	Dbt dbt_key ((void *) &key, (size_t) m_config.key_size);¤	dbt_key.set_ulen ((size_t) m_config.key_size);¤	dbt_key.set_flags (DB_DBT_USERMEM);¤	Dbt dbt_data ((void *) data, (size_t) m_config.data_size);¤	dbt_data.set_ulen ((size_t) m_config.data_size);¤	dbt_data.set_flags (DB_DBT_USERMEM);¤	try {¤		int ret = m_db->put (0, &dbt_key, &dbt_data, 0);¤	} catch (DbException& e) {¤		LOG_E (("BERKELEY FixedIndex_i::set_data (): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	} catch (...) {¤		LOG_E (("BERKELEY FixedIndex_i::set_data (): ..."));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4718A29A00EC_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_474812320256*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_474812320256*¤	bool result = false;¤¤	long sqlcode = 0;¤¤	char data_buf [2*(65536/2)];¤	bin_to_Ox (data, data_buf, m_config.data_size);¤	data_buf [m_config.data_size*2] = 0;¤¤	isc_start_transaction (m_status, &m_trans, 1, m_db_local->get_db (), m_tpb.isc_tpb_len, m_tpb.isc_tpb);¤    if (m_row_sql_statement.dsql_execute_stmt_update (result, m_status, *(m_db_local->get_db ()), m_trans, &key, data_buf)) {¤		sqlcode = isc_sqlcode (m_status);¤		isc_print_status (m_status);¤		LOG_E (("FIREBIRD FixedIndex_i::set_data (): update IOError, sqlcode = %d", sqlcode));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	if (!result) {¤		if (m_row_sql_statement.dsql_execute_stmt_insert (m_status, *(m_db_local->get_db ()), m_trans, &key, data_buf)) {¤			sqlcode = isc_sqlcode (m_status);¤			isc_print_status (m_status);¤			LOG_E (("FIREBIRD FixedIndex_i::set_data (): insert IOError, sqlcode = %d", sqlcode));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	}¤	isc_commit_transaction (m_status, &m_trans);¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ();¤	}¤	//#UC END# *4718A29A00EC_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_4756E04101A4*¤	int rc = m_db_file->seek ((double) key);¤	if (rc == r4success) {¤		m_db_file->lock (m_db_file->recNo ());¤		m_field_data->assign ((char *) data, m_config.data_size);¤		//m_db_file->flush (); // Quantify: too slow¤		m_db_file->unlock ();¤	}¤	if (rc == r4eof) {¤		m_db_file->appendStart ();¤		m_field_key->assignLong ((long) key);¤		m_field_data->assign ((char *) data, m_config.data_size);¤		m_db_file->append ();¤		m_db_file->unlock ();¤	}¤	if ((rc != r4success) && (rc != r4eof)) {¤		LOG_E (("CODEBASE FixedIndex_i::set_data (): error = rc bad: %d", rc));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ();¤	}¤	//#UC END# *4718A29A00EC_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_47664F7400C0*¤	m_clone_index->update_local (key, data, m_config.data_size);¤	//#UC END# *4718A29A00EC_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_476939D7005D*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_476939D7005D*¤	char data_buf [2*(65536/2)];¤	bin_to_Ox (data, data_buf, m_config.data_size);¤	data_buf [m_config.data_size*2] = 0; // since Empress accepts 0-terminated strings¤	addr recdesc = 0;¤	addr retdesc = 0;¤	bool flag = this->get_recdesc ((long) key, recdesc, retdesc);¤	bool fo = mrgetend (retdesc);¤	if (flag) { // update¤		addr nrecdesc = mrmkrec (m_tabdesc);¤		if (nrecdesc == 0) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (upd): mrmkrec error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		bool flag2 = mrcopyr (nrecdesc, recdesc);¤		if (!flag2) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (upd): mrcopyr error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		bool flag3 = mrputvi (recdesc, m_keydesc, (int) key);¤		if (!flag3) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (upd): mrputvi error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		bool flag4 = mrputvs (recdesc, m_datadesc, data_buf);¤		if (!flag4) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (upd): mrputvs error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		bool flag5 = mrtput (nrecdesc, recdesc);¤		if (!flag5) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (upd): mrtput error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		bool foo2 = mrfrrec (nrecdesc);¤	} else { // add¤		//bool foo = mrfrrec (recdesc); //always allocated by get_recdesc ()¤		//recdesc = mrmkrec (m_tabdesc);¤		if (recdesc == 0) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (): mrmkrec error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		bool flag = mrputvi (recdesc, m_keydesc, (int) key);¤		if (!flag) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (): mrputvi error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		bool flag2 = mrputvs (recdesc, m_datadesc, data_buf);¤		if (!flag2) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (): mrputvs error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		bool flag3 = mrtadd (recdesc); // WARNING mrtaddend¤		if (!flag) {¤			LOG_E (("EMPRESS FixedIndex_i::set_data (): mrtadd error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	}¤	bool foo = mrfrrec (recdesc);¤	//#UC END# *4718A29A00EC_476939D7005D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_476A3CDD0003*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_476A3CDD0003*¤	//LOG_I (("HYTECH FixedIndex_i::set_data (): key = %d", (int) key));¤	HytechDLL::lData hytech_data;¤	hytech_data.rKey = (int) key;¤	if (hytech_data.rKey == 32767) {¤		int x = 0;¤	}¤	//hytech_data.rKey2 = (int) (( (ACE_UINT64) key >> 32) & (ACE_UINT64) 0xFFFFFFFFul);¤	ACE_OS::memcpy (hytech_data.aData, data, m_config.data_size);¤	int res = HytechDLL::SetData2 (m_table_handle, &hytech_data.rKey);¤	if (res < 0) {¤		LOG_E (("HYTECH FixedIndex_i::set_data (): error = res = %d", res));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ();¤	}¤	//#UC END# *4718A29A00EC_476A3CDD0003*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_478B8CAA02CE*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_478B8CAA02CE*¤	char data_buf [2*(65536/2)];¤	bin_to_Ox (data, data_buf, m_config.data_size);¤	data_buf [m_config.data_size*2] = 0;¤¤    char insert_row_sql_statement_buf [1024];¤	sprintf (insert_row_sql_statement_buf, "INSERT INTO %s (id, buf) VALUES (%d, '%s')", m_config.name, (int) key, data_buf);¤    char update_row_sql_statement_buf [1024];¤	sprintf (update_row_sql_statement_buf, "UPDATE %s SET buf = '%s' WHERE id = %d", m_config.name, data_buf, (int) key);¤¤	MapiHdl hdl = 0;¤	MapiHdl hdl0 = 0;¤	if (this->get_mapihdl ((long) key, hdl0)) {¤		hdl = mapi_query (m_db_servant->s_dbh, update_row_sql_statement_buf);¤	} else {¤		hdl = mapi_query (m_db_servant->s_dbh, insert_row_sql_statement_buf);¤	}¤	MapiMsg msg = mapi_error (m_db_servant->s_dbh);¤	if ((hdl == 0) || (msg != 0)) {¤		LOG_E (("MONETDB FixedIndex_i::set_data (): mapi_error = %d, mapi_result_error = %s", (int) msg, mapi_result_error (hdl)));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	mapi_close_handle (hdl0);¤	mapi_close_handle (hdl);¤	//#UC END# *4718A29A00EC_478B8CAA02CE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_4795FB8F025B*¤	char data_buf [2*(65536/2)];¤	bin_to_Ox (data, data_buf, m_config.data_size);¤	data_buf [m_config.data_size*2] = 0;¤	int affected = 0;¤	int exu = m_row_sql_statement.dsql_execute_stmt_update (affected, m_db_local->get_mysqlh (), &key, data_buf);¤	if (exu != 0) {¤		LOG_E (("MYSQL FixedIndex_i::set_data (): IOError, mysql_errno/mysql_error = %d/%s", mysql_errno (m_db_local->get_mysqlh ()), mysql_error (m_db_local->get_mysqlh ())));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	if (affected == 0) {¤		int exi = m_row_sql_statement.dsql_execute_stmt_insert (m_db_local->get_mysqlh (), &key, data_buf);¤		if (exi != 0) {¤			LOG_E (("MYSQL FixedIndex_i::set_data (): IOError, mysql_errno/mysql_error = %d/%s", mysql_errno (m_db_local->get_mysqlh ()), mysql_error (m_db_local->get_mysqlh ())));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	}¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ("FixedIndex_i::set_data ()");¤	}¤	//#UC END# *4718A29A00EC_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_47CD39C10050*¤	¤	//#UC END# *4718A29A00EC_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_47D7D8C4013F*¤	char data_buf [2*(65536/2)];¤	bin_to_Ox (data, data_buf, m_config.data_size);¤	data_buf [m_config.data_size*2] = 0;¤¤	char ltreekey [256];¤	ltree4int ((int) key, ltreekey);¤¤    char update_row_sql_statement_buf [1024];¤	sprintf (update_row_sql_statement_buf, "UPDATE %s SET buf = '%s' WHERE id = '%s'", m_config.name, data_buf, ltreekey);¤	PGresult* res = PQexec (m_db_local->get_connection (), update_row_sql_statement_buf);¤	bool zero_tuples_affected = false;¤	if (PQresultStatus (res) != PGRES_COMMAND_OK) {¤		zero_tuples_affected = true;¤	} else {¤		char* ntuples = PQcmdTuples (res);¤		if (ACE_OS::strcmp (ntuples, "0") == 0) {¤			zero_tuples_affected = true;¤		}¤	}¤¤	if (zero_tuples_affected) {¤		char insert_row_sql_statement_buf [1024];¤		sprintf (insert_row_sql_statement_buf, "INSERT INTO %s (id, buf) VALUES ('%s', '%s')", m_config.name, ltreekey, data_buf);¤		PGresult* res2 = PQexec (m_db_local->get_connection (), insert_row_sql_statement_buf);¤		if (PQresultStatus (res2) != PGRES_COMMAND_OK) {¤			LOG_E (("POSTGRES FixedIndex_i::set_data (): SQL failed = %s (%s)", insert_row_sql_statement_buf, PQerrorMessage (m_db_local->get_connection ())));¤			PQclear (res2);¤			PQclear (res);¤			throw SEA::DatabaseAPI::IOError ();¤		}¤		PQclear (res2);¤	}¤	PQclear (res);¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ("FixedIndex_i::set_data ()");¤	}¤	//#UC END# *4718A29A00EC_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_48C7B3BC0231*¤	bool w = true;¤	bool r = false;¤	m_memory_index.get_data ((long long) key, (void*) data, (long long) m_config.data_size, w, r);¤	//#UC END# *4718A29A00EC_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_492AB3A001BE*¤	key += 1;¤	Dbt dbt_key ((void *) &key, (size_t) m_config.key_size);¤	dbt_key.set_ulen ((size_t) m_config.key_size);¤	dbt_key.set_flags (DB_DBT_USERMEM);¤	Dbt dbt_data ((void *) data, (size_t) m_config.data_size);¤	dbt_data.set_ulen ((size_t) m_config.data_size);¤	dbt_data.set_flags (DB_DBT_USERMEM);¤	try {¤		int ret = m_db->put (0, &dbt_key, &dbt_data, 0);¤	} catch (DbException& e) {¤		LOG_E (("BDBQUEUE FixedIndex_i::set_data (): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	} catch (...) {¤		LOG_E (("BDBQUEUE FixedIndex_i::set_data (): ..."));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4718A29A00EC_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_49738EF9014F*¤	GCI::MMap::LongSize file_ofset = key;¤¤	size_t inside_offset;¤	GCI::MMap::Memory_cvar memory = m_large_memory->get_memory(file_ofset, inside_offset);¤	memcpy((unsigned char*)memory->get_base_addr() + inside_offset, data, m_index_config.data_size);¤	//#UC END# *4718A29A00EC_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_499EA6300016*¤	FixedDataBytes d;¤	memcpy (d.buf, data, m_config.data_size);¤	(*m_xxl_map) [key] = d;¤	//#UC END# *4718A29A00EC_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_49AD37370343*¤	unsigned short crc16 = CRC16 (key);¤	data_type* nbatches_vec = (data_type*) m_db_local->get_bloom_filter_manager ().get_primary_crc_table ();¤	unsigned long nkeys = 0;¤	unsigned long bpk = 0;¤	for (DatabaseIO::Offset64 batch_number = 0; batch_number < nbatches_vec [crc16]; ++batch_number) {¤		DatabaseIO::Offset64 bloom_filter_offset = m_db_local->get_bloom_filter_manager ().bloom_filter_offset (batch_number, crc16);¤		DatabaseIO::BloomFilter_var bloom_filter = m_db_local->get_bloom_filter_manager ().open (bloom_filter_offset, nkeys, bpk);¤		assert (nkeys == DatabaseIO::N128);¤		assert (bpk == DatabaseIO::B2);¤		unsigned long cur_num_of_keys = bloom_filter->get_current_number_of_keys ();¤		if (cur_num_of_keys < DatabaseIO::N128) { // batch is open¤			if (bloom_filter->add (key)) { // true = key is new for the batch and was added¤				++ cur_num_of_keys; // optimize - don't call bloom_filter->get_current_number_of_keys () twice¤				if (cur_num_of_keys == DatabaseIO::N128) {¤					// close batch¤					++nbatches_vec [crc16];¤				}¤				// data added, stop emulation¤				return;¤			} else {¤				// data found, stop emulation¤				return;¤			}¤		} else { // batch is close¤			if (bloom_filter->exists (key)) {¤				// data found, stop emulation¤				return;¤			} else {¤				// continue sequential search for batch¤			}¤		}¤	}¤	//#UC END# *4718A29A00EC_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_49B6561C006B*¤	//#UC END# *4718A29A00EC_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_49C8E09A02A8*¤	data_type d;¤	memcpy (d.buf, data, m_config.data_size);¤	d.buf [data_type::BUF_SIZE-1] |= 1;¤	(*m_io_vector) [(vector_type::size_type) key] = d;¤	//#UC END# *4718A29A00EC_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_49EDCBCF03A8*¤	DatabaseIO::IdOffsetPair my_pair;¤	my_pair.offset = m_cur_offset;¤	DatabaseIO::IdOffsetPair* pair_ptr = &my_pair;¤	m_db_local->id_to_offset_mmap_ptr (key, pair_ptr);¤	if (pair_ptr == &my_pair) {¤		m_cur_offset += m_config.data_size;¤	}¤	size_t iofs = 0;¤	GCI::MMap::Memory_var mem = m_mmap_object_data->get_memory (pair_ptr->offset, iofs);¤	GDS_ASSERT (iofs + m_config.data_size <= m_mmap_object_data->get_page_size ());¤	memcpy ((char*) mem->get_base_addr () + iofs, data, m_config.data_size);	¤	//#UC END# *4718A29A00EC_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_4A44B098031B*¤	Dbt user_key((void*)&key, sizeof(SEA::IndexAPI::Key));¤	user_key.set_flags(DB_DBT_USERMEM);¤	user_key.set_ulen(sizeof(SEA::IndexAPI::Key));¤¤	Dbt user_data(data, m_config.data_size);¤	user_data.set_flags(DB_DBT_USERMEM);¤	user_data.set_ulen(m_config.data_size);¤¤	try {¤		int ret = 0;¤		ret = m_db->put(0, &user_key, &user_data, 0);¤		if(ret != 0) {¤			LOG_E ((¤				"BERKELEY %s : Can't put data by key <%d> - error code <%d>"¤				, GDS_CURRENT_FUNCTION¤				, key¤				, ret¤			));¤			throw SEA::DatabaseAPI::IOError();¤		}¤	} catch (DbException& e) {¤		LOG_E (("FixedIndex_i::get_data: e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤	//#UC END# *4718A29A00EC_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_4A646E6E0321*¤	bool res = m_clone_index->update_local (key, data, m_config.data_size);¤	if(!res) {¤		LOG_E (("NDTCLONE %s couldn't set data by key <%Q>, update_local error!", GDS_CURRENT_FUNCTION, key));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4718A29A00EC_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_4A703F490366*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4718A29A00EC_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A29A00EC_4A8A76E9034C*"
			    value      	(value Text 
|//#UC START# *4718A29A00EC_4A8A76E9034C*¤	set_data_direct(key, data);¤	//#UC END# *4718A29A00EC_4A8A76E9034C*
			    )))
		    quid       	"4718A29A00EC"
		    documentation 	"Сохраняет данные по ключу в индексе. Всегда index_config.data_size байт"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4718A24201E2"))
			    quid       	"471C9440005F"
			    type       	"Key"
			    quidu      	"4718A24201E2")
			(object Parameter "data"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4718A1B40079"))
			    quid       	"471C9440008E"
			    type       	"Data"
			    quidu      	"4718A1B40079"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "remove_key"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"471CC3C90071")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4727210E0156*¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	Dbt dbt_key ((void *) &key, (size_t) m_config.key_size);¤	dbt_key.set_ulen ((size_t) m_config.key_size);¤	dbt_key.set_flags (DB_DBT_USERMEM);¤	try {¤		int ret = m_db->del (0, &dbt_key, 0);¤	} catch (DbException& e) {¤		LOG_E (("BERKELEY FixedIndex_i::remove_key (): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	} catch (...) {¤		LOG_E (("BERKELEY FixedIndex_i::remove_key (): ..."));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4718A2BB03BB_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_474812320256*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_474812320256*¤	long sqlcode = 0;¤	isc_start_transaction (m_status, &m_trans, 1, m_db_local->get_db (), m_tpb.isc_tpb_len, m_tpb.isc_tpb);¤	if (m_row_sql_statement.dsql_execute_stmt_del (m_status, *(m_db_local->get_db ()), m_trans, &key)) {¤		sqlcode = isc_sqlcode (m_status);¤		isc_print_status (m_status);¤		LOG_E (("FIREBIRD FixedIndex_i::remove_key (): IOError, sqlcode = %d", sqlcode));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	isc_commit_transaction (m_status, &m_trans);¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ();¤	}¤	//#UC END# *4718A2BB03BB_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4756E04101A4*¤	int rc = m_db_file->seek ((double) key);¤	if (rc == r4success) {¤		m_db_file->lock (m_db_file->recNo ());¤		m_db_file->deleteRec ();¤		m_db_file->unlock ();¤	}¤	if (rc == r4eof) {¤		// nothing¤	}¤	if ((rc != r4success) && (rc != r4eof)) {¤		LOG_E (("CODEBASE FixedIndex_i::remove_key (): error = rc bad: %d", rc));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ();¤	}¤	//#UC END# *4718A2BB03BB_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_47664F7400C0*¤	m_clone_index->remove_local(key);¤	//#UC END# *4718A2BB03BB_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_476939D7005D*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_476939D7005D*¤	addr recdesc = 0;¤	addr retdesc = 0;¤	bool flag = this->get_recdesc ((long) key, recdesc, retdesc);¤	if (flag) { // delete¤		bool flag2 = mrtdel (recdesc);¤		if (!flag2) {¤			LOG_E (("EMPRESS FixedIndex_i::remove_key (): mrtdel error = %d", mroperr));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	}¤	bool fo = mrgetend (retdesc);¤	bool foo2 = mrfrrec (recdesc);¤	//#UC END# *4718A2BB03BB_476939D7005D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_476A3CDD0003*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_476A3CDD0003*¤	HytechDLL::lData hytech_data;¤	hytech_data.rKey = (int) key;¤	//hytech_data.rKey2 = (int) (( (ACE_UINT64) key >> 32) & (ACE_UINT64) 0xFFFFFFFFul);¤	HytechDLL::DelData (m_table_handle, &hytech_data.rKey);¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ();¤	}¤	//#UC END# *4718A2BB03BB_476A3CDD0003*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_478B8CAA02CE*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_478B8CAA02CE*¤    char del_row_sql_statement_buf [1024];¤	sprintf (del_row_sql_statement_buf, "DELETE FROM %s WHERE id = %d", m_config.name, (int) key);¤	MapiHdl hdl = mapi_query (m_db_servant->s_dbh, del_row_sql_statement_buf);¤	MapiMsg msg = mapi_error (m_db_servant->s_dbh);¤	if ((hdl == 0) || (msg != 0)) {¤		LOG_E (("MONETDB FixedIndex_i::remove_key (): mapi_error = %d, mapi_result_error = %s", (int) msg, mapi_result_error (hdl)));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	mapi_close_handle (hdl);¤	//#UC END# *4718A2BB03BB_478B8CAA02CE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4795FB8F025B*¤	int exe = m_row_sql_statement.dsql_execute_stmt_del (m_db_local->get_mysqlh (), &key);¤	if (exe != 0) {¤		LOG_E (("MYSQL FixedIndex_i::remove_key (): IOError, mysql_errno/mysql_error = %d/%s", mysql_errno (m_db_local->get_mysqlh ()), mysql_error (m_db_local->get_mysqlh ())));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ("FixedIndex_i::remove_key ()");¤	}¤	//#UC END# *4718A2BB03BB_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_47CD39C10050*¤	¤	//#UC END# *4718A2BB03BB_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_47D7D8C4013F*¤	char ltreekey [256];¤	ltree4int ((int) key, ltreekey);¤¤    char del_row_sql_statement_buf [1024];¤	sprintf (del_row_sql_statement_buf, "DELETE FROM %s WHERE id = '%s'", m_config.name, ltreekey);¤	PGresult* res = PQexec (m_db_local->get_connection (), del_row_sql_statement_buf);¤	if (PQresultStatus (res) != PGRES_COMMAND_OK) {¤		LOG_E (("POSTGRES FixedIndex_i::remove_key (): SQL failed = %s (%s)", del_row_sql_statement_buf, PQerrorMessage (m_db_local->get_connection ())));¤		PQclear (res);¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	PQclear (res);¤	++m_statistics_count;¤	if ((m_statistics_count % m_max_statistics_count) == 0) {¤		this->set_statistics ("FixedIndex_i::remove_key ()");¤	}¤	//#UC END# *4718A2BB03BB_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_48C7B3BC0231*¤	bool w = true;¤	bool r = true;¤	m_memory_index.get_data ((long long) key, (void*) 0, (long long) m_config.data_size, w, r);¤	//#UC END# *4718A2BB03BB_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_492AB3A001BE*¤	key += 1;¤	assert (m_config.key_size <= sizeof (SEA::IndexAPI::Key));¤	Dbt dbt_key ((void *) &key, (size_t) m_config.key_size);¤	dbt_key.set_ulen ((size_t) m_config.key_size);¤	dbt_key.set_flags (DB_DBT_USERMEM);¤	try {¤		int ret = m_db->del (0, &dbt_key, 0);¤	} catch (DbException& e) {¤		LOG_E (("BDBQUEUE FixedIndex_i::remove_key (): e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	} catch (...) {¤		LOG_E (("BDBQUEUE FixedIndex_i::remove_key (): ..."));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4718A2BB03BB_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_49738EF9014F*¤	erase_object(key);¤	//#UC END# *4718A2BB03BB_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_499EA6300016*¤	m_xxl_map->erase (key);¤	//#UC END# *4718A2BB03BB_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_49AD37370343*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4718A2BB03BB_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_49B6561C006B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4718A2BB03BB_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_49C8E09A02A8*¤	if ((vector_type::size_type) key < m_io_vector->size ()) {¤		data_type d = (*m_io_vector) [(vector_type::size_type) key];¤		d.buf [data_type::BUF_SIZE-1] &= 0xFE;¤		(*m_io_vector) [(vector_type::size_type) key] = d;¤	}¤	//#UC END# *4718A2BB03BB_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_49EDCBCF03A8*¤	//#UC END# *4718A2BB03BB_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4A44B098031B*¤	Dbt dbt_key ((void *) &key, (size_t) m_config.key_size);¤	dbt_key.set_ulen ((size_t) m_config.key_size);¤	dbt_key.set_flags (DB_DBT_USERMEM);¤	try {¤		int ret = m_db->del (0, &dbt_key, 0);¤¤		if(ret != 0) {¤			LOG_E ((¤				"BERKELEY %s : Can't erase data by key <%Q> - error code <%d>"¤				, GDS_CURRENT_FUNCTION¤				, key¤				, ret¤			));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	} catch (DbException& e) {¤		LOG_E (("FixedIndex_i::%s: e.what () = %s", GDS_CURRENT_FUNCTION, e.what ()));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4718A2BB03BB_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4A646E6E0321*¤	bool res = m_clone_index->remove_local(key);¤	if(!res) {¤		LOG_E (("NDTCLONE %s couldn't remove key <%Q>, remove_local error!", GDS_CURRENT_FUNCTION, key));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4718A2BB03BB_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4A703F490366*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4718A2BB03BB_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4AA4FF19006C*¤	//#UC END# *4718A2BB03BB_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4AE6E951021C*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4718A2BB03BB_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4B6194C9030C*¤	if(!tcbdbout3 (m_bdb, &key, sizeof (SEA::IndexAPI::Key))) {¤		if (tcbdbecode (m_bdb) != TCESUCCESS) {¤			LOG_E ((¤				"Tokyo BDB %s (): error tcbdbout3: key = %Q, error_code = %s"¤				, GDS_CURRENT_FUNCTION¤				, (long long) key¤				, tcbdberrmsg (tcbdbecode (m_bdb))¤			));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	}¤	//#UC END# *4718A2BB03BB_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4718A2BB03BB_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *4718A2BB03BB_4B9A42C10257*¤	if(!tcbdbout3 (m_bdb, &key, sizeof (SEA::IndexAPI::Key))) {¤		if (tcbdbecode (m_bdb) != TCESUCCESS) {¤			LOG_E ((¤				"Tokyo BDB %s (): error tcbdbout3: key = %Q, error_code = %s"¤				, GDS_CURRENT_FUNCTION¤				, (long long) key¤				, tcbdberrmsg (tcbdbecode (m_bdb))¤			));¤			throw SEA::DatabaseAPI::IOError ();¤		}¤	}¤	//#UC END# *4718A2BB03BB_4B9A42C10257*
			    )))
		    quid       	"4718A2BB03BB"
		    documentation 	"Удаляет ключ из индекса вместе с данными, ассоциированными с ним"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4718A24201E2"))
			    quid       	"471C944802A3"
			    type       	"Key"
			    quidu      	"4718A24201E2"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "create"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"471CC3C90071")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"TargetStereotype"
			    value      	"cached")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"47A0A85300F9"))
		    quid       	"471C7F68009B"
		    documentation 	"Создает индекс с заданным именем и конфигурацией в заданной базе"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "nokey idx_cfg"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"471C5DE702C0"))
			    quid       	"47A0A88C0031"
			    type       	"IndexConfig"
			    quidu      	"471C5DE702C0")
			(object Parameter "nokey db"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"47189A1A0311"))
			    quid       	"47A0AA3002CA"
			    type       	"Database"
			    quidu      	"47189A1A0311"))
		    result     	"FixedIndexMemory"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"47A0A85300F9")
		(object Operation "open"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"471CC3C90071")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"TargetStereotype"
			    value      	"cached")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Must throw in error"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"dll export"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"47A0A85300F9"))
		    quid       	"471C7F98035A"
		    documentation 	"Открывает индекс с заданным именем в заданной базе"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE240068"))
			    quid       	"47288D6800E1"
			    type       	"string"
			    quidu      	"3DBFFE240068")
			(object Parameter "nokey db"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"47189A1A0311"))
			    quid       	"47A0AA2C0022"
			    type       	"Database"
			    quidu      	"47189A1A0311"))
		    result     	"FixedIndexMemory"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"47A0A85300F9")
		(object Operation "drop"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"471CC3C90071")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4727210E0156*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4727210E0156*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_474812320256*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_474812320256*¤	//#UC END# *471C8CAA0223_471C8CAA0223_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4756E04101A4*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_47664F7400C0*¤	//#UC END# *471C8CAA0223_471C8CAA0223_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_476939D7005D*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_476939D7005D*¤	//#UC END# *471C8CAA0223_471C8CAA0223_476939D7005D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_476A3CDD0003*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_476A3CDD0003*¤	//#UC END# *471C8CAA0223_471C8CAA0223_476A3CDD0003*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_478B8CAA02CE*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_478B8CAA02CE*¤	//#UC END# *471C8CAA0223_471C8CAA0223_478B8CAA02CE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4795FB8F025B*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_47CD39C10050*¤	//#UC END# *471C8CAA0223_471C8CAA0223_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_47D7D8C4013F*¤	//#UC END# *471C8CAA0223_471C8CAA0223_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_48C7B3BC0231*¤	//#UC END# *471C8CAA0223_471C8CAA0223_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_492AB3A001BE*¤	//#UC END# *471C8CAA0223_471C8CAA0223_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_49738EF9014F*¤	//#UC END# *471C8CAA0223_471C8CAA0223_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_499EA6300016*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_499EA6300016*¤	//#UC END# *471C8CAA0223_471C8CAA0223_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_49AD37370343*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_49AD37370343*¤	//#UC END# *471C8CAA0223_471C8CAA0223_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_49B6561C006B*¤	//#UC END# *471C8CAA0223_471C8CAA0223_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_49C8E09A02A8*¤	//#UC END# *471C8CAA0223_471C8CAA0223_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_49EDCBCF03A8*¤	//#UC END# *471C8CAA0223_471C8CAA0223_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4A44B098031B*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4A646E6E0321*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4A703F490366*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4A703F490366*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4A8A76E9034C*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4A8A76E9034C*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4A8A76E9034C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4AA4FF19006C*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4AE6E951021C*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4B6194C9030C*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C8CAA0223_471C8CAA0223_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *471C8CAA0223_471C8CAA0223_4B9A42C10257*¤	//#UC END# *471C8CAA0223_471C8CAA0223_4B9A42C10257*
			    )))
		    quid       	"471C8CAA0223"
		    documentation 	"Закрывает индекс и удаляет его из базы"
		    stereotype 	"remover"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "open_ro"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"TargetStereotype"
			    value      	"const,cached")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Must throw in error"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"dll export"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"471CC3C90071")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"47A0A85300F9"))
		    quid       	"471DD3880039"
		    documentation 	"Открывает индекс с заданным именем в заданной базе в режиме read-only"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE240068"))
			    quid       	"47288D6C02DE"
			    type       	"string"
			    quidu      	"3DBFFE240068")
			(object Parameter "nokey db"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"47189A1A0311"))
			    quid       	"47A0A9AC0091"
			    type       	"Database"
			    quidu      	"47189A1A0311"))
		    result     	"FixedIndexMemory"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"47A0A85300F9")
		(object Operation "reserve_internal_key"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4727213701F4*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4727213701F4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_4727213701F4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_47664F880013*"
			    value      	(value Text 
|//#UC START# *4A0438080208_47664F880013*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_47664F880013*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_47CD39EA03D5*"
			    value      	(value Text 
|//#UC START# *4A0438080208_47CD39EA03D5*¤	m_last_id = *(const long*)id;¤	si.is_exist = false;¤	si.storage_key = m_last_id;¤	si.type_id = type_id;¤	//#UC END# *4A0438080208_47CD39EA03D5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_48C7B44E01F3*"
			    value      	(value Text 
|//#UC START# *4A0438080208_48C7B44E01F3*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_48C7B44E01F3*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49734248021B*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49734248021B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_49734248021B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_492AB3B20346*"
			    value      	(value Text 
|//#UC START# *4A0438080208_492AB3B20346*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_492AB3B20346*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4748124801B6*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4748124801B6*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_4748124801B6*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4756E06902CB*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4756E06902CB*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_4756E06902CB*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4795FBD503B0*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4795FBD503B0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_4795FBD503B0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_47D7D8DF0114*"
			    value      	(value Text 
|//#UC START# *4A0438080208_47D7D8DF0114*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_47D7D8DF0114*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_499EA65E0162*"
			    value      	(value Text 
|//#UC START# *4A0438080208_499EA65E0162*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_499EA65E0162*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49AD37EC01D4*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49AD37EC01D4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_49AD37EC01D4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49B656580394*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49B656580394*¤	si.is_exist = false;¤	si.type_id = type_id;¤	si.storage_key = 1;¤	//#UC END# *4A0438080208_49B656580394*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49C8DF0A0132*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49C8DF0A0132*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_49C8DF0A0132*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49EDCC78001A*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49EDCC78001A*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_49EDCC78001A*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4727210E0156*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_474812320256*"
			    value      	(value Text 
|//#UC START# *4A0438080208_474812320256*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4756E04101A4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4A0438080208_47664F7400C0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4795FB8F025B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4A0438080208_47CD39C10050*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4A0438080208_47D7D8C4013F*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4A0438080208_48C7B3BC0231*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49738EF9014F*¤	GCI::MMap::Memory_var system_memory = m_large_memory->get_system_memory();¤	if(id) {¤		memcpy(¤			(unsigned char*)system_memory->get_base_addr() + sizeof(SEA::IndexAPI::IndexConfig)¤			, id¤			, m_index_config.key_size¤		);¤	}¤¤	SEA::IndexAPI::Key key = *((SEA::IndexAPI::Key*)id);¤	GCI::MMap::LongSize buf_index = key/m_objects_count;¤	size_t inside_ofset = key % m_objects_count;¤	GCI::MMap::LongSize file_ofset ¤		= buf_index*m_index_config.buffer_size + inside_ofset*m_index_config.data_size + m_bitmap_size;¤¤	si.is_exist = false;¤	si.storage_key = file_ofset;¤	si.type_id = type_id;¤	//#UC END# *4A0438080208_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4A0438080208_492AB3A001BE*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4A0438080208_499EA6300016*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49AD37370343*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49B6561C006B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49C8E09A02A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0438080208_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4A0438080208_49EDCBCF03A8*¤	si.user_id = id;¤¤	GCI::MMap::Memory_var system_memory = m_large_memory->get_system_memory();¤	if(id) {¤		memcpy(¤			(unsigned char*)system_memory->get_base_addr() + sizeof(SEA::IndexAPI::IndexConfig)¤			, id¤			, m_index_config.key_size¤		);¤	}¤¤	unsigned int hashed_key = cmph_search(m_mphf_hash, (const char*)id, sizeof(SEA::IndexAPI::Key));¤¤	SEA::IndexAPI::Key key = hashed_key;¤	GCI::MMap::LongSize buf_index = key/m_objects_count;¤	size_t inside_ofset = key % m_objects_count;¤	GCI::MMap::LongSize file_ofset ¤		= buf_index*m_index_config.buffer_size + inside_ofset*(m_index_config.data_size+m_index_config.user_id_len);¤¤	si.is_exist = false;¤	si.storage_key = file_ofset;¤	si.type_id = type_id;¤	//#UC END# *4A0438080208_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4A44B098031B*¤	si.user_id = id;¤	si.is_exist = false;¤	si.storage_key = *((SEA::IndexAPI::Key*)id);¤	si.type_id = type_id;¤	//#UC END# *4A0438080208_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4A646E6E0321*¤	si.user_id = id;¤	si.is_exist = false;¤	si.storage_key = *((SEA::IndexAPI::Key*)id);¤	si.type_id = type_id;¤	//#UC END# *4A0438080208_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4A703F490366*¤	si.user_id = id;¤	si.is_exist = false;¤	si.storage_key = *((SEA::IndexAPI::Key*)id);¤	si.type_id = type_id;¤	//#UC END# *4A0438080208_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4AA4FF19006C*¤	si.user_id = id;¤	si.is_exist = false;¤	//#UC END# *4A0438080208_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4AE6E951021C*¤	si.is_exist = false;¤	si.storage_key = cmph_search(m_mphf_hash, (const char*)id, sizeof(SEA::IndexAPI::Key));¤	si.type_id = type_id;¤	si.user_id = id;¤	//#UC END# *4A0438080208_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4B6194C9030C*¤	si.user_id = id;¤	si.is_exist = false;¤	si.storage_key = *((SEA::IndexAPI::Key*)id);¤	si.type_id = type_id;¤	//#UC END# *4A0438080208_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0438080208_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *4A0438080208_4B9A42C10257*¤	si.user_id = id;¤	si.is_exist = false;¤	si.storage_key = *((SEA::IndexAPI::Key*)id);¤	si.type_id = type_id;¤	//#UC END# *4A0438080208_4B9A42C10257*
			    )))
		    quid       	"4A0438080208"
		    documentation 	"Функция резервирует внутренний ключ по заданному идентификатору или сообщает о том, что объект с заданным идентификатором уже существует"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in type_id"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"497606750124"))
			    quid       	"4A0438080285"
			    type       	"TypeId"
			    quidu      	"497606750124")
			(object Parameter "in id"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3ECB343C024C"))
			    quid       	"4A04380802F2"
			    type       	"pointer"
			    quidu      	"3ECB343C024C")
			(object Parameter "inout si"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"497059C302C0"))
			    quid       	"4A043808035F"
			    type       	"StateInfo"
			    quidu      	"497059C302C0"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "release_internal_key"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4727213701F4*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4727213701F4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4727213701F4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_47664F880013*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_47664F880013*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_47664F880013*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_47CD39EA03D5*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_47CD39EA03D5*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_47CD39EA03D5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_48C7B44E01F3*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_48C7B44E01F3*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_48C7B44E01F3*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49734248021B*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49734248021B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49734248021B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_492AB3B20346*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_492AB3B20346*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_492AB3B20346*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4748124801B6*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4748124801B6*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4748124801B6*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4756E06902CB*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4756E06902CB*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4756E06902CB*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4795FBD503B0*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4795FBD503B0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4795FBD503B0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_47D7D8DF0114*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_47D7D8DF0114*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_47D7D8DF0114*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_499EA65E0162*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_499EA65E0162*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_499EA65E0162*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49AD37EC01D4*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49AD37EC01D4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49AD37EC01D4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49B656580394*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49B656580394*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49B656580394*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49C8DF0A0132*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49C8DF0A0132*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49C8DF0A0132*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49EDCC78001A*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49EDCC78001A*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49EDCC78001A*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4727210E0156*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_474812320256*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_474812320256*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4756E04101A4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_47664F7400C0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4795FB8F025B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_47CD39C10050*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_47D7D8C4013F*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_48C7B3BC0231*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49738EF9014F*¤	erase_object(key);¤	//#UC END# *4A04380D002C_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_492AB3A001BE*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_499EA6300016*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49AD37370343*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49B6561C006B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49C8E09A02A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_49EDCBCF03A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4A44B098031B*¤	//#UC END# *4A04380D002C_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4A646E6E0321*¤	//#UC END# *4A04380D002C_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4A703F490366*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4AA4FF19006C*¤	//#UC END# *4A04380D002C_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4AE6E951021C*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4B6194C9030C*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A04380D002C_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *4A04380D002C_4B9A42C10257*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A04380D002C_4B9A42C10257*
			    )))
		    quid       	"4A04380D002C"
		    documentation 	"Освобождает зарезервированный внутренний ключ хранилища"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"49705BC503C3"))
			    quid       	"4A04380D008A"
			    type       	"StorageKey"
			    quidu      	"49705BC503C3"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "get_state_info"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_492AB3B20346*"
			    value      	(value Text 
|//#UC START# *4A043814006F_492AB3B20346*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_492AB3B20346*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4727213701F4*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4727213701F4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_4727213701F4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_47664F880013*"
			    value      	(value Text 
|//#UC START# *4A043814006F_47664F880013*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_47664F880013*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_47CD39EA03D5*"
			    value      	(value Text 
|//#UC START# *4A043814006F_47CD39EA03D5*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_47CD39EA03D5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_48C7B44E01F3*"
			    value      	(value Text 
|//#UC START# *4A043814006F_48C7B44E01F3*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_48C7B44E01F3*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49734248021B*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49734248021B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_49734248021B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4748124801B6*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4748124801B6*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_4748124801B6*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4756E06902CB*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4756E06902CB*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_4756E06902CB*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4795FBD503B0*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4795FBD503B0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_4795FBD503B0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_47D7D8DF0114*"
			    value      	(value Text 
|//#UC START# *4A043814006F_47D7D8DF0114*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_47D7D8DF0114*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_499EA65E0162*"
			    value      	(value Text 
|//#UC START# *4A043814006F_499EA65E0162*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_499EA65E0162*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49AD37EC01D4*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49AD37EC01D4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_49AD37EC01D4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49B656580394*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49B656580394*¤	si.is_exist = true;¤	long* ptr_long = (long*)id;¤	if (*ptr_long == 1) {¤		si.type_id = type_id;¤	} else if (*ptr_long == 2) {¤		si.type_id = 0x496F04A4031A;¤	}¤	si.storage_key = 1;¤	//#UC END# *4A043814006F_49B656580394*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49C8DF0A0132*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49C8DF0A0132*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_49C8DF0A0132*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49EDCC78001A*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49EDCC78001A*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_49EDCC78001A*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4727210E0156*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_474812320256*"
			    value      	(value Text 
|//#UC START# *4A043814006F_474812320256*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4756E04101A4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4A043814006F_47664F7400C0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4795FB8F025B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4A043814006F_47CD39C10050*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4A043814006F_47D7D8C4013F*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4A043814006F_48C7B3BC0231*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49738EF9014F*¤	SEA::IndexAPI::Key key = *((SEA::IndexAPI::Key*)si.user_id);¤	GCI::MMap::LongSize buf_index = key/m_objects_count;¤	size_t inside_ofset = key % m_objects_count;¤	GCI::MMap::LongSize file_ofset ¤		= buf_index*m_index_config.buffer_size + inside_ofset*m_index_config.data_size + m_bitmap_size;¤¤	size_t inside_offset;¤	GCI::MMap::Memory_cvar memory = m_large_memory->get_memory(file_ofset, inside_offset);¤	¤	unsigned char bit_mask = 1;¤	bit_mask <<= (inside_ofset % 8);¤	unsigned long in_mask_ofset = inside_ofset / 8;¤	¤	si.is_exist = *((unsigned char*)memory->get_base_addr() + in_mask_ofset) & bit_mask;¤	si.storage_key = file_ofset;¤	si.type_id = type_id;¤	//#UC END# *4A043814006F_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4A043814006F_492AB3A001BE*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4A043814006F_499EA6300016*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49AD37370343*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49B6561C006B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49C8E09A02A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A043814006F_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4A043814006F_49EDCBCF03A8*¤	unsigned int hashed_key = cmph_search(m_mphf_hash, (const char*)si.user_id, sizeof(SEA::IndexAPI::Key));¤¤	SEA::IndexAPI::Key key = hashed_key;¤	GCI::MMap::LongSize buf_index = key/m_objects_count;¤	size_t inside_ofset = key % m_objects_count;¤	GCI::MMap::LongSize file_ofset ¤		= buf_index*m_index_config.buffer_size + inside_ofset*(m_index_config.data_size+m_index_config.user_id_len);¤¤	size_t inside_offset;¤	GCI::MMap::Memory_cvar memory = m_large_memory->get_memory(file_ofset, inside_offset);¤	¤	si.is_exist = (¤		*((SEA::IndexAPI::Key*)((unsigned char*)memory->get_base_addr() + inside_offset)) ¤		== *((SEA::IndexAPI::Key*)si.user_id)¤	);¤	si.storage_key = file_ofset;¤	si.type_id = type_id;¤	//#UC END# *4A043814006F_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4A44B098031B*¤	Dbt key((void*)si.user_id, sizeof(SEA::IndexAPI::Key));¤	key.set_flags(DB_DBT_USERMEM);¤	key.set_ulen(sizeof(SEA::IndexAPI::Key));¤	try {¤		int ret = m_db->exists(0, &key, 0);¤		if((ret != 0) && (ret != DB_NOTFOUND)) {¤			LOG_E ((¤				"BERKELEY %s : Can't find out key existance <%Q> - error code <%d>"¤				, GDS_CURRENT_FUNCTION¤				, *((SEA::IndexAPI::Key*)si.user_id)¤				, ret¤			));¤			throw SEA::DatabaseAPI::IOError();¤		}¤		if(ret == DB_NOTFOUND) {¤			LOG_E (("BERKELEY %s : Couldn't find key <%Q>", GDS_CURRENT_FUNCTION, *((SEA::IndexAPI::Key*)si.user_id)));¤		}¤		si.is_exist = (ret == 0);¤		si.storage_key = *((SEA::IndexAPI::Key*)si.user_id);¤		si.type_id = type_id;¤	} catch (DbException& e) {¤		LOG_E (("FixedIndex_i::%s: e.what () = %s", GDS_CURRENT_FUNCTION, e.what ()));¤		throw;¤	}¤	//#UC END# *4A043814006F_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4A646E6E0321*¤	si.is_exist = m_clone_index->exists(*((SEA::DatabaseAPI::StorageKey*)si.user_id));¤	si.storage_key = *((SEA::DatabaseAPI::StorageKey*)si.user_id);¤	si.type_id = type_id;¤	//#UC END# *4A043814006F_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4A703F490366*¤	si.is_exist = true;¤	si.storage_key = *((SEA::DatabaseAPI::StorageKey*)si.user_id);¤	si.type_id = type_id;¤	//#UC END# *4A043814006F_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4AA4FF19006C*¤	si.is_exist = true;¤	si.storage_key = *((SEA::IndexAPI::Key*)si.user_id);¤	si.type_id = type_id;¤	//#UC END# *4A043814006F_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4AE6E951021C*¤	si.storage_key = cmph_search(m_mphf_hash, (const char*)si.user_id, sizeof(SEA::IndexAPI::Key));¤¤	LARGE_INTEGER pointer_offset;¤	pointer_offset.QuadPart ¤		= m_system_memory_size + si.storage_key * (m_index_config.data_size + m_index_config.user_id_len);¤	¤	if(!SetFilePointerEx(m_file, pointer_offset, NULL, FILE_BEGIN)) {¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	DWORD dwReadBytes=0;¤	if(!ReadFile(m_file, (LPVOID)m_page.begin(), m_page_size, &dwReadBytes, NULL)) {¤		throw SEA::DatabaseAPI::IOError();¤	}¤¤	if(dwReadBytes < m_index_config.data_size + m_index_config.user_id_len) {¤		throw SEA::DatabaseAPI::IOError();¤	}¤	si.is_exist = (*((SEA::IndexAPI::Key*)si.user_id) == *((SEA::IndexAPI::Key*)m_page.begin())); ¤	si.type_id = type_id;¤	if (si.is_exist) {¤		const_cast<SEA::IndexAPI::BaseStateManager*>(state_manager)->cach_state(¤			si.storage_key¤			, m_page.begin() + sizeof(SEA::IndexAPI::Key)¤		);¤	}¤	//#UC END# *4A043814006F_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4B6194C9030C*¤	si.is_exist = true;¤	si.storage_key = *((SEA::DatabaseAPI::StorageKey*)si.user_id);¤	si.type_id = type_id;¤	//#UC END# *4A043814006F_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A043814006F_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *4A043814006F_4B9A42C10257*¤	si.is_exist = true;¤	si.storage_key = *((SEA::DatabaseAPI::StorageKey*)si.user_id);¤	si.type_id = type_id;¤	//#UC END# *4A043814006F_4B9A42C10257*
			    )))
		    quid       	"4A043814006F"
		    documentation 	"По идентификатору возвращает состояние объекта."
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in type_id"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"497606750124"))
			    quid       	"4A04381400CC"
			    type       	"TypeId"
			    quidu      	"497606750124")
			(object Parameter "inout si"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"497059C302C0"))
			    quid       	"4A04381401B6"
			    type       	"StateInfo"
			    quidu      	"497059C302C0")
			(object Parameter "state_manager"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4B4DE322005D"))
			    quid       	"4B5079630112"
			    type       	"BaseStateManager"
			    quidu      	"4B4DE322005D"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "create2"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"4A097B270017"
		    documentation 	"Создает индекс с заданным именем и конфигурацией в заданной базе"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "idx_cfg"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"471C5DE702C0"))
			    quid       	"4A097B6B0063"
			    type       	"IndexConfig"
			    quidu      	"471C5DE702C0")
			(object Parameter "db"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"47189A1A0311"))
			    quid       	"4A097B6B00DF"
			    type       	"Database"
			    quidu      	"47189A1A0311"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "open2"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"4A097B8D01E8"
		    documentation 	"Открывает индекс с заданным именем в заданной базе"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE240068"))
			    quid       	"4A097BC3019C"
			    type       	"string"
			    quidu      	"3DBFFE240068")
			(object Parameter "db"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"47189A1A0311"))
			    quid       	"4A097BC30214"
			    type       	"Database"
			    quidu      	"47189A1A0311"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "open_ro2"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"TargetStereotype"
			    value      	"const"))
		    quid       	"4A097BD802A2"
		    documentation 	"Открывает индекс с заданным именем в заданной базе в режиме read-only"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE240068"))
			    quid       	"4A097C1F00FB"
			    type       	"string"
			    quidu      	"3DBFFE240068")
			(object Parameter "db"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"47189A1A0311"))
			    quid       	"4A097C1F0176"
			    type       	"Database"
			    quidu      	"47189A1A0311"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "get_last_id"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4727213701F4*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4727213701F4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4727213701F4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4748124801B6*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4748124801B6*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4748124801B6*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4756E06902CB*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4756E06902CB*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4756E06902CB*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_47664F880013*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_47664F880013*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_47664F880013*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4795FBD503B0*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4795FBD503B0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4795FBD503B0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_47CD39EA03D5*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_47CD39EA03D5*¤	*((long*) id) = m_last_id;¤	//#UC END# *4A0D59D300E4_47CD39EA03D5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_47D7D8DF0114*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_47D7D8DF0114*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_47D7D8DF0114*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_48C7B44E01F3*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_48C7B44E01F3*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_48C7B44E01F3*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49734248021B*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49734248021B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_49734248021B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_492AB3B20346*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_492AB3B20346*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_492AB3B20346*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_499EA65E0162*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_499EA65E0162*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_499EA65E0162*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49AD37EC01D4*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49AD37EC01D4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_49AD37EC01D4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49B656580394*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49B656580394*¤	//#UC END# *4A0D59D300E4_49B656580394*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49C8DF0A0132*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49C8DF0A0132*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_49C8DF0A0132*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49EDCC78001A*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49EDCC78001A*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_49EDCC78001A*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4727210E0156*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_474812320256*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_474812320256*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4756E04101A4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_47664F7400C0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4795FB8F025B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_47CD39C10050*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_47D7D8C4013F*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_48C7B3BC0231*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49738EF9014F*¤	GCI::MMap::Memory_cvar system_memory = m_large_memory->get_system_memory();¤	if(id) {¤		memcpy(¤			id¤			, (unsigned char*)system_memory->get_base_addr() + sizeof(SEA::IndexAPI::IndexConfig)¤			, m_index_config.key_size¤		);¤	}¤	//#UC END# *4A0D59D300E4_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_492AB3A001BE*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_499EA6300016*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49AD37370343*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49B6561C006B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49C8E09A02A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_49EDCBCF03A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4A44B098031B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4A646E6E0321*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4A703F490366*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4AA4FF19006C*¤	//#UC END# *4A0D59D300E4_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4AE6E951021C*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4B6194C9030C*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A0D59D300E4_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *4A0D59D300E4_4B9A42C10257*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A0D59D300E4_4B9A42C10257*
			    )))
		    quid       	"4A0D59D300E4"
		    documentation 	"Возвращает идентификатор последнего созданного объекта с заданным типлм идентификатора"
		    parameters 	(list Parameters
			(object Parameter "in type_id"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"497606750124"))
			    quid       	"4A0D59D30151"
			    type       	"TypeId"
			    quidu      	"497606750124")
			(object Parameter "inout id"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3ECB343C024C"))
			    quid       	"4A0D59D301DD"
			    type       	"pointer"
			    quidu      	"3ECB343C024C"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "get_id"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4727213701F4*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4727213701F4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4727213701F4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4748124801B6*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4748124801B6*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4748124801B6*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4756E06902CB*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4756E06902CB*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4756E06902CB*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_47664F880013*"
			    value      	(value Text 
|//#UC START# *4A1503340121_47664F880013*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_47664F880013*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4795FBD503B0*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4795FBD503B0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4795FBD503B0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_47CD39EA03D5*"
			    value      	(value Text 
|//#UC START# *4A1503340121_47CD39EA03D5*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_47CD39EA03D5*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_47D7D8DF0114*"
			    value      	(value Text 
|//#UC START# *4A1503340121_47D7D8DF0114*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_47D7D8DF0114*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_48C7B44E01F3*"
			    value      	(value Text 
|//#UC START# *4A1503340121_48C7B44E01F3*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_48C7B44E01F3*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49734248021B*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49734248021B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49734248021B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_492AB3B20346*"
			    value      	(value Text 
|//#UC START# *4A1503340121_492AB3B20346*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_492AB3B20346*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_499EA65E0162*"
			    value      	(value Text 
|//#UC START# *4A1503340121_499EA65E0162*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_499EA65E0162*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49AD37EC01D4*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49AD37EC01D4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49AD37EC01D4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49B656580394*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49B656580394*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49B656580394*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49C8DF0A0132*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49C8DF0A0132*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49C8DF0A0132*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49EDCC78001A*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49EDCC78001A*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49EDCC78001A*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4727210E0156*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_474812320256*"
			    value      	(value Text 
|//#UC START# *4A1503340121_474812320256*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4756E04101A4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4A1503340121_47664F7400C0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4795FB8F025B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4A1503340121_47CD39C10050*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4A1503340121_47D7D8C4013F*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4A1503340121_48C7B3BC0231*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49738EF9014F*¤	unsigned long long buffer_count = internal_key / m_index_config.buffer_size;¤	unsigned long long internal_count ¤		= ((internal_key % m_index_config.buffer_size) - m_bitmap_size) / m_index_config.data_size;¤	*((unsigned long long*)key) = buffer_count * m_objects_count + internal_count;¤	//#UC END# *4A1503340121_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4A1503340121_492AB3A001BE*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4A1503340121_499EA6300016*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49AD37370343*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49B6561C006B*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49B6561C006B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49B6561C006B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49C8E09A02A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4A1503340121_49EDCBCF03A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4A44B098031B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4A646E6E0321*¤	*((unsigned long long*)key) = internal_key;¤	//#UC END# *4A1503340121_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4A703F490366*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4AA4FF19006C*¤	//#UC END# *4A1503340121_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4AE6E951021C*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4B6194C9030C*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A1503340121_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *4A1503340121_4B9A42C10257*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A1503340121_4B9A42C10257*
			    )))
		    quid       	"4A1503340121"
		    documentation 	"Возвращает идентификатор по внутреннему ключу и типу"
		    parameters 	(list Parameters
			(object Parameter "in type_id"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"497606750124"))
			    quid       	"4A150334018E"
			    type       	"TypeId"
			    quidu      	"497606750124")
			(object Parameter "in internal_key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"49705BC503C3"))
			    quid       	"4A150334020B"
			    type       	"StorageKey"
			    quidu      	"49705BC503C3")
			(object Parameter "inout key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3ECB343C024C"))
			    quid       	"4A1510DD02C0"
			    type       	"pointer"
			    quidu      	"3ECB343C024C"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "insert"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_49738EF9014F*¤	// Автоинкремент¤	SEA::IndexAPI::Key current_key = m_last_key;¤	current_key++;¤¤	SEA::IndexAPI::Key key = current_key;¤	GCI::MMap::LongSize buf_index = key/m_objects_count;¤	size_t inside_ofset = key % m_objects_count;¤	GCI::MMap::LongSize file_ofset ¤		= buf_index*m_index_config.buffer_size + inside_ofset*m_index_config.data_size + m_bitmap_size;¤¤	size_t inside_offset = 0;¤	GCI::MMap::Memory_cvar memory = m_large_memory->get_memory(file_ofset, inside_offset);¤¤	unsigned char bit_mask = 1;¤	bit_mask <<= (inside_ofset % 8);¤	unsigned long in_mask_ofset = inside_ofset / 8;¤	¤	bool is_exist = *((unsigned char*)memory->get_base_addr() + in_mask_ofset) & bit_mask;¤¤	if(!is_exist) {¤		// Если объекта не существует, записываем данные и выставляем флаг в битовой карте¤		memcpy((unsigned char*)memory->get_base_addr() + inside_offset, data, m_index_config.data_size);¤¤		*((unsigned char*)memory->get_base_addr() + in_mask_ofset) |= bit_mask;¤¤		// сохраняем идентификатор¤		GCI::MMap::Memory_var system_memory = m_large_memory->get_system_memory();¤		memcpy(¤			(unsigned char*)system_memory->get_base_addr() + sizeof(SEA::IndexAPI::IndexConfig)¤			, &current_key¤			, m_index_config.key_size¤		);¤		m_last_key = current_key;¤¤		return file_ofset;¤	}¤	return 0;¤	//#UC END# *4A2C9AB0008F_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4727210E0156*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_474812320256*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_474812320256*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4756E04101A4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_47664F7400C0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4795FB8F025B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_47CD39C10050*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_47D7D8C4013F*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_48C7B3BC0231*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_492AB3A001BE*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_499EA6300016*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_49AD37370343*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_49C8E09A02A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_49EDCBCF03A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4A44B098031B*¤	try {¤		m_last_key++;¤¤		Dbt new_key((void*)&m_last_key, sizeof(SEA::IndexAPI::Key));¤		new_key.set_flags(DB_DBT_USERMEM);¤		new_key.set_ulen(sizeof(SEA::IndexAPI::Key));¤¤		Dbt new_data(const_cast<void*>(data), m_config.data_size);¤		new_data.set_flags(DB_DBT_USERMEM);¤		new_data.set_ulen(m_config.data_size);¤		int ret = 0;¤		ret = m_db->put(0,&new_key,&new_data,0);¤		if(ret) {¤			LOG_E ((¤				"BERKELEY %s : Can't put data by key <%Q> - error code <%d>"¤				, GDS_CURRENT_FUNCTION¤				, m_last_key¤				, ret¤			));¤			throw SEA::DatabaseAPI::IOError();¤		}¤	} catch (DbException& e) {¤		LOG_E (("BERKELEY FixedIndex_i::%s: e.what () = %s", GDS_CURRENT_FUNCTION, e.what ()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤	return 0;¤	//#UC END# *4A2C9AB0008F_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4A646E6E0321*¤	m_last_key++;¤	bool res = m_clone_index->update_local(m_last_key, (const SEA::IndexAPI::Data)data, m_config.data_size);¤	if(!res) {¤		LOG_E ((¤			"NDTCLONE %s couldn't insert data by incremental key <%Q>, update_local error!"¤			, GDS_CURRENT_FUNCTION¤			, m_last_key¤		));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	return m_last_key;¤	//#UC END# *4A2C9AB0008F_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4A703F490366*¤	m_last_key++;¤	int error_code = m_myisam->set_data(m_last_key, (unsigned char*)data, m_config.data_size);¤	if(error_code) {¤		LOG_E ((¤			"Myisam %s couldn't insert data in MyisamIndex at index %Q, error_code <%d>."¤			, GDS_CURRENT_FUNCTION¤			, m_last_key¤			, error_code¤		));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	return m_last_key;¤	//#UC END# *4A2C9AB0008F_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4AA4FF19006C*¤	return 1;¤	//#UC END# *4A2C9AB0008F_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"49705BC503C3")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4AE6E951021C*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A2C9AB0008F_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4B6194C9030C*¤	m_last_key++;¤	if(!tcbdbput (m_bdb, &m_last_key, sizeof (SEA::IndexAPI::Key), (unsigned char*)data, m_config.data_size)) {¤		LOG_E ((¤			"Tokyo BDB %s (): error tcbdbput: key = %Q, error_code = %d"¤			, GDS_CURRENT_FUNCTION¤			, (long long) m_last_key¤			, -1¤		));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	return m_last_key;¤	//#UC END# *4A2C9AB0008F_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A2C9AB0008F_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *4A2C9AB0008F_4B9A42C10257*¤	m_last_key++;¤	if(!tcbdbput (m_bdb, &m_last_key, sizeof (SEA::IndexAPI::Key), (unsigned char*)data, m_config.data_size)) {¤		LOG_E ((¤			"Tokyo BDB %s (): error tcbdbput: key = %Q, error_code = %d"¤			, GDS_CURRENT_FUNCTION¤			, (long long) m_last_key¤			, -1¤		));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	return m_last_key;¤	//#UC END# *4A2C9AB0008F_4B9A42C10257*
			    )))
		    quid       	"4A2C9AB0008F"
		    documentation 	"Метод вставляет обьект в Б.Д., возвращая новый идентификатор объекта"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in data"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3ECB343C024C"))
			    quid       	"4A2C9BDC0318"
			    type       	"pointer"
			    quidu      	"3ECB343C024C"))
		    result     	"StorageKey"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"49705BC503C3")
		(object Operation "insert"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_4727210E0156*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_4727210E0156*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_4727210E0156*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_474812320256*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_474812320256*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_474812320256*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_4756E04101A4*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_4756E04101A4*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_4756E04101A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_47664F7400C0*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_47664F7400C0*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_47664F7400C0*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_4795FB8F025B*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_4795FB8F025B*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_4795FB8F025B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_47CD39C10050*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_47CD39C10050*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_47CD39C10050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_47D7D8C4013F*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_47D7D8C4013F*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_47D7D8C4013F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_48C7B3BC0231*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_48C7B3BC0231*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_48C7B3BC0231*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_492AB3A001BE*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_492AB3A001BE*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_492AB3A001BE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_499EA6300016*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_49AD37370343*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_49AD37370343*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_49AD37370343*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_49738EF9014F*¤	GCI::MMap::LongSize file_ofset = key;¤	size_t inside_offset = 0;¤	GCI::MMap::Memory_var memory = m_large_memory->get_memory(file_ofset, inside_offset);¤¤	memcpy((unsigned char*)memory->get_base_addr() + inside_offset, data, m_index_config.data_size);¤	//#UC END# *4A42312B02E1_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_49C8E09A02A8*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_49C8E09A02A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_49C8E09A02A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_49EDCBCF03A8*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4A42312B02E1_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_4A44B098031B*¤	try {¤		Dbt user_key((void*)&key, sizeof(SEA::IndexAPI::Key));¤		user_key.set_flags(DB_DBT_USERMEM);¤		user_key.set_ulen(sizeof(SEA::IndexAPI::Key));¤¤		Dbt user_data((void*)data, m_config.data_size);¤		user_data.set_flags(DB_DBT_USERMEM);¤		user_data.set_ulen(m_config.data_size);¤	¤		int ret = 0;¤		ret = m_db->put(0, &user_key, &user_data, DB_NOOVERWRITE);¤¤		if(ret == DB_KEYEXIST) {¤			throw SEA::IndexAPI::KeyAlreadyExists();¤		}¤¤		if(ret != 0) {¤			throw SEA::DatabaseAPI::IOError();¤			LOG_E ((¤				"BERKELEY %s : Can't put data by key <%d> - error code <%d>"¤				, GDS_CURRENT_FUNCTION¤				, key¤				, ret¤			));¤		}¤	} catch (DbException& e) {¤		LOG_E (("BERKELEY FixedIndex_i::insert(key, data) : e.what () = %s", e.what ()));¤		throw SEA::DatabaseAPI::IOError();¤	}¤	//#UC END# *4A42312B02E1_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_4A646E6E0321*¤	if(m_clone_index->exists(key)) {¤		LOG_E (("NDTCLONE %s couldn't insert pair (key,data), key <%Q> already exists!", GDS_CURRENT_FUNCTION, key));¤		throw SEA::IndexAPI::KeyAlreadyExists();¤	}¤	bool res = m_clone_index->update_local(key, (const SEA::IndexAPI::Data)data, m_config.data_size);¤	if(!res) {¤		LOG_E (("NDTCLONE %s couldn't insert data by user key <%Q>, update_local error!", GDS_CURRENT_FUNCTION, key));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4A42312B02E1_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_4A703F490366*¤	bool res = m_myisam->set_data(key, (unsigned char*)data, m_config.data_size);¤	if(!res) {¤		LOG_E (("Myisam %s couldn't insert data in MyisamIndex at index %Q.", GDS_CURRENT_FUNCTION, m_last_key));¤		throw SEA::DatabaseAPI::IOError ();¤	}¤	//#UC END# *4A42312B02E1_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4A42312B02E1_4A8A76E9034C*"
			    value      	(value Text 
|//#UC START# *4A42312B02E1_4A8A76E9034C*¤	if(check) {¤		if(is_exist(si.user_id, si.storage_key, m_enable)) {¤			throw SEA::IndexAPI::KeyAlreadyExists();¤		}¤	}¤	if(m_enable) {¤¤		if(check && check_sorted_cach(si.storage_key)) {¤			throw SEA::IndexAPI::KeyAlreadyExists();¤		}¤¤		m_sorted_cach[m_current_cach_size].key = si.storage_key;¤		m_sorted_cach[m_current_cach_size].index = m_current_cach_size;¤		memcpy(¤			&m_data_buffer[m_current_cach_size * (get_index_config().data_size + get_index_config().user_id_len)]¤			, si.user_id¤			, get_index_config().user_id_len¤		);¤		memcpy(¤			&m_data_buffer[m_current_cach_size * (get_index_config().data_size + get_index_config().user_id_len)¤				+ get_index_config().user_id_len]¤			, data¤			, get_index_config().data_size¤		);¤¤		m_current_cach_size++;¤¤		if(m_current_cach_size >= m_max_cach_size) {¤			flush_buffer();¤		}¤	} else {¤		insert_direct(si.user_id, si.storage_key, data);¤	}¤	//#UC END# *4A42312B02E1_4A8A76E9034C*
			    )))
		    quid       	"4A42312B02E1"
		    documentation 	"Метод добавляет объект в Б.Д. по ключу"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in si"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"497059C302C0"))
			    quid       	"4AEED5C30050"
			    type       	"StateInfo"
			    quidu      	"497059C302C0")
			(object Parameter "in data"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"4718A1B40079"))
			    quid       	"4A42331901C3"
			    type       	"IndexAPI::Data")
			(object Parameter "check"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE100240"))
			    quid       	"4A979BC00063"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "validate_params"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE100240")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_499EA6300016*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_499EA6300016*¤	return true;¤	//#UC END# *4AEAF518008C_499EA6300016*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_49738EF9014F*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_49738EF9014F*¤	return true;¤	//#UC END# *4AEAF518008C_49738EF9014F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_4A44B098031B*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_4A44B098031B*¤	return true;¤	//#UC END# *4AEAF518008C_4A44B098031B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_4A646E6E0321*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_4A646E6E0321*¤	return true;¤	//#UC END# *4AEAF518008C_4A646E6E0321*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_4A703F490366*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_4A703F490366*¤	return true;¤	//#UC END# *4AEAF518008C_4A703F490366*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_4AA4FF19006C*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_4AA4FF19006C*¤	return true;¤	//#UC END# *4AEAF518008C_4AA4FF19006C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_49EDCBCF03A8*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_49EDCBCF03A8*¤	if(object_count != m_mphf_hash->size) {¤		LOG_I ((¤			"%s, MPHF has diffrent size <%d> than test objetcs_count <%d>"¤			, GDS_CURRENT_FUNCTION¤			, m_mphf_hash->size¤			, object_count¤		));¤		return false;¤	}¤	return true;¤	//#UC END# *4AEAF518008C_49EDCBCF03A8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_4AE6E951021C*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_4AE6E951021C*¤	if(object_count != m_mphf_hash->size) {¤		LOG_I ((¤			"%s, MPHF has diffrent size <%d> than test objetcs_count <%d>"¤			, GDS_CURRENT_FUNCTION¤			, m_mphf_hash->size¤			, object_count¤		));¤		return false;¤	}¤	return true;¤	//#UC END# *4AEAF518008C_4AE6E951021C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_4B6194C9030C*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_4B6194C9030C*¤	return true;¤	//#UC END# *4AEAF518008C_4B6194C9030C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4AEAF518008C_4B9A42C10257*"
			    value      	(value Text 
|//#UC START# *4AEAF518008C_4B9A42C10257*¤	return true;¤	//#UC END# *4AEAF518008C_4B9A42C10257*
			    )))
		    quid       	"4AEAF518008C"
		    documentation 	"Проверка параметров."
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "object_count"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFDE101CA"))
			    quid       	"4AEAF62C02B9"
			    type       	"unsigned long"
			    quidu      	"3DBFFDE101CA"))
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0
		    quidu      	"3DBFFE100240"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "index_config"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4727210E0156_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4727210E0156_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4727210E0156_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_474812320256_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_474812320256_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_474812320256_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4756E04101A4_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4756E04101A4_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4756E04101A4_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_47664F7400C0_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_47664F7400C0_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_47664F7400C0_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_476939D7005D_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_476939D7005D_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_476939D7005D_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_476A3CDD0003_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_476A3CDD0003_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_476A3CDD0003_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_478B8CAA02CE_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_478B8CAA02CE_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_478B8CAA02CE_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4795FB8F025B_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4795FB8F025B_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4795FB8F025B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_47CD39C10050_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_47CD39C10050_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *471C5E3502A1_47CD39C10050_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_47D7D8C4013F_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_47D7D8C4013F_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_47D7D8C4013F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_48C7B3BC0231_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_48C7B3BC0231_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_48C7B3BC0231_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_492AB3A001BE_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_492AB3A001BE_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_492AB3A001BE_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_49738EF9014F_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_49738EF9014F_GET*¤	return m_index_config;¤	//#UC END# *471C5E3502A1_49738EF9014F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_499EA6300016_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_499EA6300016_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_499EA6300016_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_49AD37370343_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_49AD37370343_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *471C5E3502A1_49AD37370343_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_49B6561C006B_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_49B6561C006B_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *471C5E3502A1_49B6561C006B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_49C8E09A02A8_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_49C8E09A02A8_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_49C8E09A02A8_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_49EDCBCF03A8_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_49EDCBCF03A8_GET*¤	//return m_config;¤	return m_index_config;¤	//#UC END# *471C5E3502A1_49EDCBCF03A8_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4A44B098031B_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4A44B098031B_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4A44B098031B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4A646E6E0321_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4A646E6E0321_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4A646E6E0321_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4A703F490366_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4A703F490366_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4A703F490366_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4AA4FF19006C_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4AA4FF19006C_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4AA4FF19006C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"471C5DE702C0")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4AE6E951021C_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4AE6E951021C_GET*¤	return m_index_config;¤	//#UC END# *471C5E3502A1_4AE6E951021C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4B6194C9030C_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4B6194C9030C_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4B6194C9030C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*471C5E3502A1_4B9A42C10257_GET*"
			    value      	(value Text 
|//#UC START# *471C5E3502A1_4B9A42C10257_GET*¤	return m_config;¤	//#UC END# *471C5E3502A1_4B9A42C10257_GET*
			    )))
		    quid       	"471C5E3502A1"
		    documentation 	"Конфигурация индекса, заданная при его создании"
		    stereotype 	"readonly"
		    type       	"IndexConfig"
		    quidu      	"471C5DE702C0"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator"
	    nestedClasses 	(list nestedClasses
		(object Class "FixedIndexMemory"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"47A0A85300F9"
		    documentation 	"Общая память фабрик индекса"
		    stereotype 	"FactoryMemory")))
	(object Class "IndexDoesNotExist"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/IndexDoesNotExist|471C806D013A
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"OS_GUID"
		    value      	"86B94DAB-D03B-47AB-A20C-2DF2817DFB48")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"finished"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"force usage"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is_runtime"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"stored message"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471C806D013A_WHAT_IMPL*"
		    value      	(value Text 
|//#UC START# *471C806D013A_WHAT_IMPL*¤	return "IndexDoesNotExist (Ситуация, когда пытаются открыть индекс, который еще не существует в базе)";¤	//#UC END# *471C806D013A_WHAT_IMPL*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki"))
	    quid       	"471C806D013A"
	    documentation 	"Ситуация, когда пытаются открыть индекс, который еще не существует в базе"
	    stereotype 	"Exception"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"473317AD007A"
		    supplier   	"Logical View::Storage::SEA::DatabaseAPI::InternalError"
		    quidu      	"471CC3C90071"))
	    language   	"MDA Generator")
	(object Class "IndexAlreadyExists"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/IndexAlreadyExists|471C5FE70393
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"OS_GUID"
		    value      	"776E694E-1501-4EA6-8BBE-2FE1C0A0F3FE")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"finished"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"force usage"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is_runtime"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"stored message"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471C5FE70393_WHAT_IMPL*"
		    value      	(value Text 
|//#UC START# *471C5FE70393_WHAT_IMPL*¤	return "IndexAlreadyExists (Ситуация, когда пытаются создать индекс, который уже существует в базе  )";¤	//#UC END# *471C5FE70393_WHAT_IMPL*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki"))
	    quid       	"471C5FE70393"
	    documentation 	
|Ситуация, когда пытаются создать индекс, который уже существует в базе
|
|
	    
	    stereotype 	"Exception"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"473317AF0132"
		    supplier   	"Logical View::Storage::SEA::DatabaseAPI::InternalError"
		    quidu      	"471CC3C90071"))
	    language   	"MDA Generator")
	(object Class "IndexConfig"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/IndexConfig|471C5DE702C0
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki"))
	    quid       	"471C5DE702C0"
	    documentation 	"Конфигурация индекса (набор параметров настройки)"
	    stereotype 	"Struct"
	    operations 	(list Operations
		(object Operation "ctor"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*473828B9023E_INIT_CTOR_BASE_INIT*"
			    value      	"//#UC START# *473828B9023E_INIT_CTOR_BASE_INIT*¤: name (ix_name)¤, key_size (8)¤, data_size (1024)¤//#UC END# *473828B9023E_INIT_CTOR_BASE_INIT*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*473828B9023E_CTOR_BODY*"
			    value      	(value Text 
|//#UC START# *473828B9023E_CTOR_BODY*¤	//#UC END# *473828B9023E_CTOR_BODY*
			    )))
		    quid       	"473828B9023E"
		    documentation 	"Для удобства"
		    stereotype 	"ctor"
		    parameters 	(list Parameters
			(object Parameter "ix_name"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3DBFFE240068"))
			    quid       	"473828D401E4"
			    type       	"string"
			    quidu      	"3DBFFE240068"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "dflt"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*47382CB70029_INIT_CTOR_BASE_INIT*"
			    value      	"//#UC START# *47382CB70029_INIT_CTOR_BASE_INIT*¤: name (0)¤, key_size (0)¤, data_size (0)¤//#UC END# *47382CB70029_INIT_CTOR_BASE_INIT*")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*47382CB70029_CTOR_BODY*"
			    value      	(value Text 
|//#UC START# *47382CB70029_CTOR_BODY*¤	//#UC END# *47382CB70029_CTOR_BODY*
			    )))
		    quid       	"47382CB70029"
		    documentation 	"Для удобства"
		    stereotype 	"ctor"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "key_size"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"43786B35001F"))
		    quid       	"471C5DFE0115"
		    documentation 	"Фиксированный размер ключа в байтах (максимум 8 = 64 bit), выбран тип char чтобы подчеркнуть, что речь идет о кол-ве используемых младших бит в 64-битном ключе"
		    type       	"unsigned char"
		    quidu      	"43786B35001F"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "data_size"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFDC502B0"))
		    quid       	"471C5E1101F1"
		    documentation 	"Фиксированный размер данных ключа в байтах. Выбран тип short чтобы подчеркнуть, что речь идет о малых объемах данных (не BLOB)"
		    type       	"unsigned short"
		    quidu      	"3DBFFDC502B0"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "name"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"TargetStereotype"
			    value      	"const")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFE240068"))
		    quid       	"471CB5C20018"
		    documentation 	"Имя, идентифицирующее индекс"
		    type       	"string"
		    quidu      	"3DBFFE240068"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "buffer_size"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFDE101CA"))
		    quid       	"4A0149750296"
		    documentation 	"Размер буферов в пуле памяти для конкретного индекса (файла)."
		    type       	"unsigned long"
		    quidu      	"3DBFFDE101CA"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "user_id_len"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"3DBFFDE101CA"))
		    quid       	"4AF4143E003B"
		    documentation 	"Длина пользовательского идентификатора."
		    type       	"unsigned long"
		    quidu      	"3DBFFDE101CA"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "index_name"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"final")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ResolvedTypeGuid"
			    value      	"4A11231103BE"))
		    quid       	"4AF4149B0126"
		    documentation 	"Имя индекса в Б.Д."
		    type       	"IndexName"
		    quidu      	"4A11231103BE"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "Key"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/Key|4718A24201E2
		    )))
	    quid       	"4718A24201E2"
	    documentation 	"Ключ, с которым ассоциируются данные"
	    stereotype 	"Typedef"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"471CB1F200C8"
		    supplier   	"Logical View::Primitives::unsigned long long"
		    quidu      	"3DBFFDF10213"))
	    language   	"MDA Generator")
	(object Class "Data"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/Data|4718A1B40079
		    )))
	    quid       	"4718A1B40079"
	    documentation 	"Данные, ассоциированные с ключом"
	    stereotype 	"Typedef"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"471CB23B0072"
		    supplier   	"Logical View::Primitives::pointer"
		    quidu      	"3ECB343C024C"))
	    language   	"MDA Generator")
	(object Class "KeyExceedsBitBoundary"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/KeyExceedsBitBoundary|471CC27C0212
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"OS_GUID"
		    value      	"D5D46A48-02BB-48D7-A797-DE9273DF17D6")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"finished"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"force usage"
		    value      	"true")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"is_runtime"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"stored message"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*471CC27C0212_WHAT_IMPL*"
		    value      	(value Text 
|//#UC START# *471CC27C0212_WHAT_IMPL*¤	return "KeyExceedsBitBoundary (Ключ имеет ненулевые старшие биты, выходящие за границу IndexConfig::key_size младших байт)";¤	//#UC END# *471CC27C0212_WHAT_IMPL*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki"))
	    quid       	"471CC27C0212"
	    documentation 	"Ключ имеет ненулевые старшие биты, выходящие за границу IndexConfig::key_size младших байт"
	    stereotype 	"Exception"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"47331A450365"
		    supplier   	"Logical View::Storage::SEA::DatabaseAPI::InternalError"
		    quidu      	"471CC3C90071"))
	    language   	"MDA Generator")
	(object Class "IndexName"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"4A11231103BE"
	    documentation 	"Имя индекса Б.Д."
	    stereotype 	"FixedArray"
	    language   	"MDA Generator")
	(object Class "KeyAlreadyExists"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"OS_GUID"
		    value      	"9D1BE2A4-5EA3-47FA-886A-F27F1B48AA2E")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/KeyAlreadyExists|4A571C420257
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4A571C420257_WHAT_IMPL*"
		    value      	(value Text 
|//#UC START# *4A571C420257_WHAT_IMPL*¤	return "KeyAlreadyExists (Исключение выбрасывается в случае, если добавляемый в индекс ключ уже существует.)";¤	//#UC END# *4A571C420257_WHAT_IMPL*
		    )))
	    quid       	"4A571C420257"
	    documentation 	"Исключение выбрасывается в случае, если добавляемый в индекс ключ уже существует."
	    stereotype 	"Exception"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"4A571CE60009"
		    supplier   	"Logical View::Storage::SEA::DatabaseAPI::InternalError"
		    quidu      	"471CC3C90071"))
	    language   	"MDA Generator")
	(object Class "BaseStateManager"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"WikiPageID (wiki)"
		    value      	(value Text 
|New Storage,key:NST,guid:4715CB5403D7/Home/Модель проекта "Storage"/SEA/IndexAPI/BaseStateManager|4B4DE322005D
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"SourceType (wiki)"
		    value      	"wiki"))
	    quid       	"4B4DE322005D"
	    documentation 	"Общий интерфейс для всех менеджеров состояний."
	    stereotype 	"Facet"
	    operations 	(list Operations
		(object Operation "cach_state"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4B4DE3FF005C_4B4DED2403B2*"
			    value      	(value Text 
|//#UC START# *4B4DE3FF005C_4B4DED2403B2*¤	BaseState_var state = get_pure_state();¤	state->deserialize(data);¤	m_cach->set_element(storage_key, state._sretn());¤	//#UC END# *4B4DE3FF005C_4B4DED2403B2*
			    )))
		    quid       	"4B4DE3FF005C"
		    documentation 	"Метод кэширует состояние."
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "storage_key"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"49705BC503C3"))
			    quid       	"4B506F3800F3"
			    type       	"StorageKey"
			    quidu      	"49705BC503C3")
			(object Parameter "data"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ResolvedTypeGuid"
				    value      	"3ECB343C024C"))
			    quid       	"4B4DE49301CC"
			    type       	"pointer"
			    quidu      	"3ECB343C024C"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Association "$UNNAMED$0"
	    quid       	"4A11240403AE"
	    roles      	(list role_list
		(object Role "$UNNAMED$1"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"4A112405019A"
		    supplier   	"Logical View::Primitives::unsigned char"
		    quidu      	"43786B35001F"
		    keys       	(list class_attribute_list
			(object ClassAttribute "size"
			    attributes 	(list Attribute_Set
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"ValueInitialized"
				    value      	"true")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"AbstarctOperation"
				    value      	"regular")
				(object Attribute
				    tool       	"MDA Generator"
				    name       	"IsNative"
				    value      	"false"))
			    quid       	"4A1124880099"
			    initv      	"255"
			    exportControl 	"Public"
			    Containment 	"By Value"))
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$2"
		    quid       	"4A112405019C"
		    supplier   	"Logical View::Storage::SEA::IndexAPI::IndexName"
		    quidu      	"4A11231103BE"
		    is_aggregate 	TRUE))))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsChanged"
		    value      	""))
	    quid       	"471725E10289"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	946
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::FixedIndex" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"777")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"930")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"1206")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"592"))
		    location   	(1107, 1218)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(190, 739)
			fill_color 	13434879
			nlines     	1
			max_width  	1834
			justify    	0
			label      	"• FixedIndex")
		    stereotype 	(object ItemLabel
			Parent_View 	@1
			location   	(190, 689)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1834
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"471899FF00ED"
		    compartment 	(object Compartment
			Parent_View 	@1
			location   	(190, 800)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	20
			max_width  	1886
			justify    	1)
		    width      	1852
		    height     	1082
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::Data" @2
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"963")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"180")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"262")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"156"))
		    location   	(963, 180)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(827, 159)
			fill_color 	16777215
			nlines     	1
			max_width  	272
			justify    	0
			label      	"Data")
		    stereotype 	(object ItemLabel
			Parent_View 	@2
			location   	(827, 109)
			fill_color 	16777215
			anchor     	10
			nlines     	1
			max_width  	270
			justify    	0
			label      	"<<Typedef>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"4718A1B40079"
		    width      	290
		    height     	167
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::Key" @3
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"963")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"387")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"262")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"156"))
		    location   	(963, 387)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@3
			location   	(827, 366)
			fill_color 	16777215
			nlines     	1
			max_width  	272
			justify    	0
			label      	"Key")
		    stereotype 	(object ItemLabel
			Parent_View 	@3
			location   	(827, 316)
			fill_color 	16777215
			anchor     	10
			nlines     	1
			max_width  	270
			justify    	0
			label      	"<<Typedef>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"4718A24201E2"
		    width      	290
		    height     	167
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::IndexConfig" @4
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"447")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"285")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"644")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"442"))
		    location   	(453, 312)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(164, 91)
			fill_color 	16777215
			nlines     	1
			max_width  	578
			justify    	0
			label      	"• IndexConfig")
		    stereotype 	(object ItemLabel
			Parent_View 	@4
			location   	(164, 41)
			fill_color 	16777215
			anchor     	10
			nlines     	1
			max_width  	578
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13821680
		    quidu      	"471C5DE702C0"
		    compartment 	(object Compartment
			Parent_View 	@4
			location   	(164, 152)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	9
			max_width  	622
			justify    	1)
		    width      	596
		    height     	566
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::IndexDoesNotExist" @5
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1144")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1713")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"422")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"182"))
		    location   	(1158, 2256)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@5
			location   	(939, 2228)
			fill_color 	16777215
			nlines     	1
			max_width  	438
			justify    	0
			label      	"• IndexDoesNotExist")
		    stereotype 	(object ItemLabel
			Parent_View 	@5
			location   	(939, 2178)
			fill_color 	16777215
			anchor     	10
			nlines     	1
			max_width  	438
			justify    	0
			label      	"<<Exception>>")
		    icon_style 	"Label"
		    fill_color 	9869055
		    quidu      	"471C806D013A"
		    width      	456
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::IndexAlreadyExists" @6
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1603")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1716")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"408")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"182"))
		    location   	(1650, 2259)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@6
			location   	(1424, 2231)
			fill_color 	16777215
			nlines     	1
			max_width  	452
			justify    	0
			label      	"• IndexAlreadyExists")
		    stereotype 	(object ItemLabel
			Parent_View 	@6
			location   	(1424, 2181)
			fill_color 	16777215
			anchor     	10
			nlines     	1
			max_width  	452
			justify    	0
			label      	"<<Exception>>")
		    icon_style 	"Label"
		    fill_color 	9869055
		    quidu      	"471C5FE70393"
		    width      	470
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Primitives::unsigned long long" @7
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1470")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"378")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"464")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"104"))
		    location   	(1470, 378)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	TRUE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@7
			location   	(1247, 332)
			fill_color 	13434879
			nlines     	1
			max_width  	446
			justify    	0
			label      	"unsigned long long")
		    icon_style 	"None"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"3DBFFDF10213"
		    width      	464
		    height     	117
		    autoResize 	TRUE)
		(object InheritView "" @8
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"1094,383;1237,556"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"471CB1F200C8"
		    client     	@3
		    supplier   	@7
		    vertices   	(list Points
			(1108, 383)
			(1237, 381))
		    line_style 	0)
		(object ClassView "Class" "Logical View::Primitives::pointer" @9
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1338")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"174")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"188")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"102"))
		    location   	(1338, 174)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	TRUE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@9
			location   	(1253, 128)
			fill_color 	13434879
			nlines     	1
			max_width  	170
			justify    	0
			label      	"pointer")
		    icon_style 	"None"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"3ECB343C024C"
		    width      	188
		    height     	117
		    autoResize 	TRUE)
		(object InheritView "" @10
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"1094,375;1243,291"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"471CB23B0072"
		    client     	@2
		    supplier   	@9
		    vertices   	(list Points
			(1108, 177)
			(1243, 175))
		    line_style 	0)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::KeyExceedsBitBoundary" @11
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"625")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1716")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"516")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"184"))
		    location   	(582, 2256)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@11
			location   	(316, 2228)
			fill_color 	13434879
			nlines     	1
			max_width  	532
			justify    	0
			label      	"• KeyExceedsBitBoundary")
		    stereotype 	(object ItemLabel
			Parent_View 	@11
			location   	(316, 2178)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	532
			justify    	0
			label      	"<<Exception>>")
		    icon_style 	"Label"
		    fill_color 	9869055
		    quidu      	"471CC27C0212"
		    width      	550
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Storage::SEA::DatabaseAPI::InternalError" @12
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewXPosition"
			    value      	"1143")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewYPosition"
			    value      	"1365")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewWidth"
			    value      	"300")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ItemViewHeight"
			    value      	"180"))
		    location   	(1179, 1914)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	658175
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@12
			location   	(1013, 1886)
			nlines     	1
			max_width  	332
			justify    	0
			label      	"• InternalError")
		    stereotype 	(object ItemLabel
			Parent_View 	@12
			location   	(1013, 1836)
			anchor     	10
			nlines     	1
			max_width  	332
			justify    	0
			label      	"<<Exception>>")
		    icon_style 	"Label"
		    line_color 	658175
		    fill_color 	16777215
		    quidu      	"471CC3C90071"
		    width      	350
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @13
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"747,1625;1002,1455"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"47331A450365"
		    client     	@11
		    supplier   	@12
		    vertices   	(list Points
			(737, 2165)
			(1019, 2004))
		    line_style 	0)
		(object InheritView "" @14
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"1266,1622;1266,1453"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"473317AD007A"
		    client     	@5
		    supplier   	@12
		    vertices   	(list Points
			(1163, 2165)
			(1172, 2004))
		    line_style 	0)
		(object InheritView "" @15
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"LineVertices"
			    value      	"1608,1625;1383,1453"))
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"473317AF0132"
		    client     	@6
		    supplier   	@12
		    vertices   	(list Points
			(1527, 2168)
			(1302, 2004))
		    line_style 	0)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::FixedIndex::FixedIndexMemory" @16
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2295, 1209)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	14443530
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@16
			location   	(2101, 1181)
			nlines     	1
			max_width  	388
			justify    	0
			label      	"FixedIndexMemory")
		    stereotype 	(object ItemLabel
			Parent_View 	@16
			location   	(2101, 1131)
			anchor     	10
			nlines     	1
			max_width  	388
			justify    	0
			label      	"<<FactoryMemory>>")
		    icon_style 	"Label"
		    line_color 	14443530
		    fill_color 	16777215
		    quidu      	"47A0A85300F9"
		    width      	406
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Primitives::unsigned char" @17
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2160, 552)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	TRUE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	658120
			default_color 	FALSE)
		    label      	(object ItemLabel
			Parent_View 	@17
			location   	(1991, 506)
			fill_color 	13434879
			nlines     	1
			max_width  	338
			justify    	0
			label      	"unsigned char")
		    icon_style 	"None"
		    line_color 	14803425
		    fill_color 	14803425
		    quidu      	"43786B35001F"
		    width      	356
		    height     	117
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::IndexName" @18
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2145, 123)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@18
			location   	(1982, 95)
			fill_color 	13434879
			nlines     	1
			max_width  	326
			justify    	0
			label      	"IndexName")
		    stereotype 	(object ItemLabel
			Parent_View 	@18
			location   	(1982, 45)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	324
			justify    	0
			label      	"<<FixedArray>>")
		    icon_style 	"Label"
		    fill_color 	15787730
		    quidu      	"4A11231103BE"
		    width      	344
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$0" @19
		    location   	(2152, 353)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4A11240403AE"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$1" @20
			    Parent_View 	@19
			    location   	(7, 92)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @21
				Parent_View 	@20
				location   	(2115, 466)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				hidden     	TRUE
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	112
				justify    	0
				label      	""
				pctDist    	0.800000
				height     	42
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4A112405019A"
			    client     	@19
			    supplier   	@17
			    vertices   	(list Points
				(2152, 353)
				(2157, 493))
			    line_style 	0)
			(object RoleView "$UNNAMED$2" @22
			    Parent_View 	@19
			    location   	(7, 92)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4A112405019C"
			    client     	@19
			    supplier   	@18
			    vertices   	(list Points
				(2152, 353)
				(2147, 213))
			    line_style 	0
			    label      	(object SegLabel @23
				Parent_View 	@22
				location   	(2148, 252)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	5
				anchor_loc 	1
				nlines     	1
				max_width  	191
				justify    	0
				label      	"size = 255"
				pctDist    	0.900000
				height     	12
				orientation 	0))))
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::KeyAlreadyExists" @24
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2133, 2256)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@24
			location   	(1950, 2228)
			fill_color 	13434879
			nlines     	1
			max_width  	366
			justify    	0
			label      	"KeyAlreadyExists")
		    stereotype 	(object ItemLabel
			Parent_View 	@24
			location   	(1950, 2178)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	366
			justify    	0
			label      	"<<Exception>>")
		    icon_style 	"Label"
		    fill_color 	9869055
		    quidu      	"4A571C420257"
		    width      	384
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @25
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4A571CE60009"
		    client     	@24
		    supplier   	@12
		    vertices   	(list Points
			(1940, 2185)
			(1354, 1975))
		    line_style 	0)
		(object ClassView "Class" "Logical View::Storage::SEA::IndexAPI::BaseStateManager" @26
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(870, 2544)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@26
			location   	(295, 2488)
			fill_color 	13434879
			nlines     	1
			max_width  	1150
			justify    	0
			label      	"BaseStateManager")
		    stereotype 	(object ItemLabel
			Parent_View 	@26
			location   	(295, 2438)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1150
			justify    	0
			label      	"<<Facet>>")
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"4B4DE322005D"
		    compartment 	(object Compartment
			Parent_View 	@26
			location   	(295, 2549)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	2
			max_width  	1196
			justify    	1)
		    width      	1168
		    height     	236
		    annotation 	8
		    autoResize 	TRUE)))))
