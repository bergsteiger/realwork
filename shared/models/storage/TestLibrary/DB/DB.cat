
(object Petal
    version    	50
    _written   	"Rose 2006.0.0.061205"
    charSet    	204)

(object Class_Category "DB"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"AbstarctOperation"
	    value      	"regular")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"IsNative"
	    value      	"false")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"h:*44BB6C5900CB_CUSTOM_INCLUDE*"
	    value      	"//#UC START# *44BB6C5900CB_CUSTOM_INCLUDE*¤//#UC END# *44BB6C5900CB_CUSTOM_INCLUDE*")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (cpp)"
	    value      	"w:/storage/test_candidates/TestLibrary/DB/DB.cpp")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (h)"
	    value      	"w:/storage/test_candidates/TestLibrary/DB/DB.h")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (fctr.cpp)"
	    value      	"w:/storage/test_candidates/TestLibrary/DB/DBFactories.cpp")
	(object Attribute
	    tool       	"MDA Generator"
	    name       	"SELF GENERATED FILE (fctr.h)"
	    value      	"w:/storage/test_candidates/TestLibrary/DB/DBFactories.h"))
    quid       	"44BB6C5900CB"
    documentation 	
|Содержит описания интерфейсов, требуемых для реализации элементарных операций над сторонним хранилищем. Разные простейшие тесты могут разделять одну и туже элементарную операцию. Например, нагрузочный тест на чтение данных и тест контроля целостности прочтенных данных могут использовать один и тот же интерфейс элементарных операций для доступа к БД на чтение. Или могут существовать два разных нагрузочных теста на чтения, один из которых выбирает данные случайным образом, а другой - последовательным и т.д.
|
|При этом, конфигурация БД (в какой директории находятся файлы нужной БД, какую она имеет метамодель и т.п.) опеределяется реализацией соответствующего интерфейса элементарных операций.
|
|Такой подход дает целый ряд преимуществ:
|- достигается большая гибкость в реализации самых различных тестов;
|- уменьшается объем исходного кода, зависящего от конкретного хранилища;
|- увеличивается повторное использование кода и уменьшается вероятность неправильной реализации самих простейших тестов;
|- обобщается тестовый фреймворк в целом, позволяющий тестировать не только сторонние хранилища.
    
    stereotype 	"Interface"
    visible_categories 	(list visibility_relationship_list
	(object Visibility_Relationship
	    quid       	"44D9D765033C"
	    supplier   	"Logical View::shared::GCI::IO"
	    quidu      	"4423F94903C8"))
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "DBError"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"OS_GUID"
		    value      	"C7AF5652-E384-4125-A1AE-00AD8F0A2867"))
	    quid       	"44BB6CBA03C8"
	    documentation 	"Исключительная ситуация, возбуждаемая при возникновении каких-либо ошибок, обусловленных конкретным хранилищем."
	    stereotype 	"Exception"
	    language   	"MDA Generator")
	(object Class "IDBRead"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44A91CF70167_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44A91CF70167_BASE_INIT*¤//#UC END# *44BB671C0148_44BB7E69032C_44A91CF70167_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44A91CF70167_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44A91CF70167_BODY*¤	m_simple_object_all_set = new ::SimpleObjectAllSet (this->get_base ());¤	//m_simple_object_set = new ::SimpleObjectSet;¤	m_simple_object_query = new ::SimpleObjectQuery;¤	//#UC END# *44BB671C0148_44BB7E69032C_44A91CF70167_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44AA1DF202FD_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44AA1DF202FD_BASE_INIT*¤//#UC END# *44BB671C0148_44BB7E69032C_44AA1DF202FD_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44AA1DF202FD_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44AA1DF202FD_BODY*¤	//#UC END# *44BB671C0148_44BB7E69032C_44AA1DF202FD_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44ABC8010196_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44ABC8010196_BASE_INIT*¤//#UC END# *44BB671C0148_44BB7E69032C_44ABC8010196_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44ABC8010196_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44ABC8010196_BODY*¤	//#UC END# *44BB671C0148_44BB7E69032C_44ABC8010196_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44B24CEE02BF_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44B24CEE02BF_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CloneIndex (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB671C0148_44BB7E69032C_44B24CEE02BF_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44B24CEE02BF_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44B24CEE02BF_BODY*¤	//#UC END# *44BB671C0148_44BB7E69032C_44B24CEE02BF_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44B6539700AB_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44B6539700AB_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CuriaTest (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB671C0148_44BB7E69032C_44B6539700AB_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44B6539700AB_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44B6539700AB_BODY*¤	this->open_db (CR_OWRITER | CR_OCREAT, this->get_db_root_dir ());//CR_OREADER¤	//#UC END# *44BB671C0148_44BB7E69032C_44B6539700AB_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44CF709A0196_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44CF709A0196_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, EyeDBBase (root_dir, need_sequential, need_transaction, eyedb::Database::DBRWLocal) //eyedb::Database::DBReadLocal¤//#UC END# *44BB671C0148_44BB7E69032C_44CF709A0196_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44CF709A0196_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44CF709A0196_BODY*¤	//#UC END# *44BB671C0148_44BB7E69032C_44CF709A0196_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44E44955007F_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44E44955007F_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIBT (root_dir, need_sequential, need_transaction)¤, m_current_action (0)¤, m_db_transaction (0)¤//#UC END# *44BB671C0148_44BB7E69032C_44E44955007F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44E44955007F_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44E44955007F_BODY*¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤	try {¤		//base->set_bt_compare (bt_compare);¤		//base->set_bt_prefix (bt_compare_prefix);¤¤		bool need_rdonly = Core::ParamManager::instance ()->get_long ("-need_rdonly", 0) ;¤		u_int32_t flags = (this->need_transaction ()) ? DB_AUTO_COMMIT|DB_CREATE|DB_THREAD: ((need_rdonly) ? DB_RDONLY: DB_CREATE);¤		base->open (0, full_name.c_str (), 0, DB_BTREE, flags, 0);¤¤		this->set_block_size (base.ptr ());¤	} catch(DbException &e) {¤		LOG_E (("BDBReadOIBT_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBReadOIBT_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤	//#UC END# *44BB671C0148_44BB7E69032C_44E44955007F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44E448AE007F_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44E448AE007F_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainWSF (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB671C0148_44BB7E69032C_44E448AE007F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44E448AE007F_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44E448AE007F_BODY*¤	u_int32_t open_flags = (this->need_transaction ()) ? DB_CREATE|DB_THREAD|DB_AUTO_COMMIT: DB_CREATE|DB_THREAD;¤¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_KEY_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_KEY_FILE_NAME_ON_UNIX;¤#endif¤¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤	try {¤		base->open (0, full_name.c_str (), 0, DB_BTREE, open_flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBReadWSF_i::ctor: %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBReadWSF_i::ctor: can't open database, errmsg = %s", e.what ()));¤	}¤	this->db_key () = base._retn ();¤¤	///////////////////////////////////////////¤	full_name = this->get_db_root_dir ();¤#ifdef WIN32¤	full_name += BDB_STREAM_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_STREAM_FILE_NAME_ON_UNIX;¤#endif¤¤	base = new Db (db_env (), 0);¤	try {¤		base->open (NULL, full_name.c_str (), 0, DB_QUEUE, open_flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBReadWSF_i::ctor: %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBReadWSF_i::ctor: can't open database, errmsg = %s", e.what ()));¤	}¤	this->db_data () = base._retn ();¤	//#UC END# *44BB671C0148_44BB7E69032C_44E448AE007F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44E44EEA00AD_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_44E44EEA00AD_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIH (root_dir, need_sequential, need_transaction)¤, m_current_action (0)¤, m_db_transaction (0)¤//#UC END# *44BB671C0148_44BB7E69032C_44E44EEA00AD_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_44E44EEA00AD_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_44E44EEA00AD_BODY*¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤	try {¤		set_hash_func (base);¤¤		bool need_rdonly = Core::ParamManager::instance ()->get_long ("-need_rdonly", 0) ;¤		u_int32_t flags =¤			(this->need_transaction ())¤			? DB_AUTO_COMMIT|DB_CREATE|DB_THREAD¤			: ((need_rdonly) ? DB_RDONLY|DB_THREAD: DB_CREATE|DB_THREAD);¤		base->open (0, full_name.c_str (), 0, DB_HASH, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBReadOIH_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBReadOIH_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤	//#UC END# *44BB671C0148_44BB7E69032C_44E44EEA00AD_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_452A6CB302EE_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_452A6CB302EE_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainQueue (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB671C0148_44BB7E69032C_452A6CB302EE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_452A6CB302EE_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_452A6CB302EE_BODY*¤	//#UC END# *44BB671C0148_44BB7E69032C_452A6CB302EE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_470A39D2029F_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_470A39D2029F_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, XflaimTestBase (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB671C0148_44BB7E69032C_470A39D2029F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_470A39D2029F_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_470A39D2029F_BODY*¤	//#UC END# *44BB671C0148_44BB7E69032C_470A39D2029F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_470CDF3301D4_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_470CDF3301D4_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, FirebirdTestBase (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB671C0148_44BB7E69032C_470CDF3301D4_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_470CDF3301D4_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_470CDF3301D4_BODY*¤	this->open_db (0, root_dir->get_data ());¤	//#UC END# *44BB671C0148_44BB7E69032C_470CDF3301D4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_471DE0E00262_BASE_INIT*"
		    value      	"//#UC START# *44BB671C0148_44BB7E69032C_471DE0E00262_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, LinterTestBase (root_dir, need_sequential, need_transaction)¤¤// *** LINTER: place your code here ***¤¤//#UC END# *44BB671C0148_44BB7E69032C_471DE0E00262_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB671C0148_44BB7E69032C_471DE0E00262_BODY*"
		    value      	(value Text 
|//#UC START# *44BB671C0148_44BB7E69032C_471DE0E00262_BODY*¤¤	// *** LINTER: place your code here ***¤	// *** LINTER: you may or may not use class-helper LinterTestBase: see comments in the LinterTestBase.cpp file ***¤¤	//#UC END# *44BB671C0148_44BB7E69032C_471DE0E00262_BODY*
		    )))
	    quid       	"44BB671C0148"
	    documentation 	
|Предназначен для чтения из базы содержимого простых объектов по их идентификатору.
|
|<<метод>> read () - читает объект из базы по заданному идентификатору и заполняет буфер его содержимым.
|
|<<фабрика>> make () - не принимает параметры: вся конфигурация БД (в т.ч. db_root_dir) содержится внутри реализации этого интерфейса.
	    
	    stereotype 	"Interface"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"44BB68230177"
		    supplier   	"Logical View::storage::TestLibrary::DB::IDBOperations"
		    quidu      	"44BB65B90399"))
	    operations 	(list Operations
		(object Operation "read"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Must throw in error"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"dll export"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44A91CF70167*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44A91CF70167*¤	::SimpleObject* p = 0;¤	SimpleObjectSet simple_object_set;¤	SimpleObjectQuery simple_object_query; simple_object_query.Setm_id (id_info.id, PtEQ);¤	m_simple_object_all_set->Query (&simple_object_query, &simple_object_set);¤	int set_pos_found = simple_object_set.Get (p, 0, PtSTART);¤	if (set_pos_found < 0) {¤		throw TestLibrary::DB::DBError (); // not found¤	}¤	long len = p->m_text.Length ();¤	if (buf_info.max_buf_size < (unsigned long)len) {¤		throw TestLibrary::DB::DBError (); // bad record integrity¤	}¤	memcpy (buf_info.buf, p->m_text.Seek (0, len), len);¤	simple_object_set.Unget (p);¤	buf_info.buf_size = len;¤	//#UC END# *44BB672B0232_44A91CF70167*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44AA1DF202FD*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44AA1DF202FD*¤	¤	//#UC END# *44BB672B0232_44AA1DF202FD*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44ABC8010196*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44ABC8010196*¤	IBerkeley::BDB_var bdb = IBerkeley::BDBFactory::make ();¤	bdb->load (id_info, buf_info);¤	//#UC END# *44BB672B0232_44ABC8010196*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44B24CEE02BF*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44B24CEE02BF*¤	CloneIndex::read_local (id_info, buf_info);¤	//#UC END# *44BB672B0232_44B24CEE02BF*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44B6539700AB*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44B6539700AB*¤	int bsize = 0;¤	char* val = crget (this->curia (), (const char*)&id_info.id, sizeof (id_info.id), 0, -1, &bsize);¤	if (val == 0) {¤		LOG_E (("QDBM::QdbmDBRead_i::execute: 'crget'. obj_id: %d, error: %s", id_info.id, dperrmsg (dpecode)));¤		throw TestLibrary::DB::DBError ();¤	}¤	buf_info.buf_size = (unsigned long) bsize;¤	memcpy (buf_info.buf, val, buf_info.buf_size);¤	free(val);¤	//#UC END# *44BB672B0232_44B6539700AB*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44CF709A0196*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44CF709A0196*¤	try {¤		this->trans ()->begin ();¤		eyedb::OQL query (this->db (), "select InvertedIndex.id = %d", id_info.id);¤		eyedb::ObjectArray obj_arr;¤		query.execute (obj_arr);¤		const int obj_count = obj_arr.getCount ();¤		if (obj_count == 0) {¤			LOG_E (("EyeDBRead_i::read: object %d not found", id_info.id));¤			throw TestLibrary::DB::DBError ();¤		} else if (obj_count > 1) {¤			LOG_W (("EyeDBRead_i::read: object %d were found %d objects", id_info.id, obj_count));¤		}¤		const InvertedIndex* p = (const InvertedIndex*)obj_arr [0];¤		GDS_ASSERT (p);¤		unsigned int buf_len = 0;¤		const unsigned char* pbuf = p->getBuffer (&buf_len);¤		memcpy (buf_info.buf, pbuf, buf_len);¤		delete [] pbuf;¤		buf_info.buf_size = buf_len;¤		for (int i = 0; i < obj_count; ++i) {¤			InvertedIndex* temp = (InvertedIndex*)obj_arr [i];¤			temp->release ();¤		}¤		this->trans ()->commit ();¤	} catch (eyedb::Exception& e) {¤		this->trans ()->rollback ();¤		LOG_E (("EyeDBRead_i::read: '%s'", e.getDesc ()));¤		throw TestLibrary::DB::DBError ();¤	}¤	//#UC END# *44BB672B0232_44CF709A0196*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44E44955007F*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44E44955007F*¤	static const int action_in_one_trans = Core::ParamManager::instance ()->get_ulong ("-need_transaction", 0);¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		static unsigned long s_action_count_t = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤		if (0 == m_current_action%action_in_one_trans && m_current_action < s_action_count_t) {¤            if (0 != db_env ()->txn_begin (0, &m_db_transaction, 0)) {¤				LOG_E (("BDBCreateOIBT_i::create (): can't begin transaction"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤¤	unsigned long block = 0;¤	buf_info.buf_size = 0;¤	do {¤		Key k (id_info.id, block);¤		Dbt key (&k, sizeof (Key));¤		Dbt data;¤		memset(&data, 0, sizeof(data));¤		data.set_flags (DB_DBT_MALLOC);¤		if (1 < action_in_one_trans) {¤            if (0 != this->db ()->get (m_db_transaction, &key, &data, 0)) {¤				break;¤			}¤		} else {¤            if (0 != this->db ()->get (0, &key, &data, 0)) {¤				break;¤			}¤		}¤¤		if (buf_info.max_buf_size < (buf_info.buf_size+data.get_size ())) {¤			LOG_E (("BDBReadOIBT_i::read (): read data exceeds buf_info.max_buf_size"));¤			throw TestLibrary::DB::DBError ();¤		}¤¤		memcpy (buf_info.buf+buf_info.buf_size, data.get_data (), data.get_size ());¤		buf_info.buf_size += data.get_size ();¤¤		if (0 != data.get_data ()) {¤			free (data.get_data ());¤		}¤¤		if (static_cast<unsigned long>(m_data_block_size) > data.get_size ()) {¤			break;¤		} else {¤			block++;¤		}¤	} while (true);¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		m_current_action++;¤		if (0 == m_current_action%action_in_one_trans) {¤            m_db_transaction->commit (0);¤		}¤	}¤	¤	if (0 == buf_info.buf_size) {¤		LOG_E (("BDBReadOIBT_i::read (): zero bytes of data read"));¤		throw TestLibrary::DB::DBError ();¤	}¤¤	if (this->need_transaction ()) {¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44BB672B0232_44E44955007F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44E448AE007F*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44E448AE007F*¤	unsigned long id = reverse_int (id_info.id);¤	this->read_i (&id, sizeof (unsigned long), buf_info);¤	//#UC END# *44BB672B0232_44E448AE007F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_44E44EEA00AD*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_44E44EEA00AD*¤	static const int action_in_one_trans = Core::ParamManager::instance ()->get_ulong ("-need_transaction", 0);¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		static unsigned long s_action_count_t = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤		if (0 == m_current_action%action_in_one_trans && m_current_action < s_action_count_t) {¤            if (0 != db_env ()->txn_begin (0, &m_db_transaction, 0)) {¤				LOG_E (("BDBCreateOIBT_i::create (): can't begin transaction"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤	Dbt key (const_cast<long*>(&id_info.id), sizeof (id_info.id));¤¤	Dbt data;¤	memset(&data, 0, sizeof(data));¤	data.set_flags (DB_DBT_MALLOC);¤¤	if (1 < action_in_one_trans) {¤		if (0 != this->db ()->get (m_db_transaction, &key, &data, 0)) {¤			LOG_E (("BDBReadOIH_i::read: error in read data"));¤			throw TestLibrary::DB::DBError ();¤		}¤	} else {¤        int ret;¤		while (0 != (ret = this->db ()->get (0, &key, &data, 0))) {¤			if (DB_LOCK_DEADLOCK == ret) {¤				LOG_W (("BDBReadOIH_i::read: deadlock detected! try again"));¤			} else {¤				LOG_E (("BDBReadOIH_i::read: error in read data"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		m_current_action++;¤		if (0 == m_current_action%action_in_one_trans) {¤            m_db_transaction->commit (0);¤		}¤	}¤¤	if (buf_info.max_buf_size < data.get_size ()) {¤		LOG_E (("BDBReadOIH_i::read (): read data exceeds buf_info.max_buf_size"));¤		throw TestLibrary::DB::DBError ();¤	}¤¤	buf_info.buf_size = data.get_size ();¤	memcpy (buf_info.buf, data.get_data (), buf_info.buf_size);¤¤	if (0 != data.get_data ()) {¤		free (data.get_data ());¤	}¤¤	if (this->need_transaction ()) {¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44BB672B0232_44E44EEA00AD*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_452A6CB302EE*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_452A6CB302EE*¤	DbTxn* db_transaction = 0;¤	if (this->need_transaction () && 0 != db_env ()->txn_begin (0, &db_transaction, 0)) {¤		LOG_E (("BDBReadQueue_i::read: can't begin transaction"));¤		throw TestLibrary::DB::DBError ();¤	}¤¤	try {¤		Dbt dbt_data (buf_info.buf, 0);¤		dbt_data.set_flags (DB_DBT_USERMEM);¤		dbt_data.set_ulen (buf_info.max_buf_size);¤¤		long key_id = id_info.id;¤		Dbt dbt_key (&key_id, sizeof(key_id));¤		this->db ()->get (db_transaction, &dbt_key, &dbt_data, 0);¤		buf_info.buf_size = dbt_data.get_size ();¤	} catch (DbException &e) {¤		LOG_E (("BDBReadQueue_i::read: %s (errno = %d)", e.what (), e.get_errno ()));¤		if (this->need_transaction ()) {¤            db_transaction->abort ();¤		}¤		throw TestLibrary::DB::DBError ();¤	} catch (std::exception &e) {¤		LOG_E (("BDBReadQueue_i::read: %s", e.what ()));¤		if (this->need_transaction ()) {¤            db_transaction->abort ();¤		}¤		throw TestLibrary::DB::DBError ();¤	}¤¤	if (this->need_transaction ()) {¤		db_transaction->commit (0);¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44BB672B0232_452A6CB302EE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_470A39D2029F*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_470A39D2029F*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44BB672B0232_470A39D2029F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_470CDF3301D4*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_470CDF3301D4*¤	long sqlcode = 0;¤	isc_tr_handle trans = 0;¤	XSQLDA* out_sqlda = 0;¤	isc_stmt_handle stmt = 0;¤	isc_blob_handle blob_handle = 0;¤	ISC_QUAD blob_id;¤	blob_id.gds_quad_high = 0;¤	blob_id.gds_quad_low = 0;¤¤	isc_start_transaction(this->status (), &trans, 1, &this->db (), 0, 0);¤	make_xsqlda_for_select (stmt, blob_id, out_sqlda, trans, id_info, buf_info);¤	short null_flag = 0;¤	//out_sqlda->sqlvar [0].sqldata = (ISC_SCHAR *) &blob_id;¤	//out_sqlda->sqlvar [0].sqltype = SQL_BLOB + 1; ¤	//out_sqlda->sqlvar [0].sqllen = sizeof (ISC_QUAD);¤	out_sqlda->sqlvar [0].sqlind = &null_flag;¤	if (isc_dsql_execute (this->status (), &trans, &stmt, 1, 0)) {¤		sqlcode = isc_sqlcode(this->status ());¤		LOG_E (("FirebirdDBRead_i::read (): isc_dsql_execute API error occured %d", sqlcode));¤		throw TestLibrary::DB::DBError ();¤	}¤	unsigned short actual_seg_len = 0;¤	ISC_STATUS fetch_stat = 0;¤	while ((fetch_stat = isc_dsql_fetch (this->status (), &stmt, 1, out_sqlda)) == 0) {¤		if (isc_open_blob2 (this->status (), &this->db (), &trans, &blob_handle, &blob_id, 0, 0)) {¤			sqlcode = isc_sqlcode(this->status ());¤			LOG_E (("FirebirdDBRead_i::read (): isc_open_blob2 API error occured %d", sqlcode));¤			throw TestLibrary::DB::DBError ();¤		}¤		if (isc_get_segment (this->status (), &blob_handle, &actual_seg_len, buf_info.max_buf_size, buf_info.buf)) {¤			sqlcode = isc_sqlcode(this->status ());¤			LOG_E (("FirebirdDBRead_i::read (): isc_get_segment API error occured %d", sqlcode));¤			throw TestLibrary::DB::DBError ();¤		}¤		isc_close_blob (this->status (), &blob_handle);¤	}¤	isc_commit_transaction(this->status (), &trans);¤	free (out_sqlda);¤¤	if (fetch_stat != 100L) { // an error occured; 100 does indicate just end of data¤		sqlcode = isc_sqlcode(this->status ());¤		LOG_E (("FirebirdDBRead_i::read (): isc_dsql_fetch API error occured %d", sqlcode));¤		throw TestLibrary::DB::DBError ();¤	}¤	buf_info.buf_size = actual_seg_len;	¤	//#UC END# *44BB672B0232_470CDF3301D4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB672B0232_471DE0E00262*"
			    value      	(value Text 
|//#UC START# *44BB672B0232_471DE0E00262*¤¤	// *** LINTER: place your code here ***¤¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44BB672B0232_471DE0E00262*
			    )))
		    quid       	"44BB672B0232"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in id_info"
			    quid       	"44BB6DA40177"
			    type       	"IdInfo"
			    quidu      	"44BB6D8000AB")
			(object Parameter "inout buf_info"
			    quid       	"44BB67B502CE"
			    type       	"BufInfo"
			    quidu      	"44BB663300DA"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44BB7E69032C"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "in root_dir"
			    quid       	"44D9CBB40119"
			    type       	"IString"
			    quidu      	"431841610361")
			(object Parameter "need_sequential"
			    quid       	"450034360148"
			    type       	"boolean"
			    quidu      	"3DBFFE100240")
			(object Parameter "need_transaction"
			    quid       	"44FD7C1F0109"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "IDBOperations"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"call way"
		    value      	"forth")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"native definition"
		    value      	"none")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"abstract")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"44BB65B90399"
	    documentation 	
|Предназначен для единообразного указания места рассположения файлов БД стороннего хранилища с целью отслеживания изменений в размере физически занимаемого ими на диске места.
|
|<<атрибут>> db_root_dir - корневая директория для всех файлов, ассоциируемых с данной БД хранилища.
	    
	    stereotype 	"Interface"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "db_root_dir"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_449AB3A6031C_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_449AB3A6031C_GET*¤#ifdef WIN32¤	static char* ret = "C:\\Program Files\\Versant\\FastObjects_Databases\\test_create_object_metamodel";¤#else¤	static char* ret = "/opt/FastObjects_t7_10.0/FastObjects_Databases";¤#endif¤	return ret;¤	//#UC END# *44BBB81B0186_449AB3A6031C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44A91CF70167_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44A91CF70167_GET*¤#ifdef WIN32¤	static char* ret = "C:\\Program Files\\Versant\\FastObjects_Databases\\test_create_object_metamodel";¤#else¤	static char* ret = "/opt/FastObjects_t7_10.0/FastObjects_Databases";¤#endif¤	return ret;¤	//#UC END# *44BBB81B0186_44A91CF70167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44A1480A0128_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44A1480A0128_GET*¤	//#UC END# *44BBB81B0186_44A1480A0128_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44AA1DF202FD_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44AA1DF202FD_GET*¤	//#UC END# *44BBB81B0186_44AA1DF202FD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44AA7D2E0109_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44AA7D2E0109_GET*¤	IBerkeley::BDB_var bdb = IBerkeley::BDBFactory::make ();¤	return bdb->get_db_root_dir ();¤	//#UC END# *44BBB81B0186_44AA7D2E0109_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44ABC8010196_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44ABC8010196_GET*¤	IBerkeley::BDB_var bdb = IBerkeley::BDBFactory::make ();¤	return bdb->get_db_root_dir ();¤	//#UC END# *44BBB81B0186_44ABC8010196_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44B24CEE02BF_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44B24CEE02BF_GET*¤	return CloneIndex::get_path ();¤	//#UC END# *44BBB81B0186_44B24CEE02BF_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44B24CB4032C_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44B24CB4032C_GET*¤	return CloneIndex::get_path ();¤	//#UC END# *44BBB81B0186_44B24CB4032C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44B6536000EA_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44B6536000EA_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44B6536000EA_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44B6539700AB_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44B6539700AB_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44B6539700AB_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44CF708903C8_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44CF708903C8_GET*¤	return this->get_dir ();¤	//#UC END# *44BBB81B0186_44CF708903C8_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44CF709A0196_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44CF709A0196_GET*¤    return this->get_dir ();¤	//#UC END# *44BBB81B0186_44CF709A0196_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44D7264C0167_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44D7264C0167_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44D7264C0167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44D7268D0203_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44D7268D0203_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44D7268D0203_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44955007F_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44955007F_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44955007F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44981035D_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44981035D_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44981035D_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E449B40030_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E449B40030_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E449B40030_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E449040292_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E449040292_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E449040292_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44CF9036D_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44CF9036D_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44CF9036D_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44D21010B_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44D21010B_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44D21010B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44D400050_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44D400050_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44D400050_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E448AE007F_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E448AE007F_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E448AE007F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44ED10234_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44ED10234_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44ED10234_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44EEA00AD_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44EEA00AD_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44EEA00AD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44F0D0159_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44F0D0159_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44F0D0159_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E44F3B0224_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E44F3B0224_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_44E44F3B0224_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E4334202EE_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E4334202EE_GET*¤	return this->get_dir ();¤	//#UC END# *44BBB81B0186_44E4334202EE_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_44E4336C0242_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_44E4336C0242_GET*¤	return this->get_dir ();¤	//#UC END# *44BBB81B0186_44E4336C0242_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_4507EBDA034B_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_4507EBDA034B_GET*¤	return CloneIndex::get_path ();¤	//#UC END# *44BBB81B0186_4507EBDA034B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_4507EBF603C8_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_4507EBF603C8_GET*¤	return CloneIndex::get_path ();¤	//#UC END# *44BBB81B0186_4507EBF603C8_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_4526478B029F_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_4526478B029F_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_4526478B029F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452A52E60058_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452A52E60058_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_452A52E60058_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452A6CB302EE_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452A6CB302EE_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_452A6CB302EE_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452A6C960232_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452A6C960232_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_452A6C960232_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452CFDFD003E_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452CFDFD003E_GET*¤	return CloneIndex::get_path ();¤	//#UC END# *44BBB81B0186_452CFDFD003E_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452D180D03A4_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452D180D03A4_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_452D180D03A4_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452D18A70123_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452D18A70123_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_452D18A70123_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452D18D20096_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452D18D20096_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_452D18D20096_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452F75EE0167_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452F75EE0167_GET*¤	return CloneIndex::get_path ();¤	//#UC END# *44BBB81B0186_452F75EE0167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452F7633008C_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452F7633008C_GET*¤	return CloneIndex::get_path ();¤	//#UC END# *44BBB81B0186_452F7633008C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_452F764C035B_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_452F764C035B_GET*¤	return CloneIndex::get_path ();¤	//#UC END# *44BBB81B0186_452F764C035B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_470A396E02FD_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_470A396E02FD_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44BBB81B0186_470A396E02FD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_470A39D2029F_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_470A39D2029F_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44BBB81B0186_470A39D2029F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_470CDF18036B_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_470CDF18036B_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_470CDF18036B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_470CDF3301D4_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_470CDF3301D4_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_470CDF3301D4_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_471DE0C501EF_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_471DE0C501EF_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_471DE0C501EF_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_471DE0E00262_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_471DE0E00262_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_471DE0E00262_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_471DEA840206_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_471DEA840206_GET*¤	return this->db_root_dir ()->get_data ();¤	//#UC END# *44BBB81B0186_471DEA840206_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_471F063F039E_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_471F063F039E_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44BBB81B0186_471F063F039E_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BBB81B0186_471F066B031A_GET*"
			    value      	(value Text 
|//#UC START# *44BBB81B0186_471F066B031A_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44BBB81B0186_471F066B031A_GET*
			    )))
		    quid       	"44BBB81B0186"
		    stereotype 	"readonly"
		    type       	"string"
		    quidu      	"3DBFFE240068"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "need_transaction"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_449AB3A6031C_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_449AB3A6031C_GET*¤	//#UC END# *44FD7BCD0000_449AB3A6031C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44A91CF70167_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44A91CF70167_GET*¤	//#UC END# *44FD7BCD0000_44A91CF70167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44A1480A0128_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44A1480A0128_GET*¤	//#UC END# *44FD7BCD0000_44A1480A0128_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44AA1DF202FD_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44AA1DF202FD_GET*¤	//#UC END# *44FD7BCD0000_44AA1DF202FD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44B24CEE02BF_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44B24CEE02BF_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44B24CEE02BF_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44B24CB4032C_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44B24CB4032C_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44B24CB4032C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44B6539700AB_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44B6539700AB_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44B6539700AB_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44D7264C0167_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44D7264C0167_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44D7264C0167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44D7268D0203_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44D7268D0203_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44D7268D0203_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44B6536000EA_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44B6536000EA_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44B6536000EA_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44CF708903C8_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44CF708903C8_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44CF708903C8_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44CF709A0196_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44CF709A0196_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44CF709A0196_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E4334202EE_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E4334202EE_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E4334202EE_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E4336C0242_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E4336C0242_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E4336C0242_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44955007F_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44955007F_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44955007F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44981035D_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44981035D_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44981035D_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E449B40030_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E449B40030_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E449B40030_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E449040292_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E449040292_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E449040292_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44CF9036D_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44CF9036D_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44CF9036D_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44D21010B_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44D21010B_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44D21010B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44D400050_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44D400050_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44D400050_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E448AE007F_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E448AE007F_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E448AE007F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44ED10234_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44ED10234_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44ED10234_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44EEA00AD_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44EEA00AD_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44EEA00AD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44F0D0159_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44F0D0159_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44F0D0159_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_44E44F3B0224_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_44E44F3B0224_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_44E44F3B0224_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_4507EBDA034B_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_4507EBDA034B_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_4507EBDA034B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_4507EBF603C8_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_4507EBF603C8_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_4507EBF603C8_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_4526478B029F_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_4526478B029F_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_4526478B029F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452A52E60058_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452A52E60058_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452A52E60058_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452A6CB302EE_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452A6CB302EE_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452A6CB302EE_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452A6C960232_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452A6C960232_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452A6C960232_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452CFDFD003E_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452CFDFD003E_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452CFDFD003E_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452D180D03A4_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452D180D03A4_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452D180D03A4_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452D18A70123_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452D18A70123_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452D18A70123_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452D18D20096_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452D18D20096_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452D18D20096_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452F75EE0167_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452F75EE0167_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452F75EE0167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452F7633008C_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452F7633008C_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452F7633008C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_452F764C035B_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_452F764C035B_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_452F764C035B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_470A396E02FD_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_470A396E02FD_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44FD7BCD0000_470A396E02FD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_470A39D2029F_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_470A39D2029F_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44FD7BCD0000_470A39D2029F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_470CDF18036B_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_470CDF18036B_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_470CDF18036B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_470CDF3301D4_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_470CDF3301D4_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_470CDF3301D4_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_471DE0C501EF_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_471DE0C501EF_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_471DE0C501EF_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_471DE0E00262_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_471DE0E00262_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_471DE0E00262_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_471DEA840206_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_471DEA840206_GET*¤	return this->need_transaction ();¤	//#UC END# *44FD7BCD0000_471DEA840206_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_471F063F039E_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_471F063F039E_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44FD7BCD0000_471F063F039E_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44FD7BCD0000_471F066B031A_GET*"
			    value      	(value Text 
|//#UC START# *44FD7BCD0000_471F066B031A_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44FD7BCD0000_471F066B031A_GET*
			    )))
		    quid       	"44FD7BCD0000"
		    stereotype 	"readonly"
		    type       	"boolean"
		    quidu      	"3DBFFE100240"
		    exportControl 	"Public")
		(object ClassAttribute "need_sequential"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_449AB3A6031C_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_449AB3A6031C_GET*¤	//#UC END# *450014A403A9_449AB3A6031C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44A1480A0128_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44A1480A0128_GET*¤	//#UC END# *450014A403A9_44A1480A0128_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44B24CB4032C_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44B24CB4032C_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44B24CB4032C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44D7264C0167_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44D7264C0167_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44D7264C0167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44B6536000EA_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44B6536000EA_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44B6536000EA_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44CF708903C8_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44CF708903C8_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44CF708903C8_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E4334202EE_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E4334202EE_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E4334202EE_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E449B40030_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E449B40030_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E449B40030_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E449040292_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E449040292_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E449040292_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44CF9036D_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44CF9036D_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44CF9036D_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44D400050_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44D400050_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44D400050_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44ED10234_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44ED10234_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44ED10234_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44F0D0159_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44F0D0159_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44F0D0159_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44A91CF70167_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44A91CF70167_GET*¤	//#UC END# *450014A403A9_44A91CF70167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44AA1DF202FD_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44AA1DF202FD_GET*¤	//#UC END# *450014A403A9_44AA1DF202FD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44B24CEE02BF_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44B24CEE02BF_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44B24CEE02BF_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44B6539700AB_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44B6539700AB_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44B6539700AB_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44D7268D0203_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44D7268D0203_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44D7268D0203_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44CF709A0196_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44CF709A0196_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44CF709A0196_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E4336C0242_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E4336C0242_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E4336C0242_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44955007F_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44955007F_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44955007F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44981035D_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44981035D_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44981035D_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44D21010B_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44D21010B_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44D21010B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E448AE007F_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E448AE007F_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E448AE007F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44EEA00AD_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44EEA00AD_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44EEA00AD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_44E44F3B0224_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_44E44F3B0224_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_44E44F3B0224_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_4507EBDA034B_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_4507EBDA034B_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_4507EBDA034B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_4507EBF603C8_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_4507EBF603C8_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_4507EBF603C8_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_4526478B029F_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_4526478B029F_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_4526478B029F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452A52E60058_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452A52E60058_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452A52E60058_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452A6CB302EE_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452A6CB302EE_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452A6CB302EE_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452A6C960232_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452A6C960232_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452A6C960232_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452CFDFD003E_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452CFDFD003E_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452CFDFD003E_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452D180D03A4_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452D180D03A4_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452D180D03A4_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452D18A70123_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452D18A70123_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452D18A70123_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452D18D20096_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452D18D20096_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452D18D20096_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452F75EE0167_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452F75EE0167_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452F75EE0167_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452F7633008C_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452F7633008C_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452F7633008C_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_452F764C035B_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_452F764C035B_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_452F764C035B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_470A396E02FD_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_470A396E02FD_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *450014A403A9_470A396E02FD_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_470A39D2029F_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_470A39D2029F_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *450014A403A9_470A39D2029F_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_470CDF18036B_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_470CDF18036B_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_470CDF18036B_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_470CDF3301D4_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_470CDF3301D4_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_470CDF3301D4_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_471DE0C501EF_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_471DE0C501EF_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_471DE0C501EF_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_471DE0E00262_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_471DE0E00262_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_471DE0E00262_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_471DEA840206_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_471DEA840206_GET*¤	return this->need_sequential ();¤	//#UC END# *450014A403A9_471DEA840206_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_471F063F039E_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_471F063F039E_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *450014A403A9_471F063F039E_GET*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*450014A403A9_471F066B031A_GET*"
			    value      	(value Text 
|//#UC START# *450014A403A9_471F066B031A_GET*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *450014A403A9_471F066B031A_GET*
			    )))
		    quid       	"450014A403A9"
		    stereotype 	"readonly"
		    type       	"boolean"
		    quidu      	"3DBFFE100240"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator"
	    abstract   	TRUE)
	(object Class "IDBCreate"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_449AB3A6031C_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_449AB3A6031C_BASE_INIT*¤//#UC END# *44BB65D80148_44BB7E720242_449AB3A6031C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_449AB3A6031C_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_449AB3A6031C_BODY*¤	//#UC END# *44BB65D80148_44BB7E720242_449AB3A6031C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44A1480A0128_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_44A1480A0128_BASE_INIT*¤//#UC END# *44BB65D80148_44BB7E720242_44A1480A0128_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44A1480A0128_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_44A1480A0128_BODY*¤	//#UC END# *44BB65D80148_44BB7E720242_44A1480A0128_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44AA7D2E0109_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_44AA7D2E0109_BASE_INIT*¤//#UC END# *44BB65D80148_44BB7E720242_44AA7D2E0109_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44AA7D2E0109_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_44AA7D2E0109_BODY*¤	//#UC END# *44BB65D80148_44BB7E720242_44AA7D2E0109_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44B24CB4032C_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_44B24CB4032C_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CloneIndex (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB65D80148_44BB7E720242_44B24CB4032C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44B24CB4032C_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_44B24CB4032C_BODY*¤	//#UC END# *44BB65D80148_44BB7E720242_44B24CB4032C_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44B6536000EA_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_44B6536000EA_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CuriaTest (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB65D80148_44BB7E720242_44B6536000EA_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44B6536000EA_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_44B6536000EA_BODY*¤	this->open_db (CR_OWRITER | CR_OCREAT, this->get_db_root_dir ());¤	//#UC END# *44BB65D80148_44BB7E720242_44B6536000EA_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44CF708903C8_BASE_INIT*"
		    value      	(value Text "//#UC START# *44BB65D80148_44BB7E720242_44CF708903C8_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, EyeDBBase (root_dir, need_sequential, need_transaction, eyedb::Database::DBRWLocal)¤//#UC END# *44BB65D80148_44BB7E720242_44CF708903C8_BASE_INIT*"))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44CF708903C8_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_44CF708903C8_BODY*¤	//#UC END# *44BB65D80148_44BB7E720242_44CF708903C8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"call way"
		    value      	"forth")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"debug log"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator User Properties"
		    name       	"native definition"
		    value      	"none")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44E449040292_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_44E449040292_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIBT (root_dir, need_sequential, need_transaction)¤, m_current_action (0)¤, m_db_transaction (0)¤//#UC END# *44BB65D80148_44BB7E720242_44E449040292_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44E449040292_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_44E449040292_BODY*¤    std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤	try {¤		//base->set_bt_compare (bt_compare);¤		//base->set_bt_prefix (bt_compare_prefix);¤¤		set_page_size (base.in ());¤¤		this->set_block_size (base.in ());¤¤		u_int32_t flags = 0;¤		if (this->need_transaction ()) {¤			flags = DB_CREATE|DB_THREAD|DB_AUTO_COMMIT;¤		} else {¤			flags = DB_CREATE;//|DB_THREAD;¤		}¤		base->open (0, full_name.c_str (), 0, DB_BTREE, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBCreateOIBT_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBCreateOIBT_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤	//#UC END# *44BB65D80148_44BB7E720242_44E449040292_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44E44CF9036D_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_44E44CF9036D_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainWSF (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB65D80148_44BB7E720242_44E44CF9036D_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44E44CF9036D_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_44E44CF9036D_BODY*¤#ifdef WIN32¤	u_int32_t page_size = 64*1024;¤#endif¤	u_int32_t open_flags = (this->need_transaction ()) ? DB_CREATE|DB_THREAD|DB_AUTO_COMMIT: DB_CREATE;¤¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_KEY_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_KEY_FILE_NAME_ON_UNIX;¤#endif¤¤	::Core::Aptr<Db> base;¤	if ("create_object_test_monopole" == Core::ParamManager::instance ()->get_string ("-test_profile_key") && false == this->need_transaction ()) {¤		base = new Db (0, 0);¤		base->set_cachesize (0, 512*1024, 0);¤	} else {¤		base = new Db (db_env (), 0);¤	}¤¤	try {¤#ifdef WIN32¤		base->set_pagesize (page_size);¤#endif¤		base->open (0, full_name.c_str (), 0, DB_BTREE, open_flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBCreateWSF_i::ctor: %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBCreateWSF_i::ctor: can't open database, errmsg = %s", e.what ()));¤	}¤	this->db_key () = base._retn ();¤¤	///////////////////////////////////////////¤	full_name = this->get_db_root_dir ();¤#ifdef WIN32¤	full_name += BDB_STREAM_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_STREAM_FILE_NAME_ON_UNIX;¤#endif¤¤	base = new Db (db_env (), 0);¤¤	try {¤#ifdef WIN32¤		base->set_pagesize (page_size);¤		base->set_q_extentsize (2147483648/page_size);¤#endif¤		base->set_re_len (sizeof (Block));¤		base->open (0, full_name.c_str (), 0, DB_QUEUE, open_flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBCreateWSF_i::ctor: %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBCreateWSF_i::ctor: can't open database, errmsg = %s", e.what ()));¤	}¤	this->db_data () = base._retn ();¤¤	//f = fopen (std::string (full_name+".distr").c_str (), "w");¤	//#UC END# *44BB65D80148_44BB7E720242_44E44CF9036D_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44E44ED10234_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_44E44ED10234_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIH (root_dir, need_sequential, need_transaction)¤, m_current_action (0)¤, m_db_transaction (0)¤//#UC END# *44BB65D80148_44BB7E720242_44E44ED10234_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_44E44ED10234_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_44E44ED10234_BODY*¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤	try {¤		set_page_size (base);¤		set_hash_func (base);¤		u_int32_t flags = (this->need_transaction ()) ? DB_CREATE|DB_THREAD|DB_AUTO_COMMIT: DB_CREATE|DB_THREAD;¤		base->open (0, full_name.c_str (), 0, DB_HASH, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBCreateOIH_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBCreateOIH_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤	//#UC END# *44BB65D80148_44BB7E720242_44E44ED10234_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_452A6C960232_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_452A6C960232_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainQueue (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB65D80148_44BB7E720242_452A6C960232_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_452A6C960232_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_452A6C960232_BODY*¤	//#UC END# *44BB65D80148_44BB7E720242_452A6C960232_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_470A396E02FD_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_470A396E02FD_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, XflaimTestBase (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB65D80148_44BB7E720242_470A396E02FD_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_470A396E02FD_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_470A396E02FD_BODY*¤	std::string full_db_path_name = std::string (this->get_db_root_dir ()) + std::string ("/") + std::string (DB_NAME);¤	this->create_db (0, full_db_path_name.c_str ());¤	if (need_sequential == true) {¤		static const char*	pszIndex =¤			"<xflaim:Index "¤			"xmlns:xflaim=\"http://www.novell.com/XMLDatabase/Schema\" "¤			"xflaim:name=\"garant_id\">"¤			"<xflaim:ElementComponent "¤				"xflaim:name=\"garantid\" "¤				"xflaim:IndexOn=\"value\" "¤				"xflaim:KeyComponent=\"1\"/>"¤			"</xflaim:Index>"¤		;¤		IF_PosIStream* pPosIStream = 0;¤		if (RC_BAD(this->db ()->transBegin (XFLM_UPDATE_TRANS, FLM_NO_TIMEOUT))) {¤			LOG_E (("XFlaim::XflaimDbCreate_i::XflaimDbCreate_i (): RC_BAD (transBegin)"));¤			throw TestLibrary::DB::DBError ();¤		}¤¤		if (RC_BAD(this->dbsys ()->openBufferIStream (pszIndex, f_strlen( pszIndex), &pPosIStream))) {¤			LOG_E (("XFlaim::XflaimDbCreate_i::XflaimDbCreate_i (): RC_BAD (openBufferIStream)"));¤			throw TestLibrary::DB::DBError ();¤		}¤		if (RC_BAD(this->db ()->import (pPosIStream, XFLM_DICT_COLLECTION))) {¤			LOG_E (("XFlaim::XflaimDbCreate_i::XflaimDbCreate_i (): RC_BAD (import)"));¤			throw TestLibrary::DB::DBError ();¤		}¤		if (RC_BAD(this->db ()->transCommit ())) {¤			LOG_E (("XFlaim::XflaimDbCreate_i::XflaimDbCreate_i (): RC_BAD (transCommit)"));¤			throw TestLibrary::DB::DBError ();¤		}¤	}¤	//#UC END# *44BB65D80148_44BB7E720242_470A396E02FD_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_470CDF18036B_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_470CDF18036B_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, FirebirdTestBase (root_dir, need_sequential, need_transaction)¤//#UC END# *44BB65D80148_44BB7E720242_470CDF18036B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_470CDF18036B_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_470CDF18036B_BODY*¤	if (need_sequential) {¤		this->create_db (0, root_dir->get_data ());¤	} else {¤		this->open_db (0, root_dir->get_data ());¤	}¤	//#UC END# *44BB65D80148_44BB7E720242_470CDF18036B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_471DE0C501EF_BASE_INIT*"
		    value      	"//#UC START# *44BB65D80148_44BB7E720242_471DE0C501EF_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, LinterTestBase (root_dir, need_sequential, need_transaction)¤¤// *** LINTER: place your code here ***¤¤//#UC END# *44BB65D80148_44BB7E720242_471DE0C501EF_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44BB65D80148_44BB7E720242_471DE0C501EF_BODY*"
		    value      	(value Text 
|//#UC START# *44BB65D80148_44BB7E720242_471DE0C501EF_BODY*¤¤	// *** LINTER: place your code here ***¤	// *** LINTER: you may or may not use class-helper LinterTestBase: see comments in the LinterTestBase.cpp file ***¤¤	//#UC END# *44BB65D80148_44BB7E720242_471DE0C501EF_BODY*
		    )))
	    quid       	"44BB65D80148"
	    documentation 	
|Предназначен для создания в базе простых объектов по их идентификатору и содержимому.
|
|<<метод>> create () - создает в базе объект с заданным идентификатором и с содержимым, равным содержимому переданного буфера.
|
|<<фабрика>> make () - не принимает параметры: вся конфигурация БД (в т.ч. db_root_dir) содержится внутри реализации этого интерфейса.
|
|Для интерфейсов IDBCreate и IDBRead используется одна и таже конфигурация (метамодель) БД: интерфейс IDBCreate наполняет ее даннными, а IDBRead использует ее только для чтения.
	    
	    stereotype 	"Interface"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"450030FF03C8"
		    supplier   	"Logical View::storage::TestLibrary::DB::IDBOperations"
		    quidu      	"44BB65B90399"))
	    operations 	(list Operations
		(object Operation "create"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"Must throw in error"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"debug log"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator User Properties"
			    name       	"dll export"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_449AB3A6031C*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_449AB3A6031C*¤	::SimpleObject* simple_object = new ::SimpleObject (buf_info.buf, long (buf_info.buf_size), id_info.id);¤	simple_object->Assign (this->get_base ());¤	long db_error = simple_object->Store ();¤	if (db_error < 0) {¤		throw TestLibrary::DB::DBError ();¤	}¤	long len = simple_object->m_text.Length ();¤	delete simple_object;¤	//#UC END# *44BB65FC00AB_449AB3A6031C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_44A1480A0128*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_44A1480A0128*¤	¤	//#UC END# *44BB65FC00AB_44A1480A0128*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_44AA7D2E0109*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_44AA7D2E0109*¤	IBerkeley::BDB_var bdb = IBerkeley::BDBFactory::make ();¤	bdb->store (id_info, buf_info);¤¤	static unsigned long s_action_count = Core::ParamManager::instance ()->get_long ("-action_count", 1000000);¤	s_action_count--;¤	if (0 == s_action_count) {¤		bdb->flush ();¤	}¤	//#UC END# *44BB65FC00AB_44AA7D2E0109*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_44B24CB4032C*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_44B24CB4032C*¤	CloneIndex::update_local (id_info, buf_info);¤	//#UC END# *44BB65FC00AB_44B24CB4032C*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_44B6536000EA*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_44B6536000EA*¤	if (!crput (this->curia (), (const char*)&id_info.id, sizeof (id_info.id), buf_info.buf, buf_info.buf_size, CR_DOVER)) {¤		LOG_E (("QDBM::QdbmDBCreate_i::execute: 'crput'. obj_id: %d, error: %s", id_info.id, dperrmsg (dpecode)));¤		throw TestLibrary::DB::DBError ();¤	}	¤	//#UC END# *44BB65FC00AB_44B6536000EA*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_44CF708903C8*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_44CF708903C8*¤	try {¤		this->trans ()->begin ();¤		InvertedIndex* p = new InvertedIndex (this->db ());¤		p->setId (id_info.id);¤		p->setBuffer ((const unsigned char*)buf_info.buf, buf_info.buf_size);¤		p->store ();¤		p->release ();¤		this->trans ()->commit ();¤	} catch (eyedb::Exception& e) {¤		this->trans ()->rollback ();¤		LOG_E (("EyeDBCreate_i::create: '%s'", e.getDesc ()));¤		throw TestLibrary::DB::DBError ();¤	}¤	//#UC END# *44BB65FC00AB_44CF708903C8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_44E449040292*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_44E449040292*¤	static const int action_in_one_trans = Core::ParamManager::instance ()->get_ulong ("-need_transaction", 0);¤¤	if (this->need_transaction ()) {¤		static unsigned long s_action_count_t = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤		if (0 == m_current_action%action_in_one_trans && m_current_action < s_action_count_t) {¤            if (0 != db_env ()->txn_begin (0, &m_db_transaction, 0)) {¤				LOG_E (("BDBCreateOIBT_i::create (): can't begin transaction"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤	try {¤		unsigned long block_size = 0;¤¤		unsigned long pos = 0;¤		while (pos < buf_info.buf_size) {¤			Key k (id_info.id, pos/m_data_block_size);¤			block_size = (static_cast<long>(buf_info.buf_size-pos) < m_data_block_size) ? buf_info.buf_size-pos : m_data_block_size;¤			Dbt key (&k, sizeof (Key));¤			Dbt data (buf_info.buf+pos, block_size);¤¤			this->db ()->put (m_db_transaction, &key, &data, 0);¤¤			pos += block_size;¤		}¤¤		if (0 == this->need_sequential ()) {¤			for (unsigned long block = pos/m_data_block_size+1; true; block++) {¤				Key k (id_info.id, block);¤				Dbt key (&k, sizeof (Key));¤				if (0 != this->db ()->del (m_db_transaction, &key, 0)) {¤					break;¤				}¤			}¤		}¤	} catch (DbException& e) {¤		if (this->need_transaction ()) {¤			m_db_transaction->abort ();¤		}¤		LOG_E (("BDBCreateOIBT_i::create (): %s (errno = %d)", e.what (), e.get_errno ()));¤		throw TestLibrary::DB::DBError ();¤	} catch (std::exception& e) {¤		if (this->need_transaction ()) {¤			m_db_transaction->abort ();¤		}¤		LOG_E (("BDBCreateOIBT_i::create (): %s", e.what ()));¤		throw TestLibrary::DB::DBError ();¤	}¤¤¤	if (this->need_transaction ()) {¤		m_current_action++;¤		if (0 == m_current_action%action_in_one_trans) {¤            m_db_transaction->commit (0);¤		}¤	}¤¤	////test¤	//{¤	//	unsigned long r = reverse_int (id_info.id);¤	//	Dbt key (&r, sizeof (r));¤	//	Dbt data (buf_info.buf, buf_info.buf_size);¤	//	this->db ()->put (0, &key, &data, 0);¤	//	if (this->need_transaction ()) {¤	//		db_transaction->commit (0);¤	//	}¤	//}¤¤	if (this->need_transaction ()) {¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44BB65FC00AB_44E449040292*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_44E44CF9036D*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_44E44CF9036D*¤	//fprintf (f, "%u %u\n", id_info, buf_info.buf_size);¤	//fflush (f);¤¤	unsigned long key = reverse_int (id_info.id);¤	if (buf_info.buf_size < WSF_BLOCK_SIZE) {¤		write_small_data (&key, sizeof (unsigned long), buf_info);¤	} else {¤		write_large_data (&key, sizeof (unsigned long), buf_info);¤	}¤¤	static unsigned long s_action_count = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤	s_action_count--;¤	if (0 == s_action_count) {¤		this->db_key ()->sync (0);¤		this->db_data ()->sync (0);¤	}	¤	//#UC END# *44BB65FC00AB_44E44CF9036D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_44E44ED10234*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_44E44ED10234*¤	static const int action_in_one_trans = Core::ParamManager::instance ()->get_ulong ("-need_transaction", 0);¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		static unsigned long s_action_count_t = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤		if (0 == m_current_action%action_in_one_trans && m_current_action < s_action_count_t) {¤            if (0 != db_env ()->txn_begin (0, &m_db_transaction, 0)) {¤				LOG_E (("BDBCreateOIH_i::create: can't begin transaction"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤	try {¤		Dbt key (const_cast<long*>(&id_info.id), sizeof (id_info.id));¤		Dbt data (buf_info.buf, buf_info.buf_size);¤		int ret;¤		if (1 < action_in_one_trans) {¤			if (0 != this->db ()->put (m_db_transaction, &key, &data, 0)) {¤				LOG_E (("BDBCreateOIH_i::add: deadlock detected! key = %u ", id_info.id));¤				throw TestLibrary::DB::DBError ();¤			}¤		} else {¤            while (0 != (ret = this->db ()->put (0, &key, &data, 0))) {¤				if (DB_LOCK_DEADLOCK == ret) {¤					LOG_W (("BDBCreateOIH_i::add: deadlock detected! try write again, key = %u ", id_info.id));¤				} else {¤					throw TestLibrary::DB::DBError ();¤				}¤			}¤		}¤	} catch (DbException &e) {¤		LOG_E (("BDBCreateOIH_i::create: %s (errno = %d)", e.what (), e.get_errno ()));¤		throw TestLibrary::DB::DBError ();¤		// Error handling code goes here¤	} catch (std::exception &e) {¤		LOG_E (("BDBCreateOIH_i::create: %s", e.what ()));¤		throw TestLibrary::DB::DBError ();¤		// Error handling code goes here¤	}¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		m_current_action++;¤		if (0 == m_current_action%action_in_one_trans) {¤            m_db_transaction->commit (0);¤		}¤	}¤¤	if (this->need_transaction ()) {¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44BB65FC00AB_44E44ED10234*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_452A6C960232*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_452A6C960232*¤	DbTxn* db_transaction = 0;¤	if (this->need_transaction () && 0 != this->db_env ()->txn_begin (0, &db_transaction, 0)) {¤		LOG_E (("BDBCreateQueue_i::create: can't begin transaction"));¤		throw TestLibrary::DB::DBError ();¤	}¤¤	try {¤		if (this->need_sequential ()) {¤			this->append (db_transaction, id_info, buf_info);¤		} else {¤			this->update (db_transaction, id_info, buf_info);¤		}¤	} catch (DbException &e) {¤		LOG_E (("BDBCreateQueue_i::create: %s (errno = %d)", e.what (), e.get_errno ()));¤		if (this->need_transaction ()) {¤            db_transaction->abort ();¤		}¤		throw TestLibrary::DB::DBError ();¤	} catch (std::exception &e) {¤		LOG_E (("BDBCreateQueue_i::create: %s", e.what ()));¤		if (this->need_transaction ()) {¤            db_transaction->abort ();¤		}¤		throw TestLibrary::DB::DBError ();¤	} catch (...) {¤		LOG_UEX (("BDBCreateQueue_i::create"));¤		if (this->need_transaction ()) {¤            db_transaction->abort ();¤		}¤		throw TestLibrary::DB::DBError ();¤	}¤¤	if (this->need_transaction ()) {¤		db_transaction->commit (0);¤		this->db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44BB65FC00AB_452A6C960232*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_470A396E02FD*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_470A396E02FD*¤	if (RC_BAD (this->db ()->transBegin (XFLM_UPDATE_TRANS, FLM_NO_TIMEOUT))) {¤		LOG_E (("XFlaim::XflaimDbCreate_i::create (): RC_BAD (transBegin)"));¤		throw TestLibrary::DB::DBError ();¤	}¤	// THIS IS A HINT CODE ONLY. IT DOES NEED RE-IMPLEMENTATION!¤	IF_PosIStream* pistream2 = 0;¤	if (RC_BAD (this->dbsys ()->openBufferIStream ((const char *) buf_info.buf, (FLMUINT) buf_info.buf_size, &pistream2))) {¤		LOG_E (("XFlaim::XflaimDbCreate_i::create (): RC_BAD (openBufferIStream buf_info.buf)"));¤		throw TestLibrary::DB::DBError ();¤	}¤	if (RC_BAD (this->db ()->import (pistream2, XFLM_DATA_COLLECTION))) {¤		LOG_E (("XFlaim::XflaimDbCreate_i::create (): RC_BAD (import XFLM_DATA_COLLECTION)"));¤		throw TestLibrary::DB::DBError ();¤	}¤	if (RC_BAD (this->db ()->transCommit ())) {¤		LOG_E (("XFlaim::XflaimDbCreate_i::create (): RC_BAD (transCommit)"));¤		throw TestLibrary::DB::DBError ();¤	}¤	//#UC END# *44BB65FC00AB_470A396E02FD*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_470CDF18036B*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_470CDF18036B*¤	long sqlcode = 0;¤	isc_tr_handle trans = 0;¤	XSQLDA* in_sqlda = 0;¤	ISC_QUAD blob_id;¤	blob_id.gds_quad_high = 0;¤	blob_id.gds_quad_low = 0;¤¤	isc_start_transaction(this->status (), &trans, 1, &this->db (), 0, 0);¤	make_xsqlda_for_insert (blob_id, in_sqlda, trans, id_info, buf_info);¤    if (isc_dsql_execute_immediate(this->status (), &this->db (), &trans, 0, insert_obj_sql_statement, 1, in_sqlda)) {¤		sqlcode = isc_sqlcode(this->status ());¤		if (sqlcode == -803) { // id already exists¤			make_xsqlda_for_update (in_sqlda, trans, id_info, buf_info);¤			if (isc_dsql_execute_immediate(this->status (), &this->db (), &trans, 0, update_obj_sql_statement, 1, in_sqlda)) {¤				sqlcode = isc_sqlcode(this->status ());¤				LOG_E (("FirebirdDBCreate_i::create (): isc_dsql_execute_immediate API error occured %d", sqlcode));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤	isc_commit_transaction(this->status (), &trans);¤	free (in_sqlda);¤	//#UC END# *44BB65FC00AB_470CDF18036B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44BB65FC00AB_471DE0C501EF*"
			    value      	(value Text 
|//#UC START# *44BB65FC00AB_471DE0C501EF*¤¤	// *** LINTER: place your code here ***¤¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44BB65FC00AB_471DE0C501EF*
			    )))
		    quid       	"44BB65FC00AB"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in id_info"
			    quid       	"44BB6DBB00AB"
			    type       	"IdInfo"
			    quidu      	"44BB6D8000AB")
			(object Parameter "in buf_info"
			    quid       	"44BB676D038A"
			    type       	"BufInfo"
			    quidu      	"44BB663300DA"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44BB7E720242"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "in root_dir"
			    quid       	"44D9CBA90196"
			    type       	"IString"
			    quidu      	"431841610361")
			(object Parameter "need_sequential"
			    quid       	"4500160701D4"
			    type       	"boolean"
			    quidu      	"3DBFFE100240")
			(object Parameter "need_transaction"
			    quid       	"44FD7C050242"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "BufInfo"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"44BB663300DA"
	    documentation 	"Структура-описатель буфера для передачи содержимого объекта, содержит указатель на буфер, размер буфера и максимально возможный размер буфера."
	    stereotype 	"Struct"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "buf"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44BB66720196"
		    type       	"string"
		    quidu      	"3DBFFE240068"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "buf_size"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44BB668D002E"
		    type       	"unsigned long"
		    quidu      	"3DBFFDE101CA"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "max_buf_size"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44BBA0E2009C"
		    type       	"unsigned long"
		    quidu      	"3DBFFDE101CA"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "IdInfo"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"44BB6D8000AB"
	    documentation 	"Структура-описатель Id объекта. Содержит id объекта."
	    stereotype 	"Struct"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "id"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44BB6D8C0167"
		    type       	"long"
		    quidu      	"3DBFFD7002C2"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "IDBContextAdd"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44D7264C0167_BASE_INIT*"
		    value      	"//#UC START# *44C0C680000F_44C0C7FC036B_44D7264C0167_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CuriaTest (root_dir, need_sequential, need_transaction)¤//#UC END# *44C0C680000F_44C0C7FC036B_44D7264C0167_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44D7264C0167_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C680000F_44C0C7FC036B_44D7264C0167_BODY*¤	this->open_db (CR_OWRITER | CR_OCREAT, this->get_db_root_dir ());¤	//#UC END# *44C0C680000F_44C0C7FC036B_44D7264C0167_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44E449B40030_BASE_INIT*"
		    value      	"//#UC START# *44C0C680000F_44C0C7FC036B_44E449B40030_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIBT (root_dir, need_sequential, need_transaction)¤, m_current_action (0)¤, m_db_transaction (0)¤//#UC END# *44C0C680000F_44C0C7FC036B_44E449B40030_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44E449B40030_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C680000F_44C0C7FC036B_44E449B40030_BODY*¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤	try {¤#ifdef WIN32¤		base->set_pagesize (64*1024);¤#endif¤		u_int32_t flags =¤			(this->need_transaction ())¤			? DB_AUTO_COMMIT|DB_CREATE|DB_THREAD¤			: DB_CREATE;¤		base->open (0, full_name.c_str (), 0, DB_BTREE, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBContextAddOIBT_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBContextAddOIBT_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤¤	//f = fopen (std::string (full_name+".distr").c_str (), "w");¤	//#UC END# *44C0C680000F_44C0C7FC036B_44E449B40030_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44E44D400050_BASE_INIT*"
		    value      	"//#UC START# *44C0C680000F_44C0C7FC036B_44E44D400050_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainWSF (root_dir, need_sequential, need_transaction)¤//#UC END# *44C0C680000F_44C0C7FC036B_44E44D400050_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44E44D400050_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C680000F_44C0C7FC036B_44E44D400050_BODY*¤#ifdef WIN32¤	u_int32_t page_size = 64*1024;¤#endif¤	u_int32_t open_flags = (this->need_transaction ()) ? DB_CREATE|DB_THREAD|DB_AUTO_COMMIT: DB_CREATE|DB_THREAD;¤¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_KEY_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_KEY_FILE_NAME_ON_UNIX;¤#endif¤¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤	try {¤#ifdef WIN32¤		base->set_pagesize (page_size);¤#endif¤		base->open (0, full_name.c_str (), 0, DB_BTREE, open_flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBCreateWSF_i::ctor: %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBCreateWSF_i::ctor: can't open database, errmsg = %s", e.what ()));¤	}¤	this->db_key () = base._retn ();¤¤	///////////////////////////////////////////¤	full_name = this->get_db_root_dir ();¤#ifdef WIN32¤	full_name += BDB_STREAM_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_STREAM_FILE_NAME_ON_UNIX;¤#endif¤¤	base = new Db (db_env (), 0);¤	try {¤#ifdef WIN32¤		base->set_pagesize (page_size);¤		base->set_q_extentsize (2147483648/page_size);¤#endif¤		base->set_re_len (sizeof (Block));¤		base->open (0, full_name.c_str (), 0, DB_QUEUE, open_flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBCreateWSF_i::ctor: %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBCreateWSF_i::ctor: can't open database, errmsg = %s", e.what ()));¤	}¤	this->db_data () = base._retn ();¤	//#UC END# *44C0C680000F_44C0C7FC036B_44E44D400050_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44E44F0D0159_BASE_INIT*"
		    value      	"//#UC START# *44C0C680000F_44C0C7FC036B_44E44F0D0159_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIH (root_dir, need_sequential, need_transaction)¤, m_current_action (0)¤, m_db_transaction (0)¤//#UC END# *44C0C680000F_44C0C7FC036B_44E44F0D0159_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44E44F0D0159_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C680000F_44C0C7FC036B_44E44F0D0159_BODY*¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤¤	try {¤#ifdef WIN32¤		base->set_pagesize (64*1024);¤#endif¤		bool need_rdonly = Core::ParamManager::instance ()->get_long ("-need_rdonly", 0) ;¤		u_int32_t flags =¤			(this->need_transaction ())¤			? DB_AUTO_COMMIT|DB_CREATE|DB_THREAD¤			: ((need_rdonly) ? DB_RDONLY|DB_THREAD: DB_CREATE|DB_THREAD);¤		base->open (0, full_name.c_str (), 0, DB_HASH, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBContextAddOIH_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBContextAddOIH_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤	//#UC END# *44C0C680000F_44C0C7FC036B_44E44F0D0159_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44E4334202EE_BASE_INIT*"
		    value      	"//#UC START# *44C0C680000F_44C0C7FC036B_44E4334202EE_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, EyeDBBase (root_dir, need_sequential, need_transaction, eyedb::Database::DBRWLocal)¤//#UC END# *44C0C680000F_44C0C7FC036B_44E4334202EE_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_44E4334202EE_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C680000F_44C0C7FC036B_44E4334202EE_BODY*¤	//#UC END# *44C0C680000F_44C0C7FC036B_44E4334202EE_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_4507EBDA034B_BASE_INIT*"
		    value      	"//#UC START# *44C0C680000F_44C0C7FC036B_4507EBDA034B_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CloneIndex (root_dir, need_sequential, need_transaction)¤//#UC END# *44C0C680000F_44C0C7FC036B_4507EBDA034B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_4507EBDA034B_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C680000F_44C0C7FC036B_4507EBDA034B_BODY*¤	//#UC END# *44C0C680000F_44C0C7FC036B_4507EBDA034B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_471F063F039E_BASE_INIT*"
		    value      	"//#UC START# *44C0C680000F_44C0C7FC036B_471F063F039E_BASE_INIT*¤//#UC END# *44C0C680000F_44C0C7FC036B_471F063F039E_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C680000F_44C0C7FC036B_471F063F039E_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C680000F_44C0C7FC036B_471F063F039E_BODY*¤	//#UC END# *44C0C680000F_44C0C7FC036B_471F063F039E_BODY*
		    )))
	    quid       	"44C0C680000F"
	    documentation 	
|Предназначен для одиночной (не пакетной) модификации контекстного индекса  с целью добавления в него инфо о новом документе.
|
|<<метод>> add () устанавливает для слова-ключа key_info данные-позиции слов в документах (пары id,pos), переданные в data_info. Если в индексе не было данного ключа, он создается и для него записывается переданное значение data_info, если был, хранимое в базе значение data_info заменяется на новое, переданное в этот метод значение data_info.
|
|Процесс слияния состоит в объединении множеств пар (id, pos) старого и нового data_info. Способ реализации этого объединения зависит от конретного хранилища и в частности от метамодели данных в нем.
|
|Причины использования буфера байт в data_info вместо последовательности (пары id,pos) см. в документации для структуры ContextDataInfo.
|
|<<фабрика>> make () - не принимает параметры: вся конфигурация БД (в т.ч. db_root_dir) содержится внутри реализации этого интерфейса.
|
|Для интерфейсов IDBContextAdd и IDBContextSearch используется одна и таже конфигурация (метамодель) БД: интерфейс IDBContextAdd наполняет ее даннными, а IDBContextSearch использует ее только для чтения. Эта конфигурация отличается от конфигурации, используемой интерфейсами IDBCreate и IDBRead.
	    
	    stereotype 	"Interface"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"4500312E031C"
		    supplier   	"Logical View::storage::TestLibrary::DB::IDBOperations"
		    quidu      	"44BB65B90399"))
	    operations 	(list Operations
		(object Operation "add"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C6C50290_44D7264C0167*"
			    value      	(value Text 
|//#UC START# *44C0C6C50290_44D7264C0167*¤	if (!crput (this->curia (), key_info.word, -1, data_info.word_pos_info.buf, data_info.word_pos_info.buf_size, CR_DOVER)) {¤		LOG_E (("QDBM::QdbmDBContextAdd_i::execute: 'crput'. key_info.word: %s, error: %s", key_info.word, dperrmsg (dpecode)));¤		throw TestLibrary::DB::DBError ();¤	}	¤	//#UC END# *44C0C6C50290_44D7264C0167*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C6C50290_44E449B40030*"
			    value      	(value Text 
|//#UC START# *44C0C6C50290_44E449B40030*¤	//fprintf (f, "%s %u\n", key_info.word, data_info.word_pos_info.buf_size);¤	//fflush (f);¤¤	static const int action_in_one_trans = Core::ParamManager::instance ()->get_ulong ("-need_transaction", 0);¤¤	if (this->need_transaction ()) {¤		static unsigned long s_action_count_t = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤		if (0 == m_current_action%action_in_one_trans && m_current_action < s_action_count_t) {¤            if (0 != db_env ()->txn_begin (0, &m_db_transaction, 0)) {¤				LOG_E (("BDBCreateOIBT_i::create (): can't begin transaction"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤	Dbt key (key_info.word, strlen (key_info.word));¤	Dbt data (data_info.word_pos_info.buf, data_info.word_pos_info.buf_size);¤	try {¤		this->db ()->put (m_db_transaction, &key, &data, 0);¤	} catch (DbException &e) {¤		LOG_E (("BDBContextAddOIBT_i::add (): %s (errno = %d)", e.what (), e.get_errno ()));¤		throw TestLibrary::DB::DBError ();¤	} catch (std::exception &e) {¤		LOG_E (("BDBContextAddOIBT_i::add (): %s", e.what ()));¤		throw TestLibrary::DB::DBError ();¤	}¤¤	if (this->need_transaction ()) {¤		m_current_action++;¤		if (0 == m_current_action%action_in_one_trans) {¤            m_db_transaction->commit (0);¤		}¤	}¤¤	if (this->need_transaction ()) {¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤¤	static unsigned long s_action_count = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤	s_action_count--;¤	if (0 == s_action_count) {¤		this->db ()->sync (0);¤	}	¤	//#UC END# *44C0C6C50290_44E449B40030*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C6C50290_44E44D400050*"
			    value      	(value Text 
|//#UC START# *44C0C6C50290_44E44D400050*¤	if (data_info.word_pos_info.buf_size < WSF_BLOCK_SIZE) {¤		this->write_small_data (key_info.word, strlen (key_info.word), data_info.word_pos_info);¤	} else {¤		this->write_large_data (key_info.word, strlen (key_info.word), data_info.word_pos_info);¤	}¤¤	static unsigned long s_action_count = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤	s_action_count--;¤	if (0 == s_action_count) {¤		this->db_key ()->sync (0);¤		this->db_data ()->sync (0);¤	}	¤	//#UC END# *44C0C6C50290_44E44D400050*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C6C50290_44E44F0D0159*"
			    value      	(value Text 
|//#UC START# *44C0C6C50290_44E44F0D0159*¤	static const int action_in_one_trans = Core::ParamManager::instance ()->get_ulong ("-need_transaction", 0);¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		static unsigned long s_action_count_t = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤		if (0 == m_current_action%action_in_one_trans && m_current_action < s_action_count_t) {¤            if (0 != db_env ()->txn_begin (0, &m_db_transaction, 0)) {¤				LOG_E (("BDBCreateOIH_i::create: can't begin transaction"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤	try {¤		Dbt key (key_info.word, strlen (key_info.word));¤		Dbt data (data_info.word_pos_info.buf, data_info.word_pos_info.buf_size);¤		int ret;¤		if (1 < action_in_one_trans) {¤			if (0 != this->db ()->put (m_db_transaction, &key, &data, 0)) {¤				LOG_E (("BDBContextAddOIH_i::add: deadlock detected! key = %s ", key_info.word));¤				throw TestLibrary::DB::DBError ();¤			}¤		} else {¤            while (0 != (ret = this->db ()->put (0, &key, &data, 0))) {¤				if (DB_LOCK_DEADLOCK == ret) {¤					LOG_W (("BDBContextAddOIH_i::add: deadlock detected! try write again, key = %s ", key_info.word));¤				} else {¤					throw TestLibrary::DB::DBError ();¤				}¤			}¤		}¤	} catch (DbException &e) {¤		LOG_E (("BDBContextAddOIH_i::add: %s (errno = %d)", e.what (), e.get_errno ()));¤		throw TestLibrary::DB::DBError ();¤		// Error handling code goes here¤	} catch (std::exception &e) {¤		LOG_E (("BDBContextAddOIH_i::add: %s", e.what ()));¤		throw TestLibrary::DB::DBError ();¤		// Error handling code goes here¤	}¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		m_current_action++;¤		if (0 == m_current_action%action_in_one_trans) {¤            m_db_transaction->commit (0);¤		}¤	}¤¤	if (this->need_transaction ()) {¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44C0C6C50290_44E44F0D0159*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C6C50290_44E4334202EE*"
			    value      	(value Text 
|//#UC START# *44C0C6C50290_44E4334202EE*¤	try {¤		this->trans ()->begin ();¤		ContextIndex* p = new ContextIndex (this->db ());¤		p->setWord (key_info.word);¤		p->setBuffer ((const unsigned char*)data_info.word_pos_info.buf, data_info.word_pos_info.buf_size);¤		p->store ();¤		p->release ();¤		this->trans ()->commit ();¤	} catch (eyedb::Exception& e) {¤		this->trans ()->rollback ();¤		LOG_E (("EyeDBContextAdd_i::add: '%s'", e.getDesc ()));¤		throw TestLibrary::DB::DBError ();¤	}¤	//#UC END# *44C0C6C50290_44E4334202EE*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C6C50290_4507EBDA034B*"
			    value      	(value Text 
|//#UC START# *44C0C6C50290_4507EBDA034B*¤	char key[32];¤	size_t len= ::strlen(key_info.word);¤	if(len > 31){¤		memcpy(key, key_info.word, 32);¤	}else{¤		memcpy(key, key_info.word, len + 1);¤	}¤	Stream *pCreated = CloneIndex::index()->OpenN (key, 0, 1);¤	if(pCreated){¤		pCreated->Write (data_info.word_pos_info.buf, long (data_info.word_pos_info.buf_size));¤		CloneIndex::index()->Close (pCreated);¤	}else¤		throw TestLibrary::DB::DBError ();¤	//#UC END# *44C0C6C50290_4507EBDA034B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C6C50290_471F063F039E*"
			    value      	(value Text 
|//#UC START# *44C0C6C50290_471F063F039E*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44C0C6C50290_471F063F039E*
			    )))
		    quid       	"44C0C6C50290"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in key_info"
			    quid       	"44C0C7F6032C"
			    type       	"ContextKeyInfo"
			    quidu      	"44C0C6DF0196")
			(object Parameter "in data_info"
			    quid       	"44C0C7F6036B"
			    type       	"ContextDataInfo"
			    quidu      	"44C0C711034B"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44C0C7FC036B"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "in root_dir"
			    quid       	"44D9CBBF034B"
			    type       	"IString"
			    quidu      	"431841610361")
			(object Parameter "need_sequential"
			    quid       	"4500161C02BF"
			    type       	"boolean"
			    quidu      	"3DBFFE100240")
			(object Parameter "need_transaction"
			    quid       	"44FD7C1203D8"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "ContextKeyInfo"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"44C0C6DF0196"
	    documentation 	"Структура-описатель ключа контекстного поиска. Содержит форму слова в виде C-строки, оканчивающейся 0-символом."
	    stereotype 	"Struct"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "word"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44C0C74F02CE"
		    type       	"string"
		    quidu      	"3DBFFE240068"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "ContextDataInfo"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"44C0C711034B"
	    documentation 	"Структура-описатель данных контекстного поиска. Для упрощения обмена данными и ускорения теста в целом эти данные передаются как буфер байтов (как это принято в gkdb), длины кратной 2*sizeof (long), в котором находятся упорядоченные пары (id-документа, pos-слова), кратко называемые как (пары id,pos)."
	    stereotype 	"Struct"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "word_pos_info"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44C0C78C03A9"
		    type       	"BufInfo"
		    quidu      	"44BB663300DA"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "IDBContextSearch"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44D7268D0203_BASE_INIT*"
		    value      	"//#UC START# *44C0C89F01F4_44C0C8EC002E_44D7268D0203_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CuriaTest (root_dir, need_sequential, need_transaction)¤//#UC END# *44C0C89F01F4_44C0C8EC002E_44D7268D0203_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44D7268D0203_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C89F01F4_44C0C8EC002E_44D7268D0203_BODY*¤	this->open_db (CR_OWRITER | CR_OCREAT, this->get_db_root_dir ());//CR_OREADER¤	//#UC END# *44C0C89F01F4_44C0C8EC002E_44D7268D0203_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44E44981035D_BASE_INIT*"
		    value      	"//#UC START# *44C0C89F01F4_44C0C8EC002E_44E44981035D_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIBT (root_dir, need_sequential, need_transaction)¤, m_current_action (0)¤, m_db_transaction (0)¤//#UC END# *44C0C89F01F4_44C0C8EC002E_44E44981035D_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44E44981035D_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C89F01F4_44C0C8EC002E_44E44981035D_BODY*¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤	try {¤		bool need_rdonly = Core::ParamManager::instance ()->get_long ("-need_rdonly", 0) ;¤		u_int32_t flags = (this->need_transaction ()) ? DB_CREATE|DB_THREAD|DB_AUTO_COMMIT: ((need_rdonly) ? DB_RDONLY: DB_CREATE);¤		base->open (0, full_name.c_str (), 0, DB_BTREE, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBContextSearchOIBT_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBContextSearchOIBT_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤	//#UC END# *44C0C89F01F4_44C0C8EC002E_44E44981035D_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44E44D21010B_BASE_INIT*"
		    value      	"//#UC START# *44C0C89F01F4_44C0C8EC002E_44E44D21010B_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainWSF (root_dir, need_sequential, need_transaction)¤//#UC END# *44C0C89F01F4_44C0C8EC002E_44E44D21010B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44E44D21010B_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C89F01F4_44C0C8EC002E_44E44D21010B_BODY*¤	u_int32_t open_flags = (this->need_transaction ()) ? DB_CREATE|DB_THREAD|DB_AUTO_COMMIT: DB_CREATE|DB_THREAD;¤¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_KEY_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_KEY_FILE_NAME_ON_UNIX;¤#endif¤¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤	try {¤		base->open (0, full_name.c_str (), 0, DB_BTREE, open_flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBReadWSF_i::ctor: %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBReadWSF_i::ctor: can't open database, errmsg = %s", e.what ()));¤	}¤	this->db_key () = base._retn ();¤¤	///////////////////////////////////////////¤	full_name = this->get_db_root_dir ();¤#ifdef WIN32¤	full_name += BDB_STREAM_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_STREAM_FILE_NAME_ON_UNIX;¤#endif¤¤	base = new Db (db_env (), 0);¤	try {¤		base->open (NULL, full_name.c_str (), 0, DB_QUEUE, open_flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBReadWSF_i::ctor: %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBReadWSF_i::ctor: can't open database, errmsg = %s", e.what ()));¤	}¤	this->db_data () = base._retn ();¤	//#UC END# *44C0C89F01F4_44C0C8EC002E_44E44D21010B_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44E44F3B0224_BASE_INIT*"
		    value      	"//#UC START# *44C0C89F01F4_44C0C8EC002E_44E44F3B0224_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIH (root_dir, need_sequential, need_transaction)¤, m_current_action (0)¤, m_db_transaction (0)¤//#UC END# *44C0C89F01F4_44C0C8EC002E_44E44F3B0224_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44E44F3B0224_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C89F01F4_44C0C8EC002E_44E44F3B0224_BODY*¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤	try {¤		u_int32_t flags = (this->need_transaction ()) ? DB_AUTO_COMMIT|DB_CREATE|DB_THREAD: DB_CREATE|DB_THREAD;¤		base->open (0, full_name.c_str (), 0, DB_HASH, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBContextSearchOIH_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBContextSearchOIH_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤	//#UC END# *44C0C89F01F4_44C0C8EC002E_44E44F3B0224_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44E4336C0242_BASE_INIT*"
		    value      	"//#UC START# *44C0C89F01F4_44C0C8EC002E_44E4336C0242_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, EyeDBBase (root_dir, need_sequential, need_transaction, eyedb::Database::DBRWLocal)¤//#UC END# *44C0C89F01F4_44C0C8EC002E_44E4336C0242_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_44E4336C0242_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C89F01F4_44C0C8EC002E_44E4336C0242_BODY*¤	//#UC END# *44C0C89F01F4_44C0C8EC002E_44E4336C0242_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_4507EBF603C8_BASE_INIT*"
		    value      	"//#UC START# *44C0C89F01F4_44C0C8EC002E_4507EBF603C8_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CloneIndex (root_dir, need_sequential, need_transaction)¤//#UC END# *44C0C89F01F4_44C0C8EC002E_4507EBF603C8_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_4507EBF603C8_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C89F01F4_44C0C8EC002E_4507EBF603C8_BODY*¤	//#UC END# *44C0C89F01F4_44C0C8EC002E_4507EBF603C8_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_471F066B031A_BASE_INIT*"
		    value      	"//#UC START# *44C0C89F01F4_44C0C8EC002E_471F066B031A_BASE_INIT*¤//#UC END# *44C0C89F01F4_44C0C8EC002E_471F066B031A_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*44C0C89F01F4_44C0C8EC002E_471F066B031A_BODY*"
		    value      	(value Text 
|//#UC START# *44C0C89F01F4_44C0C8EC002E_471F066B031A_BODY*¤	//#UC END# *44C0C89F01F4_44C0C8EC002E_471F066B031A_BODY*
		    )))
	    quid       	"44C0C89F01F4"
	    documentation 	
|Предназначен для иммитации контекстного поиска.
|
|<<метод>> search () читает из базы данные (пары id,pos) для данного значения ключа. Если в базе нет данных, устанавливается пустой буфер нулевого размера.
|
|Причины использования буфера байт в data_info вместо последовательности (пары id,pos) см. в документации для структуры ContextDataInfo.
	    
	    stereotype 	"Interface"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"44C0C8F403B9"
		    supplier   	"Logical View::storage::TestLibrary::DB::IDBOperations"
		    quidu      	"44BB65B90399"))
	    operations 	(list Operations
		(object Operation "search"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"GetRaises"
			    value      	"")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C8BD030D_44D7268D0203*"
			    value      	(value Text 
|//#UC START# *44C0C8BD030D_44D7268D0203*¤	int bsize = 0;¤	char* val = crget (this->curia (), key_info.word, -1, 0, -1, &bsize);¤	if (val == 0) {¤		data_info.word_pos_info.buf_size = 0;¤		data_info.word_pos_info.buf [0] = '\0';¤	} else {¤		data_info.word_pos_info.buf_size = (unsigned long) bsize;¤		memcpy (data_info.word_pos_info.buf, val, data_info.word_pos_info.buf_size);¤		free(val);¤	}¤	//#UC END# *44C0C8BD030D_44D7268D0203*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C8BD030D_44E44981035D*"
			    value      	(value Text 
|//#UC START# *44C0C8BD030D_44E44981035D*¤	static const int action_in_one_trans = Core::ParamManager::instance ()->get_ulong ("-need_transaction", 0);¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		static unsigned long s_action_count_t = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤		if (0 == m_current_action%action_in_one_trans && m_current_action < s_action_count_t) {¤            if (0 != db_env ()->txn_begin (0, &m_db_transaction, 0)) {¤				LOG_E (("BDBCreateOIBT_i::create (): can't begin transaction"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤	Dbt key (key_info.word, strlen (key_info.word));¤	Dbt data;¤	memset(&data, 0, sizeof(data));¤	data.set_flags (DB_DBT_USERMEM);¤	data.set_data (data_info.word_pos_info.buf);¤	data.set_ulen (data_info.word_pos_info.max_buf_size);¤	data_info.word_pos_info.buf_size = 0;¤	try {¤		if (1 < action_in_one_trans) {¤            this->db ()->get (m_db_transaction, &key, &data, 0);¤		} else {¤            if (0 != this->db ()->get (0, &key, &data, 0)) {¤				return;¤			}¤		}¤		data_info.word_pos_info.buf_size = data.get_size ();¤	} catch (DbException& e) {¤		LOG_E (("BDBContextSearchOIBT_i::search (): %s (errno = %d)", e.what (), e.get_errno ()));¤		throw TestLibrary::DB::DBError ();¤	} catch (std::exception& e) {¤		LOG_E (("BDBContextSearchOIBT_i::search (): %s", e.what ()));¤		throw TestLibrary::DB::DBError ();¤	}¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		m_current_action++;¤		if (0 == m_current_action%action_in_one_trans) {¤            m_db_transaction->commit (0);¤		}¤	}¤¤	if (this->need_transaction ()) {¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44C0C8BD030D_44E44981035D*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C8BD030D_44E44D21010B*"
			    value      	(value Text 
|//#UC START# *44C0C8BD030D_44E44D21010B*¤	this->read_i (key_info.word, strlen (key_info.word), data_info.word_pos_info);¤	//#UC END# *44C0C8BD030D_44E44D21010B*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C8BD030D_44E44F3B0224*"
			    value      	(value Text 
|//#UC START# *44C0C8BD030D_44E44F3B0224*¤	static const int action_in_one_trans = Core::ParamManager::instance ()->get_ulong ("-need_transaction", 0);¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		static unsigned long s_action_count_t = Core::ParamManager::instance ()->get_ulong ("-action_count", 100000);¤		if (0 == m_current_action%action_in_one_trans && m_current_action < s_action_count_t) {¤            if (0 != db_env ()->txn_begin (0, &m_db_transaction, 0)) {¤				LOG_E (("BDBCreateOIBT_i::create (): can't begin transaction"));¤				throw TestLibrary::DB::DBError ();¤			}¤		}¤	}¤¤	Dbt key (key_info.word, strlen (key_info.word));¤¤	Dbt data;¤	memset(&data, 0, sizeof(data));¤	data.set_flags (DB_DBT_MALLOC);¤¤	if (1 < action_in_one_trans) {¤		if (0 != this->db ()->get (m_db_transaction, &key, &data, 0)) {¤			LOG_E (("BDBContextSearchOIH_i::search: deadlock detected!"));¤			throw TestLibrary::DB::DBError ();¤		}¤	} else {¤        int ret;¤		while (0 != (ret = this->db ()->get (0, &key, &data, 0))) {¤			if (DB_LOCK_DEADLOCK == ret) {¤				LOG_W (("BDBContextSearchOIH_i::search: deadlock detected! try again"));¤			} else {¤				data_info.word_pos_info.buf_size = 0;¤				return;¤			}¤		}¤	}¤¤	if (1 < action_in_one_trans && this->need_transaction ()) {¤		m_current_action++;¤		if (0 == m_current_action%action_in_one_trans) {¤            m_db_transaction->commit (0);¤		}¤	}¤¤	if (data_info.word_pos_info.max_buf_size < data.get_size ()) {¤		LOG_E (("BDBContextSearchOIH_i::search: read data exceeds data_info.word_pos_info.max_buf_size"));¤		throw TestLibrary::DB::DBError ();¤	}¤¤	data_info.word_pos_info.buf_size = data.get_size ();¤	memcpy (data_info.word_pos_info.buf, data.get_data (), data_info.word_pos_info.buf_size);¤¤	if (0 != data.get_data ()) {¤		free (data.get_data ());¤	}¤¤	if (this->need_transaction ()) {¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤	}¤	//#UC END# *44C0C8BD030D_44E44F3B0224*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C8BD030D_44E4336C0242*"
			    value      	(value Text 
|//#UC START# *44C0C8BD030D_44E4336C0242*¤	try {¤		this->trans ()->begin ();¤		eyedb::OQL query (this->db (), "select ContextIndex.word = %s", key_info.word);¤		eyedb::ObjectArray obj_arr;¤		query.execute (obj_arr);¤		const int obj_count = obj_arr.getCount ();¤		if (obj_count == 0) {¤			LOG_E (("EyeDBContextSearch_i::search: object %s not found", key_info.word));¤			throw TestLibrary::DB::DBError ();¤		} else if (obj_count > 1) {¤			LOG_W (("EyeDBContextSearch_i::search: object %s were found %d objects", key_info.word, obj_count));¤		}¤		const ContextIndex* p = (const ContextIndex*)obj_arr [0];¤		GDS_ASSERT (p);¤		unsigned int buf_len = 0;¤		const unsigned char* pbuf = p->getBuffer (&buf_len);¤		memcpy (data_info.word_pos_info.buf, pbuf, buf_len);¤		delete [] pbuf;¤		data_info.word_pos_info.buf_size = buf_len;¤		for (int i = 0; i < obj_count; ++i) {¤			InvertedIndex* temp = (InvertedIndex*)obj_arr [i];¤			temp->release ();¤		}¤		this->trans ()->commit ();¤	} catch (eyedb::Exception& e) {¤		this->trans ()->rollback ();¤		LOG_E (("EyeDBContextSearch_i::search: '%s'", e.getDesc ()));¤		throw TestLibrary::DB::DBError ();¤	}¤	//#UC END# *44C0C8BD030D_44E4336C0242*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C8BD030D_4507EBF603C8*"
			    value      	(value Text 
|//#UC START# *44C0C8BD030D_4507EBF603C8*¤	char key[32];¤	size_t len= ::strlen(key_info.word);¤	if(len > 31){¤		memcpy(key, key_info.word, 32);¤	}else{¤		memcpy(key, key_info.word, len + 1);¤	}¤	Stream *pReaded = CloneIndex::index()->OpenN (key, 0);¤	if(pReaded){¤		data_info.word_pos_info.buf_size= long(pReaded->Length());¤		if(data_info.word_pos_info.max_buf_size < data_info.word_pos_info.buf_size)¤			data_info.word_pos_info.buf_size= data_info.word_pos_info.max_buf_size;¤		pReaded->Read (data_info.word_pos_info.buf, data_info.word_pos_info.buf_size);¤		CloneIndex::index()->Close (pReaded);¤	}//else¤	//	throw TestLibrary::DB::DBError ();¤	//#UC END# *44C0C8BD030D_4507EBF603C8*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*44C0C8BD030D_471F066B031A*"
			    value      	(value Text 
|//#UC START# *44C0C8BD030D_471F066B031A*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *44C0C8BD030D_471F066B031A*
			    )))
		    quid       	"44C0C8BD030D"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in key_info"
			    quid       	"44C0C8E401F4"
			    type       	"ContextKeyInfo"
			    quidu      	"44C0C6DF0196")
			(object Parameter "inout data_info"
			    quid       	"44C0C8E40222"
			    type       	"ContextDataInfo"
			    quidu      	"44C0C711034B"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"44C0C8EC002E"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "in root_dir"
			    quid       	"44D9CBCB0203"
			    type       	"IString"
			    quidu      	"431841610361")
			(object Parameter "need_sequential"
			    quid       	"4500344E02BF"
			    type       	"boolean"
			    quidu      	"3DBFFE100240")
			(object Parameter "need_transaction"
			    quid       	"44FD7C1B02FD"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "IDBUpdateRW"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4524BFF4033C_4524C0200232_4526478B029F_BASE_INIT*"
		    value      	"//#UC START# *4524BFF4033C_4524C0200232_4526478B029F_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CuriaTest (root_dir, need_sequential, need_transaction)¤//#UC END# *4524BFF4033C_4524C0200232_4526478B029F_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4524BFF4033C_4524C0200232_4526478B029F_BODY*"
		    value      	(value Text 
|//#UC START# *4524BFF4033C_4524C0200232_4526478B029F_BODY*¤	this->open_db (CR_OWRITER | CR_OCREAT, this->get_db_root_dir ());¤	//#UC END# *4524BFF4033C_4524C0200232_4526478B029F_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4524BFF4033C_4524C0200232_452A52E60058_BASE_INIT*"
		    value      	"//#UC START# *4524BFF4033C_4524C0200232_452A52E60058_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIBT (root_dir, need_sequential, need_transaction)¤//#UC END# *4524BFF4033C_4524C0200232_452A52E60058_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4524BFF4033C_4524C0200232_452A52E60058_BODY*"
		    value      	(value Text 
|//#UC START# *4524BFF4033C_4524C0200232_452A52E60058_BODY*¤	if (false == this->get_need_transaction ()) {¤		GDS_ASSERT_MSG (0, ("BDBUpdateRWOIBT_i::ctor: can't work without transaction, not implemented"));¤		throw TestLibrary::DB::DBError ();¤	}¤¤    std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤	try {¤		set_page_size (base.in ());¤		this->set_block_size (base.in ());¤¤		u_int32_t flags = DB_CREATE|DB_THREAD|DB_AUTO_COMMIT;¤		base->open (0, full_name.c_str (), 0, DB_BTREE, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBUpdateRWOIBT_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤		throw TestLibrary::DB::DBError ();¤	} catch(std::exception &e) {¤		LOG_E (("BDBUpdateRWOIBT_i::ctor (): can't open database, errmsg = %s", e.what ()));¤		throw TestLibrary::DB::DBError ();¤	}¤	this->db () = base._retn ();¤	//#UC END# *4524BFF4033C_4524C0200232_452A52E60058_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4524BFF4033C_4524C0200232_452CFDFD003E_BASE_INIT*"
		    value      	"//#UC START# *4524BFF4033C_4524C0200232_452CFDFD003E_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CloneIndex (root_dir, need_sequential, need_transaction)¤//#UC END# *4524BFF4033C_4524C0200232_452CFDFD003E_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4524BFF4033C_4524C0200232_452CFDFD003E_BODY*"
		    value      	(value Text 
|//#UC START# *4524BFF4033C_4524C0200232_452CFDFD003E_BODY*¤	//#UC END# *4524BFF4033C_4524C0200232_452CFDFD003E_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4524BFF4033C_4524C0200232_471DEA840206_BASE_INIT*"
		    value      	"//#UC START# *4524BFF4033C_4524C0200232_471DEA840206_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, LinterTestBase (root_dir, need_sequential, need_transaction)¤¤// *** LINTER: place your code here ***¤¤//#UC END# *4524BFF4033C_4524C0200232_471DEA840206_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*4524BFF4033C_4524C0200232_471DEA840206_BODY*"
		    value      	(value Text 
|//#UC START# *4524BFF4033C_4524C0200232_471DEA840206_BODY*¤¤	// *** LINTER: place your code here ***¤	// *** LINTER: you may or may not use class-helper LinterTestBase: see comments in the LinterTestBase.cpp file ***¤¤	//#UC END# *4524BFF4033C_4524C0200232_471DEA840206_BODY*
		    )))
	    quid       	"4524BFF4033C"
	    documentation 	"Предназначен для мультипоточного транзакционного теста с длинными транзакциями."
	    stereotype 	"Interface"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"4524C00402FD"
		    supplier   	"Logical View::storage::TestLibrary::DB::IDBOperations"
		    quidu      	"44BB65B90399"))
	    operations 	(list Operations
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"4524C0200232"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "in root_dir"
			    quid       	"4524C025031C"
			    type       	"IString"
			    quidu      	"431841610361")
			(object Parameter "need_sequential"
			    quid       	"4524C025036B"
			    type       	"boolean"
			    quidu      	"3DBFFE100240")
			(object Parameter "need_transaction"
			    quid       	"4524C02503B9"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "access_n"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4526257C00CB_4526478B029F*"
			    value      	(value Text 
|//#UC START# *4526257C00CB_4526478B029F*¤	GUARD (m_mtx);¤	unsigned int siz = id_buf_info_seq.size ();¤	for (unsigned int i = 0 ; i < siz; ++i) {¤		TestLibrary::DB::IdBufInfo& cur_id_buf_info = id_buf_info_seq.operator [] (i);¤		switch (cur_id_buf_info.operation) {¤			case TestLibrary::DB::READ:¤				this->read (cur_id_buf_info.id_info, cur_id_buf_info.buf_info);¤				break;¤			case TestLibrary::DB::WRITE:¤				this->write (cur_id_buf_info.id_info, cur_id_buf_info.buf_info);¤				break;¤		}¤	}¤	//#UC END# *4526257C00CB_4526478B029F*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4526257C00CB_452A52E60058*"
			    value      	(value Text 
|//#UC START# *4526257C00CB_452A52E60058*¤	for (;;) {¤		DbTxn* db_transaction = 0;¤		if (0 != db_env ()->txn_begin (0, &db_transaction, 0)) {¤			LOG_E (("BDBUpdateRWOIBT_i::access_n: can't begin transaction"));¤			throw TestLibrary::DB::DBError ();¤		}¤	¤        unsigned long buf_info_sec_size = id_buf_info_seq.size ();¤		try {¤	 		for (unsigned n = 0; n < buf_info_sec_size; n++) {¤				TestLibrary::DB::IdBufInfo& ibi = id_buf_info_seq.operator [] (n);¤				if (TestLibrary::DB::WRITE == ibi.operation) {¤					this->put_data (db_transaction, ibi.id_info, ibi.buf_info);¤				} else if (TestLibrary::DB::READ == ibi.operation) {¤					this->get_data (db_transaction, ibi.id_info, ibi.buf_info);¤				} else {¤					GDS_ASSERT_MSG (0, ("BDBUpdateRWOIBT_i::ctor: can't work without transaction, not implemented"));¤					throw TestLibrary::DB::DBError ();¤				}¤			}¤		} catch (DbException& e) {¤			if (DB_LOCK_DEADLOCK != e.get_errno ()) {¤                LOG_E (("BDBUpdateRWOIBT_i::access_n: %s (errno = %d)", e.what (), e.get_errno ()));¤			}¤			db_transaction->abort ();¤			continue;¤		} catch (std::exception& e) {¤			LOG_E (("BDBUpdateRWOIBT_i::access_n: %s", e.what ()));¤			db_transaction->abort ();¤			continue;¤		}¤¤        db_transaction->commit (0);¤		db_env ()->txn_checkpoint (30*1024, 0, 0);¤		break;¤	}¤	//#UC END# *4526257C00CB_452A52E60058*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4526257C00CB_452CFDFD003E*"
			    value      	(value Text 
|//#UC START# *4526257C00CB_452CFDFD003E*¤	unsigned long buf_info_sec_size = id_buf_info_seq.size ();¤	if(buf_info_sec_size > 1 && CloneIndex::pLock){¤		Core::Mutex *pLockTmp= CloneIndex::pLock;¤		CloneIndex::pLock= 0;¤		{¤			GUARD ((*pLockTmp));¤			CloneIndex::index()->streams->StartTransaction();¤			for (unsigned n = 0; n < buf_info_sec_size; n++) {¤				TestLibrary::DB::IdBufInfo& ibi = id_buf_info_seq.operator [] (n);¤				if (TestLibrary::DB::WRITE == ibi.operation) {¤					CloneIndex::update_local(ibi.id_info, ibi.buf_info);¤				} else if (TestLibrary::DB::READ == ibi.operation) {¤					CloneIndex::read_local(ibi.id_info, ibi.buf_info);¤				} else {¤					throw TestLibrary::DB::DBError ();¤				}¤			}¤			CloneIndex::index()->streams->EndTransaction();¤		}¤		CloneIndex::pLock= pLockTmp;¤	}else for (unsigned n = 0; n < buf_info_sec_size; n++) {¤		TestLibrary::DB::IdBufInfo& ibi = id_buf_info_seq.operator [] (n);¤		if (TestLibrary::DB::WRITE == ibi.operation) {¤			CloneIndex::update_local(ibi.id_info, ibi.buf_info);¤		} else if (TestLibrary::DB::READ == ibi.operation) {¤			CloneIndex::read_local(ibi.id_info, ibi.buf_info);¤		} else {¤			throw TestLibrary::DB::DBError ();¤		}¤	}¤	//#UC END# *4526257C00CB_452CFDFD003E*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*4526257C00CB_471DEA840206*"
			    value      	(value Text 
|//#UC START# *4526257C00CB_471DEA840206*¤¤	// *** LINTER: place your code here ***¤¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *4526257C00CB_471DEA840206*
			    )))
		    quid       	"4526257C00CB"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "inout id_buf_info_seq"
			    quid       	"45262586001F"
			    type       	"IdBufInfoSeq"
			    quidu      	"4526242B0280"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "IdBufInfo"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"452623B200CB"
	    stereotype 	"Struct"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "operation"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452645CC03C8"
		    type       	"OperationKind"
		    quidu      	"452645FA0203"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "IdBufInfoSeq"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"fctr.cpp:*4526242B0280_MAKE_NOCOPY_IMPL*"
		    value      	(value Text 
|//#UC START# *4526242B0280_MAKE_NOCOPY_IMPL*¤			assert (0);¤			return 0;¤		//#UC END# *4526242B0280_MAKE_NOCOPY_IMPL*
		    )))
	    quid       	"4526242B0280"
	    stereotype 	"Vector"
	    language   	"MDA Generator")
	(object Class "OperationKind"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"452645FA0203"
	    stereotype 	"Enum"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "READ"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452646330186"
		    type       	"short"
		    quidu      	"3DBFFD5402AE"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "WRITE"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"45264649006D"
		    type       	"short"
		    quidu      	"3DBFFD5402AE"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "IDBPartialRead"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A4E2D000F_452A4E5101B5_452D18A70123_BASE_INIT*"
		    value      	"//#UC START# *452A4E2D000F_452A4E5101B5_452D18A70123_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIBT (root_dir, need_sequential, need_transaction)¤//#UC END# *452A4E2D000F_452A4E5101B5_452D18A70123_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A4E2D000F_452A4E5101B5_452D18A70123_BODY*"
		    value      	(value Text 
|//#UC START# *452A4E2D000F_452A4E5101B5_452D18A70123_BODY*¤	std::string full_name (this->get_db_root_dir ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤¤	try {¤		bool need_rdonly = Core::ParamManager::instance ()->get_long ("-need_rdonly", 0) ;¤		u_int32_t flags = (this->need_transaction ()) ? DB_AUTO_COMMIT|DB_CREATE|DB_THREAD: ((need_rdonly) ? DB_RDONLY: DB_CREATE);¤		base->open (0, full_name.c_str (), 0, DB_BTREE, flags, 0);¤¤		//this->set_block_size (base.ptr ());¤		m_data_block_size = 1024*1024*1024;¤	} catch(DbException &e) {¤		LOG_E (("BDBReadOIBT_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤	} catch(std::exception &e) {¤		LOG_E (("BDBReadOIBT_i::ctor (): can't open database, errmsg = %s", e.what ()));¤	}¤	this->db () = base._retn ();¤	//#UC END# *452A4E2D000F_452A4E5101B5_452D18A70123_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A4E2D000F_452A4E5101B5_452F7633008C_BASE_INIT*"
		    value      	"//#UC START# *452A4E2D000F_452A4E5101B5_452F7633008C_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CloneIndex (root_dir, need_sequential, need_transaction)¤//#UC END# *452A4E2D000F_452A4E5101B5_452F7633008C_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A4E2D000F_452A4E5101B5_452F7633008C_BODY*"
		    value      	(value Text 
|//#UC START# *452A4E2D000F_452A4E5101B5_452F7633008C_BODY*¤	//#UC END# *452A4E2D000F_452A4E5101B5_452F7633008C_BODY*
		    )))
	    quid       	"452A4E2D000F"
	    documentation 	"метод read ведет себя аналогично дисковой операции read, кол-во реально считанных байт устанавливается в поле .buf_size параметра buf_info. Единственное отличие в поведении от дисковой операции read состоит в том, что перед чтением происходит как бы операция lseek на смещение от начала данных, заданное в поле .offset параметра part_info."
	    stereotype 	"Interface"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"452E57DD0203"
		    supplier   	"Logical View::storage::TestLibrary::DB::IDBOperations"
		    quidu      	"44BB65B90399"))
	    operations 	(list Operations
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452A4E5101B5"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "in root_dir"
			    quid       	"452A4E540186"
			    type       	"IString"
			    quidu      	"431841610361")
			(object Parameter "need_sequential"
			    quid       	"452A4E5401D4"
			    type       	"boolean"
			    quidu      	"3DBFFE100240")
			(object Parameter "need_transaction"
			    quid       	"452A4E540232"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "read"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*452A4E8F0157_452D18A70123*"
			    value      	(value Text 
|//#UC START# *452A4E8F0157_452D18A70123*¤	GDS_ASSERT (part_info.size < buf_info.max_buf_size);¤¤	unsigned long read_before = part_info.offset_db+part_info.size ;¤	unsigned long bytes_read = 0;¤	unsigned long offset_in_block = 0;¤	buf_info.buf_size = 0;¤	for (unsigned long pos = part_info.offset_db; pos < read_before; pos += bytes_read) {¤		Key k (id_info.id, pos/m_data_block_size);¤		Dbt key (&k, sizeof (Key));¤¤		offset_in_block = pos-pos/m_data_block_size*m_data_block_size;¤¤		bytes_read = (static_cast<long>(offset_in_block+read_before-pos) < m_data_block_size) ? read_before-pos : m_data_block_size-offset_in_block;¤		Dbt data;¤		memset(&data, 0, sizeof(data));¤		data.set_flags (DB_DBT_USERMEM|DB_DBT_PARTIAL);¤		data.set_data (buf_info.buf+part_info.offset_buf+(pos-part_info.offset_db));¤		data.set_ulen (buf_info.max_buf_size-(pos-part_info.offset_db));¤		data.set_doff (offset_in_block);¤		data.set_dlen (bytes_read);¤		¤		GDS_ASSERT (0 == this->db ()->get (0, &key, &data, 0));¤		buf_info.buf_size += data.get_size ();¤¤		if (data.get_size () != data.get_dlen ()) {¤			break;¤		}¤	}¤	//#UC END# *452A4E8F0157_452D18A70123*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*452A4E8F0157_452F7633008C*"
			    value      	(value Text 
|//#UC START# *452A4E8F0157_452F7633008C*¤	GDS_ASSERT (part_info.offset_buf == 0);¤	if(CloneIndex::pLock){¤		GUARD ((*CloneIndex::pLock));¤		Stream *pReaded = CloneIndex::index()->OpenN (&id_info.id, 0);¤		if(pReaded){¤			if(long (part_info.offset_db) >= pReaded->Length()) {¤				buf_info.buf_size = 0; // 0 bytes to read¤				CloneIndex::index()->Close (pReaded);¤				return;¤			}¤			if(pReaded->Seek(long (part_info.offset_db)) != long (part_info.offset_db)) {¤				LOG_E (("CloneDBPartialRead_i::read (mutex): bad part_info.offset_db for seek"));¤				throw TestLibrary::DB::DBError ();¤			}¤			buf_info.buf_size = pReaded->Read (buf_info.buf, part_info.size);¤			CloneIndex::index()->Close (pReaded);¤		}else {¤			LOG_E (("CloneDBPartialRead_i::read (mutex): Stream* == 0"));¤			throw TestLibrary::DB::DBError ();¤		}¤	}else{¤		Stream *pReaded = CloneIndex::index()->OpenN (&id_info.id, 0);¤		if(pReaded){¤			if(long (part_info.offset_db) >= pReaded->Length()) {¤				buf_info.buf_size = 0; // 0 bytes to read¤				CloneIndex::index()->Close (pReaded);¤				return;¤			}¤			if(pReaded->Seek(long (part_info.offset_db)) != long (part_info.offset_db)) {¤				LOG_E (("CloneDBPartialRead_i::read (no mutex): bad part_info.offset_db for seek"));¤				throw TestLibrary::DB::DBError ();¤			}¤			buf_info.buf_size = pReaded->Read (buf_info.buf, part_info.size);¤			CloneIndex::index()->Close (pReaded);¤		}else {¤			LOG_E (("CloneDBPartialRead_i::read (no mutex): Stream* == 0"));¤			throw TestLibrary::DB::DBError ();¤		}¤	}¤	//#UC END# *452A4E8F0157_452F7633008C*
			    )))
		    quid       	"452A4E8F0157"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in id_info"
			    quid       	"452A4EED01A5"
			    type       	"IdInfo"
			    quidu      	"44BB6D8000AB")
			(object Parameter "in part_info"
			    quid       	"452A4EED0203"
			    type       	"PartInfo"
			    quidu      	"452A4EFA01C5")
			(object Parameter "inout buf_info"
			    quid       	"452A4EED0261"
			    type       	"BufInfo"
			    quidu      	"44BB663300DA"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "PartInfo"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false"))
	    quid       	"452A4EFA01C5"
	    stereotype 	"Struct"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "offset_buf"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452A4F12004E"
		    type       	"unsigned long"
		    quidu      	"3DBFFDE101CA"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "size"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452A4F2500FA"
		    type       	"unsigned long"
		    quidu      	"3DBFFDE101CA"
		    exportControl 	"Public"
		    Containment 	"By Value")
		(object ClassAttribute "offset_db"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"ValueInitialized"
			    value      	"true")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"45339655002E"
		    type       	"unsigned long"
		    quidu      	"3DBFFDE101CA"
		    exportControl 	"Public"
		    Containment 	"By Value"))
	    language   	"MDA Generator")
	(object Class "IDBPartialWrite"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A4F9902CE_452A4FC30261_452D180D03A4_BASE_INIT*"
		    value      	"//#UC START# *452A4F9902CE_452A4FC30261_452D180D03A4_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIBT (root_dir, need_sequential, need_transaction)¤//#UC END# *452A4F9902CE_452A4FC30261_452D180D03A4_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A4F9902CE_452A4FC30261_452D180D03A4_BODY*"
		    value      	(value Text 
|//#UC START# *452A4F9902CE_452A4FC30261_452D180D03A4_BODY*¤    std::string full_name (this->db_root_dir ()->get_data ());¤#ifdef WIN32¤	full_name += BDB_FILE_NAME_ON_WIN32;¤#else¤	full_name += BDB_FILE_NAME_ON_UNIX;¤#endif¤	::Core::Aptr<Db> base = new Db (db_env (), 0);¤	try {¤		set_page_size (base.in ());¤		//this->set_block_size (base);¤		m_data_block_size = 1024*1024*1024;¤		u_int32_t flags = (this->need_transaction ()) ? DB_CREATE|DB_THREAD|DB_AUTO_COMMIT: DB_CREATE;¤		base->open (0, full_name.c_str (), 0, DB_BTREE, flags, 0);¤	} catch(DbException &e) {¤		LOG_E (("BDBCreateOIBT_i::ctor (): %s (errno = %d)", e.what (), e.get_errno ()));¤		throw TestLibrary::DB::DBError ();¤	} catch(std::exception &e) {¤		LOG_E (("BDBCreateOIBT_i::ctor (): can't open database, errmsg = %s", e.what ()));¤		throw TestLibrary::DB::DBError ();¤	}¤	this->db () = base._retn ();¤	//#UC END# *452A4F9902CE_452A4FC30261_452D180D03A4_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A4F9902CE_452A4FC30261_452F764C035B_BASE_INIT*"
		    value      	"//#UC START# *452A4F9902CE_452A4FC30261_452F764C035B_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CloneIndex (root_dir, need_sequential, need_transaction)¤//#UC END# *452A4F9902CE_452A4FC30261_452F764C035B_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A4F9902CE_452A4FC30261_452F764C035B_BODY*"
		    value      	(value Text 
|//#UC START# *452A4F9902CE_452A4FC30261_452F764C035B_BODY*¤	//#UC END# *452A4F9902CE_452A4FC30261_452F764C035B_BODY*
		    )))
	    quid       	"452A4F9902CE"
	    documentation 	
|метод write ведет себя аналогично дисковой операции write, кол-во реально записанных байт всегда равно значению поля .size параметра part_info (иначе должно лететь исключение DBError). Единственное отличие в поведении от дисковой операции write состоит в том, что перед записью происходит как бы операция lseek на смещение от начала данных, заданное в поле .offset параметра part_info.
|
|В отличие от диковой операции write, если указатель offset вылезает за размер области данных, можно (и нужно) кидать исключение DBError. Т.е. укадатель offset должен быть всегда меньше либо равен текущему размеру области данных.
	    
	    stereotype 	"Interface"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"452E57F001A5"
		    supplier   	"Logical View::storage::TestLibrary::DB::IDBOperations"
		    quidu      	"44BB65B90399"))
	    operations 	(list Operations
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452A4FC30261"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "in root_dir"
			    quid       	"452A4FC603B9"
			    type       	"IString"
			    quidu      	"431841610361")
			(object Parameter "need_sequential"
			    quid       	"452A4FC7002E"
			    type       	"boolean"
			    quidu      	"3DBFFE100240")
			(object Parameter "need_transaction"
			    quid       	"452A4FC7009C"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "write"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*452A4FDD037A_452D180D03A4*"
			    value      	(value Text 
|//#UC START# *452A4FDD037A_452D180D03A4*¤	GDS_ASSERT (part_info.size <= (buf_info.buf_size-part_info.offset_buf));¤¤	unsigned long write_by = part_info.offset_db+part_info.size ;¤	unsigned long offset_in_block = 0;¤	unsigned long block_size = 0;¤	for (unsigned long pos = part_info.offset_db; pos < write_by; pos+=block_size) {¤		Key k (id_info.id, pos/m_data_block_size);¤		Dbt key (&k, sizeof (Key));¤¤		offset_in_block = pos-pos/m_data_block_size*m_data_block_size;¤		block_size = (static_cast<long>(offset_in_block+write_by-pos) < m_data_block_size) ? write_by-pos: m_data_block_size-offset_in_block;¤		Dbt data (buf_info.buf+part_info.offset_buf+pos-part_info.offset_db, block_size);¤		data.set_doff (offset_in_block);¤		data.set_dlen (block_size);¤		data.set_flags (DB_DBT_PARTIAL | data.get_flags ());¤¤		this->db ()->put (0, &key, &data, 0);¤	}¤	//#UC END# *452A4FDD037A_452D180D03A4*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*452A4FDD037A_452F764C035B*"
			    value      	(value Text 
|//#UC START# *452A4FDD037A_452F764C035B*¤	if(CloneIndex::pLock){¤		GUARD ((*CloneIndex::pLock));¤		Stream *pReaded = CloneIndex::index()->OpenN (&id_info.id, 0);¤		if(pReaded){¤			if((long (part_info.offset_db) > pReaded->Length()) && (part_info.size > 0)) { // strong >¤				LOG_E (("CloneDBPartialWrite_i::write (mutex): bad part_info.offset_db or .size"));¤				throw TestLibrary::DB::DBError ();¤			}¤			if(pReaded->Seek(long (part_info.offset_db)) != long (part_info.offset_db)) {¤				LOG_E (("CloneDBPartialWrite_i::write (mutex): bad part_info.offset_db for seek"));¤				throw TestLibrary::DB::DBError ();¤			}¤			pReaded->Write (buf_info.buf + part_info.offset_buf, part_info.size);¤			CloneIndex::index()->Close (pReaded);¤		}else {¤			LOG_E (("CloneDBPartialWrite_i::write (mutex): Stream* == 0"));¤			throw TestLibrary::DB::DBError ();¤		}¤	}else{¤		Stream *pReaded = CloneIndex::index()->OpenN (&id_info.id, 0);¤		if(pReaded){¤			if((long (part_info.offset_db) > pReaded->Length()) && (part_info.size > 0)) { // strong >¤				LOG_E (("CloneDBPartialWrite_i::write (no mutex): bad part_info.offset_db or .size"));¤				throw TestLibrary::DB::DBError ();¤			}¤			if(pReaded->Seek( long (part_info.offset_db)) != long (part_info.offset_db)) {¤				LOG_E (("CloneDBPartialWrite_i::write (no mutex): bad part_info.offset_db for seek"));¤				throw TestLibrary::DB::DBError ();¤			}¤			pReaded->Write (buf_info.buf + part_info.offset_buf, part_info.size);¤			CloneIndex::index()->Close (pReaded);¤		}else {¤			LOG_E (("CloneDBPartialWrite_i::write (no mutex): Stream* == 0"));¤			throw TestLibrary::DB::DBError ();¤		}¤	}¤	//#UC END# *452A4FDD037A_452F764C035B*
			    )))
		    quid       	"452A4FDD037A"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in id_info"
			    quid       	"452A4FE80148"
			    type       	"IdInfo"
			    quidu      	"44BB6D8000AB")
			(object Parameter "in part_info"
			    quid       	"452A4FE801A5"
			    type       	"PartInfo"
			    quidu      	"452A4EFA01C5")
			(object Parameter "in buf_info"
			    quid       	"452A4FF4033C"
			    type       	"BufInfo"
			    quidu      	"44BB663300DA"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Class "IDBPartialInsert"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"AbstarctOperation"
		    value      	"regular")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"IsNative"
		    value      	"false")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A50370232_452A506203A9_452D18D20096_BASE_INIT*"
		    value      	"//#UC START# *452A50370232_452A506203A9_452D18D20096_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, BDBMainOIBT (root_dir, need_sequential, need_transaction)¤//#UC END# *452A50370232_452A506203A9_452D18D20096_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A50370232_452A506203A9_452D18D20096_BODY*"
		    value      	(value Text 
|//#UC START# *452A50370232_452A506203A9_452D18D20096_BODY*¤	//#UC END# *452A50370232_452A506203A9_452D18D20096_BODY*
		    ))
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A50370232_452A506203A9_452F75EE0167_BASE_INIT*"
		    value      	"//#UC START# *452A50370232_452A506203A9_452F75EE0167_BASE_INIT*¤: TestLibrary::GivenTestIndependent::DBRoot (root_dir, need_sequential, need_transaction)¤, CloneIndex (root_dir, need_sequential, need_transaction)¤//#UC END# *452A50370232_452A506203A9_452F75EE0167_BASE_INIT*")
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"cpp:*452A50370232_452A506203A9_452F75EE0167_BODY*"
		    value      	(value Text 
|//#UC START# *452A50370232_452A506203A9_452F75EE0167_BODY*¤	//#UC END# *452A50370232_452A506203A9_452F75EE0167_BODY*
		    )))
	    quid       	"452A50370232"
	    documentation 	"метод insert по семантике использования полностью аналогичен методу write интерфейса IDBIteratedWrite, за исключением того, что вместо перезаписи данных по смещению offset просиходит вставка новых данных с полным сохранением старых данных."
	    stereotype 	"Interface"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"452E58010167"
		    supplier   	"Logical View::storage::TestLibrary::DB::IDBOperations"
		    quidu      	"44BB65B90399"))
	    operations 	(list Operations
		(object Operation "make"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452A506203A9"
		    stereotype 	"factory"
		    parameters 	(list Parameters
			(object Parameter "in root_dir"
			    quid       	"452A5066009C"
			    type       	"IString"
			    quidu      	"431841610361")
			(object Parameter "need_sequential"
			    quid       	"452A506600FA"
			    type       	"boolean"
			    quidu      	"3DBFFE100240")
			(object Parameter "need_transaction"
			    quid       	"452A50660157"
			    type       	"boolean"
			    quidu      	"3DBFFE100240"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0)
		(object Operation "insert"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"abstract")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*452A507E0399_452D18D20096*"
			    value      	(value Text 
|//#UC START# *452A507E0399_452D18D20096*¤	throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION);¤	//#UC END# *452A507E0399_452D18D20096*
			    ))
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"cpp:*452A507E0399_452F75EE0167*"
			    value      	(value Text 
|//#UC START# *452A507E0399_452F75EE0167*¤	long offset_tmp= long(part_info.offset_db);¤	if(CloneIndex::pLock){¤		GUARD ((*CloneIndex::pLock));¤		Stream *pReaded = CloneIndex::index()->OpenN (&id_info.id, 0);¤		if(pReaded){¤			if(offset_tmp >= pReaded->Length())¤				throw TestLibrary::DB::DBError ();¤			if(pReaded->Seek(part_info.offset_db) != offset_tmp)¤				throw TestLibrary::DB::DBError ();¤			long ended= pReaded->Length() - offset_tmp;¤			void *buff_ended= ::malloc(ended);¤			pReaded->Read (buff_ended, ended);¤			if(pReaded->Seek(part_info.offset_db) != offset_tmp)¤				throw TestLibrary::DB::DBError ();¤			pReaded->Write (buf_info.buf, buf_info.buf_size);¤			pReaded->Write (buff_ended, ended);¤			::free(buff_ended);¤			CloneIndex::index()->Close (pReaded);¤		}else¤			throw TestLibrary::DB::DBError ();¤	}else{¤		Stream *pReaded = CloneIndex::index()->OpenN (&id_info.id, 0);¤		if(pReaded){¤			if(offset_tmp >= pReaded->Length())¤				throw TestLibrary::DB::DBError ();¤			if(pReaded->Seek(part_info.offset_db) != offset_tmp)¤				throw TestLibrary::DB::DBError ();¤			long ended= pReaded->Length() - offset_tmp;¤			void *buff_ended= ::malloc(ended);¤			pReaded->Read (buff_ended, ended);¤			if(pReaded->Seek(part_info.offset_db) != offset_tmp)¤				throw TestLibrary::DB::DBError ();¤			pReaded->Write (buf_info.buf, buf_info.buf_size);¤			pReaded->Write (buff_ended, ended);¤			::free(buff_ended);¤			CloneIndex::index()->Close (pReaded);¤		}else¤			throw TestLibrary::DB::DBError ();¤	}¤	//#UC END# *452A507E0399_452F75EE0167*
			    )))
		    quid       	"452A507E0399"
		    stereotype 	"chg"
		    parameters 	(list Parameters
			(object Parameter "in id_info"
			    quid       	"452A5088034B"
			    type       	"IdInfo"
			    quidu      	"44BB6D8000AB")
			(object Parameter "in part_info"
			    quid       	"452A508803D8"
			    type       	"PartInfo"
			    quidu      	"452A4EFA01C5")
			(object Parameter "in buf_info"
			    quid       	"452A508900AB"
			    type       	"BufInfo"
			    quidu      	"44BB663300DA"))
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    language   	"MDA Generator")
	(object Association "$UNNAMED$0"
	    quid       	"452623D20128"
	    roles      	(list role_list
		(object Role "buf_info"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452623D203C8"
		    label      	"buf_info"
		    supplier   	"Logical View::storage::TestLibrary::DB::BufInfo"
		    quidu      	"44BB663300DA"
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$1"
		    quid       	"452623D203D9"
		    supplier   	"Logical View::storage::TestLibrary::DB::IdBufInfo"
		    quidu      	"452623B200CB"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$2"
	    quid       	"452623DB00AB"
	    roles      	(list role_list
		(object Role "id_info"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"452623DB0242"
		    label      	"id_info"
		    supplier   	"Logical View::storage::TestLibrary::DB::IdInfo"
		    quidu      	"44BB6D8000AB"
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$3"
		    quid       	"452623DB0244"
		    supplier   	"Logical View::storage::TestLibrary::DB::IdBufInfo"
		    quidu      	"452623B200CB"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$4"
	    quid       	"4526246A01A5"
	    roles      	(list role_list
		(object Role "$UNNAMED$5"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"AbstarctOperation"
			    value      	"regular")
			(object Attribute
			    tool       	"MDA Generator"
			    name       	"IsNative"
			    value      	"false"))
		    quid       	"4526246B034B"
		    supplier   	"Logical View::storage::TestLibrary::DB::IdBufInfo"
		    quidu      	"452623B200CB"
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$6"
		    quid       	"4526246B034D"
		    supplier   	"Logical View::storage::TestLibrary::DB::IdBufInfoSeq"
		    quidu      	"4526242B0280"
		    is_aggregate 	TRUE))))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "Main"
	    attributes 	(list Attribute_Set
		(object Attribute
		    tool       	"MDA Generator"
		    name       	"ColorizeFor"
		    value      	"449692770167"))
	    quid       	"44BB6CB40242"
	    title      	"Main"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	0
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::DBError" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1929, 1731)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(1771, 1702)
			fill_color 	13434879
			nlines     	1
			max_width  	316
			justify    	0
			label      	"DBError")
		    stereotype 	(object ItemLabel
			Parent_View 	@1
			location   	(1771, 1652)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	313
			justify    	0
			label      	"<<Exception>>")
		    icon_style 	"Label"
		    fill_color 	9869055
		    quidu      	"44BB6CBA03C8"
		    width      	334
		    height     	182
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBOperations" @2
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1419, 171)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(1016, 62)
			fill_color 	13434879
			nlines     	1
			max_width  	806
			justify    	0
			label      	"IDBOperations")
		    stereotype 	(object ItemLabel
			Parent_View 	@2
			location   	(1016, 12)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	806
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"44BB65B90399"
		    width      	824
		    height     	342
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBRead" @3
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2730, 765)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@3
			location   	(1854, 681)
			fill_color 	13434879
			nlines     	1
			max_width  	1752
			justify    	0
			label      	"IDBRead")
		    stereotype 	(object ItemLabel
			Parent_View 	@3
			location   	(1854, 631)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1752
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"44BB671C0148"
		    compartment 	(object Compartment
			Parent_View 	@3
			location   	(1854, 742)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	3
			max_width  	1730
			justify    	1)
		    width      	1770
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBCreate" @4
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2727, 1125)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(1850, 1041)
			fill_color 	13434879
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"IDBCreate")
		    stereotype 	(object ItemLabel
			Parent_View 	@4
			location   	(1850, 991)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"44BB65D80148"
		    compartment 	(object Compartment
			Parent_View 	@4
			location   	(1850, 1102)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	3
			max_width  	1730
			justify    	1)
		    width      	1772
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBContextAdd" @5
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(915, 1134)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@5
			location   	(38, 1050)
			fill_color 	13434879
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"IDBContextAdd")
		    stereotype 	(object ItemLabel
			Parent_View 	@5
			location   	(38, 1000)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"44C0C680000F"
		    compartment 	(object Compartment
			Parent_View 	@5
			location   	(38, 1111)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	3
			max_width  	1730
			justify    	1)
		    width      	1772
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::ContextKeyInfo" @6
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1596, 1737)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@6
			location   	(1436, 1703)
			fill_color 	13434879
			nlines     	1
			max_width  	320
			justify    	0
			label      	"ContextKeyInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@6
			location   	(1436, 1653)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	320
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13427169
		    quidu      	"44C0C6DF0196"
		    width      	338
		    height     	192
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::ContextDataInfo" @7
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1167, 1743)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@7
			location   	(933, 1709)
			fill_color 	13434879
			nlines     	1
			max_width  	468
			justify    	0
			label      	"ContextDataInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@7
			location   	(933, 1659)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	468
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13427169
		    quidu      	"44C0C711034B"
		    width      	486
		    height     	192
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBContextSearch" @8
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(918, 756)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@8
			location   	(42, 672)
			fill_color 	13434879
			nlines     	1
			max_width  	1752
			justify    	0
			label      	"IDBContextSearch")
		    stereotype 	(object ItemLabel
			Parent_View 	@8
			location   	(42, 622)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1752
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"44C0C89F01F4"
		    compartment 	(object Compartment
			Parent_View 	@8
			location   	(42, 733)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	3
			max_width  	1730
			justify    	1)
		    width      	1770
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @9
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"44C0C8F403B9"
		    client     	@8
		    supplier   	@2
		    vertices   	(list Points
			(1075, 610)
			(1075, 342))
		    line_style 	3
		    origin_attachment 	(1075, 610)
		    terminal_attachment 	(1075, 342))
		(object InheritView "" @10
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"44BB68230177"
		    client     	@3
		    supplier   	@2
		    vertices   	(list Points
			(2707, 619)
			(2707, 149)
			(1831, 149))
		    line_style 	3
		    origin_attachment 	(2707, 619)
		    terminal_attachment 	(1831, 149))
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBUpdateRW" @11
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2733, 1458)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@11
			location   	(1856, 1374)
			fill_color 	13434879
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"IDBUpdateRW")
		    stereotype 	(object ItemLabel
			Parent_View 	@11
			location   	(1856, 1324)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"4524BFF4033C"
		    compartment 	(object Compartment
			Parent_View 	@11
			location   	(1856, 1435)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	3
			max_width  	1730
			justify    	1)
		    width      	1772
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::BufInfo" @12
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(327, 1794)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@12
			location   	(32, 1710)
			fill_color 	13434879
			nlines     	1
			max_width  	590
			justify    	0
			label      	"BufInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@12
			location   	(32, 1660)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	590
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13427169
		    quidu      	"44BB663300DA"
		    width      	608
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IdInfo" @13
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(777, 1743)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@13
			location   	(659, 1709)
			fill_color 	13434879
			nlines     	1
			max_width  	236
			justify    	0
			label      	"IdInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@13
			location   	(659, 1659)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	234
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13427169
		    quidu      	"44BB6D8000AB"
		    width      	254
		    height     	192
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IdBufInfo" @14
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(909, 2145)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@14
			location   	(653, 2111)
			fill_color 	13434879
			nlines     	1
			max_width  	512
			justify    	0
			label      	"IdBufInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@14
			location   	(653, 2061)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	512
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13427169
		    quidu      	"452623B200CB"
		    width      	530
		    height     	192
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$0" @15
		    location   	(659, 1994)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"452623D20128"
		    roleview_list 	(list RoleViews
			(object RoleView "buf_info" @16
			    Parent_View 	@15
			    location   	(-349, 110)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @17
				Parent_View 	@16
				location   	(539, 1989)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	160
				justify    	0
				label      	"+buf_info"
				pctDist    	1.036818
				height     	58
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"452623D203C8"
			    client     	@15
			    supplier   	@12
			    vertices   	(list Points
				(659, 1994)
				(570, 1940))
			    line_style 	0)
			(object RoleView "$UNNAMED$1" @18
			    Parent_View 	@15
			    location   	(-349, 110)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"452623D203D9"
			    client     	@15
			    supplier   	@14
			    vertices   	(list Points
				(659, 1994)
				(749, 2048))
			    line_style 	0)))
		(object AssociationViewNew "$UNNAMED$2" @19
		    location   	(842, 1943)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"452623DB00AB"
		    roleview_list 	(list RoleViews
			(object RoleView "id_info" @20
			    Parent_View 	@19
			    location   	(-166, 59)
			    font       	(object Font
				size       	10
				face       	"Arial"
				charSet    	204
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @21
				Parent_View 	@20
				location   	(926, 1930)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    charSet    	204
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	148
				justify    	0
				label      	"+id_info"
				pctDist    	-0.134339
				height     	84
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"452623DB0242"
			    client     	@19
			    supplier   	@13
			    vertices   	(list Points
				(842, 1943)
				(808, 1839))
			    line_style 	0)
			(object RoleView "$UNNAMED$3" @22
			    Parent_View 	@19
			    location   	(-166, 59)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"452623DB0244"
			    client     	@19
			    supplier   	@14
			    vertices   	(list Points
				(842, 1943)
				(877, 2048))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IdBufInfoSeq" @23
		    ShowCompartmentStereotypes 	TRUE
		    SuppressAttribute 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(213, 2229)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@23
			location   	(80, 2208)
			fill_color 	13434879
			nlines     	1
			max_width  	266
			justify    	0
			label      	"IdBufInfoSeq")
		    stereotype 	(object ItemLabel
			Parent_View 	@23
			location   	(80, 2158)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	266
			justify    	0
			label      	"<<Vector>>")
		    icon_style 	"Label"
		    fill_color 	16107765
		    quidu      	"4526242B0280"
		    width      	284
		    height     	167
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$4" @24
		    location   	(499, 2193)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4526246A01A5"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$5" @25
			    Parent_View 	@24
			    location   	(-1010, 234)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4526246B034B"
			    client     	@24
			    supplier   	@14
			    vertices   	(list Points
				(499, 2193)
				(643, 2176))
			    line_style 	0)
			(object RoleView "$UNNAMED$6" @26
			    Parent_View 	@24
			    location   	(-1010, 234)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4526246B034D"
			    client     	@24
			    supplier   	@23
			    vertices   	(list Points
				(499, 2193)
				(355, 2210))
			    line_style 	0)))
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::OperationKind" @27
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1356, 2124)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@27
			location   	(1202, 2065)
			fill_color 	13434879
			nlines     	1
			max_width  	308
			justify    	0
			label      	"OperationKind")
		    stereotype 	(object ItemLabel
			Parent_View 	@27
			location   	(1202, 2015)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	308
			justify    	0
			label      	"<<Enum>>")
		    icon_style 	"Label"
		    fill_color 	15792890
		    quidu      	"452645FA0203"
		    width      	326
		    height     	242
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @28
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4500312E031C"
		    client     	@5
		    supplier   	@2
		    vertices   	(list Points
			(612, 988)
			(612, 341)
			(1007, 341))
		    line_style 	3
		    origin_attachment 	(612, 988)
		    terminal_attachment 	(1007, 341))
		(object InheritView "" @29
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"450030FF03C8"
		    client     	@4
		    supplier   	@2
		    vertices   	(list Points
			(2063, 979)
			(2063, 340)
			(1831, 340))
		    line_style 	3
		    origin_attachment 	(2063, 979)
		    terminal_attachment 	(1831, 340))
		(object InheritView "" @30
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"4524C00402FD"
		    client     	@11
		    supplier   	@2
		    vertices   	(list Points
			(2207, 1312)
			(2207, 275)
			(1831, 275))
		    line_style 	3
		    origin_attachment 	(2207, 1312)
		    terminal_attachment 	(1831, 275))
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBPartialRead" @31
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2733, 1992)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@31
			location   	(1856, 1908)
			fill_color 	13434879
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"IDBPartialRead")
		    stereotype 	(object ItemLabel
			Parent_View 	@31
			location   	(1856, 1858)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"452A4E2D000F"
		    compartment 	(object Compartment
			Parent_View 	@31
			location   	(1856, 1969)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	3
			max_width  	1730
			justify    	1)
		    width      	1772
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::PartInfo" @32
		    ShowCompartmentStereotypes 	TRUE
		    SuppressOperation 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(849, 2625)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@32
			location   	(593, 2541)
			fill_color 	13434879
			nlines     	1
			max_width  	512
			justify    	0
			label      	"PartInfo")
		    stereotype 	(object ItemLabel
			Parent_View 	@32
			location   	(593, 2491)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	512
			justify    	0
			label      	"<<Struct>>")
		    icon_style 	"Label"
		    fill_color 	13427169
		    quidu      	"452A4EFA01C5"
		    width      	530
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBPartialWrite" @33
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2733, 2310)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@33
			location   	(1856, 2226)
			fill_color 	13434879
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"IDBPartialWrite")
		    stereotype 	(object ItemLabel
			Parent_View 	@33
			location   	(1856, 2176)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"452A4F9902CE"
		    compartment 	(object Compartment
			Parent_View 	@33
			location   	(1856, 2287)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	3
			max_width  	1730
			justify    	1)
		    width      	1772
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::storage::TestLibrary::DB::IDBPartialInsert" @34
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2730, 2631)
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@34
			location   	(1853, 2547)
			fill_color 	13434879
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"IDBPartialInsert")
		    stereotype 	(object ItemLabel
			Parent_View 	@34
			location   	(1853, 2497)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1754
			justify    	0
			label      	"<<Interface>>")
		    icon       	"Interface"
		    icon_style 	"Label"
		    fill_color 	16766935
		    quidu      	"452A50370232"
		    compartment 	(object Compartment
			Parent_View 	@34
			location   	(1853, 2608)
			font       	(object Font
			    size       	10
			    face       	"Arial"
			    charSet    	204
			    bold       	FALSE
			    italics    	FALSE
			    underline  	FALSE
			    strike     	FALSE
			    color      	0
			    default_color 	TRUE)
			icon_style 	"Icon"
			fill_color 	16777215
			anchor     	2
			nlines     	3
			max_width  	1730
			justify    	1)
		    width      	1772
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @35
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"452E57DD0203"
		    client     	@31
		    supplier   	@2
		    vertices   	(list Points
			(2394, 1846)
			(2394, 340)
			(1831, 340))
		    line_style 	3
		    origin_attachment 	(2394, 1846)
		    terminal_attachment 	(1831, 340))
		(object InheritView "" @36
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"452E57F001A5"
		    client     	@33
		    supplier   	@2
		    vertices   	(list Points
			(2557, 2164)
			(2557, 340)
			(1831, 340))
		    line_style 	3
		    origin_attachment 	(2557, 2164)
		    terminal_attachment 	(1831, 340))
		(object InheritView "" @37
		    font       	(object Font
			size       	10
			face       	"Arial"
			charSet    	204
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3947680
		    quidu      	"452E58010167"
		    client     	@34
		    supplier   	@2
		    vertices   	(list Points
			(2763, 2485)
			(2763, 340)
			(1831, 340))
		    line_style 	3
		    origin_attachment 	(2763, 2485)
		    terminal_attachment 	(1831, 340))))))
