<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Final|Win32">
      <Configuration>Final</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Purify_Debug|Win32">
      <Configuration>Purify_Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Purify_Release|Win32">
      <Configuration>Purify_Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Final|x64">
      <Configuration>Final</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Purify_Debug|x64">
      <Configuration>Purify_Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Purify_Release|x64">
      <Configuration>Purify_Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectName>leveldb</ProjectName>
    <ProjectGuid>{7A946CEB-FECA-1BAD-3A20-E0434C17A721}</ProjectGuid>
    <RootNamespace>leveldb</RootNamespace>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Final|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Final|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Final|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Final|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>12.0.21005.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">W:\build\lib\Debug_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">W:\build\temp\Debug_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">leveldbsd</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Final|Win32'">W:\build\lib\Final_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Final|Win32'">W:\build\temp\Final_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Final|Win32'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Final|Win32'">leveldbs</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Final|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Final|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Final|Win32'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'">W:\build\lib\Purify_Debug_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'">W:\build\temp\Purify_Debug_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'">leveldbsd</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'">W:\build\lib\Purify_Release_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'">W:\build\temp\Purify_Release_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'">leveldbs</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">W:\build\lib\Release_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">W:\build\temp\Release_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">leveldbs</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">W:\build\lib\Debug_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">W:\build\temp\Debug_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">leveldbsd</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Final|x64'">W:\build\lib\Final_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Final|x64'">W:\build\temp\Final_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Final|x64'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Final|x64'">leveldbs</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Final|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Final|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Final|x64'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'">W:\build\lib\Purify_Debug_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'">W:\build\temp\Purify_Debug_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'">leveldbsd</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'">W:\build\lib\Purify_Release_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'">W:\build\temp\Purify_Release_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'">leveldbs</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">W:\build\lib\Release_Static\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">W:\build\temp\Release_Static\leveldb\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">leveldbs</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>Win32</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;_DEBUG;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_M_IX86;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MinimalRebuild>false</MinimalRebuild>
      <SmallerTypeCheck>true</SmallerTypeCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <ProgramDataBaseFileName>W:\build\lib\Debug_Static\leveldbsd.pdb</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>_DEBUG;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Debug_Static\leveldbsd.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Debug_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX86</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Final|Win32'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>Win32</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Full</Optimization>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;NDEBUG;GDS_NLOG_DEBUG;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_M_IX86;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <WarningLevel>Level3</WarningLevel>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;GDS_NLOG_DEBUG;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Final_Static\leveldbs.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Final_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX86</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|Win32'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>Win32</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;_DEBUG;_ITERATOR_DEBUG_LEVEL=0;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_M_IX86;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MinimalRebuild>false</MinimalRebuild>
      <SmallerTypeCheck>false</SmallerTypeCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ProgramDataBaseFileName>W:\build\lib\Purify_Debug_Static\leveldbsd.pdb</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>_DEBUG;_ITERATOR_DEBUG_LEVEL=0;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Purify_Debug_Static\leveldbsd.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Purify_Debug_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX86</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Release|Win32'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>Win32</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Full</Optimization>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;NDEBUG;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_M_IX86;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <SmallerTypeCheck>false</SmallerTypeCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ProgramDataBaseFileName>W:\build\lib\Purify_Release_Static\leveldbs.pdb</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Purify_Release_Static\leveldbs.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Purify_Release_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX86</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>Win32</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Full</Optimization>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;NDEBUG;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_M_IX86;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <SmallerTypeCheck>false</SmallerTypeCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <WarningLevel>Level3</WarningLevel>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Release_Static\leveldbs.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Release_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX86</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>x64</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;_DEBUG;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_AMD64_;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MinimalRebuild>false</MinimalRebuild>
      <SmallerTypeCheck>true</SmallerTypeCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <ProgramDataBaseFileName>W:\build\lib\Debug_Static\leveldbsd.pdb</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>_DEBUG;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Debug_Static\leveldbsd.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Debug_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX64</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Final|x64'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>x64</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Full</Optimization>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;NDEBUG;GDS_NLOG_DEBUG;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_AMD64_;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <WarningLevel>Level3</WarningLevel>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;GDS_NLOG_DEBUG;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Final_Static\leveldbs.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Final_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX64</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Debug|x64'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>x64</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <FavorSizeOrSpeed>Neither</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;_DEBUG;_ITERATOR_DEBUG_LEVEL=0;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_AMD64_;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MinimalRebuild>false</MinimalRebuild>
      <SmallerTypeCheck>false</SmallerTypeCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ProgramDataBaseFileName>W:\build\lib\Purify_Debug_Static\leveldbsd.pdb</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>_DEBUG;_ITERATOR_DEBUG_LEVEL=0;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Purify_Debug_Static\leveldbsd.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Purify_Debug_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX64</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Purify_Release|x64'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>x64</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Full</Optimization>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;NDEBUG;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_AMD64_;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <SmallerTypeCheck>false</SmallerTypeCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ProgramDataBaseFileName>W:\build\lib\Purify_Release_Static\leveldbs.pdb</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Purify_Release_Static\leveldbs.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Purify_Release_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX64</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>x64</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Full</Optimization>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;OS_WIN;NDEBUG;NO_WARN_MBCS_MFC_DEPRECATION;ACE_AS_STATIC_LIBS;NOMINMAX;TAO_AS_STATIC_LIBS;WIN32;XML_LIBRARY;_CRT_SECURE_NO_DEPRECATE;_GCD_STATIC;_STATIC_CPPLIB;_AMD64_;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <SmallerTypeCheck>false</SmallerTypeCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Async</ExceptionHandling>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <WarningLevel>Level3</WarningLevel>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;_WIN64;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.\..\leveldb\db;.\..\leveldb;.\..\leveldb\include;.\..\leveldb\include\leveldb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>W:\build\lib\Release_Static\leveldbs.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>W:\build\lib\Release_Static;.;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SuppressStartupBanner>true</SuppressStartupBanner>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>MachineX64</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\leveldb\db\builder.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\db_impl.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\db_iter.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\dbformat.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\dumpfile.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\filename.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\leveldb_main.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\log_reader.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\log_writer.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\memtable.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\repair.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\table_cache.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\version_edit.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\version_set.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\db\write_batch.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\helpers\memenv\memenv.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\port\port_win.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\port\sha1_portable.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\block.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\block_builder.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\filter_block.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\format.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\iterator.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\merger.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\table.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\table_builder.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\table\two_level_iterator.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\arena.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\arena_test.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\bloom_test.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\cache.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\coding.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\comparator.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\crc32c.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\env.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\env_boost.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\filter_policy.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\hash.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\histogram.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\logging.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\options.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\status.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\testharness.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\testutil.cc">
    </ClCompile>
    <ClCompile Include="..\leveldb\util\win_logger.cc">
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\leveldb\db\builder.h" />
    <ClInclude Include="..\leveldb\db\db_impl.h" />
    <ClInclude Include="..\leveldb\db\db_iter.h" />
    <ClInclude Include="..\leveldb\db\dbformat.h" />
    <ClInclude Include="..\leveldb\db\filename.h" />
    <ClInclude Include="..\leveldb\db\log_format.h" />
    <ClInclude Include="..\leveldb\db\log_reader.h" />
    <ClInclude Include="..\leveldb\db\log_writer.h" />
    <ClInclude Include="..\leveldb\db\memtable.h" />
    <ClInclude Include="..\leveldb\db\skiplist.h" />
    <ClInclude Include="..\leveldb\db\snapshot.h" />
    <ClInclude Include="..\leveldb\db\table_cache.h" />
    <ClInclude Include="..\leveldb\db\version_edit.h" />
    <ClInclude Include="..\leveldb\db\version_set.h" />
    <ClInclude Include="..\leveldb\db\write_batch_internal.h" />
    <ClInclude Include="..\leveldb\helpers\memenv\memenv.h" />
    <ClInclude Include="..\leveldb\include\leveldb\c.h" />
    <ClInclude Include="..\leveldb\include\leveldb\cache.h" />
    <ClInclude Include="..\leveldb\include\leveldb\comparator.h" />
    <ClInclude Include="..\leveldb\include\leveldb\db.h" />
    <ClInclude Include="..\leveldb\include\leveldb\dumpfile.h" />
    <ClInclude Include="..\leveldb\include\leveldb\env.h" />
    <ClInclude Include="..\leveldb\include\leveldb\filter_policy.h" />
    <ClInclude Include="..\leveldb\include\leveldb\iterator.h" />
    <ClInclude Include="..\leveldb\include\leveldb\options.h" />
    <ClInclude Include="..\leveldb\include\leveldb\slice.h" />
    <ClInclude Include="..\leveldb\include\leveldb\status.h" />
    <ClInclude Include="..\leveldb\include\leveldb\table.h" />
    <ClInclude Include="..\leveldb\include\leveldb\table_builder.h" />
    <ClInclude Include="..\leveldb\include\leveldb\write_batch.h" />
    <ClInclude Include="..\leveldb\port\atomic_pointer.h" />
    <ClInclude Include="..\leveldb\port\port.h" />
    <ClInclude Include="..\leveldb\port\port_android.h" />
    <ClInclude Include="..\leveldb\port\port_example.h" />
    <ClInclude Include="..\leveldb\port\port_posix.h" />
    <ClInclude Include="..\leveldb\port\port_win.h" />
    <ClInclude Include="..\leveldb\port\sha1_portable.h" />
    <ClInclude Include="..\leveldb\port\thread_annotations.h" />
    <ClInclude Include="..\leveldb\port\win\stdint.h" />
    <ClInclude Include="..\leveldb\table\block.h" />
    <ClInclude Include="..\leveldb\table\block_builder.h" />
    <ClInclude Include="..\leveldb\table\filter_block.h" />
    <ClInclude Include="..\leveldb\table\format.h" />
    <ClInclude Include="..\leveldb\table\iterator_wrapper.h" />
    <ClInclude Include="..\leveldb\table\merger.h" />
    <ClInclude Include="..\leveldb\table\two_level_iterator.h" />
    <ClInclude Include="..\leveldb\util\arena.h" />
    <ClInclude Include="..\leveldb\util\coding.h" />
    <ClInclude Include="..\leveldb\util\crc32c.h" />
    <ClInclude Include="..\leveldb\util\hash.h" />
    <ClInclude Include="..\leveldb\util\histogram.h" />
    <ClInclude Include="..\leveldb\util\logging.h" />
    <ClInclude Include="..\leveldb\util\mutexlock.h" />
    <ClInclude Include="..\leveldb\util\posix_logger.h" />
    <ClInclude Include="..\leveldb\util\random.h" />
    <ClInclude Include="..\leveldb\util\testharness.h" />
    <ClInclude Include="..\leveldb\util\testutil.h" />
    <ClInclude Include="..\leveldb\util\win_logger.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>
