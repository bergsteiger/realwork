//////////////////////////////////////////////////////////////////////////////////
// SetOf
//////////////////////////////////////////////////////////////////////////////////

: SetOf::Class
? Множество
? Декларация типа определяет производный тип - множество значений исходного. Исходный задаются как базовый класс (связь наследования).

= CoreAtomic::Class

& Delphi::Category;f
/ - включаем функции указанного стереотипа


< *::Class, *::Category
p force usage:b=false ? явно определяет, что элемент будет кем-то использован (нужно для проверки)

/ параметры визуализации
$ C 240,205,240
$ l 120,40,120
$ f 120,40,120
$ S
$ s

/ возможные типы видимости
v +#-

/ картинка для стереотипа
Y t4_bitmask.gif

%t _constraint
/ - ограничения элемента
c {}
r {<{}{}{%GC}>!=1}: {%SS должен наследоваться точно от одного типа}
r {%f_tpi_IsUsed(%S)=false}: {%SS ни кем не используется}

# SetOf_class_intf_pas

//////////////////////////////////////////////////////////////////////////////////////////////////
+ wiki
/ Генератор в wiki-репозитарий.
= CoreAtomic::Class;wiki